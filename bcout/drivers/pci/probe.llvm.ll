; ModuleID = '../bcout/drivers/pci/probe.llvm.bc'
source_filename = "drivers/pci/probe.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall2.init\22, \22a\22\09"
module asm "__initcall_pcibus_class_init2:\09\09\09"
module asm ".long\09pcibus_class_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.lock_class_key = type {}
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.kmem_cache = type opaque
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.69, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type { %struct.module*, %struct.device*, %struct.device_node*, %struct.list_head, i32 (%struct.msi_controller*, %struct.pci_dev*, %struct.msi_desc*)*, i32 (%struct.msi_controller*, %struct.pci_dev*, i32, i32)*, void (%struct.msi_controller*, i32)* }
%struct.msi_desc = type { %struct.list_head, i32, i32, %struct.device*, %struct.msi_msg, %struct.irq_affinity_desc*, void (%struct.msi_desc*, i8*)*, i8*, %union.anon.65 }
%struct.msi_msg = type { i32, i32, i32 }
%struct.irq_affinity_desc = type { %struct.cpumask, i8 }
%union.anon.65 = type { %struct.anon.66 }
%struct.anon.66 = type { i32, %struct.anon.67, %union.anon.68 }
%struct.anon.67 = type { i16, i16, i32 }
%union.anon.68 = type { i8* }
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type { %struct.hotplug_slot_ops*, %struct.list_head, %struct.pci_slot*, %struct.module*, i8* }
%struct.hotplug_slot_ops = type { i32 (%struct.hotplug_slot*)*, i32 (%struct.hotplug_slot*)*, i32 (%struct.hotplug_slot*, i8)*, i32 (%struct.hotplug_slot*, i32)*, i32 (%struct.hotplug_slot*, i8*)*, i32 (%struct.hotplug_slot*, i8*)*, i32 (%struct.hotplug_slot*, i8*)*, i32 (%struct.hotplug_slot*, i8*)*, i32 (%struct.hotplug_slot*, i32)* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.69 = type { %struct.pci_sriov* }
%struct.pci_sriov = type { i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i32, i8, i8, i16, %struct.pci_dev*, %struct.pci_dev*, i32, i8, i16, i16, [6 x i64], i8 }
%struct.pci_bus_region = type { i64, i64 }
%struct.pci_host_bridge = type { %struct.device, %struct.pci_bus*, %struct.pci_ops*, %struct.pci_ops*, i8*, i32, %struct.list_head, %struct.list_head, i8 (%struct.pci_dev*, i8*)*, i32 (%struct.pci_dev*, i8, i8)*, void (%struct.pci_host_bridge*)*, i8*, %struct.msi_controller*, i16, i64 (%struct.pci_dev*, %struct.resource*, i64, i64, i64)*, [8 x i8], [0 x i64] }
%struct.pci_sysdata = type { i32, i32, %struct.acpi_device*, i8*, i8*, %struct.pci_dev* }
%struct.acpi_device = type { i32, i8*, %struct.fwnode_handle, %struct.acpi_device*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.acpi_device_status, %struct.acpi_device_flags, %struct.acpi_device_pnp, %struct.acpi_device_power, %struct.acpi_device_wakeup, %struct.acpi_device_perf, %struct.acpi_device_dir, %struct.acpi_device_data, %struct.acpi_scan_handler*, %struct.acpi_hotplug_context*, %struct.acpi_driver*, %struct.acpi_gpio_mapping*, i8*, %struct.device, i32, i32, %struct.list_head, %struct.mutex, void (%struct.acpi_device*)* }
%struct.acpi_device_status = type { i32 }
%struct.acpi_device_flags = type { i32 }
%struct.acpi_device_pnp = type { [8 x i8], %struct.acpi_pnp_type, i64, i8*, %struct.list_head, [40 x i8], [20 x i8], %union.acpi_object* }
%struct.acpi_pnp_type = type { i32 }
%union.acpi_object = type { %struct.anon.75 }
%struct.anon.75 = type { i32, i32, i64, i32 }
%struct.acpi_device_power = type { i32, %struct.acpi_device_power_flags, [5 x %struct.acpi_device_power_state] }
%struct.acpi_device_power_flags = type { i32 }
%struct.acpi_device_power_state = type { %struct.anon.77, i32, i32, %struct.list_head }
%struct.anon.77 = type { i8 }
%struct.acpi_device_wakeup = type { i8*, i64, i64, %struct.list_head, %struct.acpi_device_wakeup_flags, %struct.acpi_device_wakeup_context, %struct.wakeup_source*, i32, i32 }
%struct.acpi_device_wakeup_flags = type { i8 }
%struct.acpi_device_wakeup_context = type { void (%struct.acpi_device_wakeup_context*)*, %struct.device* }
%struct.acpi_device_perf = type { i32, %struct.acpi_device_perf_flags, i32, %struct.acpi_device_perf_state* }
%struct.acpi_device_perf_flags = type { i8 }
%struct.acpi_device_perf_state = type { %struct.anon.78, i8, i8, i32 }
%struct.anon.78 = type { i8 }
%struct.acpi_device_dir = type { %struct.proc_dir_entry* }
%struct.acpi_device_data = type { %union.acpi_object*, %struct.list_head, %union.acpi_object*, %struct.list_head }
%struct.acpi_scan_handler = type { %struct.acpi_device_id*, %struct.list_head, i1 (i8*, %struct.acpi_device_id**)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, void (%struct.acpi_device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.acpi_hotplug_profile }
%struct.acpi_hotplug_profile = type { %struct.kobject, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*)*, i8 }
%struct.acpi_hotplug_context = type { %struct.acpi_device*, i32 (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*)* }
%struct.acpi_driver = type { [80 x i8], [80 x i8], %struct.acpi_device_id*, i32, %struct.acpi_device_ops, %struct.device_driver, %struct.module* }
%struct.acpi_device_ops = type { i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*, i32)* }
%struct.acpi_gpio_mapping = type opaque
%struct.resource_entry = type { %struct.list_head, %struct.resource*, i64, %struct.resource }
%struct.pci_domain_busn_res = type { %struct.list_head, %struct.resource, i32 }

@pci_root_buses = dso_local global %struct.list_head { %struct.list_head* @pci_root_buses, %struct.list_head* @pci_root_buses }, align 8, !dbg !0
@pci_bus_type = external dso_local global %struct.bus_type, align 8
@__UNIQUE_ID___addressable_pcibus_class_init244 = internal global i8* bitcast (i32 ()* @pcibus_class_init to i8*), section ".discard.addressable", align 8, !dbg !4419
@.str = private unnamed_addr constant [52 x i8] c"[Firmware Bug]: reg 0x%x: invalid BAR (can't size)\0A\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"reg 0x%x: initial BAR value %#010llx invalid\0A\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"reg 0x%x: %pR\0A\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"PCI bridge to %pR%s\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c" (subtractive decode)\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"  bridge window %pR (subtractive decode)\0A\00", align 1
@pcie_link_speed = dso_local constant [16 x i8] c"\FF\14\15\16\17\18\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", align 16, !dbg !4421
@pci_speed_string.speed_strings = internal global [25 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i32 0, i32 0), i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i32 0, i32 0)], align 16, !dbg !4424
@.str.7 = private unnamed_addr constant [11 x i8] c"33 MHz PCI\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"66 MHz PCI\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"66 MHz PCI-X\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"100 MHz PCI-X\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"133 MHz PCI-X\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"66 MHz PCI-X 266\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"100 MHz PCI-X 266\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"133 MHz PCI-X 266\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"Unknown AGP\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"1x AGP\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"2x AGP\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"4x AGP\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"8x AGP\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"66 MHz PCI-X 533\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"100 MHz PCI-X 533\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"133 MHz PCI-X 533\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"2.5 GT/s PCIe\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"5.0 GT/s PCIe\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"8.0 GT/s PCIe\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"16.0 GT/s PCIe\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"32.0 GT/s PCIe\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@pci_bus_sem = external dso_local global %struct.rw_semaphore, align 8
@.str.29 = private unnamed_addr constant [78 x i8] c"claims to be downstream port but is acting as upstream port, correcting type\0A\00", align 1
@.str.30 = private unnamed_addr constant [78 x i8] c"claims to be upstream port but is acting as downstream port, correcting type\0A\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"%04x:%02x:%02x.%d\00", align 1
@pci_early_dump = external dso_local global i8, align 1
@.str.32 = private unnamed_addr constant [35 x i8] c"[%04x:%04x] type %02x class %#08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"device has non-compliant BARs; disabling IO/MEM decoding\0A\00", align 1
@.str.34 = private unnamed_addr constant [33 x i8] c"legacy IDE quirk: reg 0x10: %pR\0A\00", align 1
@.str.35 = private unnamed_addr constant [33 x i8] c"legacy IDE quirk: reg 0x14: %pR\0A\00", align 1
@.str.36 = private unnamed_addr constant [33 x i8] c"legacy IDE quirk: reg 0x18: %pR\0A\00", align 1
@.str.37 = private unnamed_addr constant [33 x i8] c"legacy IDE quirk: reg 0x1c: %pR\0A\00", align 1
@.str.38 = private unnamed_addr constant [43 x i8] c"unknown header type %02x, ignoring device\0A\00", align 1
@.str.39 = private unnamed_addr constant [55 x i8] c"ignoring class %#08x (doesn't match header type %02x)\0A\00", align 1
@.str.40 = private unnamed_addr constant [25 x i8] c"disabling Extended Tags\0A\00", align 1
@.str.41 = private unnamed_addr constant [24 x i8] c"enabling Extended Tags\0A\00", align 1
@pci_dev_type = external dso_local constant %struct.device_type, align 8
@.str.42 = private unnamed_addr constant [20 x i8] c"drivers/pci/probe.c\00", align 1
@pcie_bus_config = external dso_local global i32, align 4
@.str.43 = private unnamed_addr constant [28 x i8] c"Scanning root bridge failed\00", align 1
@.str.44 = private unnamed_addr constant [66 x i8] c"busn_res: can not insert %pR under %s%pR (conflicts with %s %pR)\0A\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"domain \00", align 1
@.str.46 = private unnamed_addr constant [38 x i8] c"busn_res: %pR end %s updated to %02x\0A\00", align 1
@.str.47 = private unnamed_addr constant [11 x i8] c"can not be\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"is\00", align 1
@.str.49 = private unnamed_addr constant [27 x i8] c"busn_res: %pR %s released\0A\00", align 1
@.str.50 = private unnamed_addr constant [61 x i8] c"No busn resource found for root bus, will use [bus %02x-ff]\0A\00", align 1
@ioport_resource = external dso_local global %struct.resource, align 8
@iomem_resource = external dso_local global %struct.resource, align 8
@busn_resource = internal global %struct.resource { i64 0, i64 255, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), i64 4096, i64 0, %struct.resource* null, %struct.resource* null, %struct.resource* null }, align 8, !dbg !4448
@pci_rescan_remove_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @pci_rescan_remove_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @pci_rescan_remove_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4450
@.str.51 = private unnamed_addr constant [46 x i8] c"No bus number available for hot-added bridge\0A\00", align 1
@pcibus_class_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4432
@pcibus_class = internal global %struct.class { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i32 0, i32 0), %struct.module* null, %struct.attribute_group** null, %struct.attribute_group** getelementptr inbounds ([0 x %struct.attribute_group*], [0 x %struct.attribute_group*]* @pcibus_groups, i32 0, i32 0), %struct.kobject* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*)* null, void (%struct.class*)* null, void (%struct.device*)* @release_pcibus_dev, i32 (%struct.device*)* null, %struct.kobj_ns_type_operations* null, i8* (%struct.device*)* null, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)* null, %struct.dev_pm_ops* null, %struct.subsys_private* null }, align 8, !dbg !4437
@.str.52 = private unnamed_addr constant [8 x i8] c"pci_bus\00", align 1
@pcibus_groups = external dso_local global [0 x %struct.attribute_group*], align 8
@.str.53 = private unnamed_addr constant [21 x i8] c"  bridge window %pR\0A\00", align 1
@.str.54 = private unnamed_addr constant [61 x i8] c"can't handle bridge window above 4GB (bus address %#010llx)\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.55 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"%04x:%02x\00", align 1
@.str.57 = private unnamed_addr constant [38 x i8] c"extended config space not accessible\0A\00", align 1
@.str.58 = private unnamed_addr constant [23 x i8] c"failed to add bus: %d\0A\00", align 1
@pcix_bus_speed = internal constant [16 x i8] c"\FF\02\03\04\FF\05\06\07\FF\09\0A\0B\FF\11\12\13", align 16, !dbg !4444
@agp_speeds = internal global [5 x i8] c"\0C\0D\0E\0F\10", align 1, !dbg !4439
@.str.59 = private unnamed_addr constant [32 x i8] c"Primary bus is hard wired to 0\0A\00", align 1
@.str.60 = private unnamed_addr constant [63 x i8] c"bridge configuration invalid ([bus %02x-%02x]), reconfiguring\0A\00", align 1
@.str.61 = private unnamed_addr constant [47 x i8] c"bridge has subordinate %02x but max busn %02x\0A\00", align 1
@.str.62 = private unnamed_addr constant [22 x i8] c"PCI CardBus %04x:%02x\00", align 1
@.str.63 = private unnamed_addr constant [18 x i8] c"PCI Bus %04x:%02x\00", align 1
@.str.64 = private unnamed_addr constant [76 x i8] c"devices behind bridge are unusable because %pR cannot be assigned for them\0A\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"config space:\0A\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.67 = private unnamed_addr constant [58 x i8] c"\014pci %04x:%02x:%02x.%d: not ready after %dms; giving up\0A\00", align 1
@.str.68 = private unnamed_addr constant [56 x i8] c"\016pci %04x:%02x:%02x.%d: not ready after %dms; waiting\0A\00", align 1
@.str.69 = private unnamed_addr constant [43 x i8] c"\016pci %04x:%02x:%02x.%d: ready after %dms\0A\00", align 1
@.str.70 = private unnamed_addr constant [90 x i8] c"can't set Max Payload Size to %d; if necessary, use \22pci=pcie_bus_safe\22 and report a bug\0A\00", align 1
@.str.71 = private unnamed_addr constant [104 x i8] c"Max Payload Size %d, but upstream %s set to %d; if necessary, use \22pci=pcie_bus_safe\22 and report a bug\0A\00", align 1
@.str.72 = private unnamed_addr constant [63 x i8] c"Upstream bridge's Max Payload Size set to %d (was %d, max %d)\0A\00", align 1
@.str.73 = private unnamed_addr constant [45 x i8] c"Max Payload Size set to %d (was %d, max %d)\0A\00", align 1
@.str.74 = private unnamed_addr constant [67 x i8] c"Relaxed Ordering disabled because the Root Port didn't support it\0A\00", align 1
@.str.75 = private unnamed_addr constant [60 x i8] c"Max Payload Size set to %4d/%4d (was %4d), Max Read Rq %4d\0A\00", align 1
@.str.76 = private unnamed_addr constant [34 x i8] c"Failed attempting to set the MPS\0A\00", align 1
@.str.77 = private unnamed_addr constant [35 x i8] c"Failed attempting to set the MRRS\0A\00", align 1
@.str.78 = private unnamed_addr constant [118 x i8] c"MRRS was unable to be configured with a safe value.  If problems are experienced, try running with pci=pcie_bus_safe\0A\00", align 1
@pci_hotplug_bus_size = external dso_local global i64, align 8
@.str.79 = private unnamed_addr constant [13 x i8] c"pci%04x:%02x\00", align 1
@.str.80 = private unnamed_addr constant [27 x i8] c"PCI host bridge to bus %s\0A\00", align 1
@.str.81 = private unnamed_addr constant [29 x i8] c"\016PCI host bridge to bus %s\0A\00", align 1
@.str.82 = private unnamed_addr constant [33 x i8] c" (bus address [%#06llx-%#06llx])\00", align 1
@.str.83 = private unnamed_addr constant [35 x i8] c" (bus address [%#010llx-%#010llx])\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"root bus resource %pR%s\0A\00", align 1
@pci_flags = external dso_local global i32, align 4
@pci_domain_busn_res_list = internal global %struct.list_head { %struct.list_head* @pci_domain_busn_res_list, %struct.list_head* @pci_domain_busn_res_list }, align 8, !dbg !4446
@.str.85 = private unnamed_addr constant [9 x i8] c"PCI busn\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_pcibus_class_init244 to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @no_pci_devices() #0 !dbg !4457 {
entry:
  %dev = alloca %struct.device*, align 8
  %no_devices = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !4458, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.declare(metadata i32* %no_devices, metadata !4460, metadata !DIExpression()), !dbg !4461
  %call = call %struct.device* @bus_find_next_device(%struct.bus_type* @pci_bus_type, %struct.device* null) #9, !dbg !4462
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !4463
  %0 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4464
  %cmp = icmp eq %struct.device* %0, null, !dbg !4465
  %conv = zext i1 %cmp to i32, !dbg !4465
  store i32 %conv, i32* %no_devices, align 4, !dbg !4466
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4467
  call void @put_device(%struct.device* %1) #9, !dbg !4468
  %2 = load i32, i32* %no_devices, align 4, !dbg !4469
  ret i32 %2, !dbg !4470
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @bus_find_next_device(%struct.bus_type* %bus, %struct.device* %cur) #0 !dbg !4471 {
entry:
  %bus.addr = alloca %struct.bus_type*, align 8
  %cur.addr = alloca %struct.device*, align 8
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !4474, metadata !DIExpression()), !dbg !4475
  store %struct.device* %cur, %struct.device** %cur.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %cur.addr, metadata !4476, metadata !DIExpression()), !dbg !4477
  %0 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !4478
  %1 = load %struct.device*, %struct.device** %cur.addr, align 8, !dbg !4479
  %call = call %struct.device* @bus_find_device(%struct.bus_type* %0, %struct.device* %1, i8* null, i32 (%struct.device*, i8*)* @device_match_any) #9, !dbg !4480
  ret %struct.device* %call, !dbg !4481
}

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @pcibus_class_init() #3 section ".init.text" !dbg !4434 {
entry:
  %tmp = alloca i32, align 4
  %call = call i32 @__class_register(%struct.class* @pcibus_class, %struct.lock_class_key* @pcibus_class_init.__key) #9, !dbg !4482
  store i32 %call, i32* %tmp, align 4, !dbg !4482
  %0 = load i32, i32* %tmp, align 4, !dbg !4482
  ret i32 %0, !dbg !4484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__pci_read_base(%struct.pci_dev* %dev, i32 %type, %struct.resource* %res, i32 %pos) #0 !dbg !4485 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %type.addr = alloca i32, align 4
  %res.addr = alloca %struct.resource*, align 8
  %pos.addr = alloca i32, align 4
  %l = alloca i32, align 4
  %sz = alloca i32, align 4
  %mask = alloca i32, align 4
  %l64 = alloca i64, align 8
  %sz64 = alloca i64, align 8
  %mask64 = alloca i64, align 8
  %orig_cmd = alloca i16, align 2
  %region = alloca %struct.pci_bus_region, align 8
  %inverted_region = alloca %struct.pci_bus_region, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !4488, metadata !DIExpression()), !dbg !4489
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4490, metadata !DIExpression()), !dbg !4491
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !4492, metadata !DIExpression()), !dbg !4493
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !4494, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4496, metadata !DIExpression()), !dbg !4497
  store i32 0, i32* %l, align 4, !dbg !4497
  call void @llvm.dbg.declare(metadata i32* %sz, metadata !4498, metadata !DIExpression()), !dbg !4499
  store i32 0, i32* %sz, align 4, !dbg !4499
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !4500, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.declare(metadata i64* %l64, metadata !4502, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.declare(metadata i64* %sz64, metadata !4504, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.declare(metadata i64* %mask64, metadata !4506, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.declare(metadata i16* %orig_cmd, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %region, metadata !4510, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %inverted_region, metadata !4516, metadata !DIExpression()), !dbg !4517
  %0 = load i32, i32* %type.addr, align 4, !dbg !4518
  %tobool = icmp ne i32 %0, 0, !dbg !4518
  %1 = zext i1 %tobool to i64, !dbg !4518
  %cond = select i1 %tobool, i32 -2048, i32 -1, !dbg !4518
  store i32 %cond, i32* %mask, align 4, !dbg !4519
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4520
  %mmio_always_on = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 29, !dbg !4522
  %3 = bitcast i24* %mmio_always_on to i32*, !dbg !4522
  %bf.load = load i32, i32* %3, align 2, !dbg !4522
  %bf.lshr = lshr i32 %bf.load, 12, !dbg !4522
  %bf.clear = and i32 %bf.lshr, 1, !dbg !4522
  %tobool1 = icmp ne i32 %bf.clear, 0, !dbg !4520
  br i1 %tobool1, label %if.end8, label %if.then, !dbg !4523

if.then:                                          ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4524
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %4, i32 4, i16* %orig_cmd) #9, !dbg !4526
  %5 = load i16, i16* %orig_cmd, align 2, !dbg !4527
  %conv = zext i16 %5 to i32, !dbg !4527
  %and = and i32 %conv, 3, !dbg !4529
  %tobool2 = icmp ne i32 %and, 0, !dbg !4529
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4530

if.then3:                                         ; preds = %if.then
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4531
  %7 = load i16, i16* %orig_cmd, align 2, !dbg !4533
  %conv4 = zext i16 %7 to i32, !dbg !4533
  %and5 = and i32 %conv4, -4, !dbg !4534
  %conv6 = trunc i32 %and5 to i16, !dbg !4533
  %call7 = call i32 @pci_write_config_word(%struct.pci_dev* %6, i32 4, i16 zeroext %conv6) #9, !dbg !4535
  br label %if.end, !dbg !4536

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end8, !dbg !4537

if.end8:                                          ; preds = %if.end, %entry
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4538
  %call9 = call i8* @pci_name(%struct.pci_dev* %8) #9, !dbg !4539
  %9 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4540
  %name = getelementptr inbounds %struct.resource, %struct.resource* %9, i32 0, i32 2, !dbg !4541
  store i8* %call9, i8** %name, align 8, !dbg !4542
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4543
  %11 = load i32, i32* %pos.addr, align 4, !dbg !4544
  %call10 = call i32 @pci_read_config_dword(%struct.pci_dev* %10, i32 %11, i32* %l) #9, !dbg !4545
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4546
  %13 = load i32, i32* %pos.addr, align 4, !dbg !4547
  %14 = load i32, i32* %l, align 4, !dbg !4548
  %15 = load i32, i32* %mask, align 4, !dbg !4549
  %or = or i32 %14, %15, !dbg !4550
  %call11 = call i32 @pci_write_config_dword(%struct.pci_dev* %12, i32 %13, i32 %or) #9, !dbg !4551
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4552
  %17 = load i32, i32* %pos.addr, align 4, !dbg !4553
  %call12 = call i32 @pci_read_config_dword(%struct.pci_dev* %16, i32 %17, i32* %sz) #9, !dbg !4554
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4555
  %19 = load i32, i32* %pos.addr, align 4, !dbg !4556
  %20 = load i32, i32* %l, align 4, !dbg !4557
  %call13 = call i32 @pci_write_config_dword(%struct.pci_dev* %18, i32 %19, i32 %20) #9, !dbg !4558
  %21 = load i32, i32* %sz, align 4, !dbg !4559
  %cmp = icmp eq i32 %21, -1, !dbg !4561
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !4562

if.then15:                                        ; preds = %if.end8
  store i32 0, i32* %sz, align 4, !dbg !4563
  br label %if.end16, !dbg !4564

if.end16:                                         ; preds = %if.then15, %if.end8
  %22 = load i32, i32* %l, align 4, !dbg !4565
  %cmp17 = icmp eq i32 %22, -1, !dbg !4567
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4568

if.then19:                                        ; preds = %if.end16
  store i32 0, i32* %l, align 4, !dbg !4569
  br label %if.end20, !dbg !4570

if.end20:                                         ; preds = %if.then19, %if.end16
  %23 = load i32, i32* %type.addr, align 4, !dbg !4571
  %cmp21 = icmp eq i32 %23, 0, !dbg !4573
  br i1 %cmp21, label %if.then23, label %if.else40, !dbg !4574

if.then23:                                        ; preds = %if.end20
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4575
  %25 = load i32, i32* %l, align 4, !dbg !4577
  %call24 = call i64 @decode_bar(%struct.pci_dev* %24, i32 %25) #9, !dbg !4578
  %26 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4579
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %26, i32 0, i32 3, !dbg !4580
  store i64 %call24, i64* %flags, align 8, !dbg !4581
  %27 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4582
  %flags25 = getelementptr inbounds %struct.resource, %struct.resource* %27, i32 0, i32 3, !dbg !4583
  %28 = load i64, i64* %flags25, align 8, !dbg !4584
  %or26 = or i64 %28, 262144, !dbg !4584
  store i64 %or26, i64* %flags25, align 8, !dbg !4584
  %29 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4585
  %flags27 = getelementptr inbounds %struct.resource, %struct.resource* %29, i32 0, i32 3, !dbg !4587
  %30 = load i64, i64* %flags27, align 8, !dbg !4587
  %and28 = and i64 %30, 256, !dbg !4588
  %tobool29 = icmp ne i64 %and28, 0, !dbg !4588
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !4589

if.then30:                                        ; preds = %if.then23
  %31 = load i32, i32* %l, align 4, !dbg !4590
  %conv31 = zext i32 %31 to i64, !dbg !4590
  %and32 = and i64 %conv31, -4, !dbg !4592
  store i64 %and32, i64* %l64, align 8, !dbg !4593
  %32 = load i32, i32* %sz, align 4, !dbg !4594
  %conv33 = zext i32 %32 to i64, !dbg !4594
  %and34 = and i64 %conv33, -4, !dbg !4595
  store i64 %and34, i64* %sz64, align 8, !dbg !4596
  store i64 65532, i64* %mask64, align 8, !dbg !4597
  br label %if.end39, !dbg !4598

if.else:                                          ; preds = %if.then23
  %33 = load i32, i32* %l, align 4, !dbg !4599
  %conv35 = zext i32 %33 to i64, !dbg !4599
  %and36 = and i64 %conv35, -16, !dbg !4601
  store i64 %and36, i64* %l64, align 8, !dbg !4602
  %34 = load i32, i32* %sz, align 4, !dbg !4603
  %conv37 = zext i32 %34 to i64, !dbg !4603
  %and38 = and i64 %conv37, -16, !dbg !4604
  store i64 %and38, i64* %sz64, align 8, !dbg !4605
  store i64 4294967280, i64* %mask64, align 8, !dbg !4606
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then30
  br label %if.end51, !dbg !4607

if.else40:                                        ; preds = %if.end20
  %35 = load i32, i32* %l, align 4, !dbg !4608
  %and41 = and i32 %35, 1, !dbg !4611
  %tobool42 = icmp ne i32 %and41, 0, !dbg !4611
  br i1 %tobool42, label %if.then43, label %if.end46, !dbg !4612

if.then43:                                        ; preds = %if.else40
  %36 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4613
  %flags44 = getelementptr inbounds %struct.resource, %struct.resource* %36, i32 0, i32 3, !dbg !4614
  %37 = load i64, i64* %flags44, align 8, !dbg !4615
  %or45 = or i64 %37, 1, !dbg !4615
  store i64 %or45, i64* %flags44, align 8, !dbg !4615
  br label %if.end46, !dbg !4613

if.end46:                                         ; preds = %if.then43, %if.else40
  %38 = load i32, i32* %l, align 4, !dbg !4616
  %and47 = and i32 %38, -2048, !dbg !4617
  %conv48 = zext i32 %and47 to i64, !dbg !4616
  store i64 %conv48, i64* %l64, align 8, !dbg !4618
  %39 = load i32, i32* %sz, align 4, !dbg !4619
  %and49 = and i32 %39, -2048, !dbg !4620
  %conv50 = zext i32 %and49 to i64, !dbg !4619
  store i64 %conv50, i64* %sz64, align 8, !dbg !4621
  store i64 4294965248, i64* %mask64, align 8, !dbg !4622
  br label %if.end51

if.end51:                                         ; preds = %if.end46, %if.end39
  %40 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4623
  %flags52 = getelementptr inbounds %struct.resource, %struct.resource* %40, i32 0, i32 3, !dbg !4625
  %41 = load i64, i64* %flags52, align 8, !dbg !4625
  %and53 = and i64 %41, 1048576, !dbg !4626
  %tobool54 = icmp ne i64 %and53, 0, !dbg !4626
  br i1 %tobool54, label %if.then55, label %if.end69, !dbg !4627

if.then55:                                        ; preds = %if.end51
  %42 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4628
  %43 = load i32, i32* %pos.addr, align 4, !dbg !4630
  %add = add i32 %43, 4, !dbg !4631
  %call56 = call i32 @pci_read_config_dword(%struct.pci_dev* %42, i32 %add, i32* %l) #9, !dbg !4632
  %44 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4633
  %45 = load i32, i32* %pos.addr, align 4, !dbg !4634
  %add57 = add i32 %45, 4, !dbg !4635
  %call58 = call i32 @pci_write_config_dword(%struct.pci_dev* %44, i32 %add57, i32 -1) #9, !dbg !4636
  %46 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4637
  %47 = load i32, i32* %pos.addr, align 4, !dbg !4638
  %add59 = add i32 %47, 4, !dbg !4639
  %call60 = call i32 @pci_read_config_dword(%struct.pci_dev* %46, i32 %add59, i32* %sz) #9, !dbg !4640
  %48 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4641
  %49 = load i32, i32* %pos.addr, align 4, !dbg !4642
  %add61 = add i32 %49, 4, !dbg !4643
  %50 = load i32, i32* %l, align 4, !dbg !4644
  %call62 = call i32 @pci_write_config_dword(%struct.pci_dev* %48, i32 %add61, i32 %50) #9, !dbg !4645
  %51 = load i32, i32* %l, align 4, !dbg !4646
  %conv63 = zext i32 %51 to i64, !dbg !4647
  %shl = shl i64 %conv63, 32, !dbg !4648
  %52 = load i64, i64* %l64, align 8, !dbg !4649
  %or64 = or i64 %52, %shl, !dbg !4649
  store i64 %or64, i64* %l64, align 8, !dbg !4649
  %53 = load i32, i32* %sz, align 4, !dbg !4650
  %conv65 = zext i32 %53 to i64, !dbg !4651
  %shl66 = shl i64 %conv65, 32, !dbg !4652
  %54 = load i64, i64* %sz64, align 8, !dbg !4653
  %or67 = or i64 %54, %shl66, !dbg !4653
  store i64 %or67, i64* %sz64, align 8, !dbg !4653
  %55 = load i64, i64* %mask64, align 8, !dbg !4654
  %or68 = or i64 %55, -4294967296, !dbg !4654
  store i64 %or68, i64* %mask64, align 8, !dbg !4654
  br label %if.end69, !dbg !4655

if.end69:                                         ; preds = %if.then55, %if.end51
  %56 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4656
  %mmio_always_on70 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %56, i32 0, i32 29, !dbg !4658
  %57 = bitcast i24* %mmio_always_on70 to i32*, !dbg !4658
  %bf.load71 = load i32, i32* %57, align 2, !dbg !4658
  %bf.lshr72 = lshr i32 %bf.load71, 12, !dbg !4658
  %bf.clear73 = and i32 %bf.lshr72, 1, !dbg !4658
  %tobool74 = icmp ne i32 %bf.clear73, 0, !dbg !4656
  br i1 %tobool74, label %if.end80, label %land.lhs.true, !dbg !4659

land.lhs.true:                                    ; preds = %if.end69
  %58 = load i16, i16* %orig_cmd, align 2, !dbg !4660
  %conv75 = zext i16 %58 to i32, !dbg !4660
  %and76 = and i32 %conv75, 3, !dbg !4661
  %tobool77 = icmp ne i32 %and76, 0, !dbg !4661
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !4662

if.then78:                                        ; preds = %land.lhs.true
  %59 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4663
  %60 = load i16, i16* %orig_cmd, align 2, !dbg !4664
  %call79 = call i32 @pci_write_config_word(%struct.pci_dev* %59, i32 4, i16 zeroext %60) #9, !dbg !4665
  br label %if.end80, !dbg !4665

if.end80:                                         ; preds = %if.then78, %land.lhs.true, %if.end69
  %61 = load i64, i64* %sz64, align 8, !dbg !4666
  %tobool81 = icmp ne i64 %61, 0, !dbg !4666
  br i1 %tobool81, label %if.end83, label %if.then82, !dbg !4668

if.then82:                                        ; preds = %if.end80
  br label %fail, !dbg !4669

if.end83:                                         ; preds = %if.end80
  %62 = load i64, i64* %l64, align 8, !dbg !4670
  %63 = load i64, i64* %sz64, align 8, !dbg !4671
  %64 = load i64, i64* %mask64, align 8, !dbg !4672
  %call84 = call i64 @pci_size(i64 %62, i64 %63, i64 %64) #9, !dbg !4673
  store i64 %call84, i64* %sz64, align 8, !dbg !4674
  %65 = load i64, i64* %sz64, align 8, !dbg !4675
  %tobool85 = icmp ne i64 %65, 0, !dbg !4675
  br i1 %tobool85, label %if.end88, label %if.then86, !dbg !4677

if.then86:                                        ; preds = %if.end83
  %66 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4678
  %dev87 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %66, i32 0, i32 41, !dbg !4678
  %67 = load i32, i32* %pos.addr, align 4, !dbg !4678
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev87, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 %67) #10, !dbg !4678
  br label %fail, !dbg !4680

if.end88:                                         ; preds = %if.end83
  %68 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4681
  %flags89 = getelementptr inbounds %struct.resource, %struct.resource* %68, i32 0, i32 3, !dbg !4683
  %69 = load i64, i64* %flags89, align 8, !dbg !4683
  %and90 = and i64 %69, 1048576, !dbg !4684
  %tobool91 = icmp ne i64 %and90, 0, !dbg !4684
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !4685

if.then92:                                        ; preds = %if.end88
  br label %if.end93, !dbg !4686

if.end93:                                         ; preds = %if.then92, %if.end88
  %70 = load i64, i64* %l64, align 8, !dbg !4688
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4689
  store i64 %70, i64* %start, align 8, !dbg !4690
  %71 = load i64, i64* %l64, align 8, !dbg !4691
  %72 = load i64, i64* %sz64, align 8, !dbg !4692
  %add94 = add i64 %71, %72, !dbg !4693
  %sub = sub i64 %add94, 1, !dbg !4694
  %end = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !4695
  store i64 %sub, i64* %end, align 8, !dbg !4696
  %73 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4697
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %73, i32 0, i32 1, !dbg !4698
  %74 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !4698
  %75 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4699
  call void @pcibios_bus_to_resource(%struct.pci_bus* %74, %struct.resource* %75, %struct.pci_bus_region* %region) #9, !dbg !4700
  %76 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4701
  %bus95 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %76, i32 0, i32 1, !dbg !4702
  %77 = load %struct.pci_bus*, %struct.pci_bus** %bus95, align 8, !dbg !4702
  %78 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4703
  call void @pcibios_resource_to_bus(%struct.pci_bus* %77, %struct.pci_bus_region* %inverted_region, %struct.resource* %78) #9, !dbg !4704
  %start96 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %inverted_region, i32 0, i32 0, !dbg !4705
  %79 = load i64, i64* %start96, align 8, !dbg !4705
  %start97 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4707
  %80 = load i64, i64* %start97, align 8, !dbg !4707
  %cmp98 = icmp ne i64 %79, %80, !dbg !4708
  br i1 %cmp98, label %if.then100, label %if.end110, !dbg !4709

if.then100:                                       ; preds = %if.end93
  %81 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4710
  %flags101 = getelementptr inbounds %struct.resource, %struct.resource* %81, i32 0, i32 3, !dbg !4712
  %82 = load i64, i64* %flags101, align 8, !dbg !4713
  %or102 = or i64 %82, 536870912, !dbg !4713
  store i64 %or102, i64* %flags101, align 8, !dbg !4713
  %83 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4714
  %start103 = getelementptr inbounds %struct.resource, %struct.resource* %83, i32 0, i32 0, !dbg !4715
  store i64 0, i64* %start103, align 8, !dbg !4716
  %end104 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !4717
  %84 = load i64, i64* %end104, align 8, !dbg !4717
  %start105 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4718
  %85 = load i64, i64* %start105, align 8, !dbg !4718
  %sub106 = sub i64 %84, %85, !dbg !4719
  %86 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4720
  %end107 = getelementptr inbounds %struct.resource, %struct.resource* %86, i32 0, i32 1, !dbg !4721
  store i64 %sub106, i64* %end107, align 8, !dbg !4722
  %87 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4723
  %dev108 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %87, i32 0, i32 41, !dbg !4723
  %88 = load i32, i32* %pos.addr, align 4, !dbg !4723
  %start109 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4723
  %89 = load i64, i64* %start109, align 8, !dbg !4723
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev108, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 %88, i64 %89) #10, !dbg !4723
  br label %if.end110, !dbg !4724

if.end110:                                        ; preds = %if.then100, %if.end93
  br label %out, !dbg !4725

fail:                                             ; preds = %if.then86, %if.then82
  call void @llvm.dbg.label(metadata !4726), !dbg !4727
  %90 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4728
  %flags111 = getelementptr inbounds %struct.resource, %struct.resource* %90, i32 0, i32 3, !dbg !4729
  store i64 0, i64* %flags111, align 8, !dbg !4730
  br label %out, !dbg !4728

out:                                              ; preds = %fail, %if.end110
  call void @llvm.dbg.label(metadata !4731), !dbg !4732
  %91 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4733
  %flags112 = getelementptr inbounds %struct.resource, %struct.resource* %91, i32 0, i32 3, !dbg !4735
  %92 = load i64, i64* %flags112, align 8, !dbg !4735
  %tobool113 = icmp ne i64 %92, 0, !dbg !4733
  br i1 %tobool113, label %if.then114, label %if.end116, !dbg !4736

if.then114:                                       ; preds = %out
  %93 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4737
  %dev115 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %93, i32 0, i32 41, !dbg !4737
  %94 = load i32, i32* %pos.addr, align 4, !dbg !4737
  %95 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4737
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev115, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 %94, %struct.resource* %95) #10, !dbg !4737
  br label %if.end116, !dbg !4737

if.end116:                                        ; preds = %if.then114, %out
  %96 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4738
  %flags117 = getelementptr inbounds %struct.resource, %struct.resource* %96, i32 0, i32 3, !dbg !4739
  %97 = load i64, i64* %flags117, align 8, !dbg !4739
  %and118 = and i64 %97, 1048576, !dbg !4740
  %tobool119 = icmp ne i64 %and118, 0, !dbg !4741
  %98 = zext i1 %tobool119 to i64, !dbg !4741
  %cond120 = select i1 %tobool119, i32 1, i32 0, !dbg !4741
  ret i32 %cond120, !dbg !4742
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_word(%struct.pci_dev*, i32, i16 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #0 !dbg !4743 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !4746, metadata !DIExpression()), !dbg !4747
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4748
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !4749
  %call = call i8* @dev_name(%struct.device* %dev) #9, !dbg !4750
  ret i8* %call, !dbg !4751
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_dword(%struct.pci_dev*, i32, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_dword(%struct.pci_dev*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @decode_bar(%struct.pci_dev* %dev, i32 %bar) #0 !dbg !4752 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %mem_type = alloca i32, align 4
  %flags = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !4755, metadata !DIExpression()), !dbg !4756
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !4757, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.declare(metadata i32* %mem_type, metadata !4759, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4761, metadata !DIExpression()), !dbg !4762
  %0 = load i32, i32* %bar.addr, align 4, !dbg !4763
  %and = and i32 %0, 1, !dbg !4765
  %cmp = icmp eq i32 %and, 1, !dbg !4766
  br i1 %cmp, label %if.then, label %if.end, !dbg !4767

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %bar.addr, align 4, !dbg !4768
  %conv = zext i32 %1 to i64, !dbg !4768
  %and1 = and i64 %conv, 3, !dbg !4770
  store i64 %and1, i64* %flags, align 8, !dbg !4771
  %2 = load i64, i64* %flags, align 8, !dbg !4772
  %or = or i64 %2, 256, !dbg !4772
  store i64 %or, i64* %flags, align 8, !dbg !4772
  %3 = load i64, i64* %flags, align 8, !dbg !4773
  store i64 %3, i64* %retval, align 8, !dbg !4774
  br label %return, !dbg !4774

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bar.addr, align 4, !dbg !4775
  %conv2 = zext i32 %4 to i64, !dbg !4775
  %and3 = and i64 %conv2, 15, !dbg !4776
  store i64 %and3, i64* %flags, align 8, !dbg !4777
  %5 = load i64, i64* %flags, align 8, !dbg !4778
  %or4 = or i64 %5, 512, !dbg !4778
  store i64 %or4, i64* %flags, align 8, !dbg !4778
  %6 = load i64, i64* %flags, align 8, !dbg !4779
  %and5 = and i64 %6, 8, !dbg !4781
  %tobool = icmp ne i64 %and5, 0, !dbg !4781
  br i1 %tobool, label %if.then6, label %if.end8, !dbg !4782

if.then6:                                         ; preds = %if.end
  %7 = load i64, i64* %flags, align 8, !dbg !4783
  %or7 = or i64 %7, 8192, !dbg !4783
  store i64 %or7, i64* %flags, align 8, !dbg !4783
  br label %if.end8, !dbg !4784

if.end8:                                          ; preds = %if.then6, %if.end
  %8 = load i32, i32* %bar.addr, align 4, !dbg !4785
  %and9 = and i32 %8, 6, !dbg !4786
  store i32 %and9, i32* %mem_type, align 4, !dbg !4787
  %9 = load i32, i32* %mem_type, align 4, !dbg !4788
  switch i32 %9, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb10
    i32 4, label %sw.bb11
  ], !dbg !4789

sw.bb:                                            ; preds = %if.end8
  br label %sw.epilog, !dbg !4790

sw.bb10:                                          ; preds = %if.end8
  br label %sw.epilog, !dbg !4792

sw.bb11:                                          ; preds = %if.end8
  %10 = load i64, i64* %flags, align 8, !dbg !4793
  %or12 = or i64 %10, 1048576, !dbg !4793
  store i64 %or12, i64* %flags, align 8, !dbg !4793
  br label %sw.epilog, !dbg !4794

sw.default:                                       ; preds = %if.end8
  br label %sw.epilog, !dbg !4795

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %sw.bb10, %sw.bb
  %11 = load i64, i64* %flags, align 8, !dbg !4796
  store i64 %11, i64* %retval, align 8, !dbg !4797
  br label %return, !dbg !4797

return:                                           ; preds = %sw.epilog, %if.then
  %12 = load i64, i64* %retval, align 8, !dbg !4798
  ret i64 %12, !dbg !4798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pci_size(i64 %base, i64 %maxbase, i64 %mask) #0 !dbg !4799 {
entry:
  %retval = alloca i64, align 8
  %base.addr = alloca i64, align 8
  %maxbase.addr = alloca i64, align 8
  %mask.addr = alloca i64, align 8
  %size = alloca i64, align 8
  store i64 %base, i64* %base.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %base.addr, metadata !4802, metadata !DIExpression()), !dbg !4803
  store i64 %maxbase, i64* %maxbase.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxbase.addr, metadata !4804, metadata !DIExpression()), !dbg !4805
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !4806, metadata !DIExpression()), !dbg !4807
  call void @llvm.dbg.declare(metadata i64* %size, metadata !4808, metadata !DIExpression()), !dbg !4809
  %0 = load i64, i64* %mask.addr, align 8, !dbg !4810
  %1 = load i64, i64* %maxbase.addr, align 8, !dbg !4811
  %and = and i64 %0, %1, !dbg !4812
  store i64 %and, i64* %size, align 8, !dbg !4809
  %2 = load i64, i64* %size, align 8, !dbg !4813
  %tobool = icmp ne i64 %2, 0, !dbg !4813
  br i1 %tobool, label %if.end, label %if.then, !dbg !4815

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !4816
  br label %return, !dbg !4816

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %size, align 8, !dbg !4817
  %4 = load i64, i64* %size, align 8, !dbg !4818
  %sub = sub i64 %4, 1, !dbg !4819
  %neg = xor i64 %sub, -1, !dbg !4820
  %and1 = and i64 %3, %neg, !dbg !4821
  store i64 %and1, i64* %size, align 8, !dbg !4822
  %5 = load i64, i64* %base.addr, align 8, !dbg !4823
  %6 = load i64, i64* %maxbase.addr, align 8, !dbg !4825
  %cmp = icmp eq i64 %5, %6, !dbg !4826
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !4827

land.lhs.true:                                    ; preds = %if.end
  %7 = load i64, i64* %base.addr, align 8, !dbg !4828
  %8 = load i64, i64* %size, align 8, !dbg !4829
  %sub2 = sub i64 %8, 1, !dbg !4830
  %or = or i64 %7, %sub2, !dbg !4831
  %9 = load i64, i64* %mask.addr, align 8, !dbg !4832
  %and3 = and i64 %or, %9, !dbg !4833
  %10 = load i64, i64* %mask.addr, align 8, !dbg !4834
  %cmp4 = icmp ne i64 %and3, %10, !dbg !4835
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4836

if.then5:                                         ; preds = %land.lhs.true
  store i64 0, i64* %retval, align 8, !dbg !4837
  br label %return, !dbg !4837

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %11 = load i64, i64* %size, align 8, !dbg !4838
  store i64 %11, i64* %retval, align 8, !dbg !4839
  br label %return, !dbg !4839

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %12 = load i64, i64* %retval, align 8, !dbg !4840
  ret i64 %12, !dbg !4840
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @pcibios_bus_to_resource(%struct.pci_bus*, %struct.resource*, %struct.pci_bus_region*) #2

; Function Attrs: noredzone
declare dso_local void @pcibios_resource_to_bus(%struct.pci_bus*, %struct.pci_bus_region*, %struct.resource*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_read_bridge_bases(%struct.pci_bus* %child) #0 !dbg !4841 {
entry:
  %child.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %res = alloca %struct.resource*, align 8
  %i = alloca i32, align 4
  store %struct.pci_bus* %child, %struct.pci_bus** %child.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %child.addr, metadata !4842, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !4844, metadata !DIExpression()), !dbg !4845
  %0 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4846
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !4847
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !4847
  store %struct.pci_dev* %1, %struct.pci_dev** %dev, align 8, !dbg !4845
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !4848, metadata !DIExpression()), !dbg !4849
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4850, metadata !DIExpression()), !dbg !4851
  %2 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4852
  %call = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %2) #9, !dbg !4854
  br i1 %call, label %if.then, label %if.end, !dbg !4855

if.then:                                          ; preds = %entry
  br label %if.end24, !dbg !4856

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4857
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !4857
  %4 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4857
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 8, !dbg !4857
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4857
  %transparent = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 46, !dbg !4857
  %6 = bitcast [5 x i8]* %transparent to i40*, !dbg !4857
  %bf.load = load i40, i40* %6, align 1, !dbg !4857
  %bf.clear = and i40 %bf.load, 1, !dbg !4857
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !4857
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !4857
  %7 = zext i1 %tobool to i64, !dbg !4857
  %cond = select i1 %tobool, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), !dbg !4857
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), %struct.resource* %busn_res, i8* %cond) #10, !dbg !4857
  %8 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4858
  call void @pci_bus_remove_resources(%struct.pci_bus* %8) #9, !dbg !4859
  store i32 0, i32* %i, align 4, !dbg !4860
  br label %for.cond, !dbg !4862

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !4863
  %cmp = icmp slt i32 %9, 4, !dbg !4865
  br i1 %cmp, label %for.body, label %for.end, !dbg !4866

for.body:                                         ; preds = %for.cond
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4867
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 44, !dbg !4868
  %11 = load i32, i32* %i, align 4, !dbg !4869
  %add = add i32 13, %11, !dbg !4870
  %idxprom = sext i32 %add to i64, !dbg !4867
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !4867
  %12 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4871
  %resource2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %12, i32 0, i32 6, !dbg !4872
  %13 = load i32, i32* %i, align 4, !dbg !4873
  %idxprom3 = sext i32 %13 to i64, !dbg !4871
  %arrayidx4 = getelementptr [4 x %struct.resource*], [4 x %struct.resource*]* %resource2, i64 0, i64 %idxprom3, !dbg !4871
  store %struct.resource* %arrayidx, %struct.resource** %arrayidx4, align 8, !dbg !4874
  br label %for.inc, !dbg !4871

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !4875
  %inc = add i32 %14, 1, !dbg !4875
  store i32 %inc, i32* %i, align 4, !dbg !4875
  br label %for.cond, !dbg !4876, !llvm.loop !4877

for.end:                                          ; preds = %for.cond
  %15 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4879
  call void @pci_read_bridge_io(%struct.pci_bus* %15) #9, !dbg !4880
  %16 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4881
  call void @pci_read_bridge_mmio(%struct.pci_bus* %16) #9, !dbg !4882
  %17 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4883
  call void @pci_read_bridge_mmio_pref(%struct.pci_bus* %17) #9, !dbg !4884
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4885
  %transparent5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 46, !dbg !4887
  %19 = bitcast [5 x i8]* %transparent5 to i40*, !dbg !4887
  %bf.load6 = load i40, i40* %19, align 1, !dbg !4887
  %bf.clear7 = and i40 %bf.load6, 1, !dbg !4887
  %bf.cast8 = trunc i40 %bf.clear7 to i32, !dbg !4887
  %tobool9 = icmp ne i32 %bf.cast8, 0, !dbg !4885
  br i1 %tobool9, label %if.then10, label %if.end24, !dbg !4888

if.then10:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !4889
  br label %for.cond11, !dbg !4889

for.cond11:                                       ; preds = %for.inc21, %if.then10
  %20 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4892
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %20, i32 0, i32 1, !dbg !4892
  %21 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !4892
  %22 = load i32, i32* %i, align 4, !dbg !4892
  %call12 = call %struct.resource* @pci_bus_resource_n(%struct.pci_bus* %21, i32 %22) #9, !dbg !4892
  store %struct.resource* %call12, %struct.resource** %res, align 8, !dbg !4892
  %tobool13 = icmp ne %struct.resource* %call12, null, !dbg !4892
  br i1 %tobool13, label %lor.end, label %lor.rhs, !dbg !4892

lor.rhs:                                          ; preds = %for.cond11
  %23 = load i32, i32* %i, align 4, !dbg !4892
  %cmp14 = icmp slt i32 %23, 4, !dbg !4892
  br label %lor.end, !dbg !4892

lor.end:                                          ; preds = %lor.rhs, %for.cond11
  %24 = phi i1 [ true, %for.cond11 ], [ %cmp14, %lor.rhs ]
  br i1 %24, label %for.body15, label %for.end23, !dbg !4889

for.body15:                                       ; preds = %lor.end
  %25 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4894
  %tobool16 = icmp ne %struct.resource* %25, null, !dbg !4894
  br i1 %tobool16, label %land.lhs.true, label %if.end20, !dbg !4897

land.lhs.true:                                    ; preds = %for.body15
  %26 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4898
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %26, i32 0, i32 3, !dbg !4899
  %27 = load i64, i64* %flags, align 8, !dbg !4899
  %tobool17 = icmp ne i64 %27, 0, !dbg !4898
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !4900

if.then18:                                        ; preds = %land.lhs.true
  %28 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4901
  %29 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4903
  call void @pci_bus_add_resource(%struct.pci_bus* %28, %struct.resource* %29, i32 1) #9, !dbg !4904
  %30 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4905
  %dev19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !4905
  %31 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4905
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev19, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), %struct.resource* %31) #10, !dbg !4905
  br label %if.end20, !dbg !4906

if.end20:                                         ; preds = %if.then18, %land.lhs.true, %for.body15
  br label %for.inc21, !dbg !4907

for.inc21:                                        ; preds = %if.end20
  %32 = load i32, i32* %i, align 4, !dbg !4892
  %inc22 = add i32 %32, 1, !dbg !4892
  store i32 %inc22, i32* %i, align 4, !dbg !4892
  br label %for.cond11, !dbg !4892, !llvm.loop !4908

for.end23:                                        ; preds = %lor.end
  br label %if.end24, !dbg !4910

if.end24:                                         ; preds = %if.then, %for.end23, %for.end
  ret void, !dbg !4911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_root_bus(%struct.pci_bus* %pbus) #0 !dbg !4912 {
entry:
  %pbus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %pbus, %struct.pci_bus** %pbus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %pbus.addr, metadata !4915, metadata !DIExpression()), !dbg !4916
  %0 = load %struct.pci_bus*, %struct.pci_bus** %pbus.addr, align 8, !dbg !4917
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 1, !dbg !4918
  %1 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !4918
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !4919
  %lnot = xor i1 %tobool, true, !dbg !4919
  ret i1 %lnot, !dbg !4920
}

; Function Attrs: noredzone
declare dso_local void @pci_bus_remove_resources(%struct.pci_bus*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_read_bridge_io(%struct.pci_bus* %child) #0 !dbg !4921 {
entry:
  %child.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %io_base_lo = alloca i8, align 1
  %io_limit_lo = alloca i8, align 1
  %io_mask = alloca i64, align 8
  %io_granularity = alloca i64, align 8
  %base = alloca i64, align 8
  %limit = alloca i64, align 8
  %region = alloca %struct.pci_bus_region, align 8
  %res = alloca %struct.resource*, align 8
  %io_base_hi = alloca i16, align 2
  %io_limit_hi = alloca i16, align 2
  store %struct.pci_bus* %child, %struct.pci_bus** %child.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %child.addr, metadata !4922, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !4924, metadata !DIExpression()), !dbg !4925
  %0 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4926
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !4927
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !4927
  store %struct.pci_dev* %1, %struct.pci_dev** %dev, align 8, !dbg !4925
  call void @llvm.dbg.declare(metadata i8* %io_base_lo, metadata !4928, metadata !DIExpression()), !dbg !4929
  call void @llvm.dbg.declare(metadata i8* %io_limit_lo, metadata !4930, metadata !DIExpression()), !dbg !4931
  call void @llvm.dbg.declare(metadata i64* %io_mask, metadata !4932, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.declare(metadata i64* %io_granularity, metadata !4934, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.declare(metadata i64* %base, metadata !4936, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.declare(metadata i64* %limit, metadata !4938, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %region, metadata !4940, metadata !DIExpression()), !dbg !4941
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !4942, metadata !DIExpression()), !dbg !4943
  store i64 -16, i64* %io_mask, align 8, !dbg !4944
  store i64 4096, i64* %io_granularity, align 8, !dbg !4945
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4946
  %io_window_1k = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !4948
  %3 = bitcast [5 x i8]* %io_window_1k to i40*, !dbg !4948
  %bf.load = load i40, i40* %3, align 1, !dbg !4948
  %bf.lshr = lshr i40 %bf.load, 30, !dbg !4948
  %bf.clear = and i40 %bf.lshr, 1, !dbg !4948
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !4948
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !4946
  br i1 %tobool, label %if.then, label %if.end, !dbg !4949

if.then:                                          ; preds = %entry
  store i64 -4, i64* %io_mask, align 8, !dbg !4950
  store i64 1024, i64* %io_granularity, align 8, !dbg !4952
  br label %if.end, !dbg !4953

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !4954
  %resource = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 6, !dbg !4955
  %arrayidx = getelementptr [4 x %struct.resource*], [4 x %struct.resource*]* %resource, i64 0, i64 0, !dbg !4954
  %5 = load %struct.resource*, %struct.resource** %arrayidx, align 8, !dbg !4954
  store %struct.resource* %5, %struct.resource** %res, align 8, !dbg !4956
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4957
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %6, i32 28, i8* %io_base_lo) #9, !dbg !4958
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4959
  %call1 = call i32 @pci_read_config_byte(%struct.pci_dev* %7, i32 29, i8* %io_limit_lo) #9, !dbg !4960
  %8 = load i8, i8* %io_base_lo, align 1, !dbg !4961
  %conv = zext i8 %8 to i64, !dbg !4961
  %9 = load i64, i64* %io_mask, align 8, !dbg !4962
  %and = and i64 %conv, %9, !dbg !4963
  %shl = shl i64 %and, 8, !dbg !4964
  store i64 %shl, i64* %base, align 8, !dbg !4965
  %10 = load i8, i8* %io_limit_lo, align 1, !dbg !4966
  %conv2 = zext i8 %10 to i64, !dbg !4966
  %11 = load i64, i64* %io_mask, align 8, !dbg !4967
  %and3 = and i64 %conv2, %11, !dbg !4968
  %shl4 = shl i64 %and3, 8, !dbg !4969
  store i64 %shl4, i64* %limit, align 8, !dbg !4970
  %12 = load i8, i8* %io_base_lo, align 1, !dbg !4971
  %conv5 = zext i8 %12 to i64, !dbg !4971
  %and6 = and i64 %conv5, 15, !dbg !4973
  %cmp = icmp eq i64 %and6, 1, !dbg !4974
  br i1 %cmp, label %if.then8, label %if.end16, !dbg !4975

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %io_base_hi, metadata !4976, metadata !DIExpression()), !dbg !4978
  call void @llvm.dbg.declare(metadata i16* %io_limit_hi, metadata !4979, metadata !DIExpression()), !dbg !4980
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4981
  %call9 = call i32 @pci_read_config_word(%struct.pci_dev* %13, i32 48, i16* %io_base_hi) #9, !dbg !4982
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4983
  %call10 = call i32 @pci_read_config_word(%struct.pci_dev* %14, i32 50, i16* %io_limit_hi) #9, !dbg !4984
  %15 = load i16, i16* %io_base_hi, align 2, !dbg !4985
  %conv11 = zext i16 %15 to i64, !dbg !4986
  %shl12 = shl i64 %conv11, 16, !dbg !4987
  %16 = load i64, i64* %base, align 8, !dbg !4988
  %or = or i64 %16, %shl12, !dbg !4988
  store i64 %or, i64* %base, align 8, !dbg !4988
  %17 = load i16, i16* %io_limit_hi, align 2, !dbg !4989
  %conv13 = zext i16 %17 to i64, !dbg !4990
  %shl14 = shl i64 %conv13, 16, !dbg !4991
  %18 = load i64, i64* %limit, align 8, !dbg !4992
  %or15 = or i64 %18, %shl14, !dbg !4992
  store i64 %or15, i64* %limit, align 8, !dbg !4992
  br label %if.end16, !dbg !4993

if.end16:                                         ; preds = %if.then8, %if.end
  %19 = load i64, i64* %base, align 8, !dbg !4994
  %20 = load i64, i64* %limit, align 8, !dbg !4996
  %cmp17 = icmp ule i64 %19, %20, !dbg !4997
  br i1 %cmp17, label %if.then19, label %if.end24, !dbg !4998

if.then19:                                        ; preds = %if.end16
  %21 = load i8, i8* %io_base_lo, align 1, !dbg !4999
  %conv20 = zext i8 %21 to i64, !dbg !4999
  %and21 = and i64 %conv20, 15, !dbg !5001
  %or22 = or i64 %and21, 256, !dbg !5002
  %22 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5003
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %22, i32 0, i32 3, !dbg !5004
  store i64 %or22, i64* %flags, align 8, !dbg !5005
  %23 = load i64, i64* %base, align 8, !dbg !5006
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !5007
  store i64 %23, i64* %start, align 8, !dbg !5008
  %24 = load i64, i64* %limit, align 8, !dbg !5009
  %25 = load i64, i64* %io_granularity, align 8, !dbg !5010
  %add = add i64 %24, %25, !dbg !5011
  %sub = sub i64 %add, 1, !dbg !5012
  %end = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !5013
  store i64 %sub, i64* %end, align 8, !dbg !5014
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5015
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 1, !dbg !5016
  %27 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !5016
  %28 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5017
  call void @pcibios_bus_to_resource(%struct.pci_bus* %27, %struct.resource* %28, %struct.pci_bus_region* %region) #9, !dbg !5018
  %29 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5019
  %dev23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 41, !dbg !5019
  %30 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5019
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0), %struct.resource* %30) #10, !dbg !5019
  br label %if.end24, !dbg !5020

if.end24:                                         ; preds = %if.then19, %if.end16
  ret void, !dbg !5021
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_read_bridge_mmio(%struct.pci_bus* %child) #0 !dbg !5022 {
entry:
  %child.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %mem_base_lo = alloca i16, align 2
  %mem_limit_lo = alloca i16, align 2
  %base = alloca i64, align 8
  %limit = alloca i64, align 8
  %region = alloca %struct.pci_bus_region, align 8
  %res = alloca %struct.resource*, align 8
  store %struct.pci_bus* %child, %struct.pci_bus** %child.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %child.addr, metadata !5023, metadata !DIExpression()), !dbg !5024
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !5025, metadata !DIExpression()), !dbg !5026
  %0 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !5027
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !5028
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !5028
  store %struct.pci_dev* %1, %struct.pci_dev** %dev, align 8, !dbg !5026
  call void @llvm.dbg.declare(metadata i16* %mem_base_lo, metadata !5029, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.declare(metadata i16* %mem_limit_lo, metadata !5031, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.declare(metadata i64* %base, metadata !5033, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.declare(metadata i64* %limit, metadata !5035, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %region, metadata !5037, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !5039, metadata !DIExpression()), !dbg !5040
  %2 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !5041
  %resource = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 6, !dbg !5042
  %arrayidx = getelementptr [4 x %struct.resource*], [4 x %struct.resource*]* %resource, i64 0, i64 1, !dbg !5041
  %3 = load %struct.resource*, %struct.resource** %arrayidx, align 8, !dbg !5041
  store %struct.resource* %3, %struct.resource** %res, align 8, !dbg !5043
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5044
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %4, i32 32, i16* %mem_base_lo) #9, !dbg !5045
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5046
  %call1 = call i32 @pci_read_config_word(%struct.pci_dev* %5, i32 34, i16* %mem_limit_lo) #9, !dbg !5047
  %6 = load i16, i16* %mem_base_lo, align 2, !dbg !5048
  %conv = zext i16 %6 to i64, !dbg !5049
  %and = and i64 %conv, -16, !dbg !5050
  %shl = shl i64 %and, 16, !dbg !5051
  store i64 %shl, i64* %base, align 8, !dbg !5052
  %7 = load i16, i16* %mem_limit_lo, align 2, !dbg !5053
  %conv2 = zext i16 %7 to i64, !dbg !5054
  %and3 = and i64 %conv2, -16, !dbg !5055
  %shl4 = shl i64 %and3, 16, !dbg !5056
  store i64 %shl4, i64* %limit, align 8, !dbg !5057
  %8 = load i64, i64* %base, align 8, !dbg !5058
  %9 = load i64, i64* %limit, align 8, !dbg !5060
  %cmp = icmp ule i64 %8, %9, !dbg !5061
  br i1 %cmp, label %if.then, label %if.end, !dbg !5062

if.then:                                          ; preds = %entry
  %10 = load i16, i16* %mem_base_lo, align 2, !dbg !5063
  %conv6 = zext i16 %10 to i64, !dbg !5063
  %and7 = and i64 %conv6, 15, !dbg !5065
  %or = or i64 %and7, 512, !dbg !5066
  %11 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5067
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %11, i32 0, i32 3, !dbg !5068
  store i64 %or, i64* %flags, align 8, !dbg !5069
  %12 = load i64, i64* %base, align 8, !dbg !5070
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !5071
  store i64 %12, i64* %start, align 8, !dbg !5072
  %13 = load i64, i64* %limit, align 8, !dbg !5073
  %add = add i64 %13, 1048575, !dbg !5074
  %end = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !5075
  store i64 %add, i64* %end, align 8, !dbg !5076
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5077
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 1, !dbg !5078
  %15 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !5078
  %16 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5079
  call void @pcibios_bus_to_resource(%struct.pci_bus* %15, %struct.resource* %16, %struct.pci_bus_region* %region) #9, !dbg !5080
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5081
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !5081
  %18 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5081
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0), %struct.resource* %18) #10, !dbg !5081
  br label %if.end, !dbg !5082

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_read_bridge_mmio_pref(%struct.pci_bus* %child) #0 !dbg !5084 {
entry:
  %child.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %mem_base_lo = alloca i16, align 2
  %mem_limit_lo = alloca i16, align 2
  %base64 = alloca i64, align 8
  %limit64 = alloca i64, align 8
  %base = alloca i64, align 8
  %limit = alloca i64, align 8
  %region = alloca %struct.pci_bus_region, align 8
  %res = alloca %struct.resource*, align 8
  %mem_base_hi = alloca i32, align 4
  %mem_limit_hi = alloca i32, align 4
  store %struct.pci_bus* %child, %struct.pci_bus** %child.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %child.addr, metadata !5085, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !5087, metadata !DIExpression()), !dbg !5088
  %0 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !5089
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !5090
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !5090
  store %struct.pci_dev* %1, %struct.pci_dev** %dev, align 8, !dbg !5088
  call void @llvm.dbg.declare(metadata i16* %mem_base_lo, metadata !5091, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.declare(metadata i16* %mem_limit_lo, metadata !5093, metadata !DIExpression()), !dbg !5094
  call void @llvm.dbg.declare(metadata i64* %base64, metadata !5095, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.declare(metadata i64* %limit64, metadata !5097, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.declare(metadata i64* %base, metadata !5099, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.declare(metadata i64* %limit, metadata !5101, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %region, metadata !5103, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !5105, metadata !DIExpression()), !dbg !5106
  %2 = load %struct.pci_bus*, %struct.pci_bus** %child.addr, align 8, !dbg !5107
  %resource = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 6, !dbg !5108
  %arrayidx = getelementptr [4 x %struct.resource*], [4 x %struct.resource*]* %resource, i64 0, i64 2, !dbg !5107
  %3 = load %struct.resource*, %struct.resource** %arrayidx, align 8, !dbg !5107
  store %struct.resource* %3, %struct.resource** %res, align 8, !dbg !5109
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5110
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %4, i32 36, i16* %mem_base_lo) #9, !dbg !5111
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5112
  %call1 = call i32 @pci_read_config_word(%struct.pci_dev* %5, i32 38, i16* %mem_limit_lo) #9, !dbg !5113
  %6 = load i16, i16* %mem_base_lo, align 2, !dbg !5114
  %conv = zext i16 %6 to i64, !dbg !5114
  %and = and i64 %conv, -16, !dbg !5115
  %shl = shl i64 %and, 16, !dbg !5116
  store i64 %shl, i64* %base64, align 8, !dbg !5117
  %7 = load i16, i16* %mem_limit_lo, align 2, !dbg !5118
  %conv2 = zext i16 %7 to i64, !dbg !5118
  %and3 = and i64 %conv2, -16, !dbg !5119
  %shl4 = shl i64 %and3, 16, !dbg !5120
  store i64 %shl4, i64* %limit64, align 8, !dbg !5121
  %8 = load i16, i16* %mem_base_lo, align 2, !dbg !5122
  %conv5 = zext i16 %8 to i64, !dbg !5122
  %and6 = and i64 %conv5, 15, !dbg !5124
  %cmp = icmp eq i64 %and6, 1, !dbg !5125
  br i1 %cmp, label %if.then, label %if.end18, !dbg !5126

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %mem_base_hi, metadata !5127, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.declare(metadata i32* %mem_limit_hi, metadata !5130, metadata !DIExpression()), !dbg !5131
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5132
  %call8 = call i32 @pci_read_config_dword(%struct.pci_dev* %9, i32 40, i32* %mem_base_hi) #9, !dbg !5133
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5134
  %call9 = call i32 @pci_read_config_dword(%struct.pci_dev* %10, i32 44, i32* %mem_limit_hi) #9, !dbg !5135
  %11 = load i32, i32* %mem_base_hi, align 4, !dbg !5136
  %12 = load i32, i32* %mem_limit_hi, align 4, !dbg !5138
  %cmp10 = icmp ule i32 %11, %12, !dbg !5139
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !5140

if.then12:                                        ; preds = %if.then
  %13 = load i32, i32* %mem_base_hi, align 4, !dbg !5141
  %conv13 = zext i32 %13 to i64, !dbg !5143
  %shl14 = shl i64 %conv13, 32, !dbg !5144
  %14 = load i64, i64* %base64, align 8, !dbg !5145
  %or = or i64 %14, %shl14, !dbg !5145
  store i64 %or, i64* %base64, align 8, !dbg !5145
  %15 = load i32, i32* %mem_limit_hi, align 4, !dbg !5146
  %conv15 = zext i32 %15 to i64, !dbg !5147
  %shl16 = shl i64 %conv15, 32, !dbg !5148
  %16 = load i64, i64* %limit64, align 8, !dbg !5149
  %or17 = or i64 %16, %shl16, !dbg !5149
  store i64 %or17, i64* %limit64, align 8, !dbg !5149
  br label %if.end, !dbg !5150

if.end:                                           ; preds = %if.then12, %if.then
  br label %if.end18, !dbg !5151

if.end18:                                         ; preds = %if.end, %entry
  %17 = load i64, i64* %base64, align 8, !dbg !5152
  store i64 %17, i64* %base, align 8, !dbg !5153
  %18 = load i64, i64* %limit64, align 8, !dbg !5154
  store i64 %18, i64* %limit, align 8, !dbg !5155
  %19 = load i64, i64* %base, align 8, !dbg !5156
  %20 = load i64, i64* %base64, align 8, !dbg !5158
  %cmp19 = icmp ne i64 %19, %20, !dbg !5159
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !5160

if.then21:                                        ; preds = %if.end18
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5161
  %dev22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 41, !dbg !5161
  %22 = load i64, i64* %base64, align 8, !dbg !5161
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev22, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.54, i64 0, i64 0), i64 %22) #10, !dbg !5161
  br label %if.end38, !dbg !5163

if.end23:                                         ; preds = %if.end18
  %23 = load i64, i64* %base, align 8, !dbg !5164
  %24 = load i64, i64* %limit, align 8, !dbg !5166
  %cmp24 = icmp ule i64 %23, %24, !dbg !5167
  br i1 %cmp24, label %if.then26, label %if.end38, !dbg !5168

if.then26:                                        ; preds = %if.end23
  %25 = load i16, i16* %mem_base_lo, align 2, !dbg !5169
  %conv27 = zext i16 %25 to i64, !dbg !5169
  %and28 = and i64 %conv27, 15, !dbg !5171
  %or29 = or i64 %and28, 512, !dbg !5172
  %or30 = or i64 %or29, 8192, !dbg !5173
  %26 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5174
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %26, i32 0, i32 3, !dbg !5175
  store i64 %or30, i64* %flags, align 8, !dbg !5176
  %27 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5177
  %flags31 = getelementptr inbounds %struct.resource, %struct.resource* %27, i32 0, i32 3, !dbg !5179
  %28 = load i64, i64* %flags31, align 8, !dbg !5179
  %and32 = and i64 %28, 1, !dbg !5180
  %tobool = icmp ne i64 %and32, 0, !dbg !5180
  br i1 %tobool, label %if.then33, label %if.end36, !dbg !5181

if.then33:                                        ; preds = %if.then26
  %29 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5182
  %flags34 = getelementptr inbounds %struct.resource, %struct.resource* %29, i32 0, i32 3, !dbg !5183
  %30 = load i64, i64* %flags34, align 8, !dbg !5184
  %or35 = or i64 %30, 1048576, !dbg !5184
  store i64 %or35, i64* %flags34, align 8, !dbg !5184
  br label %if.end36, !dbg !5182

if.end36:                                         ; preds = %if.then33, %if.then26
  %31 = load i64, i64* %base, align 8, !dbg !5185
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !5186
  store i64 %31, i64* %start, align 8, !dbg !5187
  %32 = load i64, i64* %limit, align 8, !dbg !5188
  %add = add i64 %32, 1048575, !dbg !5189
  %end = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !5190
  store i64 %add, i64* %end, align 8, !dbg !5191
  %33 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5192
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 1, !dbg !5193
  %34 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !5193
  %35 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5194
  call void @pcibios_bus_to_resource(%struct.pci_bus* %34, %struct.resource* %35, %struct.pci_bus_region* %region) #9, !dbg !5195
  %36 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5196
  %dev37 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 41, !dbg !5196
  %37 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5196
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev37, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0), %struct.resource* %37) #10, !dbg !5196
  br label %if.end38, !dbg !5197

if.end38:                                         ; preds = %if.then21, %if.end36, %if.end23
  ret void, !dbg !5198
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @pci_bus_resource_n(%struct.pci_bus*, i32) #2

; Function Attrs: noredzone
declare dso_local void @pci_bus_add_resource(%struct.pci_bus*, %struct.resource*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_host_bridge* @pci_alloc_host_bridge(i64 %priv) #0 !dbg !5199 {
entry:
  %retval = alloca %struct.pci_host_bridge*, align 8
  %priv.addr = alloca i64, align 8
  %bridge = alloca %struct.pci_host_bridge*, align 8
  store i64 %priv, i64* %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %priv.addr, metadata !5202, metadata !DIExpression()), !dbg !5203
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %bridge, metadata !5204, metadata !DIExpression()), !dbg !5205
  %0 = load i64, i64* %priv.addr, align 8, !dbg !5206
  %add = add i64 832, %0, !dbg !5207
  %call = call i8* @kzalloc(i64 %add, i32 3264) #9, !dbg !5208
  %1 = bitcast i8* %call to %struct.pci_host_bridge*, !dbg !5208
  store %struct.pci_host_bridge* %1, %struct.pci_host_bridge** %bridge, align 8, !dbg !5209
  %2 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5210
  %tobool = icmp ne %struct.pci_host_bridge* %2, null, !dbg !5210
  br i1 %tobool, label %if.end, label %if.then, !dbg !5212

if.then:                                          ; preds = %entry
  store %struct.pci_host_bridge* null, %struct.pci_host_bridge** %retval, align 8, !dbg !5213
  br label %return, !dbg !5213

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5214
  call void @pci_init_host_bridge(%struct.pci_host_bridge* %3) #9, !dbg !5215
  %4 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5216
  %dev = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %4, i32 0, i32 0, !dbg !5217
  %release = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 31, !dbg !5218
  store void (%struct.device*)* @pci_release_host_bridge_dev, void (%struct.device*)** %release, align 8, !dbg !5219
  %5 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5220
  store %struct.pci_host_bridge* %5, %struct.pci_host_bridge** %retval, align 8, !dbg !5221
  br label %return, !dbg !5221

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %retval, align 8, !dbg !5222
  ret %struct.pci_host_bridge* %6, !dbg !5222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !5223 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5226, metadata !DIExpression()), !dbg !5230
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5236, metadata !DIExpression()), !dbg !5237
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5238, metadata !DIExpression()), !dbg !5239
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5240, metadata !DIExpression()), !dbg !5241
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5242, metadata !DIExpression()), !dbg !5246
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5248, metadata !DIExpression()), !dbg !5252
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5254, metadata !DIExpression()), !dbg !5258
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5263, metadata !DIExpression()), !dbg !5264
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5265, metadata !DIExpression()), !dbg !5266
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5267, metadata !DIExpression()), !dbg !5268
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5269, metadata !DIExpression()), !dbg !5270
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5271, metadata !DIExpression()), !dbg !5272
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5273, metadata !DIExpression()), !dbg !5274
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5275, metadata !DIExpression()), !dbg !5276
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5277, metadata !DIExpression()), !dbg !5278
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5279, metadata !DIExpression()), !dbg !5280
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5281, metadata !DIExpression()), !dbg !5282
  %0 = load i64, i64* %size.addr, align 8, !dbg !5283
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5284
  %or = or i32 %1, 256, !dbg !5285
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5286
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #11, !dbg !5287
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5288

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5289
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5290
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5291

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5292
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5293
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5294
  %call.i.i = call i32 @get_order(i64 %7) #12, !dbg !5295
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5272
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5296
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5297
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5298
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5299
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5300
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5301
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !5302
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5302
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5302
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5302
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !5302
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5303
  br label %kmalloc.exit, !dbg !5303

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5304
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5305
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5305
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5307

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5308
  br label %kmalloc_index.exit.i, !dbg !5308

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5309
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5311
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5312

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5313
  br label %kmalloc_index.exit.i, !dbg !5313

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5314
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5316
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5317

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5318
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5319
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5320

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5321
  br label %kmalloc_index.exit.i, !dbg !5321

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5322
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5324
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5325

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5326
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5327
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5328

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5329
  br label %kmalloc_index.exit.i, !dbg !5329

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5330
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5332
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5333

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5334
  br label %kmalloc_index.exit.i, !dbg !5334

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5335
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5337
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5338

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5339
  br label %kmalloc_index.exit.i, !dbg !5339

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5340
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5342
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5343

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5344
  br label %kmalloc_index.exit.i, !dbg !5344

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5345
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5347
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5348

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5349
  br label %kmalloc_index.exit.i, !dbg !5349

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5350
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5352
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5353

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5354
  br label %kmalloc_index.exit.i, !dbg !5354

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5355
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5357
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5358

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5359
  br label %kmalloc_index.exit.i, !dbg !5359

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5360
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5362
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5363

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5364
  br label %kmalloc_index.exit.i, !dbg !5364

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5365
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5367
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5368

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5369
  br label %kmalloc_index.exit.i, !dbg !5369

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5370
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5372
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5373

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5374
  br label %kmalloc_index.exit.i, !dbg !5374

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5375
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5377
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5378

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5379
  br label %kmalloc_index.exit.i, !dbg !5379

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5380
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5382
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5383

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5384
  br label %kmalloc_index.exit.i, !dbg !5384

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5385
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5387
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5388

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5389
  br label %kmalloc_index.exit.i, !dbg !5389

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5390
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5392
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5393

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5394
  br label %kmalloc_index.exit.i, !dbg !5394

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5395
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5397
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5398

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5399
  br label %kmalloc_index.exit.i, !dbg !5399

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5400
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5402
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5403

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5404
  br label %kmalloc_index.exit.i, !dbg !5404

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5405
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5407
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5408

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5409
  br label %kmalloc_index.exit.i, !dbg !5409

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5410
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5412
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5413

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5414
  br label %kmalloc_index.exit.i, !dbg !5414

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5415
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5417
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5418

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5419
  br label %kmalloc_index.exit.i, !dbg !5419

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5420
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5422
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5423

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5424
  br label %kmalloc_index.exit.i, !dbg !5424

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5425
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5427
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5428

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5429
  br label %kmalloc_index.exit.i, !dbg !5429

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5430
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5432
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5433

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5434
  br label %kmalloc_index.exit.i, !dbg !5434

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5435
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5437
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5438

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5439
  br label %kmalloc_index.exit.i, !dbg !5439

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5440
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5442
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5443

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5444
  br label %kmalloc_index.exit.i, !dbg !5444

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5445
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5447
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5448

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5449
  br label %kmalloc_index.exit.i, !dbg !5449

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !5450, !srcloc !5453
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 156) #11, !dbg !5454, !srcloc !5457
  unreachable, !dbg !5458

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5459
  store i32 %45, i32* %index.i, align 4, !dbg !5460
  %46 = load i32, i32* %index.i, align 4, !dbg !5461
  %tobool.i = icmp ne i32 %46, 0, !dbg !5461
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5463

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5464
  br label %kmalloc.exit, !dbg !5464

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5465
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5466
  %and.i.i = and i32 %48, 17, !dbg !5466
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5466
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5466
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5466
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5466
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5468

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5469
  br label %kmalloc_type.exit.i, !dbg !5469

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5470
  %and2.i.i = and i32 %49, 1, !dbg !5471
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5470
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5470
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5470
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5472
  br label %kmalloc_type.exit.i, !dbg !5472

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5473
  %idxprom.i = zext i32 %51 to i64, !dbg !5474
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5474
  %52 = load i32, i32* %index.i, align 4, !dbg !5475
  %idxprom6.i = zext i32 %52 to i64, !dbg !5474
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5474
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5474
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5476
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5477
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5478
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5479
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !5480
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5480
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5480
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5480
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !5480
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5241
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5481
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5482
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5483
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5484
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !5485
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5486
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5487
  store i8* %62, i8** %retval.i, align 8, !dbg !5488
  br label %kmalloc.exit, !dbg !5488

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5489
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5490
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !5491
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5491
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5491
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5491
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !5491
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5492
  br label %kmalloc.exit, !dbg !5492

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5493
  ret i8* %65, !dbg !5494
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_init_host_bridge(%struct.pci_host_bridge* %bridge) #0 !dbg !5495 {
entry:
  %bridge.addr = alloca %struct.pci_host_bridge*, align 8
  store %struct.pci_host_bridge* %bridge, %struct.pci_host_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %bridge.addr, metadata !5496, metadata !DIExpression()), !dbg !5497
  %0 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !5498
  %windows = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %0, i32 0, i32 6, !dbg !5499
  call void @INIT_LIST_HEAD(%struct.list_head* %windows) #9, !dbg !5500
  %1 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !5501
  %dma_ranges = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %1, i32 0, i32 7, !dbg !5502
  call void @INIT_LIST_HEAD(%struct.list_head* %dma_ranges) #9, !dbg !5503
  %2 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !5504
  %native_aer = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %2, i32 0, i32 13, !dbg !5505
  %bf.load = load i16, i16* %native_aer, align 8, !dbg !5506
  %bf.clear = and i16 %bf.load, -5, !dbg !5506
  %bf.set = or i16 %bf.clear, 4, !dbg !5506
  store i16 %bf.set, i16* %native_aer, align 8, !dbg !5506
  %3 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !5507
  %native_pcie_hotplug = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %3, i32 0, i32 13, !dbg !5508
  %bf.load1 = load i16, i16* %native_pcie_hotplug, align 8, !dbg !5509
  %bf.clear2 = and i16 %bf.load1, -9, !dbg !5509
  %bf.set3 = or i16 %bf.clear2, 8, !dbg !5509
  store i16 %bf.set3, i16* %native_pcie_hotplug, align 8, !dbg !5509
  %4 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !5510
  %native_shpc_hotplug = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %4, i32 0, i32 13, !dbg !5511
  %bf.load4 = load i16, i16* %native_shpc_hotplug, align 8, !dbg !5512
  %bf.clear5 = and i16 %bf.load4, -17, !dbg !5512
  %bf.set6 = or i16 %bf.clear5, 16, !dbg !5512
  store i16 %bf.set6, i16* %native_shpc_hotplug, align 8, !dbg !5512
  %5 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !5513
  %native_pme = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %5, i32 0, i32 13, !dbg !5514
  %bf.load7 = load i16, i16* %native_pme, align 8, !dbg !5515
  %bf.clear8 = and i16 %bf.load7, -33, !dbg !5515
  %bf.set9 = or i16 %bf.clear8, 32, !dbg !5515
  store i16 %bf.set9, i16* %native_pme, align 8, !dbg !5515
  %6 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !5516
  %native_ltr = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %6, i32 0, i32 13, !dbg !5517
  %bf.load10 = load i16, i16* %native_ltr, align 8, !dbg !5518
  %bf.clear11 = and i16 %bf.load10, -65, !dbg !5518
  %bf.set12 = or i16 %bf.clear11, 64, !dbg !5518
  store i16 %bf.set12, i16* %native_ltr, align 8, !dbg !5518
  %7 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !5519
  %native_dpc = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %7, i32 0, i32 13, !dbg !5520
  %bf.load13 = load i16, i16* %native_dpc, align 8, !dbg !5521
  %bf.clear14 = and i16 %bf.load13, -129, !dbg !5521
  %bf.set15 = or i16 %bf.clear14, 128, !dbg !5521
  store i16 %bf.set15, i16* %native_dpc, align 8, !dbg !5521
  %8 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !5522
  %dev = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %8, i32 0, i32 0, !dbg !5523
  call void @device_initialize(%struct.device* %dev) #9, !dbg !5524
  ret void, !dbg !5525
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_release_host_bridge_dev(%struct.device* %dev) #0 !dbg !5526 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %bridge = alloca %struct.pci_host_bridge*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_host_bridge*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5527, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %bridge, metadata !5529, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5531, metadata !DIExpression()), !dbg !5533
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5533
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5533
  store i8* %1, i8** %__mptr, align 8, !dbg !5533
  br label %do.body, !dbg !5533

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5534

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5533
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !5533
  %3 = bitcast i8* %add.ptr to %struct.pci_host_bridge*, !dbg !5533
  store %struct.pci_host_bridge* %3, %struct.pci_host_bridge** %tmp, align 8, !dbg !5534
  %4 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %tmp, align 8, !dbg !5533
  store %struct.pci_host_bridge* %4, %struct.pci_host_bridge** %bridge, align 8, !dbg !5530
  %5 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5536
  %release_fn = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %5, i32 0, i32 10, !dbg !5538
  %6 = load void (%struct.pci_host_bridge*)*, void (%struct.pci_host_bridge*)** %release_fn, align 16, !dbg !5538
  %tobool = icmp ne void (%struct.pci_host_bridge*)* %6, null, !dbg !5536
  br i1 %tobool, label %if.then, label %if.end, !dbg !5539

if.then:                                          ; preds = %do.end
  %7 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5540
  %release_fn1 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %7, i32 0, i32 10, !dbg !5541
  %8 = load void (%struct.pci_host_bridge*)*, void (%struct.pci_host_bridge*)** %release_fn1, align 16, !dbg !5541
  %9 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5542
  call void %8(%struct.pci_host_bridge* %9) #9, !dbg !5540
  br label %if.end, !dbg !5540

if.end:                                           ; preds = %if.then, %do.end
  %10 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5543
  %windows = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %10, i32 0, i32 6, !dbg !5544
  call void @pci_free_resource_list(%struct.list_head* %windows) #9, !dbg !5545
  %11 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5546
  %dma_ranges = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %11, i32 0, i32 7, !dbg !5547
  call void @pci_free_resource_list(%struct.list_head* %dma_ranges) #9, !dbg !5548
  %12 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5549
  %13 = bitcast %struct.pci_host_bridge* %12 to i8*, !dbg !5549
  call void @kfree(i8* %13) #9, !dbg !5550
  ret void, !dbg !5551
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_host_bridge* @devm_pci_alloc_host_bridge(%struct.device* %dev, i64 %priv) #0 !dbg !5552 {
entry:
  %retval = alloca %struct.pci_host_bridge*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %priv.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %bridge = alloca %struct.pci_host_bridge*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5555, metadata !DIExpression()), !dbg !5556
  store i64 %priv, i64* %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %priv.addr, metadata !5557, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5559, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %bridge, metadata !5561, metadata !DIExpression()), !dbg !5562
  %0 = load i64, i64* %priv.addr, align 8, !dbg !5563
  %call = call %struct.pci_host_bridge* @pci_alloc_host_bridge(i64 %0) #9, !dbg !5564
  store %struct.pci_host_bridge* %call, %struct.pci_host_bridge** %bridge, align 8, !dbg !5565
  %1 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5566
  %tobool = icmp ne %struct.pci_host_bridge* %1, null, !dbg !5566
  br i1 %tobool, label %if.end, label %if.then, !dbg !5568

if.then:                                          ; preds = %entry
  store %struct.pci_host_bridge* null, %struct.pci_host_bridge** %retval, align 8, !dbg !5569
  br label %return, !dbg !5569

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5570
  %3 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5571
  %dev1 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %3, i32 0, i32 0, !dbg !5572
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !5573
  store %struct.device* %2, %struct.device** %parent, align 64, !dbg !5574
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5575
  %5 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5576
  %6 = bitcast %struct.pci_host_bridge* %5 to i8*, !dbg !5576
  %call2 = call i32 @devm_add_action_or_reset(%struct.device* %4, void (i8*)* @devm_pci_alloc_host_bridge_release, i8* %6) #9, !dbg !5577
  store i32 %call2, i32* %ret, align 4, !dbg !5578
  %7 = load i32, i32* %ret, align 4, !dbg !5579
  %tobool3 = icmp ne i32 %7, 0, !dbg !5579
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !5581

if.then4:                                         ; preds = %if.end
  store %struct.pci_host_bridge* null, %struct.pci_host_bridge** %retval, align 8, !dbg !5582
  br label %return, !dbg !5582

if.end5:                                          ; preds = %if.end
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5583
  %9 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5584
  %call6 = call i32 @devm_of_pci_bridge_init(%struct.device* %8, %struct.pci_host_bridge* %9) #9, !dbg !5585
  store i32 %call6, i32* %ret, align 4, !dbg !5586
  %10 = load i32, i32* %ret, align 4, !dbg !5587
  %tobool7 = icmp ne i32 %10, 0, !dbg !5587
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !5589

if.then8:                                         ; preds = %if.end5
  store %struct.pci_host_bridge* null, %struct.pci_host_bridge** %retval, align 8, !dbg !5590
  br label %return, !dbg !5590

if.end9:                                          ; preds = %if.end5
  %11 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !5591
  store %struct.pci_host_bridge* %11, %struct.pci_host_bridge** %retval, align 8, !dbg !5592
  br label %return, !dbg !5592

return:                                           ; preds = %if.end9, %if.then8, %if.then4, %if.then
  %12 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %retval, align 8, !dbg !5593
  ret %struct.pci_host_bridge* %12, !dbg !5593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_add_action_or_reset(%struct.device* %dev, void (i8*)* %action, i8* %data) #0 !dbg !5594 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %action.addr = alloca void (i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5597, metadata !DIExpression()), !dbg !5598
  store void (i8*)* %action, void (i8*)** %action.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %action.addr, metadata !5599, metadata !DIExpression()), !dbg !5600
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5601, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5603, metadata !DIExpression()), !dbg !5604
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5605
  %1 = load void (i8*)*, void (i8*)** %action.addr, align 8, !dbg !5606
  %2 = load i8*, i8** %data.addr, align 8, !dbg !5607
  %call = call i32 @devm_add_action(%struct.device* %0, void (i8*)* %1, i8* %2) #9, !dbg !5608
  store i32 %call, i32* %ret, align 4, !dbg !5609
  %3 = load i32, i32* %ret, align 4, !dbg !5610
  %tobool = icmp ne i32 %3, 0, !dbg !5610
  br i1 %tobool, label %if.then, label %if.end, !dbg !5612

if.then:                                          ; preds = %entry
  %4 = load void (i8*)*, void (i8*)** %action.addr, align 8, !dbg !5613
  %5 = load i8*, i8** %data.addr, align 8, !dbg !5614
  call void %4(i8* %5) #9, !dbg !5613
  br label %if.end, !dbg !5613

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !5615
  ret i32 %6, !dbg !5616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_pci_alloc_host_bridge_release(i8* %data) #0 !dbg !5617 {
entry:
  %data.addr = alloca i8*, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5618, metadata !DIExpression()), !dbg !5619
  %0 = load i8*, i8** %data.addr, align 8, !dbg !5620
  %1 = bitcast i8* %0 to %struct.pci_host_bridge*, !dbg !5620
  call void @pci_free_host_bridge(%struct.pci_host_bridge* %1) #9, !dbg !5621
  ret void, !dbg !5622
}

; Function Attrs: noredzone
declare dso_local i32 @devm_of_pci_bridge_init(%struct.device*, %struct.pci_host_bridge*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_free_host_bridge(%struct.pci_host_bridge* %bridge) #0 !dbg !5623 {
entry:
  %bridge.addr = alloca %struct.pci_host_bridge*, align 8
  store %struct.pci_host_bridge* %bridge, %struct.pci_host_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %bridge.addr, metadata !5624, metadata !DIExpression()), !dbg !5625
  %0 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !5626
  %dev = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %0, i32 0, i32 0, !dbg !5627
  call void @put_device(%struct.device* %dev) #9, !dbg !5628
  ret void, !dbg !5629
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @pci_speed_string(i32 %speed) #0 !dbg !4426 {
entry:
  %retval = alloca i8*, align 8
  %speed.addr = alloca i32, align 4
  store i32 %speed, i32* %speed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %speed.addr, metadata !5630, metadata !DIExpression()), !dbg !5631
  %0 = load i32, i32* %speed.addr, align 4, !dbg !5632
  %conv = zext i32 %0 to i64, !dbg !5632
  %cmp = icmp ult i64 %conv, 25, !dbg !5634
  br i1 %cmp, label %if.then, label %if.end, !dbg !5635

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %speed.addr, align 4, !dbg !5636
  %idxprom = zext i32 %1 to i64, !dbg !5637
  %arrayidx = getelementptr [25 x i8*], [25 x i8*]* @pci_speed_string.speed_strings, i64 0, i64 %idxprom, !dbg !5637
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !5637
  store i8* %2, i8** %retval, align 8, !dbg !5638
  br label %return, !dbg !5638

if.end:                                           ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), i8** %retval, align 8, !dbg !5639
  br label %return, !dbg !5639

return:                                           ; preds = %if.end, %if.then
  %3 = load i8*, i8** %retval, align 8, !dbg !5640
  ret i8* %3, !dbg !5640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pcie_update_link_speed(%struct.pci_bus* %bus, i16 zeroext %linksta) #0 !dbg !5641 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %linksta.addr = alloca i16, align 2
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5644, metadata !DIExpression()), !dbg !5645
  store i16 %linksta, i16* %linksta.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %linksta.addr, metadata !5646, metadata !DIExpression()), !dbg !5647
  %0 = load i16, i16* %linksta.addr, align 2, !dbg !5648
  %conv = zext i16 %0 to i32, !dbg !5648
  %and = and i32 %conv, 15, !dbg !5649
  %idxprom = sext i32 %and to i64, !dbg !5650
  %arrayidx = getelementptr [16 x i8], [16 x i8]* @pcie_link_speed, i64 0, i64 %idxprom, !dbg !5650
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5650
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5651
  %cur_bus_speed = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 16, !dbg !5652
  store i8 %1, i8* %cur_bus_speed, align 1, !dbg !5653
  ret void, !dbg !5654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_bus* @pci_add_new_bus(%struct.pci_bus* %parent, %struct.pci_dev* %dev, i32 %busnr) #0 !dbg !5655 {
entry:
  %parent.addr = alloca %struct.pci_bus*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %busnr.addr = alloca i32, align 4
  %child = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %parent, %struct.pci_bus** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %parent.addr, metadata !5658, metadata !DIExpression()), !dbg !5659
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5660, metadata !DIExpression()), !dbg !5661
  store i32 %busnr, i32* %busnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %busnr.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %child, metadata !5664, metadata !DIExpression()), !dbg !5665
  %0 = load %struct.pci_bus*, %struct.pci_bus** %parent.addr, align 8, !dbg !5666
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5667
  %2 = load i32, i32* %busnr.addr, align 4, !dbg !5668
  %call = call %struct.pci_bus* @pci_alloc_child_bus(%struct.pci_bus* %0, %struct.pci_dev* %1, i32 %2) #9, !dbg !5669
  store %struct.pci_bus* %call, %struct.pci_bus** %child, align 8, !dbg !5670
  %3 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5671
  %tobool = icmp ne %struct.pci_bus* %3, null, !dbg !5671
  br i1 %tobool, label %if.then, label %if.end, !dbg !5673

if.then:                                          ; preds = %entry
  call void @down_write(%struct.rw_semaphore* @pci_bus_sem) #9, !dbg !5674
  %4 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5676
  %node = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 0, !dbg !5677
  %5 = load %struct.pci_bus*, %struct.pci_bus** %parent.addr, align 8, !dbg !5678
  %children = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 2, !dbg !5679
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %children) #9, !dbg !5680
  call void @up_write(%struct.rw_semaphore* @pci_bus_sem) #9, !dbg !5681
  br label %if.end, !dbg !5682

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5683
  ret %struct.pci_bus* %6, !dbg !5684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_bus* @pci_alloc_child_bus(%struct.pci_bus* %parent, %struct.pci_dev* %bridge, i32 %busnr) #0 !dbg !5685 {
entry:
  %retval = alloca %struct.pci_bus*, align 8
  %parent.addr = alloca %struct.pci_bus*, align 8
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %busnr.addr = alloca i32, align 4
  %child = alloca %struct.pci_bus*, align 8
  %host = alloca %struct.pci_host_bridge*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on79 = alloca i32, align 4
  %tmp103 = alloca i64, align 8
  store %struct.pci_bus* %parent, %struct.pci_bus** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %parent.addr, metadata !5686, metadata !DIExpression()), !dbg !5687
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !5688, metadata !DIExpression()), !dbg !5689
  store i32 %busnr, i32* %busnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %busnr.addr, metadata !5690, metadata !DIExpression()), !dbg !5691
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %child, metadata !5692, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %host, metadata !5694, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5696, metadata !DIExpression()), !dbg !5697
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5698, metadata !DIExpression()), !dbg !5699
  %0 = load %struct.pci_bus*, %struct.pci_bus** %parent.addr, align 8, !dbg !5700
  %call = call %struct.pci_bus* @pci_alloc_bus(%struct.pci_bus* %0) #9, !dbg !5701
  store %struct.pci_bus* %call, %struct.pci_bus** %child, align 8, !dbg !5702
  %1 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5703
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !5703
  br i1 %tobool, label %if.end, label %if.then, !dbg !5705

if.then:                                          ; preds = %entry
  store %struct.pci_bus* null, %struct.pci_bus** %retval, align 8, !dbg !5706
  br label %return, !dbg !5706

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %parent.addr, align 8, !dbg !5707
  %3 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5708
  %parent1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %3, i32 0, i32 1, !dbg !5709
  store %struct.pci_bus* %2, %struct.pci_bus** %parent1, align 8, !dbg !5710
  %4 = load %struct.pci_bus*, %struct.pci_bus** %parent.addr, align 8, !dbg !5711
  %msi = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 10, !dbg !5712
  %5 = load %struct.msi_controller*, %struct.msi_controller** %msi, align 8, !dbg !5712
  %6 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5713
  %msi2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 10, !dbg !5714
  store %struct.msi_controller* %5, %struct.msi_controller** %msi2, align 8, !dbg !5715
  %7 = load %struct.pci_bus*, %struct.pci_bus** %parent.addr, align 8, !dbg !5716
  %sysdata = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 11, !dbg !5717
  %8 = load i8*, i8** %sysdata, align 8, !dbg !5717
  %9 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5718
  %sysdata3 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 11, !dbg !5719
  store i8* %8, i8** %sysdata3, align 8, !dbg !5720
  %10 = load %struct.pci_bus*, %struct.pci_bus** %parent.addr, align 8, !dbg !5721
  %bus_flags = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %10, i32 0, i32 19, !dbg !5722
  %11 = load i16, i16* %bus_flags, align 2, !dbg !5722
  %12 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5723
  %bus_flags4 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %12, i32 0, i32 19, !dbg !5724
  store i16 %11, i16* %bus_flags4, align 2, !dbg !5725
  %13 = load %struct.pci_bus*, %struct.pci_bus** %parent.addr, align 8, !dbg !5726
  %call5 = call %struct.pci_host_bridge* @pci_find_host_bridge(%struct.pci_bus* %13) #9, !dbg !5727
  store %struct.pci_host_bridge* %call5, %struct.pci_host_bridge** %host, align 8, !dbg !5728
  %14 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %host, align 8, !dbg !5729
  %child_ops = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %14, i32 0, i32 3, !dbg !5731
  %15 = load %struct.pci_ops*, %struct.pci_ops** %child_ops, align 8, !dbg !5731
  %tobool6 = icmp ne %struct.pci_ops* %15, null, !dbg !5729
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !5732

if.then7:                                         ; preds = %if.end
  %16 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %host, align 8, !dbg !5733
  %child_ops8 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %16, i32 0, i32 3, !dbg !5734
  %17 = load %struct.pci_ops*, %struct.pci_ops** %child_ops8, align 8, !dbg !5734
  %18 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5735
  %ops = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %18, i32 0, i32 9, !dbg !5736
  store %struct.pci_ops* %17, %struct.pci_ops** %ops, align 8, !dbg !5737
  br label %if.end11, !dbg !5735

if.else:                                          ; preds = %if.end
  %19 = load %struct.pci_bus*, %struct.pci_bus** %parent.addr, align 8, !dbg !5738
  %ops9 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %19, i32 0, i32 9, !dbg !5739
  %20 = load %struct.pci_ops*, %struct.pci_ops** %ops9, align 8, !dbg !5739
  %21 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5740
  %ops10 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %21, i32 0, i32 9, !dbg !5741
  store %struct.pci_ops* %20, %struct.pci_ops** %ops10, align 8, !dbg !5742
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then7
  %22 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5743
  %dev = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %22, i32 0, i32 21, !dbg !5744
  %class = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 29, !dbg !5745
  store %struct.class* @pcibus_class, %struct.class** %class, align 8, !dbg !5746
  %23 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5747
  %dev12 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %23, i32 0, i32 21, !dbg !5748
  %24 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5749
  %call13 = call i32 @pci_domain_nr(%struct.pci_bus* %24) #9, !dbg !5750
  %25 = load i32, i32* %busnr.addr, align 4, !dbg !5751
  %call14 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0), i32 %call13, i32 %25) #9, !dbg !5752
  %26 = load i32, i32* %busnr.addr, align 4, !dbg !5753
  %conv = sext i32 %26 to i64, !dbg !5753
  %27 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5754
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %27, i32 0, i32 8, !dbg !5755
  %start = getelementptr inbounds %struct.resource, %struct.resource* %busn_res, i32 0, i32 0, !dbg !5756
  store i64 %conv, i64* %start, align 8, !dbg !5757
  %conv15 = trunc i64 %conv to i8, !dbg !5754
  %28 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5758
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %28, i32 0, i32 13, !dbg !5759
  store i8 %conv15, i8* %number, align 8, !dbg !5760
  %29 = load %struct.pci_bus*, %struct.pci_bus** %parent.addr, align 8, !dbg !5761
  %busn_res16 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %29, i32 0, i32 8, !dbg !5762
  %start17 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res16, i32 0, i32 0, !dbg !5763
  %30 = load i64, i64* %start17, align 8, !dbg !5763
  %conv18 = trunc i64 %30 to i8, !dbg !5761
  %31 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5764
  %primary = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %31, i32 0, i32 14, !dbg !5765
  store i8 %conv18, i8* %primary, align 1, !dbg !5766
  %32 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5767
  %busn_res19 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %32, i32 0, i32 8, !dbg !5768
  %end = getelementptr inbounds %struct.resource, %struct.resource* %busn_res19, i32 0, i32 1, !dbg !5769
  store i64 255, i64* %end, align 8, !dbg !5770
  %33 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !5771
  %tobool20 = icmp ne %struct.pci_dev* %33, null, !dbg !5771
  br i1 %tobool20, label %if.end25, label %if.then21, !dbg !5773

if.then21:                                        ; preds = %if.end11
  %34 = load %struct.pci_bus*, %struct.pci_bus** %parent.addr, align 8, !dbg !5774
  %bridge22 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %34, i32 0, i32 20, !dbg !5776
  %35 = load %struct.device*, %struct.device** %bridge22, align 8, !dbg !5776
  %36 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5777
  %dev23 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %36, i32 0, i32 21, !dbg !5778
  %parent24 = getelementptr inbounds %struct.device, %struct.device* %dev23, i32 0, i32 1, !dbg !5779
  store %struct.device* %35, %struct.device** %parent24, align 8, !dbg !5780
  br label %add_dev, !dbg !5781

if.end25:                                         ; preds = %if.end11
  %37 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !5782
  %38 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5783
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %38, i32 0, i32 4, !dbg !5784
  store %struct.pci_dev* %37, %struct.pci_dev** %self, align 8, !dbg !5785
  %39 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !5786
  %dev26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 41, !dbg !5787
  %call27 = call %struct.device* @get_device(%struct.device* %dev26) #9, !dbg !5788
  %40 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5789
  %bridge28 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %40, i32 0, i32 20, !dbg !5790
  store %struct.device* %call27, %struct.device** %bridge28, align 8, !dbg !5791
  %41 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5792
  %bridge29 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %41, i32 0, i32 20, !dbg !5793
  %42 = load %struct.device*, %struct.device** %bridge29, align 8, !dbg !5793
  %43 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5794
  %dev30 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %43, i32 0, i32 21, !dbg !5795
  %parent31 = getelementptr inbounds %struct.device, %struct.device* %dev30, i32 0, i32 1, !dbg !5796
  store %struct.device* %42, %struct.device** %parent31, align 8, !dbg !5797
  %44 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5798
  call void @pci_set_bus_of_node(%struct.pci_bus* %44) #9, !dbg !5799
  %45 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5800
  call void @pci_set_bus_speed(%struct.pci_bus* %45) #9, !dbg !5801
  %46 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !5802
  %call32 = call zeroext i1 @pci_bridge_child_ext_cfg_accessible(%struct.pci_dev* %46) #9, !dbg !5804
  br i1 %call32, label %if.end38, label %if.then33, !dbg !5805

if.then33:                                        ; preds = %if.end25
  %47 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5806
  %bus_flags34 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %47, i32 0, i32 19, !dbg !5808
  %48 = load i16, i16* %bus_flags34, align 2, !dbg !5809
  %conv35 = zext i16 %48 to i32, !dbg !5809
  %or = or i32 %conv35, 8, !dbg !5809
  %conv36 = trunc i32 %or to i16, !dbg !5809
  store i16 %conv36, i16* %bus_flags34, align 2, !dbg !5809
  %49 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5810
  %dev37 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %49, i32 0, i32 21, !dbg !5810
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev37, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.57, i64 0, i64 0)) #10, !dbg !5810
  br label %if.end38, !dbg !5811

if.end38:                                         ; preds = %if.then33, %if.end25
  store i32 0, i32* %i, align 4, !dbg !5812
  br label %for.cond, !dbg !5814

for.cond:                                         ; preds = %for.inc, %if.end38
  %50 = load i32, i32* %i, align 4, !dbg !5815
  %cmp = icmp slt i32 %50, 4, !dbg !5817
  br i1 %cmp, label %for.body, label %for.end, !dbg !5818

for.body:                                         ; preds = %for.cond
  %51 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !5819
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %51, i32 0, i32 44, !dbg !5821
  %52 = load i32, i32* %i, align 4, !dbg !5822
  %add = add i32 13, %52, !dbg !5823
  %idxprom = sext i32 %add to i64, !dbg !5819
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !5819
  %53 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5824
  %resource40 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %53, i32 0, i32 6, !dbg !5825
  %54 = load i32, i32* %i, align 4, !dbg !5826
  %idxprom41 = sext i32 %54 to i64, !dbg !5824
  %arrayidx42 = getelementptr [4 x %struct.resource*], [4 x %struct.resource*]* %resource40, i64 0, i64 %idxprom41, !dbg !5824
  store %struct.resource* %arrayidx, %struct.resource** %arrayidx42, align 8, !dbg !5827
  %55 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5828
  %name = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %55, i32 0, i32 17, !dbg !5829
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %name, i64 0, i64 0, !dbg !5828
  %56 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5830
  %resource43 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %56, i32 0, i32 6, !dbg !5831
  %57 = load i32, i32* %i, align 4, !dbg !5832
  %idxprom44 = sext i32 %57 to i64, !dbg !5830
  %arrayidx45 = getelementptr [4 x %struct.resource*], [4 x %struct.resource*]* %resource43, i64 0, i64 %idxprom44, !dbg !5830
  %58 = load %struct.resource*, %struct.resource** %arrayidx45, align 8, !dbg !5830
  %name46 = getelementptr inbounds %struct.resource, %struct.resource* %58, i32 0, i32 2, !dbg !5833
  store i8* %arraydecay, i8** %name46, align 8, !dbg !5834
  br label %for.inc, !dbg !5835

for.inc:                                          ; preds = %for.body
  %59 = load i32, i32* %i, align 4, !dbg !5836
  %inc = add i32 %59, 1, !dbg !5836
  store i32 %inc, i32* %i, align 4, !dbg !5836
  br label %for.cond, !dbg !5837, !llvm.loop !5838

for.end:                                          ; preds = %for.cond
  %60 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5840
  %61 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !5841
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %61, i32 0, i32 2, !dbg !5842
  store %struct.pci_bus* %60, %struct.pci_bus** %subordinate, align 8, !dbg !5843
  br label %add_dev, !dbg !5841

add_dev:                                          ; preds = %for.end, %if.then21
  call void @llvm.dbg.label(metadata !5844), !dbg !5845
  %62 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5846
  call void @pci_set_bus_msi_domain(%struct.pci_bus* %62) #9, !dbg !5847
  %63 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5848
  %dev47 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %63, i32 0, i32 21, !dbg !5849
  %call48 = call i32 @device_register(%struct.device* %dev47) #9, !dbg !5850
  store i32 %call48, i32* %ret, align 4, !dbg !5851
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5852, metadata !DIExpression()), !dbg !5854
  %64 = load i32, i32* %ret, align 4, !dbg !5854
  %cmp49 = icmp slt i32 %64, 0, !dbg !5854
  %lnot = xor i1 %cmp49, true, !dbg !5854
  %lnot51 = xor i1 %lnot, true, !dbg !5854
  %lnot.ext = zext i1 %lnot51 to i32, !dbg !5854
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5854
  %65 = load i32, i32* %__ret_warn_on, align 4, !dbg !5855
  %tobool52 = icmp ne i32 %65, 0, !dbg !5855
  %lnot53 = xor i1 %tobool52, true, !dbg !5855
  %lnot55 = xor i1 %lnot53, true, !dbg !5855
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !5855
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !5855
  %tobool58 = icmp ne i64 %conv57, 0, !dbg !5855
  br i1 %tobool58, label %if.then59, label %if.end66, !dbg !5854

if.then59:                                        ; preds = %add_dev
  br label %do.body, !dbg !5855

do.body:                                          ; preds = %if.then59
  br label %do.body60, !dbg !5857

do.body60:                                        ; preds = %do.body
  br label %do.end, !dbg !5859

do.end:                                           ; preds = %do.body60
  br label %do.body61, !dbg !5857

do.body61:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0), i32 1108, i32 2305, i64 12) #11, !dbg !5861, !srcloc !5863
  br label %do.end62, !dbg !5861

do.end62:                                         ; preds = %do.body61
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 250) #11, !dbg !5864, !srcloc !5866
  br label %do.body63, !dbg !5857

do.body63:                                        ; preds = %do.end62
  br label %do.end64, !dbg !5867

do.end64:                                         ; preds = %do.body63
  br label %do.end65, !dbg !5857

do.end65:                                         ; preds = %do.end64
  br label %if.end66, !dbg !5857

if.end66:                                         ; preds = %do.end65, %add_dev
  %66 = load i32, i32* %__ret_warn_on, align 4, !dbg !5854
  %tobool67 = icmp ne i32 %66, 0, !dbg !5854
  %lnot68 = xor i1 %tobool67, true, !dbg !5854
  %lnot70 = xor i1 %lnot68, true, !dbg !5854
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !5854
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !5854
  store i64 %conv72, i64* %tmp, align 8, !dbg !5855
  %67 = load i64, i64* %tmp, align 8, !dbg !5854
  %68 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5869
  call void @pcibios_add_bus(%struct.pci_bus* %68) #9, !dbg !5870
  %69 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5871
  %ops73 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %69, i32 0, i32 9, !dbg !5873
  %70 = load %struct.pci_ops*, %struct.pci_ops** %ops73, align 8, !dbg !5873
  %add_bus = getelementptr inbounds %struct.pci_ops, %struct.pci_ops* %70, i32 0, i32 0, !dbg !5874
  %71 = load i32 (%struct.pci_bus*)*, i32 (%struct.pci_bus*)** %add_bus, align 8, !dbg !5874
  %tobool74 = icmp ne i32 (%struct.pci_bus*)* %71, null, !dbg !5871
  br i1 %tobool74, label %if.then75, label %if.end114, !dbg !5875

if.then75:                                        ; preds = %if.end66
  %72 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5876
  %ops76 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %72, i32 0, i32 9, !dbg !5878
  %73 = load %struct.pci_ops*, %struct.pci_ops** %ops76, align 8, !dbg !5878
  %add_bus77 = getelementptr inbounds %struct.pci_ops, %struct.pci_ops* %73, i32 0, i32 0, !dbg !5879
  %74 = load i32 (%struct.pci_bus*)*, i32 (%struct.pci_bus*)** %add_bus77, align 8, !dbg !5879
  %75 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5880
  %call78 = call i32 %74(%struct.pci_bus* %75) #9, !dbg !5876
  store i32 %call78, i32* %ret, align 4, !dbg !5881
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on79, metadata !5882, metadata !DIExpression()), !dbg !5885
  %76 = load i32, i32* %ret, align 4, !dbg !5885
  %cmp80 = icmp slt i32 %76, 0, !dbg !5885
  %lnot82 = xor i1 %cmp80, true, !dbg !5885
  %lnot84 = xor i1 %lnot82, true, !dbg !5885
  %lnot.ext85 = zext i1 %lnot84 to i32, !dbg !5885
  store i32 %lnot.ext85, i32* %__ret_warn_on79, align 4, !dbg !5885
  %77 = load i32, i32* %__ret_warn_on79, align 4, !dbg !5886
  %tobool86 = icmp ne i32 %77, 0, !dbg !5886
  %lnot87 = xor i1 %tobool86, true, !dbg !5886
  %lnot89 = xor i1 %lnot87, true, !dbg !5886
  %lnot.ext90 = zext i1 %lnot89 to i32, !dbg !5886
  %conv91 = sext i32 %lnot.ext90 to i64, !dbg !5886
  %tobool92 = icmp ne i64 %conv91, 0, !dbg !5886
  br i1 %tobool92, label %if.then93, label %if.end102, !dbg !5885

if.then93:                                        ; preds = %if.then75
  br label %do.body94, !dbg !5886

do.body94:                                        ; preds = %if.then93
  br label %do.body95, !dbg !5888

do.body95:                                        ; preds = %do.body94
  br label %do.end96, !dbg !5890

do.end96:                                         ; preds = %do.body95
  br label %do.body97, !dbg !5888

do.body97:                                        ; preds = %do.end96
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0), i32 1114, i32 2305, i64 12) #11, !dbg !5892, !srcloc !5894
  br label %do.end98, !dbg !5892

do.end98:                                         ; preds = %do.body97
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 251) #11, !dbg !5895, !srcloc !5897
  br label %do.body99, !dbg !5888

do.body99:                                        ; preds = %do.end98
  br label %do.end100, !dbg !5898

do.end100:                                        ; preds = %do.body99
  br label %do.end101, !dbg !5888

do.end101:                                        ; preds = %do.end100
  br label %if.end102, !dbg !5888

if.end102:                                        ; preds = %do.end101, %if.then75
  %78 = load i32, i32* %__ret_warn_on79, align 4, !dbg !5885
  %tobool104 = icmp ne i32 %78, 0, !dbg !5885
  %lnot105 = xor i1 %tobool104, true, !dbg !5885
  %lnot107 = xor i1 %lnot105, true, !dbg !5885
  %lnot.ext108 = zext i1 %lnot107 to i32, !dbg !5885
  %conv109 = sext i32 %lnot.ext108 to i64, !dbg !5885
  store i64 %conv109, i64* %tmp103, align 8, !dbg !5886
  %79 = load i64, i64* %tmp103, align 8, !dbg !5885
  %tobool110 = icmp ne i64 %79, 0, !dbg !5900
  br i1 %tobool110, label %if.then111, label %if.end113, !dbg !5901

if.then111:                                       ; preds = %if.end102
  %80 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5902
  %dev112 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %80, i32 0, i32 21, !dbg !5902
  %81 = load i32, i32* %ret, align 4, !dbg !5902
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev112, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58, i64 0, i64 0), i32 %81) #10, !dbg !5902
  br label %if.end113, !dbg !5902

if.end113:                                        ; preds = %if.then111, %if.end102
  br label %if.end114, !dbg !5903

if.end114:                                        ; preds = %if.end113, %if.end66
  %82 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5904
  call void @pci_create_legacy_files(%struct.pci_bus* %82) #9, !dbg !5905
  %83 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !5906
  store %struct.pci_bus* %83, %struct.pci_bus** %retval, align 8, !dbg !5907
  br label %return, !dbg !5907

return:                                           ; preds = %if.end114, %if.then
  %84 = load %struct.pci_bus*, %struct.pci_bus** %retval, align 8, !dbg !5908
  ret %struct.pci_bus* %84, !dbg !5908
}

; Function Attrs: noredzone
declare dso_local void @down_write(%struct.rw_semaphore*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !5909 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !5913, metadata !DIExpression()), !dbg !5914
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !5915, metadata !DIExpression()), !dbg !5916
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !5917
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !5918
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !5919
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !5919
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !5920
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #9, !dbg !5921
  ret void, !dbg !5922
}

; Function Attrs: noredzone
declare dso_local void @up_write(%struct.rw_semaphore*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_scan_bridge(%struct.pci_bus* %bus, %struct.pci_dev* %dev, i32 %max, i32 %pass) #0 !dbg !5923 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %max.addr = alloca i32, align 4
  %pass.addr = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5926, metadata !DIExpression()), !dbg !5927
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5928, metadata !DIExpression()), !dbg !5929
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !5930, metadata !DIExpression()), !dbg !5931
  store i32 %pass, i32* %pass.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pass.addr, metadata !5932, metadata !DIExpression()), !dbg !5933
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5934
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5935
  %2 = load i32, i32* %max.addr, align 4, !dbg !5936
  %3 = load i32, i32* %pass.addr, align 4, !dbg !5937
  %call = call i32 @pci_scan_bridge_extend(%struct.pci_bus* %0, %struct.pci_dev* %1, i32 %2, i32 0, i32 %3) #9, !dbg !5938
  ret i32 %call, !dbg !5939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_scan_bridge_extend(%struct.pci_bus* %bus, %struct.pci_dev* %dev, i32 %max, i32 %available_buses, i32 %pass) #0 !dbg !5940 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %max.addr = alloca i32, align 4
  %available_buses.addr = alloca i32, align 4
  %pass.addr = alloca i32, align 4
  %child = alloca %struct.pci_bus*, align 8
  %is_cardbus = alloca i32, align 4
  %buses = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %bctl = alloca i16, align 2
  %primary = alloca i8, align 1
  %secondary = alloca i8, align 1
  %subordinate = alloca i8, align 1
  %broken = alloca i32, align 4
  %fixed_buses = alloca i8, align 1
  %fixed_sec = alloca i8, align 1
  %fixed_sub = alloca i8, align 1
  %next_busnr = alloca i32, align 4
  %cmax = alloca i32, align 4
  %parent = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5943, metadata !DIExpression()), !dbg !5944
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5945, metadata !DIExpression()), !dbg !5946
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !5947, metadata !DIExpression()), !dbg !5948
  store i32 %available_buses, i32* %available_buses.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %available_buses.addr, metadata !5949, metadata !DIExpression()), !dbg !5950
  store i32 %pass, i32* %pass.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pass.addr, metadata !5951, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %child, metadata !5953, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.declare(metadata i32* %is_cardbus, metadata !5955, metadata !DIExpression()), !dbg !5956
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5957
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 13, !dbg !5958
  %1 = load i8, i8* %hdr_type, align 1, !dbg !5958
  %conv = zext i8 %1 to i32, !dbg !5957
  %cmp = icmp eq i32 %conv, 2, !dbg !5959
  %conv1 = zext i1 %cmp to i32, !dbg !5959
  store i32 %conv1, i32* %is_cardbus, align 4, !dbg !5956
  call void @llvm.dbg.declare(metadata i32* %buses, metadata !5960, metadata !DIExpression()), !dbg !5961
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5962, metadata !DIExpression()), !dbg !5963
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5964, metadata !DIExpression()), !dbg !5965
  store i32 0, i32* %j, align 4, !dbg !5965
  call void @llvm.dbg.declare(metadata i16* %bctl, metadata !5966, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.declare(metadata i8* %primary, metadata !5968, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.declare(metadata i8* %secondary, metadata !5970, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.declare(metadata i8* %subordinate, metadata !5972, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.declare(metadata i32* %broken, metadata !5974, metadata !DIExpression()), !dbg !5975
  store i32 0, i32* %broken, align 4, !dbg !5975
  call void @llvm.dbg.declare(metadata i8* %fixed_buses, metadata !5976, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.declare(metadata i8* %fixed_sec, metadata !5978, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.declare(metadata i8* %fixed_sub, metadata !5980, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.declare(metadata i32* %next_busnr, metadata !5982, metadata !DIExpression()), !dbg !5983
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5984
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !5985
  %call = call i32 @pm_runtime_get_sync(%struct.device* %dev2) #9, !dbg !5986
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5987
  %call3 = call i32 @pci_read_config_dword(%struct.pci_dev* %3, i32 24, i32* %buses) #9, !dbg !5988
  %4 = load i32, i32* %buses, align 4, !dbg !5989
  %and = and i32 %4, 255, !dbg !5990
  %conv4 = trunc i32 %and to i8, !dbg !5989
  store i8 %conv4, i8* %primary, align 1, !dbg !5991
  %5 = load i32, i32* %buses, align 4, !dbg !5992
  %shr = lshr i32 %5, 8, !dbg !5993
  %and5 = and i32 %shr, 255, !dbg !5994
  %conv6 = trunc i32 %and5 to i8, !dbg !5995
  store i8 %conv6, i8* %secondary, align 1, !dbg !5996
  %6 = load i32, i32* %buses, align 4, !dbg !5997
  %shr7 = lshr i32 %6, 16, !dbg !5998
  %and8 = and i32 %shr7, 255, !dbg !5999
  %conv9 = trunc i32 %and8 to i8, !dbg !6000
  store i8 %conv9, i8* %subordinate, align 1, !dbg !6001
  %7 = load i8, i8* %primary, align 1, !dbg !6002
  %tobool = icmp ne i8 %7, 0, !dbg !6002
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6004

land.lhs.true:                                    ; preds = %entry
  %8 = load i8, i8* %primary, align 1, !dbg !6005
  %conv10 = zext i8 %8 to i32, !dbg !6005
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6006
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 13, !dbg !6007
  %10 = load i8, i8* %number, align 8, !dbg !6007
  %conv11 = zext i8 %10 to i32, !dbg !6006
  %cmp12 = icmp ne i32 %conv10, %conv11, !dbg !6008
  br i1 %cmp12, label %land.lhs.true14, label %if.end, !dbg !6009

land.lhs.true14:                                  ; preds = %land.lhs.true
  %11 = load i8, i8* %secondary, align 1, !dbg !6010
  %conv15 = zext i8 %11 to i32, !dbg !6010
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !6010
  br i1 %tobool16, label %land.lhs.true17, label %if.end, !dbg !6011

land.lhs.true17:                                  ; preds = %land.lhs.true14
  %12 = load i8, i8* %subordinate, align 1, !dbg !6012
  %conv18 = zext i8 %12 to i32, !dbg !6012
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !6012
  br i1 %tobool19, label %if.then, label %if.end, !dbg !6013

if.then:                                          ; preds = %land.lhs.true17
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6014
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !6014
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev20, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.59, i64 0, i64 0)) #10, !dbg !6014
  %14 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6016
  %number21 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %14, i32 0, i32 13, !dbg !6017
  %15 = load i8, i8* %number21, align 8, !dbg !6017
  store i8 %15, i8* %primary, align 1, !dbg !6018
  br label %if.end, !dbg !6019

if.end:                                           ; preds = %if.then, %land.lhs.true17, %land.lhs.true14, %land.lhs.true, %entry
  %16 = load i32, i32* %pass.addr, align 4, !dbg !6020
  %tobool22 = icmp ne i32 %16, 0, !dbg !6020
  br i1 %tobool22, label %if.end43, label %land.lhs.true23, !dbg !6022

land.lhs.true23:                                  ; preds = %if.end
  %17 = load i8, i8* %primary, align 1, !dbg !6023
  %conv24 = zext i8 %17 to i32, !dbg !6023
  %18 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6024
  %number25 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %18, i32 0, i32 13, !dbg !6025
  %19 = load i8, i8* %number25, align 8, !dbg !6025
  %conv26 = zext i8 %19 to i32, !dbg !6024
  %cmp27 = icmp ne i32 %conv24, %conv26, !dbg !6026
  br i1 %cmp27, label %if.then39, label %lor.lhs.false, !dbg !6027

lor.lhs.false:                                    ; preds = %land.lhs.true23
  %20 = load i8, i8* %secondary, align 1, !dbg !6028
  %conv29 = zext i8 %20 to i32, !dbg !6028
  %21 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6029
  %number30 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %21, i32 0, i32 13, !dbg !6030
  %22 = load i8, i8* %number30, align 8, !dbg !6030
  %conv31 = zext i8 %22 to i32, !dbg !6029
  %cmp32 = icmp sle i32 %conv29, %conv31, !dbg !6031
  br i1 %cmp32, label %if.then39, label %lor.lhs.false34, !dbg !6032

lor.lhs.false34:                                  ; preds = %lor.lhs.false
  %23 = load i8, i8* %secondary, align 1, !dbg !6033
  %conv35 = zext i8 %23 to i32, !dbg !6033
  %24 = load i8, i8* %subordinate, align 1, !dbg !6034
  %conv36 = zext i8 %24 to i32, !dbg !6034
  %cmp37 = icmp sgt i32 %conv35, %conv36, !dbg !6035
  br i1 %cmp37, label %if.then39, label %if.end43, !dbg !6036

if.then39:                                        ; preds = %lor.lhs.false34, %lor.lhs.false, %land.lhs.true23
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6037
  %dev40 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !6037
  %26 = load i8, i8* %secondary, align 1, !dbg !6037
  %conv41 = zext i8 %26 to i32, !dbg !6037
  %27 = load i8, i8* %subordinate, align 1, !dbg !6037
  %conv42 = zext i8 %27 to i32, !dbg !6037
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev40, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.60, i64 0, i64 0), i32 %conv41, i32 %conv42) #10, !dbg !6037
  store i32 1, i32* %broken, align 4, !dbg !6039
  br label %if.end43, !dbg !6040

if.end43:                                         ; preds = %if.then39, %lor.lhs.false34, %if.end
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6041
  %call44 = call i32 @pci_read_config_word(%struct.pci_dev* %28, i32 62, i16* %bctl) #9, !dbg !6042
  %29 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6043
  %30 = load i16, i16* %bctl, align 2, !dbg !6044
  %conv45 = zext i16 %30 to i32, !dbg !6044
  %and46 = and i32 %conv45, -33, !dbg !6045
  %conv47 = trunc i32 %and46 to i16, !dbg !6044
  %call48 = call i32 @pci_write_config_word(%struct.pci_dev* %29, i32 62, i16 zeroext %conv47) #9, !dbg !6046
  %31 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6047
  call void @pci_enable_crs(%struct.pci_dev* %31) #9, !dbg !6048
  %32 = load i8, i8* %secondary, align 1, !dbg !6049
  %conv49 = zext i8 %32 to i32, !dbg !6049
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !6049
  br i1 %tobool50, label %land.lhs.true54, label %lor.lhs.false51, !dbg !6051

lor.lhs.false51:                                  ; preds = %if.end43
  %33 = load i8, i8* %subordinate, align 1, !dbg !6052
  %conv52 = zext i8 %33 to i32, !dbg !6052
  %tobool53 = icmp ne i32 %conv52, 0, !dbg !6052
  br i1 %tobool53, label %land.lhs.true54, label %if.else, !dbg !6053

land.lhs.true54:                                  ; preds = %lor.lhs.false51, %if.end43
  %call55 = call i32 @pcibios_assign_all_busses() #9, !dbg !6054
  %tobool56 = icmp ne i32 %call55, 0, !dbg !6054
  br i1 %tobool56, label %if.else, label %land.lhs.true57, !dbg !6055

land.lhs.true57:                                  ; preds = %land.lhs.true54
  %34 = load i32, i32* %is_cardbus, align 4, !dbg !6056
  %tobool58 = icmp ne i32 %34, 0, !dbg !6056
  br i1 %tobool58, label %if.else, label %land.lhs.true59, !dbg !6057

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %35 = load i32, i32* %broken, align 4, !dbg !6058
  %tobool60 = icmp ne i32 %35, 0, !dbg !6058
  br i1 %tobool60, label %if.else, label %if.then61, !dbg !6059

if.then61:                                        ; preds = %land.lhs.true59
  call void @llvm.dbg.declare(metadata i32* %cmax, metadata !6060, metadata !DIExpression()), !dbg !6062
  %36 = load i32, i32* %pass.addr, align 4, !dbg !6063
  %tobool62 = icmp ne i32 %36, 0, !dbg !6063
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !6065

if.then63:                                        ; preds = %if.then61
  br label %out, !dbg !6066

if.end64:                                         ; preds = %if.then61
  %37 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6067
  %call65 = call i32 @pci_domain_nr(%struct.pci_bus* %37) #9, !dbg !6068
  %38 = load i8, i8* %secondary, align 1, !dbg !6069
  %conv66 = zext i8 %38 to i32, !dbg !6069
  %call67 = call %struct.pci_bus* @pci_find_bus(i32 %call65, i32 %conv66) #9, !dbg !6070
  store %struct.pci_bus* %call67, %struct.pci_bus** %child, align 8, !dbg !6071
  %39 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6072
  %tobool68 = icmp ne %struct.pci_bus* %39, null, !dbg !6072
  br i1 %tobool68, label %if.end79, label %if.then69, !dbg !6074

if.then69:                                        ; preds = %if.end64
  %40 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6075
  %41 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6077
  %42 = load i8, i8* %secondary, align 1, !dbg !6078
  %conv70 = zext i8 %42 to i32, !dbg !6078
  %call71 = call %struct.pci_bus* @pci_add_new_bus(%struct.pci_bus* %40, %struct.pci_dev* %41, i32 %conv70) #9, !dbg !6079
  store %struct.pci_bus* %call71, %struct.pci_bus** %child, align 8, !dbg !6080
  %43 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6081
  %tobool72 = icmp ne %struct.pci_bus* %43, null, !dbg !6081
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !6083

if.then73:                                        ; preds = %if.then69
  br label %out, !dbg !6084

if.end74:                                         ; preds = %if.then69
  %44 = load i8, i8* %primary, align 1, !dbg !6085
  %45 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6086
  %primary75 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %45, i32 0, i32 14, !dbg !6087
  store i8 %44, i8* %primary75, align 1, !dbg !6088
  %46 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6089
  %47 = load i8, i8* %secondary, align 1, !dbg !6090
  %conv76 = zext i8 %47 to i32, !dbg !6090
  %48 = load i8, i8* %subordinate, align 1, !dbg !6091
  %conv77 = zext i8 %48 to i32, !dbg !6091
  %call78 = call i32 @pci_bus_insert_busn_res(%struct.pci_bus* %46, i32 %conv76, i32 %conv77) #9, !dbg !6092
  %49 = load i16, i16* %bctl, align 2, !dbg !6093
  %50 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6094
  %bridge_ctl = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %50, i32 0, i32 18, !dbg !6095
  store i16 %49, i16* %bridge_ctl, align 4, !dbg !6096
  br label %if.end79, !dbg !6097

if.end79:                                         ; preds = %if.end74, %if.end64
  %51 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6098
  %call80 = call i32 @pci_scan_child_bus(%struct.pci_bus* %51) #9, !dbg !6099
  store i32 %call80, i32* %cmax, align 4, !dbg !6100
  %52 = load i32, i32* %cmax, align 4, !dbg !6101
  %53 = load i8, i8* %subordinate, align 1, !dbg !6103
  %conv81 = zext i8 %53 to i32, !dbg !6103
  %cmp82 = icmp ugt i32 %52, %conv81, !dbg !6104
  br i1 %cmp82, label %if.then84, label %if.end87, !dbg !6105

if.then84:                                        ; preds = %if.end79
  %54 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6106
  %dev85 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 41, !dbg !6106
  %55 = load i8, i8* %subordinate, align 1, !dbg !6106
  %conv86 = zext i8 %55 to i32, !dbg !6106
  %56 = load i32, i32* %cmax, align 4, !dbg !6106
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev85, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.61, i64 0, i64 0), i32 %conv86, i32 %56) #10, !dbg !6106
  br label %if.end87, !dbg !6106

if.end87:                                         ; preds = %if.then84, %if.end79
  %57 = load i8, i8* %subordinate, align 1, !dbg !6107
  %conv88 = zext i8 %57 to i32, !dbg !6107
  %58 = load i32, i32* %max.addr, align 4, !dbg !6109
  %cmp89 = icmp sgt i32 %conv88, %58, !dbg !6110
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !6111

if.then91:                                        ; preds = %if.end87
  %59 = load i8, i8* %subordinate, align 1, !dbg !6112
  %conv92 = zext i8 %59 to i32, !dbg !6112
  store i32 %conv92, i32* %max.addr, align 4, !dbg !6113
  br label %if.end93, !dbg !6114

if.end93:                                         ; preds = %if.then91, %if.end87
  br label %if.end193, !dbg !6115

if.else:                                          ; preds = %land.lhs.true59, %land.lhs.true57, %land.lhs.true54, %lor.lhs.false51
  %60 = load i32, i32* %pass.addr, align 4, !dbg !6116
  %tobool94 = icmp ne i32 %60, 0, !dbg !6116
  br i1 %tobool94, label %if.end106, label %if.then95, !dbg !6119

if.then95:                                        ; preds = %if.else
  %call96 = call i32 @pcibios_assign_all_busses() #9, !dbg !6120
  %tobool97 = icmp ne i32 %call96, 0, !dbg !6120
  br i1 %tobool97, label %if.then102, label %lor.lhs.false98, !dbg !6123

lor.lhs.false98:                                  ; preds = %if.then95
  %61 = load i32, i32* %broken, align 4, !dbg !6124
  %tobool99 = icmp ne i32 %61, 0, !dbg !6124
  br i1 %tobool99, label %if.then102, label %lor.lhs.false100, !dbg !6125

lor.lhs.false100:                                 ; preds = %lor.lhs.false98
  %62 = load i32, i32* %is_cardbus, align 4, !dbg !6126
  %tobool101 = icmp ne i32 %62, 0, !dbg !6126
  br i1 %tobool101, label %if.then102, label %if.end105, !dbg !6127

if.then102:                                       ; preds = %lor.lhs.false100, %lor.lhs.false98, %if.then95
  %63 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6128
  %64 = load i32, i32* %buses, align 4, !dbg !6129
  %and103 = and i32 %64, -16777216, !dbg !6130
  %call104 = call i32 @pci_write_config_dword(%struct.pci_dev* %63, i32 24, i32 %and103) #9, !dbg !6131
  br label %if.end105, !dbg !6131

if.end105:                                        ; preds = %if.then102, %lor.lhs.false100
  br label %out, !dbg !6132

if.end106:                                        ; preds = %if.else
  %65 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6133
  %call107 = call i32 @pci_write_config_word(%struct.pci_dev* %65, i32 6, i16 zeroext -1) #9, !dbg !6134
  %66 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6135
  %call108 = call zeroext i1 @pci_ea_fixed_busnrs(%struct.pci_dev* %66, i8* %fixed_sec, i8* %fixed_sub) #9, !dbg !6136
  %frombool = zext i1 %call108 to i8, !dbg !6137
  store i8 %frombool, i8* %fixed_buses, align 1, !dbg !6137
  %67 = load i8, i8* %fixed_buses, align 1, !dbg !6138
  %tobool109 = trunc i8 %67 to i1, !dbg !6138
  br i1 %tobool109, label %if.then110, label %if.else112, !dbg !6140

if.then110:                                       ; preds = %if.end106
  %68 = load i8, i8* %fixed_sec, align 1, !dbg !6141
  %conv111 = zext i8 %68 to i32, !dbg !6141
  store i32 %conv111, i32* %next_busnr, align 4, !dbg !6142
  br label %if.end113, !dbg !6143

if.else112:                                       ; preds = %if.end106
  %69 = load i32, i32* %max.addr, align 4, !dbg !6144
  %add = add i32 %69, 1, !dbg !6145
  store i32 %add, i32* %next_busnr, align 4, !dbg !6146
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.then110
  %70 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6147
  %call114 = call i32 @pci_domain_nr(%struct.pci_bus* %70) #9, !dbg !6148
  %71 = load i32, i32* %next_busnr, align 4, !dbg !6149
  %call115 = call %struct.pci_bus* @pci_find_bus(i32 %call114, i32 %71) #9, !dbg !6150
  store %struct.pci_bus* %call115, %struct.pci_bus** %child, align 8, !dbg !6151
  %72 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6152
  %tobool116 = icmp ne %struct.pci_bus* %72, null, !dbg !6152
  br i1 %tobool116, label %if.end124, label %if.then117, !dbg !6154

if.then117:                                       ; preds = %if.end113
  %73 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6155
  %74 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6157
  %75 = load i32, i32* %next_busnr, align 4, !dbg !6158
  %call118 = call %struct.pci_bus* @pci_add_new_bus(%struct.pci_bus* %73, %struct.pci_dev* %74, i32 %75) #9, !dbg !6159
  store %struct.pci_bus* %call118, %struct.pci_bus** %child, align 8, !dbg !6160
  %76 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6161
  %tobool119 = icmp ne %struct.pci_bus* %76, null, !dbg !6161
  br i1 %tobool119, label %if.end121, label %if.then120, !dbg !6163

if.then120:                                       ; preds = %if.then117
  br label %out, !dbg !6164

if.end121:                                        ; preds = %if.then117
  %77 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6165
  %78 = load i32, i32* %next_busnr, align 4, !dbg !6166
  %79 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6167
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %79, i32 0, i32 8, !dbg !6168
  %end = getelementptr inbounds %struct.resource, %struct.resource* %busn_res, i32 0, i32 1, !dbg !6169
  %80 = load i64, i64* %end, align 8, !dbg !6169
  %conv122 = trunc i64 %80 to i32, !dbg !6167
  %call123 = call i32 @pci_bus_insert_busn_res(%struct.pci_bus* %77, i32 %78, i32 %conv122) #9, !dbg !6170
  br label %if.end124, !dbg !6171

if.end124:                                        ; preds = %if.end121, %if.end113
  %81 = load i32, i32* %max.addr, align 4, !dbg !6172
  %inc = add i32 %81, 1, !dbg !6172
  store i32 %inc, i32* %max.addr, align 4, !dbg !6172
  %82 = load i32, i32* %available_buses.addr, align 4, !dbg !6173
  %tobool125 = icmp ne i32 %82, 0, !dbg !6173
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !6175

if.then126:                                       ; preds = %if.end124
  %83 = load i32, i32* %available_buses.addr, align 4, !dbg !6176
  %dec = add i32 %83, -1, !dbg !6176
  store i32 %dec, i32* %available_buses.addr, align 4, !dbg !6176
  br label %if.end127, !dbg !6177

if.end127:                                        ; preds = %if.then126, %if.end124
  %84 = load i32, i32* %buses, align 4, !dbg !6178
  %and128 = and i32 %84, -16777216, !dbg !6179
  %85 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6180
  %primary129 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %85, i32 0, i32 14, !dbg !6181
  %86 = load i8, i8* %primary129, align 1, !dbg !6181
  %conv130 = zext i8 %86 to i32, !dbg !6182
  %shl = shl i32 %conv130, 0, !dbg !6183
  %or = or i32 %and128, %shl, !dbg !6184
  %87 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6185
  %busn_res131 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %87, i32 0, i32 8, !dbg !6186
  %start = getelementptr inbounds %struct.resource, %struct.resource* %busn_res131, i32 0, i32 0, !dbg !6187
  %88 = load i64, i64* %start, align 8, !dbg !6187
  %conv132 = trunc i64 %88 to i32, !dbg !6188
  %shl133 = shl i32 %conv132, 8, !dbg !6189
  %or134 = or i32 %or, %shl133, !dbg !6190
  %89 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6191
  %busn_res135 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %89, i32 0, i32 8, !dbg !6192
  %end136 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res135, i32 0, i32 1, !dbg !6193
  %90 = load i64, i64* %end136, align 8, !dbg !6193
  %conv137 = trunc i64 %90 to i32, !dbg !6194
  %shl138 = shl i32 %conv137, 16, !dbg !6195
  %or139 = or i32 %or134, %shl138, !dbg !6196
  store i32 %or139, i32* %buses, align 4, !dbg !6197
  %91 = load i32, i32* %is_cardbus, align 4, !dbg !6198
  %tobool140 = icmp ne i32 %91, 0, !dbg !6198
  br i1 %tobool140, label %if.then141, label %if.end144, !dbg !6200

if.then141:                                       ; preds = %if.end127
  %92 = load i32, i32* %buses, align 4, !dbg !6201
  %and142 = and i32 %92, 16777215, !dbg !6201
  store i32 %and142, i32* %buses, align 4, !dbg !6201
  %93 = load i32, i32* %buses, align 4, !dbg !6203
  %or143 = or i32 %93, -1342177280, !dbg !6203
  store i32 %or143, i32* %buses, align 4, !dbg !6203
  br label %if.end144, !dbg !6204

if.end144:                                        ; preds = %if.then141, %if.end127
  %94 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6205
  %95 = load i32, i32* %buses, align 4, !dbg !6206
  %call145 = call i32 @pci_write_config_dword(%struct.pci_dev* %94, i32 24, i32 %95) #9, !dbg !6207
  %96 = load i32, i32* %is_cardbus, align 4, !dbg !6208
  %tobool146 = icmp ne i32 %96, 0, !dbg !6208
  br i1 %tobool146, label %if.else150, label %if.then147, !dbg !6210

if.then147:                                       ; preds = %if.end144
  %97 = load i16, i16* %bctl, align 2, !dbg !6211
  %98 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6213
  %bridge_ctl148 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %98, i32 0, i32 18, !dbg !6214
  store i16 %97, i16* %bridge_ctl148, align 4, !dbg !6215
  %99 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6216
  %100 = load i32, i32* %available_buses.addr, align 4, !dbg !6217
  %call149 = call i32 @pci_scan_child_bus_extend(%struct.pci_bus* %99, i32 %100) #9, !dbg !6218
  store i32 %call149, i32* %max.addr, align 4, !dbg !6219
  br label %if.end185, !dbg !6220

if.else150:                                       ; preds = %if.end144
  store i32 0, i32* %i, align 4, !dbg !6221
  br label %for.cond, !dbg !6224

for.cond:                                         ; preds = %for.inc, %if.else150
  %101 = load i32, i32* %i, align 4, !dbg !6225
  %cmp151 = icmp ult i32 %101, 3, !dbg !6227
  br i1 %cmp151, label %for.body, label %for.end, !dbg !6228

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %parent, metadata !6229, metadata !DIExpression()), !dbg !6231
  %102 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6232
  store %struct.pci_bus* %102, %struct.pci_bus** %parent, align 8, !dbg !6231
  %103 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6233
  %call153 = call i32 @pci_domain_nr(%struct.pci_bus* %103) #9, !dbg !6235
  %104 = load i32, i32* %max.addr, align 4, !dbg !6236
  %105 = load i32, i32* %i, align 4, !dbg !6237
  %add154 = add i32 %104, %105, !dbg !6238
  %add155 = add i32 %add154, 1, !dbg !6239
  %call156 = call %struct.pci_bus* @pci_find_bus(i32 %call153, i32 %add155) #9, !dbg !6240
  %tobool157 = icmp ne %struct.pci_bus* %call156, null, !dbg !6240
  br i1 %tobool157, label %if.then158, label %if.end159, !dbg !6241

if.then158:                                       ; preds = %for.body
  br label %for.end, !dbg !6242

if.end159:                                        ; preds = %for.body
  br label %while.cond, !dbg !6243

while.cond:                                       ; preds = %if.end178, %if.end159
  %106 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !6244
  %parent160 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %106, i32 0, i32 1, !dbg !6245
  %107 = load %struct.pci_bus*, %struct.pci_bus** %parent160, align 8, !dbg !6245
  %tobool161 = icmp ne %struct.pci_bus* %107, null, !dbg !6243
  br i1 %tobool161, label %while.body, label %while.end, !dbg !6243

while.body:                                       ; preds = %while.cond
  %call162 = call i32 @pcibios_assign_all_busses() #9, !dbg !6246
  %tobool163 = icmp ne i32 %call162, 0, !dbg !6246
  br i1 %tobool163, label %if.end178, label %land.lhs.true164, !dbg !6249

land.lhs.true164:                                 ; preds = %while.body
  %108 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !6250
  %busn_res165 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %108, i32 0, i32 8, !dbg !6251
  %end166 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res165, i32 0, i32 1, !dbg !6252
  %109 = load i64, i64* %end166, align 8, !dbg !6252
  %110 = load i32, i32* %max.addr, align 4, !dbg !6253
  %conv167 = sext i32 %110 to i64, !dbg !6253
  %cmp168 = icmp ugt i64 %109, %conv167, !dbg !6254
  br i1 %cmp168, label %land.lhs.true170, label %if.end178, !dbg !6255

land.lhs.true170:                                 ; preds = %land.lhs.true164
  %111 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !6256
  %busn_res171 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %111, i32 0, i32 8, !dbg !6257
  %end172 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res171, i32 0, i32 1, !dbg !6258
  %112 = load i64, i64* %end172, align 8, !dbg !6258
  %113 = load i32, i32* %max.addr, align 4, !dbg !6259
  %114 = load i32, i32* %i, align 4, !dbg !6260
  %add173 = add i32 %113, %114, !dbg !6261
  %conv174 = zext i32 %add173 to i64, !dbg !6259
  %cmp175 = icmp ule i64 %112, %conv174, !dbg !6262
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !6263

if.then177:                                       ; preds = %land.lhs.true170
  store i32 1, i32* %j, align 4, !dbg !6264
  br label %if.end178, !dbg !6266

if.end178:                                        ; preds = %if.then177, %land.lhs.true170, %land.lhs.true164, %while.body
  %115 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !6267
  %parent179 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %115, i32 0, i32 1, !dbg !6268
  %116 = load %struct.pci_bus*, %struct.pci_bus** %parent179, align 8, !dbg !6268
  store %struct.pci_bus* %116, %struct.pci_bus** %parent, align 8, !dbg !6269
  br label %while.cond, !dbg !6243, !llvm.loop !6270

while.end:                                        ; preds = %while.cond
  %117 = load i32, i32* %j, align 4, !dbg !6272
  %tobool180 = icmp ne i32 %117, 0, !dbg !6272
  br i1 %tobool180, label %if.then181, label %if.end182, !dbg !6274

if.then181:                                       ; preds = %while.end
  %118 = load i32, i32* %i, align 4, !dbg !6275
  %div = udiv i32 %118, 2, !dbg !6275
  store i32 %div, i32* %i, align 4, !dbg !6275
  br label %for.end, !dbg !6277

if.end182:                                        ; preds = %while.end
  br label %for.inc, !dbg !6278

for.inc:                                          ; preds = %if.end182
  %119 = load i32, i32* %i, align 4, !dbg !6279
  %inc183 = add i32 %119, 1, !dbg !6279
  store i32 %inc183, i32* %i, align 4, !dbg !6279
  br label %for.cond, !dbg !6280, !llvm.loop !6281

for.end:                                          ; preds = %if.then181, %if.then158, %for.cond
  %120 = load i32, i32* %i, align 4, !dbg !6283
  %121 = load i32, i32* %max.addr, align 4, !dbg !6284
  %add184 = add i32 %121, %120, !dbg !6284
  store i32 %add184, i32* %max.addr, align 4, !dbg !6284
  br label %if.end185

if.end185:                                        ; preds = %for.end, %if.then147
  %122 = load i8, i8* %fixed_buses, align 1, !dbg !6285
  %tobool186 = trunc i8 %122 to i1, !dbg !6285
  br i1 %tobool186, label %if.then187, label %if.end189, !dbg !6287

if.then187:                                       ; preds = %if.end185
  %123 = load i8, i8* %fixed_sub, align 1, !dbg !6288
  %conv188 = zext i8 %123 to i32, !dbg !6288
  store i32 %conv188, i32* %max.addr, align 4, !dbg !6289
  br label %if.end189, !dbg !6290

if.end189:                                        ; preds = %if.then187, %if.end185
  %124 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6291
  %125 = load i32, i32* %max.addr, align 4, !dbg !6292
  %call190 = call i32 @pci_bus_update_busn_res_end(%struct.pci_bus* %124, i32 %125) #9, !dbg !6293
  %126 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6294
  %127 = load i32, i32* %max.addr, align 4, !dbg !6295
  %conv191 = trunc i32 %127 to i8, !dbg !6295
  %call192 = call i32 @pci_write_config_byte(%struct.pci_dev* %126, i32 26, i8 zeroext %conv191) #9, !dbg !6296
  br label %if.end193

if.end193:                                        ; preds = %if.end189, %if.end93
  %128 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6297
  %name = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %128, i32 0, i32 17, !dbg !6298
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %name, i64 0, i64 0, !dbg !6297
  %129 = load i32, i32* %is_cardbus, align 4, !dbg !6299
  %tobool194 = icmp ne i32 %129, 0, !dbg !6299
  %130 = zext i1 %tobool194 to i64, !dbg !6299
  %cond = select i1 %tobool194, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), !dbg !6299
  %131 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6300
  %call195 = call i32 @pci_domain_nr(%struct.pci_bus* %131) #9, !dbg !6301
  %132 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6302
  %number196 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %132, i32 0, i32 13, !dbg !6303
  %133 = load i8, i8* %number196, align 8, !dbg !6303
  %conv197 = zext i8 %133 to i32, !dbg !6302
  %call198 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* %cond, i32 %call195, i32 %conv197) #9, !dbg !6304
  br label %while.cond199, !dbg !6305

while.cond199:                                    ; preds = %if.end233, %if.end193
  %134 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6306
  %parent200 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %134, i32 0, i32 1, !dbg !6307
  %135 = load %struct.pci_bus*, %struct.pci_bus** %parent200, align 8, !dbg !6307
  %tobool201 = icmp ne %struct.pci_bus* %135, null, !dbg !6305
  br i1 %tobool201, label %while.body202, label %while.end235, !dbg !6305

while.body202:                                    ; preds = %while.cond199
  %136 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6308
  %busn_res203 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %136, i32 0, i32 8, !dbg !6311
  %end204 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res203, i32 0, i32 1, !dbg !6312
  %137 = load i64, i64* %end204, align 8, !dbg !6312
  %138 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6313
  %busn_res205 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %138, i32 0, i32 8, !dbg !6314
  %end206 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res205, i32 0, i32 1, !dbg !6315
  %139 = load i64, i64* %end206, align 8, !dbg !6315
  %cmp207 = icmp ugt i64 %137, %139, !dbg !6316
  br i1 %cmp207, label %if.then230, label %lor.lhs.false209, !dbg !6317

lor.lhs.false209:                                 ; preds = %while.body202
  %140 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6318
  %number210 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %140, i32 0, i32 13, !dbg !6319
  %141 = load i8, i8* %number210, align 8, !dbg !6319
  %conv211 = zext i8 %141 to i64, !dbg !6318
  %142 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6320
  %busn_res212 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %142, i32 0, i32 8, !dbg !6321
  %end213 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res212, i32 0, i32 1, !dbg !6322
  %143 = load i64, i64* %end213, align 8, !dbg !6322
  %cmp214 = icmp ugt i64 %conv211, %143, !dbg !6323
  br i1 %cmp214, label %if.then230, label %lor.lhs.false216, !dbg !6324

lor.lhs.false216:                                 ; preds = %lor.lhs.false209
  %144 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6325
  %number217 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %144, i32 0, i32 13, !dbg !6326
  %145 = load i8, i8* %number217, align 8, !dbg !6326
  %conv218 = zext i8 %145 to i32, !dbg !6325
  %146 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6327
  %number219 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %146, i32 0, i32 13, !dbg !6328
  %147 = load i8, i8* %number219, align 8, !dbg !6328
  %conv220 = zext i8 %147 to i32, !dbg !6327
  %cmp221 = icmp slt i32 %conv218, %conv220, !dbg !6329
  br i1 %cmp221, label %if.then230, label %lor.lhs.false223, !dbg !6330

lor.lhs.false223:                                 ; preds = %lor.lhs.false216
  %148 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6331
  %busn_res224 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %148, i32 0, i32 8, !dbg !6332
  %end225 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res224, i32 0, i32 1, !dbg !6333
  %149 = load i64, i64* %end225, align 8, !dbg !6333
  %150 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6334
  %number226 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %150, i32 0, i32 13, !dbg !6335
  %151 = load i8, i8* %number226, align 8, !dbg !6335
  %conv227 = zext i8 %151 to i64, !dbg !6334
  %cmp228 = icmp ult i64 %149, %conv227, !dbg !6336
  br i1 %cmp228, label %if.then230, label %if.end233, !dbg !6337

if.then230:                                       ; preds = %lor.lhs.false223, %lor.lhs.false216, %lor.lhs.false209, %while.body202
  %152 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6338
  %dev231 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %152, i32 0, i32 41, !dbg !6338
  %153 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6338
  %busn_res232 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %153, i32 0, i32 8, !dbg !6338
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev231, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.64, i64 0, i64 0), %struct.resource* %busn_res232) #10, !dbg !6338
  br label %while.end235, !dbg !6340

if.end233:                                        ; preds = %lor.lhs.false223
  %154 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6341
  %parent234 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %154, i32 0, i32 1, !dbg !6342
  %155 = load %struct.pci_bus*, %struct.pci_bus** %parent234, align 8, !dbg !6342
  store %struct.pci_bus* %155, %struct.pci_bus** %bus.addr, align 8, !dbg !6343
  br label %while.cond199, !dbg !6305, !llvm.loop !6344

while.end235:                                     ; preds = %if.then230, %while.cond199
  br label %out, !dbg !6305

out:                                              ; preds = %while.end235, %if.then120, %if.end105, %if.then73, %if.then63
  call void @llvm.dbg.label(metadata !6346), !dbg !6347
  %156 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6348
  %157 = load i16, i16* %bctl, align 2, !dbg !6349
  %call236 = call i32 @pci_write_config_word(%struct.pci_dev* %156, i32 62, i16 zeroext %157) #9, !dbg !6350
  %158 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6351
  %dev237 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %158, i32 0, i32 41, !dbg !6352
  %call238 = call i32 @pm_runtime_put(%struct.device* %dev237) #9, !dbg !6353
  %159 = load i32, i32* %max.addr, align 4, !dbg !6354
  ret i32 %159, !dbg !6355
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @set_pcie_port_type(%struct.pci_dev* %pdev) #0 !dbg !6356 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %reg16 = alloca i16, align 2
  %type = alloca i32, align 4
  %parent = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6357, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6359, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.declare(metadata i16* %reg16, metadata !6361, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6363, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %parent, metadata !6365, metadata !DIExpression()), !dbg !6366
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6367
  %call = call i32 @pci_find_capability(%struct.pci_dev* %0, i32 16) #9, !dbg !6368
  store i32 %call, i32* %pos, align 4, !dbg !6369
  %1 = load i32, i32* %pos, align 4, !dbg !6370
  %tobool = icmp ne i32 %1, 0, !dbg !6370
  br i1 %tobool, label %if.end, label %if.then, !dbg !6372

if.then:                                          ; preds = %entry
  br label %if.end41, !dbg !6373

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %pos, align 4, !dbg !6374
  %conv = trunc i32 %2 to i8, !dbg !6374
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6375
  %pcie_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 14, !dbg !6376
  store i8 %conv, i8* %pcie_cap, align 2, !dbg !6377
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6378
  %5 = load i32, i32* %pos, align 4, !dbg !6379
  %add = add i32 %5, 2, !dbg !6380
  %call1 = call i32 @pci_read_config_word(%struct.pci_dev* %4, i32 %add, i16* %reg16) #9, !dbg !6381
  %6 = load i16, i16* %reg16, align 2, !dbg !6382
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6383
  %pcie_flags_reg = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 20, !dbg !6384
  store i16 %6, i16* %pcie_flags_reg, align 8, !dbg !6385
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6386
  %9 = load i32, i32* %pos, align 4, !dbg !6387
  %add2 = add i32 %9, 4, !dbg !6388
  %call3 = call i32 @pci_read_config_word(%struct.pci_dev* %8, i32 %add2, i16* %reg16) #9, !dbg !6389
  %10 = load i16, i16* %reg16, align 2, !dbg !6390
  %conv4 = zext i16 %10 to i32, !dbg !6390
  %and = and i32 %conv4, 7, !dbg !6391
  %conv5 = trunc i32 %and to i8, !dbg !6390
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6392
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 17, !dbg !6393
  %bf.load = load i8, i8* %pcie_mpss, align 1, !dbg !6394
  %bf.value = and i8 %conv5, 7, !dbg !6394
  %bf.clear = and i8 %bf.load, -8, !dbg !6394
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !6394
  store i8 %bf.set, i8* %pcie_mpss, align 1, !dbg !6394
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6395
  %call6 = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %12) #9, !dbg !6396
  store %struct.pci_dev* %call6, %struct.pci_dev** %parent, align 8, !dbg !6397
  %13 = load %struct.pci_dev*, %struct.pci_dev** %parent, align 8, !dbg !6398
  %tobool7 = icmp ne %struct.pci_dev* %13, null, !dbg !6398
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !6400

if.then8:                                         ; preds = %if.end
  br label %if.end41, !dbg !6401

if.end9:                                          ; preds = %if.end
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6402
  %call10 = call i32 @pci_pcie_type(%struct.pci_dev* %14) #9, !dbg !6403
  store i32 %call10, i32* %type, align 4, !dbg !6404
  %15 = load i32, i32* %type, align 4, !dbg !6405
  %cmp = icmp eq i32 %15, 6, !dbg !6407
  br i1 %cmp, label %if.then12, label %if.else, !dbg !6408

if.then12:                                        ; preds = %if.end9
  %16 = load %struct.pci_dev*, %struct.pci_dev** %parent, align 8, !dbg !6409
  %call13 = call zeroext i1 @pcie_downstream_port(%struct.pci_dev* %16) #9, !dbg !6412
  br i1 %call13, label %if.then14, label %if.end22, !dbg !6413

if.then14:                                        ; preds = %if.then12
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6414
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !6414
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0)) #10, !dbg !6414
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6416
  %pcie_flags_reg15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 20, !dbg !6417
  %19 = load i16, i16* %pcie_flags_reg15, align 8, !dbg !6418
  %conv16 = zext i16 %19 to i32, !dbg !6418
  %and17 = and i32 %conv16, -241, !dbg !6418
  %conv18 = trunc i32 %and17 to i16, !dbg !6418
  store i16 %conv18, i16* %pcie_flags_reg15, align 8, !dbg !6418
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6419
  %pcie_flags_reg19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 20, !dbg !6420
  %21 = load i16, i16* %pcie_flags_reg19, align 8, !dbg !6421
  %conv20 = zext i16 %21 to i32, !dbg !6421
  %or = or i32 %conv20, 5, !dbg !6421
  %conv21 = trunc i32 %or to i16, !dbg !6421
  store i16 %conv21, i16* %pcie_flags_reg19, align 8, !dbg !6421
  br label %if.end22, !dbg !6422

if.end22:                                         ; preds = %if.then14, %if.then12
  br label %if.end41, !dbg !6423

if.else:                                          ; preds = %if.end9
  %22 = load i32, i32* %type, align 4, !dbg !6424
  %cmp23 = icmp eq i32 %22, 5, !dbg !6426
  br i1 %cmp23, label %if.then25, label %if.end40, !dbg !6427

if.then25:                                        ; preds = %if.else
  %23 = load %struct.pci_dev*, %struct.pci_dev** %parent, align 8, !dbg !6428
  %call26 = call i32 @pci_pcie_type(%struct.pci_dev* %23) #9, !dbg !6431
  %cmp27 = icmp eq i32 %call26, 5, !dbg !6432
  br i1 %cmp27, label %if.then29, label %if.end39, !dbg !6433

if.then29:                                        ; preds = %if.then25
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6434
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !6434
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev30, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.30, i64 0, i64 0)) #10, !dbg !6434
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6436
  %pcie_flags_reg31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 20, !dbg !6437
  %26 = load i16, i16* %pcie_flags_reg31, align 8, !dbg !6438
  %conv32 = zext i16 %26 to i32, !dbg !6438
  %and33 = and i32 %conv32, -241, !dbg !6438
  %conv34 = trunc i32 %and33 to i16, !dbg !6438
  store i16 %conv34, i16* %pcie_flags_reg31, align 8, !dbg !6438
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6439
  %pcie_flags_reg35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 20, !dbg !6440
  %28 = load i16, i16* %pcie_flags_reg35, align 8, !dbg !6441
  %conv36 = zext i16 %28 to i32, !dbg !6441
  %or37 = or i32 %conv36, 6, !dbg !6441
  %conv38 = trunc i32 %or37 to i16, !dbg !6441
  store i16 %conv38, i16* %pcie_flags_reg35, align 8, !dbg !6441
  br label %if.end39, !dbg !6442

if.end39:                                         ; preds = %if.then29, %if.then25
  br label %if.end40, !dbg !6443

if.end40:                                         ; preds = %if.end39, %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.then, %if.then8, %if.end40, %if.end22
  ret void, !dbg !6444
}

; Function Attrs: noredzone
declare dso_local i32 @pci_find_capability(%struct.pci_dev*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %dev) #0 !dbg !6445 {
entry:
  %retval = alloca %struct.pci_dev*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6448, metadata !DIExpression()), !dbg !6449
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6450
  %call = call %struct.pci_dev* @pci_physfn(%struct.pci_dev* %0) #9, !dbg !6451
  store %struct.pci_dev* %call, %struct.pci_dev** %dev.addr, align 8, !dbg !6452
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6453
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 1, !dbg !6455
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6455
  %call1 = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %2) #9, !dbg !6456
  br i1 %call1, label %if.then, label %if.end, !dbg !6457

if.then:                                          ; preds = %entry
  store %struct.pci_dev* null, %struct.pci_dev** %retval, align 8, !dbg !6458
  br label %return, !dbg !6458

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6459
  %bus2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 1, !dbg !6460
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus2, align 8, !dbg !6460
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 4, !dbg !6461
  %5 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !6461
  store %struct.pci_dev* %5, %struct.pci_dev** %retval, align 8, !dbg !6462
  br label %return, !dbg !6462

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.pci_dev*, %struct.pci_dev** %retval, align 8, !dbg !6463
  ret %struct.pci_dev* %6, !dbg !6463
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_pcie_type(%struct.pci_dev* %dev) #0 !dbg !6464 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6467, metadata !DIExpression()), !dbg !6468
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6469
  %call = call zeroext i16 @pcie_caps_reg(%struct.pci_dev* %0) #9, !dbg !6470
  %conv = zext i16 %call to i32, !dbg !6470
  %and = and i32 %conv, 240, !dbg !6471
  %shr = ashr i32 %and, 4, !dbg !6472
  ret i32 %shr, !dbg !6473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pcie_downstream_port(%struct.pci_dev* %dev) #0 !dbg !6474 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %type = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6477, metadata !DIExpression()), !dbg !6478
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6479, metadata !DIExpression()), !dbg !6480
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6481
  %call = call i32 @pci_pcie_type(%struct.pci_dev* %0) #9, !dbg !6482
  store i32 %call, i32* %type, align 4, !dbg !6480
  %1 = load i32, i32* %type, align 4, !dbg !6483
  %cmp = icmp eq i32 %1, 4, !dbg !6484
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !6485

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %type, align 4, !dbg !6486
  %cmp1 = icmp eq i32 %2, 6, !dbg !6487
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !6488

lor.rhs:                                          ; preds = %lor.lhs.false
  %3 = load i32, i32* %type, align 4, !dbg !6489
  %cmp2 = icmp eq i32 %3, 8, !dbg !6490
  br label %lor.end, !dbg !6488

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %4 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %4, !dbg !6491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @set_pcie_hotplug_bridge(%struct.pci_dev* %pdev) #0 !dbg !6492 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %reg32 = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6493, metadata !DIExpression()), !dbg !6494
  call void @llvm.dbg.declare(metadata i32* %reg32, metadata !6495, metadata !DIExpression()), !dbg !6496
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6497
  %call = call i32 @pcie_capability_read_dword(%struct.pci_dev* %0, i32 20, i32* %reg32) #9, !dbg !6498
  %1 = load i32, i32* %reg32, align 4, !dbg !6499
  %and = and i32 %1, 64, !dbg !6501
  %tobool = icmp ne i32 %and, 0, !dbg !6501
  br i1 %tobool, label %if.then, label %if.end, !dbg !6502

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6503
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !6504
  %3 = bitcast [5 x i8]* %is_hotplug_bridge to i40*, !dbg !6504
  %bf.load = load i40, i40* %3, align 1, !dbg !6505
  %bf.clear = and i40 %bf.load, -16777217, !dbg !6505
  %bf.set = or i40 %bf.clear, 16777216, !dbg !6505
  store i40 %bf.set, i40* %3, align 1, !dbg !6505
  br label %if.end, !dbg !6503

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6506
}

; Function Attrs: noredzone
declare dso_local i32 @pcie_capability_read_dword(%struct.pci_dev*, i32, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_cfg_space_size(%struct.pci_dev* %dev) #0 !dbg !6507 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %status = alloca i32, align 4
  %class = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6510, metadata !DIExpression()), !dbg !6511
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6512, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.declare(metadata i16* %class, metadata !6514, metadata !DIExpression()), !dbg !6515
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6516
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6518
  %1 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !6518
  %bf.load = load i40, i40* %1, align 1, !dbg !6518
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !6518
  %bf.clear = and i40 %bf.lshr, 1, !dbg !6518
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !6518
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6516
  br i1 %tobool, label %if.then, label %if.end, !dbg !6519

if.then:                                          ; preds = %entry
  store i32 4096, i32* %retval, align 4, !dbg !6520
  br label %return, !dbg !6520

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6521
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 1, !dbg !6523
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6523
  %bus_flags = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %3, i32 0, i32 19, !dbg !6524
  %4 = load i16, i16* %bus_flags, align 2, !dbg !6524
  %conv = zext i16 %4 to i32, !dbg !6521
  %and = and i32 %conv, 8, !dbg !6525
  %tobool1 = icmp ne i32 %and, 0, !dbg !6525
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !6526

if.then2:                                         ; preds = %if.end
  store i32 256, i32* %retval, align 4, !dbg !6527
  br label %return, !dbg !6527

if.end3:                                          ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6528
  %class4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 11, !dbg !6529
  %6 = load i32, i32* %class4, align 4, !dbg !6529
  %shr = lshr i32 %6, 8, !dbg !6530
  %conv5 = trunc i32 %shr to i16, !dbg !6528
  store i16 %conv5, i16* %class, align 2, !dbg !6531
  %7 = load i16, i16* %class, align 2, !dbg !6532
  %conv6 = zext i16 %7 to i32, !dbg !6532
  %cmp = icmp eq i32 %conv6, 1536, !dbg !6534
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !6535

if.then8:                                         ; preds = %if.end3
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6536
  %call = call i32 @pci_cfg_space_size_ext(%struct.pci_dev* %8) #9, !dbg !6537
  store i32 %call, i32* %retval, align 4, !dbg !6538
  br label %return, !dbg !6538

if.end9:                                          ; preds = %if.end3
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6539
  %call10 = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %9) #9, !dbg !6541
  br i1 %call10, label %if.then11, label %if.end13, !dbg !6542

if.then11:                                        ; preds = %if.end9
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6543
  %call12 = call i32 @pci_cfg_space_size_ext(%struct.pci_dev* %10) #9, !dbg !6544
  store i32 %call12, i32* %retval, align 4, !dbg !6545
  br label %return, !dbg !6545

if.end13:                                         ; preds = %if.end9
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6546
  %call14 = call i32 @pci_find_capability(%struct.pci_dev* %11, i32 7) #9, !dbg !6547
  store i32 %call14, i32* %pos, align 4, !dbg !6548
  %12 = load i32, i32* %pos, align 4, !dbg !6549
  %tobool15 = icmp ne i32 %12, 0, !dbg !6549
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !6551

if.then16:                                        ; preds = %if.end13
  store i32 256, i32* %retval, align 4, !dbg !6552
  br label %return, !dbg !6552

if.end17:                                         ; preds = %if.end13
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6553
  %14 = load i32, i32* %pos, align 4, !dbg !6554
  %add = add i32 %14, 4, !dbg !6555
  %call18 = call i32 @pci_read_config_dword(%struct.pci_dev* %13, i32 %add, i32* %status) #9, !dbg !6556
  %15 = load i32, i32* %status, align 4, !dbg !6557
  %and19 = and i32 %15, -1073741824, !dbg !6559
  %tobool20 = icmp ne i32 %and19, 0, !dbg !6559
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !6560

if.then21:                                        ; preds = %if.end17
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6561
  %call22 = call i32 @pci_cfg_space_size_ext(%struct.pci_dev* %16) #9, !dbg !6562
  store i32 %call22, i32* %retval, align 4, !dbg !6563
  br label %return, !dbg !6563

if.end23:                                         ; preds = %if.end17
  store i32 256, i32* %retval, align 4, !dbg !6564
  br label %return, !dbg !6564

return:                                           ; preds = %if.end23, %if.then21, %if.then16, %if.then11, %if.then8, %if.then2, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !6565
  ret i32 %17, !dbg !6565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_cfg_space_size_ext(%struct.pci_dev* %dev) #0 !dbg !6566 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %status = alloca i32, align 4
  %pos = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6567, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6569, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6571, metadata !DIExpression()), !dbg !6572
  store i32 256, i32* %pos, align 4, !dbg !6572
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6573
  %1 = load i32, i32* %pos, align 4, !dbg !6575
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 %1, i32* %status) #9, !dbg !6576
  %cmp = icmp ne i32 %call, 0, !dbg !6577
  br i1 %cmp, label %if.then, label %if.end, !dbg !6578

if.then:                                          ; preds = %entry
  store i32 256, i32* %retval, align 4, !dbg !6579
  br label %return, !dbg !6579

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %status, align 4, !dbg !6580
  %cmp1 = icmp eq i32 %2, -1, !dbg !6582
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !6583

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6584
  %call2 = call zeroext i1 @pci_ext_cfg_is_aliased(%struct.pci_dev* %3) #9, !dbg !6585
  br i1 %call2, label %if.then3, label %if.end4, !dbg !6586

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 256, i32* %retval, align 4, !dbg !6587
  br label %return, !dbg !6587

if.end4:                                          ; preds = %lor.lhs.false
  store i32 4096, i32* %retval, align 4, !dbg !6588
  br label %return, !dbg !6588

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !6589
  ret i32 %4, !dbg !6589
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_pcie(%struct.pci_dev* %dev) #0 !dbg !6590 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6593, metadata !DIExpression()), !dbg !6594
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6595
  %call = call i32 @pci_pcie_cap(%struct.pci_dev* %0) #9, !dbg !6596
  %tobool = icmp ne i32 %call, 0, !dbg !6596
  ret i1 %tobool, !dbg !6597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_setup_device(%struct.pci_dev* %dev) #0 !dbg !6598 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %class = alloca i32, align 4
  %cmd = alloca i16, align 2
  %hdr_type = alloca i8, align 1
  %pos = alloca i32, align 4
  %region = alloca %struct.pci_bus_region, align 8
  %res = alloca %struct.resource*, align 8
  %progif = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6599, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.declare(metadata i32* %class, metadata !6601, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !6603, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.declare(metadata i8* %hdr_type, metadata !6605, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6607, metadata !DIExpression()), !dbg !6608
  store i32 0, i32* %pos, align 4, !dbg !6608
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %region, metadata !6609, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !6611, metadata !DIExpression()), !dbg !6612
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6613
  %call = call zeroext i8 @pci_hdr_type(%struct.pci_dev* %0) #9, !dbg !6614
  store i8 %call, i8* %hdr_type, align 1, !dbg !6615
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6616
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 1, !dbg !6617
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6617
  %sysdata = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 11, !dbg !6618
  %3 = load i8*, i8** %sysdata, align 8, !dbg !6618
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6619
  %sysdata1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 3, !dbg !6620
  store i8* %3, i8** %sysdata1, align 8, !dbg !6621
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6622
  %bus2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 1, !dbg !6623
  %6 = load %struct.pci_bus*, %struct.pci_bus** %bus2, align 8, !dbg !6623
  %bridge = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 20, !dbg !6624
  %7 = load %struct.device*, %struct.device** %bridge, align 8, !dbg !6624
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6625
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !6626
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 1, !dbg !6627
  store %struct.device* %7, %struct.device** %parent, align 8, !dbg !6628
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6629
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !6630
  %bus5 = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 5, !dbg !6631
  store %struct.bus_type* @pci_bus_type, %struct.bus_type** %bus5, align 8, !dbg !6632
  %10 = load i8, i8* %hdr_type, align 1, !dbg !6633
  %conv = zext i8 %10 to i32, !dbg !6633
  %and = and i32 %conv, 127, !dbg !6634
  %conv6 = trunc i32 %and to i8, !dbg !6633
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6635
  %hdr_type7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 13, !dbg !6636
  store i8 %conv6, i8* %hdr_type7, align 1, !dbg !6637
  %12 = load i8, i8* %hdr_type, align 1, !dbg !6638
  %conv8 = zext i8 %12 to i32, !dbg !6638
  %and9 = and i32 %conv8, 128, !dbg !6639
  %tobool = icmp ne i32 %and9, 0, !dbg !6640
  %lnot = xor i1 %tobool, true, !dbg !6640
  %lnot10 = xor i1 %lnot, true, !dbg !6641
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !6641
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6642
  %multifunction = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 46, !dbg !6643
  %14 = bitcast [5 x i8]* %multifunction to i40*, !dbg !6643
  %15 = zext i32 %lnot.ext to i40, !dbg !6644
  %bf.load = load i40, i40* %14, align 1, !dbg !6644
  %bf.value = and i40 %15, 1, !dbg !6644
  %bf.shl = shl i40 %bf.value, 4, !dbg !6644
  %bf.clear = and i40 %bf.load, -17, !dbg !6644
  %bf.set = or i40 %bf.clear, %bf.shl, !dbg !6644
  store i40 %bf.set, i40* %14, align 1, !dbg !6644
  %bf.result.cast = trunc i40 %bf.value to i32, !dbg !6644
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6645
  %error_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 40, !dbg !6646
  store i32 1, i32* %error_state, align 4, !dbg !6647
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6648
  call void @set_pcie_port_type(%struct.pci_dev* %17) #9, !dbg !6649
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6650
  call void @pci_dev_assign_slot(%struct.pci_dev* %18) #9, !dbg !6651
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6652
  %dma_mask = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 24, !dbg !6653
  store i64 4294967295, i64* %dma_mask, align 8, !dbg !6654
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6655
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !6656
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6657
  %bus12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 1, !dbg !6658
  %22 = load %struct.pci_bus*, %struct.pci_bus** %bus12, align 8, !dbg !6658
  %call13 = call i32 @pci_domain_nr(%struct.pci_bus* %22) #9, !dbg !6659
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6660
  %bus14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 1, !dbg !6661
  %24 = load %struct.pci_bus*, %struct.pci_bus** %bus14, align 8, !dbg !6661
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %24, i32 0, i32 13, !dbg !6662
  %25 = load i8, i8* %number, align 8, !dbg !6662
  %conv15 = zext i8 %25 to i32, !dbg !6660
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6663
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 6, !dbg !6663
  %27 = load i32, i32* %devfn, align 8, !dbg !6663
  %shr = lshr i32 %27, 3, !dbg !6663
  %and16 = and i32 %shr, 31, !dbg !6663
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6664
  %devfn17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 6, !dbg !6664
  %29 = load i32, i32* %devfn17, align 8, !dbg !6664
  %and18 = and i32 %29, 7, !dbg !6664
  %call19 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i32 %call13, i32 %conv15, i32 %and16, i32 %and18) #9, !dbg !6665
  %30 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6666
  %call20 = call i32 @pci_class(%struct.pci_dev* %30) #9, !dbg !6667
  store i32 %call20, i32* %class, align 4, !dbg !6668
  %31 = load i32, i32* %class, align 4, !dbg !6669
  %and21 = and i32 %31, 255, !dbg !6670
  %conv22 = trunc i32 %and21 to i8, !dbg !6669
  %32 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6671
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 12, !dbg !6672
  store i8 %conv22, i8* %revision, align 8, !dbg !6673
  %33 = load i32, i32* %class, align 4, !dbg !6674
  %shr23 = lshr i32 %33, 8, !dbg !6675
  %34 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6676
  %class24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 11, !dbg !6677
  store i32 %shr23, i32* %class24, align 4, !dbg !6678
  %35 = load i8, i8* @pci_early_dump, align 1, !dbg !6679
  %tobool25 = trunc i8 %35 to i1, !dbg !6679
  br i1 %tobool25, label %if.then, label %if.end, !dbg !6681

if.then:                                          ; preds = %entry
  %36 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6682
  call void @early_dump_pci_device(%struct.pci_dev* %36) #9, !dbg !6683
  br label %if.end, !dbg !6683

if.end:                                           ; preds = %if.then, %entry
  %37 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6684
  %call26 = call i32 @pci_cfg_space_size(%struct.pci_dev* %37) #9, !dbg !6685
  %38 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6686
  %cfg_size = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 42, !dbg !6687
  store i32 %call26, i32* %cfg_size, align 8, !dbg !6688
  %39 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6689
  call void @set_pcie_thunderbolt(%struct.pci_dev* %39) #9, !dbg !6690
  %40 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6691
  call void @set_pcie_untrusted(%struct.pci_dev* %40) #9, !dbg !6692
  %41 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6693
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 26, !dbg !6694
  store i32 5, i32* %current_state, align 8, !dbg !6695
  %42 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6696
  call void @pci_fixup_device(i32 0, %struct.pci_dev* %42) #9, !dbg !6697
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6698
  %dev27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 41, !dbg !6698
  %44 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6698
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %44, i32 0, i32 7, !dbg !6698
  %45 = load i16, i16* %vendor, align 4, !dbg !6698
  %conv28 = zext i16 %45 to i32, !dbg !6698
  %46 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6698
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 8, !dbg !6698
  %47 = load i16, i16* %device, align 2, !dbg !6698
  %conv29 = zext i16 %47 to i32, !dbg !6698
  %48 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6698
  %hdr_type30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %48, i32 0, i32 13, !dbg !6698
  %49 = load i8, i8* %hdr_type30, align 1, !dbg !6698
  %conv31 = zext i8 %49 to i32, !dbg !6698
  %50 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6698
  %class32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %50, i32 0, i32 11, !dbg !6698
  %51 = load i32, i32* %class32, align 4, !dbg !6698
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev27, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.32, i64 0, i64 0), i32 %conv28, i32 %conv29, i32 %conv31, i32 %51) #10, !dbg !6698
  %52 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6699
  %class33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %52, i32 0, i32 11, !dbg !6700
  %53 = load i32, i32* %class33, align 4, !dbg !6700
  %shr34 = lshr i32 %53, 8, !dbg !6701
  store i32 %shr34, i32* %class, align 4, !dbg !6702
  %54 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6703
  %non_compliant_bars = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 46, !dbg !6705
  %55 = bitcast [5 x i8]* %non_compliant_bars to i40*, !dbg !6705
  %bf.load35 = load i40, i40* %55, align 1, !dbg !6705
  %bf.lshr = lshr i40 %bf.load35, 32, !dbg !6705
  %bf.clear36 = and i40 %bf.lshr, 1, !dbg !6705
  %bf.cast = trunc i40 %bf.clear36 to i32, !dbg !6705
  %tobool37 = icmp ne i32 %bf.cast, 0, !dbg !6703
  br i1 %tobool37, label %land.lhs.true, label %if.end57, !dbg !6706

land.lhs.true:                                    ; preds = %if.end
  %56 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6707
  %mmio_always_on = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %56, i32 0, i32 29, !dbg !6708
  %57 = bitcast i24* %mmio_always_on to i32*, !dbg !6708
  %bf.load38 = load i32, i32* %57, align 2, !dbg !6708
  %bf.lshr39 = lshr i32 %bf.load38, 12, !dbg !6708
  %bf.clear40 = and i32 %bf.lshr39, 1, !dbg !6708
  %tobool41 = icmp ne i32 %bf.clear40, 0, !dbg !6707
  br i1 %tobool41, label %if.end57, label %if.then42, !dbg !6709

if.then42:                                        ; preds = %land.lhs.true
  %58 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6710
  %call43 = call i32 @pci_read_config_word(%struct.pci_dev* %58, i32 4, i16* %cmd) #9, !dbg !6712
  %59 = load i16, i16* %cmd, align 2, !dbg !6713
  %conv44 = zext i16 %59 to i32, !dbg !6713
  %and45 = and i32 %conv44, 3, !dbg !6715
  %tobool46 = icmp ne i32 %and45, 0, !dbg !6715
  br i1 %tobool46, label %if.then47, label %if.end56, !dbg !6716

if.then47:                                        ; preds = %if.then42
  %60 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6717
  %dev48 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %60, i32 0, i32 41, !dbg !6717
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev48, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !6717
  %61 = load i16, i16* %cmd, align 2, !dbg !6719
  %conv49 = zext i16 %61 to i32, !dbg !6719
  %and50 = and i32 %conv49, -2, !dbg !6719
  %conv51 = trunc i32 %and50 to i16, !dbg !6719
  store i16 %conv51, i16* %cmd, align 2, !dbg !6719
  %62 = load i16, i16* %cmd, align 2, !dbg !6720
  %conv52 = zext i16 %62 to i32, !dbg !6720
  %and53 = and i32 %conv52, -3, !dbg !6720
  %conv54 = trunc i32 %and53 to i16, !dbg !6720
  store i16 %conv54, i16* %cmd, align 2, !dbg !6720
  %63 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6721
  %64 = load i16, i16* %cmd, align 2, !dbg !6722
  %call55 = call i32 @pci_write_config_word(%struct.pci_dev* %63, i32 4, i16 zeroext %64) #9, !dbg !6723
  br label %if.end56, !dbg !6724

if.end56:                                         ; preds = %if.then47, %if.then42
  br label %if.end57, !dbg !6725

if.end57:                                         ; preds = %if.end56, %land.lhs.true, %if.end
  %65 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6726
  %call58 = call i32 @pci_intx_mask_broken(%struct.pci_dev* %65) #9, !dbg !6727
  %66 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6728
  %broken_intx_masking = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %66, i32 0, i32 46, !dbg !6729
  %67 = bitcast [5 x i8]* %broken_intx_masking to i40*, !dbg !6729
  %68 = zext i32 %call58 to i40, !dbg !6730
  %bf.load59 = load i40, i40* %67, align 1, !dbg !6730
  %bf.value60 = and i40 %68, 1, !dbg !6730
  %bf.shl61 = shl i40 %bf.value60, 29, !dbg !6730
  %bf.clear62 = and i40 %bf.load59, -536870913, !dbg !6730
  %bf.set63 = or i40 %bf.clear62, %bf.shl61, !dbg !6730
  store i40 %bf.set63, i40* %67, align 1, !dbg !6730
  %bf.result.cast64 = trunc i40 %bf.value60 to i32, !dbg !6730
  %69 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6731
  %hdr_type65 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %69, i32 0, i32 13, !dbg !6732
  %70 = load i8, i8* %hdr_type65, align 1, !dbg !6732
  %conv66 = zext i8 %70 to i32, !dbg !6731
  switch i32 %conv66, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb110
    i32 2, label %sw.bb129
  ], !dbg !6733

sw.bb:                                            ; preds = %if.end57
  %71 = load i32, i32* %class, align 4, !dbg !6734
  %cmp = icmp eq i32 %71, 1540, !dbg !6737
  br i1 %cmp, label %if.then68, label %if.end69, !dbg !6738

if.then68:                                        ; preds = %sw.bb
  br label %bad, !dbg !6739

if.end69:                                         ; preds = %sw.bb
  %72 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6740
  call void @pci_read_irq(%struct.pci_dev* %72) #9, !dbg !6741
  %73 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6742
  call void @pci_read_bases(%struct.pci_dev* %73, i32 6, i32 48) #9, !dbg !6743
  %74 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6744
  %75 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6745
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %75, i32 0, i32 9, !dbg !6746
  %76 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6747
  %subsystem_device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %76, i32 0, i32 10, !dbg !6748
  call void @pci_subsystem_ids(%struct.pci_dev* %74, i16* %subsystem_vendor, i16* %subsystem_device) #9, !dbg !6749
  %77 = load i32, i32* %class, align 4, !dbg !6750
  %cmp70 = icmp eq i32 %77, 257, !dbg !6752
  br i1 %cmp70, label %if.then72, label %if.end109, !dbg !6753

if.then72:                                        ; preds = %if.end69
  call void @llvm.dbg.declare(metadata i8* %progif, metadata !6754, metadata !DIExpression()), !dbg !6756
  %78 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6757
  %call73 = call i32 @pci_read_config_byte(%struct.pci_dev* %78, i32 9, i8* %progif) #9, !dbg !6758
  %79 = load i8, i8* %progif, align 1, !dbg !6759
  %conv74 = zext i8 %79 to i32, !dbg !6759
  %and75 = and i32 %conv74, 1, !dbg !6761
  %cmp76 = icmp eq i32 %and75, 0, !dbg !6762
  br i1 %cmp76, label %if.then78, label %if.end88, !dbg !6763

if.then78:                                        ; preds = %if.then72
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !6764
  store i64 496, i64* %start, align 8, !dbg !6766
  %end = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !6767
  store i64 503, i64* %end, align 8, !dbg !6768
  %80 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6769
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %80, i32 0, i32 44, !dbg !6770
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !6769
  store %struct.resource* %arrayidx, %struct.resource** %res, align 8, !dbg !6771
  %81 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6772
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %81, i32 0, i32 3, !dbg !6773
  store i64 272, i64* %flags, align 8, !dbg !6774
  %82 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6775
  %bus79 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %82, i32 0, i32 1, !dbg !6776
  %83 = load %struct.pci_bus*, %struct.pci_bus** %bus79, align 8, !dbg !6776
  %84 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6777
  call void @pcibios_bus_to_resource(%struct.pci_bus* %83, %struct.resource* %84, %struct.pci_bus_region* %region) #9, !dbg !6778
  %85 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6779
  %dev80 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %85, i32 0, i32 41, !dbg !6779
  %86 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6779
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev80, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.34, i64 0, i64 0), %struct.resource* %86) #10, !dbg !6779
  %start81 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !6780
  store i64 1014, i64* %start81, align 8, !dbg !6781
  %end82 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !6782
  store i64 1014, i64* %end82, align 8, !dbg !6783
  %87 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6784
  %resource83 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %87, i32 0, i32 44, !dbg !6785
  %arrayidx84 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource83, i64 0, i64 1, !dbg !6784
  store %struct.resource* %arrayidx84, %struct.resource** %res, align 8, !dbg !6786
  %88 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6787
  %flags85 = getelementptr inbounds %struct.resource, %struct.resource* %88, i32 0, i32 3, !dbg !6788
  store i64 272, i64* %flags85, align 8, !dbg !6789
  %89 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6790
  %bus86 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %89, i32 0, i32 1, !dbg !6791
  %90 = load %struct.pci_bus*, %struct.pci_bus** %bus86, align 8, !dbg !6791
  %91 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6792
  call void @pcibios_bus_to_resource(%struct.pci_bus* %90, %struct.resource* %91, %struct.pci_bus_region* %region) #9, !dbg !6793
  %92 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6794
  %dev87 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %92, i32 0, i32 41, !dbg !6794
  %93 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6794
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev87, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35, i64 0, i64 0), %struct.resource* %93) #10, !dbg !6794
  br label %if.end88, !dbg !6795

if.end88:                                         ; preds = %if.then78, %if.then72
  %94 = load i8, i8* %progif, align 1, !dbg !6796
  %conv89 = zext i8 %94 to i32, !dbg !6796
  %and90 = and i32 %conv89, 4, !dbg !6798
  %cmp91 = icmp eq i32 %and90, 0, !dbg !6799
  br i1 %cmp91, label %if.then93, label %if.end108, !dbg !6800

if.then93:                                        ; preds = %if.end88
  %start94 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !6801
  store i64 368, i64* %start94, align 8, !dbg !6803
  %end95 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !6804
  store i64 375, i64* %end95, align 8, !dbg !6805
  %95 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6806
  %resource96 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %95, i32 0, i32 44, !dbg !6807
  %arrayidx97 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource96, i64 0, i64 2, !dbg !6806
  store %struct.resource* %arrayidx97, %struct.resource** %res, align 8, !dbg !6808
  %96 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6809
  %flags98 = getelementptr inbounds %struct.resource, %struct.resource* %96, i32 0, i32 3, !dbg !6810
  store i64 272, i64* %flags98, align 8, !dbg !6811
  %97 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6812
  %bus99 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %97, i32 0, i32 1, !dbg !6813
  %98 = load %struct.pci_bus*, %struct.pci_bus** %bus99, align 8, !dbg !6813
  %99 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6814
  call void @pcibios_bus_to_resource(%struct.pci_bus* %98, %struct.resource* %99, %struct.pci_bus_region* %region) #9, !dbg !6815
  %100 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6816
  %dev100 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %100, i32 0, i32 41, !dbg !6816
  %101 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6816
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev100, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0), %struct.resource* %101) #10, !dbg !6816
  %start101 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !6817
  store i64 886, i64* %start101, align 8, !dbg !6818
  %end102 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !6819
  store i64 886, i64* %end102, align 8, !dbg !6820
  %102 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6821
  %resource103 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %102, i32 0, i32 44, !dbg !6822
  %arrayidx104 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource103, i64 0, i64 3, !dbg !6821
  store %struct.resource* %arrayidx104, %struct.resource** %res, align 8, !dbg !6823
  %103 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6824
  %flags105 = getelementptr inbounds %struct.resource, %struct.resource* %103, i32 0, i32 3, !dbg !6825
  store i64 272, i64* %flags105, align 8, !dbg !6826
  %104 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6827
  %bus106 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %104, i32 0, i32 1, !dbg !6828
  %105 = load %struct.pci_bus*, %struct.pci_bus** %bus106, align 8, !dbg !6828
  %106 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6829
  call void @pcibios_bus_to_resource(%struct.pci_bus* %105, %struct.resource* %106, %struct.pci_bus_region* %region) #9, !dbg !6830
  %107 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6831
  %dev107 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %107, i32 0, i32 41, !dbg !6831
  %108 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6831
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev107, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.37, i64 0, i64 0), %struct.resource* %108) #10, !dbg !6831
  br label %if.end108, !dbg !6832

if.end108:                                        ; preds = %if.then93, %if.end88
  br label %if.end109, !dbg !6833

if.end109:                                        ; preds = %if.end108, %if.end69
  br label %sw.epilog, !dbg !6834

sw.bb110:                                         ; preds = %if.end57
  %109 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6835
  call void @pci_read_irq(%struct.pci_dev* %109) #9, !dbg !6836
  %110 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6837
  %class111 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %110, i32 0, i32 11, !dbg !6838
  %111 = load i32, i32* %class111, align 4, !dbg !6838
  %and112 = and i32 %111, 255, !dbg !6839
  %cmp113 = icmp eq i32 %and112, 1, !dbg !6840
  %conv114 = zext i1 %cmp113 to i32, !dbg !6840
  %112 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6841
  %transparent = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %112, i32 0, i32 46, !dbg !6842
  %113 = bitcast [5 x i8]* %transparent to i40*, !dbg !6842
  %114 = zext i32 %conv114 to i40, !dbg !6843
  %bf.load115 = load i40, i40* %113, align 1, !dbg !6843
  %bf.value116 = and i40 %114, 1, !dbg !6843
  %bf.clear117 = and i40 %bf.load115, -2, !dbg !6843
  %bf.set118 = or i40 %bf.clear117, %bf.value116, !dbg !6843
  store i40 %bf.set118, i40* %113, align 1, !dbg !6843
  %bf.result.cast119 = trunc i40 %bf.value116 to i32, !dbg !6843
  %115 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6844
  call void @pci_read_bases(%struct.pci_dev* %115, i32 2, i32 56) #9, !dbg !6845
  %116 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6846
  call void @pci_read_bridge_windows(%struct.pci_dev* %116) #9, !dbg !6847
  %117 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6848
  call void @set_pcie_hotplug_bridge(%struct.pci_dev* %117) #9, !dbg !6849
  %118 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6850
  %call120 = call i32 @pci_find_capability(%struct.pci_dev* %118, i32 13) #9, !dbg !6851
  store i32 %call120, i32* %pos, align 4, !dbg !6852
  %119 = load i32, i32* %pos, align 4, !dbg !6853
  %tobool121 = icmp ne i32 %119, 0, !dbg !6853
  br i1 %tobool121, label %if.then122, label %if.end128, !dbg !6855

if.then122:                                       ; preds = %sw.bb110
  %120 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6856
  %121 = load i32, i32* %pos, align 4, !dbg !6858
  %add = add i32 %121, 4, !dbg !6859
  %122 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6860
  %subsystem_vendor123 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %122, i32 0, i32 9, !dbg !6861
  %call124 = call i32 @pci_read_config_word(%struct.pci_dev* %120, i32 %add, i16* %subsystem_vendor123) #9, !dbg !6862
  %123 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6863
  %124 = load i32, i32* %pos, align 4, !dbg !6864
  %add125 = add i32 %124, 6, !dbg !6865
  %125 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6866
  %subsystem_device126 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %125, i32 0, i32 10, !dbg !6867
  %call127 = call i32 @pci_read_config_word(%struct.pci_dev* %123, i32 %add125, i16* %subsystem_device126) #9, !dbg !6868
  br label %if.end128, !dbg !6869

if.end128:                                        ; preds = %if.then122, %sw.bb110
  br label %sw.epilog, !dbg !6870

sw.bb129:                                         ; preds = %if.end57
  %126 = load i32, i32* %class, align 4, !dbg !6871
  %cmp130 = icmp ne i32 %126, 1543, !dbg !6873
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !6874

if.then132:                                       ; preds = %sw.bb129
  br label %bad, !dbg !6875

if.end133:                                        ; preds = %sw.bb129
  %127 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6876
  call void @pci_read_irq(%struct.pci_dev* %127) #9, !dbg !6877
  %128 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6878
  call void @pci_read_bases(%struct.pci_dev* %128, i32 1, i32 0) #9, !dbg !6879
  %129 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6880
  %130 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6881
  %subsystem_vendor134 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %130, i32 0, i32 9, !dbg !6882
  %call135 = call i32 @pci_read_config_word(%struct.pci_dev* %129, i32 64, i16* %subsystem_vendor134) #9, !dbg !6883
  %131 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6884
  %132 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6885
  %subsystem_device136 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %132, i32 0, i32 10, !dbg !6886
  %call137 = call i32 @pci_read_config_word(%struct.pci_dev* %131, i32 66, i16* %subsystem_device136) #9, !dbg !6887
  br label %sw.epilog, !dbg !6888

sw.default:                                       ; preds = %if.end57
  %133 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6889
  %dev138 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %133, i32 0, i32 41, !dbg !6889
  %134 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6889
  %hdr_type139 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %134, i32 0, i32 13, !dbg !6889
  %135 = load i8, i8* %hdr_type139, align 1, !dbg !6889
  %conv140 = zext i8 %135 to i32, !dbg !6889
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev138, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.38, i64 0, i64 0), i32 %conv140) #10, !dbg !6889
  store i32 -5, i32* %retval, align 4, !dbg !6890
  br label %return, !dbg !6890

bad:                                              ; preds = %if.then132, %if.then68
  call void @llvm.dbg.label(metadata !6891), !dbg !6892
  %136 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6893
  %dev141 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %136, i32 0, i32 41, !dbg !6893
  %137 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6893
  %class142 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %137, i32 0, i32 11, !dbg !6893
  %138 = load i32, i32* %class142, align 4, !dbg !6893
  %139 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6893
  %hdr_type143 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %139, i32 0, i32 13, !dbg !6893
  %140 = load i8, i8* %hdr_type143, align 1, !dbg !6893
  %conv144 = zext i8 %140 to i32, !dbg !6893
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev141, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.39, i64 0, i64 0), i32 %138, i32 %conv144) #10, !dbg !6893
  %141 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6894
  %class145 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %141, i32 0, i32 11, !dbg !6895
  store i32 0, i32* %class145, align 4, !dbg !6896
  br label %sw.epilog, !dbg !6897

sw.epilog:                                        ; preds = %bad, %if.end133, %if.end128, %if.end109
  store i32 0, i32* %retval, align 4, !dbg !6898
  br label %return, !dbg !6898

return:                                           ; preds = %sw.epilog, %sw.default
  %142 = load i32, i32* %retval, align 4, !dbg !6899
  ret i32 %142, !dbg !6899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @pci_hdr_type(%struct.pci_dev* %dev) #0 !dbg !6900 {
entry:
  %retval = alloca i8, align 1
  %dev.addr = alloca %struct.pci_dev*, align 8
  %hdr_type = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6903, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.declare(metadata i8* %hdr_type, metadata !6905, metadata !DIExpression()), !dbg !6906
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6907
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6909
  %1 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !6909
  %bf.load = load i40, i40* %1, align 1, !dbg !6909
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !6909
  %bf.clear = and i40 %bf.lshr, 1, !dbg !6909
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !6909
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6907
  br i1 %tobool, label %if.then, label %if.end, !dbg !6910

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6911
  %3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 59, !dbg !6912
  %physfn = bitcast %union.anon.69* %3 to %struct.pci_dev**, !dbg !6912
  %4 = load %struct.pci_dev*, %struct.pci_dev** %physfn, align 8, !dbg !6912
  %5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 59, !dbg !6913
  %sriov = bitcast %union.anon.69* %5 to %struct.pci_sriov**, !dbg !6913
  %6 = load %struct.pci_sriov*, %struct.pci_sriov** %sriov, align 8, !dbg !6913
  %hdr_type1 = getelementptr inbounds %struct.pci_sriov, %struct.pci_sriov* %6, i32 0, i32 17, !dbg !6914
  %7 = load i8, i8* %hdr_type1, align 4, !dbg !6914
  store i8 %7, i8* %retval, align 1, !dbg !6915
  br label %return, !dbg !6915

if.end:                                           ; preds = %entry
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6916
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %8, i32 14, i8* %hdr_type) #9, !dbg !6917
  %9 = load i8, i8* %hdr_type, align 1, !dbg !6918
  store i8 %9, i8* %retval, align 1, !dbg !6919
  br label %return, !dbg !6919

return:                                           ; preds = %if.end, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !6920
  ret i8 %10, !dbg !6920
}

; Function Attrs: noredzone
declare dso_local void @pci_dev_assign_slot(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_domain_nr(%struct.pci_bus* %bus) #0 !dbg !6921 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !6923, metadata !DIExpression()), !dbg !6924
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6925
  %call = call %struct.pci_sysdata* @to_pci_sysdata(%struct.pci_bus* %0) #9, !dbg !6926
  %domain = getelementptr inbounds %struct.pci_sysdata, %struct.pci_sysdata* %call, i32 0, i32 0, !dbg !6927
  %1 = load i32, i32* %domain, align 8, !dbg !6927
  ret i32 %1, !dbg !6928
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_class(%struct.pci_dev* %dev) #0 !dbg !6929 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %class = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6932, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.declare(metadata i32* %class, metadata !6934, metadata !DIExpression()), !dbg !6935
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6936
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6938
  %1 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !6938
  %bf.load = load i40, i40* %1, align 1, !dbg !6938
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !6938
  %bf.clear = and i40 %bf.lshr, 1, !dbg !6938
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !6938
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6936
  br i1 %tobool, label %if.then, label %if.end, !dbg !6939

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6940
  %3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 59, !dbg !6941
  %physfn = bitcast %union.anon.69* %3 to %struct.pci_dev**, !dbg !6941
  %4 = load %struct.pci_dev*, %struct.pci_dev** %physfn, align 8, !dbg !6941
  %5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 59, !dbg !6942
  %sriov = bitcast %union.anon.69* %5 to %struct.pci_sriov**, !dbg !6942
  %6 = load %struct.pci_sriov*, %struct.pci_sriov** %sriov, align 8, !dbg !6942
  %class1 = getelementptr inbounds %struct.pci_sriov, %struct.pci_sriov* %6, i32 0, i32 16, !dbg !6943
  %7 = load i32, i32* %class1, align 8, !dbg !6943
  store i32 %7, i32* %retval, align 4, !dbg !6944
  br label %return, !dbg !6944

if.end:                                           ; preds = %entry
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6945
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %8, i32 8, i32* %class) #9, !dbg !6946
  %9 = load i32, i32* %class, align 4, !dbg !6947
  store i32 %9, i32* %retval, align 4, !dbg !6948
  br label %return, !dbg !6948

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6949
  ret i32 %10, !dbg !6949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @early_dump_pci_device(%struct.pci_dev* %pdev) #0 !dbg !6950 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %value = alloca [64 x i32], align 16
  %i = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6951, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.declare(metadata [64 x i32]* %value, metadata !6953, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6955, metadata !DIExpression()), !dbg !6956
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6957
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !6957
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !6957
  store i32 0, i32* %i, align 4, !dbg !6958
  br label %for.cond, !dbg !6960

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !6961
  %cmp = icmp slt i32 %1, 256, !dbg !6963
  br i1 %cmp, label %for.body, label %for.end, !dbg !6964

for.body:                                         ; preds = %for.cond
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6965
  %3 = load i32, i32* %i, align 4, !dbg !6966
  %4 = load i32, i32* %i, align 4, !dbg !6967
  %div = sdiv i32 %4, 4, !dbg !6968
  %idxprom = sext i32 %div to i64, !dbg !6969
  %arrayidx = getelementptr [64 x i32], [64 x i32]* %value, i64 0, i64 %idxprom, !dbg !6969
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %2, i32 %3, i32* %arrayidx) #9, !dbg !6970
  br label %for.inc, !dbg !6970

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !6971
  %add = add i32 %5, 4, !dbg !6971
  store i32 %add, i32* %i, align 4, !dbg !6971
  br label %for.cond, !dbg !6972, !llvm.loop !6973

for.end:                                          ; preds = %for.cond
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %value, i64 0, i64 0, !dbg !6975
  %6 = bitcast i32* %arraydecay to i8*, !dbg !6975
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i32 2, i32 16, i32 1, i8* %6, i64 256, i1 zeroext false) #9, !dbg !6976
  ret void, !dbg !6977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_pcie_thunderbolt(%struct.pci_dev* %dev) #0 !dbg !6978 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %vsec = alloca i32, align 4
  %header = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6979, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.declare(metadata i32* %vsec, metadata !6981, metadata !DIExpression()), !dbg !6982
  store i32 0, i32* %vsec, align 4, !dbg !6982
  call void @llvm.dbg.declare(metadata i32* %header, metadata !6983, metadata !DIExpression()), !dbg !6984
  br label %while.cond, !dbg !6985

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6986
  %1 = load i32, i32* %vsec, align 4, !dbg !6987
  %call = call i32 @pci_find_next_ext_capability(%struct.pci_dev* %0, i32 %1, i32 11) #9, !dbg !6988
  store i32 %call, i32* %vsec, align 4, !dbg !6989
  %tobool = icmp ne i32 %call, 0, !dbg !6985
  br i1 %tobool, label %while.body, label %while.end, !dbg !6985

while.body:                                       ; preds = %while.cond
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6990
  %3 = load i32, i32* %vsec, align 4, !dbg !6992
  %add = add i32 %3, 4, !dbg !6993
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %2, i32 %add, i32* %header) #9, !dbg !6994
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6995
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 7, !dbg !6997
  %5 = load i16, i16* %vendor, align 4, !dbg !6997
  %conv = zext i16 %5 to i32, !dbg !6995
  %cmp = icmp eq i32 %conv, 32902, !dbg !6998
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6999

land.lhs.true:                                    ; preds = %while.body
  %6 = load i32, i32* %header, align 4, !dbg !7000
  %and = and i32 %6, 65535, !dbg !7000
  %cmp3 = icmp eq i32 %and, 4660, !dbg !7001
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7002

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7003
  %is_thunderbolt = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 46, !dbg !7005
  %8 = bitcast [5 x i8]* %is_thunderbolt to i40*, !dbg !7005
  %bf.load = load i40, i40* %8, align 1, !dbg !7006
  %bf.clear = and i40 %bf.load, -67108865, !dbg !7006
  %bf.set = or i40 %bf.clear, 67108864, !dbg !7006
  store i40 %bf.set, i40* %8, align 1, !dbg !7006
  br label %while.end, !dbg !7007

if.end:                                           ; preds = %land.lhs.true, %while.body
  br label %while.cond, !dbg !6985, !llvm.loop !7008

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !7010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_pcie_untrusted(%struct.pci_dev* %dev) #0 !dbg !7011 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %parent = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7012, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %parent, metadata !7014, metadata !DIExpression()), !dbg !7015
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7016
  %call = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %0) #9, !dbg !7017
  store %struct.pci_dev* %call, %struct.pci_dev** %parent, align 8, !dbg !7018
  %1 = load %struct.pci_dev*, %struct.pci_dev** %parent, align 8, !dbg !7019
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !7019
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7021

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %parent, align 8, !dbg !7022
  %untrusted = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !7023
  %3 = bitcast [5 x i8]* %untrusted to i40*, !dbg !7023
  %bf.load = load i40, i40* %3, align 1, !dbg !7023
  %bf.lshr = lshr i40 %bf.load, 27, !dbg !7023
  %bf.clear = and i40 %bf.lshr, 1, !dbg !7023
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !7023
  %tobool1 = icmp ne i32 %bf.cast, 0, !dbg !7022
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !7024

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.pci_dev*, %struct.pci_dev** %parent, align 8, !dbg !7025
  %external_facing = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 46, !dbg !7026
  %5 = bitcast [5 x i8]* %external_facing to i40*, !dbg !7026
  %bf.load2 = load i40, i40* %5, align 1, !dbg !7026
  %bf.lshr3 = lshr i40 %bf.load2, 28, !dbg !7026
  %bf.clear4 = and i40 %bf.lshr3, 1, !dbg !7026
  %bf.cast5 = trunc i40 %bf.clear4 to i32, !dbg !7026
  %tobool6 = icmp ne i32 %bf.cast5, 0, !dbg !7025
  br i1 %tobool6, label %if.then, label %if.end, !dbg !7027

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7028
  %untrusted7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 46, !dbg !7029
  %7 = bitcast [5 x i8]* %untrusted7 to i40*, !dbg !7029
  %bf.load8 = load i40, i40* %7, align 1, !dbg !7030
  %bf.clear9 = and i40 %bf.load8, -134217729, !dbg !7030
  %bf.set = or i40 %bf.clear9, 134217728, !dbg !7030
  store i40 %bf.set, i40* %7, align 1, !dbg !7030
  br label %if.end, !dbg !7028

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  ret void, !dbg !7031
}

; Function Attrs: noredzone
declare dso_local void @pci_fixup_device(i32, %struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_intx_mask_broken(%struct.pci_dev* %dev) #0 !dbg !7032 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %orig = alloca i16, align 2
  %toggle = alloca i16, align 2
  %new = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7033, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.declare(metadata i16* %orig, metadata !7035, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.declare(metadata i16* %toggle, metadata !7037, metadata !DIExpression()), !dbg !7038
  call void @llvm.dbg.declare(metadata i16* %new, metadata !7039, metadata !DIExpression()), !dbg !7040
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7041
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 4, i16* %orig) #9, !dbg !7042
  %1 = load i16, i16* %orig, align 2, !dbg !7043
  %conv = zext i16 %1 to i32, !dbg !7043
  %xor = xor i32 %conv, 1024, !dbg !7044
  %conv1 = trunc i32 %xor to i16, !dbg !7043
  store i16 %conv1, i16* %toggle, align 2, !dbg !7045
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7046
  %3 = load i16, i16* %toggle, align 2, !dbg !7047
  %call2 = call i32 @pci_write_config_word(%struct.pci_dev* %2, i32 4, i16 zeroext %3) #9, !dbg !7048
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7049
  %call3 = call i32 @pci_read_config_word(%struct.pci_dev* %4, i32 4, i16* %new) #9, !dbg !7050
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7051
  %6 = load i16, i16* %orig, align 2, !dbg !7052
  %call4 = call i32 @pci_write_config_word(%struct.pci_dev* %5, i32 4, i16 zeroext %6) #9, !dbg !7053
  %7 = load i16, i16* %new, align 2, !dbg !7054
  %conv5 = zext i16 %7 to i32, !dbg !7054
  %8 = load i16, i16* %toggle, align 2, !dbg !7056
  %conv6 = zext i16 %8 to i32, !dbg !7056
  %cmp = icmp ne i32 %conv5, %conv6, !dbg !7057
  br i1 %cmp, label %if.then, label %if.end, !dbg !7058

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !7059
  br label %return, !dbg !7059

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7060
  br label %return, !dbg !7060

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7061
  ret i32 %9, !dbg !7061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_read_irq(%struct.pci_dev* %dev) #0 !dbg !7062 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %irq = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7063, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.declare(metadata i8* %irq, metadata !7065, metadata !DIExpression()), !dbg !7066
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7067
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !7069
  %1 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !7069
  %bf.load = load i40, i40* %1, align 1, !dbg !7069
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !7069
  %bf.clear = and i40 %bf.lshr, 1, !dbg !7069
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !7069
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7067
  br i1 %tobool, label %if.then, label %if.end, !dbg !7070

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7071
  %pin = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 19, !dbg !7073
  store i8 0, i8* %pin, align 1, !dbg !7074
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7075
  %irq1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 43, !dbg !7076
  store i32 0, i32* %irq1, align 4, !dbg !7077
  br label %return, !dbg !7078

if.end:                                           ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7079
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %4, i32 61, i8* %irq) #9, !dbg !7080
  %5 = load i8, i8* %irq, align 1, !dbg !7081
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7082
  %pin2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 19, !dbg !7083
  store i8 %5, i8* %pin2, align 1, !dbg !7084
  %7 = load i8, i8* %irq, align 1, !dbg !7085
  %tobool3 = icmp ne i8 %7, 0, !dbg !7085
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !7087

if.then4:                                         ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7088
  %call5 = call i32 @pci_read_config_byte(%struct.pci_dev* %8, i32 60, i8* %irq) #9, !dbg !7089
  br label %if.end6, !dbg !7089

if.end6:                                          ; preds = %if.then4, %if.end
  %9 = load i8, i8* %irq, align 1, !dbg !7090
  %conv = zext i8 %9 to i32, !dbg !7090
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7091
  %irq7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 43, !dbg !7092
  store i32 %conv, i32* %irq7, align 4, !dbg !7093
  br label %return, !dbg !7094

return:                                           ; preds = %if.end6, %if.then
  ret void, !dbg !7094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_read_bases(%struct.pci_dev* %dev, i32 %howmany, i32 %rom) #0 !dbg !7095 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %howmany.addr = alloca i32, align 4
  %rom.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %reg = alloca i32, align 4
  %res = alloca %struct.resource*, align 8
  %res11 = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7098, metadata !DIExpression()), !dbg !7099
  store i32 %howmany, i32* %howmany.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %howmany.addr, metadata !7100, metadata !DIExpression()), !dbg !7101
  store i32 %rom, i32* %rom.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rom.addr, metadata !7102, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !7104, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !7106, metadata !DIExpression()), !dbg !7107
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7108
  %non_compliant_bars = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !7110
  %1 = bitcast [5 x i8]* %non_compliant_bars to i40*, !dbg !7110
  %bf.load = load i40, i40* %1, align 1, !dbg !7110
  %bf.lshr = lshr i40 %bf.load, 32, !dbg !7110
  %bf.clear = and i40 %bf.lshr, 1, !dbg !7110
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !7110
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7108
  br i1 %tobool, label %if.then, label %if.end, !dbg !7111

if.then:                                          ; preds = %entry
  br label %if.end15, !dbg !7112

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7113
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !7115
  %3 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !7115
  %bf.load1 = load i40, i40* %3, align 1, !dbg !7115
  %bf.lshr2 = lshr i40 %bf.load1, 22, !dbg !7115
  %bf.clear3 = and i40 %bf.lshr2, 1, !dbg !7115
  %bf.cast4 = trunc i40 %bf.clear3 to i32, !dbg !7115
  %tobool5 = icmp ne i32 %bf.cast4, 0, !dbg !7113
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7116

if.then6:                                         ; preds = %if.end
  br label %if.end15, !dbg !7117

if.end7:                                          ; preds = %if.end
  store i32 0, i32* %pos, align 4, !dbg !7118
  br label %for.cond, !dbg !7120

for.cond:                                         ; preds = %for.inc, %if.end7
  %4 = load i32, i32* %pos, align 4, !dbg !7121
  %5 = load i32, i32* %howmany.addr, align 4, !dbg !7123
  %cmp = icmp ult i32 %4, %5, !dbg !7124
  br i1 %cmp, label %for.body, label %for.end, !dbg !7125

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !7126, metadata !DIExpression()), !dbg !7128
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7129
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !7130
  %7 = load i32, i32* %pos, align 4, !dbg !7131
  %idxprom = zext i32 %7 to i64, !dbg !7129
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !7129
  store %struct.resource* %arrayidx, %struct.resource** %res, align 8, !dbg !7128
  %8 = load i32, i32* %pos, align 4, !dbg !7132
  %shl = shl i32 %8, 2, !dbg !7133
  %add = add i32 16, %shl, !dbg !7134
  store i32 %add, i32* %reg, align 4, !dbg !7135
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7136
  %10 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !7137
  %11 = load i32, i32* %reg, align 4, !dbg !7138
  %call = call i32 @__pci_read_base(%struct.pci_dev* %9, i32 0, %struct.resource* %10, i32 %11) #9, !dbg !7139
  %12 = load i32, i32* %pos, align 4, !dbg !7140
  %add8 = add i32 %12, %call, !dbg !7140
  store i32 %add8, i32* %pos, align 4, !dbg !7140
  br label %for.inc, !dbg !7141

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %pos, align 4, !dbg !7142
  %inc = add i32 %13, 1, !dbg !7142
  store i32 %inc, i32* %pos, align 4, !dbg !7142
  br label %for.cond, !dbg !7143, !llvm.loop !7144

for.end:                                          ; preds = %for.cond
  %14 = load i32, i32* %rom.addr, align 4, !dbg !7146
  %tobool9 = icmp ne i32 %14, 0, !dbg !7146
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !7148

if.then10:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.resource** %res11, metadata !7149, metadata !DIExpression()), !dbg !7151
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7152
  %resource12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 44, !dbg !7153
  %arrayidx13 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource12, i64 0, i64 6, !dbg !7152
  store %struct.resource* %arrayidx13, %struct.resource** %res11, align 8, !dbg !7151
  %16 = load i32, i32* %rom.addr, align 4, !dbg !7154
  %conv = trunc i32 %16 to i8, !dbg !7154
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7155
  %rom_base_reg = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 18, !dbg !7156
  store i8 %conv, i8* %rom_base_reg, align 2, !dbg !7157
  %18 = load %struct.resource*, %struct.resource** %res11, align 8, !dbg !7158
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %18, i32 0, i32 3, !dbg !7159
  store i64 287232, i64* %flags, align 8, !dbg !7160
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7161
  %20 = load %struct.resource*, %struct.resource** %res11, align 8, !dbg !7162
  %21 = load i32, i32* %rom.addr, align 4, !dbg !7163
  %call14 = call i32 @__pci_read_base(%struct.pci_dev* %19, i32 2, %struct.resource* %20, i32 %21) #9, !dbg !7164
  br label %if.end15, !dbg !7165

if.end15:                                         ; preds = %if.then, %if.then6, %if.then10, %for.end
  ret void, !dbg !7166
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_subsystem_ids(%struct.pci_dev* %dev, i16* %vendor, i16* %device) #0 !dbg !7167 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %vendor.addr = alloca i16*, align 8
  %device.addr = alloca i16*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7171, metadata !DIExpression()), !dbg !7172
  store i16* %vendor, i16** %vendor.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %vendor.addr, metadata !7173, metadata !DIExpression()), !dbg !7174
  store i16* %device, i16** %device.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %device.addr, metadata !7175, metadata !DIExpression()), !dbg !7176
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7177
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !7179
  %1 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !7179
  %bf.load = load i40, i40* %1, align 1, !dbg !7179
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !7179
  %bf.clear = and i40 %bf.lshr, 1, !dbg !7179
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !7179
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7177
  br i1 %tobool, label %if.then, label %if.end, !dbg !7180

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7181
  %3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 59, !dbg !7183
  %physfn = bitcast %union.anon.69* %3 to %struct.pci_dev**, !dbg !7183
  %4 = load %struct.pci_dev*, %struct.pci_dev** %physfn, align 8, !dbg !7183
  %5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 59, !dbg !7184
  %sriov = bitcast %union.anon.69* %5 to %struct.pci_sriov**, !dbg !7184
  %6 = load %struct.pci_sriov*, %struct.pci_sriov** %sriov, align 8, !dbg !7184
  %subsystem_vendor = getelementptr inbounds %struct.pci_sriov, %struct.pci_sriov* %6, i32 0, i32 18, !dbg !7185
  %7 = load i16, i16* %subsystem_vendor, align 2, !dbg !7185
  %8 = load i16*, i16** %vendor.addr, align 8, !dbg !7186
  store i16 %7, i16* %8, align 2, !dbg !7187
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7188
  %10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 59, !dbg !7189
  %physfn1 = bitcast %union.anon.69* %10 to %struct.pci_dev**, !dbg !7189
  %11 = load %struct.pci_dev*, %struct.pci_dev** %physfn1, align 8, !dbg !7189
  %12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 59, !dbg !7190
  %sriov2 = bitcast %union.anon.69* %12 to %struct.pci_sriov**, !dbg !7190
  %13 = load %struct.pci_sriov*, %struct.pci_sriov** %sriov2, align 8, !dbg !7190
  %subsystem_device = getelementptr inbounds %struct.pci_sriov, %struct.pci_sriov* %13, i32 0, i32 19, !dbg !7191
  %14 = load i16, i16* %subsystem_device, align 8, !dbg !7191
  %15 = load i16*, i16** %device.addr, align 8, !dbg !7192
  store i16 %14, i16* %15, align 2, !dbg !7193
  br label %return, !dbg !7194

if.end:                                           ; preds = %entry
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7195
  %17 = load i16*, i16** %vendor.addr, align 8, !dbg !7196
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %16, i32 44, i16* %17) #9, !dbg !7197
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7198
  %19 = load i16*, i16** %device.addr, align 8, !dbg !7199
  %call3 = call i32 @pci_read_config_word(%struct.pci_dev* %18, i32 46, i16* %19) #9, !dbg !7200
  br label %return, !dbg !7201

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7201
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_byte(%struct.pci_dev*, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_read_bridge_windows(%struct.pci_dev* %bridge) #0 !dbg !7202 {
entry:
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %io = alloca i16, align 2
  %pmem = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !7203, metadata !DIExpression()), !dbg !7204
  call void @llvm.dbg.declare(metadata i16* %io, metadata !7205, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.declare(metadata i32* %pmem, metadata !7207, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7209, metadata !DIExpression()), !dbg !7210
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7211
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 28, i16* %io) #9, !dbg !7212
  %1 = load i16, i16* %io, align 2, !dbg !7213
  %tobool = icmp ne i16 %1, 0, !dbg !7213
  br i1 %tobool, label %if.end, label %if.then, !dbg !7215

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7216
  %call1 = call i32 @pci_write_config_word(%struct.pci_dev* %2, i32 28, i16 zeroext -7952) #9, !dbg !7218
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7219
  %call2 = call i32 @pci_read_config_word(%struct.pci_dev* %3, i32 28, i16* %io) #9, !dbg !7220
  %4 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7221
  %call3 = call i32 @pci_write_config_word(%struct.pci_dev* %4, i32 28, i16 zeroext 0) #9, !dbg !7222
  br label %if.end, !dbg !7223

if.end:                                           ; preds = %if.then, %entry
  %5 = load i16, i16* %io, align 2, !dbg !7224
  %tobool4 = icmp ne i16 %5, 0, !dbg !7224
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !7226

if.then5:                                         ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7227
  %io_window = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 46, !dbg !7228
  %7 = bitcast [5 x i8]* %io_window to i40*, !dbg !7228
  %bf.load = load i40, i40* %7, align 1, !dbg !7229
  %bf.clear = and i40 %bf.load, -3, !dbg !7229
  %bf.set = or i40 %bf.clear, 2, !dbg !7229
  store i40 %bf.set, i40* %7, align 1, !dbg !7229
  br label %if.end6, !dbg !7227

if.end6:                                          ; preds = %if.then5, %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7230
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 7, !dbg !7232
  %9 = load i16, i16* %vendor, align 4, !dbg !7232
  %conv = zext i16 %9 to i32, !dbg !7230
  %cmp = icmp eq i32 %conv, 4113, !dbg !7233
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !7234

land.lhs.true:                                    ; preds = %if.end6
  %10 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7235
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 8, !dbg !7236
  %11 = load i16, i16* %device, align 2, !dbg !7236
  %conv8 = zext i16 %11 to i32, !dbg !7235
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !7237
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !7238

if.then11:                                        ; preds = %land.lhs.true
  br label %if.end40, !dbg !7239

if.end12:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7240
  %call13 = call i32 @pci_read_config_dword(%struct.pci_dev* %12, i32 36, i32* %pmem) #9, !dbg !7241
  %13 = load i32, i32* %pmem, align 4, !dbg !7242
  %tobool14 = icmp ne i32 %13, 0, !dbg !7242
  br i1 %tobool14, label %if.end19, label %if.then15, !dbg !7244

if.then15:                                        ; preds = %if.end12
  %14 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7245
  %call16 = call i32 @pci_write_config_dword(%struct.pci_dev* %14, i32 36, i32 -2031632) #9, !dbg !7247
  %15 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7248
  %call17 = call i32 @pci_read_config_dword(%struct.pci_dev* %15, i32 36, i32* %pmem) #9, !dbg !7249
  %16 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7250
  %call18 = call i32 @pci_write_config_dword(%struct.pci_dev* %16, i32 36, i32 0) #9, !dbg !7251
  br label %if.end19, !dbg !7252

if.end19:                                         ; preds = %if.then15, %if.end12
  %17 = load i32, i32* %pmem, align 4, !dbg !7253
  %tobool20 = icmp ne i32 %17, 0, !dbg !7253
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !7255

if.then21:                                        ; preds = %if.end19
  br label %if.end40, !dbg !7256

if.end22:                                         ; preds = %if.end19
  %18 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7257
  %pref_window = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 46, !dbg !7258
  %19 = bitcast [5 x i8]* %pref_window to i40*, !dbg !7258
  %bf.load23 = load i40, i40* %19, align 1, !dbg !7259
  %bf.clear24 = and i40 %bf.load23, -5, !dbg !7259
  %bf.set25 = or i40 %bf.clear24, 4, !dbg !7259
  store i40 %bf.set25, i40* %19, align 1, !dbg !7259
  %20 = load i32, i32* %pmem, align 4, !dbg !7260
  %conv26 = zext i32 %20 to i64, !dbg !7260
  %and = and i64 %conv26, 15, !dbg !7262
  %cmp27 = icmp eq i64 %and, 1, !dbg !7263
  br i1 %cmp27, label %if.then29, label %if.end40, !dbg !7264

if.then29:                                        ; preds = %if.end22
  %21 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7265
  %call30 = call i32 @pci_read_config_dword(%struct.pci_dev* %21, i32 40, i32* %pmem) #9, !dbg !7267
  %22 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7268
  %call31 = call i32 @pci_write_config_dword(%struct.pci_dev* %22, i32 40, i32 -1) #9, !dbg !7269
  %23 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7270
  %call32 = call i32 @pci_read_config_dword(%struct.pci_dev* %23, i32 40, i32* %tmp) #9, !dbg !7271
  %24 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7272
  %25 = load i32, i32* %pmem, align 4, !dbg !7273
  %call33 = call i32 @pci_write_config_dword(%struct.pci_dev* %24, i32 40, i32 %25) #9, !dbg !7274
  %26 = load i32, i32* %tmp, align 4, !dbg !7275
  %tobool34 = icmp ne i32 %26, 0, !dbg !7275
  br i1 %tobool34, label %if.then35, label %if.end39, !dbg !7277

if.then35:                                        ; preds = %if.then29
  %27 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7278
  %pref_64_window = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 46, !dbg !7279
  %28 = bitcast [5 x i8]* %pref_64_window to i40*, !dbg !7279
  %bf.load36 = load i40, i40* %28, align 1, !dbg !7280
  %bf.clear37 = and i40 %bf.load36, -9, !dbg !7280
  %bf.set38 = or i40 %bf.clear37, 8, !dbg !7280
  store i40 %bf.set38, i40* %28, align 1, !dbg !7280
  br label %if.end39, !dbg !7278

if.end39:                                         ; preds = %if.then35, %if.then29
  br label %if.end40, !dbg !7281

if.end40:                                         ; preds = %if.then11, %if.then21, %if.end39, %if.end22
  ret void, !dbg !7282
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_configure_extended_tags(%struct.pci_dev* %dev, i8* %ign) #0 !dbg !7283 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ign.addr = alloca i8*, align 8
  %host = alloca %struct.pci_host_bridge*, align 8
  %cap = alloca i32, align 4
  %ctl = alloca i16, align 2
  %ret = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7286, metadata !DIExpression()), !dbg !7287
  store i8* %ign, i8** %ign.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ign.addr, metadata !7288, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %host, metadata !7290, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.declare(metadata i16* %ctl, metadata !7294, metadata !DIExpression()), !dbg !7295
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7296, metadata !DIExpression()), !dbg !7297
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7298
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #9, !dbg !7300
  br i1 %call, label %if.end, label %if.then, !dbg !7301

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7302
  br label %return, !dbg !7302

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7303
  %call1 = call i32 @pcie_capability_read_dword(%struct.pci_dev* %1, i32 4, i32* %cap) #9, !dbg !7304
  store i32 %call1, i32* %ret, align 4, !dbg !7305
  %2 = load i32, i32* %ret, align 4, !dbg !7306
  %tobool = icmp ne i32 %2, 0, !dbg !7306
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !7308

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7309
  br label %return, !dbg !7309

if.end3:                                          ; preds = %if.end
  %3 = load i32, i32* %cap, align 4, !dbg !7310
  %and = and i32 %3, 32, !dbg !7312
  %tobool4 = icmp ne i32 %and, 0, !dbg !7312
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7313

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !7314
  br label %return, !dbg !7314

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7315
  %call7 = call i32 @pcie_capability_read_word(%struct.pci_dev* %4, i32 8, i16* %ctl) #9, !dbg !7316
  store i32 %call7, i32* %ret, align 4, !dbg !7317
  %5 = load i32, i32* %ret, align 4, !dbg !7318
  %tobool8 = icmp ne i32 %5, 0, !dbg !7318
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7320

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !7321
  br label %return, !dbg !7321

if.end10:                                         ; preds = %if.end6
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7322
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 1, !dbg !7323
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !7323
  %call11 = call %struct.pci_host_bridge* @pci_find_host_bridge(%struct.pci_bus* %7) #9, !dbg !7324
  store %struct.pci_host_bridge* %call11, %struct.pci_host_bridge** %host, align 8, !dbg !7325
  %8 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %host, align 8, !dbg !7326
  %tobool12 = icmp ne %struct.pci_host_bridge* %8, null, !dbg !7326
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !7328

if.then13:                                        ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !7329
  br label %return, !dbg !7329

if.end14:                                         ; preds = %if.end10
  %9 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %host, align 8, !dbg !7330
  %no_ext_tags = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %9, i32 0, i32 13, !dbg !7332
  %bf.load = load i16, i16* %no_ext_tags, align 8, !dbg !7332
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !7332
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7332
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7332
  %tobool15 = icmp ne i32 %bf.cast, 0, !dbg !7330
  br i1 %tobool15, label %if.then16, label %if.end23, !dbg !7333

if.then16:                                        ; preds = %if.end14
  %10 = load i16, i16* %ctl, align 2, !dbg !7334
  %conv = zext i16 %10 to i32, !dbg !7334
  %and17 = and i32 %conv, 256, !dbg !7337
  %tobool18 = icmp ne i32 %and17, 0, !dbg !7337
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !7338

if.then19:                                        ; preds = %if.then16
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7339
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !7339
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev20, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i64 0, i64 0)) #10, !dbg !7339
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7341
  %call21 = call i32 @pcie_capability_clear_word(%struct.pci_dev* %12, i32 8, i16 zeroext 256) #9, !dbg !7342
  br label %if.end22, !dbg !7343

if.end22:                                         ; preds = %if.then19, %if.then16
  store i32 0, i32* %retval, align 4, !dbg !7344
  br label %return, !dbg !7344

if.end23:                                         ; preds = %if.end14
  %13 = load i16, i16* %ctl, align 2, !dbg !7345
  %conv24 = zext i16 %13 to i32, !dbg !7345
  %and25 = and i32 %conv24, 256, !dbg !7347
  %tobool26 = icmp ne i32 %and25, 0, !dbg !7347
  br i1 %tobool26, label %if.end30, label %if.then27, !dbg !7348

if.then27:                                        ; preds = %if.end23
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7349
  %dev28 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !7349
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev28, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i64 0, i64 0)) #10, !dbg !7349
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7351
  %call29 = call i32 @pcie_capability_set_word(%struct.pci_dev* %15, i32 8, i16 zeroext 256) #9, !dbg !7352
  br label %if.end30, !dbg !7353

if.end30:                                         ; preds = %if.then27, %if.end23
  store i32 0, i32* %retval, align 4, !dbg !7354
  br label %return, !dbg !7354

return:                                           ; preds = %if.end30, %if.end22, %if.then13, %if.then9, %if.then5, %if.then2, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !7355
  ret i32 %16, !dbg !7355
}

; Function Attrs: noredzone
declare dso_local i32 @pcie_capability_read_word(%struct.pci_dev*, i32, i16*) #2

; Function Attrs: noredzone
declare dso_local %struct.pci_host_bridge* @pci_find_host_bridge(%struct.pci_bus*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcie_capability_clear_word(%struct.pci_dev* %dev, i32 %pos, i16 zeroext %clear) #0 !dbg !7356 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos.addr = alloca i32, align 4
  %clear.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7359, metadata !DIExpression()), !dbg !7360
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !7361, metadata !DIExpression()), !dbg !7362
  store i16 %clear, i16* %clear.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clear.addr, metadata !7363, metadata !DIExpression()), !dbg !7364
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7365
  %1 = load i32, i32* %pos.addr, align 4, !dbg !7366
  %2 = load i16, i16* %clear.addr, align 2, !dbg !7367
  %call = call i32 @pcie_capability_clear_and_set_word(%struct.pci_dev* %0, i32 %1, i16 zeroext %2, i16 zeroext 0) #9, !dbg !7368
  ret i32 %call, !dbg !7369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcie_capability_set_word(%struct.pci_dev* %dev, i32 %pos, i16 zeroext %set) #0 !dbg !7370 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos.addr = alloca i32, align 4
  %set.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7371, metadata !DIExpression()), !dbg !7372
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !7373, metadata !DIExpression()), !dbg !7374
  store i16 %set, i16* %set.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %set.addr, metadata !7375, metadata !DIExpression()), !dbg !7376
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7377
  %1 = load i32, i32* %pos.addr, align 4, !dbg !7378
  %2 = load i16, i16* %set.addr, align 2, !dbg !7379
  %call = call i32 @pcie_capability_clear_and_set_word(%struct.pci_dev* %0, i32 %1, i16 zeroext 0, i16 zeroext %2) #9, !dbg !7380
  ret i32 %call, !dbg !7381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pcie_relaxed_ordering_enabled(%struct.pci_dev* %dev) #0 !dbg !7382 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %v = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7383, metadata !DIExpression()), !dbg !7384
  call void @llvm.dbg.declare(metadata i16* %v, metadata !7385, metadata !DIExpression()), !dbg !7386
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7387
  %call = call i32 @pcie_capability_read_word(%struct.pci_dev* %0, i32 8, i16* %v) #9, !dbg !7388
  %1 = load i16, i16* %v, align 2, !dbg !7389
  %conv = zext i16 %1 to i32, !dbg !7389
  %and = and i32 %conv, 16, !dbg !7390
  %tobool = icmp ne i32 %and, 0, !dbg !7391
  %lnot = xor i1 %tobool, true, !dbg !7391
  %lnot1 = xor i1 %lnot, true, !dbg !7392
  ret i1 %lnot1, !dbg !7393
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_dev* @pci_alloc_dev(%struct.pci_bus* %bus) #0 !dbg !7394 {
entry:
  %retval = alloca %struct.pci_dev*, align 8
  %bus.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7397, metadata !DIExpression()), !dbg !7398
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !7399, metadata !DIExpression()), !dbg !7400
  %call = call i8* @kzalloc(i64 2408, i32 3264) #9, !dbg !7401
  %0 = bitcast i8* %call to %struct.pci_dev*, !dbg !7401
  store %struct.pci_dev* %0, %struct.pci_dev** %dev, align 8, !dbg !7402
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7403
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !7403
  br i1 %tobool, label %if.end, label %if.then, !dbg !7405

if.then:                                          ; preds = %entry
  store %struct.pci_dev* null, %struct.pci_dev** %retval, align 8, !dbg !7406
  br label %return, !dbg !7406

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7407
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 0, !dbg !7408
  call void @INIT_LIST_HEAD(%struct.list_head* %bus_list) #9, !dbg !7409
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7410
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !7411
  %type = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 4, !dbg !7412
  store %struct.device_type* @pci_dev_type, %struct.device_type** %type, align 8, !dbg !7413
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7414
  %call2 = call %struct.pci_bus* @pci_bus_get(%struct.pci_bus* %4) #9, !dbg !7415
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7416
  %bus3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 1, !dbg !7417
  store %struct.pci_bus* %call2, %struct.pci_bus** %bus3, align 8, !dbg !7418
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7419
  store %struct.pci_dev* %6, %struct.pci_dev** %retval, align 8, !dbg !7420
  br label %return, !dbg !7420

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct.pci_dev*, %struct.pci_dev** %retval, align 8, !dbg !7421
  ret %struct.pci_dev* %7, !dbg !7421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !7422 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  br label %do.body, !dbg !7427

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7428

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7430

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !7428

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7432
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7432
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7432
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !7432
  br label %do.end3, !dbg !7432

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !7428

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7434
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7435
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !7436
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !7437
  ret void, !dbg !7438
}

; Function Attrs: noredzone
declare dso_local %struct.pci_bus* @pci_bus_get(%struct.pci_bus*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_bus_generic_read_dev_vendor_id(%struct.pci_bus* %bus, i32 %devfn, i32* %l, i32 %timeout) #0 !dbg !7439 {
entry:
  %retval = alloca i1, align 1
  %bus.addr = alloca %struct.pci_bus*, align 8
  %devfn.addr = alloca i32, align 4
  %l.addr = alloca i32*, align 8
  %timeout.addr = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  store i32 %devfn, i32* %devfn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devfn.addr, metadata !7444, metadata !DIExpression()), !dbg !7445
  store i32* %l, i32** %l.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %l.addr, metadata !7446, metadata !DIExpression()), !dbg !7447
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7450
  %1 = load i32, i32* %devfn.addr, align 4, !dbg !7452
  %2 = load i32*, i32** %l.addr, align 8, !dbg !7453
  %call = call i32 @pci_bus_read_config_dword(%struct.pci_bus* %0, i32 %1, i32 0, i32* %2) #9, !dbg !7454
  %tobool = icmp ne i32 %call, 0, !dbg !7454
  br i1 %tobool, label %if.then, label %if.end, !dbg !7455

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7456
  br label %return, !dbg !7456

if.end:                                           ; preds = %entry
  %3 = load i32*, i32** %l.addr, align 8, !dbg !7457
  %4 = load i32, i32* %3, align 4, !dbg !7459
  %cmp = icmp eq i32 %4, -1, !dbg !7460
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !7461

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i32*, i32** %l.addr, align 8, !dbg !7462
  %6 = load i32, i32* %5, align 4, !dbg !7463
  %cmp1 = icmp eq i32 %6, 0, !dbg !7464
  br i1 %cmp1, label %if.then6, label %lor.lhs.false2, !dbg !7465

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %7 = load i32*, i32** %l.addr, align 8, !dbg !7466
  %8 = load i32, i32* %7, align 4, !dbg !7467
  %cmp3 = icmp eq i32 %8, 65535, !dbg !7468
  br i1 %cmp3, label %if.then6, label %lor.lhs.false4, !dbg !7469

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %9 = load i32*, i32** %l.addr, align 8, !dbg !7470
  %10 = load i32, i32* %9, align 4, !dbg !7471
  %cmp5 = icmp eq i32 %10, -65536, !dbg !7472
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7473

if.then6:                                         ; preds = %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %if.end
  store i1 false, i1* %retval, align 1, !dbg !7474
  br label %return, !dbg !7474

if.end7:                                          ; preds = %lor.lhs.false4
  %11 = load i32*, i32** %l.addr, align 8, !dbg !7475
  %12 = load i32, i32* %11, align 4, !dbg !7477
  %call8 = call zeroext i1 @pci_bus_crs_vendor_id(i32 %12) #9, !dbg !7478
  br i1 %call8, label %if.then9, label %if.end11, !dbg !7479

if.then9:                                         ; preds = %if.end7
  %13 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7480
  %14 = load i32, i32* %devfn.addr, align 4, !dbg !7481
  %15 = load i32*, i32** %l.addr, align 8, !dbg !7482
  %16 = load i32, i32* %timeout.addr, align 4, !dbg !7483
  %call10 = call zeroext i1 @pci_bus_wait_crs(%struct.pci_bus* %13, i32 %14, i32* %15, i32 %16) #9, !dbg !7484
  store i1 %call10, i1* %retval, align 1, !dbg !7485
  br label %return, !dbg !7485

if.end11:                                         ; preds = %if.end7
  store i1 true, i1* %retval, align 1, !dbg !7486
  br label %return, !dbg !7486

return:                                           ; preds = %if.end11, %if.then9, %if.then6, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !7487
  ret i1 %17, !dbg !7487
}

; Function Attrs: noredzone
declare dso_local i32 @pci_bus_read_config_dword(%struct.pci_bus*, i32, i32, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_bus_crs_vendor_id(i32 %l) #0 !dbg !7488 {
entry:
  %l.addr = alloca i32, align 4
  store i32 %l, i32* %l.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %l.addr, metadata !7491, metadata !DIExpression()), !dbg !7492
  %0 = load i32, i32* %l.addr, align 4, !dbg !7493
  %and = and i32 %0, 65535, !dbg !7494
  %cmp = icmp eq i32 %and, 1, !dbg !7495
  ret i1 %cmp, !dbg !7496
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_bus_wait_crs(%struct.pci_bus* %bus, i32 %devfn, i32* %l, i32 %timeout) #0 !dbg !7497 {
entry:
  %retval = alloca i1, align 1
  %bus.addr = alloca %struct.pci_bus*, align 8
  %devfn.addr = alloca i32, align 4
  %l.addr = alloca i32*, align 8
  %timeout.addr = alloca i32, align 4
  %delay = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7498, metadata !DIExpression()), !dbg !7499
  store i32 %devfn, i32* %devfn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devfn.addr, metadata !7500, metadata !DIExpression()), !dbg !7501
  store i32* %l, i32** %l.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %l.addr, metadata !7502, metadata !DIExpression()), !dbg !7503
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !7504, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !7506, metadata !DIExpression()), !dbg !7507
  store i32 1, i32* %delay, align 4, !dbg !7507
  %0 = load i32*, i32** %l.addr, align 8, !dbg !7508
  %1 = load i32, i32* %0, align 4, !dbg !7510
  %call = call zeroext i1 @pci_bus_crs_vendor_id(i32 %1) #9, !dbg !7511
  br i1 %call, label %if.end, label %if.then, !dbg !7512

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !7513
  br label %return, !dbg !7513

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %timeout.addr, align 4, !dbg !7514
  %tobool = icmp ne i32 %2, 0, !dbg !7514
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !7516

if.then1:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !7517
  br label %return, !dbg !7517

if.end2:                                          ; preds = %if.end
  br label %while.cond, !dbg !7518

while.cond:                                       ; preds = %if.end24, %if.end2
  %3 = load i32*, i32** %l.addr, align 8, !dbg !7519
  %4 = load i32, i32* %3, align 4, !dbg !7520
  %call3 = call zeroext i1 @pci_bus_crs_vendor_id(i32 %4) #9, !dbg !7521
  br i1 %call3, label %while.body, label %while.end, !dbg !7518

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %delay, align 4, !dbg !7522
  %6 = load i32, i32* %timeout.addr, align 4, !dbg !7525
  %cmp = icmp sgt i32 %5, %6, !dbg !7526
  br i1 %cmp, label %if.then4, label %if.end8, !dbg !7527

if.then4:                                         ; preds = %while.body
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7528
  %call5 = call i32 @pci_domain_nr(%struct.pci_bus* %7) #9, !dbg !7528
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7528
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 13, !dbg !7528
  %9 = load i8, i8* %number, align 8, !dbg !7528
  %conv = zext i8 %9 to i32, !dbg !7528
  %10 = load i32, i32* %devfn.addr, align 4, !dbg !7528
  %shr = ashr i32 %10, 3, !dbg !7528
  %and = and i32 %shr, 31, !dbg !7528
  %11 = load i32, i32* %devfn.addr, align 4, !dbg !7528
  %and6 = and i32 %11, 7, !dbg !7528
  %12 = load i32, i32* %delay, align 4, !dbg !7528
  %sub = sub i32 %12, 1, !dbg !7528
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.67, i64 0, i64 0), i32 %call5, i32 %conv, i32 %and, i32 %and6, i32 %sub) #10, !dbg !7528
  store i1 false, i1* %retval, align 1, !dbg !7530
  br label %return, !dbg !7530

if.end8:                                          ; preds = %while.body
  %13 = load i32, i32* %delay, align 4, !dbg !7531
  %cmp9 = icmp sge i32 %13, 1000, !dbg !7533
  br i1 %cmp9, label %if.then11, label %if.end20, !dbg !7534

if.then11:                                        ; preds = %if.end8
  %14 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7535
  %call12 = call i32 @pci_domain_nr(%struct.pci_bus* %14) #9, !dbg !7535
  %15 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7535
  %number13 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %15, i32 0, i32 13, !dbg !7535
  %16 = load i8, i8* %number13, align 8, !dbg !7535
  %conv14 = zext i8 %16 to i32, !dbg !7535
  %17 = load i32, i32* %devfn.addr, align 4, !dbg !7535
  %shr15 = ashr i32 %17, 3, !dbg !7535
  %and16 = and i32 %shr15, 31, !dbg !7535
  %18 = load i32, i32* %devfn.addr, align 4, !dbg !7535
  %and17 = and i32 %18, 7, !dbg !7535
  %19 = load i32, i32* %delay, align 4, !dbg !7535
  %sub18 = sub i32 %19, 1, !dbg !7535
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.68, i64 0, i64 0), i32 %call12, i32 %conv14, i32 %and16, i32 %and17, i32 %sub18) #10, !dbg !7535
  br label %if.end20, !dbg !7535

if.end20:                                         ; preds = %if.then11, %if.end8
  %20 = load i32, i32* %delay, align 4, !dbg !7536
  call void @msleep(i32 %20) #9, !dbg !7537
  %21 = load i32, i32* %delay, align 4, !dbg !7538
  %mul = mul i32 %21, 2, !dbg !7538
  store i32 %mul, i32* %delay, align 4, !dbg !7538
  %22 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7539
  %23 = load i32, i32* %devfn.addr, align 4, !dbg !7541
  %24 = load i32*, i32** %l.addr, align 8, !dbg !7542
  %call21 = call i32 @pci_bus_read_config_dword(%struct.pci_bus* %22, i32 %23, i32 0, i32* %24) #9, !dbg !7543
  %tobool22 = icmp ne i32 %call21, 0, !dbg !7543
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !7544

if.then23:                                        ; preds = %if.end20
  store i1 false, i1* %retval, align 1, !dbg !7545
  br label %return, !dbg !7545

if.end24:                                         ; preds = %if.end20
  br label %while.cond, !dbg !7518, !llvm.loop !7546

while.end:                                        ; preds = %while.cond
  %25 = load i32, i32* %delay, align 4, !dbg !7548
  %cmp25 = icmp sge i32 %25, 1000, !dbg !7550
  br i1 %cmp25, label %if.then27, label %if.end36, !dbg !7551

if.then27:                                        ; preds = %while.end
  %26 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7552
  %call28 = call i32 @pci_domain_nr(%struct.pci_bus* %26) #9, !dbg !7552
  %27 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7552
  %number29 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %27, i32 0, i32 13, !dbg !7552
  %28 = load i8, i8* %number29, align 8, !dbg !7552
  %conv30 = zext i8 %28 to i32, !dbg !7552
  %29 = load i32, i32* %devfn.addr, align 4, !dbg !7552
  %shr31 = ashr i32 %29, 3, !dbg !7552
  %and32 = and i32 %shr31, 31, !dbg !7552
  %30 = load i32, i32* %devfn.addr, align 4, !dbg !7552
  %and33 = and i32 %30, 7, !dbg !7552
  %31 = load i32, i32* %delay, align 4, !dbg !7552
  %sub34 = sub i32 %31, 1, !dbg !7552
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.69, i64 0, i64 0), i32 %call28, i32 %conv30, i32 %and32, i32 %and33, i32 %sub34) #10, !dbg !7552
  br label %if.end36, !dbg !7552

if.end36:                                         ; preds = %if.then27, %while.end
  store i1 true, i1* %retval, align 1, !dbg !7553
  br label %return, !dbg !7553

return:                                           ; preds = %if.end36, %if.then23, %if.then4, %if.then1, %if.then
  %32 = load i1, i1* %retval, align 1, !dbg !7554
  ret i1 %32, !dbg !7554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_bus_read_dev_vendor_id(%struct.pci_bus* %bus, i32 %devfn, i32* %l, i32 %timeout) #0 !dbg !7555 {
entry:
  %retval = alloca i1, align 1
  %bus.addr = alloca %struct.pci_bus*, align 8
  %devfn.addr = alloca i32, align 4
  %l.addr = alloca i32*, align 8
  %timeout.addr = alloca i32, align 4
  %bridge = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7556, metadata !DIExpression()), !dbg !7557
  store i32 %devfn, i32* %devfn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devfn.addr, metadata !7558, metadata !DIExpression()), !dbg !7559
  store i32* %l, i32** %l.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %l.addr, metadata !7560, metadata !DIExpression()), !dbg !7561
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !7562, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !7564, metadata !DIExpression()), !dbg !7565
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7566
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !7567
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !7567
  store %struct.pci_dev* %1, %struct.pci_dev** %bridge, align 8, !dbg !7565
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !7568
  %tobool = icmp ne %struct.pci_dev* %2, null, !dbg !7568
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7570

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !7571
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 7, !dbg !7572
  %4 = load i16, i16* %vendor, align 4, !dbg !7572
  %conv = zext i16 %4 to i32, !dbg !7571
  %cmp = icmp eq i32 %conv, 4381, !dbg !7573
  br i1 %cmp, label %land.lhs.true2, label %if.end, !dbg !7574

land.lhs.true2:                                   ; preds = %land.lhs.true
  %5 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !7575
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 8, !dbg !7576
  %6 = load i16, i16* %device, align 2, !dbg !7576
  %conv3 = zext i16 %6 to i32, !dbg !7575
  %cmp4 = icmp eq i32 %conv3, 32949, !dbg !7577
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7578

if.then:                                          ; preds = %land.lhs.true2
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7579
  %8 = load i32, i32* %devfn.addr, align 4, !dbg !7580
  %9 = load i32*, i32** %l.addr, align 8, !dbg !7581
  %10 = load i32, i32* %timeout.addr, align 4, !dbg !7582
  %call = call i32 @pci_idt_bus_quirk(%struct.pci_bus* %7, i32 %8, i32* %9, i32 %10) #9, !dbg !7583
  %tobool6 = icmp ne i32 %call, 0, !dbg !7583
  store i1 %tobool6, i1* %retval, align 1, !dbg !7584
  br label %return, !dbg !7584

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %11 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7585
  %12 = load i32, i32* %devfn.addr, align 4, !dbg !7586
  %13 = load i32*, i32** %l.addr, align 8, !dbg !7587
  %14 = load i32, i32* %timeout.addr, align 4, !dbg !7588
  %call7 = call zeroext i1 @pci_bus_generic_read_dev_vendor_id(%struct.pci_bus* %11, i32 %12, i32* %13, i32 %14) #9, !dbg !7589
  store i1 %call7, i1* %retval, align 1, !dbg !7590
  br label %return, !dbg !7590

return:                                           ; preds = %if.end, %if.then
  %15 = load i1, i1* %retval, align 1, !dbg !7591
  ret i1 %15, !dbg !7591
}

; Function Attrs: noredzone
declare dso_local i32 @pci_idt_bus_quirk(%struct.pci_bus*, i32, i32*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pcie_report_downtraining(%struct.pci_dev* %dev) #0 !dbg !7592 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7593, metadata !DIExpression()), !dbg !7594
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7595
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #9, !dbg !7597
  br i1 %call, label %if.end, label %if.then, !dbg !7598

if.then:                                          ; preds = %entry
  br label %return, !dbg !7599

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7600
  %call1 = call i32 @pci_pcie_type(%struct.pci_dev* %1) #9, !dbg !7602
  %cmp = icmp ne i32 %call1, 0, !dbg !7603
  br i1 %cmp, label %land.lhs.true, label %if.end8, !dbg !7604

land.lhs.true:                                    ; preds = %if.end
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7605
  %call2 = call i32 @pci_pcie_type(%struct.pci_dev* %2) #9, !dbg !7606
  %cmp3 = icmp ne i32 %call2, 1, !dbg !7607
  br i1 %cmp3, label %land.lhs.true4, label %if.end8, !dbg !7608

land.lhs.true4:                                   ; preds = %land.lhs.true
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7609
  %call5 = call i32 @pci_pcie_type(%struct.pci_dev* %3) #9, !dbg !7610
  %cmp6 = icmp ne i32 %call5, 5, !dbg !7611
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !7612

if.then7:                                         ; preds = %land.lhs.true4
  br label %return, !dbg !7613

if.end8:                                          ; preds = %land.lhs.true4, %land.lhs.true, %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7614
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 6, !dbg !7614
  %5 = load i32, i32* %devfn, align 8, !dbg !7614
  %and = and i32 %5, 7, !dbg !7614
  %cmp9 = icmp ne i32 %and, 0, !dbg !7616
  br i1 %cmp9, label %if.then10, label %lor.lhs.false, !dbg !7617

lor.lhs.false:                                    ; preds = %if.end8
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7618
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 46, !dbg !7619
  %7 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !7619
  %bf.load = load i40, i40* %7, align 1, !dbg !7619
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !7619
  %bf.clear = and i40 %bf.lshr, 1, !dbg !7619
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !7619
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7618
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !7620

if.then10:                                        ; preds = %lor.lhs.false, %if.end8
  br label %return, !dbg !7621

if.end11:                                         ; preds = %lor.lhs.false
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7622
  call void @__pcie_print_link_status(%struct.pci_dev* %8, i1 zeroext false) #9, !dbg !7623
  br label %return, !dbg !7624

return:                                           ; preds = %if.end11, %if.then10, %if.then7, %if.then
  ret void, !dbg !7624
}

; Function Attrs: noredzone
declare dso_local void @__pcie_print_link_status(%struct.pci_dev*, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_device_add(%struct.pci_dev* %dev, %struct.pci_bus* %bus) #0 !dbg !7625 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bus.addr = alloca %struct.pci_bus*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on33 = alloca i32, align 4
  %tmp57 = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7628, metadata !DIExpression()), !dbg !7629
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7632, metadata !DIExpression()), !dbg !7633
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7634
  call void @pci_configure_device(%struct.pci_dev* %0) #9, !dbg !7635
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7636
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !7637
  call void @device_initialize(%struct.device* %dev1) #9, !dbg !7638
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7639
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !7640
  %release = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 31, !dbg !7641
  store void (%struct.device*)* @pci_release_dev, void (%struct.device*)** %release, align 8, !dbg !7642
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7643
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !7644
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7645
  call void @set_dev_node(%struct.device* %dev3, i32 -1) #9, !dbg !7646
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7647
  %dma_mask = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 24, !dbg !7648
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7649
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !7650
  %dma_mask5 = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 16, !dbg !7651
  store i64* %dma_mask, i64** %dma_mask5, align 8, !dbg !7652
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7653
  %dma_parms = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 25, !dbg !7654
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7655
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !7656
  %dma_parms7 = getelementptr inbounds %struct.device, %struct.device* %dev6, i32 0, i32 20, !dbg !7657
  store %struct.device_dma_parameters* %dma_parms, %struct.device_dma_parameters** %dma_parms7, align 8, !dbg !7658
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7659
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !7660
  %coherent_dma_mask = getelementptr inbounds %struct.device, %struct.device* %dev8, i32 0, i32 17, !dbg !7661
  store i64 4294967295, i64* %coherent_dma_mask, align 8, !dbg !7662
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7663
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !7664
  %call = call i32 @dma_set_max_seg_size(%struct.device* %dev9, i32 65536) #9, !dbg !7665
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7666
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !7667
  %call11 = call i32 @dma_set_seg_boundary(%struct.device* %dev10, i64 4294967295) #9, !dbg !7668
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7669
  call void @pci_fixup_device(i32 1, %struct.pci_dev* %12) #9, !dbg !7670
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7671
  call void @pci_reassigndev_resource_alignment(%struct.pci_dev* %13) #9, !dbg !7672
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7673
  %state_saved = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 46, !dbg !7674
  %15 = bitcast [5 x i8]* %state_saved to i40*, !dbg !7674
  %bf.load = load i40, i40* %15, align 1, !dbg !7675
  %bf.clear = and i40 %bf.load, -1048577, !dbg !7675
  store i40 %bf.clear, i40* %15, align 1, !dbg !7675
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7676
  call void @pci_init_capabilities(%struct.pci_dev* %16) #9, !dbg !7677
  call void @down_write(%struct.rw_semaphore* @pci_bus_sem) #9, !dbg !7678
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7679
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 0, !dbg !7680
  %18 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7681
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %18, i32 0, i32 3, !dbg !7682
  call void @list_add_tail(%struct.list_head* %bus_list, %struct.list_head* %devices) #9, !dbg !7683
  call void @up_write(%struct.rw_semaphore* @pci_bus_sem) #9, !dbg !7684
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7685
  %call12 = call i32 @pcibios_add_device(%struct.pci_dev* %19) #9, !dbg !7686
  store i32 %call12, i32* %ret, align 4, !dbg !7687
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7688, metadata !DIExpression()), !dbg !7690
  %20 = load i32, i32* %ret, align 4, !dbg !7690
  %cmp = icmp slt i32 %20, 0, !dbg !7690
  %lnot = xor i1 %cmp, true, !dbg !7690
  %lnot13 = xor i1 %lnot, true, !dbg !7690
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !7690
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7690
  %21 = load i32, i32* %__ret_warn_on, align 4, !dbg !7691
  %tobool = icmp ne i32 %21, 0, !dbg !7691
  %lnot14 = xor i1 %tobool, true, !dbg !7691
  %lnot16 = xor i1 %lnot14, true, !dbg !7691
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !7691
  %conv = sext i32 %lnot.ext17 to i64, !dbg !7691
  %tobool18 = icmp ne i64 %conv, 0, !dbg !7691
  br i1 %tobool18, label %if.then, label %if.end, !dbg !7690

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7691

do.body:                                          ; preds = %if.then
  br label %do.body19, !dbg !7693

do.body19:                                        ; preds = %do.body
  br label %do.end, !dbg !7695

do.end:                                           ; preds = %do.body19
  br label %do.body20, !dbg !7693

do.body20:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0), i32 2504, i32 2305, i64 12) #11, !dbg !7697, !srcloc !7699
  br label %do.end21, !dbg !7697

do.end21:                                         ; preds = %do.body20
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 253) #11, !dbg !7700, !srcloc !7702
  br label %do.body22, !dbg !7693

do.body22:                                        ; preds = %do.end21
  br label %do.end23, !dbg !7703

do.end23:                                         ; preds = %do.body22
  br label %do.end24, !dbg !7693

do.end24:                                         ; preds = %do.end23
  br label %if.end, !dbg !7693

if.end:                                           ; preds = %do.end24, %entry
  %22 = load i32, i32* %__ret_warn_on, align 4, !dbg !7690
  %tobool25 = icmp ne i32 %22, 0, !dbg !7690
  %lnot26 = xor i1 %tobool25, true, !dbg !7690
  %lnot28 = xor i1 %lnot26, true, !dbg !7690
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !7690
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !7690
  store i64 %conv30, i64* %tmp, align 8, !dbg !7691
  %23 = load i64, i64* %tmp, align 8, !dbg !7690
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7705
  call void @pci_set_msi_domain(%struct.pci_dev* %24) #9, !dbg !7706
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7707
  %match_driver = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 45, !dbg !7708
  store i8 0, i8* %match_driver, align 8, !dbg !7709
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7710
  %dev31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !7711
  %call32 = call i32 @device_add(%struct.device* %dev31) #9, !dbg !7712
  store i32 %call32, i32* %ret, align 4, !dbg !7713
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on33, metadata !7714, metadata !DIExpression()), !dbg !7716
  %27 = load i32, i32* %ret, align 4, !dbg !7716
  %cmp34 = icmp slt i32 %27, 0, !dbg !7716
  %lnot36 = xor i1 %cmp34, true, !dbg !7716
  %lnot38 = xor i1 %lnot36, true, !dbg !7716
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !7716
  store i32 %lnot.ext39, i32* %__ret_warn_on33, align 4, !dbg !7716
  %28 = load i32, i32* %__ret_warn_on33, align 4, !dbg !7717
  %tobool40 = icmp ne i32 %28, 0, !dbg !7717
  %lnot41 = xor i1 %tobool40, true, !dbg !7717
  %lnot43 = xor i1 %lnot41, true, !dbg !7717
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !7717
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !7717
  %tobool46 = icmp ne i64 %conv45, 0, !dbg !7717
  br i1 %tobool46, label %if.then47, label %if.end56, !dbg !7716

if.then47:                                        ; preds = %if.end
  br label %do.body48, !dbg !7717

do.body48:                                        ; preds = %if.then47
  br label %do.body49, !dbg !7719

do.body49:                                        ; preds = %do.body48
  br label %do.end50, !dbg !7721

do.end50:                                         ; preds = %do.body49
  br label %do.body51, !dbg !7719

do.body51:                                        ; preds = %do.end50
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0), i32 2512, i32 2305, i64 12) #11, !dbg !7723, !srcloc !7725
  br label %do.end52, !dbg !7723

do.end52:                                         ; preds = %do.body51
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 254) #11, !dbg !7726, !srcloc !7728
  br label %do.body53, !dbg !7719

do.body53:                                        ; preds = %do.end52
  br label %do.end54, !dbg !7729

do.end54:                                         ; preds = %do.body53
  br label %do.end55, !dbg !7719

do.end55:                                         ; preds = %do.end54
  br label %if.end56, !dbg !7719

if.end56:                                         ; preds = %do.end55, %if.end
  %29 = load i32, i32* %__ret_warn_on33, align 4, !dbg !7716
  %tobool58 = icmp ne i32 %29, 0, !dbg !7716
  %lnot59 = xor i1 %tobool58, true, !dbg !7716
  %lnot61 = xor i1 %lnot59, true, !dbg !7716
  %lnot.ext62 = zext i1 %lnot61 to i32, !dbg !7716
  %conv63 = sext i32 %lnot.ext62 to i64, !dbg !7716
  store i64 %conv63, i64* %tmp57, align 8, !dbg !7717
  %30 = load i64, i64* %tmp57, align 8, !dbg !7716
  ret void, !dbg !7731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_configure_device(%struct.pci_dev* %dev) #0 !dbg !7732 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7733, metadata !DIExpression()), !dbg !7734
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7735
  call void @pci_configure_mps(%struct.pci_dev* %0) #9, !dbg !7736
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7737
  %call = call i32 @pci_configure_extended_tags(%struct.pci_dev* %1, i8* null) #9, !dbg !7738
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7739
  call void @pci_configure_relaxed_ordering(%struct.pci_dev* %2) #9, !dbg !7740
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7741
  call void @pci_configure_ltr(%struct.pci_dev* %3) #9, !dbg !7742
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7743
  call void @pci_configure_eetlp_prefix(%struct.pci_dev* %4) #9, !dbg !7744
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7745
  call void @pci_configure_serr(%struct.pci_dev* %5) #9, !dbg !7746
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7747
  %call1 = call i32 @pci_acpi_program_hp_params(%struct.pci_dev* %6) #9, !dbg !7748
  ret void, !dbg !7749
}

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_release_dev(%struct.device* %dev) #0 !dbg !7750 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %pci_dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7751, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev, metadata !7753, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7755, metadata !DIExpression()), !dbg !7757
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7757
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7757
  store i8* %1, i8** %__mptr, align 8, !dbg !7757
  br label %do.body, !dbg !7757

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7758

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7757
  %add.ptr = getelementptr i8, i8* %2, i64 -176, !dbg !7757
  %3 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !7757
  store %struct.pci_dev* %3, %struct.pci_dev** %tmp, align 8, !dbg !7758
  %4 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !7757
  store %struct.pci_dev* %4, %struct.pci_dev** %pci_dev, align 8, !dbg !7760
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !7761
  call void @pci_release_capabilities(%struct.pci_dev* %5) #9, !dbg !7762
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !7763
  call void @pci_release_of_node(%struct.pci_dev* %6) #9, !dbg !7764
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !7765
  call void @pcibios_release_device(%struct.pci_dev* %7) #9, !dbg !7766
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !7767
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 1, !dbg !7768
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !7768
  call void @pci_bus_put(%struct.pci_bus* %9) #9, !dbg !7769
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !7770
  %driver_override = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 67, !dbg !7771
  %11 = load i8*, i8** %driver_override, align 8, !dbg !7771
  call void @kfree(i8* %11) #9, !dbg !7772
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !7773
  %dma_alias_mask = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 22, !dbg !7774
  %13 = load i64*, i64** %dma_alias_mask, align 8, !dbg !7774
  call void @bitmap_free(i64* %13) #9, !dbg !7775
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !7776
  %15 = bitcast %struct.pci_dev* %14 to i8*, !dbg !7776
  call void @kfree(i8* %15) #9, !dbg !7777
  ret void, !dbg !7778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_dev_node(%struct.device* %dev, i32 %node) #0 !dbg !7779 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %node.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7782, metadata !DIExpression()), !dbg !7783
  store i32 %node, i32* %node.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr, metadata !7784, metadata !DIExpression()), !dbg !7785
  ret void, !dbg !7786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_set_max_seg_size(%struct.device* %dev, i32 %size) #0 !dbg !7787 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7791, metadata !DIExpression()), !dbg !7792
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7793, metadata !DIExpression()), !dbg !7794
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7795
  %dma_parms = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 20, !dbg !7797
  %1 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms, align 8, !dbg !7797
  %tobool = icmp ne %struct.device_dma_parameters* %1, null, !dbg !7795
  br i1 %tobool, label %if.then, label %if.end, !dbg !7798

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %size.addr, align 4, !dbg !7799
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7801
  %dma_parms1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 20, !dbg !7802
  %4 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms1, align 8, !dbg !7802
  %max_segment_size = getelementptr inbounds %struct.device_dma_parameters, %struct.device_dma_parameters* %4, i32 0, i32 0, !dbg !7803
  store i32 %2, i32* %max_segment_size, align 8, !dbg !7804
  store i32 0, i32* %retval, align 4, !dbg !7805
  br label %return, !dbg !7805

if.end:                                           ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !7806
  br label %return, !dbg !7806

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !7807
  ret i32 %5, !dbg !7807
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_set_seg_boundary(%struct.device* %dev, i64 %mask) #0 !dbg !7808 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %mask.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7811, metadata !DIExpression()), !dbg !7812
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !7813, metadata !DIExpression()), !dbg !7814
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7815
  %dma_parms = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 20, !dbg !7817
  %1 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms, align 8, !dbg !7817
  %tobool = icmp ne %struct.device_dma_parameters* %1, null, !dbg !7815
  br i1 %tobool, label %if.then, label %if.end, !dbg !7818

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %mask.addr, align 8, !dbg !7819
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7821
  %dma_parms1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 20, !dbg !7822
  %4 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms1, align 8, !dbg !7822
  %segment_boundary_mask = getelementptr inbounds %struct.device_dma_parameters, %struct.device_dma_parameters* %4, i32 0, i32 1, !dbg !7823
  store i64 %2, i64* %segment_boundary_mask, align 8, !dbg !7824
  store i32 0, i32* %retval, align 4, !dbg !7825
  br label %return, !dbg !7825

if.end:                                           ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !7826
  br label %return, !dbg !7826

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !7827
  ret i32 %5, !dbg !7827
}

; Function Attrs: noredzone
declare dso_local void @pci_reassigndev_resource_alignment(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_init_capabilities(%struct.pci_dev* %dev) #0 !dbg !7828 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7829, metadata !DIExpression()), !dbg !7830
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7831
  call void @pci_ea_init(%struct.pci_dev* %0) #9, !dbg !7832
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7833
  call void @pci_msi_setup_pci_dev(%struct.pci_dev* %1) #9, !dbg !7834
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7835
  call void @pci_allocate_cap_save_buffers(%struct.pci_dev* %2) #9, !dbg !7836
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7837
  call void @pci_pm_init(%struct.pci_dev* %3) #9, !dbg !7838
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7839
  %call = call i32 @pci_vpd_init(%struct.pci_dev* %4) #9, !dbg !7840
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7841
  call void @pci_configure_ari(%struct.pci_dev* %5) #9, !dbg !7842
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7843
  %call1 = call i32 @pci_iov_init(%struct.pci_dev* %6) #9, !dbg !7844
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7845
  call void @pci_ats_init(%struct.pci_dev* %7) #9, !dbg !7846
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7847
  call void @pci_pri_init(%struct.pci_dev* %8) #9, !dbg !7848
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7849
  call void @pci_pasid_init(%struct.pci_dev* %9) #9, !dbg !7850
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7851
  call void @pci_acs_init(%struct.pci_dev* %10) #9, !dbg !7852
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7853
  call void @pci_ptm_init(%struct.pci_dev* %11) #9, !dbg !7854
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7855
  call void @pci_aer_init(%struct.pci_dev* %12) #9, !dbg !7856
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7857
  call void @pci_dpc_init(%struct.pci_dev* %13) #9, !dbg !7858
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7859
  call void @pcie_report_downtraining(%struct.pci_dev* %14) #9, !dbg !7860
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7861
  %call2 = call i32 @pci_probe_reset_function(%struct.pci_dev* %15) #9, !dbg !7863
  %cmp = icmp eq i32 %call2, 0, !dbg !7864
  br i1 %cmp, label %if.then, label %if.end, !dbg !7865

if.then:                                          ; preds = %entry
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7866
  %reset_fn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 46, !dbg !7867
  %17 = bitcast [5 x i8]* %reset_fn to i40*, !dbg !7867
  %bf.load = load i40, i40* %17, align 1, !dbg !7868
  %bf.clear = and i40 %bf.load, -8388609, !dbg !7868
  %bf.set = or i40 %bf.clear, 8388608, !dbg !7868
  store i40 %bf.set, i40* %17, align 1, !dbg !7868
  br label %if.end, !dbg !7866

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7869
}

; Function Attrs: noredzone
declare dso_local i32 @pcibios_add_device(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_msi_domain(%struct.pci_dev* %dev) #0 !dbg !7870 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %d = alloca %struct.irq_domain*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7871, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %d, metadata !7873, metadata !DIExpression()), !dbg !7874
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7875
  %call = call %struct.irq_domain* @pci_dev_msi_domain(%struct.pci_dev* %0) #9, !dbg !7876
  store %struct.irq_domain* %call, %struct.irq_domain** %d, align 8, !dbg !7877
  %1 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !7878
  %tobool = icmp ne %struct.irq_domain* %1, null, !dbg !7878
  br i1 %tobool, label %if.end, label %if.then, !dbg !7880

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7881
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 1, !dbg !7882
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !7882
  %dev1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %3, i32 0, i32 21, !dbg !7883
  %call2 = call %struct.irq_domain* @dev_get_msi_domain(%struct.device* %dev1) #9, !dbg !7884
  store %struct.irq_domain* %call2, %struct.irq_domain** %d, align 8, !dbg !7885
  br label %if.end, !dbg !7886

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7887
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !7888
  %5 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !7889
  call void @dev_set_msi_domain(%struct.device* %dev3, %struct.irq_domain* %5) #9, !dbg !7890
  ret void, !dbg !7891
}

; Function Attrs: noredzone
declare dso_local i32 @device_add(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_dev* @pci_scan_single_device(%struct.pci_bus* %bus, i32 %devfn) #0 !dbg !7892 {
entry:
  %retval = alloca %struct.pci_dev*, align 8
  %bus.addr = alloca %struct.pci_bus*, align 8
  %devfn.addr = alloca i32, align 4
  %dev = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7895, metadata !DIExpression()), !dbg !7896
  store i32 %devfn, i32* %devfn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devfn.addr, metadata !7897, metadata !DIExpression()), !dbg !7898
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !7899, metadata !DIExpression()), !dbg !7900
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7901
  %1 = load i32, i32* %devfn.addr, align 4, !dbg !7902
  %call = call %struct.pci_dev* @pci_get_slot(%struct.pci_bus* %0, i32 %1) #9, !dbg !7903
  store %struct.pci_dev* %call, %struct.pci_dev** %dev, align 8, !dbg !7904
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7905
  %tobool = icmp ne %struct.pci_dev* %2, null, !dbg !7905
  br i1 %tobool, label %if.then, label %if.end, !dbg !7907

if.then:                                          ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7908
  call void @pci_dev_put(%struct.pci_dev* %3) #9, !dbg !7910
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7911
  store %struct.pci_dev* %4, %struct.pci_dev** %retval, align 8, !dbg !7912
  br label %return, !dbg !7912

if.end:                                           ; preds = %entry
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7913
  %6 = load i32, i32* %devfn.addr, align 4, !dbg !7914
  %call1 = call %struct.pci_dev* @pci_scan_device(%struct.pci_bus* %5, i32 %6) #9, !dbg !7915
  store %struct.pci_dev* %call1, %struct.pci_dev** %dev, align 8, !dbg !7916
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7917
  %tobool2 = icmp ne %struct.pci_dev* %7, null, !dbg !7917
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !7919

if.then3:                                         ; preds = %if.end
  store %struct.pci_dev* null, %struct.pci_dev** %retval, align 8, !dbg !7920
  br label %return, !dbg !7920

if.end4:                                          ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7921
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7922
  call void @pci_device_add(%struct.pci_dev* %8, %struct.pci_bus* %9) #9, !dbg !7923
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7924
  store %struct.pci_dev* %10, %struct.pci_dev** %retval, align 8, !dbg !7925
  br label %return, !dbg !7925

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %11 = load %struct.pci_dev*, %struct.pci_dev** %retval, align 8, !dbg !7926
  ret %struct.pci_dev* %11, !dbg !7926
}

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @pci_get_slot(%struct.pci_bus*, i32) #2

; Function Attrs: noredzone
declare dso_local void @pci_dev_put(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_dev* @pci_scan_device(%struct.pci_bus* %bus, i32 %devfn) #0 !dbg !7927 {
entry:
  %retval = alloca %struct.pci_dev*, align 8
  %bus.addr = alloca %struct.pci_bus*, align 8
  %devfn.addr = alloca i32, align 4
  %dev = alloca %struct.pci_dev*, align 8
  %l = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7928, metadata !DIExpression()), !dbg !7929
  store i32 %devfn, i32* %devfn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devfn.addr, metadata !7930, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !7932, metadata !DIExpression()), !dbg !7933
  call void @llvm.dbg.declare(metadata i32* %l, metadata !7934, metadata !DIExpression()), !dbg !7935
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7936
  %1 = load i32, i32* %devfn.addr, align 4, !dbg !7938
  %call = call zeroext i1 @pci_bus_read_dev_vendor_id(%struct.pci_bus* %0, i32 %1, i32* %l, i32 60000) #9, !dbg !7939
  br i1 %call, label %if.end, label %if.then, !dbg !7940

if.then:                                          ; preds = %entry
  store %struct.pci_dev* null, %struct.pci_dev** %retval, align 8, !dbg !7941
  br label %return, !dbg !7941

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7942
  %call1 = call %struct.pci_dev* @pci_alloc_dev(%struct.pci_bus* %2) #9, !dbg !7943
  store %struct.pci_dev* %call1, %struct.pci_dev** %dev, align 8, !dbg !7944
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7945
  %tobool = icmp ne %struct.pci_dev* %3, null, !dbg !7945
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !7947

if.then2:                                         ; preds = %if.end
  store %struct.pci_dev* null, %struct.pci_dev** %retval, align 8, !dbg !7948
  br label %return, !dbg !7948

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %devfn.addr, align 4, !dbg !7949
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7950
  %devfn4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 6, !dbg !7951
  store i32 %4, i32* %devfn4, align 8, !dbg !7952
  %6 = load i32, i32* %l, align 4, !dbg !7953
  %and = and i32 %6, 65535, !dbg !7954
  %conv = trunc i32 %and to i16, !dbg !7953
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7955
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 7, !dbg !7956
  store i16 %conv, i16* %vendor, align 4, !dbg !7957
  %8 = load i32, i32* %l, align 4, !dbg !7958
  %shr = lshr i32 %8, 16, !dbg !7959
  %and5 = and i32 %shr, 65535, !dbg !7960
  %conv6 = trunc i32 %and5 to i16, !dbg !7961
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7962
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 8, !dbg !7963
  store i16 %conv6, i16* %device, align 2, !dbg !7964
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7965
  call void @pci_set_of_node(%struct.pci_dev* %10) #9, !dbg !7966
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7967
  %call7 = call i32 @pci_setup_device(%struct.pci_dev* %11) #9, !dbg !7969
  %tobool8 = icmp ne i32 %call7, 0, !dbg !7969
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !7970

if.then9:                                         ; preds = %if.end3
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7971
  %bus10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 1, !dbg !7973
  %13 = load %struct.pci_bus*, %struct.pci_bus** %bus10, align 8, !dbg !7973
  call void @pci_bus_put(%struct.pci_bus* %13) #9, !dbg !7974
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7975
  %15 = bitcast %struct.pci_dev* %14 to i8*, !dbg !7975
  call void @kfree(i8* %15) #9, !dbg !7976
  store %struct.pci_dev* null, %struct.pci_dev** %retval, align 8, !dbg !7977
  br label %return, !dbg !7977

if.end11:                                         ; preds = %if.end3
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7978
  store %struct.pci_dev* %16, %struct.pci_dev** %retval, align 8, !dbg !7979
  br label %return, !dbg !7979

return:                                           ; preds = %if.end11, %if.then9, %if.then2, %if.then
  %17 = load %struct.pci_dev*, %struct.pci_dev** %retval, align 8, !dbg !7980
  ret %struct.pci_dev* %17, !dbg !7980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_scan_slot(%struct.pci_bus* %bus, i32 %devfn) #0 !dbg !7981 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.pci_bus*, align 8
  %devfn.addr = alloca i32, align 4
  %fn = alloca i32, align 4
  %nr = alloca i32, align 4
  %dev = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7984, metadata !DIExpression()), !dbg !7985
  store i32 %devfn, i32* %devfn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devfn.addr, metadata !7986, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.declare(metadata i32* %fn, metadata !7988, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !7990, metadata !DIExpression()), !dbg !7991
  store i32 0, i32* %nr, align 4, !dbg !7991
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !7992, metadata !DIExpression()), !dbg !7993
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7994
  %call = call i32 @only_one_child(%struct.pci_bus* %0) #9, !dbg !7996
  %tobool = icmp ne i32 %call, 0, !dbg !7996
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7997

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %devfn.addr, align 4, !dbg !7998
  %cmp = icmp sgt i32 %1, 0, !dbg !7999
  br i1 %cmp, label %if.then, label %if.end, !dbg !8000

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !8001
  br label %return, !dbg !8001

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8002
  %3 = load i32, i32* %devfn.addr, align 4, !dbg !8003
  %call1 = call %struct.pci_dev* @pci_scan_single_device(%struct.pci_bus* %2, i32 %3) #9, !dbg !8004
  store %struct.pci_dev* %call1, %struct.pci_dev** %dev, align 8, !dbg !8005
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8006
  %tobool2 = icmp ne %struct.pci_dev* %4, null, !dbg !8006
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8008

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8009
  br label %return, !dbg !8009

if.end4:                                          ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8010
  %call5 = call zeroext i1 @pci_dev_is_added(%struct.pci_dev* %5) #9, !dbg !8012
  br i1 %call5, label %if.end7, label %if.then6, !dbg !8013

if.then6:                                         ; preds = %if.end4
  %6 = load i32, i32* %nr, align 4, !dbg !8014
  %inc = add i32 %6, 1, !dbg !8014
  store i32 %inc, i32* %nr, align 4, !dbg !8014
  br label %if.end7, !dbg !8015

if.end7:                                          ; preds = %if.then6, %if.end4
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8016
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8018
  %call8 = call i32 @next_fn(%struct.pci_bus* %7, %struct.pci_dev* %8, i32 0) #9, !dbg !8019
  store i32 %call8, i32* %fn, align 4, !dbg !8020
  br label %for.cond, !dbg !8021

for.cond:                                         ; preds = %for.inc, %if.end7
  %9 = load i32, i32* %fn, align 4, !dbg !8022
  %cmp9 = icmp ugt i32 %9, 0, !dbg !8024
  br i1 %cmp9, label %for.body, label %for.end, !dbg !8025

for.body:                                         ; preds = %for.cond
  %10 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8026
  %11 = load i32, i32* %devfn.addr, align 4, !dbg !8028
  %12 = load i32, i32* %fn, align 4, !dbg !8029
  %add = add i32 %11, %12, !dbg !8030
  %call10 = call %struct.pci_dev* @pci_scan_single_device(%struct.pci_bus* %10, i32 %add) #9, !dbg !8031
  store %struct.pci_dev* %call10, %struct.pci_dev** %dev, align 8, !dbg !8032
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8033
  %tobool11 = icmp ne %struct.pci_dev* %13, null, !dbg !8033
  br i1 %tobool11, label %if.then12, label %if.end17, !dbg !8035

if.then12:                                        ; preds = %for.body
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8036
  %call13 = call zeroext i1 @pci_dev_is_added(%struct.pci_dev* %14) #9, !dbg !8039
  br i1 %call13, label %if.end16, label %if.then14, !dbg !8040

if.then14:                                        ; preds = %if.then12
  %15 = load i32, i32* %nr, align 4, !dbg !8041
  %inc15 = add i32 %15, 1, !dbg !8041
  store i32 %inc15, i32* %nr, align 4, !dbg !8041
  br label %if.end16, !dbg !8042

if.end16:                                         ; preds = %if.then14, %if.then12
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8043
  %multifunction = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 46, !dbg !8044
  %17 = bitcast [5 x i8]* %multifunction to i40*, !dbg !8044
  %bf.load = load i40, i40* %17, align 1, !dbg !8045
  %bf.clear = and i40 %bf.load, -17, !dbg !8045
  %bf.set = or i40 %bf.clear, 16, !dbg !8045
  store i40 %bf.set, i40* %17, align 1, !dbg !8045
  br label %if.end17, !dbg !8046

if.end17:                                         ; preds = %if.end16, %for.body
  br label %for.inc, !dbg !8047

for.inc:                                          ; preds = %if.end17
  %18 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8048
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8049
  %20 = load i32, i32* %fn, align 4, !dbg !8050
  %call18 = call i32 @next_fn(%struct.pci_bus* %18, %struct.pci_dev* %19, i32 %20) #9, !dbg !8051
  store i32 %call18, i32* %fn, align 4, !dbg !8052
  br label %for.cond, !dbg !8053, !llvm.loop !8054

for.end:                                          ; preds = %for.cond
  %21 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8056
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %21, i32 0, i32 4, !dbg !8058
  %22 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !8058
  %tobool19 = icmp ne %struct.pci_dev* %22, null, !dbg !8056
  br i1 %tobool19, label %land.lhs.true20, label %if.end24, !dbg !8059

land.lhs.true20:                                  ; preds = %for.end
  %23 = load i32, i32* %nr, align 4, !dbg !8060
  %tobool21 = icmp ne i32 %23, 0, !dbg !8060
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !8061

if.then22:                                        ; preds = %land.lhs.true20
  %24 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8062
  %self23 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %24, i32 0, i32 4, !dbg !8063
  %25 = load %struct.pci_dev*, %struct.pci_dev** %self23, align 8, !dbg !8063
  call void @pcie_aspm_init_link_state(%struct.pci_dev* %25) #9, !dbg !8064
  br label %if.end24, !dbg !8064

if.end24:                                         ; preds = %if.then22, %land.lhs.true20, %for.end
  %26 = load i32, i32* %nr, align 4, !dbg !8065
  store i32 %26, i32* %retval, align 4, !dbg !8066
  br label %return, !dbg !8066

return:                                           ; preds = %if.end24, %if.then3, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !8067
  ret i32 %27, !dbg !8067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @only_one_child(%struct.pci_bus* %bus) #0 !dbg !8068 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.pci_bus*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !8069, metadata !DIExpression()), !dbg !8070
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !8071, metadata !DIExpression()), !dbg !8072
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8073
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !8074
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !8074
  store %struct.pci_dev* %1, %struct.pci_dev** %bridge, align 8, !dbg !8072
  %call = call i32 @pci_has_flag(i32 64) #9, !dbg !8075
  %tobool = icmp ne i32 %call, 0, !dbg !8075
  br i1 %tobool, label %if.then, label %if.end, !dbg !8077

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8078
  br label %return, !dbg !8078

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !8079
  %tobool1 = icmp ne %struct.pci_dev* %2, null, !dbg !8079
  br i1 %tobool1, label %land.lhs.true, label %if.end6, !dbg !8081

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !8082
  %call2 = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %3) #9, !dbg !8083
  br i1 %call2, label %land.lhs.true3, label %if.end6, !dbg !8084

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !8085
  %call4 = call zeroext i1 @pcie_downstream_port(%struct.pci_dev* %4) #9, !dbg !8086
  br i1 %call4, label %if.then5, label %if.end6, !dbg !8087

if.then5:                                         ; preds = %land.lhs.true3
  store i32 1, i32* %retval, align 4, !dbg !8088
  br label %return, !dbg !8088

if.end6:                                          ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8089
  br label %return, !dbg !8089

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8090
  ret i32 %5, !dbg !8090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_dev_is_added(%struct.pci_dev* %dev) #0 !dbg !8091 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8094
  %priv_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 68, !dbg !8095
  %call = call zeroext i1 @test_bit(i64 0, i64* %priv_flags) #9, !dbg !8096
  ret i1 %call, !dbg !8097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @next_fn(%struct.pci_bus* %bus, %struct.pci_dev* %dev, i32 %fn) #0 !dbg !8098 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.pci_bus*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %fn.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %cap = alloca i16, align 2
  %next_fn = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !8101, metadata !DIExpression()), !dbg !8102
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8103, metadata !DIExpression()), !dbg !8104
  store i32 %fn, i32* %fn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fn.addr, metadata !8105, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !8107, metadata !DIExpression()), !dbg !8108
  call void @llvm.dbg.declare(metadata i16* %cap, metadata !8109, metadata !DIExpression()), !dbg !8110
  store i16 0, i16* %cap, align 2, !dbg !8110
  call void @llvm.dbg.declare(metadata i32* %next_fn, metadata !8111, metadata !DIExpression()), !dbg !8112
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8113
  %call = call zeroext i1 @pci_ari_enabled(%struct.pci_bus* %0) #9, !dbg !8115
  br i1 %call, label %if.then, label %if.end10, !dbg !8116

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8117
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !8117
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8120

if.then1:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !8121
  br label %return, !dbg !8121

if.end:                                           ; preds = %if.then
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8122
  %call2 = call i32 @pci_find_ext_capability(%struct.pci_dev* %2, i32 14) #9, !dbg !8123
  store i32 %call2, i32* %pos, align 4, !dbg !8124
  %3 = load i32, i32* %pos, align 4, !dbg !8125
  %tobool3 = icmp ne i32 %3, 0, !dbg !8125
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !8127

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8128
  br label %return, !dbg !8128

if.end5:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8129
  %5 = load i32, i32* %pos, align 4, !dbg !8130
  %add = add i32 %5, 4, !dbg !8131
  %call6 = call i32 @pci_read_config_word(%struct.pci_dev* %4, i32 %add, i16* %cap) #9, !dbg !8132
  %6 = load i16, i16* %cap, align 2, !dbg !8133
  %conv = zext i16 %6 to i32, !dbg !8133
  %shr = ashr i32 %conv, 8, !dbg !8133
  %and = and i32 %shr, 255, !dbg !8133
  store i32 %and, i32* %next_fn, align 4, !dbg !8134
  %7 = load i32, i32* %next_fn, align 4, !dbg !8135
  %8 = load i32, i32* %fn.addr, align 4, !dbg !8137
  %cmp = icmp ule i32 %7, %8, !dbg !8138
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !8139

if.then8:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !8140
  br label %return, !dbg !8140

if.end9:                                          ; preds = %if.end5
  %9 = load i32, i32* %next_fn, align 4, !dbg !8141
  store i32 %9, i32* %retval, align 4, !dbg !8142
  br label %return, !dbg !8142

if.end10:                                         ; preds = %entry
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8143
  %tobool11 = icmp ne %struct.pci_dev* %10, null, !dbg !8143
  br i1 %tobool11, label %lor.lhs.false, label %if.then13, !dbg !8145

lor.lhs.false:                                    ; preds = %if.end10
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8146
  %multifunction = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 46, !dbg !8147
  %12 = bitcast [5 x i8]* %multifunction to i40*, !dbg !8147
  %bf.load = load i40, i40* %12, align 1, !dbg !8147
  %bf.lshr = lshr i40 %bf.load, 4, !dbg !8147
  %bf.clear = and i40 %bf.lshr, 1, !dbg !8147
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !8147
  %tobool12 = icmp ne i32 %bf.cast, 0, !dbg !8146
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !8148

if.then13:                                        ; preds = %lor.lhs.false, %if.end10
  %13 = load i32, i32* %fn.addr, align 4, !dbg !8149
  %add14 = add i32 %13, 1, !dbg !8150
  %rem = urem i32 %add14, 8, !dbg !8151
  store i32 %rem, i32* %retval, align 4, !dbg !8152
  br label %return, !dbg !8152

if.end15:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !8153
  br label %return, !dbg !8153

return:                                           ; preds = %if.end15, %if.then13, %if.end9, %if.then8, %if.then4, %if.then1
  %14 = load i32, i32* %retval, align 4, !dbg !8154
  ret i32 %14, !dbg !8154
}

; Function Attrs: noredzone
declare dso_local void @pcie_aspm_init_link_state(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pcie_bus_configure_settings(%struct.pci_bus* %bus) #0 !dbg !8155 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %smpss = alloca i8, align 1
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !8156, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.declare(metadata i8* %smpss, metadata !8158, metadata !DIExpression()), !dbg !8159
  store i8 0, i8* %smpss, align 1, !dbg !8159
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8160
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !8162
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !8162
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !8160
  br i1 %tobool, label %if.end, label %if.then, !dbg !8163

if.then:                                          ; preds = %entry
  br label %return, !dbg !8164

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8165
  %self1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 4, !dbg !8167
  %3 = load %struct.pci_dev*, %struct.pci_dev** %self1, align 8, !dbg !8167
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %3) #9, !dbg !8168
  br i1 %call, label %if.end3, label %if.then2, !dbg !8169

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !8170

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* @pcie_bus_config, align 4, !dbg !8171
  %cmp = icmp eq i32 %4, 4, !dbg !8173
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !8174

if.then4:                                         ; preds = %if.end3
  store i8 0, i8* %smpss, align 1, !dbg !8175
  br label %if.end5, !dbg !8176

if.end5:                                          ; preds = %if.then4, %if.end3
  %5 = load i32, i32* @pcie_bus_config, align 4, !dbg !8177
  %cmp6 = icmp eq i32 %5, 2, !dbg !8179
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !8180

if.then7:                                         ; preds = %if.end5
  %6 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8181
  %self8 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 4, !dbg !8183
  %7 = load %struct.pci_dev*, %struct.pci_dev** %self8, align 8, !dbg !8183
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 17, !dbg !8184
  %bf.load = load i8, i8* %pcie_mpss, align 1, !dbg !8184
  %bf.clear = and i8 %bf.load, 7, !dbg !8184
  store i8 %bf.clear, i8* %smpss, align 1, !dbg !8185
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8186
  %self9 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 4, !dbg !8187
  %9 = load %struct.pci_dev*, %struct.pci_dev** %self9, align 8, !dbg !8187
  %call10 = call i32 @pcie_find_smpss(%struct.pci_dev* %9, i8* %smpss) #9, !dbg !8188
  %10 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8189
  call void @pci_walk_bus(%struct.pci_bus* %10, i32 (%struct.pci_dev*, i8*)* @pcie_find_smpss, i8* %smpss) #9, !dbg !8190
  br label %if.end11, !dbg !8191

if.end11:                                         ; preds = %if.then7, %if.end5
  %11 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8192
  %self12 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %11, i32 0, i32 4, !dbg !8193
  %12 = load %struct.pci_dev*, %struct.pci_dev** %self12, align 8, !dbg !8193
  %call13 = call i32 @pcie_bus_configure_set(%struct.pci_dev* %12, i8* %smpss) #9, !dbg !8194
  %13 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8195
  call void @pci_walk_bus(%struct.pci_bus* %13, i32 (%struct.pci_dev*, i8*)* @pcie_bus_configure_set, i8* %smpss) #9, !dbg !8196
  br label %return, !dbg !8197

return:                                           ; preds = %if.end11, %if.then2, %if.then
  ret void, !dbg !8197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcie_find_smpss(%struct.pci_dev* %dev, i8* %data) #0 !dbg !8198 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  %smpss = alloca i8*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8199, metadata !DIExpression()), !dbg !8200
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8201, metadata !DIExpression()), !dbg !8202
  call void @llvm.dbg.declare(metadata i8** %smpss, metadata !8203, metadata !DIExpression()), !dbg !8204
  %0 = load i8*, i8** %data.addr, align 8, !dbg !8205
  store i8* %0, i8** %smpss, align 8, !dbg !8204
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8206
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %1) #9, !dbg !8208
  br i1 %call, label %if.end, label %if.then, !dbg !8209

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8210
  br label %return, !dbg !8210

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8211
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !8213
  %3 = bitcast [5 x i8]* %is_hotplug_bridge to i40*, !dbg !8213
  %bf.load = load i40, i40* %3, align 1, !dbg !8213
  %bf.lshr = lshr i40 %bf.load, 24, !dbg !8213
  %bf.clear = and i40 %bf.lshr, 1, !dbg !8213
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !8213
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8211
  br i1 %tobool, label %land.lhs.true, label %if.end3, !dbg !8214

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8215
  %call1 = call i32 @pci_pcie_type(%struct.pci_dev* %4) #9, !dbg !8216
  %cmp = icmp ne i32 %call1, 4, !dbg !8217
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8218

if.then2:                                         ; preds = %land.lhs.true
  %5 = load i8*, i8** %smpss, align 8, !dbg !8219
  store i8 0, i8* %5, align 1, !dbg !8220
  br label %if.end3, !dbg !8221

if.end3:                                          ; preds = %if.then2, %land.lhs.true, %if.end
  %6 = load i8*, i8** %smpss, align 8, !dbg !8222
  %7 = load i8, i8* %6, align 1, !dbg !8224
  %conv = zext i8 %7 to i32, !dbg !8224
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8225
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 17, !dbg !8226
  %bf.load4 = load i8, i8* %pcie_mpss, align 1, !dbg !8226
  %bf.clear5 = and i8 %bf.load4, 7, !dbg !8226
  %conv6 = zext i8 %bf.clear5 to i32, !dbg !8225
  %cmp7 = icmp sgt i32 %conv, %conv6, !dbg !8227
  br i1 %cmp7, label %if.then9, label %if.end13, !dbg !8228

if.then9:                                         ; preds = %if.end3
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8229
  %pcie_mpss10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 17, !dbg !8230
  %bf.load11 = load i8, i8* %pcie_mpss10, align 1, !dbg !8230
  %bf.clear12 = and i8 %bf.load11, 7, !dbg !8230
  %10 = load i8*, i8** %smpss, align 8, !dbg !8231
  store i8 %bf.clear12, i8* %10, align 1, !dbg !8232
  br label %if.end13, !dbg !8233

if.end13:                                         ; preds = %if.then9, %if.end3
  store i32 0, i32* %retval, align 4, !dbg !8234
  br label %return, !dbg !8234

return:                                           ; preds = %if.end13, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8235
  ret i32 %11, !dbg !8235
}

; Function Attrs: noredzone
declare dso_local void @pci_walk_bus(%struct.pci_bus*, i32 (%struct.pci_dev*, i8*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcie_bus_configure_set(%struct.pci_dev* %dev, i8* %data) #0 !dbg !8236 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  %mps = alloca i32, align 4
  %orig_mps = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8237, metadata !DIExpression()), !dbg !8238
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8239, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.declare(metadata i32* %mps, metadata !8241, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.declare(metadata i32* %orig_mps, metadata !8243, metadata !DIExpression()), !dbg !8244
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8245
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #9, !dbg !8247
  br i1 %call, label %if.end, label %if.then, !dbg !8248

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8249
  br label %return, !dbg !8249

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @pcie_bus_config, align 4, !dbg !8250
  %cmp = icmp eq i32 %1, 0, !dbg !8252
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !8253

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i32, i32* @pcie_bus_config, align 4, !dbg !8254
  %cmp1 = icmp eq i32 %2, 1, !dbg !8255
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8256

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8257
  br label %return, !dbg !8257

if.end3:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %data.addr, align 8, !dbg !8258
  %4 = load i8, i8* %3, align 1, !dbg !8259
  %conv = zext i8 %4 to i32, !dbg !8259
  %shl = shl i32 128, %conv, !dbg !8260
  store i32 %shl, i32* %mps, align 4, !dbg !8261
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8262
  %call4 = call i32 @pcie_get_mps(%struct.pci_dev* %5) #9, !dbg !8263
  store i32 %call4, i32* %orig_mps, align 4, !dbg !8264
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8265
  %7 = load i32, i32* %mps, align 4, !dbg !8266
  call void @pcie_write_mps(%struct.pci_dev* %6, i32 %7) #9, !dbg !8267
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8268
  call void @pcie_write_mrrs(%struct.pci_dev* %8) #9, !dbg !8269
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8270
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !8270
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8270
  %call6 = call i32 @pcie_get_mps(%struct.pci_dev* %10) #9, !dbg !8270
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8270
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 17, !dbg !8270
  %bf.load = load i8, i8* %pcie_mpss, align 1, !dbg !8270
  %bf.clear = and i8 %bf.load, 7, !dbg !8270
  %conv7 = zext i8 %bf.clear to i32, !dbg !8270
  %shl8 = shl i32 128, %conv7, !dbg !8270
  %12 = load i32, i32* %orig_mps, align 4, !dbg !8270
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8270
  %call9 = call i32 @pcie_get_readrq(%struct.pci_dev* %13) #9, !dbg !8270
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev5, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.75, i64 0, i64 0), i32 %call6, i32 %shl8, i32 %12, i32 %call9) #10, !dbg !8270
  store i32 0, i32* %retval, align 4, !dbg !8271
  br label %return, !dbg !8271

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8272
  ret i32 %14, !dbg !8272
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @pcibios_fixup_bus(%struct.pci_bus* %bus) #0 !dbg !8273 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !8274, metadata !DIExpression()), !dbg !8275
  ret void, !dbg !8276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_scan_child_bus(%struct.pci_bus* %bus) #0 !dbg !8277 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !8280, metadata !DIExpression()), !dbg !8281
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8282
  %call = call i32 @pci_scan_child_bus_extend(%struct.pci_bus* %0, i32 0) #9, !dbg !8283
  ret i32 %call, !dbg !8284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_scan_child_bus_extend(%struct.pci_bus* %bus, i32 %available_buses) #0 !dbg !8285 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %available_buses.addr = alloca i32, align 4
  %used_buses = alloca i32, align 4
  %normal_bridges = alloca i32, align 4
  %hotplug_bridges = alloca i32, align 4
  %start = alloca i32, align 4
  %devfn = alloca i32, align 4
  %fn = alloca i32, align 4
  %cmax = alloca i32, align 4
  %max = alloca i32, align 4
  %dev = alloca %struct.pci_dev*, align 8
  %nr_devs = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr46 = alloca i8*, align 8
  %tmp51 = alloca %struct.pci_dev*, align 8
  %__mptr54 = alloca i8*, align 8
  %tmp59 = alloca %struct.pci_dev*, align 8
  %__mptr82 = alloca i8*, align 8
  %tmp87 = alloca %struct.pci_dev*, align 8
  %__mptr90 = alloca i8*, align 8
  %tmp95 = alloca %struct.pci_dev*, align 8
  %buses = alloca i32, align 4
  %__UNIQUE_ID___x263 = alloca i32, align 4
  %__UNIQUE_ID___y264 = alloca i32, align 4
  %tmp122 = alloca i32, align 4
  %__mptr138 = alloca i8*, align 8
  %tmp143 = alloca %struct.pci_dev*, align 8
  %__UNIQUE_ID___x265 = alloca i32, align 4
  %__UNIQUE_ID___y266 = alloca i32, align 4
  %tmp158 = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !8288, metadata !DIExpression()), !dbg !8289
  store i32 %available_buses, i32* %available_buses.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %available_buses.addr, metadata !8290, metadata !DIExpression()), !dbg !8291
  call void @llvm.dbg.declare(metadata i32* %used_buses, metadata !8292, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.declare(metadata i32* %normal_bridges, metadata !8294, metadata !DIExpression()), !dbg !8295
  store i32 0, i32* %normal_bridges, align 4, !dbg !8295
  call void @llvm.dbg.declare(metadata i32* %hotplug_bridges, metadata !8296, metadata !DIExpression()), !dbg !8297
  store i32 0, i32* %hotplug_bridges, align 4, !dbg !8297
  call void @llvm.dbg.declare(metadata i32* %start, metadata !8298, metadata !DIExpression()), !dbg !8299
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8300
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 8, !dbg !8301
  %start1 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res, i32 0, i32 0, !dbg !8302
  %1 = load i64, i64* %start1, align 8, !dbg !8302
  %conv = trunc i64 %1 to i32, !dbg !8300
  store i32 %conv, i32* %start, align 4, !dbg !8299
  call void @llvm.dbg.declare(metadata i32* %devfn, metadata !8303, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.declare(metadata i32* %fn, metadata !8305, metadata !DIExpression()), !dbg !8306
  call void @llvm.dbg.declare(metadata i32* %cmax, metadata !8307, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.declare(metadata i32* %max, metadata !8309, metadata !DIExpression()), !dbg !8310
  %2 = load i32, i32* %start, align 4, !dbg !8311
  store i32 %2, i32* %max, align 4, !dbg !8310
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !8312, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.declare(metadata i32* %nr_devs, metadata !8314, metadata !DIExpression()), !dbg !8315
  store i32 0, i32* %devfn, align 4, !dbg !8316
  br label %for.cond, !dbg !8318

for.cond:                                         ; preds = %for.inc14, %entry
  %3 = load i32, i32* %devfn, align 4, !dbg !8319
  %cmp = icmp ult i32 %3, 256, !dbg !8321
  br i1 %cmp, label %for.body, label %for.end16, !dbg !8322

for.body:                                         ; preds = %for.cond
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8323
  %5 = load i32, i32* %devfn, align 4, !dbg !8325
  %call = call i32 @pci_scan_slot(%struct.pci_bus* %4, i32 %5) #9, !dbg !8326
  store i32 %call, i32* %nr_devs, align 4, !dbg !8327
  %call3 = call zeroext i1 @jailhouse_paravirt() #9, !dbg !8328
  br i1 %call3, label %land.lhs.true, label %if.end13, !dbg !8330

land.lhs.true:                                    ; preds = %for.body
  %6 = load i32, i32* %nr_devs, align 4, !dbg !8331
  %cmp5 = icmp eq i32 %6, 0, !dbg !8332
  br i1 %cmp5, label %if.then, label %if.end13, !dbg !8333

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %fn, align 4, !dbg !8334
  br label %for.cond7, !dbg !8337

for.cond7:                                        ; preds = %for.inc, %if.then
  %7 = load i32, i32* %fn, align 4, !dbg !8338
  %cmp8 = icmp ult i32 %7, 8, !dbg !8340
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !8341

for.body10:                                       ; preds = %for.cond7
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8342
  %9 = load i32, i32* %devfn, align 4, !dbg !8344
  %10 = load i32, i32* %fn, align 4, !dbg !8345
  %add = add i32 %9, %10, !dbg !8346
  %call11 = call %struct.pci_dev* @pci_scan_single_device(%struct.pci_bus* %8, i32 %add) #9, !dbg !8347
  store %struct.pci_dev* %call11, %struct.pci_dev** %dev, align 8, !dbg !8348
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8349
  %tobool = icmp ne %struct.pci_dev* %11, null, !dbg !8349
  br i1 %tobool, label %if.then12, label %if.end, !dbg !8351

if.then12:                                        ; preds = %for.body10
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8352
  %multifunction = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 46, !dbg !8353
  %13 = bitcast [5 x i8]* %multifunction to i40*, !dbg !8353
  %bf.load = load i40, i40* %13, align 1, !dbg !8354
  %bf.clear = and i40 %bf.load, -17, !dbg !8354
  %bf.set = or i40 %bf.clear, 16, !dbg !8354
  store i40 %bf.set, i40* %13, align 1, !dbg !8354
  br label %if.end, !dbg !8352

if.end:                                           ; preds = %if.then12, %for.body10
  br label %for.inc, !dbg !8355

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %fn, align 4, !dbg !8356
  %inc = add i32 %14, 1, !dbg !8356
  store i32 %inc, i32* %fn, align 4, !dbg !8356
  br label %for.cond7, !dbg !8357, !llvm.loop !8358

for.end:                                          ; preds = %for.cond7
  br label %if.end13, !dbg !8360

if.end13:                                         ; preds = %for.end, %land.lhs.true, %for.body
  br label %for.inc14, !dbg !8361

for.inc14:                                        ; preds = %if.end13
  %15 = load i32, i32* %devfn, align 4, !dbg !8362
  %add15 = add i32 %15, 8, !dbg !8362
  store i32 %add15, i32* %devfn, align 4, !dbg !8362
  br label %for.cond, !dbg !8363, !llvm.loop !8364

for.end16:                                        ; preds = %for.cond
  %16 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8366
  %call17 = call i32 @pci_iov_bus_range(%struct.pci_bus* %16) #9, !dbg !8367
  store i32 %call17, i32* %used_buses, align 4, !dbg !8368
  %17 = load i32, i32* %used_buses, align 4, !dbg !8369
  %18 = load i32, i32* %max, align 4, !dbg !8370
  %add18 = add i32 %18, %17, !dbg !8370
  store i32 %add18, i32* %max, align 4, !dbg !8370
  %19 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8371
  %is_added = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %19, i32 0, i32 24, !dbg !8373
  %bf.load19 = load i8, i8* %is_added, align 8, !dbg !8373
  %bf.clear20 = and i8 %bf.load19, 1, !dbg !8373
  %bf.cast = zext i8 %bf.clear20 to i32, !dbg !8373
  %tobool21 = icmp ne i32 %bf.cast, 0, !dbg !8371
  br i1 %tobool21, label %if.end27, label %if.then22, !dbg !8374

if.then22:                                        ; preds = %for.end16
  %20 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8375
  call void @pcibios_fixup_bus(%struct.pci_bus* %20) #9, !dbg !8377
  %21 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8378
  %is_added23 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %21, i32 0, i32 24, !dbg !8379
  %bf.load24 = load i8, i8* %is_added23, align 8, !dbg !8380
  %bf.clear25 = and i8 %bf.load24, -2, !dbg !8380
  %bf.set26 = or i8 %bf.clear25, 1, !dbg !8380
  store i8 %bf.set26, i8* %is_added23, align 8, !dbg !8380
  br label %if.end27, !dbg !8381

if.end27:                                         ; preds = %if.then22, %for.end16
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8382, metadata !DIExpression()), !dbg !8385
  %22 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8385
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %22, i32 0, i32 3, !dbg !8385
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !8385
  %23 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8385
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !8385
  store i8* %24, i8** %__mptr, align 8, !dbg !8385
  br label %do.body, !dbg !8385

do.body:                                          ; preds = %if.end27
  br label %do.end, !dbg !8386

do.end:                                           ; preds = %do.body
  %25 = load i8*, i8** %__mptr, align 8, !dbg !8385
  %add.ptr = getelementptr i8, i8* %25, i64 0, !dbg !8385
  %26 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !8385
  store %struct.pci_dev* %26, %struct.pci_dev** %tmp, align 8, !dbg !8386
  %27 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !8385
  store %struct.pci_dev* %27, %struct.pci_dev** %dev, align 8, !dbg !8388
  br label %for.cond28, !dbg !8388

for.cond28:                                       ; preds = %do.end50, %do.end
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8389
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 0, !dbg !8389
  %29 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8389
  %devices29 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %29, i32 0, i32 3, !dbg !8389
  %cmp30 = icmp eq %struct.list_head* %bus_list, %devices29, !dbg !8389
  %lnot = xor i1 %cmp30, true, !dbg !8389
  br i1 %lnot, label %for.body32, label %for.end53, !dbg !8388

for.body32:                                       ; preds = %for.cond28
  %30 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8391
  %call33 = call zeroext i1 @pci_is_bridge(%struct.pci_dev* %30) #9, !dbg !8391
  br i1 %call33, label %if.else, label %if.then34, !dbg !8389

if.then34:                                        ; preds = %for.body32
  br label %if.end44, !dbg !8393

if.else:                                          ; preds = %for.body32
  %31 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8395
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 46, !dbg !8398
  %32 = bitcast [5 x i8]* %is_hotplug_bridge to i40*, !dbg !8398
  %bf.load35 = load i40, i40* %32, align 1, !dbg !8398
  %bf.lshr = lshr i40 %bf.load35, 24, !dbg !8398
  %bf.clear36 = and i40 %bf.lshr, 1, !dbg !8398
  %bf.cast37 = trunc i40 %bf.clear36 to i32, !dbg !8398
  %tobool38 = icmp ne i32 %bf.cast37, 0, !dbg !8395
  br i1 %tobool38, label %if.then39, label %if.else41, !dbg !8399

if.then39:                                        ; preds = %if.else
  %33 = load i32, i32* %hotplug_bridges, align 4, !dbg !8400
  %inc40 = add i32 %33, 1, !dbg !8400
  store i32 %inc40, i32* %hotplug_bridges, align 4, !dbg !8400
  br label %if.end43, !dbg !8401

if.else41:                                        ; preds = %if.else
  %34 = load i32, i32* %normal_bridges, align 4, !dbg !8402
  %inc42 = add i32 %34, 1, !dbg !8402
  store i32 %inc42, i32* %normal_bridges, align 4, !dbg !8402
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.then39
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then34
  br label %for.inc45, !dbg !8391

for.inc45:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata i8** %__mptr46, metadata !8403, metadata !DIExpression()), !dbg !8405
  %35 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8405
  %bus_list47 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 0, !dbg !8405
  %next48 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list47, i32 0, i32 0, !dbg !8405
  %36 = load %struct.list_head*, %struct.list_head** %next48, align 8, !dbg !8405
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !8405
  store i8* %37, i8** %__mptr46, align 8, !dbg !8405
  br label %do.body49, !dbg !8405

do.body49:                                        ; preds = %for.inc45
  br label %do.end50, !dbg !8406

do.end50:                                         ; preds = %do.body49
  %38 = load i8*, i8** %__mptr46, align 8, !dbg !8405
  %add.ptr52 = getelementptr i8, i8* %38, i64 0, !dbg !8405
  %39 = bitcast i8* %add.ptr52 to %struct.pci_dev*, !dbg !8405
  store %struct.pci_dev* %39, %struct.pci_dev** %tmp51, align 8, !dbg !8406
  %40 = load %struct.pci_dev*, %struct.pci_dev** %tmp51, align 8, !dbg !8405
  store %struct.pci_dev* %40, %struct.pci_dev** %dev, align 8, !dbg !8389
  br label %for.cond28, !dbg !8389, !llvm.loop !8408

for.end53:                                        ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata i8** %__mptr54, metadata !8410, metadata !DIExpression()), !dbg !8413
  %41 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8413
  %devices55 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %41, i32 0, i32 3, !dbg !8413
  %next56 = getelementptr inbounds %struct.list_head, %struct.list_head* %devices55, i32 0, i32 0, !dbg !8413
  %42 = load %struct.list_head*, %struct.list_head** %next56, align 8, !dbg !8413
  %43 = bitcast %struct.list_head* %42 to i8*, !dbg !8413
  store i8* %43, i8** %__mptr54, align 8, !dbg !8413
  br label %do.body57, !dbg !8413

do.body57:                                        ; preds = %for.end53
  br label %do.end58, !dbg !8414

do.end58:                                         ; preds = %do.body57
  %44 = load i8*, i8** %__mptr54, align 8, !dbg !8413
  %add.ptr60 = getelementptr i8, i8* %44, i64 0, !dbg !8413
  %45 = bitcast i8* %add.ptr60 to %struct.pci_dev*, !dbg !8413
  store %struct.pci_dev* %45, %struct.pci_dev** %tmp59, align 8, !dbg !8414
  %46 = load %struct.pci_dev*, %struct.pci_dev** %tmp59, align 8, !dbg !8413
  store %struct.pci_dev* %46, %struct.pci_dev** %dev, align 8, !dbg !8416
  br label %for.cond61, !dbg !8416

for.cond61:                                       ; preds = %do.end86, %do.end58
  %47 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8417
  %bus_list62 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 0, !dbg !8417
  %48 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8417
  %devices63 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %48, i32 0, i32 3, !dbg !8417
  %cmp64 = icmp eq %struct.list_head* %bus_list62, %devices63, !dbg !8417
  %lnot66 = xor i1 %cmp64, true, !dbg !8417
  br i1 %lnot66, label %for.body67, label %for.end89, !dbg !8416

for.body67:                                       ; preds = %for.cond61
  %49 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8419
  %call68 = call zeroext i1 @pci_is_bridge(%struct.pci_dev* %49) #9, !dbg !8419
  br i1 %call68, label %if.else70, label %if.then69, !dbg !8417

if.then69:                                        ; preds = %for.body67
  br label %if.end80, !dbg !8421

if.else70:                                        ; preds = %for.body67
  %50 = load i32, i32* %max, align 4, !dbg !8423
  store i32 %50, i32* %cmax, align 4, !dbg !8425
  %51 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8426
  %52 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8427
  %53 = load i32, i32* %max, align 4, !dbg !8428
  %call71 = call i32 @pci_scan_bridge_extend(%struct.pci_bus* %51, %struct.pci_dev* %52, i32 %53, i32 0, i32 0) #9, !dbg !8429
  store i32 %call71, i32* %max, align 4, !dbg !8430
  %54 = load i32, i32* %used_buses, align 4, !dbg !8431
  %inc72 = add i32 %54, 1, !dbg !8431
  store i32 %inc72, i32* %used_buses, align 4, !dbg !8431
  %55 = load i32, i32* %cmax, align 4, !dbg !8432
  %56 = load i32, i32* %max, align 4, !dbg !8434
  %sub = sub i32 %55, %56, !dbg !8435
  %cmp73 = icmp ugt i32 %sub, 1, !dbg !8436
  br i1 %cmp73, label %if.then75, label %if.end79, !dbg !8437

if.then75:                                        ; preds = %if.else70
  %57 = load i32, i32* %cmax, align 4, !dbg !8438
  %58 = load i32, i32* %max, align 4, !dbg !8439
  %sub76 = sub i32 %57, %58, !dbg !8440
  %sub77 = sub i32 %sub76, 1, !dbg !8441
  %59 = load i32, i32* %used_buses, align 4, !dbg !8442
  %add78 = add i32 %59, %sub77, !dbg !8442
  store i32 %add78, i32* %used_buses, align 4, !dbg !8442
  br label %if.end79, !dbg !8443

if.end79:                                         ; preds = %if.then75, %if.else70
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then69
  br label %for.inc81, !dbg !8419

for.inc81:                                        ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i8** %__mptr82, metadata !8444, metadata !DIExpression()), !dbg !8446
  %60 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8446
  %bus_list83 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %60, i32 0, i32 0, !dbg !8446
  %next84 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list83, i32 0, i32 0, !dbg !8446
  %61 = load %struct.list_head*, %struct.list_head** %next84, align 8, !dbg !8446
  %62 = bitcast %struct.list_head* %61 to i8*, !dbg !8446
  store i8* %62, i8** %__mptr82, align 8, !dbg !8446
  br label %do.body85, !dbg !8446

do.body85:                                        ; preds = %for.inc81
  br label %do.end86, !dbg !8447

do.end86:                                         ; preds = %do.body85
  %63 = load i8*, i8** %__mptr82, align 8, !dbg !8446
  %add.ptr88 = getelementptr i8, i8* %63, i64 0, !dbg !8446
  %64 = bitcast i8* %add.ptr88 to %struct.pci_dev*, !dbg !8446
  store %struct.pci_dev* %64, %struct.pci_dev** %tmp87, align 8, !dbg !8447
  %65 = load %struct.pci_dev*, %struct.pci_dev** %tmp87, align 8, !dbg !8446
  store %struct.pci_dev* %65, %struct.pci_dev** %dev, align 8, !dbg !8417
  br label %for.cond61, !dbg !8417, !llvm.loop !8449

for.end89:                                        ; preds = %for.cond61
  call void @llvm.dbg.declare(metadata i8** %__mptr90, metadata !8451, metadata !DIExpression()), !dbg !8454
  %66 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8454
  %devices91 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %66, i32 0, i32 3, !dbg !8454
  %next92 = getelementptr inbounds %struct.list_head, %struct.list_head* %devices91, i32 0, i32 0, !dbg !8454
  %67 = load %struct.list_head*, %struct.list_head** %next92, align 8, !dbg !8454
  %68 = bitcast %struct.list_head* %67 to i8*, !dbg !8454
  store i8* %68, i8** %__mptr90, align 8, !dbg !8454
  br label %do.body93, !dbg !8454

do.body93:                                        ; preds = %for.end89
  br label %do.end94, !dbg !8455

do.end94:                                         ; preds = %do.body93
  %69 = load i8*, i8** %__mptr90, align 8, !dbg !8454
  %add.ptr96 = getelementptr i8, i8* %69, i64 0, !dbg !8454
  %70 = bitcast i8* %add.ptr96 to %struct.pci_dev*, !dbg !8454
  store %struct.pci_dev* %70, %struct.pci_dev** %tmp95, align 8, !dbg !8455
  %71 = load %struct.pci_dev*, %struct.pci_dev** %tmp95, align 8, !dbg !8454
  store %struct.pci_dev* %71, %struct.pci_dev** %dev, align 8, !dbg !8457
  br label %for.cond97, !dbg !8457

for.cond97:                                       ; preds = %do.end142, %do.end94
  %72 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8458
  %bus_list98 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %72, i32 0, i32 0, !dbg !8458
  %73 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8458
  %devices99 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %73, i32 0, i32 3, !dbg !8458
  %cmp100 = icmp eq %struct.list_head* %bus_list98, %devices99, !dbg !8458
  %lnot102 = xor i1 %cmp100, true, !dbg !8458
  br i1 %lnot102, label %for.body103, label %for.end145, !dbg !8457

for.body103:                                      ; preds = %for.cond97
  %74 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8460
  %call104 = call zeroext i1 @pci_is_bridge(%struct.pci_dev* %74) #9, !dbg !8460
  br i1 %call104, label %if.else106, label %if.then105, !dbg !8458

if.then105:                                       ; preds = %for.body103
  br label %if.end136, !dbg !8462

if.else106:                                       ; preds = %for.body103
  call void @llvm.dbg.declare(metadata i32* %buses, metadata !8464, metadata !DIExpression()), !dbg !8466
  store i32 0, i32* %buses, align 4, !dbg !8466
  %75 = load i32, i32* %hotplug_bridges, align 4, !dbg !8467
  %tobool107 = icmp ne i32 %75, 0, !dbg !8467
  br i1 %tobool107, label %if.else112, label %land.lhs.true108, !dbg !8469

land.lhs.true108:                                 ; preds = %if.else106
  %76 = load i32, i32* %normal_bridges, align 4, !dbg !8470
  %cmp109 = icmp eq i32 %76, 1, !dbg !8471
  br i1 %cmp109, label %if.then111, label %if.else112, !dbg !8472

if.then111:                                       ; preds = %land.lhs.true108
  %77 = load i32, i32* %available_buses.addr, align 4, !dbg !8473
  store i32 %77, i32* %buses, align 4, !dbg !8475
  br label %if.end126, !dbg !8476

if.else112:                                       ; preds = %land.lhs.true108, %if.else106
  %78 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8477
  %is_hotplug_bridge113 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %78, i32 0, i32 46, !dbg !8479
  %79 = bitcast [5 x i8]* %is_hotplug_bridge113 to i40*, !dbg !8479
  %bf.load114 = load i40, i40* %79, align 1, !dbg !8479
  %bf.lshr115 = lshr i40 %bf.load114, 24, !dbg !8479
  %bf.clear116 = and i40 %bf.lshr115, 1, !dbg !8479
  %bf.cast117 = trunc i40 %bf.clear116 to i32, !dbg !8479
  %tobool118 = icmp ne i32 %bf.cast117, 0, !dbg !8477
  br i1 %tobool118, label %if.then119, label %if.end125, !dbg !8480

if.then119:                                       ; preds = %if.else112
  %80 = load i32, i32* %available_buses.addr, align 4, !dbg !8481
  %81 = load i32, i32* %hotplug_bridges, align 4, !dbg !8483
  %div = udiv i32 %80, %81, !dbg !8484
  store i32 %div, i32* %buses, align 4, !dbg !8485
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x263, metadata !8486, metadata !DIExpression()), !dbg !8488
  %82 = load i32, i32* %buses, align 4, !dbg !8488
  store i32 %82, i32* %__UNIQUE_ID___x263, align 4, !dbg !8488
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y264, metadata !8489, metadata !DIExpression()), !dbg !8488
  %83 = load i32, i32* %available_buses.addr, align 4, !dbg !8488
  %84 = load i32, i32* %used_buses, align 4, !dbg !8488
  %sub120 = sub i32 %83, %84, !dbg !8488
  %add121 = add i32 %sub120, 1, !dbg !8488
  store i32 %add121, i32* %__UNIQUE_ID___y264, align 4, !dbg !8488
  %85 = load i32, i32* %__UNIQUE_ID___x263, align 4, !dbg !8488
  %86 = load i32, i32* %__UNIQUE_ID___y264, align 4, !dbg !8488
  %cmp123 = icmp ult i32 %85, %86, !dbg !8488
  br i1 %cmp123, label %cond.true, label %cond.false, !dbg !8488

cond.true:                                        ; preds = %if.then119
  %87 = load i32, i32* %__UNIQUE_ID___x263, align 4, !dbg !8488
  br label %cond.end, !dbg !8488

cond.false:                                       ; preds = %if.then119
  %88 = load i32, i32* %__UNIQUE_ID___y264, align 4, !dbg !8488
  br label %cond.end, !dbg !8488

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %87, %cond.true ], [ %88, %cond.false ], !dbg !8488
  store i32 %cond, i32* %tmp122, align 4, !dbg !8488
  %89 = load i32, i32* %tmp122, align 4, !dbg !8488
  store i32 %89, i32* %buses, align 4, !dbg !8490
  br label %if.end125, !dbg !8491

if.end125:                                        ; preds = %cond.end, %if.else112
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then111
  %90 = load i32, i32* %max, align 4, !dbg !8492
  store i32 %90, i32* %cmax, align 4, !dbg !8493
  %91 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8494
  %92 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8495
  %93 = load i32, i32* %cmax, align 4, !dbg !8496
  %94 = load i32, i32* %buses, align 4, !dbg !8497
  %call127 = call i32 @pci_scan_bridge_extend(%struct.pci_bus* %91, %struct.pci_dev* %92, i32 %93, i32 %94, i32 1) #9, !dbg !8498
  store i32 %call127, i32* %max, align 4, !dbg !8499
  %95 = load i32, i32* %max, align 4, !dbg !8500
  %96 = load i32, i32* %cmax, align 4, !dbg !8502
  %sub128 = sub i32 %95, %96, !dbg !8503
  %cmp129 = icmp ugt i32 %sub128, 1, !dbg !8504
  br i1 %cmp129, label %if.then131, label %if.end135, !dbg !8505

if.then131:                                       ; preds = %if.end126
  %97 = load i32, i32* %max, align 4, !dbg !8506
  %98 = load i32, i32* %cmax, align 4, !dbg !8507
  %sub132 = sub i32 %97, %98, !dbg !8508
  %sub133 = sub i32 %sub132, 1, !dbg !8509
  %99 = load i32, i32* %used_buses, align 4, !dbg !8510
  %add134 = add i32 %99, %sub133, !dbg !8510
  store i32 %add134, i32* %used_buses, align 4, !dbg !8510
  br label %if.end135, !dbg !8511

if.end135:                                        ; preds = %if.then131, %if.end126
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then105
  br label %for.inc137, !dbg !8460

for.inc137:                                       ; preds = %if.end136
  call void @llvm.dbg.declare(metadata i8** %__mptr138, metadata !8512, metadata !DIExpression()), !dbg !8514
  %100 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8514
  %bus_list139 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %100, i32 0, i32 0, !dbg !8514
  %next140 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list139, i32 0, i32 0, !dbg !8514
  %101 = load %struct.list_head*, %struct.list_head** %next140, align 8, !dbg !8514
  %102 = bitcast %struct.list_head* %101 to i8*, !dbg !8514
  store i8* %102, i8** %__mptr138, align 8, !dbg !8514
  br label %do.body141, !dbg !8514

do.body141:                                       ; preds = %for.inc137
  br label %do.end142, !dbg !8515

do.end142:                                        ; preds = %do.body141
  %103 = load i8*, i8** %__mptr138, align 8, !dbg !8514
  %add.ptr144 = getelementptr i8, i8* %103, i64 0, !dbg !8514
  %104 = bitcast i8* %add.ptr144 to %struct.pci_dev*, !dbg !8514
  store %struct.pci_dev* %104, %struct.pci_dev** %tmp143, align 8, !dbg !8515
  %105 = load %struct.pci_dev*, %struct.pci_dev** %tmp143, align 8, !dbg !8514
  store %struct.pci_dev* %105, %struct.pci_dev** %dev, align 8, !dbg !8458
  br label %for.cond97, !dbg !8458, !llvm.loop !8517

for.end145:                                       ; preds = %for.cond97
  %106 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8519
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %106, i32 0, i32 4, !dbg !8521
  %107 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !8521
  %tobool146 = icmp ne %struct.pci_dev* %107, null, !dbg !8519
  br i1 %tobool146, label %land.lhs.true147, label %if.end180, !dbg !8522

land.lhs.true147:                                 ; preds = %for.end145
  %108 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8523
  %self148 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %108, i32 0, i32 4, !dbg !8524
  %109 = load %struct.pci_dev*, %struct.pci_dev** %self148, align 8, !dbg !8524
  %is_hotplug_bridge149 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %109, i32 0, i32 46, !dbg !8525
  %110 = bitcast [5 x i8]* %is_hotplug_bridge149 to i40*, !dbg !8525
  %bf.load150 = load i40, i40* %110, align 1, !dbg !8525
  %bf.lshr151 = lshr i40 %bf.load150, 24, !dbg !8525
  %bf.clear152 = and i40 %bf.lshr151, 1, !dbg !8525
  %bf.cast153 = trunc i40 %bf.clear152 to i32, !dbg !8525
  %tobool154 = icmp ne i32 %bf.cast153, 0, !dbg !8523
  br i1 %tobool154, label %if.then155, label %if.end180, !dbg !8526

if.then155:                                       ; preds = %land.lhs.true147
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x265, metadata !8527, metadata !DIExpression()), !dbg !8530
  %111 = load i32, i32* %available_buses.addr, align 4, !dbg !8530
  store i32 %111, i32* %__UNIQUE_ID___x265, align 4, !dbg !8530
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y266, metadata !8531, metadata !DIExpression()), !dbg !8530
  %112 = load i64, i64* @pci_hotplug_bus_size, align 8, !dbg !8530
  %sub156 = sub i64 %112, 1, !dbg !8530
  %conv157 = trunc i64 %sub156 to i32, !dbg !8530
  store i32 %conv157, i32* %__UNIQUE_ID___y266, align 4, !dbg !8530
  %113 = load i32, i32* %__UNIQUE_ID___x265, align 4, !dbg !8530
  %114 = load i32, i32* %__UNIQUE_ID___y266, align 4, !dbg !8530
  %cmp159 = icmp ugt i32 %113, %114, !dbg !8530
  br i1 %cmp159, label %cond.true161, label %cond.false162, !dbg !8530

cond.true161:                                     ; preds = %if.then155
  %115 = load i32, i32* %__UNIQUE_ID___x265, align 4, !dbg !8530
  br label %cond.end163, !dbg !8530

cond.false162:                                    ; preds = %if.then155
  %116 = load i32, i32* %__UNIQUE_ID___y266, align 4, !dbg !8530
  br label %cond.end163, !dbg !8530

cond.end163:                                      ; preds = %cond.false162, %cond.true161
  %cond164 = phi i32 [ %115, %cond.true161 ], [ %116, %cond.false162 ], !dbg !8530
  store i32 %cond164, i32* %tmp158, align 4, !dbg !8530
  %117 = load i32, i32* %tmp158, align 4, !dbg !8530
  store i32 %117, i32* %used_buses, align 4, !dbg !8532
  %118 = load i32, i32* %max, align 4, !dbg !8533
  %119 = load i32, i32* %start, align 4, !dbg !8535
  %sub165 = sub i32 %118, %119, !dbg !8536
  %120 = load i32, i32* %used_buses, align 4, !dbg !8537
  %cmp166 = icmp ult i32 %sub165, %120, !dbg !8538
  br i1 %cmp166, label %if.then168, label %if.end179, !dbg !8539

if.then168:                                       ; preds = %cond.end163
  %121 = load i32, i32* %start, align 4, !dbg !8540
  %122 = load i32, i32* %used_buses, align 4, !dbg !8542
  %add169 = add i32 %121, %122, !dbg !8543
  store i32 %add169, i32* %max, align 4, !dbg !8544
  %123 = load i32, i32* %max, align 4, !dbg !8545
  %conv170 = zext i32 %123 to i64, !dbg !8545
  %124 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8547
  %busn_res171 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %124, i32 0, i32 8, !dbg !8548
  %end = getelementptr inbounds %struct.resource, %struct.resource* %busn_res171, i32 0, i32 1, !dbg !8549
  %125 = load i64, i64* %end, align 8, !dbg !8549
  %cmp172 = icmp ugt i64 %conv170, %125, !dbg !8550
  br i1 %cmp172, label %if.then174, label %if.end178, !dbg !8551

if.then174:                                       ; preds = %if.then168
  %126 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8552
  %busn_res175 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %126, i32 0, i32 8, !dbg !8553
  %end176 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res175, i32 0, i32 1, !dbg !8554
  %127 = load i64, i64* %end176, align 8, !dbg !8554
  %conv177 = trunc i64 %127 to i32, !dbg !8552
  store i32 %conv177, i32* %max, align 4, !dbg !8555
  br label %if.end178, !dbg !8556

if.end178:                                        ; preds = %if.then174, %if.then168
  br label %if.end179, !dbg !8557

if.end179:                                        ; preds = %if.end178, %cond.end163
  br label %if.end180, !dbg !8558

if.end180:                                        ; preds = %if.end179, %land.lhs.true147, %for.end145
  %128 = load i32, i32* %max, align 4, !dbg !8559
  ret i32 %128, !dbg !8560
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local i32 @pcibios_root_bridge_prepare(%struct.pci_host_bridge* %bridge) #0 !dbg !8561 {
entry:
  %bridge.addr = alloca %struct.pci_host_bridge*, align 8
  store %struct.pci_host_bridge* %bridge, %struct.pci_host_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %bridge.addr, metadata !8564, metadata !DIExpression()), !dbg !8565
  ret i32 0, !dbg !8566
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @pcibios_add_bus(%struct.pci_bus* %bus) #0 !dbg !8567 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !8568, metadata !DIExpression()), !dbg !8569
  ret void, !dbg !8570
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @pcibios_remove_bus(%struct.pci_bus* %bus) #0 !dbg !8571 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !8572, metadata !DIExpression()), !dbg !8573
  ret void, !dbg !8574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_bus* @pci_create_root_bus(%struct.device* %parent, i32 %bus, %struct.pci_ops* %ops, i8* %sysdata, %struct.list_head* %resources) #0 !dbg !8575 {
entry:
  %retval = alloca %struct.pci_bus*, align 8
  %parent.addr = alloca %struct.device*, align 8
  %bus.addr = alloca i32, align 4
  %ops.addr = alloca %struct.pci_ops*, align 8
  %sysdata.addr = alloca i8*, align 8
  %resources.addr = alloca %struct.list_head*, align 8
  %error = alloca i32, align 4
  %bridge = alloca %struct.pci_host_bridge*, align 8
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !8578, metadata !DIExpression()), !dbg !8579
  store i32 %bus, i32* %bus.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bus.addr, metadata !8580, metadata !DIExpression()), !dbg !8581
  store %struct.pci_ops* %ops, %struct.pci_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_ops** %ops.addr, metadata !8582, metadata !DIExpression()), !dbg !8583
  store i8* %sysdata, i8** %sysdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sysdata.addr, metadata !8584, metadata !DIExpression()), !dbg !8585
  store %struct.list_head* %resources, %struct.list_head** %resources.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %resources.addr, metadata !8586, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.declare(metadata i32* %error, metadata !8588, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %bridge, metadata !8590, metadata !DIExpression()), !dbg !8591
  %call = call %struct.pci_host_bridge* @pci_alloc_host_bridge(i64 0) #9, !dbg !8592
  store %struct.pci_host_bridge* %call, %struct.pci_host_bridge** %bridge, align 8, !dbg !8593
  %0 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !8594
  %tobool = icmp ne %struct.pci_host_bridge* %0, null, !dbg !8594
  br i1 %tobool, label %if.end, label %if.then, !dbg !8596

if.then:                                          ; preds = %entry
  store %struct.pci_bus* null, %struct.pci_bus** %retval, align 8, !dbg !8597
  br label %return, !dbg !8597

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !8598
  %2 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !8599
  %dev = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %2, i32 0, i32 0, !dbg !8600
  %parent1 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !8601
  store %struct.device* %1, %struct.device** %parent1, align 64, !dbg !8602
  %3 = load %struct.list_head*, %struct.list_head** %resources.addr, align 8, !dbg !8603
  %4 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !8604
  %windows = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %4, i32 0, i32 6, !dbg !8605
  call void @list_splice_init(%struct.list_head* %3, %struct.list_head* %windows) #9, !dbg !8606
  %5 = load i8*, i8** %sysdata.addr, align 8, !dbg !8607
  %6 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !8608
  %sysdata2 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %6, i32 0, i32 4, !dbg !8609
  store i8* %5, i8** %sysdata2, align 16, !dbg !8610
  %7 = load i32, i32* %bus.addr, align 4, !dbg !8611
  %8 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !8612
  %busnr = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %8, i32 0, i32 5, !dbg !8613
  store i32 %7, i32* %busnr, align 8, !dbg !8614
  %9 = load %struct.pci_ops*, %struct.pci_ops** %ops.addr, align 8, !dbg !8615
  %10 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !8616
  %ops3 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %10, i32 0, i32 2, !dbg !8617
  store %struct.pci_ops* %9, %struct.pci_ops** %ops3, align 64, !dbg !8618
  %11 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !8619
  %call4 = call i32 @pci_register_host_bridge(%struct.pci_host_bridge* %11) #9, !dbg !8620
  store i32 %call4, i32* %error, align 4, !dbg !8621
  %12 = load i32, i32* %error, align 4, !dbg !8622
  %cmp = icmp slt i32 %12, 0, !dbg !8624
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !8625

if.then5:                                         ; preds = %if.end
  br label %err_out, !dbg !8626

if.end6:                                          ; preds = %if.end
  %13 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !8627
  %bus7 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %13, i32 0, i32 1, !dbg !8628
  %14 = load %struct.pci_bus*, %struct.pci_bus** %bus7, align 8, !dbg !8628
  store %struct.pci_bus* %14, %struct.pci_bus** %retval, align 8, !dbg !8629
  br label %return, !dbg !8629

err_out:                                          ; preds = %if.then5
  call void @llvm.dbg.label(metadata !8630), !dbg !8631
  %15 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !8632
  %dev8 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %15, i32 0, i32 0, !dbg !8633
  call void @put_device(%struct.device* %dev8) #9, !dbg !8634
  store %struct.pci_bus* null, %struct.pci_bus** %retval, align 8, !dbg !8635
  br label %return, !dbg !8635

return:                                           ; preds = %err_out, %if.end6, %if.then
  %16 = load %struct.pci_bus*, %struct.pci_bus** %retval, align 8, !dbg !8636
  ret %struct.pci_bus* %16, !dbg !8636
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_init(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !8637 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8638, metadata !DIExpression()), !dbg !8639
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8640, metadata !DIExpression()), !dbg !8641
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8642
  %call = call i32 @list_empty(%struct.list_head* %0) #9, !dbg !8644
  %tobool = icmp ne i32 %call, 0, !dbg !8644
  br i1 %tobool, label %if.end, label %if.then, !dbg !8645

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8646
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8648
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8649
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8650
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8650
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %2, %struct.list_head* %4) #9, !dbg !8651
  %5 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8652
  call void @INIT_LIST_HEAD(%struct.list_head* %5) #9, !dbg !8653
  br label %if.end, !dbg !8654

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_register_host_bridge(%struct.pci_host_bridge* %bridge) #0 !dbg !8656 {
entry:
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.pci_host_bridge*, align 8
  %parent = alloca %struct.device*, align 8
  %window = alloca %struct.resource_entry*, align 8
  %n = alloca %struct.resource_entry*, align 8
  %bus = alloca %struct.pci_bus*, align 8
  %b = alloca %struct.pci_bus*, align 8
  %offset = alloca i64, align 8
  %resources = alloca %struct.list_head, align 8
  %res = alloca %struct.resource*, align 8
  %addr = alloca [64 x i8], align 16
  %fmt = alloca i8*, align 8
  %name = alloca i8*, align 8
  %err = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp92 = alloca %struct.resource_entry*, align 8
  %__mptr93 = alloca i8*, align 8
  %tmp97 = alloca %struct.resource_entry*, align 8
  %__mptr132 = alloca i8*, align 8
  %tmp137 = alloca %struct.resource_entry*, align 8
  store %struct.pci_host_bridge* %bridge, %struct.pci_host_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %bridge.addr, metadata !8657, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.declare(metadata %struct.device** %parent, metadata !8659, metadata !DIExpression()), !dbg !8660
  %0 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8661
  %dev = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %0, i32 0, i32 0, !dbg !8662
  %parent1 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !8663
  %1 = load %struct.device*, %struct.device** %parent1, align 64, !dbg !8663
  store %struct.device* %1, %struct.device** %parent, align 8, !dbg !8660
  call void @llvm.dbg.declare(metadata %struct.resource_entry** %window, metadata !8664, metadata !DIExpression()), !dbg !8665
  call void @llvm.dbg.declare(metadata %struct.resource_entry** %n, metadata !8666, metadata !DIExpression()), !dbg !8667
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus, metadata !8668, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !8670, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !8672, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.declare(metadata %struct.list_head* %resources, metadata !8674, metadata !DIExpression()), !dbg !8675
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %resources, i32 0, i32 0, !dbg !8675
  store %struct.list_head* %resources, %struct.list_head** %next, align 8, !dbg !8675
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %resources, i32 0, i32 1, !dbg !8675
  store %struct.list_head* %resources, %struct.list_head** %prev, align 8, !dbg !8675
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !8676, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.declare(metadata [64 x i8]* %addr, metadata !8678, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !8681, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.declare(metadata i8** %name, metadata !8683, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8685, metadata !DIExpression()), !dbg !8686
  %call = call %struct.pci_bus* @pci_alloc_bus(%struct.pci_bus* null) #9, !dbg !8687
  store %struct.pci_bus* %call, %struct.pci_bus** %bus, align 8, !dbg !8688
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8689
  %tobool = icmp ne %struct.pci_bus* %2, null, !dbg !8689
  br i1 %tobool, label %if.end, label %if.then, !dbg !8691

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8692
  br label %return, !dbg !8692

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8693
  %4 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8694
  %bus2 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %4, i32 0, i32 1, !dbg !8695
  store %struct.pci_bus* %3, %struct.pci_bus** %bus2, align 8, !dbg !8696
  %5 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8697
  %windows = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %5, i32 0, i32 6, !dbg !8698
  call void @list_splice_init(%struct.list_head* %windows, %struct.list_head* %resources) #9, !dbg !8699
  %6 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8700
  %sysdata = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %6, i32 0, i32 4, !dbg !8701
  %7 = load i8*, i8** %sysdata, align 16, !dbg !8701
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8702
  %sysdata3 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 11, !dbg !8703
  store i8* %7, i8** %sysdata3, align 8, !dbg !8704
  %9 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8705
  %msi = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %9, i32 0, i32 12, !dbg !8706
  %10 = load %struct.msi_controller*, %struct.msi_controller** %msi, align 32, !dbg !8706
  %11 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8707
  %msi4 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %11, i32 0, i32 10, !dbg !8708
  store %struct.msi_controller* %10, %struct.msi_controller** %msi4, align 8, !dbg !8709
  %12 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8710
  %ops = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %12, i32 0, i32 2, !dbg !8711
  %13 = load %struct.pci_ops*, %struct.pci_ops** %ops, align 64, !dbg !8711
  %14 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8712
  %ops5 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %14, i32 0, i32 9, !dbg !8713
  store %struct.pci_ops* %13, %struct.pci_ops** %ops5, align 8, !dbg !8714
  %15 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8715
  %busnr = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %15, i32 0, i32 5, !dbg !8716
  %16 = load i32, i32* %busnr, align 8, !dbg !8716
  %conv = sext i32 %16 to i64, !dbg !8715
  %17 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8717
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %17, i32 0, i32 8, !dbg !8718
  %start = getelementptr inbounds %struct.resource, %struct.resource* %busn_res, i32 0, i32 0, !dbg !8719
  store i64 %conv, i64* %start, align 8, !dbg !8720
  %conv6 = trunc i64 %conv to i8, !dbg !8717
  %18 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8721
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %18, i32 0, i32 13, !dbg !8722
  store i8 %conv6, i8* %number, align 8, !dbg !8723
  %19 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8724
  %call7 = call i32 @pci_domain_nr(%struct.pci_bus* %19) #9, !dbg !8725
  %20 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8726
  %busnr8 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %20, i32 0, i32 5, !dbg !8727
  %21 = load i32, i32* %busnr8, align 8, !dbg !8727
  %call9 = call %struct.pci_bus* @pci_find_bus(i32 %call7, i32 %21) #9, !dbg !8728
  store %struct.pci_bus* %call9, %struct.pci_bus** %b, align 8, !dbg !8729
  %22 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !8730
  %tobool10 = icmp ne %struct.pci_bus* %22, null, !dbg !8730
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !8732

if.then11:                                        ; preds = %if.end
  store i32 -17, i32* %err, align 4, !dbg !8733
  br label %free, !dbg !8735

if.end12:                                         ; preds = %if.end
  %23 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8736
  %dev13 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %23, i32 0, i32 0, !dbg !8737
  %24 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8738
  %call14 = call i32 @pci_domain_nr(%struct.pci_bus* %24) #9, !dbg !8739
  %25 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8740
  %busnr15 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %25, i32 0, i32 5, !dbg !8741
  %26 = load i32, i32* %busnr15, align 8, !dbg !8741
  %call16 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.79, i64 0, i64 0), i32 %call14, i32 %26) #9, !dbg !8742
  %27 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8743
  %call17 = call i32 @pcibios_root_bridge_prepare(%struct.pci_host_bridge* %27) #9, !dbg !8744
  store i32 %call17, i32* %err, align 4, !dbg !8745
  %28 = load i32, i32* %err, align 4, !dbg !8746
  %tobool18 = icmp ne i32 %28, 0, !dbg !8746
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !8748

if.then19:                                        ; preds = %if.end12
  br label %free, !dbg !8749

if.end20:                                         ; preds = %if.end12
  %29 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8750
  %dev21 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %29, i32 0, i32 0, !dbg !8751
  %call22 = call i32 @device_add(%struct.device* %dev21) #9, !dbg !8752
  store i32 %call22, i32* %err, align 4, !dbg !8753
  %30 = load i32, i32* %err, align 4, !dbg !8754
  %tobool23 = icmp ne i32 %30, 0, !dbg !8754
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !8756

if.then24:                                        ; preds = %if.end20
  %31 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8757
  %dev25 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %31, i32 0, i32 0, !dbg !8759
  call void @put_device(%struct.device* %dev25) #9, !dbg !8760
  br label %free, !dbg !8761

if.end26:                                         ; preds = %if.end20
  %32 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8762
  %dev27 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %32, i32 0, i32 0, !dbg !8763
  %call28 = call %struct.device* @get_device(%struct.device* %dev27) #9, !dbg !8764
  %33 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8765
  %bridge29 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %33, i32 0, i32 20, !dbg !8766
  store %struct.device* %call28, %struct.device** %bridge29, align 8, !dbg !8767
  %34 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8768
  %bridge30 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %34, i32 0, i32 20, !dbg !8769
  %35 = load %struct.device*, %struct.device** %bridge30, align 8, !dbg !8769
  call void @device_enable_async_suspend(%struct.device* %35) #9, !dbg !8770
  %36 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8771
  call void @pci_set_bus_of_node(%struct.pci_bus* %36) #9, !dbg !8772
  %37 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8773
  call void @pci_set_bus_msi_domain(%struct.pci_bus* %37) #9, !dbg !8774
  %38 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8775
  %tobool31 = icmp ne %struct.device* %38, null, !dbg !8775
  br i1 %tobool31, label %if.end34, label %if.then32, !dbg !8777

if.then32:                                        ; preds = %if.end26
  %39 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8778
  %bridge33 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %39, i32 0, i32 20, !dbg !8779
  %40 = load %struct.device*, %struct.device** %bridge33, align 8, !dbg !8779
  %41 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8780
  call void @set_dev_node(%struct.device* %40, i32 -1) #9, !dbg !8781
  br label %if.end34, !dbg !8781

if.end34:                                         ; preds = %if.then32, %if.end26
  %42 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8782
  %dev35 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %42, i32 0, i32 21, !dbg !8783
  %class = getelementptr inbounds %struct.device, %struct.device* %dev35, i32 0, i32 29, !dbg !8784
  store %struct.class* @pcibus_class, %struct.class** %class, align 8, !dbg !8785
  %43 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8786
  %bridge36 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %43, i32 0, i32 20, !dbg !8787
  %44 = load %struct.device*, %struct.device** %bridge36, align 8, !dbg !8787
  %45 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8788
  %dev37 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %45, i32 0, i32 21, !dbg !8789
  %parent38 = getelementptr inbounds %struct.device, %struct.device* %dev37, i32 0, i32 1, !dbg !8790
  store %struct.device* %44, %struct.device** %parent38, align 8, !dbg !8791
  %46 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8792
  %dev39 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %46, i32 0, i32 21, !dbg !8793
  %47 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8794
  %call40 = call i32 @pci_domain_nr(%struct.pci_bus* %47) #9, !dbg !8795
  %48 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8796
  %number41 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %48, i32 0, i32 13, !dbg !8797
  %49 = load i8, i8* %number41, align 8, !dbg !8797
  %conv42 = zext i8 %49 to i32, !dbg !8796
  %call43 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0), i32 %call40, i32 %conv42) #9, !dbg !8798
  %50 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8799
  %dev44 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %50, i32 0, i32 21, !dbg !8800
  %call45 = call i8* @dev_name(%struct.device* %dev44) #9, !dbg !8801
  store i8* %call45, i8** %name, align 8, !dbg !8802
  %51 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8803
  %dev46 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %51, i32 0, i32 21, !dbg !8804
  %call47 = call i32 @device_register(%struct.device* %dev46) #9, !dbg !8805
  store i32 %call47, i32* %err, align 4, !dbg !8806
  %52 = load i32, i32* %err, align 4, !dbg !8807
  %tobool48 = icmp ne i32 %52, 0, !dbg !8807
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !8809

if.then49:                                        ; preds = %if.end34
  br label %unregister, !dbg !8810

if.end50:                                         ; preds = %if.end34
  %53 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8811
  call void @pcibios_add_bus(%struct.pci_bus* %53) #9, !dbg !8812
  %54 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8813
  %ops51 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %54, i32 0, i32 9, !dbg !8815
  %55 = load %struct.pci_ops*, %struct.pci_ops** %ops51, align 8, !dbg !8815
  %add_bus = getelementptr inbounds %struct.pci_ops, %struct.pci_ops* %55, i32 0, i32 0, !dbg !8816
  %56 = load i32 (%struct.pci_bus*)*, i32 (%struct.pci_bus*)** %add_bus, align 8, !dbg !8816
  %tobool52 = icmp ne i32 (%struct.pci_bus*)* %56, null, !dbg !8813
  br i1 %tobool52, label %if.then53, label %if.end84, !dbg !8817

if.then53:                                        ; preds = %if.end50
  %57 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8818
  %ops54 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %57, i32 0, i32 9, !dbg !8820
  %58 = load %struct.pci_ops*, %struct.pci_ops** %ops54, align 8, !dbg !8820
  %add_bus55 = getelementptr inbounds %struct.pci_ops, %struct.pci_ops* %58, i32 0, i32 0, !dbg !8821
  %59 = load i32 (%struct.pci_bus*)*, i32 (%struct.pci_bus*)** %add_bus55, align 8, !dbg !8821
  %60 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8822
  %call56 = call i32 %59(%struct.pci_bus* %60) #9, !dbg !8818
  store i32 %call56, i32* %err, align 4, !dbg !8823
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8824, metadata !DIExpression()), !dbg !8827
  %61 = load i32, i32* %err, align 4, !dbg !8827
  %cmp = icmp slt i32 %61, 0, !dbg !8827
  %lnot = xor i1 %cmp, true, !dbg !8827
  %lnot58 = xor i1 %lnot, true, !dbg !8827
  %lnot.ext = zext i1 %lnot58 to i32, !dbg !8827
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8827
  %62 = load i32, i32* %__ret_warn_on, align 4, !dbg !8828
  %tobool59 = icmp ne i32 %62, 0, !dbg !8828
  %lnot60 = xor i1 %tobool59, true, !dbg !8828
  %lnot62 = xor i1 %lnot60, true, !dbg !8828
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !8828
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !8828
  %tobool65 = icmp ne i64 %conv64, 0, !dbg !8828
  br i1 %tobool65, label %if.then66, label %if.end73, !dbg !8827

if.then66:                                        ; preds = %if.then53
  br label %do.body, !dbg !8828

do.body:                                          ; preds = %if.then66
  br label %do.body67, !dbg !8830

do.body67:                                        ; preds = %do.body
  br label %do.end, !dbg !8832

do.end:                                           ; preds = %do.body67
  br label %do.body68, !dbg !8830

do.body68:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0), i32 946, i32 2305, i64 12) #11, !dbg !8834, !srcloc !8836
  br label %do.end69, !dbg !8834

do.end69:                                         ; preds = %do.body68
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 246) #11, !dbg !8837, !srcloc !8839
  br label %do.body70, !dbg !8830

do.body70:                                        ; preds = %do.end69
  br label %do.end71, !dbg !8840

do.end71:                                         ; preds = %do.body70
  br label %do.end72, !dbg !8830

do.end72:                                         ; preds = %do.end71
  br label %if.end73, !dbg !8830

if.end73:                                         ; preds = %do.end72, %if.then53
  %63 = load i32, i32* %__ret_warn_on, align 4, !dbg !8827
  %tobool74 = icmp ne i32 %63, 0, !dbg !8827
  %lnot75 = xor i1 %tobool74, true, !dbg !8827
  %lnot77 = xor i1 %lnot75, true, !dbg !8827
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !8827
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !8827
  store i64 %conv79, i64* %tmp, align 8, !dbg !8828
  %64 = load i64, i64* %tmp, align 8, !dbg !8827
  %tobool80 = icmp ne i64 %64, 0, !dbg !8842
  br i1 %tobool80, label %if.then81, label %if.end83, !dbg !8843

if.then81:                                        ; preds = %if.end73
  %65 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8844
  %dev82 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %65, i32 0, i32 21, !dbg !8844
  %66 = load i32, i32* %err, align 4, !dbg !8844
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev82, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58, i64 0, i64 0), i32 %66) #10, !dbg !8844
  br label %if.end83, !dbg !8844

if.end83:                                         ; preds = %if.then81, %if.end73
  br label %if.end84, !dbg !8845

if.end84:                                         ; preds = %if.end83, %if.end50
  %67 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8846
  call void @pci_create_legacy_files(%struct.pci_bus* %67) #9, !dbg !8847
  %68 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8848
  %tobool85 = icmp ne %struct.device* %68, null, !dbg !8848
  br i1 %tobool85, label %if.then86, label %if.else, !dbg !8850

if.then86:                                        ; preds = %if.end84
  %69 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8851
  %70 = load i8*, i8** %name, align 8, !dbg !8851
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %69, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.80, i64 0, i64 0), i8* %70) #10, !dbg !8851
  br label %if.end88, !dbg !8851

if.else:                                          ; preds = %if.end84
  %71 = load i8*, i8** %name, align 8, !dbg !8852
  %call87 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.81, i64 0, i64 0), i8* %71) #10, !dbg !8852
  br label %if.end88

if.end88:                                         ; preds = %if.else, %if.then86
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8853, metadata !DIExpression()), !dbg !8856
  %next89 = getelementptr inbounds %struct.list_head, %struct.list_head* %resources, i32 0, i32 0, !dbg !8856
  %72 = load %struct.list_head*, %struct.list_head** %next89, align 8, !dbg !8856
  %73 = bitcast %struct.list_head* %72 to i8*, !dbg !8856
  store i8* %73, i8** %__mptr, align 8, !dbg !8856
  br label %do.body90, !dbg !8856

do.body90:                                        ; preds = %if.end88
  br label %do.end91, !dbg !8857

do.end91:                                         ; preds = %do.body90
  %74 = load i8*, i8** %__mptr, align 8, !dbg !8856
  %add.ptr = getelementptr i8, i8* %74, i64 0, !dbg !8856
  %75 = bitcast i8* %add.ptr to %struct.resource_entry*, !dbg !8856
  store %struct.resource_entry* %75, %struct.resource_entry** %tmp92, align 8, !dbg !8857
  %76 = load %struct.resource_entry*, %struct.resource_entry** %tmp92, align 8, !dbg !8856
  store %struct.resource_entry* %76, %struct.resource_entry** %window, align 8, !dbg !8859
  call void @llvm.dbg.declare(metadata i8** %__mptr93, metadata !8860, metadata !DIExpression()), !dbg !8862
  %77 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !8862
  %node = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %77, i32 0, i32 0, !dbg !8862
  %next94 = getelementptr inbounds %struct.list_head, %struct.list_head* %node, i32 0, i32 0, !dbg !8862
  %78 = load %struct.list_head*, %struct.list_head** %next94, align 8, !dbg !8862
  %79 = bitcast %struct.list_head* %78 to i8*, !dbg !8862
  store i8* %79, i8** %__mptr93, align 8, !dbg !8862
  br label %do.body95, !dbg !8862

do.body95:                                        ; preds = %do.end91
  br label %do.end96, !dbg !8863

do.end96:                                         ; preds = %do.body95
  %80 = load i8*, i8** %__mptr93, align 8, !dbg !8862
  %add.ptr98 = getelementptr i8, i8* %80, i64 0, !dbg !8862
  %81 = bitcast i8* %add.ptr98 to %struct.resource_entry*, !dbg !8862
  store %struct.resource_entry* %81, %struct.resource_entry** %tmp97, align 8, !dbg !8863
  %82 = load %struct.resource_entry*, %struct.resource_entry** %tmp97, align 8, !dbg !8862
  store %struct.resource_entry* %82, %struct.resource_entry** %n, align 8, !dbg !8859
  br label %for.cond, !dbg !8859

for.cond:                                         ; preds = %do.end136, %do.end96
  %83 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !8865
  %node99 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %83, i32 0, i32 0, !dbg !8865
  %cmp100 = icmp eq %struct.list_head* %node99, %resources, !dbg !8865
  %lnot102 = xor i1 %cmp100, true, !dbg !8865
  br i1 %lnot102, label %for.body, label %for.end, !dbg !8859

for.body:                                         ; preds = %for.cond
  %84 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !8867
  %node104 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %84, i32 0, i32 0, !dbg !8869
  %85 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8870
  %windows105 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %85, i32 0, i32 6, !dbg !8871
  call void @list_move_tail(%struct.list_head* %node104, %struct.list_head* %windows105) #9, !dbg !8872
  %86 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !8873
  %offset106 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %86, i32 0, i32 2, !dbg !8874
  %87 = load i64, i64* %offset106, align 8, !dbg !8874
  store i64 %87, i64* %offset, align 8, !dbg !8875
  %88 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !8876
  %res107 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %88, i32 0, i32 1, !dbg !8877
  %89 = load %struct.resource*, %struct.resource** %res107, align 8, !dbg !8877
  store %struct.resource* %89, %struct.resource** %res, align 8, !dbg !8878
  %90 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8879
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %90, i32 0, i32 3, !dbg !8881
  %91 = load i64, i64* %flags, align 8, !dbg !8881
  %and = and i64 %91, 4096, !dbg !8882
  %tobool108 = icmp ne i64 %and, 0, !dbg !8882
  br i1 %tobool108, label %if.then109, label %if.else114, !dbg !8883

if.then109:                                       ; preds = %for.body
  %92 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8884
  %93 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8885
  %number110 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %93, i32 0, i32 13, !dbg !8886
  %94 = load i8, i8* %number110, align 8, !dbg !8886
  %conv111 = zext i8 %94 to i32, !dbg !8885
  %95 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8887
  %end = getelementptr inbounds %struct.resource, %struct.resource* %95, i32 0, i32 1, !dbg !8888
  %96 = load i64, i64* %end, align 8, !dbg !8888
  %conv112 = trunc i64 %96 to i32, !dbg !8887
  %call113 = call i32 @pci_bus_insert_busn_res(%struct.pci_bus* %92, i32 %conv111, i32 %conv112) #9, !dbg !8889
  br label %if.end115, !dbg !8889

if.else114:                                       ; preds = %for.body
  %97 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8890
  %98 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8891
  call void @pci_bus_add_resource(%struct.pci_bus* %97, %struct.resource* %98, i32 0) #9, !dbg !8892
  br label %if.end115

if.end115:                                        ; preds = %if.else114, %if.then109
  %99 = load i64, i64* %offset, align 8, !dbg !8893
  %tobool116 = icmp ne i64 %99, 0, !dbg !8893
  br i1 %tobool116, label %if.then117, label %if.else128, !dbg !8895

if.then117:                                       ; preds = %if.end115
  %100 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8896
  %call118 = call i64 @resource_type(%struct.resource* %100) #9, !dbg !8899
  %cmp119 = icmp eq i64 %call118, 256, !dbg !8900
  br i1 %cmp119, label %if.then121, label %if.else122, !dbg !8901

if.then121:                                       ; preds = %if.then117
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.82, i64 0, i64 0), i8** %fmt, align 8, !dbg !8902
  br label %if.end123, !dbg !8903

if.else122:                                       ; preds = %if.then117
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.83, i64 0, i64 0), i8** %fmt, align 8, !dbg !8904
  br label %if.end123

if.end123:                                        ; preds = %if.else122, %if.then121
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %addr, i64 0, i64 0, !dbg !8905
  %101 = load i8*, i8** %fmt, align 8, !dbg !8906
  %102 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8907
  %start124 = getelementptr inbounds %struct.resource, %struct.resource* %102, i32 0, i32 0, !dbg !8908
  %103 = load i64, i64* %start124, align 8, !dbg !8908
  %104 = load i64, i64* %offset, align 8, !dbg !8909
  %sub = sub i64 %103, %104, !dbg !8910
  %105 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8911
  %end125 = getelementptr inbounds %struct.resource, %struct.resource* %105, i32 0, i32 1, !dbg !8912
  %106 = load i64, i64* %end125, align 8, !dbg !8912
  %107 = load i64, i64* %offset, align 8, !dbg !8913
  %sub126 = sub i64 %106, %107, !dbg !8914
  %call127 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 64, i8* %101, i64 %sub, i64 %sub126) #9, !dbg !8915
  br label %if.end129, !dbg !8916

if.else128:                                       ; preds = %if.end115
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %addr, i64 0, i64 0, !dbg !8917
  store i8 0, i8* %arrayidx, align 16, !dbg !8918
  br label %if.end129

if.end129:                                        ; preds = %if.else128, %if.end123
  %108 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8919
  %dev130 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %108, i32 0, i32 21, !dbg !8919
  %109 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8919
  %arraydecay131 = getelementptr inbounds [64 x i8], [64 x i8]* %addr, i64 0, i64 0, !dbg !8919
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev130, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i64 0, i64 0), %struct.resource* %109, i8* %arraydecay131) #10, !dbg !8919
  br label %for.inc, !dbg !8920

for.inc:                                          ; preds = %if.end129
  %110 = load %struct.resource_entry*, %struct.resource_entry** %n, align 8, !dbg !8865
  store %struct.resource_entry* %110, %struct.resource_entry** %window, align 8, !dbg !8865
  call void @llvm.dbg.declare(metadata i8** %__mptr132, metadata !8921, metadata !DIExpression()), !dbg !8923
  %111 = load %struct.resource_entry*, %struct.resource_entry** %n, align 8, !dbg !8923
  %node133 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %111, i32 0, i32 0, !dbg !8923
  %next134 = getelementptr inbounds %struct.list_head, %struct.list_head* %node133, i32 0, i32 0, !dbg !8923
  %112 = load %struct.list_head*, %struct.list_head** %next134, align 8, !dbg !8923
  %113 = bitcast %struct.list_head* %112 to i8*, !dbg !8923
  store i8* %113, i8** %__mptr132, align 8, !dbg !8923
  br label %do.body135, !dbg !8923

do.body135:                                       ; preds = %for.inc
  br label %do.end136, !dbg !8924

do.end136:                                        ; preds = %do.body135
  %114 = load i8*, i8** %__mptr132, align 8, !dbg !8923
  %add.ptr138 = getelementptr i8, i8* %114, i64 0, !dbg !8923
  %115 = bitcast i8* %add.ptr138 to %struct.resource_entry*, !dbg !8923
  store %struct.resource_entry* %115, %struct.resource_entry** %tmp137, align 8, !dbg !8924
  %116 = load %struct.resource_entry*, %struct.resource_entry** %tmp137, align 8, !dbg !8923
  store %struct.resource_entry* %116, %struct.resource_entry** %n, align 8, !dbg !8865
  br label %for.cond, !dbg !8865, !llvm.loop !8926

for.end:                                          ; preds = %for.cond
  call void @down_write(%struct.rw_semaphore* @pci_bus_sem) #9, !dbg !8928
  %117 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8929
  %node139 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %117, i32 0, i32 0, !dbg !8930
  call void @list_add_tail(%struct.list_head* %node139, %struct.list_head* @pci_root_buses) #9, !dbg !8931
  call void @up_write(%struct.rw_semaphore* @pci_bus_sem) #9, !dbg !8932
  store i32 0, i32* %retval, align 4, !dbg !8933
  br label %return, !dbg !8933

unregister:                                       ; preds = %if.then49
  call void @llvm.dbg.label(metadata !8934), !dbg !8935
  %118 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8936
  %dev140 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %118, i32 0, i32 0, !dbg !8937
  call void @put_device(%struct.device* %dev140) #9, !dbg !8938
  %119 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8939
  %dev141 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %119, i32 0, i32 0, !dbg !8940
  call void @device_del(%struct.device* %dev141) #9, !dbg !8941
  br label %free, !dbg !8941

free:                                             ; preds = %unregister, %if.then24, %if.then19, %if.then11
  call void @llvm.dbg.label(metadata !8942), !dbg !8943
  %120 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8944
  %121 = bitcast %struct.pci_bus* %120 to i8*, !dbg !8944
  call void @kfree(i8* %121) #9, !dbg !8945
  %122 = load i32, i32* %err, align 4, !dbg !8946
  store i32 %122, i32* %retval, align 4, !dbg !8947
  br label %return, !dbg !8947

return:                                           ; preds = %free, %for.end, %if.then
  %123 = load i32, i32* %retval, align 4, !dbg !8948
  ret i32 %123, !dbg !8948
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_host_probe(%struct.pci_host_bridge* %bridge) #0 !dbg !8949 {
entry:
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.pci_host_bridge*, align 8
  %bus = alloca %struct.pci_bus*, align 8
  %child = alloca %struct.pci_bus*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_bus*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.pci_bus*, align 8
  store %struct.pci_host_bridge* %bridge, %struct.pci_host_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %bridge.addr, metadata !8950, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus, metadata !8952, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %child, metadata !8954, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8956, metadata !DIExpression()), !dbg !8957
  %0 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8958
  %call = call i32 @pci_scan_root_bus_bridge(%struct.pci_host_bridge* %0) #9, !dbg !8959
  store i32 %call, i32* %ret, align 4, !dbg !8960
  %1 = load i32, i32* %ret, align 4, !dbg !8961
  %cmp = icmp slt i32 %1, 0, !dbg !8963
  br i1 %cmp, label %if.then, label %if.end, !dbg !8964

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8965
  %dev = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %2, i32 0, i32 0, !dbg !8965
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !8965
  %3 = load %struct.device*, %struct.device** %parent, align 64, !dbg !8965
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.43, i64 0, i64 0)) #10, !dbg !8965
  %4 = load i32, i32* %ret, align 4, !dbg !8967
  store i32 %4, i32* %retval, align 4, !dbg !8968
  br label %return, !dbg !8968

if.end:                                           ; preds = %entry
  %5 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !8969
  %bus1 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %5, i32 0, i32 1, !dbg !8970
  %6 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !8970
  store %struct.pci_bus* %6, %struct.pci_bus** %bus, align 8, !dbg !8971
  %call2 = call i32 @pci_has_flag(i32 4) #9, !dbg !8972
  %tobool = icmp ne i32 %call2, 0, !dbg !8972
  br i1 %tobool, label %if.then3, label %if.else, !dbg !8974

if.then3:                                         ; preds = %if.end
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8975
  call void @pci_bus_claim_resources(%struct.pci_bus* %7) #9, !dbg !8977
  br label %if.end13, !dbg !8978

if.else:                                          ; preds = %if.end
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8979
  call void @pci_bus_size_bridges(%struct.pci_bus* %8) #9, !dbg !8981
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8982
  call void @pci_bus_assign_resources(%struct.pci_bus* %9) #9, !dbg !8983
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8984, metadata !DIExpression()), !dbg !8987
  %10 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8987
  %children = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %10, i32 0, i32 2, !dbg !8987
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %children, i32 0, i32 0, !dbg !8987
  %11 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8987
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !8987
  store i8* %12, i8** %__mptr, align 8, !dbg !8987
  br label %do.body, !dbg !8987

do.body:                                          ; preds = %if.else
  br label %do.end, !dbg !8988

do.end:                                           ; preds = %do.body
  %13 = load i8*, i8** %__mptr, align 8, !dbg !8987
  %add.ptr = getelementptr i8, i8* %13, i64 0, !dbg !8987
  %14 = bitcast i8* %add.ptr to %struct.pci_bus*, !dbg !8987
  store %struct.pci_bus* %14, %struct.pci_bus** %tmp, align 8, !dbg !8988
  %15 = load %struct.pci_bus*, %struct.pci_bus** %tmp, align 8, !dbg !8987
  store %struct.pci_bus* %15, %struct.pci_bus** %child, align 8, !dbg !8990
  br label %for.cond, !dbg !8990

for.cond:                                         ; preds = %do.end10, %do.end
  %16 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !8991
  %node = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %16, i32 0, i32 0, !dbg !8991
  %17 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8991
  %children4 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %17, i32 0, i32 2, !dbg !8991
  %cmp5 = icmp eq %struct.list_head* %node, %children4, !dbg !8991
  %lnot = xor i1 %cmp5, true, !dbg !8991
  br i1 %lnot, label %for.body, label %for.end, !dbg !8990

for.body:                                         ; preds = %for.cond
  %18 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !8993
  call void @pcie_bus_configure_settings(%struct.pci_bus* %18) #9, !dbg !8994
  br label %for.inc, !dbg !8994

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !8995, metadata !DIExpression()), !dbg !8997
  %19 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !8997
  %node7 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %19, i32 0, i32 0, !dbg !8997
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %node7, i32 0, i32 0, !dbg !8997
  %20 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !8997
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !8997
  store i8* %21, i8** %__mptr6, align 8, !dbg !8997
  br label %do.body9, !dbg !8997

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !8998

do.end10:                                         ; preds = %do.body9
  %22 = load i8*, i8** %__mptr6, align 8, !dbg !8997
  %add.ptr12 = getelementptr i8, i8* %22, i64 0, !dbg !8997
  %23 = bitcast i8* %add.ptr12 to %struct.pci_bus*, !dbg !8997
  store %struct.pci_bus* %23, %struct.pci_bus** %tmp11, align 8, !dbg !8998
  %24 = load %struct.pci_bus*, %struct.pci_bus** %tmp11, align 8, !dbg !8997
  store %struct.pci_bus* %24, %struct.pci_bus** %child, align 8, !dbg !8991
  br label %for.cond, !dbg !8991, !llvm.loop !9000

for.end:                                          ; preds = %for.cond
  br label %if.end13

if.end13:                                         ; preds = %for.end, %if.then3
  %25 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9002
  call void @pci_bus_add_devices(%struct.pci_bus* %25) #9, !dbg !9003
  store i32 0, i32* %retval, align 4, !dbg !9004
  br label %return, !dbg !9004

return:                                           ; preds = %if.end13, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !9005
  ret i32 %26, !dbg !9005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_scan_root_bus_bridge(%struct.pci_host_bridge* %bridge) #0 !dbg !9006 {
entry:
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.pci_host_bridge*, align 8
  %window = alloca %struct.resource_entry*, align 8
  %found = alloca i8, align 1
  %b = alloca %struct.pci_bus*, align 8
  %max = alloca i32, align 4
  %bus = alloca i32, align 4
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.resource_entry*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.resource_entry*, align 8
  store %struct.pci_host_bridge* %bridge, %struct.pci_host_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %bridge.addr, metadata !9007, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.declare(metadata %struct.resource_entry** %window, metadata !9009, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.declare(metadata i8* %found, metadata !9011, metadata !DIExpression()), !dbg !9012
  store i8 0, i8* %found, align 1, !dbg !9012
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !9013, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.declare(metadata i32* %max, metadata !9015, metadata !DIExpression()), !dbg !9016
  call void @llvm.dbg.declare(metadata i32* %bus, metadata !9017, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9019, metadata !DIExpression()), !dbg !9020
  %0 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !9021
  %tobool = icmp ne %struct.pci_host_bridge* %0, null, !dbg !9021
  br i1 %tobool, label %if.end, label %if.then, !dbg !9023

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9024
  br label %return, !dbg !9024

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9025, metadata !DIExpression()), !dbg !9028
  %1 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !9028
  %windows = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %1, i32 0, i32 6, !dbg !9028
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %windows, i32 0, i32 0, !dbg !9028
  %2 = load %struct.list_head*, %struct.list_head** %next, align 32, !dbg !9028
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !9028
  store i8* %3, i8** %__mptr, align 8, !dbg !9028
  br label %do.body, !dbg !9028

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9029

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !9028
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !9028
  %5 = bitcast i8* %add.ptr to %struct.resource_entry*, !dbg !9028
  store %struct.resource_entry* %5, %struct.resource_entry** %tmp, align 8, !dbg !9029
  %6 = load %struct.resource_entry*, %struct.resource_entry** %tmp, align 8, !dbg !9028
  store %struct.resource_entry* %6, %struct.resource_entry** %window, align 8, !dbg !9031
  br label %for.cond, !dbg !9031

for.cond:                                         ; preds = %do.end10, %do.end
  %7 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !9032
  %node = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %7, i32 0, i32 0, !dbg !9032
  %8 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !9032
  %windows1 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %8, i32 0, i32 6, !dbg !9032
  %cmp = icmp eq %struct.list_head* %node, %windows1, !dbg !9032
  %lnot = xor i1 %cmp, true, !dbg !9032
  br i1 %lnot, label %for.body, label %for.end, !dbg !9031

for.body:                                         ; preds = %for.cond
  %9 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !9034
  %res = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %9, i32 0, i32 1, !dbg !9036
  %10 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9036
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %10, i32 0, i32 3, !dbg !9037
  %11 = load i64, i64* %flags, align 8, !dbg !9037
  %and = and i64 %11, 4096, !dbg !9038
  %tobool2 = icmp ne i64 %and, 0, !dbg !9038
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !9039

if.then3:                                         ; preds = %for.body
  %12 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !9040
  %res4 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %12, i32 0, i32 1, !dbg !9042
  %13 = load %struct.resource*, %struct.resource** %res4, align 8, !dbg !9042
  %start = getelementptr inbounds %struct.resource, %struct.resource* %13, i32 0, i32 0, !dbg !9043
  %14 = load i64, i64* %start, align 8, !dbg !9043
  %conv = trunc i64 %14 to i32, !dbg !9040
  %15 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !9044
  %busnr = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %15, i32 0, i32 5, !dbg !9045
  store i32 %conv, i32* %busnr, align 8, !dbg !9046
  store i8 1, i8* %found, align 1, !dbg !9047
  br label %for.end, !dbg !9048

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !9049

for.inc:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !9050, metadata !DIExpression()), !dbg !9052
  %16 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !9052
  %node7 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %16, i32 0, i32 0, !dbg !9052
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %node7, i32 0, i32 0, !dbg !9052
  %17 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !9052
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !9052
  store i8* %18, i8** %__mptr6, align 8, !dbg !9052
  br label %do.body9, !dbg !9052

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !9053

do.end10:                                         ; preds = %do.body9
  %19 = load i8*, i8** %__mptr6, align 8, !dbg !9052
  %add.ptr12 = getelementptr i8, i8* %19, i64 0, !dbg !9052
  %20 = bitcast i8* %add.ptr12 to %struct.resource_entry*, !dbg !9052
  store %struct.resource_entry* %20, %struct.resource_entry** %tmp11, align 8, !dbg !9053
  %21 = load %struct.resource_entry*, %struct.resource_entry** %tmp11, align 8, !dbg !9052
  store %struct.resource_entry* %21, %struct.resource_entry** %window, align 8, !dbg !9032
  br label %for.cond, !dbg !9032, !llvm.loop !9055

for.end:                                          ; preds = %if.then3, %for.cond
  %22 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !9057
  %call = call i32 @pci_register_host_bridge(%struct.pci_host_bridge* %22) #9, !dbg !9058
  store i32 %call, i32* %ret, align 4, !dbg !9059
  %23 = load i32, i32* %ret, align 4, !dbg !9060
  %cmp13 = icmp slt i32 %23, 0, !dbg !9062
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !9063

if.then15:                                        ; preds = %for.end
  %24 = load i32, i32* %ret, align 4, !dbg !9064
  store i32 %24, i32* %retval, align 4, !dbg !9065
  br label %return, !dbg !9065

if.end16:                                         ; preds = %for.end
  %25 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !9066
  %bus17 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %25, i32 0, i32 1, !dbg !9067
  %26 = load %struct.pci_bus*, %struct.pci_bus** %bus17, align 8, !dbg !9067
  store %struct.pci_bus* %26, %struct.pci_bus** %b, align 8, !dbg !9068
  %27 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge.addr, align 8, !dbg !9069
  %busnr18 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %27, i32 0, i32 5, !dbg !9070
  %28 = load i32, i32* %busnr18, align 8, !dbg !9070
  store i32 %28, i32* %bus, align 4, !dbg !9071
  %29 = load i8, i8* %found, align 1, !dbg !9072
  %tobool19 = trunc i8 %29 to i1, !dbg !9072
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !9074

if.then20:                                        ; preds = %if.end16
  %30 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9075
  %dev = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %30, i32 0, i32 21, !dbg !9075
  %31 = load i32, i32* %bus, align 4, !dbg !9075
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.50, i64 0, i64 0), i32 %31) #10, !dbg !9075
  %32 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9077
  %33 = load i32, i32* %bus, align 4, !dbg !9078
  %call21 = call i32 @pci_bus_insert_busn_res(%struct.pci_bus* %32, i32 %33, i32 255) #9, !dbg !9079
  br label %if.end22, !dbg !9080

if.end22:                                         ; preds = %if.then20, %if.end16
  %34 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9081
  %call23 = call i32 @pci_scan_child_bus(%struct.pci_bus* %34) #9, !dbg !9082
  store i32 %call23, i32* %max, align 4, !dbg !9083
  %35 = load i8, i8* %found, align 1, !dbg !9084
  %tobool24 = trunc i8 %35 to i1, !dbg !9084
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !9086

if.then25:                                        ; preds = %if.end22
  %36 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9087
  %37 = load i32, i32* %max, align 4, !dbg !9088
  %call26 = call i32 @pci_bus_update_busn_res_end(%struct.pci_bus* %36, i32 %37) #9, !dbg !9089
  br label %if.end27, !dbg !9089

if.end27:                                         ; preds = %if.then25, %if.end22
  store i32 0, i32* %retval, align 4, !dbg !9090
  br label %return, !dbg !9090

return:                                           ; preds = %if.end27, %if.then15, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !9091
  ret i32 %38, !dbg !9091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_has_flag(i32 %flag) #0 !dbg !9092 {
entry:
  %flag.addr = alloca i32, align 4
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !9093, metadata !DIExpression()), !dbg !9094
  %0 = load i32, i32* @pci_flags, align 4, !dbg !9095
  %1 = load i32, i32* %flag.addr, align 4, !dbg !9096
  %and = and i32 %0, %1, !dbg !9097
  ret i32 %and, !dbg !9098
}

; Function Attrs: noredzone
declare dso_local void @pci_bus_claim_resources(%struct.pci_bus*) #2

; Function Attrs: noredzone
declare dso_local void @pci_bus_size_bridges(%struct.pci_bus*) #2

; Function Attrs: noredzone
declare dso_local void @pci_bus_assign_resources(%struct.pci_bus*) #2

; Function Attrs: noredzone
declare dso_local void @pci_bus_add_devices(%struct.pci_bus*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_bus_insert_busn_res(%struct.pci_bus* %b, i32 %bus, i32 %bus_max) #0 !dbg !9099 {
entry:
  %b.addr = alloca %struct.pci_bus*, align 8
  %bus.addr = alloca i32, align 4
  %bus_max.addr = alloca i32, align 4
  %res = alloca %struct.resource*, align 8
  %parent_res = alloca %struct.resource*, align 8
  %conflict = alloca %struct.resource*, align 8
  store %struct.pci_bus* %b, %struct.pci_bus** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b.addr, metadata !9102, metadata !DIExpression()), !dbg !9103
  store i32 %bus, i32* %bus.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bus.addr, metadata !9104, metadata !DIExpression()), !dbg !9105
  store i32 %bus_max, i32* %bus_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bus_max.addr, metadata !9106, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !9108, metadata !DIExpression()), !dbg !9109
  %0 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9110
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 8, !dbg !9111
  store %struct.resource* %busn_res, %struct.resource** %res, align 8, !dbg !9109
  call void @llvm.dbg.declare(metadata %struct.resource** %parent_res, metadata !9112, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.declare(metadata %struct.resource** %conflict, metadata !9114, metadata !DIExpression()), !dbg !9115
  %1 = load i32, i32* %bus.addr, align 4, !dbg !9116
  %conv = sext i32 %1 to i64, !dbg !9116
  %2 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9117
  %start = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 0, !dbg !9118
  store i64 %conv, i64* %start, align 8, !dbg !9119
  %3 = load i32, i32* %bus_max.addr, align 4, !dbg !9120
  %conv1 = sext i32 %3 to i64, !dbg !9120
  %4 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9121
  %end = getelementptr inbounds %struct.resource, %struct.resource* %4, i32 0, i32 1, !dbg !9122
  store i64 %conv1, i64* %end, align 8, !dbg !9123
  %5 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9124
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 3, !dbg !9125
  store i64 4096, i64* %flags, align 8, !dbg !9126
  %6 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9127
  %call = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %6) #9, !dbg !9129
  br i1 %call, label %if.else, label %if.then, !dbg !9130

if.then:                                          ; preds = %entry
  %7 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9131
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 1, !dbg !9132
  %8 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !9132
  %busn_res2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 8, !dbg !9133
  store %struct.resource* %busn_res2, %struct.resource** %parent_res, align 8, !dbg !9134
  br label %if.end, !dbg !9135

if.else:                                          ; preds = %entry
  %9 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9136
  %call3 = call i32 @pci_domain_nr(%struct.pci_bus* %9) #9, !dbg !9138
  %call4 = call %struct.resource* @get_pci_domain_busn_res(i32 %call3) #9, !dbg !9139
  store %struct.resource* %call4, %struct.resource** %parent_res, align 8, !dbg !9140
  %10 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9141
  %flags5 = getelementptr inbounds %struct.resource, %struct.resource* %10, i32 0, i32 3, !dbg !9142
  %11 = load i64, i64* %flags5, align 8, !dbg !9143
  %or = or i64 %11, 16, !dbg !9143
  store i64 %or, i64* %flags5, align 8, !dbg !9143
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.resource*, %struct.resource** %parent_res, align 8, !dbg !9144
  %13 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9145
  %call6 = call %struct.resource* @request_resource_conflict(%struct.resource* %12, %struct.resource* %13) #9, !dbg !9146
  store %struct.resource* %call6, %struct.resource** %conflict, align 8, !dbg !9147
  %14 = load %struct.resource*, %struct.resource** %conflict, align 8, !dbg !9148
  %tobool = icmp ne %struct.resource* %14, null, !dbg !9148
  br i1 %tobool, label %if.then7, label %if.end10, !dbg !9150

if.then7:                                         ; preds = %if.end
  %15 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9151
  %dev = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %15, i32 0, i32 21, !dbg !9151
  %16 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9151
  %17 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9151
  %call8 = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %17) #9, !dbg !9151
  %18 = zext i1 %call8 to i64, !dbg !9151
  %cond = select i1 %call8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), !dbg !9151
  %19 = load %struct.resource*, %struct.resource** %parent_res, align 8, !dbg !9151
  %20 = load %struct.resource*, %struct.resource** %conflict, align 8, !dbg !9151
  %name = getelementptr inbounds %struct.resource, %struct.resource* %20, i32 0, i32 2, !dbg !9151
  %21 = load i8*, i8** %name, align 8, !dbg !9151
  %22 = load %struct.resource*, %struct.resource** %conflict, align 8, !dbg !9151
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.44, i64 0, i64 0), %struct.resource* %16, i8* %cond, %struct.resource* %19, i8* %21, %struct.resource* %22) #10, !dbg !9151
  br label %if.end10, !dbg !9151

if.end10:                                         ; preds = %if.then7, %if.end
  %23 = load %struct.resource*, %struct.resource** %conflict, align 8, !dbg !9152
  %cmp = icmp eq %struct.resource* %23, null, !dbg !9153
  %conv11 = zext i1 %cmp to i32, !dbg !9153
  ret i32 %conv11, !dbg !9154
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.resource* @get_pci_domain_busn_res(i32 %domain_nr) #0 !dbg !9155 {
entry:
  %retval = alloca %struct.resource*, align 8
  %domain_nr.addr = alloca i32, align 4
  %r = alloca %struct.pci_domain_busn_res*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_domain_busn_res*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp7 = alloca %struct.pci_domain_busn_res*, align 8
  store i32 %domain_nr, i32* %domain_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %domain_nr.addr, metadata !9158, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.declare(metadata %struct.pci_domain_busn_res** %r, metadata !9160, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9162, metadata !DIExpression()), !dbg !9165
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @pci_domain_busn_res_list, i32 0, i32 0), align 8, !dbg !9165
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !9165
  store i8* %1, i8** %__mptr, align 8, !dbg !9165
  br label %do.body, !dbg !9165

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9166

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9165
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !9165
  %3 = bitcast i8* %add.ptr to %struct.pci_domain_busn_res*, !dbg !9165
  store %struct.pci_domain_busn_res* %3, %struct.pci_domain_busn_res** %tmp, align 8, !dbg !9166
  %4 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %tmp, align 8, !dbg !9165
  store %struct.pci_domain_busn_res* %4, %struct.pci_domain_busn_res** %r, align 8, !dbg !9168
  br label %for.cond, !dbg !9168

for.cond:                                         ; preds = %do.end6, %do.end
  %5 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %r, align 8, !dbg !9169
  %list = getelementptr inbounds %struct.pci_domain_busn_res, %struct.pci_domain_busn_res* %5, i32 0, i32 0, !dbg !9169
  %cmp = icmp eq %struct.list_head* %list, @pci_domain_busn_res_list, !dbg !9169
  %lnot = xor i1 %cmp, true, !dbg !9169
  br i1 %lnot, label %for.body, label %for.end, !dbg !9168

for.body:                                         ; preds = %for.cond
  %6 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %r, align 8, !dbg !9171
  %domain_nr1 = getelementptr inbounds %struct.pci_domain_busn_res, %struct.pci_domain_busn_res* %6, i32 0, i32 2, !dbg !9173
  %7 = load i32, i32* %domain_nr1, align 8, !dbg !9173
  %8 = load i32, i32* %domain_nr.addr, align 4, !dbg !9174
  %cmp2 = icmp eq i32 %7, %8, !dbg !9175
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9176

if.then:                                          ; preds = %for.body
  %9 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %r, align 8, !dbg !9177
  %res = getelementptr inbounds %struct.pci_domain_busn_res, %struct.pci_domain_busn_res* %9, i32 0, i32 1, !dbg !9178
  store %struct.resource* %res, %struct.resource** %retval, align 8, !dbg !9179
  br label %return, !dbg !9179

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9174

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !9180, metadata !DIExpression()), !dbg !9182
  %10 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %r, align 8, !dbg !9182
  %list4 = getelementptr inbounds %struct.pci_domain_busn_res, %struct.pci_domain_busn_res* %10, i32 0, i32 0, !dbg !9182
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !9182
  %11 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9182
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !9182
  store i8* %12, i8** %__mptr3, align 8, !dbg !9182
  br label %do.body5, !dbg !9182

do.body5:                                         ; preds = %for.inc
  br label %do.end6, !dbg !9183

do.end6:                                          ; preds = %do.body5
  %13 = load i8*, i8** %__mptr3, align 8, !dbg !9182
  %add.ptr8 = getelementptr i8, i8* %13, i64 0, !dbg !9182
  %14 = bitcast i8* %add.ptr8 to %struct.pci_domain_busn_res*, !dbg !9182
  store %struct.pci_domain_busn_res* %14, %struct.pci_domain_busn_res** %tmp7, align 8, !dbg !9183
  %15 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %tmp7, align 8, !dbg !9182
  store %struct.pci_domain_busn_res* %15, %struct.pci_domain_busn_res** %r, align 8, !dbg !9169
  br label %for.cond, !dbg !9169, !llvm.loop !9185

for.end:                                          ; preds = %for.cond
  %call = call i8* @kzalloc(i64 88, i32 3264) #9, !dbg !9187
  %16 = bitcast i8* %call to %struct.pci_domain_busn_res*, !dbg !9187
  store %struct.pci_domain_busn_res* %16, %struct.pci_domain_busn_res** %r, align 8, !dbg !9188
  %17 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %r, align 8, !dbg !9189
  %tobool = icmp ne %struct.pci_domain_busn_res* %17, null, !dbg !9189
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !9191

if.then9:                                         ; preds = %for.end
  store %struct.resource* null, %struct.resource** %retval, align 8, !dbg !9192
  br label %return, !dbg !9192

if.end10:                                         ; preds = %for.end
  %18 = load i32, i32* %domain_nr.addr, align 4, !dbg !9193
  %19 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %r, align 8, !dbg !9194
  %domain_nr11 = getelementptr inbounds %struct.pci_domain_busn_res, %struct.pci_domain_busn_res* %19, i32 0, i32 2, !dbg !9195
  store i32 %18, i32* %domain_nr11, align 8, !dbg !9196
  %20 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %r, align 8, !dbg !9197
  %res12 = getelementptr inbounds %struct.pci_domain_busn_res, %struct.pci_domain_busn_res* %20, i32 0, i32 1, !dbg !9198
  %start = getelementptr inbounds %struct.resource, %struct.resource* %res12, i32 0, i32 0, !dbg !9199
  store i64 0, i64* %start, align 8, !dbg !9200
  %21 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %r, align 8, !dbg !9201
  %res13 = getelementptr inbounds %struct.pci_domain_busn_res, %struct.pci_domain_busn_res* %21, i32 0, i32 1, !dbg !9202
  %end = getelementptr inbounds %struct.resource, %struct.resource* %res13, i32 0, i32 1, !dbg !9203
  store i64 255, i64* %end, align 8, !dbg !9204
  %22 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %r, align 8, !dbg !9205
  %res14 = getelementptr inbounds %struct.pci_domain_busn_res, %struct.pci_domain_busn_res* %22, i32 0, i32 1, !dbg !9206
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %res14, i32 0, i32 3, !dbg !9207
  store i64 4112, i64* %flags, align 8, !dbg !9208
  %23 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %r, align 8, !dbg !9209
  %list15 = getelementptr inbounds %struct.pci_domain_busn_res, %struct.pci_domain_busn_res* %23, i32 0, i32 0, !dbg !9210
  call void @list_add_tail(%struct.list_head* %list15, %struct.list_head* @pci_domain_busn_res_list) #9, !dbg !9211
  %24 = load %struct.pci_domain_busn_res*, %struct.pci_domain_busn_res** %r, align 8, !dbg !9212
  %res16 = getelementptr inbounds %struct.pci_domain_busn_res, %struct.pci_domain_busn_res* %24, i32 0, i32 1, !dbg !9213
  store %struct.resource* %res16, %struct.resource** %retval, align 8, !dbg !9214
  br label %return, !dbg !9214

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %25 = load %struct.resource*, %struct.resource** %retval, align 8, !dbg !9215
  ret %struct.resource* %25, !dbg !9215
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @request_resource_conflict(%struct.resource*, %struct.resource*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_bus_update_busn_res_end(%struct.pci_bus* %b, i32 %bus_max) #0 !dbg !9216 {
entry:
  %retval = alloca i32, align 4
  %b.addr = alloca %struct.pci_bus*, align 8
  %bus_max.addr = alloca i32, align 4
  %res = alloca %struct.resource*, align 8
  %old_res = alloca %struct.resource, align 8
  %size = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.pci_bus* %b, %struct.pci_bus** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b.addr, metadata !9217, metadata !DIExpression()), !dbg !9218
  store i32 %bus_max, i32* %bus_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bus_max.addr, metadata !9219, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !9221, metadata !DIExpression()), !dbg !9222
  %0 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9223
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 8, !dbg !9224
  store %struct.resource* %busn_res, %struct.resource** %res, align 8, !dbg !9222
  call void @llvm.dbg.declare(metadata %struct.resource* %old_res, metadata !9225, metadata !DIExpression()), !dbg !9226
  %1 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9227
  %2 = bitcast %struct.resource* %old_res to i8*, !dbg !9228
  %3 = bitcast %struct.resource* %1 to i8*, !dbg !9228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 64, i1 false), !dbg !9228
  call void @llvm.dbg.declare(metadata i64* %size, metadata !9229, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9231, metadata !DIExpression()), !dbg !9232
  %4 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9233
  %start = getelementptr inbounds %struct.resource, %struct.resource* %4, i32 0, i32 0, !dbg !9235
  %5 = load i64, i64* %start, align 8, !dbg !9235
  %6 = load i32, i32* %bus_max.addr, align 4, !dbg !9236
  %conv = sext i32 %6 to i64, !dbg !9236
  %cmp = icmp ugt i64 %5, %conv, !dbg !9237
  br i1 %cmp, label %if.then, label %if.end, !dbg !9238

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9239
  br label %return, !dbg !9239

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %bus_max.addr, align 4, !dbg !9240
  %conv2 = sext i32 %7 to i64, !dbg !9240
  %8 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9241
  %start3 = getelementptr inbounds %struct.resource, %struct.resource* %8, i32 0, i32 0, !dbg !9242
  %9 = load i64, i64* %start3, align 8, !dbg !9242
  %sub = sub i64 %conv2, %9, !dbg !9243
  %add = add i64 %sub, 1, !dbg !9244
  store i64 %add, i64* %size, align 8, !dbg !9245
  %10 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9246
  %11 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9247
  %start4 = getelementptr inbounds %struct.resource, %struct.resource* %11, i32 0, i32 0, !dbg !9248
  %12 = load i64, i64* %start4, align 8, !dbg !9248
  %13 = load i64, i64* %size, align 8, !dbg !9249
  %call = call i32 @adjust_resource(%struct.resource* %10, i64 %12, i64 %13) #9, !dbg !9250
  store i32 %call, i32* %ret, align 4, !dbg !9251
  %14 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9252
  %dev = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %14, i32 0, i32 21, !dbg !9252
  %15 = load i32, i32* %ret, align 4, !dbg !9252
  %tobool = icmp ne i32 %15, 0, !dbg !9252
  %16 = zext i1 %tobool to i64, !dbg !9252
  %cond = select i1 %tobool, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), !dbg !9252
  %17 = load i32, i32* %bus_max.addr, align 4, !dbg !9252
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.46, i64 0, i64 0), %struct.resource* %old_res, i8* %cond, i32 %17) #10, !dbg !9252
  %18 = load i32, i32* %ret, align 4, !dbg !9253
  %tobool5 = icmp ne i32 %18, 0, !dbg !9253
  br i1 %tobool5, label %if.end12, label %land.lhs.true, !dbg !9255

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9256
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %19, i32 0, i32 5, !dbg !9257
  %20 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !9257
  %tobool6 = icmp ne %struct.resource* %20, null, !dbg !9256
  br i1 %tobool6, label %if.end12, label %if.then7, !dbg !9258

if.then7:                                         ; preds = %land.lhs.true
  %21 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9259
  %22 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9260
  %start8 = getelementptr inbounds %struct.resource, %struct.resource* %22, i32 0, i32 0, !dbg !9261
  %23 = load i64, i64* %start8, align 8, !dbg !9261
  %conv9 = trunc i64 %23 to i32, !dbg !9260
  %24 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9262
  %end = getelementptr inbounds %struct.resource, %struct.resource* %24, i32 0, i32 1, !dbg !9263
  %25 = load i64, i64* %end, align 8, !dbg !9263
  %conv10 = trunc i64 %25 to i32, !dbg !9262
  %call11 = call i32 @pci_bus_insert_busn_res(%struct.pci_bus* %21, i32 %conv9, i32 %conv10) #9, !dbg !9264
  br label %if.end12, !dbg !9264

if.end12:                                         ; preds = %if.then7, %land.lhs.true, %if.end
  %26 = load i32, i32* %ret, align 4, !dbg !9265
  store i32 %26, i32* %retval, align 4, !dbg !9266
  br label %return, !dbg !9266

return:                                           ; preds = %if.end12, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !9267
  ret i32 %27, !dbg !9267
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local i32 @adjust_resource(%struct.resource*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_bus_release_busn_res(%struct.pci_bus* %b) #0 !dbg !9268 {
entry:
  %b.addr = alloca %struct.pci_bus*, align 8
  %res = alloca %struct.resource*, align 8
  %ret = alloca i32, align 4
  store %struct.pci_bus* %b, %struct.pci_bus** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b.addr, metadata !9269, metadata !DIExpression()), !dbg !9270
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !9271, metadata !DIExpression()), !dbg !9272
  %0 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9273
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 8, !dbg !9274
  store %struct.resource* %busn_res, %struct.resource** %res, align 8, !dbg !9272
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9275, metadata !DIExpression()), !dbg !9276
  %1 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9277
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %1, i32 0, i32 3, !dbg !9279
  %2 = load i64, i64* %flags, align 8, !dbg !9279
  %tobool = icmp ne i64 %2, 0, !dbg !9277
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9280

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9281
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 5, !dbg !9282
  %4 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !9282
  %tobool1 = icmp ne %struct.resource* %4, null, !dbg !9281
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9283

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !9284

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9285
  %call = call i32 @release_resource(%struct.resource* %5) #9, !dbg !9286
  store i32 %call, i32* %ret, align 4, !dbg !9287
  %6 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9288
  %dev = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 21, !dbg !9288
  %7 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9288
  %8 = load i32, i32* %ret, align 4, !dbg !9288
  %tobool2 = icmp ne i32 %8, 0, !dbg !9288
  %9 = zext i1 %tobool2 to i64, !dbg !9288
  %cond = select i1 %tobool2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), !dbg !9288
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i64 0, i64 0), %struct.resource* %7, i8* %cond) #10, !dbg !9288
  br label %return, !dbg !9289

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9289
}

; Function Attrs: noredzone
declare dso_local i32 @release_resource(%struct.resource*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_bus* @pci_scan_root_bus(%struct.device* %parent, i32 %bus, %struct.pci_ops* %ops, i8* %sysdata, %struct.list_head* %resources) #0 !dbg !9290 {
entry:
  %retval = alloca %struct.pci_bus*, align 8
  %parent.addr = alloca %struct.device*, align 8
  %bus.addr = alloca i32, align 4
  %ops.addr = alloca %struct.pci_ops*, align 8
  %sysdata.addr = alloca i8*, align 8
  %resources.addr = alloca %struct.list_head*, align 8
  %window = alloca %struct.resource_entry*, align 8
  %found = alloca i8, align 1
  %b = alloca %struct.pci_bus*, align 8
  %max = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.resource_entry*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp6 = alloca %struct.resource_entry*, align 8
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !9291, metadata !DIExpression()), !dbg !9292
  store i32 %bus, i32* %bus.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bus.addr, metadata !9293, metadata !DIExpression()), !dbg !9294
  store %struct.pci_ops* %ops, %struct.pci_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_ops** %ops.addr, metadata !9295, metadata !DIExpression()), !dbg !9296
  store i8* %sysdata, i8** %sysdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sysdata.addr, metadata !9297, metadata !DIExpression()), !dbg !9298
  store %struct.list_head* %resources, %struct.list_head** %resources.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %resources.addr, metadata !9299, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.declare(metadata %struct.resource_entry** %window, metadata !9301, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.declare(metadata i8* %found, metadata !9303, metadata !DIExpression()), !dbg !9304
  store i8 0, i8* %found, align 1, !dbg !9304
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !9305, metadata !DIExpression()), !dbg !9306
  call void @llvm.dbg.declare(metadata i32* %max, metadata !9307, metadata !DIExpression()), !dbg !9308
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9309, metadata !DIExpression()), !dbg !9312
  %0 = load %struct.list_head*, %struct.list_head** %resources.addr, align 8, !dbg !9312
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !9312
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9312
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !9312
  store i8* %2, i8** %__mptr, align 8, !dbg !9312
  br label %do.body, !dbg !9312

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9313

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9312
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !9312
  %4 = bitcast i8* %add.ptr to %struct.resource_entry*, !dbg !9312
  store %struct.resource_entry* %4, %struct.resource_entry** %tmp, align 8, !dbg !9313
  %5 = load %struct.resource_entry*, %struct.resource_entry** %tmp, align 8, !dbg !9312
  store %struct.resource_entry* %5, %struct.resource_entry** %window, align 8, !dbg !9315
  br label %for.cond, !dbg !9315

for.cond:                                         ; preds = %do.end5, %do.end
  %6 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !9316
  %node = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %6, i32 0, i32 0, !dbg !9316
  %7 = load %struct.list_head*, %struct.list_head** %resources.addr, align 8, !dbg !9316
  %cmp = icmp eq %struct.list_head* %node, %7, !dbg !9316
  %lnot = xor i1 %cmp, true, !dbg !9316
  br i1 %lnot, label %for.body, label %for.end, !dbg !9315

for.body:                                         ; preds = %for.cond
  %8 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !9318
  %res = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %8, i32 0, i32 1, !dbg !9320
  %9 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9320
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %9, i32 0, i32 3, !dbg !9321
  %10 = load i64, i64* %flags, align 8, !dbg !9321
  %and = and i64 %10, 4096, !dbg !9322
  %tobool = icmp ne i64 %and, 0, !dbg !9322
  br i1 %tobool, label %if.then, label %if.end, !dbg !9323

if.then:                                          ; preds = %for.body
  store i8 1, i8* %found, align 1, !dbg !9324
  br label %for.end, !dbg !9326

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9327

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !9328, metadata !DIExpression()), !dbg !9330
  %11 = load %struct.resource_entry*, %struct.resource_entry** %window, align 8, !dbg !9330
  %node2 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %11, i32 0, i32 0, !dbg !9330
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %node2, i32 0, i32 0, !dbg !9330
  %12 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !9330
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !9330
  store i8* %13, i8** %__mptr1, align 8, !dbg !9330
  br label %do.body4, !dbg !9330

do.body4:                                         ; preds = %for.inc
  br label %do.end5, !dbg !9331

do.end5:                                          ; preds = %do.body4
  %14 = load i8*, i8** %__mptr1, align 8, !dbg !9330
  %add.ptr7 = getelementptr i8, i8* %14, i64 0, !dbg !9330
  %15 = bitcast i8* %add.ptr7 to %struct.resource_entry*, !dbg !9330
  store %struct.resource_entry* %15, %struct.resource_entry** %tmp6, align 8, !dbg !9331
  %16 = load %struct.resource_entry*, %struct.resource_entry** %tmp6, align 8, !dbg !9330
  store %struct.resource_entry* %16, %struct.resource_entry** %window, align 8, !dbg !9316
  br label %for.cond, !dbg !9316, !llvm.loop !9333

for.end:                                          ; preds = %if.then, %for.cond
  %17 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !9335
  %18 = load i32, i32* %bus.addr, align 4, !dbg !9336
  %19 = load %struct.pci_ops*, %struct.pci_ops** %ops.addr, align 8, !dbg !9337
  %20 = load i8*, i8** %sysdata.addr, align 8, !dbg !9338
  %21 = load %struct.list_head*, %struct.list_head** %resources.addr, align 8, !dbg !9339
  %call = call %struct.pci_bus* @pci_create_root_bus(%struct.device* %17, i32 %18, %struct.pci_ops* %19, i8* %20, %struct.list_head* %21) #9, !dbg !9340
  store %struct.pci_bus* %call, %struct.pci_bus** %b, align 8, !dbg !9341
  %22 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9342
  %tobool8 = icmp ne %struct.pci_bus* %22, null, !dbg !9342
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !9344

if.then9:                                         ; preds = %for.end
  store %struct.pci_bus* null, %struct.pci_bus** %retval, align 8, !dbg !9345
  br label %return, !dbg !9345

if.end10:                                         ; preds = %for.end
  %23 = load i8, i8* %found, align 1, !dbg !9346
  %tobool11 = trunc i8 %23 to i1, !dbg !9346
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !9348

if.then12:                                        ; preds = %if.end10
  %24 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9349
  %dev = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %24, i32 0, i32 21, !dbg !9349
  %25 = load i32, i32* %bus.addr, align 4, !dbg !9349
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.50, i64 0, i64 0), i32 %25) #10, !dbg !9349
  %26 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9351
  %27 = load i32, i32* %bus.addr, align 4, !dbg !9352
  %call13 = call i32 @pci_bus_insert_busn_res(%struct.pci_bus* %26, i32 %27, i32 255) #9, !dbg !9353
  br label %if.end14, !dbg !9354

if.end14:                                         ; preds = %if.then12, %if.end10
  %28 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9355
  %call15 = call i32 @pci_scan_child_bus(%struct.pci_bus* %28) #9, !dbg !9356
  store i32 %call15, i32* %max, align 4, !dbg !9357
  %29 = load i8, i8* %found, align 1, !dbg !9358
  %tobool16 = trunc i8 %29 to i1, !dbg !9358
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !9360

if.then17:                                        ; preds = %if.end14
  %30 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9361
  %31 = load i32, i32* %max, align 4, !dbg !9362
  %call18 = call i32 @pci_bus_update_busn_res_end(%struct.pci_bus* %30, i32 %31) #9, !dbg !9363
  br label %if.end19, !dbg !9363

if.end19:                                         ; preds = %if.then17, %if.end14
  %32 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9364
  store %struct.pci_bus* %32, %struct.pci_bus** %retval, align 8, !dbg !9365
  br label %return, !dbg !9365

return:                                           ; preds = %if.end19, %if.then9
  %33 = load %struct.pci_bus*, %struct.pci_bus** %retval, align 8, !dbg !9366
  ret %struct.pci_bus* %33, !dbg !9366
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_bus* @pci_scan_bus(i32 %bus, %struct.pci_ops* %ops, i8* %sysdata) #0 !dbg !9367 {
entry:
  %bus.addr = alloca i32, align 4
  %ops.addr = alloca %struct.pci_ops*, align 8
  %sysdata.addr = alloca i8*, align 8
  %resources = alloca %struct.list_head, align 8
  %b = alloca %struct.pci_bus*, align 8
  store i32 %bus, i32* %bus.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bus.addr, metadata !9370, metadata !DIExpression()), !dbg !9371
  store %struct.pci_ops* %ops, %struct.pci_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_ops** %ops.addr, metadata !9372, metadata !DIExpression()), !dbg !9373
  store i8* %sysdata, i8** %sysdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sysdata.addr, metadata !9374, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.declare(metadata %struct.list_head* %resources, metadata !9376, metadata !DIExpression()), !dbg !9377
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %resources, i32 0, i32 0, !dbg !9377
  store %struct.list_head* %resources, %struct.list_head** %next, align 8, !dbg !9377
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %resources, i32 0, i32 1, !dbg !9377
  store %struct.list_head* %resources, %struct.list_head** %prev, align 8, !dbg !9377
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !9378, metadata !DIExpression()), !dbg !9379
  call void @pci_add_resource(%struct.list_head* %resources, %struct.resource* @ioport_resource) #9, !dbg !9380
  call void @pci_add_resource(%struct.list_head* %resources, %struct.resource* @iomem_resource) #9, !dbg !9381
  call void @pci_add_resource(%struct.list_head* %resources, %struct.resource* @busn_resource) #9, !dbg !9382
  %0 = load i32, i32* %bus.addr, align 4, !dbg !9383
  %1 = load %struct.pci_ops*, %struct.pci_ops** %ops.addr, align 8, !dbg !9384
  %2 = load i8*, i8** %sysdata.addr, align 8, !dbg !9385
  %call = call %struct.pci_bus* @pci_create_root_bus(%struct.device* null, i32 %0, %struct.pci_ops* %1, i8* %2, %struct.list_head* %resources) #9, !dbg !9386
  store %struct.pci_bus* %call, %struct.pci_bus** %b, align 8, !dbg !9387
  %3 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9388
  %tobool = icmp ne %struct.pci_bus* %3, null, !dbg !9388
  br i1 %tobool, label %if.then, label %if.else, !dbg !9390

if.then:                                          ; preds = %entry
  %4 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9391
  %call1 = call i32 @pci_scan_child_bus(%struct.pci_bus* %4) #9, !dbg !9393
  br label %if.end, !dbg !9394

if.else:                                          ; preds = %entry
  call void @pci_free_resource_list(%struct.list_head* %resources) #9, !dbg !9395
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9397
  ret %struct.pci_bus* %5, !dbg !9398
}

; Function Attrs: noredzone
declare dso_local void @pci_add_resource(%struct.list_head*, %struct.resource*) #2

; Function Attrs: noredzone
declare dso_local void @pci_free_resource_list(%struct.list_head*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_rescan_bus_bridge_resize(%struct.pci_dev* %bridge) #0 !dbg !9399 {
entry:
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %max = alloca i32, align 4
  %bus = alloca %struct.pci_bus*, align 8
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !9402, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.declare(metadata i32* %max, metadata !9404, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus, metadata !9406, metadata !DIExpression()), !dbg !9407
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !9408
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 2, !dbg !9409
  %1 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !9409
  store %struct.pci_bus* %1, %struct.pci_bus** %bus, align 8, !dbg !9407
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9410
  %call = call i32 @pci_scan_child_bus(%struct.pci_bus* %2) #9, !dbg !9411
  store i32 %call, i32* %max, align 4, !dbg !9412
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !9413
  call void @pci_assign_unassigned_bridge_resources(%struct.pci_dev* %3) #9, !dbg !9414
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9415
  call void @pci_bus_add_devices(%struct.pci_bus* %4) #9, !dbg !9416
  %5 = load i32, i32* %max, align 4, !dbg !9417
  ret i32 %5, !dbg !9418
}

; Function Attrs: noredzone
declare dso_local void @pci_assign_unassigned_bridge_resources(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_rescan_bus(%struct.pci_bus* %bus) #0 !dbg !9419 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %max = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !9420, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.declare(metadata i32* %max, metadata !9422, metadata !DIExpression()), !dbg !9423
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9424
  %call = call i32 @pci_scan_child_bus(%struct.pci_bus* %0) #9, !dbg !9425
  store i32 %call, i32* %max, align 4, !dbg !9426
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9427
  call void @pci_assign_unassigned_bus_resources(%struct.pci_bus* %1) #9, !dbg !9428
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9429
  call void @pci_bus_add_devices(%struct.pci_bus* %2) #9, !dbg !9430
  %3 = load i32, i32* %max, align 4, !dbg !9431
  ret i32 %3, !dbg !9432
}

; Function Attrs: noredzone
declare dso_local void @pci_assign_unassigned_bus_resources(%struct.pci_bus*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_lock_rescan_remove() #0 !dbg !9433 {
entry:
  call void @mutex_lock(%struct.mutex* @pci_rescan_remove_lock) #9, !dbg !9434
  ret void, !dbg !9435
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_unlock_rescan_remove() #0 !dbg !9436 {
entry:
  call void @mutex_unlock(%struct.mutex* @pci_rescan_remove_lock) #9, !dbg !9437
  ret void, !dbg !9438
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_sort_breadthfirst() #3 section ".init.text" !dbg !9439 {
entry:
  call void @bus_sort_breadthfirst(%struct.bus_type* @pci_bus_type, i32 (%struct.device*, %struct.device*)* @pci_sort_bf_cmp) #9, !dbg !9440
  ret void, !dbg !9441
}

; Function Attrs: noredzone
declare dso_local void @bus_sort_breadthfirst(%struct.bus_type*, i32 (%struct.device*, %struct.device*)*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_sort_bf_cmp(%struct.device* %d_a, %struct.device* %d_b) #3 section ".init.text" !dbg !9442 {
entry:
  %retval = alloca i32, align 4
  %d_a.addr = alloca %struct.device*, align 8
  %d_b.addr = alloca %struct.device*, align 8
  %a = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %b = alloca %struct.pci_dev*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.pci_dev*, align 8
  store %struct.device* %d_a, %struct.device** %d_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d_a.addr, metadata !9445, metadata !DIExpression()), !dbg !9446
  store %struct.device* %d_b, %struct.device** %d_b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d_b.addr, metadata !9447, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %a, metadata !9449, metadata !DIExpression()), !dbg !9450
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9451, metadata !DIExpression()), !dbg !9453
  %0 = load %struct.device*, %struct.device** %d_a.addr, align 8, !dbg !9453
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9453
  store i8* %1, i8** %__mptr, align 8, !dbg !9453
  br label %do.body, !dbg !9453

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9454

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9453
  %add.ptr = getelementptr i8, i8* %2, i64 -176, !dbg !9453
  %3 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !9453
  store %struct.pci_dev* %3, %struct.pci_dev** %tmp, align 8, !dbg !9454
  %4 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !9453
  store %struct.pci_dev* %4, %struct.pci_dev** %a, align 8, !dbg !9450
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %b, metadata !9456, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !9458, metadata !DIExpression()), !dbg !9460
  %5 = load %struct.device*, %struct.device** %d_b.addr, align 8, !dbg !9460
  %6 = bitcast %struct.device* %5 to i8*, !dbg !9460
  store i8* %6, i8** %__mptr1, align 8, !dbg !9460
  br label %do.body2, !dbg !9460

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !9461

do.end3:                                          ; preds = %do.body2
  %7 = load i8*, i8** %__mptr1, align 8, !dbg !9460
  %add.ptr5 = getelementptr i8, i8* %7, i64 -176, !dbg !9460
  %8 = bitcast i8* %add.ptr5 to %struct.pci_dev*, !dbg !9460
  store %struct.pci_dev* %8, %struct.pci_dev** %tmp4, align 8, !dbg !9461
  %9 = load %struct.pci_dev*, %struct.pci_dev** %tmp4, align 8, !dbg !9460
  store %struct.pci_dev* %9, %struct.pci_dev** %b, align 8, !dbg !9457
  %10 = load %struct.pci_dev*, %struct.pci_dev** %a, align 8, !dbg !9463
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 1, !dbg !9465
  %11 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9465
  %call = call i32 @pci_domain_nr(%struct.pci_bus* %11) #9, !dbg !9466
  %12 = load %struct.pci_dev*, %struct.pci_dev** %b, align 8, !dbg !9467
  %bus6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 1, !dbg !9468
  %13 = load %struct.pci_bus*, %struct.pci_bus** %bus6, align 8, !dbg !9468
  %call7 = call i32 @pci_domain_nr(%struct.pci_bus* %13) #9, !dbg !9469
  %cmp = icmp slt i32 %call, %call7, !dbg !9470
  br i1 %cmp, label %if.then, label %if.else, !dbg !9471

if.then:                                          ; preds = %do.end3
  store i32 -1, i32* %retval, align 4, !dbg !9472
  br label %return, !dbg !9472

if.else:                                          ; preds = %do.end3
  %14 = load %struct.pci_dev*, %struct.pci_dev** %a, align 8, !dbg !9473
  %bus8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 1, !dbg !9475
  %15 = load %struct.pci_bus*, %struct.pci_bus** %bus8, align 8, !dbg !9475
  %call9 = call i32 @pci_domain_nr(%struct.pci_bus* %15) #9, !dbg !9476
  %16 = load %struct.pci_dev*, %struct.pci_dev** %b, align 8, !dbg !9477
  %bus10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 1, !dbg !9478
  %17 = load %struct.pci_bus*, %struct.pci_bus** %bus10, align 8, !dbg !9478
  %call11 = call i32 @pci_domain_nr(%struct.pci_bus* %17) #9, !dbg !9479
  %cmp12 = icmp sgt i32 %call9, %call11, !dbg !9480
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !9481

if.then13:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !9482
  br label %return, !dbg !9482

if.end:                                           ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end
  %18 = load %struct.pci_dev*, %struct.pci_dev** %a, align 8, !dbg !9483
  %bus15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 1, !dbg !9485
  %19 = load %struct.pci_bus*, %struct.pci_bus** %bus15, align 8, !dbg !9485
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %19, i32 0, i32 13, !dbg !9486
  %20 = load i8, i8* %number, align 8, !dbg !9486
  %conv = zext i8 %20 to i32, !dbg !9483
  %21 = load %struct.pci_dev*, %struct.pci_dev** %b, align 8, !dbg !9487
  %bus16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 1, !dbg !9488
  %22 = load %struct.pci_bus*, %struct.pci_bus** %bus16, align 8, !dbg !9488
  %number17 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %22, i32 0, i32 13, !dbg !9489
  %23 = load i8, i8* %number17, align 8, !dbg !9489
  %conv18 = zext i8 %23 to i32, !dbg !9487
  %cmp19 = icmp slt i32 %conv, %conv18, !dbg !9490
  br i1 %cmp19, label %if.then21, label %if.else22, !dbg !9491

if.then21:                                        ; preds = %if.end14
  store i32 -1, i32* %retval, align 4, !dbg !9492
  br label %return, !dbg !9492

if.else22:                                        ; preds = %if.end14
  %24 = load %struct.pci_dev*, %struct.pci_dev** %a, align 8, !dbg !9493
  %bus23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 1, !dbg !9495
  %25 = load %struct.pci_bus*, %struct.pci_bus** %bus23, align 8, !dbg !9495
  %number24 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %25, i32 0, i32 13, !dbg !9496
  %26 = load i8, i8* %number24, align 8, !dbg !9496
  %conv25 = zext i8 %26 to i32, !dbg !9493
  %27 = load %struct.pci_dev*, %struct.pci_dev** %b, align 8, !dbg !9497
  %bus26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 1, !dbg !9498
  %28 = load %struct.pci_bus*, %struct.pci_bus** %bus26, align 8, !dbg !9498
  %number27 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %28, i32 0, i32 13, !dbg !9499
  %29 = load i8, i8* %number27, align 8, !dbg !9499
  %conv28 = zext i8 %29 to i32, !dbg !9497
  %cmp29 = icmp sgt i32 %conv25, %conv28, !dbg !9500
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !9501

if.then31:                                        ; preds = %if.else22
  store i32 1, i32* %retval, align 4, !dbg !9502
  br label %return, !dbg !9502

if.end32:                                         ; preds = %if.else22
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  %30 = load %struct.pci_dev*, %struct.pci_dev** %a, align 8, !dbg !9503
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 6, !dbg !9505
  %31 = load i32, i32* %devfn, align 8, !dbg !9505
  %32 = load %struct.pci_dev*, %struct.pci_dev** %b, align 8, !dbg !9506
  %devfn34 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 6, !dbg !9507
  %33 = load i32, i32* %devfn34, align 8, !dbg !9507
  %cmp35 = icmp ult i32 %31, %33, !dbg !9508
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !9509

if.then37:                                        ; preds = %if.end33
  store i32 -1, i32* %retval, align 4, !dbg !9510
  br label %return, !dbg !9510

if.else38:                                        ; preds = %if.end33
  %34 = load %struct.pci_dev*, %struct.pci_dev** %a, align 8, !dbg !9511
  %devfn39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 6, !dbg !9513
  %35 = load i32, i32* %devfn39, align 8, !dbg !9513
  %36 = load %struct.pci_dev*, %struct.pci_dev** %b, align 8, !dbg !9514
  %devfn40 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 6, !dbg !9515
  %37 = load i32, i32* %devfn40, align 8, !dbg !9515
  %cmp41 = icmp ugt i32 %35, %37, !dbg !9516
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !9517

if.then43:                                        ; preds = %if.else38
  store i32 1, i32* %retval, align 4, !dbg !9518
  br label %return, !dbg !9518

if.end44:                                         ; preds = %if.else38
  br label %if.end45

if.end45:                                         ; preds = %if.end44
  store i32 0, i32* %retval, align 4, !dbg !9519
  br label %return, !dbg !9519

return:                                           ; preds = %if.end45, %if.then43, %if.then37, %if.then31, %if.then21, %if.then13, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !9520
  ret i32 %38, !dbg !9520
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_hp_add_bridge(%struct.pci_dev* %dev) #0 !dbg !9521 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %parent = alloca %struct.pci_bus*, align 8
  %busnr = alloca i32, align 4
  %start = alloca i32, align 4
  %available_buses = alloca i32, align 4
  %end = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9522, metadata !DIExpression()), !dbg !9523
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %parent, metadata !9524, metadata !DIExpression()), !dbg !9525
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9526
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !9527
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9527
  store %struct.pci_bus* %1, %struct.pci_bus** %parent, align 8, !dbg !9525
  call void @llvm.dbg.declare(metadata i32* %busnr, metadata !9528, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.declare(metadata i32* %start, metadata !9530, metadata !DIExpression()), !dbg !9531
  %2 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !9532
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 8, !dbg !9533
  %start1 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res, i32 0, i32 0, !dbg !9534
  %3 = load i64, i64* %start1, align 8, !dbg !9534
  %conv = trunc i64 %3 to i32, !dbg !9532
  store i32 %conv, i32* %start, align 4, !dbg !9531
  call void @llvm.dbg.declare(metadata i32* %available_buses, metadata !9535, metadata !DIExpression()), !dbg !9536
  store i32 0, i32* %available_buses, align 4, !dbg !9536
  call void @llvm.dbg.declare(metadata i32* %end, metadata !9537, metadata !DIExpression()), !dbg !9538
  %4 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !9539
  %busn_res2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 8, !dbg !9540
  %end3 = getelementptr inbounds %struct.resource, %struct.resource* %busn_res2, i32 0, i32 1, !dbg !9541
  %5 = load i64, i64* %end3, align 8, !dbg !9541
  %conv4 = trunc i64 %5 to i32, !dbg !9539
  store i32 %conv4, i32* %end, align 4, !dbg !9538
  %6 = load i32, i32* %start, align 4, !dbg !9542
  store i32 %6, i32* %busnr, align 4, !dbg !9544
  br label %for.cond, !dbg !9545

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %busnr, align 4, !dbg !9546
  %8 = load i32, i32* %end, align 4, !dbg !9548
  %cmp = icmp sle i32 %7, %8, !dbg !9549
  br i1 %cmp, label %for.body, label %for.end, !dbg !9550

for.body:                                         ; preds = %for.cond
  %9 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !9551
  %call = call i32 @pci_domain_nr(%struct.pci_bus* %9) #9, !dbg !9554
  %10 = load i32, i32* %busnr, align 4, !dbg !9555
  %call6 = call %struct.pci_bus* @pci_find_bus(i32 %call, i32 %10) #9, !dbg !9556
  %tobool = icmp ne %struct.pci_bus* %call6, null, !dbg !9556
  br i1 %tobool, label %if.end, label %if.then, !dbg !9557

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !9558

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9559

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %busnr, align 4, !dbg !9560
  %inc = add i32 %11, 1, !dbg !9560
  store i32 %inc, i32* %busnr, align 4, !dbg !9560
  br label %for.cond, !dbg !9561, !llvm.loop !9562

for.end:                                          ; preds = %if.then, %for.cond
  %12 = load i32, i32* %busnr, align 4, !dbg !9564
  %dec = add i32 %12, -1, !dbg !9564
  store i32 %dec, i32* %busnr, align 4, !dbg !9564
  %13 = load i32, i32* %end, align 4, !dbg !9566
  %cmp7 = icmp sgt i32 %12, %13, !dbg !9567
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !9568

if.then9:                                         ; preds = %for.end
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9569
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !9569
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev10, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.51, i64 0, i64 0)) #10, !dbg !9569
  store i32 -1, i32* %retval, align 4, !dbg !9571
  br label %return, !dbg !9571

if.end11:                                         ; preds = %for.end
  %15 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !9572
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9573
  %17 = load i32, i32* %busnr, align 4, !dbg !9574
  %call12 = call i32 @pci_scan_bridge(%struct.pci_bus* %15, %struct.pci_dev* %16, i32 %17, i32 0) #9, !dbg !9575
  store i32 %call12, i32* %busnr, align 4, !dbg !9576
  %18 = load i32, i32* %end, align 4, !dbg !9577
  %19 = load i32, i32* %busnr, align 4, !dbg !9578
  %sub = sub i32 %18, %19, !dbg !9579
  store i32 %sub, i32* %available_buses, align 4, !dbg !9580
  %20 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !9581
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9582
  %22 = load i32, i32* %busnr, align 4, !dbg !9583
  %23 = load i32, i32* %available_buses, align 4, !dbg !9584
  %call13 = call i32 @pci_scan_bridge_extend(%struct.pci_bus* %20, %struct.pci_dev* %21, i32 %22, i32 %23, i32 1) #9, !dbg !9585
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9586
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 2, !dbg !9588
  %25 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !9588
  %tobool14 = icmp ne %struct.pci_bus* %25, null, !dbg !9586
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !9589

if.then15:                                        ; preds = %if.end11
  store i32 -1, i32* %retval, align 4, !dbg !9590
  br label %return, !dbg !9590

if.end16:                                         ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !9591
  br label %return, !dbg !9591

return:                                           ; preds = %if.end16, %if.then15, %if.then9
  %26 = load i32, i32* %retval, align 4, !dbg !9592
  ret i32 %26, !dbg !9592
}

; Function Attrs: noredzone
declare dso_local %struct.pci_bus* @pci_find_bus(i32, i32) #2

; Function Attrs: noredzone
declare dso_local %struct.device* @bus_find_device(%struct.bus_type*, %struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noredzone
declare dso_local i32 @device_match_any(%struct.device*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @__class_register(%struct.class*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @release_pcibus_dev(%struct.device* %dev) #0 !dbg !9593 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %pci_bus = alloca %struct.pci_bus*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_bus*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9594, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %pci_bus, metadata !9596, metadata !DIExpression()), !dbg !9597
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9598, metadata !DIExpression()), !dbg !9600
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9600
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9600
  store i8* %1, i8** %__mptr, align 8, !dbg !9600
  br label %do.body, !dbg !9600

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9601

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9600
  %add.ptr = getelementptr i8, i8* %2, i64 -288, !dbg !9600
  %3 = bitcast i8* %add.ptr to %struct.pci_bus*, !dbg !9600
  store %struct.pci_bus* %3, %struct.pci_bus** %tmp, align 8, !dbg !9601
  %4 = load %struct.pci_bus*, %struct.pci_bus** %tmp, align 8, !dbg !9600
  store %struct.pci_bus* %4, %struct.pci_bus** %pci_bus, align 8, !dbg !9597
  %5 = load %struct.pci_bus*, %struct.pci_bus** %pci_bus, align 8, !dbg !9603
  %bridge = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 20, !dbg !9604
  %6 = load %struct.device*, %struct.device** %bridge, align 8, !dbg !9604
  call void @put_device(%struct.device* %6) #9, !dbg !9605
  %7 = load %struct.pci_bus*, %struct.pci_bus** %pci_bus, align 8, !dbg !9606
  call void @pci_bus_remove_resources(%struct.pci_bus* %7) #9, !dbg !9607
  %8 = load %struct.pci_bus*, %struct.pci_bus** %pci_bus, align 8, !dbg !9608
  call void @pci_release_bus_of_node(%struct.pci_bus* %8) #9, !dbg !9609
  %9 = load %struct.pci_bus*, %struct.pci_bus** %pci_bus, align 8, !dbg !9610
  %10 = bitcast %struct.pci_bus* %9 to i8*, !dbg !9610
  call void @kfree(i8* %10) #9, !dbg !9611
  ret void, !dbg !9612
}

; Function Attrs: noredzone
declare dso_local void @pci_release_bus_of_node(%struct.pci_bus*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !9613 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9616, metadata !DIExpression()), !dbg !9617
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9618
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9620
  %1 = load i8*, i8** %init_name, align 8, !dbg !9620
  %tobool = icmp ne i8* %1, null, !dbg !9618
  br i1 %tobool, label %if.then, label %if.end, !dbg !9621

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9622
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !9623
  %3 = load i8*, i8** %init_name1, align 8, !dbg !9623
  store i8* %3, i8** %retval, align 8, !dbg !9624
  br label %return, !dbg !9624

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9625
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !9626
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #9, !dbg !9627
  store i8* %call, i8** %retval, align 8, !dbg !9628
  br label %return, !dbg !9628

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !9629
  ret i8* %5, !dbg !9629
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !9630 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !9635, metadata !DIExpression()), !dbg !9636
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !9637
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !9638
  %1 = load i8*, i8** %name, align 8, !dbg !9638
  ret i8* %1, !dbg !9639
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !9640 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9644, metadata !DIExpression()), !dbg !9649
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9651, metadata !DIExpression()), !dbg !9652
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9653, metadata !DIExpression()), !dbg !9654
  %0 = load i64, i64* %size.addr, align 8, !dbg !9655
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !9657
  br i1 %1, label %if.then, label %if.end447, !dbg !9658

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !9659
  %tobool = icmp ne i64 %2, 0, !dbg !9659
  br i1 %tobool, label %if.end, label %if.then1, !dbg !9662

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !9663
  br label %return, !dbg !9663

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !9664
  %cmp = icmp ult i64 %3, 4096, !dbg !9666
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9667

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9668
  br label %return, !dbg !9668

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub = sub i64 %4, 1, !dbg !9669
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9669
  br i1 %5, label %cond.true, label %cond.false442, !dbg !9669

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub4 = sub i64 %6, 1, !dbg !9669
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !9669
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !9669

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub6 = sub i64 %8, 1, !dbg !9669
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !9669
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !9669

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !9669

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub9 = sub i64 %9, 1, !dbg !9669
  %and = and i64 %sub9, -9223372036854775808, !dbg !9669
  %tobool10 = icmp ne i64 %and, 0, !dbg !9669
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !9669

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !9669

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub13 = sub i64 %10, 1, !dbg !9669
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !9669
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9669
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !9669

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !9669

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub18 = sub i64 %11, 1, !dbg !9669
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !9669
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9669
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9669

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !9669

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub23 = sub i64 %12, 1, !dbg !9669
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !9669
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9669
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !9669

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !9669

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub28 = sub i64 %13, 1, !dbg !9669
  %and29 = and i64 %sub28, 576460752303423488, !dbg !9669
  %tobool30 = icmp ne i64 %and29, 0, !dbg !9669
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !9669

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !9669

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub33 = sub i64 %14, 1, !dbg !9669
  %and34 = and i64 %sub33, 288230376151711744, !dbg !9669
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9669
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !9669

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !9669

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub38 = sub i64 %15, 1, !dbg !9669
  %and39 = and i64 %sub38, 144115188075855872, !dbg !9669
  %tobool40 = icmp ne i64 %and39, 0, !dbg !9669
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !9669

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !9669

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub43 = sub i64 %16, 1, !dbg !9669
  %and44 = and i64 %sub43, 72057594037927936, !dbg !9669
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9669
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !9669

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !9669

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub48 = sub i64 %17, 1, !dbg !9669
  %and49 = and i64 %sub48, 36028797018963968, !dbg !9669
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9669
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9669

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !9669

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub53 = sub i64 %18, 1, !dbg !9669
  %and54 = and i64 %sub53, 18014398509481984, !dbg !9669
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9669
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9669

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !9669

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub58 = sub i64 %19, 1, !dbg !9669
  %and59 = and i64 %sub58, 9007199254740992, !dbg !9669
  %tobool60 = icmp ne i64 %and59, 0, !dbg !9669
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !9669

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !9669

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub63 = sub i64 %20, 1, !dbg !9669
  %and64 = and i64 %sub63, 4503599627370496, !dbg !9669
  %tobool65 = icmp ne i64 %and64, 0, !dbg !9669
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !9669

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !9669

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub68 = sub i64 %21, 1, !dbg !9669
  %and69 = and i64 %sub68, 2251799813685248, !dbg !9669
  %tobool70 = icmp ne i64 %and69, 0, !dbg !9669
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !9669

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !9669

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub73 = sub i64 %22, 1, !dbg !9669
  %and74 = and i64 %sub73, 1125899906842624, !dbg !9669
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9669
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9669

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !9669

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub78 = sub i64 %23, 1, !dbg !9669
  %and79 = and i64 %sub78, 562949953421312, !dbg !9669
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9669
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9669

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !9669

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub83 = sub i64 %24, 1, !dbg !9669
  %and84 = and i64 %sub83, 281474976710656, !dbg !9669
  %tobool85 = icmp ne i64 %and84, 0, !dbg !9669
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !9669

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !9669

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub88 = sub i64 %25, 1, !dbg !9669
  %and89 = and i64 %sub88, 140737488355328, !dbg !9669
  %tobool90 = icmp ne i64 %and89, 0, !dbg !9669
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !9669

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !9669

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub93 = sub i64 %26, 1, !dbg !9669
  %and94 = and i64 %sub93, 70368744177664, !dbg !9669
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9669
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9669

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !9669

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub98 = sub i64 %27, 1, !dbg !9669
  %and99 = and i64 %sub98, 35184372088832, !dbg !9669
  %tobool100 = icmp ne i64 %and99, 0, !dbg !9669
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !9669

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !9669

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub103 = sub i64 %28, 1, !dbg !9669
  %and104 = and i64 %sub103, 17592186044416, !dbg !9669
  %tobool105 = icmp ne i64 %and104, 0, !dbg !9669
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !9669

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !9669

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub108 = sub i64 %29, 1, !dbg !9669
  %and109 = and i64 %sub108, 8796093022208, !dbg !9669
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9669
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9669

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !9669

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub113 = sub i64 %30, 1, !dbg !9669
  %and114 = and i64 %sub113, 4398046511104, !dbg !9669
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9669
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9669

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !9669

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub118 = sub i64 %31, 1, !dbg !9669
  %and119 = and i64 %sub118, 2199023255552, !dbg !9669
  %tobool120 = icmp ne i64 %and119, 0, !dbg !9669
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !9669

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !9669

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub123 = sub i64 %32, 1, !dbg !9669
  %and124 = and i64 %sub123, 1099511627776, !dbg !9669
  %tobool125 = icmp ne i64 %and124, 0, !dbg !9669
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !9669

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !9669

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub128 = sub i64 %33, 1, !dbg !9669
  %and129 = and i64 %sub128, 549755813888, !dbg !9669
  %tobool130 = icmp ne i64 %and129, 0, !dbg !9669
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9669

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !9669

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub133 = sub i64 %34, 1, !dbg !9669
  %and134 = and i64 %sub133, 274877906944, !dbg !9669
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9669
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9669

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !9669

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub138 = sub i64 %35, 1, !dbg !9669
  %and139 = and i64 %sub138, 137438953472, !dbg !9669
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9669
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9669

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !9669

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub143 = sub i64 %36, 1, !dbg !9669
  %and144 = and i64 %sub143, 68719476736, !dbg !9669
  %tobool145 = icmp ne i64 %and144, 0, !dbg !9669
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !9669

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !9669

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub148 = sub i64 %37, 1, !dbg !9669
  %and149 = and i64 %sub148, 34359738368, !dbg !9669
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9669
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9669

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !9669

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub153 = sub i64 %38, 1, !dbg !9669
  %and154 = and i64 %sub153, 17179869184, !dbg !9669
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9669
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9669

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !9669

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub158 = sub i64 %39, 1, !dbg !9669
  %and159 = and i64 %sub158, 8589934592, !dbg !9669
  %tobool160 = icmp ne i64 %and159, 0, !dbg !9669
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !9669

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !9669

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub163 = sub i64 %40, 1, !dbg !9669
  %and164 = and i64 %sub163, 4294967296, !dbg !9669
  %tobool165 = icmp ne i64 %and164, 0, !dbg !9669
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !9669

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !9669

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub168 = sub i64 %41, 1, !dbg !9669
  %and169 = and i64 %sub168, 2147483648, !dbg !9669
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9669
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9669

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !9669

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub173 = sub i64 %42, 1, !dbg !9669
  %and174 = and i64 %sub173, 1073741824, !dbg !9669
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9669
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9669

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !9669

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub178 = sub i64 %43, 1, !dbg !9669
  %and179 = and i64 %sub178, 536870912, !dbg !9669
  %tobool180 = icmp ne i64 %and179, 0, !dbg !9669
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !9669

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !9669

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub183 = sub i64 %44, 1, !dbg !9669
  %and184 = and i64 %sub183, 268435456, !dbg !9669
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9669
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9669

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !9669

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub188 = sub i64 %45, 1, !dbg !9669
  %and189 = and i64 %sub188, 134217728, !dbg !9669
  %tobool190 = icmp ne i64 %and189, 0, !dbg !9669
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !9669

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !9669

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub193 = sub i64 %46, 1, !dbg !9669
  %and194 = and i64 %sub193, 67108864, !dbg !9669
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9669
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9669

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !9669

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub198 = sub i64 %47, 1, !dbg !9669
  %and199 = and i64 %sub198, 33554432, !dbg !9669
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9669
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9669

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !9669

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub203 = sub i64 %48, 1, !dbg !9669
  %and204 = and i64 %sub203, 16777216, !dbg !9669
  %tobool205 = icmp ne i64 %and204, 0, !dbg !9669
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !9669

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !9669

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub208 = sub i64 %49, 1, !dbg !9669
  %and209 = and i64 %sub208, 8388608, !dbg !9669
  %tobool210 = icmp ne i64 %and209, 0, !dbg !9669
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !9669

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !9669

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub213 = sub i64 %50, 1, !dbg !9669
  %and214 = and i64 %sub213, 4194304, !dbg !9669
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9669
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9669

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !9669

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub218 = sub i64 %51, 1, !dbg !9669
  %and219 = and i64 %sub218, 2097152, !dbg !9669
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9669
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9669

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !9669

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub223 = sub i64 %52, 1, !dbg !9669
  %and224 = and i64 %sub223, 1048576, !dbg !9669
  %tobool225 = icmp ne i64 %and224, 0, !dbg !9669
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !9669

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !9669

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub228 = sub i64 %53, 1, !dbg !9669
  %and229 = and i64 %sub228, 524288, !dbg !9669
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9669
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9669

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !9669

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub233 = sub i64 %54, 1, !dbg !9669
  %and234 = and i64 %sub233, 262144, !dbg !9669
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9669
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9669

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !9669

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub238 = sub i64 %55, 1, !dbg !9669
  %and239 = and i64 %sub238, 131072, !dbg !9669
  %tobool240 = icmp ne i64 %and239, 0, !dbg !9669
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !9669

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !9669

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub243 = sub i64 %56, 1, !dbg !9669
  %and244 = and i64 %sub243, 65536, !dbg !9669
  %tobool245 = icmp ne i64 %and244, 0, !dbg !9669
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !9669

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !9669

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub248 = sub i64 %57, 1, !dbg !9669
  %and249 = and i64 %sub248, 32768, !dbg !9669
  %tobool250 = icmp ne i64 %and249, 0, !dbg !9669
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !9669

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !9669

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub253 = sub i64 %58, 1, !dbg !9669
  %and254 = and i64 %sub253, 16384, !dbg !9669
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9669
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9669

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !9669

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub258 = sub i64 %59, 1, !dbg !9669
  %and259 = and i64 %sub258, 8192, !dbg !9669
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9669
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9669

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !9669

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub263 = sub i64 %60, 1, !dbg !9669
  %and264 = and i64 %sub263, 4096, !dbg !9669
  %tobool265 = icmp ne i64 %and264, 0, !dbg !9669
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !9669

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !9669

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub268 = sub i64 %61, 1, !dbg !9669
  %and269 = and i64 %sub268, 2048, !dbg !9669
  %tobool270 = icmp ne i64 %and269, 0, !dbg !9669
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !9669

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !9669

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub273 = sub i64 %62, 1, !dbg !9669
  %and274 = and i64 %sub273, 1024, !dbg !9669
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9669
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9669

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !9669

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub278 = sub i64 %63, 1, !dbg !9669
  %and279 = and i64 %sub278, 512, !dbg !9669
  %tobool280 = icmp ne i64 %and279, 0, !dbg !9669
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !9669

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !9669

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub283 = sub i64 %64, 1, !dbg !9669
  %and284 = and i64 %sub283, 256, !dbg !9669
  %tobool285 = icmp ne i64 %and284, 0, !dbg !9669
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !9669

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !9669

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub288 = sub i64 %65, 1, !dbg !9669
  %and289 = and i64 %sub288, 128, !dbg !9669
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9669
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9669

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !9669

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub293 = sub i64 %66, 1, !dbg !9669
  %and294 = and i64 %sub293, 64, !dbg !9669
  %tobool295 = icmp ne i64 %and294, 0, !dbg !9669
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !9669

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !9669

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub298 = sub i64 %67, 1, !dbg !9669
  %and299 = and i64 %sub298, 32, !dbg !9669
  %tobool300 = icmp ne i64 %and299, 0, !dbg !9669
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !9669

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !9669

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub303 = sub i64 %68, 1, !dbg !9669
  %and304 = and i64 %sub303, 16, !dbg !9669
  %tobool305 = icmp ne i64 %and304, 0, !dbg !9669
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !9669

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !9669

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub308 = sub i64 %69, 1, !dbg !9669
  %and309 = and i64 %sub308, 8, !dbg !9669
  %tobool310 = icmp ne i64 %and309, 0, !dbg !9669
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !9669

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !9669

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub313 = sub i64 %70, 1, !dbg !9669
  %and314 = and i64 %sub313, 4, !dbg !9669
  %tobool315 = icmp ne i64 %and314, 0, !dbg !9669
  %71 = zext i1 %tobool315 to i64, !dbg !9669
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !9669
  br label %cond.end, !dbg !9669

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !9669
  br label %cond.end317, !dbg !9669

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !9669
  br label %cond.end319, !dbg !9669

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !9669
  br label %cond.end321, !dbg !9669

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !9669
  br label %cond.end323, !dbg !9669

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !9669
  br label %cond.end325, !dbg !9669

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !9669
  br label %cond.end327, !dbg !9669

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !9669
  br label %cond.end329, !dbg !9669

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !9669
  br label %cond.end331, !dbg !9669

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !9669
  br label %cond.end333, !dbg !9669

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !9669
  br label %cond.end335, !dbg !9669

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !9669
  br label %cond.end337, !dbg !9669

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !9669
  br label %cond.end339, !dbg !9669

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !9669
  br label %cond.end341, !dbg !9669

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !9669
  br label %cond.end343, !dbg !9669

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !9669
  br label %cond.end345, !dbg !9669

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !9669
  br label %cond.end347, !dbg !9669

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !9669
  br label %cond.end349, !dbg !9669

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !9669
  br label %cond.end351, !dbg !9669

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !9669
  br label %cond.end353, !dbg !9669

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !9669
  br label %cond.end355, !dbg !9669

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !9669
  br label %cond.end357, !dbg !9669

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !9669
  br label %cond.end359, !dbg !9669

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !9669
  br label %cond.end361, !dbg !9669

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !9669
  br label %cond.end363, !dbg !9669

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !9669
  br label %cond.end365, !dbg !9669

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !9669
  br label %cond.end367, !dbg !9669

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !9669
  br label %cond.end369, !dbg !9669

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !9669
  br label %cond.end371, !dbg !9669

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !9669
  br label %cond.end373, !dbg !9669

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !9669
  br label %cond.end375, !dbg !9669

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !9669
  br label %cond.end377, !dbg !9669

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !9669
  br label %cond.end379, !dbg !9669

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !9669
  br label %cond.end381, !dbg !9669

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !9669
  br label %cond.end383, !dbg !9669

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !9669
  br label %cond.end385, !dbg !9669

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !9669
  br label %cond.end387, !dbg !9669

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !9669
  br label %cond.end389, !dbg !9669

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !9669
  br label %cond.end391, !dbg !9669

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !9669
  br label %cond.end393, !dbg !9669

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !9669
  br label %cond.end395, !dbg !9669

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !9669
  br label %cond.end397, !dbg !9669

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !9669
  br label %cond.end399, !dbg !9669

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !9669
  br label %cond.end401, !dbg !9669

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !9669
  br label %cond.end403, !dbg !9669

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !9669
  br label %cond.end405, !dbg !9669

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !9669
  br label %cond.end407, !dbg !9669

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !9669
  br label %cond.end409, !dbg !9669

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !9669
  br label %cond.end411, !dbg !9669

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !9669
  br label %cond.end413, !dbg !9669

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !9669
  br label %cond.end415, !dbg !9669

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !9669
  br label %cond.end417, !dbg !9669

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !9669
  br label %cond.end419, !dbg !9669

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !9669
  br label %cond.end421, !dbg !9669

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !9669
  br label %cond.end423, !dbg !9669

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !9669
  br label %cond.end425, !dbg !9669

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !9669
  br label %cond.end427, !dbg !9669

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !9669
  br label %cond.end429, !dbg !9669

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !9669
  br label %cond.end431, !dbg !9669

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !9669
  br label %cond.end433, !dbg !9669

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !9669
  br label %cond.end435, !dbg !9669

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !9669
  br label %cond.end437, !dbg !9669

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !9669
  br label %cond.end440, !dbg !9669

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !9669

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !9669
  br label %cond.end444, !dbg !9669

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !9669
  %sub443 = sub i64 %72, 1, !dbg !9669
  %call = call i32 @__ilog2_u64(i64 %sub443) #12, !dbg !9669
  br label %cond.end444, !dbg !9669

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !9669
  %sub446 = sub i32 %cond445, 12, !dbg !9670
  %add = add i32 %sub446, 1, !dbg !9671
  store i32 %add, i32* %retval, align 4, !dbg !9672
  br label %return, !dbg !9672

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !9673
  %dec = add i64 %73, -1, !dbg !9673
  store i64 %dec, i64* %size.addr, align 8, !dbg !9673
  %74 = load i64, i64* %size.addr, align 8, !dbg !9674
  %shr = lshr i64 %74, 12, !dbg !9674
  store i64 %shr, i64* %size.addr, align 8, !dbg !9674
  %75 = load i64, i64* %size.addr, align 8, !dbg !9675
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9652
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !9676
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !9677
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #14, !dbg !9676, !srcloc !9678
  store i32 %78, i32* %bitpos.i, align 4, !dbg !9676
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !9679
  %add.i = add i32 %79, 1, !dbg !9680
  store i32 %add.i, i32* %retval, align 4, !dbg !9681
  br label %return, !dbg !9681

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !9682
  ret i32 %80, !dbg !9682
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !9683 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9644, metadata !DIExpression()), !dbg !9687
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9651, metadata !DIExpression()), !dbg !9689
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9690, metadata !DIExpression()), !dbg !9691
  %0 = load i64, i64* %n.addr, align 8, !dbg !9692
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9689
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9693
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9694
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #14, !dbg !9693, !srcloc !9678
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9693
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9695
  %add.i = add i32 %4, 1, !dbg !9696
  %sub = sub i32 %add.i, 1, !dbg !9697
  ret i32 %sub, !dbg !9698
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !9699 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !9703, metadata !DIExpression()), !dbg !9704
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !9705, metadata !DIExpression()), !dbg !9706
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9707, metadata !DIExpression()), !dbg !9708
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9709, metadata !DIExpression()), !dbg !9710
  %0 = load i8*, i8** %object.addr, align 8, !dbg !9711
  ret i8* %0, !dbg !9712
}

; Function Attrs: noredzone
declare dso_local i32 @devm_add_action(%struct.device*, void (i8*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_bus* @pci_alloc_bus(%struct.pci_bus* %parent) #0 !dbg !9713 {
entry:
  %retval = alloca %struct.pci_bus*, align 8
  %parent.addr = alloca %struct.pci_bus*, align 8
  %b = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %parent, %struct.pci_bus** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %parent.addr, metadata !9716, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !9718, metadata !DIExpression()), !dbg !9719
  %call = call i8* @kzalloc(i64 1008, i32 3264) #9, !dbg !9720
  %0 = bitcast i8* %call to %struct.pci_bus*, !dbg !9720
  store %struct.pci_bus* %0, %struct.pci_bus** %b, align 8, !dbg !9721
  %1 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9722
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !9722
  br i1 %tobool, label %if.end, label %if.then, !dbg !9724

if.then:                                          ; preds = %entry
  store %struct.pci_bus* null, %struct.pci_bus** %retval, align 8, !dbg !9725
  br label %return, !dbg !9725

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9726
  %node = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 0, !dbg !9727
  call void @INIT_LIST_HEAD(%struct.list_head* %node) #9, !dbg !9728
  %3 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9729
  %children = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %3, i32 0, i32 2, !dbg !9730
  call void @INIT_LIST_HEAD(%struct.list_head* %children) #9, !dbg !9731
  %4 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9732
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 3, !dbg !9733
  call void @INIT_LIST_HEAD(%struct.list_head* %devices) #9, !dbg !9734
  %5 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9735
  %slots = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 5, !dbg !9736
  call void @INIT_LIST_HEAD(%struct.list_head* %slots) #9, !dbg !9737
  %6 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9738
  %resources = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 7, !dbg !9739
  call void @INIT_LIST_HEAD(%struct.list_head* %resources) #9, !dbg !9740
  %7 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9741
  %max_bus_speed = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 15, !dbg !9742
  store i8 -1, i8* %max_bus_speed, align 2, !dbg !9743
  %8 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9744
  %cur_bus_speed = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 16, !dbg !9745
  store i8 -1, i8* %cur_bus_speed, align 1, !dbg !9746
  %9 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9747
  store %struct.pci_bus* %9, %struct.pci_bus** %retval, align 8, !dbg !9748
  br label %return, !dbg !9748

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct.pci_bus*, %struct.pci_bus** %retval, align 8, !dbg !9749
  ret %struct.pci_bus* %10, !dbg !9749
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @pci_set_bus_of_node(%struct.pci_bus*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_bus_speed(%struct.pci_bus* %bus) #0 !dbg !9750 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %agpstat = alloca i32, align 4
  %agpcmd = alloca i32, align 4
  %status = alloca i16, align 2
  %max = alloca i32, align 4
  %linkcap = alloca i32, align 4
  %linksta = alloca i16, align 2
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !9751, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !9753, metadata !DIExpression()), !dbg !9754
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9755
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !9756
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !9756
  store %struct.pci_dev* %1, %struct.pci_dev** %bridge, align 8, !dbg !9754
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9757, metadata !DIExpression()), !dbg !9758
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9759
  %call = call i32 @pci_find_capability(%struct.pci_dev* %2, i32 2) #9, !dbg !9760
  store i32 %call, i32* %pos, align 4, !dbg !9761
  %3 = load i32, i32* %pos, align 4, !dbg !9762
  %tobool = icmp ne i32 %3, 0, !dbg !9762
  br i1 %tobool, label %if.end, label %if.then, !dbg !9764

if.then:                                          ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9765
  %call1 = call i32 @pci_find_capability(%struct.pci_dev* %4, i32 14) #9, !dbg !9766
  store i32 %call1, i32* %pos, align 4, !dbg !9767
  br label %if.end, !dbg !9768

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %pos, align 4, !dbg !9769
  %tobool2 = icmp ne i32 %5, 0, !dbg !9769
  br i1 %tobool2, label %if.then3, label %if.end13, !dbg !9771

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %agpstat, metadata !9772, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.declare(metadata i32* %agpcmd, metadata !9775, metadata !DIExpression()), !dbg !9776
  %6 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9777
  %7 = load i32, i32* %pos, align 4, !dbg !9778
  %add = add i32 %7, 4, !dbg !9779
  %call4 = call i32 @pci_read_config_dword(%struct.pci_dev* %6, i32 %add, i32* %agpstat) #9, !dbg !9780
  %8 = load i32, i32* %agpstat, align 4, !dbg !9781
  %and = and i32 %8, 8, !dbg !9782
  %9 = load i32, i32* %agpstat, align 4, !dbg !9783
  %and5 = and i32 %9, 7, !dbg !9784
  %call6 = call i32 @agp_speed(i32 %and, i32 %and5) #9, !dbg !9785
  %conv = trunc i32 %call6 to i8, !dbg !9785
  %10 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9786
  %max_bus_speed = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %10, i32 0, i32 15, !dbg !9787
  store i8 %conv, i8* %max_bus_speed, align 2, !dbg !9788
  %11 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9789
  %12 = load i32, i32* %pos, align 4, !dbg !9790
  %add7 = add i32 %12, 8, !dbg !9791
  %call8 = call i32 @pci_read_config_dword(%struct.pci_dev* %11, i32 %add7, i32* %agpcmd) #9, !dbg !9792
  %13 = load i32, i32* %agpstat, align 4, !dbg !9793
  %and9 = and i32 %13, 8, !dbg !9794
  %14 = load i32, i32* %agpcmd, align 4, !dbg !9795
  %and10 = and i32 %14, 7, !dbg !9796
  %call11 = call i32 @agp_speed(i32 %and9, i32 %and10) #9, !dbg !9797
  %conv12 = trunc i32 %call11 to i8, !dbg !9797
  %15 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9798
  %cur_bus_speed = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %15, i32 0, i32 16, !dbg !9799
  store i8 %conv12, i8* %cur_bus_speed, align 1, !dbg !9800
  br label %if.end13, !dbg !9801

if.end13:                                         ; preds = %if.then3, %if.end
  %16 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9802
  %call14 = call i32 @pci_find_capability(%struct.pci_dev* %16, i32 7) #9, !dbg !9803
  store i32 %call14, i32* %pos, align 4, !dbg !9804
  %17 = load i32, i32* %pos, align 4, !dbg !9805
  %tobool15 = icmp ne i32 %17, 0, !dbg !9805
  br i1 %tobool15, label %if.then16, label %if.end47, !dbg !9807

if.then16:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i16* %status, metadata !9808, metadata !DIExpression()), !dbg !9810
  call void @llvm.dbg.declare(metadata i32* %max, metadata !9811, metadata !DIExpression()), !dbg !9812
  %18 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9813
  %19 = load i32, i32* %pos, align 4, !dbg !9814
  %add17 = add i32 %19, 2, !dbg !9815
  %call18 = call i32 @pci_read_config_word(%struct.pci_dev* %18, i32 %add17, i16* %status) #9, !dbg !9816
  %20 = load i16, i16* %status, align 2, !dbg !9817
  %conv19 = zext i16 %20 to i32, !dbg !9817
  %and20 = and i32 %conv19, 32768, !dbg !9819
  %tobool21 = icmp ne i32 %and20, 0, !dbg !9819
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !9820

if.then22:                                        ; preds = %if.then16
  store i32 19, i32* %max, align 4, !dbg !9821
  br label %if.end41, !dbg !9823

if.else:                                          ; preds = %if.then16
  %21 = load i16, i16* %status, align 2, !dbg !9824
  %conv23 = zext i16 %21 to i32, !dbg !9824
  %and24 = and i32 %conv23, 16384, !dbg !9826
  %tobool25 = icmp ne i32 %and24, 0, !dbg !9826
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !9827

if.then26:                                        ; preds = %if.else
  store i32 11, i32* %max, align 4, !dbg !9828
  br label %if.end40, !dbg !9830

if.else27:                                        ; preds = %if.else
  %22 = load i16, i16* %status, align 2, !dbg !9831
  %conv28 = zext i16 %22 to i32, !dbg !9831
  %and29 = and i32 %conv28, 2, !dbg !9833
  %tobool30 = icmp ne i32 %and29, 0, !dbg !9833
  br i1 %tobool30, label %if.then31, label %if.else38, !dbg !9834

if.then31:                                        ; preds = %if.else27
  %23 = load i16, i16* %status, align 2, !dbg !9835
  %conv32 = zext i16 %23 to i32, !dbg !9835
  %and33 = and i32 %conv32, 12288, !dbg !9838
  %cmp = icmp eq i32 %and33, 8192, !dbg !9839
  br i1 %cmp, label %if.then35, label %if.else36, !dbg !9840

if.then35:                                        ; preds = %if.then31
  store i32 7, i32* %max, align 4, !dbg !9841
  br label %if.end37, !dbg !9842

if.else36:                                        ; preds = %if.then31
  store i32 4, i32* %max, align 4, !dbg !9843
  br label %if.end37

if.end37:                                         ; preds = %if.else36, %if.then35
  br label %if.end39, !dbg !9844

if.else38:                                        ; preds = %if.else27
  store i32 2, i32* %max, align 4, !dbg !9845
  br label %if.end39

if.end39:                                         ; preds = %if.else38, %if.end37
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then26
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then22
  %24 = load i32, i32* %max, align 4, !dbg !9847
  %conv42 = trunc i32 %24 to i8, !dbg !9847
  %25 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9848
  %max_bus_speed43 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %25, i32 0, i32 15, !dbg !9849
  store i8 %conv42, i8* %max_bus_speed43, align 2, !dbg !9850
  %26 = load i16, i16* %status, align 2, !dbg !9851
  %conv44 = zext i16 %26 to i32, !dbg !9851
  %and45 = and i32 %conv44, 960, !dbg !9852
  %shr = ashr i32 %and45, 6, !dbg !9853
  %idxprom = sext i32 %shr to i64, !dbg !9854
  %arrayidx = getelementptr [16 x i8], [16 x i8]* @pcix_bus_speed, i64 0, i64 %idxprom, !dbg !9854
  %27 = load i8, i8* %arrayidx, align 1, !dbg !9854
  %28 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9855
  %cur_bus_speed46 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %28, i32 0, i32 16, !dbg !9856
  store i8 %27, i8* %cur_bus_speed46, align 1, !dbg !9857
  br label %if.end59, !dbg !9858

if.end47:                                         ; preds = %if.end13
  %29 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9859
  %call48 = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %29) #9, !dbg !9861
  br i1 %call48, label %if.then49, label %if.end59, !dbg !9862

if.then49:                                        ; preds = %if.end47
  call void @llvm.dbg.declare(metadata i32* %linkcap, metadata !9863, metadata !DIExpression()), !dbg !9865
  call void @llvm.dbg.declare(metadata i16* %linksta, metadata !9866, metadata !DIExpression()), !dbg !9867
  %30 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9868
  %call50 = call i32 @pcie_capability_read_dword(%struct.pci_dev* %30, i32 12, i32* %linkcap) #9, !dbg !9869
  %31 = load i32, i32* %linkcap, align 4, !dbg !9870
  %and51 = and i32 %31, 15, !dbg !9871
  %idxprom52 = zext i32 %and51 to i64, !dbg !9872
  %arrayidx53 = getelementptr [16 x i8], [16 x i8]* @pcie_link_speed, i64 0, i64 %idxprom52, !dbg !9872
  %32 = load i8, i8* %arrayidx53, align 1, !dbg !9872
  %33 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9873
  %max_bus_speed54 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %33, i32 0, i32 15, !dbg !9874
  store i8 %32, i8* %max_bus_speed54, align 2, !dbg !9875
  %34 = load i32, i32* %linkcap, align 4, !dbg !9876
  %and55 = and i32 %34, 1048576, !dbg !9877
  %tobool56 = icmp ne i32 %and55, 0, !dbg !9878
  %lnot = xor i1 %tobool56, true, !dbg !9878
  %lnot57 = xor i1 %lnot, true, !dbg !9879
  %lnot.ext = zext i1 %lnot57 to i32, !dbg !9879
  %35 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9880
  %link_active_reporting = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 46, !dbg !9881
  %36 = bitcast [5 x i8]* %link_active_reporting to i40*, !dbg !9881
  %37 = zext i32 %lnot.ext to i40, !dbg !9882
  %bf.load = load i40, i40* %36, align 1, !dbg !9882
  %bf.value = and i40 %37, 1, !dbg !9882
  %bf.shl = shl i40 %bf.value, 34, !dbg !9882
  %bf.clear = and i40 %bf.load, -17179869185, !dbg !9882
  %bf.set = or i40 %bf.clear, %bf.shl, !dbg !9882
  store i40 %bf.set, i40* %36, align 1, !dbg !9882
  %bf.result.cast = trunc i40 %bf.value to i32, !dbg !9882
  %38 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9883
  %call58 = call i32 @pcie_capability_read_word(%struct.pci_dev* %38, i32 18, i16* %linksta) #9, !dbg !9884
  %39 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9885
  %40 = load i16, i16* %linksta, align 2, !dbg !9886
  call void @pcie_update_link_speed(%struct.pci_bus* %39, i16 zeroext %40) #9, !dbg !9887
  br label %if.end59, !dbg !9888

if.end59:                                         ; preds = %if.end41, %if.then49, %if.end47
  ret void, !dbg !9889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_bridge_child_ext_cfg_accessible(%struct.pci_dev* %bridge) #0 !dbg !9890 {
entry:
  %retval = alloca i1, align 1
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !9891, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9893, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9895, metadata !DIExpression()), !dbg !9896
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !9897
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !9899
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9899
  %bus_flags = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 19, !dbg !9900
  %2 = load i16, i16* %bus_flags, align 2, !dbg !9900
  %conv = zext i16 %2 to i32, !dbg !9897
  %and = and i32 %conv, 8, !dbg !9901
  %tobool = icmp ne i32 %and, 0, !dbg !9901
  br i1 %tobool, label %if.then, label %if.end, !dbg !9902

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9903
  br label %return, !dbg !9903

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !9904
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %3) #9, !dbg !9906
  br i1 %call, label %land.lhs.true, label %if.end12, !dbg !9907

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !9908
  %call2 = call i32 @pci_pcie_type(%struct.pci_dev* %4) #9, !dbg !9909
  %cmp = icmp eq i32 %call2, 4, !dbg !9910
  br i1 %cmp, label %if.then11, label %lor.lhs.false, !dbg !9911

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !9912
  %call4 = call i32 @pci_pcie_type(%struct.pci_dev* %5) #9, !dbg !9913
  %cmp5 = icmp eq i32 %call4, 5, !dbg !9914
  br i1 %cmp5, label %if.then11, label %lor.lhs.false7, !dbg !9915

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %6 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !9916
  %call8 = call i32 @pci_pcie_type(%struct.pci_dev* %6) #9, !dbg !9917
  %cmp9 = icmp eq i32 %call8, 6, !dbg !9918
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !9919

if.then11:                                        ; preds = %lor.lhs.false7, %lor.lhs.false, %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !9920
  br label %return, !dbg !9920

if.end12:                                         ; preds = %lor.lhs.false7, %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !9921
  %call13 = call i32 @pci_find_capability(%struct.pci_dev* %7, i32 7) #9, !dbg !9922
  store i32 %call13, i32* %pos, align 4, !dbg !9923
  %8 = load i32, i32* %pos, align 4, !dbg !9924
  %tobool14 = icmp ne i32 %8, 0, !dbg !9924
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !9926

if.then15:                                        ; preds = %if.end12
  store i1 false, i1* %retval, align 1, !dbg !9927
  br label %return, !dbg !9927

if.end16:                                         ; preds = %if.end12
  %9 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !9928
  %10 = load i32, i32* %pos, align 4, !dbg !9929
  %add = add i32 %10, 4, !dbg !9930
  %call17 = call i32 @pci_read_config_dword(%struct.pci_dev* %9, i32 %add, i32* %status) #9, !dbg !9931
  %11 = load i32, i32* %status, align 4, !dbg !9932
  %and18 = and i32 %11, -1073741824, !dbg !9933
  %tobool19 = icmp ne i32 %and18, 0, !dbg !9932
  store i1 %tobool19, i1* %retval, align 1, !dbg !9934
  br label %return, !dbg !9934

return:                                           ; preds = %if.end16, %if.then15, %if.then11, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !9935
  ret i1 %12, !dbg !9935
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_bus_msi_domain(%struct.pci_bus* %bus) #0 !dbg !9936 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %d = alloca %struct.irq_domain*, align 8
  %b = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !9937, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %d, metadata !9939, metadata !DIExpression()), !dbg !9940
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !9941, metadata !DIExpression()), !dbg !9942
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9943
  store %struct.pci_bus* %0, %struct.pci_bus** %b, align 8, !dbg !9945
  store %struct.irq_domain* null, %struct.irq_domain** %d, align 8, !dbg !9946
  br label %for.cond, !dbg !9947

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !9948
  %tobool = icmp ne %struct.irq_domain* %1, null, !dbg !9948
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !9950

land.rhs:                                         ; preds = %for.cond
  %2 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9951
  %call = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %2) #9, !dbg !9952
  %lnot = xor i1 %call, true, !dbg !9953
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %3 = phi i1 [ false, %for.cond ], [ %lnot, %land.rhs ], !dbg !9954
  br i1 %3, label %for.body, label %for.end, !dbg !9955

for.body:                                         ; preds = %land.end
  %4 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9956
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 4, !dbg !9959
  %5 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !9959
  %tobool1 = icmp ne %struct.pci_dev* %5, null, !dbg !9956
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9960

if.then:                                          ; preds = %for.body
  %6 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9961
  %self2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 4, !dbg !9962
  %7 = load %struct.pci_dev*, %struct.pci_dev** %self2, align 8, !dbg !9962
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !9963
  %call3 = call %struct.irq_domain* @dev_get_msi_domain(%struct.device* %dev) #9, !dbg !9964
  store %struct.irq_domain* %call3, %struct.irq_domain** %d, align 8, !dbg !9965
  br label %if.end, !dbg !9966

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !9967

for.inc:                                          ; preds = %if.end
  %8 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9968
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 1, !dbg !9969
  %9 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !9969
  store %struct.pci_bus* %9, %struct.pci_bus** %b, align 8, !dbg !9970
  br label %for.cond, !dbg !9971, !llvm.loop !9972

for.end:                                          ; preds = %land.end
  %10 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !9974
  %tobool4 = icmp ne %struct.irq_domain* %10, null, !dbg !9974
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !9976

if.then5:                                         ; preds = %for.end
  %11 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9977
  %call6 = call %struct.irq_domain* @pci_host_bridge_msi_domain(%struct.pci_bus* %11) #9, !dbg !9978
  store %struct.irq_domain* %call6, %struct.irq_domain** %d, align 8, !dbg !9979
  br label %if.end7, !dbg !9980

if.end7:                                          ; preds = %if.then5, %for.end
  %12 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9981
  %dev8 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %12, i32 0, i32 21, !dbg !9982
  %13 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !9983
  call void @dev_set_msi_domain(%struct.device* %dev8, %struct.irq_domain* %13) #9, !dbg !9984
  ret void, !dbg !9985
}

; Function Attrs: noredzone
declare dso_local i32 @device_register(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_create_legacy_files(%struct.pci_bus* %bus) #0 !dbg !9986 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !9987, metadata !DIExpression()), !dbg !9988
  ret void, !dbg !9989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @agp_speed(i32 %agp3, i32 %agpstat) #0 !dbg !9990 {
entry:
  %agp3.addr = alloca i32, align 4
  %agpstat.addr = alloca i32, align 4
  %index = alloca i32, align 4
  store i32 %agp3, i32* %agp3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %agp3.addr, metadata !9993, metadata !DIExpression()), !dbg !9994
  store i32 %agpstat, i32* %agpstat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %agpstat.addr, metadata !9995, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9997, metadata !DIExpression()), !dbg !9998
  store i32 0, i32* %index, align 4, !dbg !9998
  %0 = load i32, i32* %agpstat.addr, align 4, !dbg !9999
  %and = and i32 %0, 4, !dbg !10001
  %tobool = icmp ne i32 %and, 0, !dbg !10001
  br i1 %tobool, label %if.then, label %if.else, !dbg !10002

if.then:                                          ; preds = %entry
  store i32 3, i32* %index, align 4, !dbg !10003
  br label %if.end10, !dbg !10004

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %agpstat.addr, align 4, !dbg !10005
  %and1 = and i32 %1, 2, !dbg !10007
  %tobool2 = icmp ne i32 %and1, 0, !dbg !10007
  br i1 %tobool2, label %if.then3, label %if.else4, !dbg !10008

if.then3:                                         ; preds = %if.else
  store i32 2, i32* %index, align 4, !dbg !10009
  br label %if.end9, !dbg !10010

if.else4:                                         ; preds = %if.else
  %2 = load i32, i32* %agpstat.addr, align 4, !dbg !10011
  %and5 = and i32 %2, 1, !dbg !10013
  %tobool6 = icmp ne i32 %and5, 0, !dbg !10013
  br i1 %tobool6, label %if.then7, label %if.else8, !dbg !10014

if.then7:                                         ; preds = %if.else4
  store i32 1, i32* %index, align 4, !dbg !10015
  br label %if.end, !dbg !10016

if.else8:                                         ; preds = %if.else4
  br label %out, !dbg !10017

if.end:                                           ; preds = %if.then7
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then3
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then
  %3 = load i32, i32* %agp3.addr, align 4, !dbg !10018
  %tobool11 = icmp ne i32 %3, 0, !dbg !10018
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !10020

if.then12:                                        ; preds = %if.end10
  %4 = load i32, i32* %index, align 4, !dbg !10021
  %add = add i32 %4, 2, !dbg !10021
  store i32 %add, i32* %index, align 4, !dbg !10021
  %5 = load i32, i32* %index, align 4, !dbg !10023
  %cmp = icmp eq i32 %5, 5, !dbg !10025
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !10026

if.then13:                                        ; preds = %if.then12
  store i32 0, i32* %index, align 4, !dbg !10027
  br label %if.end14, !dbg !10028

if.end14:                                         ; preds = %if.then13, %if.then12
  br label %if.end15, !dbg !10029

if.end15:                                         ; preds = %if.end14, %if.end10
  br label %out, !dbg !10018

out:                                              ; preds = %if.end15, %if.else8
  call void @llvm.dbg.label(metadata !10030), !dbg !10031
  %6 = load i32, i32* %index, align 4, !dbg !10032
  %idxprom = sext i32 %6 to i64, !dbg !10033
  %arrayidx = getelementptr [5 x i8], [5 x i8]* @agp_speeds, i64 0, i64 %idxprom, !dbg !10033
  %7 = load i8, i8* %arrayidx, align 1, !dbg !10033
  %conv = zext i8 %7 to i32, !dbg !10033
  ret i32 %conv, !dbg !10034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.irq_domain* @dev_get_msi_domain(%struct.device* %dev) #0 !dbg !10035 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10038, metadata !DIExpression()), !dbg !10039
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10040
  %msi_domain = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 13, !dbg !10041
  %1 = load %struct.irq_domain*, %struct.irq_domain** %msi_domain, align 8, !dbg !10041
  ret %struct.irq_domain* %1, !dbg !10042
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.irq_domain* @pci_host_bridge_msi_domain(%struct.pci_bus* %bus) #0 !dbg !10043 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %d = alloca %struct.irq_domain*, align 8
  %fwnode = alloca %struct.fwnode_handle*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !10046, metadata !DIExpression()), !dbg !10047
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %d, metadata !10048, metadata !DIExpression()), !dbg !10049
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !10050
  %call = call %struct.irq_domain* @pci_host_bridge_of_msi_domain(%struct.pci_bus* %0) #9, !dbg !10051
  store %struct.irq_domain* %call, %struct.irq_domain** %d, align 8, !dbg !10052
  %1 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !10053
  %tobool = icmp ne %struct.irq_domain* %1, null, !dbg !10053
  br i1 %tobool, label %if.end, label %if.then, !dbg !10055

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !10056
  %call1 = call %struct.irq_domain* @pci_host_bridge_acpi_msi_domain(%struct.pci_bus* %2) #9, !dbg !10057
  store %struct.irq_domain* %call1, %struct.irq_domain** %d, align 8, !dbg !10058
  br label %if.end, !dbg !10059

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !10060
  %tobool2 = icmp ne %struct.irq_domain* %3, null, !dbg !10060
  br i1 %tobool2, label %if.end9, label %if.then3, !dbg !10062

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode, metadata !10063, metadata !DIExpression()), !dbg !10065
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !10066
  %call4 = call i8* @_pci_root_bus_fwnode(%struct.pci_bus* %4) #9, !dbg !10067
  %5 = bitcast i8* %call4 to %struct.fwnode_handle*, !dbg !10067
  store %struct.fwnode_handle* %5, %struct.fwnode_handle** %fwnode, align 8, !dbg !10065
  %6 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !10068
  %tobool5 = icmp ne %struct.fwnode_handle* %6, null, !dbg !10068
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !10070

if.then6:                                         ; preds = %if.then3
  %7 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !10071
  %call7 = call %struct.irq_domain* @irq_find_matching_fwnode(%struct.fwnode_handle* %7, i32 3) #9, !dbg !10072
  store %struct.irq_domain* %call7, %struct.irq_domain** %d, align 8, !dbg !10073
  br label %if.end8, !dbg !10074

if.end8:                                          ; preds = %if.then6, %if.then3
  br label %if.end9, !dbg !10075

if.end9:                                          ; preds = %if.end8, %if.end
  %8 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !10076
  ret %struct.irq_domain* %8, !dbg !10077
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_msi_domain(%struct.device* %dev, %struct.irq_domain* %d) #0 !dbg !10078 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %d.addr = alloca %struct.irq_domain*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10081, metadata !DIExpression()), !dbg !10082
  store %struct.irq_domain* %d, %struct.irq_domain** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %d.addr, metadata !10083, metadata !DIExpression()), !dbg !10084
  %0 = load %struct.irq_domain*, %struct.irq_domain** %d.addr, align 8, !dbg !10085
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10086
  %msi_domain = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 13, !dbg !10087
  store %struct.irq_domain* %0, %struct.irq_domain** %msi_domain, align 8, !dbg !10088
  ret void, !dbg !10089
}

; Function Attrs: noredzone
declare dso_local %struct.irq_domain* @pci_host_bridge_of_msi_domain(%struct.pci_bus*) #2

; Function Attrs: noredzone
declare dso_local %struct.irq_domain* @pci_host_bridge_acpi_msi_domain(%struct.pci_bus*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @_pci_root_bus_fwnode(%struct.pci_bus* %bus) #0 !dbg !10090 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !10093, metadata !DIExpression()), !dbg !10094
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !10095
  %call = call %struct.pci_sysdata* @to_pci_sysdata(%struct.pci_bus* %0) #9, !dbg !10096
  %fwnode = getelementptr inbounds %struct.pci_sysdata, %struct.pci_sysdata* %call, i32 0, i32 4, !dbg !10097
  %1 = load i8*, i8** %fwnode, align 8, !dbg !10097
  ret i8* %1, !dbg !10098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.irq_domain* @irq_find_matching_fwnode(%struct.fwnode_handle* %fwnode, i32 %bus_token) #0 !dbg !10099 {
entry:
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  %bus_token.addr = alloca i32, align 4
  %fwspec = alloca %struct.irq_fwspec, align 8
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !10102, metadata !DIExpression()), !dbg !10103
  store i32 %bus_token, i32* %bus_token.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bus_token.addr, metadata !10104, metadata !DIExpression()), !dbg !10105
  call void @llvm.dbg.declare(metadata %struct.irq_fwspec* %fwspec, metadata !10106, metadata !DIExpression()), !dbg !10107
  %0 = bitcast %struct.irq_fwspec* %fwspec to i8*, !dbg !10107
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 80, i1 false), !dbg !10107
  %fwnode1 = getelementptr inbounds %struct.irq_fwspec, %struct.irq_fwspec* %fwspec, i32 0, i32 0, !dbg !10108
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !10109
  store %struct.fwnode_handle* %1, %struct.fwnode_handle** %fwnode1, align 8, !dbg !10108
  %2 = load i32, i32* %bus_token.addr, align 4, !dbg !10110
  %call = call %struct.irq_domain* @irq_find_matching_fwspec(%struct.irq_fwspec* %fwspec, i32 %2) #9, !dbg !10111
  ret %struct.irq_domain* %call, !dbg !10112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_sysdata* @to_pci_sysdata(%struct.pci_bus* %bus) #0 !dbg !10113 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !10404, metadata !DIExpression()), !dbg !10405
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !10406
  %sysdata = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 11, !dbg !10407
  %1 = load i8*, i8** %sysdata, align 8, !dbg !10407
  %2 = bitcast i8* %1 to %struct.pci_sysdata*, !dbg !10406
  ret %struct.pci_sysdata* %2, !dbg !10408
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local %struct.irq_domain* @irq_find_matching_fwspec(%struct.irq_fwspec*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10409 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10412, metadata !DIExpression()), !dbg !10413
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10414, metadata !DIExpression()), !dbg !10415
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10416, metadata !DIExpression()), !dbg !10417
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10418
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10420
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10421
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #9, !dbg !10422
  br i1 %call, label %if.end, label %if.then, !dbg !10423

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !10424

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10425
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10426
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !10427
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !10428
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10429
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10430
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !10431
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !10432
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10433
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10434
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !10435
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !10436
  br label %do.body, !dbg !10437

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !10438

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !10440

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !10438

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10442
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10442
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !10442
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !10442
  br label %do.end7, !dbg !10442

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !10438

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !10444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10445 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10448, metadata !DIExpression()), !dbg !10449
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10450, metadata !DIExpression()), !dbg !10451
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10452, metadata !DIExpression()), !dbg !10453
  ret i1 true, !dbg !10454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get_sync(%struct.device* %dev) #0 !dbg !10455 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10457, metadata !DIExpression()), !dbg !10458
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10459
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4) #9, !dbg !10460
  ret i32 %call, !dbg !10461
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_enable_crs(%struct.pci_dev* %pdev) #0 !dbg !10462 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %root_cap = alloca i16, align 2
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10463, metadata !DIExpression()), !dbg !10464
  call void @llvm.dbg.declare(metadata i16* %root_cap, metadata !10465, metadata !DIExpression()), !dbg !10466
  store i16 0, i16* %root_cap, align 2, !dbg !10466
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10467
  %call = call i32 @pcie_capability_read_word(%struct.pci_dev* %0, i32 30, i16* %root_cap) #9, !dbg !10468
  %1 = load i16, i16* %root_cap, align 2, !dbg !10469
  %conv = zext i16 %1 to i32, !dbg !10469
  %and = and i32 %conv, 1, !dbg !10471
  %tobool = icmp ne i32 %and, 0, !dbg !10471
  br i1 %tobool, label %if.then, label %if.end, !dbg !10472

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10473
  %call1 = call i32 @pcie_capability_set_word(%struct.pci_dev* %2, i32 28, i16 zeroext 16) #9, !dbg !10474
  br label %if.end, !dbg !10474

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10475
}

; Function Attrs: noredzone
declare dso_local i32 @pcibios_assign_all_busses() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_ea_fixed_busnrs(%struct.pci_dev* %dev, i8* %sec, i8* %sub) #0 !dbg !10476 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.pci_dev*, align 8
  %sec.addr = alloca i8*, align 8
  %sub.addr = alloca i8*, align 8
  %ea = alloca i32, align 4
  %offset = alloca i32, align 4
  %dw = alloca i32, align 4
  %ea_sec = alloca i8, align 1
  %ea_sub = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10479, metadata !DIExpression()), !dbg !10480
  store i8* %sec, i8** %sec.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sec.addr, metadata !10481, metadata !DIExpression()), !dbg !10482
  store i8* %sub, i8** %sub.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sub.addr, metadata !10483, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.declare(metadata i32* %ea, metadata !10485, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10487, metadata !DIExpression()), !dbg !10488
  call void @llvm.dbg.declare(metadata i32* %dw, metadata !10489, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.declare(metadata i8* %ea_sec, metadata !10491, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.declare(metadata i8* %ea_sub, metadata !10493, metadata !DIExpression()), !dbg !10494
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10495
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 13, !dbg !10497
  %1 = load i8, i8* %hdr_type, align 1, !dbg !10497
  %conv = zext i8 %1 to i32, !dbg !10495
  %cmp = icmp ne i32 %conv, 1, !dbg !10498
  br i1 %cmp, label %if.then, label %if.end, !dbg !10499

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10500
  br label %return, !dbg !10500

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10501
  %call = call i32 @pci_find_capability(%struct.pci_dev* %2, i32 20) #9, !dbg !10502
  store i32 %call, i32* %ea, align 4, !dbg !10503
  %3 = load i32, i32* %ea, align 4, !dbg !10504
  %tobool = icmp ne i32 %3, 0, !dbg !10504
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !10506

if.then2:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !10507
  br label %return, !dbg !10507

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %ea, align 4, !dbg !10508
  %add = add i32 %4, 4, !dbg !10509
  store i32 %add, i32* %offset, align 4, !dbg !10510
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10511
  %6 = load i32, i32* %offset, align 4, !dbg !10512
  %call4 = call i32 @pci_read_config_dword(%struct.pci_dev* %5, i32 %6, i32* %dw) #9, !dbg !10513
  %7 = load i32, i32* %dw, align 4, !dbg !10514
  %and = and i32 %7, 255, !dbg !10515
  %conv5 = trunc i32 %and to i8, !dbg !10514
  store i8 %conv5, i8* %ea_sec, align 1, !dbg !10516
  %8 = load i32, i32* %dw, align 4, !dbg !10517
  %and6 = and i32 %8, 65280, !dbg !10518
  %shr = lshr i32 %and6, 8, !dbg !10519
  %conv7 = trunc i32 %shr to i8, !dbg !10520
  store i8 %conv7, i8* %ea_sub, align 1, !dbg !10521
  %9 = load i8, i8* %ea_sec, align 1, !dbg !10522
  %conv8 = zext i8 %9 to i32, !dbg !10522
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !10524
  br i1 %cmp9, label %if.then15, label %lor.lhs.false, !dbg !10525

lor.lhs.false:                                    ; preds = %if.end3
  %10 = load i8, i8* %ea_sub, align 1, !dbg !10526
  %conv11 = zext i8 %10 to i32, !dbg !10526
  %11 = load i8, i8* %ea_sec, align 1, !dbg !10527
  %conv12 = zext i8 %11 to i32, !dbg !10527
  %cmp13 = icmp slt i32 %conv11, %conv12, !dbg !10528
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !10529

if.then15:                                        ; preds = %lor.lhs.false, %if.end3
  store i1 false, i1* %retval, align 1, !dbg !10530
  br label %return, !dbg !10530

if.end16:                                         ; preds = %lor.lhs.false
  %12 = load i8, i8* %ea_sec, align 1, !dbg !10531
  %13 = load i8*, i8** %sec.addr, align 8, !dbg !10532
  store i8 %12, i8* %13, align 1, !dbg !10533
  %14 = load i8, i8* %ea_sub, align 1, !dbg !10534
  %15 = load i8*, i8** %sub.addr, align 8, !dbg !10535
  store i8 %14, i8* %15, align 1, !dbg !10536
  store i1 true, i1* %retval, align 1, !dbg !10537
  br label %return, !dbg !10537

return:                                           ; preds = %if.end16, %if.then15, %if.then2, %if.then
  %16 = load i1, i1* %retval, align 1, !dbg !10538
  ret i1 %16, !dbg !10538
}

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_byte(%struct.pci_dev*, i32, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put(%struct.device* %dev) #0 !dbg !10539 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10540, metadata !DIExpression()), !dbg !10541
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10542
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 5) #9, !dbg !10543
  ret i32 %call, !dbg !10544
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_idle(%struct.device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_dev* @pci_physfn(%struct.pci_dev* %dev) #0 !dbg !10545 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10546, metadata !DIExpression()), !dbg !10547
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10548
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !10550
  %1 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !10550
  %bf.load = load i40, i40* %1, align 1, !dbg !10550
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !10550
  %bf.clear = and i40 %bf.lshr, 1, !dbg !10550
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !10550
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10548
  br i1 %tobool, label %if.then, label %if.end, !dbg !10551

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10552
  %3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 59, !dbg !10553
  %physfn = bitcast %union.anon.69* %3 to %struct.pci_dev**, !dbg !10553
  %4 = load %struct.pci_dev*, %struct.pci_dev** %physfn, align 8, !dbg !10553
  store %struct.pci_dev* %4, %struct.pci_dev** %dev.addr, align 8, !dbg !10554
  br label %if.end, !dbg !10555

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10556
  ret %struct.pci_dev* %5, !dbg !10557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pcie_caps_reg(%struct.pci_dev* %dev) #0 !dbg !10558 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10561, metadata !DIExpression()), !dbg !10562
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10563
  %pcie_flags_reg = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 20, !dbg !10564
  %1 = load i16, i16* %pcie_flags_reg, align 8, !dbg !10564
  ret i16 %1, !dbg !10565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_ext_cfg_is_aliased(%struct.pci_dev* %dev) #0 !dbg !10566 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %header = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10567, metadata !DIExpression()), !dbg !10568
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10569, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.declare(metadata i32* %header, metadata !10571, metadata !DIExpression()), !dbg !10572
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10573, metadata !DIExpression()), !dbg !10574
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10575
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 0, i32* %header) #9, !dbg !10576
  store i32 256, i32* %pos, align 4, !dbg !10577
  br label %for.cond, !dbg !10579

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %pos, align 4, !dbg !10580
  %cmp = icmp slt i32 %1, 4096, !dbg !10582
  br i1 %cmp, label %for.body, label %for.end, !dbg !10583

for.body:                                         ; preds = %for.cond
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10584
  %3 = load i32, i32* %pos, align 4, !dbg !10587
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %2, i32 %3, i32* %tmp) #9, !dbg !10588
  %cmp2 = icmp ne i32 %call1, 0, !dbg !10589
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !10590

lor.lhs.false:                                    ; preds = %for.body
  %4 = load i32, i32* %header, align 4, !dbg !10591
  %5 = load i32, i32* %tmp, align 4, !dbg !10592
  %cmp3 = icmp ne i32 %4, %5, !dbg !10593
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10594

if.then:                                          ; preds = %lor.lhs.false, %for.body
  store i1 false, i1* %retval, align 1, !dbg !10595
  br label %return, !dbg !10595

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !10596

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %pos, align 4, !dbg !10597
  %add = add i32 %6, 256, !dbg !10597
  store i32 %add, i32* %pos, align 4, !dbg !10597
  br label %for.cond, !dbg !10598, !llvm.loop !10599

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !10601
  br label %return, !dbg !10601

return:                                           ; preds = %for.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !10602
  ret i1 %7, !dbg !10602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_pcie_cap(%struct.pci_dev* %dev) #0 !dbg !10603 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10604, metadata !DIExpression()), !dbg !10605
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10606
  %pcie_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 14, !dbg !10607
  %1 = load i8, i8* %pcie_cap, align 2, !dbg !10607
  %conv = zext i8 %1 to i32, !dbg !10606
  ret i32 %conv, !dbg !10608
}

; Function Attrs: noredzone
declare dso_local void @print_hex_dump(i8*, i8*, i32, i32, i32, i8*, i64, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_find_next_ext_capability(%struct.pci_dev*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @pcie_capability_clear_and_set_word(%struct.pci_dev*, i32, i16 zeroext, i16 zeroext) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_configure_mps(%struct.pci_dev* %dev) #0 !dbg !10609 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %mps = alloca i32, align 4
  %mpss = alloca i32, align 4
  %p_mps = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10610, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !10612, metadata !DIExpression()), !dbg !10613
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10614
  %call = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %0) #9, !dbg !10615
  store %struct.pci_dev* %call, %struct.pci_dev** %bridge, align 8, !dbg !10613
  call void @llvm.dbg.declare(metadata i32* %mps, metadata !10616, metadata !DIExpression()), !dbg !10617
  call void @llvm.dbg.declare(metadata i32* %mpss, metadata !10618, metadata !DIExpression()), !dbg !10619
  call void @llvm.dbg.declare(metadata i32* %p_mps, metadata !10620, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10622, metadata !DIExpression()), !dbg !10623
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10624
  %call1 = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %1) #9, !dbg !10626
  br i1 %call1, label %if.end, label %if.then, !dbg !10627

if.then:                                          ; preds = %entry
  br label %return, !dbg !10628

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10629
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !10631
  %3 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !10631
  %bf.load = load i40, i40* %3, align 1, !dbg !10631
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !10631
  %bf.clear = and i40 %bf.lshr, 1, !dbg !10631
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !10631
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10629
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !10632

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !10633

if.end3:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10634
  %call4 = call i32 @pci_pcie_type(%struct.pci_dev* %4) #9, !dbg !10636
  %cmp = icmp eq i32 %call4, 9, !dbg !10637
  br i1 %cmp, label %if.then5, label %if.end16, !dbg !10638

if.then5:                                         ; preds = %if.end3
  %5 = load i32, i32* @pcie_bus_config, align 4, !dbg !10639
  %cmp6 = icmp eq i32 %5, 4, !dbg !10642
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !10643

if.then7:                                         ; preds = %if.then5
  store i32 128, i32* %mps, align 4, !dbg !10644
  br label %if.end10, !dbg !10645

if.else:                                          ; preds = %if.then5
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10646
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 17, !dbg !10647
  %bf.load8 = load i8, i8* %pcie_mpss, align 1, !dbg !10647
  %bf.clear9 = and i8 %bf.load8, 7, !dbg !10647
  %conv = zext i8 %bf.clear9 to i32, !dbg !10646
  %shl = shl i32 128, %conv, !dbg !10648
  store i32 %shl, i32* %mps, align 4, !dbg !10649
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10650
  %8 = load i32, i32* %mps, align 4, !dbg !10651
  %call11 = call i32 @pcie_set_mps(%struct.pci_dev* %7, i32 %8) #9, !dbg !10652
  store i32 %call11, i32* %rc, align 4, !dbg !10653
  %9 = load i32, i32* %rc, align 4, !dbg !10654
  %tobool12 = icmp ne i32 %9, 0, !dbg !10654
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !10656

if.then13:                                        ; preds = %if.end10
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10657
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !10657
  %11 = load i32, i32* %mps, align 4, !dbg !10657
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev14, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.70, i64 0, i64 0), i32 %11) #10, !dbg !10657
  br label %if.end15, !dbg !10659

if.end15:                                         ; preds = %if.then13, %if.end10
  br label %return, !dbg !10660

if.end16:                                         ; preds = %if.end3
  %12 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10661
  %tobool17 = icmp ne %struct.pci_dev* %12, null, !dbg !10661
  br i1 %tobool17, label %lor.lhs.false, label %if.then19, !dbg !10663

lor.lhs.false:                                    ; preds = %if.end16
  %13 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10664
  %call18 = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %13) #9, !dbg !10665
  br i1 %call18, label %if.end20, label %if.then19, !dbg !10666

if.then19:                                        ; preds = %lor.lhs.false, %if.end16
  br label %return, !dbg !10667

if.end20:                                         ; preds = %lor.lhs.false
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10668
  %call21 = call i32 @pcie_get_mps(%struct.pci_dev* %14) #9, !dbg !10669
  store i32 %call21, i32* %mps, align 4, !dbg !10670
  %15 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10671
  %call22 = call i32 @pcie_get_mps(%struct.pci_dev* %15) #9, !dbg !10672
  store i32 %call22, i32* %p_mps, align 4, !dbg !10673
  %16 = load i32, i32* %mps, align 4, !dbg !10674
  %17 = load i32, i32* %p_mps, align 4, !dbg !10676
  %cmp23 = icmp eq i32 %16, %17, !dbg !10677
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !10678

if.then25:                                        ; preds = %if.end20
  br label %return, !dbg !10679

if.end26:                                         ; preds = %if.end20
  %18 = load i32, i32* @pcie_bus_config, align 4, !dbg !10680
  %cmp27 = icmp eq i32 %18, 0, !dbg !10682
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !10683

if.then29:                                        ; preds = %if.end26
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10684
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !10684
  %20 = load i32, i32* %mps, align 4, !dbg !10684
  %21 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10684
  %call31 = call i8* @pci_name(%struct.pci_dev* %21) #9, !dbg !10684
  %22 = load i32, i32* %p_mps, align 4, !dbg !10684
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev30, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.71, i64 0, i64 0), i32 %20, i8* %call31, i32 %22) #10, !dbg !10684
  br label %return, !dbg !10686

if.end32:                                         ; preds = %if.end26
  %23 = load i32, i32* @pcie_bus_config, align 4, !dbg !10687
  %cmp33 = icmp ne i32 %23, 1, !dbg !10689
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !10690

if.then35:                                        ; preds = %if.end32
  br label %return, !dbg !10691

if.end36:                                         ; preds = %if.end32
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10692
  %pcie_mpss37 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 17, !dbg !10693
  %bf.load38 = load i8, i8* %pcie_mpss37, align 1, !dbg !10693
  %bf.clear39 = and i8 %bf.load38, 7, !dbg !10693
  %conv40 = zext i8 %bf.clear39 to i32, !dbg !10692
  %shl41 = shl i32 128, %conv40, !dbg !10694
  store i32 %shl41, i32* %mpss, align 4, !dbg !10695
  %25 = load i32, i32* %mpss, align 4, !dbg !10696
  %26 = load i32, i32* %p_mps, align 4, !dbg !10698
  %cmp42 = icmp slt i32 %25, %26, !dbg !10699
  br i1 %cmp42, label %land.lhs.true, label %if.end56, !dbg !10700

land.lhs.true:                                    ; preds = %if.end36
  %27 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10701
  %call44 = call i32 @pci_pcie_type(%struct.pci_dev* %27) #9, !dbg !10702
  %cmp45 = icmp eq i32 %call44, 4, !dbg !10703
  br i1 %cmp45, label %if.then47, label %if.end56, !dbg !10704

if.then47:                                        ; preds = %land.lhs.true
  %28 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10705
  %29 = load i32, i32* %mpss, align 4, !dbg !10707
  %call48 = call i32 @pcie_set_mps(%struct.pci_dev* %28, i32 %29) #9, !dbg !10708
  %30 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10709
  %dev49 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !10709
  %31 = load i32, i32* %mpss, align 4, !dbg !10709
  %32 = load i32, i32* %p_mps, align 4, !dbg !10709
  %33 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10709
  %pcie_mpss50 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 17, !dbg !10709
  %bf.load51 = load i8, i8* %pcie_mpss50, align 1, !dbg !10709
  %bf.clear52 = and i8 %bf.load51, 7, !dbg !10709
  %conv53 = zext i8 %bf.clear52 to i32, !dbg !10709
  %shl54 = shl i32 128, %conv53, !dbg !10709
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev49, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.72, i64 0, i64 0), i32 %31, i32 %32, i32 %shl54) #10, !dbg !10709
  %34 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10710
  %call55 = call i32 @pcie_get_mps(%struct.pci_dev* %34) #9, !dbg !10711
  store i32 %call55, i32* %p_mps, align 4, !dbg !10712
  br label %if.end56, !dbg !10713

if.end56:                                         ; preds = %if.then47, %land.lhs.true, %if.end36
  %35 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10714
  %36 = load i32, i32* %p_mps, align 4, !dbg !10715
  %call57 = call i32 @pcie_set_mps(%struct.pci_dev* %35, i32 %36) #9, !dbg !10716
  store i32 %call57, i32* %rc, align 4, !dbg !10717
  %37 = load i32, i32* %rc, align 4, !dbg !10718
  %tobool58 = icmp ne i32 %37, 0, !dbg !10718
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !10720

if.then59:                                        ; preds = %if.end56
  %38 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10721
  %dev60 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 41, !dbg !10721
  %39 = load i32, i32* %p_mps, align 4, !dbg !10721
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev60, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.70, i64 0, i64 0), i32 %39) #10, !dbg !10721
  br label %return, !dbg !10723

if.end61:                                         ; preds = %if.end56
  %40 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10724
  %dev62 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 41, !dbg !10724
  %41 = load i32, i32* %p_mps, align 4, !dbg !10724
  %42 = load i32, i32* %mps, align 4, !dbg !10724
  %43 = load i32, i32* %mpss, align 4, !dbg !10724
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev62, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.73, i64 0, i64 0), i32 %41, i32 %42, i32 %43) #10, !dbg !10724
  br label %return, !dbg !10725

return:                                           ; preds = %if.end61, %if.then59, %if.then35, %if.then29, %if.then25, %if.then19, %if.end15, %if.then2, %if.then
  ret void, !dbg !10725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_configure_relaxed_ordering(%struct.pci_dev* %dev) #0 !dbg !10726 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %root = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10727, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %root, metadata !10729, metadata !DIExpression()), !dbg !10730
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10731
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !10733
  %1 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !10733
  %bf.load = load i40, i40* %1, align 1, !dbg !10733
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !10733
  %bf.clear = and i40 %bf.lshr, 1, !dbg !10733
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !10733
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10731
  br i1 %tobool, label %if.then, label %if.end, !dbg !10734

if.then:                                          ; preds = %entry
  br label %if.end11, !dbg !10735

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10736
  %call = call zeroext i1 @pcie_relaxed_ordering_enabled(%struct.pci_dev* %2) #9, !dbg !10738
  br i1 %call, label %if.end2, label %if.then1, !dbg !10739

if.then1:                                         ; preds = %if.end
  br label %if.end11, !dbg !10740

if.end2:                                          ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10741
  %call3 = call %struct.pci_dev* @pcie_find_root_port(%struct.pci_dev* %3) #9, !dbg !10742
  store %struct.pci_dev* %call3, %struct.pci_dev** %root, align 8, !dbg !10743
  %4 = load %struct.pci_dev*, %struct.pci_dev** %root, align 8, !dbg !10744
  %tobool4 = icmp ne %struct.pci_dev* %4, null, !dbg !10744
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !10746

if.then5:                                         ; preds = %if.end2
  br label %if.end11, !dbg !10747

if.end6:                                          ; preds = %if.end2
  %5 = load %struct.pci_dev*, %struct.pci_dev** %root, align 8, !dbg !10748
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 47, !dbg !10750
  %6 = load i16, i16* %dev_flags, align 2, !dbg !10750
  %conv = zext i16 %6 to i32, !dbg !10748
  %and = and i32 %conv, 2048, !dbg !10751
  %tobool7 = icmp ne i32 %and, 0, !dbg !10751
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !10752

if.then8:                                         ; preds = %if.end6
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10753
  %call9 = call i32 @pcie_capability_clear_word(%struct.pci_dev* %7, i32 8, i16 zeroext 16) #9, !dbg !10755
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10756
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !10756
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev10, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.74, i64 0, i64 0)) #10, !dbg !10756
  br label %if.end11, !dbg !10757

if.end11:                                         ; preds = %if.then, %if.then1, %if.then5, %if.then8, %if.end6
  ret void, !dbg !10758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_configure_ltr(%struct.pci_dev* %dev) #0 !dbg !10759 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %host = alloca %struct.pci_host_bridge*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %cap = alloca i32, align 4
  %ctl = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10760, metadata !DIExpression()), !dbg !10761
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %host, metadata !10762, metadata !DIExpression()), !dbg !10763
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10764
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !10765
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !10765
  %call = call %struct.pci_host_bridge* @pci_find_host_bridge(%struct.pci_bus* %1) #9, !dbg !10766
  store %struct.pci_host_bridge* %call, %struct.pci_host_bridge** %host, align 8, !dbg !10763
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !10767, metadata !DIExpression()), !dbg !10768
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !10769, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.declare(metadata i32* %ctl, metadata !10771, metadata !DIExpression()), !dbg !10772
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10773
  %call1 = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %2) #9, !dbg !10775
  br i1 %call1, label %if.end, label %if.then, !dbg !10776

if.then:                                          ; preds = %entry
  br label %if.end48, !dbg !10777

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10778
  %call2 = call i32 @pci_find_ext_capability(%struct.pci_dev* %3, i32 30) #9, !dbg !10779
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10780
  %l1ss = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 37, !dbg !10781
  store i32 %call2, i32* %l1ss, align 4, !dbg !10782
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10783
  %call3 = call i32 @pcie_capability_read_dword(%struct.pci_dev* %5, i32 36, i32* %cap) #9, !dbg !10784
  %6 = load i32, i32* %cap, align 4, !dbg !10785
  %and = and i32 %6, 2048, !dbg !10787
  %tobool = icmp ne i32 %and, 0, !dbg !10787
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !10788

if.then4:                                         ; preds = %if.end
  br label %if.end48, !dbg !10789

if.end5:                                          ; preds = %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10790
  %call6 = call i32 @pcie_capability_read_dword(%struct.pci_dev* %7, i32 40, i32* %ctl) #9, !dbg !10791
  %8 = load i32, i32* %ctl, align 4, !dbg !10792
  %and7 = and i32 %8, 1024, !dbg !10794
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10794
  br i1 %tobool8, label %if.then9, label %if.end25, !dbg !10795

if.then9:                                         ; preds = %if.end5
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10796
  %call10 = call i32 @pci_pcie_type(%struct.pci_dev* %9) #9, !dbg !10799
  %cmp = icmp eq i32 %call10, 4, !dbg !10800
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !10801

if.then11:                                        ; preds = %if.then9
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10802
  %ltr_path = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 35, !dbg !10804
  %bf.load = load i8, i8* %ltr_path, align 8, !dbg !10805
  %bf.clear = and i8 %bf.load, -2, !dbg !10805
  %bf.set = or i8 %bf.clear, 1, !dbg !10805
  store i8 %bf.set, i8* %ltr_path, align 8, !dbg !10805
  br label %if.end48, !dbg !10806

if.end12:                                         ; preds = %if.then9
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10807
  %call13 = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %11) #9, !dbg !10808
  store %struct.pci_dev* %call13, %struct.pci_dev** %bridge, align 8, !dbg !10809
  %12 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10810
  %tobool14 = icmp ne %struct.pci_dev* %12, null, !dbg !10810
  br i1 %tobool14, label %land.lhs.true, label %if.end24, !dbg !10812

land.lhs.true:                                    ; preds = %if.end12
  %13 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10813
  %ltr_path15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 35, !dbg !10814
  %bf.load16 = load i8, i8* %ltr_path15, align 8, !dbg !10814
  %bf.clear17 = and i8 %bf.load16, 1, !dbg !10814
  %bf.cast = zext i8 %bf.clear17 to i32, !dbg !10814
  %tobool18 = icmp ne i32 %bf.cast, 0, !dbg !10813
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !10815

if.then19:                                        ; preds = %land.lhs.true
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10816
  %ltr_path20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 35, !dbg !10817
  %bf.load21 = load i8, i8* %ltr_path20, align 8, !dbg !10818
  %bf.clear22 = and i8 %bf.load21, -2, !dbg !10818
  %bf.set23 = or i8 %bf.clear22, 1, !dbg !10818
  store i8 %bf.set23, i8* %ltr_path20, align 8, !dbg !10818
  br label %if.end24, !dbg !10816

if.end24:                                         ; preds = %if.then19, %land.lhs.true, %if.end12
  br label %if.end48, !dbg !10819

if.end25:                                         ; preds = %if.end5
  %15 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %host, align 8, !dbg !10820
  %native_ltr = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %15, i32 0, i32 13, !dbg !10822
  %bf.load26 = load i16, i16* %native_ltr, align 8, !dbg !10822
  %bf.lshr = lshr i16 %bf.load26, 6, !dbg !10822
  %bf.clear27 = and i16 %bf.lshr, 1, !dbg !10822
  %bf.cast28 = zext i16 %bf.clear27 to i32, !dbg !10822
  %tobool29 = icmp ne i32 %bf.cast28, 0, !dbg !10820
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !10823

if.then30:                                        ; preds = %if.end25
  br label %if.end48, !dbg !10824

if.end31:                                         ; preds = %if.end25
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10825
  %call32 = call i32 @pci_pcie_type(%struct.pci_dev* %16) #9, !dbg !10827
  %cmp33 = icmp eq i32 %call32, 4, !dbg !10828
  br i1 %cmp33, label %if.then42, label %lor.lhs.false, !dbg !10829

lor.lhs.false:                                    ; preds = %if.end31
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10830
  %call34 = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %17) #9, !dbg !10831
  store %struct.pci_dev* %call34, %struct.pci_dev** %bridge, align 8, !dbg !10832
  %tobool35 = icmp ne %struct.pci_dev* %call34, null, !dbg !10832
  br i1 %tobool35, label %land.lhs.true36, label %if.end48, !dbg !10833

land.lhs.true36:                                  ; preds = %lor.lhs.false
  %18 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10834
  %ltr_path37 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 35, !dbg !10835
  %bf.load38 = load i8, i8* %ltr_path37, align 8, !dbg !10835
  %bf.clear39 = and i8 %bf.load38, 1, !dbg !10835
  %bf.cast40 = zext i8 %bf.clear39 to i32, !dbg !10835
  %tobool41 = icmp ne i32 %bf.cast40, 0, !dbg !10834
  br i1 %tobool41, label %if.then42, label %if.end48, !dbg !10836

if.then42:                                        ; preds = %land.lhs.true36, %if.end31
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10837
  %call43 = call i32 @pcie_capability_set_word(%struct.pci_dev* %19, i32 40, i16 zeroext 1024) #9, !dbg !10839
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10840
  %ltr_path44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 35, !dbg !10841
  %bf.load45 = load i8, i8* %ltr_path44, align 8, !dbg !10842
  %bf.clear46 = and i8 %bf.load45, -2, !dbg !10842
  %bf.set47 = or i8 %bf.clear46, 1, !dbg !10842
  store i8 %bf.set47, i8* %ltr_path44, align 8, !dbg !10842
  br label %if.end48, !dbg !10843

if.end48:                                         ; preds = %if.then, %if.then4, %if.then11, %if.end24, %if.then30, %if.then42, %land.lhs.true36, %lor.lhs.false
  ret void, !dbg !10844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_configure_eetlp_prefix(%struct.pci_dev* %dev) #0 !dbg !10845 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10846, metadata !DIExpression()), !dbg !10847
  ret void, !dbg !10848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_configure_serr(%struct.pci_dev* %dev) #0 !dbg !10849 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %control = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10850, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.declare(metadata i16* %control, metadata !10852, metadata !DIExpression()), !dbg !10853
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10854
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 13, !dbg !10856
  %1 = load i8, i8* %hdr_type, align 1, !dbg !10856
  %conv = zext i8 %1 to i32, !dbg !10854
  %cmp = icmp eq i32 %conv, 1, !dbg !10857
  br i1 %cmp, label %if.then, label %if.end7, !dbg !10858

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10859
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 62, i16* %control) #9, !dbg !10861
  %3 = load i16, i16* %control, align 2, !dbg !10862
  %conv2 = zext i16 %3 to i32, !dbg !10862
  %and = and i32 %conv2, 2, !dbg !10864
  %tobool = icmp ne i32 %and, 0, !dbg !10864
  br i1 %tobool, label %if.end, label %if.then3, !dbg !10865

if.then3:                                         ; preds = %if.then
  %4 = load i16, i16* %control, align 2, !dbg !10866
  %conv4 = zext i16 %4 to i32, !dbg !10866
  %or = or i32 %conv4, 2, !dbg !10866
  %conv5 = trunc i32 %or to i16, !dbg !10866
  store i16 %conv5, i16* %control, align 2, !dbg !10866
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10868
  %6 = load i16, i16* %control, align 2, !dbg !10869
  %call6 = call i32 @pci_write_config_word(%struct.pci_dev* %5, i32 62, i16 zeroext %6) #9, !dbg !10870
  br label %if.end, !dbg !10871

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end7, !dbg !10872

if.end7:                                          ; preds = %if.end, %entry
  ret void, !dbg !10873
}

; Function Attrs: noredzone
declare dso_local i32 @pci_acpi_program_hp_params(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @pcie_set_mps(%struct.pci_dev*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @pcie_get_mps(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_dev* @pcie_find_root_port(%struct.pci_dev* %dev) #0 !dbg !10874 {
entry:
  %retval = alloca %struct.pci_dev*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10875, metadata !DIExpression()), !dbg !10876
  br label %while.cond, !dbg !10877

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10878
  %tobool = icmp ne %struct.pci_dev* %0, null, !dbg !10877
  br i1 %tobool, label %while.body, label %while.end, !dbg !10877

while.body:                                       ; preds = %while.cond
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10879
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %1) #9, !dbg !10882
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !10883

land.lhs.true:                                    ; preds = %while.body
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10884
  %call1 = call i32 @pci_pcie_type(%struct.pci_dev* %2) #9, !dbg !10885
  %cmp = icmp eq i32 %call1, 4, !dbg !10886
  br i1 %cmp, label %if.then, label %if.end, !dbg !10887

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10888
  store %struct.pci_dev* %3, %struct.pci_dev** %retval, align 8, !dbg !10889
  br label %return, !dbg !10889

if.end:                                           ; preds = %land.lhs.true, %while.body
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10890
  %call2 = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %4) #9, !dbg !10891
  store %struct.pci_dev* %call2, %struct.pci_dev** %dev.addr, align 8, !dbg !10892
  br label %while.cond, !dbg !10877, !llvm.loop !10893

while.end:                                        ; preds = %while.cond
  store %struct.pci_dev* null, %struct.pci_dev** %retval, align 8, !dbg !10895
  br label %return, !dbg !10895

return:                                           ; preds = %while.end, %if.then
  %5 = load %struct.pci_dev*, %struct.pci_dev** %retval, align 8, !dbg !10896
  ret %struct.pci_dev* %5, !dbg !10896
}

; Function Attrs: noredzone
declare dso_local i32 @pci_find_ext_capability(%struct.pci_dev*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_release_capabilities(%struct.pci_dev* %dev) #0 !dbg !10897 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10898, metadata !DIExpression()), !dbg !10899
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10900
  call void @pci_aer_exit(%struct.pci_dev* %0) #9, !dbg !10901
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10902
  call void @pci_vpd_release(%struct.pci_dev* %1) #9, !dbg !10903
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10904
  call void @pci_iov_release(%struct.pci_dev* %2) #9, !dbg !10905
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10906
  call void @pci_free_cap_save_buffers(%struct.pci_dev* %3) #9, !dbg !10907
  ret void, !dbg !10908
}

; Function Attrs: noredzone
declare dso_local void @pci_release_of_node(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pcibios_release_device(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_bus_put(%struct.pci_bus*) #2

; Function Attrs: noredzone
declare dso_local void @bitmap_free(i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_aer_exit(%struct.pci_dev* %d) #0 !dbg !10909 {
entry:
  %d.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %d, %struct.pci_dev** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %d.addr, metadata !10910, metadata !DIExpression()), !dbg !10911
  ret void, !dbg !10912
}

; Function Attrs: noredzone
declare dso_local void @pci_vpd_release(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_iov_release(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_free_cap_save_buffers(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_ea_init(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_msi_setup_pci_dev(%struct.pci_dev* %dev) #0 !dbg !10913 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10914, metadata !DIExpression()), !dbg !10915
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10916
  %call = call i32 @pci_find_capability(%struct.pci_dev* %0, i32 5) #9, !dbg !10917
  %conv = trunc i32 %call to i8, !dbg !10917
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10918
  %msi_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 15, !dbg !10919
  store i8 %conv, i8* %msi_cap, align 1, !dbg !10920
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10921
  %msi_cap1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 15, !dbg !10923
  %3 = load i8, i8* %msi_cap1, align 1, !dbg !10923
  %tobool = icmp ne i8 %3, 0, !dbg !10921
  br i1 %tobool, label %if.then, label %if.end, !dbg !10924

if.then:                                          ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10925
  call void @pci_msi_set_enable(%struct.pci_dev* %4, i32 0) #9, !dbg !10926
  br label %if.end, !dbg !10926

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10927
  %call2 = call i32 @pci_find_capability(%struct.pci_dev* %5, i32 17) #9, !dbg !10928
  %conv3 = trunc i32 %call2 to i8, !dbg !10928
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10929
  %msix_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 16, !dbg !10930
  store i8 %conv3, i8* %msix_cap, align 4, !dbg !10931
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10932
  %msix_cap4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 16, !dbg !10934
  %8 = load i8, i8* %msix_cap4, align 4, !dbg !10934
  %tobool5 = icmp ne i8 %8, 0, !dbg !10932
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10935

if.then6:                                         ; preds = %if.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10936
  call void @pci_msix_clear_and_set_ctrl(%struct.pci_dev* %9, i16 zeroext -32768, i16 zeroext 0) #9, !dbg !10937
  br label %if.end7, !dbg !10937

if.end7:                                          ; preds = %if.then6, %if.end
  ret void, !dbg !10938
}

; Function Attrs: noredzone
declare dso_local void @pci_allocate_cap_save_buffers(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_pm_init(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_vpd_init(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_configure_ari(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_iov_init(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_ats_init(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_pri_init(%struct.pci_dev* %dev) #0 !dbg !10939 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10940, metadata !DIExpression()), !dbg !10941
  ret void, !dbg !10942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_pasid_init(%struct.pci_dev* %dev) #0 !dbg !10943 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10944, metadata !DIExpression()), !dbg !10945
  ret void, !dbg !10946
}

; Function Attrs: noredzone
declare dso_local void @pci_acs_init(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_ptm_init(%struct.pci_dev* %dev) #0 !dbg !10947 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10948, metadata !DIExpression()), !dbg !10949
  ret void, !dbg !10950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_aer_init(%struct.pci_dev* %d) #0 !dbg !10951 {
entry:
  %d.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %d, %struct.pci_dev** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %d.addr, metadata !10952, metadata !DIExpression()), !dbg !10953
  ret void, !dbg !10954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_dpc_init(%struct.pci_dev* %pdev) #0 !dbg !10955 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10956, metadata !DIExpression()), !dbg !10957
  ret void, !dbg !10958
}

; Function Attrs: noredzone
declare dso_local i32 @pci_probe_reset_function(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_msi_set_enable(%struct.pci_dev* %dev, i32 %enable) #0 !dbg !10959 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %enable.addr = alloca i32, align 4
  %control = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10962, metadata !DIExpression()), !dbg !10963
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !10964, metadata !DIExpression()), !dbg !10965
  call void @llvm.dbg.declare(metadata i16* %control, metadata !10966, metadata !DIExpression()), !dbg !10967
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10968
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10969
  %msi_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 15, !dbg !10970
  %2 = load i8, i8* %msi_cap, align 1, !dbg !10970
  %conv = zext i8 %2 to i32, !dbg !10969
  %add = add i32 %conv, 2, !dbg !10971
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 %add, i16* %control) #9, !dbg !10972
  %3 = load i16, i16* %control, align 2, !dbg !10973
  %conv1 = zext i16 %3 to i32, !dbg !10973
  %and = and i32 %conv1, -2, !dbg !10973
  %conv2 = trunc i32 %and to i16, !dbg !10973
  store i16 %conv2, i16* %control, align 2, !dbg !10973
  %4 = load i32, i32* %enable.addr, align 4, !dbg !10974
  %tobool = icmp ne i32 %4, 0, !dbg !10974
  br i1 %tobool, label %if.then, label %if.end, !dbg !10976

if.then:                                          ; preds = %entry
  %5 = load i16, i16* %control, align 2, !dbg !10977
  %conv3 = zext i16 %5 to i32, !dbg !10977
  %or = or i32 %conv3, 1, !dbg !10977
  %conv4 = trunc i32 %or to i16, !dbg !10977
  store i16 %conv4, i16* %control, align 2, !dbg !10977
  br label %if.end, !dbg !10978

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10979
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10980
  %msi_cap5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 15, !dbg !10981
  %8 = load i8, i8* %msi_cap5, align 1, !dbg !10981
  %conv6 = zext i8 %8 to i32, !dbg !10980
  %add7 = add i32 %conv6, 2, !dbg !10982
  %9 = load i16, i16* %control, align 2, !dbg !10983
  %call8 = call i32 @pci_write_config_word(%struct.pci_dev* %6, i32 %add7, i16 zeroext %9) #9, !dbg !10984
  ret void, !dbg !10985
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_msix_clear_and_set_ctrl(%struct.pci_dev* %dev, i16 zeroext %clear, i16 zeroext %set) #0 !dbg !10986 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %clear.addr = alloca i16, align 2
  %set.addr = alloca i16, align 2
  %ctrl = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10989, metadata !DIExpression()), !dbg !10990
  store i16 %clear, i16* %clear.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clear.addr, metadata !10991, metadata !DIExpression()), !dbg !10992
  store i16 %set, i16* %set.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %set.addr, metadata !10993, metadata !DIExpression()), !dbg !10994
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !10995, metadata !DIExpression()), !dbg !10996
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10997
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10998
  %msix_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 16, !dbg !10999
  %2 = load i8, i8* %msix_cap, align 4, !dbg !10999
  %conv = zext i8 %2 to i32, !dbg !10998
  %add = add i32 %conv, 2, !dbg !11000
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 %add, i16* %ctrl) #9, !dbg !11001
  %3 = load i16, i16* %clear.addr, align 2, !dbg !11002
  %conv1 = zext i16 %3 to i32, !dbg !11002
  %neg = xor i32 %conv1, -1, !dbg !11003
  %4 = load i16, i16* %ctrl, align 2, !dbg !11004
  %conv2 = zext i16 %4 to i32, !dbg !11004
  %and = and i32 %conv2, %neg, !dbg !11004
  %conv3 = trunc i32 %and to i16, !dbg !11004
  store i16 %conv3, i16* %ctrl, align 2, !dbg !11004
  %5 = load i16, i16* %set.addr, align 2, !dbg !11005
  %conv4 = zext i16 %5 to i32, !dbg !11005
  %6 = load i16, i16* %ctrl, align 2, !dbg !11006
  %conv5 = zext i16 %6 to i32, !dbg !11006
  %or = or i32 %conv5, %conv4, !dbg !11006
  %conv6 = trunc i32 %or to i16, !dbg !11006
  store i16 %conv6, i16* %ctrl, align 2, !dbg !11006
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11007
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11008
  %msix_cap7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 16, !dbg !11009
  %9 = load i8, i8* %msix_cap7, align 4, !dbg !11009
  %conv8 = zext i8 %9 to i32, !dbg !11008
  %add9 = add i32 %conv8, 2, !dbg !11010
  %10 = load i16, i16* %ctrl, align 2, !dbg !11011
  %call10 = call i32 @pci_write_config_word(%struct.pci_dev* %7, i32 %add9, i16 zeroext %10) #9, !dbg !11012
  ret void, !dbg !11013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.irq_domain* @pci_dev_msi_domain(%struct.pci_dev* %dev) #0 !dbg !11014 {
entry:
  %retval = alloca %struct.irq_domain*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %d = alloca %struct.irq_domain*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11017, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %d, metadata !11019, metadata !DIExpression()), !dbg !11020
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11021
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !11022
  %call = call %struct.irq_domain* @dev_get_msi_domain(%struct.device* %dev1) #9, !dbg !11023
  store %struct.irq_domain* %call, %struct.irq_domain** %d, align 8, !dbg !11024
  %1 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !11025
  %tobool = icmp ne %struct.irq_domain* %1, null, !dbg !11025
  br i1 %tobool, label %if.then, label %if.end, !dbg !11027

if.then:                                          ; preds = %entry
  %2 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !11028
  store %struct.irq_domain* %2, %struct.irq_domain** %retval, align 8, !dbg !11029
  br label %return, !dbg !11029

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11030
  %call2 = call %struct.irq_domain* @pci_msi_get_device_domain(%struct.pci_dev* %3) #9, !dbg !11031
  store %struct.irq_domain* %call2, %struct.irq_domain** %d, align 8, !dbg !11032
  %4 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !11033
  %tobool3 = icmp ne %struct.irq_domain* %4, null, !dbg !11033
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !11035

if.then4:                                         ; preds = %if.end
  %5 = load %struct.irq_domain*, %struct.irq_domain** %d, align 8, !dbg !11036
  store %struct.irq_domain* %5, %struct.irq_domain** %retval, align 8, !dbg !11037
  br label %return, !dbg !11037

if.end5:                                          ; preds = %if.end
  store %struct.irq_domain* null, %struct.irq_domain** %retval, align 8, !dbg !11038
  br label %return, !dbg !11038

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %6 = load %struct.irq_domain*, %struct.irq_domain** %retval, align 8, !dbg !11039
  ret %struct.irq_domain* %6, !dbg !11039
}

; Function Attrs: noredzone
declare dso_local %struct.irq_domain* @pci_msi_get_device_domain(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_set_of_node(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !11040 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !11047, metadata !DIExpression()), !dbg !11049
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !11051, metadata !DIExpression()), !dbg !11052
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !11053, metadata !DIExpression()), !dbg !11054
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11055, metadata !DIExpression()), !dbg !11057
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11059, metadata !DIExpression()), !dbg !11060
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11061, metadata !DIExpression()), !dbg !11069
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11071, metadata !DIExpression()), !dbg !11072
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11073, metadata !DIExpression()), !dbg !11074
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11075, metadata !DIExpression()), !dbg !11076
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11077
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11078
  %div = sdiv i64 %1, 64, !dbg !11078
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11079
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11077
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11080
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11081
  %conv.i = trunc i64 %4 to i32, !dbg !11081
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #13, !dbg !11082
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11083
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11083
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #13, !dbg !11083
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11084
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !11084
  br i1 %8, label %cond.true, label %cond.false, !dbg !11084

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !11084
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !11084
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !11085
  %and.i = and i64 %11, 63, !dbg !11086
  %shl.i = shl i64 1, %and.i, !dbg !11087
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !11088
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11089
  %shr.i = ashr i64 %13, 6, !dbg !11090
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !11088
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !11088
  %and1.i = and i64 %shl.i, %14, !dbg !11091
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !11092
  %conv = zext i1 %cmp.i to i32, !dbg !11084
  br label %cond.end, !dbg !11084

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !11084
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !11084
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !11093
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !11094
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #11, !dbg !11095, !srcloc !11096
  store i8 %19, i8* %oldbit.i, align 1, !dbg !11095
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !11097
  %tobool.i = trunc i8 %20 to i1, !dbg !11097
  %conv2 = zext i1 %tobool.i to i32, !dbg !11084
  br label %cond.end, !dbg !11084

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !11084
  %tobool = icmp ne i32 %cond, 0, !dbg !11084
  ret i1 %tobool, !dbg !11098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !11099 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11103, metadata !DIExpression()), !dbg !11104
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11105, metadata !DIExpression()), !dbg !11106
  ret i1 true, !dbg !11107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !11108 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11112, metadata !DIExpression()), !dbg !11113
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11114, metadata !DIExpression()), !dbg !11115
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11116, metadata !DIExpression()), !dbg !11117
  ret void, !dbg !11118
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_ari_enabled(%struct.pci_bus* %bus) #0 !dbg !11119 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !11120, metadata !DIExpression()), !dbg !11121
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !11122
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !11123
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !11123
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !11122
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11124

land.rhs:                                         ; preds = %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !11125
  %self1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 4, !dbg !11126
  %3 = load %struct.pci_dev*, %struct.pci_dev** %self1, align 8, !dbg !11126
  %ari_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 46, !dbg !11127
  %4 = bitcast [5 x i8]* %ari_enabled to i40*, !dbg !11127
  %bf.load = load i40, i40* %4, align 1, !dbg !11127
  %bf.lshr = lshr i40 %bf.load, 14, !dbg !11127
  %bf.clear = and i40 %bf.lshr, 1, !dbg !11127
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !11127
  %tobool2 = icmp ne i32 %bf.cast, 0, !dbg !11124
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !11128
  ret i1 %5, !dbg !11129
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcie_write_mps(%struct.pci_dev* %dev, i32 %mps) #0 !dbg !11130 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %mps.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  %__UNIQUE_ID___x255 = alloca i32, align 4
  %__UNIQUE_ID___y256 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11131, metadata !DIExpression()), !dbg !11132
  store i32 %mps, i32* %mps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mps.addr, metadata !11133, metadata !DIExpression()), !dbg !11134
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11135, metadata !DIExpression()), !dbg !11136
  %0 = load i32, i32* @pcie_bus_config, align 4, !dbg !11137
  %cmp = icmp eq i32 %0, 3, !dbg !11139
  br i1 %cmp, label %if.then, label %if.end9, !dbg !11140

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11141
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 17, !dbg !11143
  %bf.load = load i8, i8* %pcie_mpss, align 1, !dbg !11143
  %bf.clear = and i8 %bf.load, 7, !dbg !11143
  %conv = zext i8 %bf.clear to i32, !dbg !11141
  %shl = shl i32 128, %conv, !dbg !11144
  store i32 %shl, i32* %mps.addr, align 4, !dbg !11145
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11146
  %call = call i32 @pci_pcie_type(%struct.pci_dev* %2) #9, !dbg !11148
  %cmp1 = icmp ne i32 %call, 4, !dbg !11149
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !11150

land.lhs.true:                                    ; preds = %if.then
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11151
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 1, !dbg !11152
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !11152
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 4, !dbg !11153
  %5 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !11153
  %tobool = icmp ne %struct.pci_dev* %5, null, !dbg !11151
  br i1 %tobool, label %if.then3, label %if.end, !dbg !11154

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x255, metadata !11155, metadata !DIExpression()), !dbg !11157
  %6 = load i32, i32* %mps.addr, align 4, !dbg !11157
  store i32 %6, i32* %__UNIQUE_ID___x255, align 4, !dbg !11157
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y256, metadata !11158, metadata !DIExpression()), !dbg !11157
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11157
  %bus4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 1, !dbg !11157
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus4, align 8, !dbg !11157
  %self5 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 4, !dbg !11157
  %9 = load %struct.pci_dev*, %struct.pci_dev** %self5, align 8, !dbg !11157
  %call6 = call i32 @pcie_get_mps(%struct.pci_dev* %9) #9, !dbg !11157
  store i32 %call6, i32* %__UNIQUE_ID___y256, align 4, !dbg !11157
  %10 = load i32, i32* %__UNIQUE_ID___x255, align 4, !dbg !11157
  %11 = load i32, i32* %__UNIQUE_ID___y256, align 4, !dbg !11157
  %cmp7 = icmp slt i32 %10, %11, !dbg !11157
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !11157

cond.true:                                        ; preds = %if.then3
  %12 = load i32, i32* %__UNIQUE_ID___x255, align 4, !dbg !11157
  br label %cond.end, !dbg !11157

cond.false:                                       ; preds = %if.then3
  %13 = load i32, i32* %__UNIQUE_ID___y256, align 4, !dbg !11157
  br label %cond.end, !dbg !11157

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ %13, %cond.false ], !dbg !11157
  store i32 %cond, i32* %tmp, align 4, !dbg !11157
  %14 = load i32, i32* %tmp, align 4, !dbg !11157
  store i32 %14, i32* %mps.addr, align 4, !dbg !11159
  br label %if.end, !dbg !11160

if.end:                                           ; preds = %cond.end, %land.lhs.true, %if.then
  br label %if.end9, !dbg !11161

if.end9:                                          ; preds = %if.end, %entry
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11162
  %16 = load i32, i32* %mps.addr, align 4, !dbg !11163
  %call10 = call i32 @pcie_set_mps(%struct.pci_dev* %15, i32 %16) #9, !dbg !11164
  store i32 %call10, i32* %rc, align 4, !dbg !11165
  %17 = load i32, i32* %rc, align 4, !dbg !11166
  %tobool11 = icmp ne i32 %17, 0, !dbg !11166
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !11168

if.then12:                                        ; preds = %if.end9
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11169
  %dev13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !11169
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev13, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !11169
  br label %if.end14, !dbg !11169

if.end14:                                         ; preds = %if.then12, %if.end9
  ret void, !dbg !11170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcie_write_mrrs(%struct.pci_dev* %dev) #0 !dbg !11171 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rc = alloca i32, align 4
  %mrrs = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11172, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11174, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.declare(metadata i32* %mrrs, metadata !11176, metadata !DIExpression()), !dbg !11177
  %0 = load i32, i32* @pcie_bus_config, align 4, !dbg !11178
  %cmp = icmp ne i32 %0, 3, !dbg !11180
  br i1 %cmp, label %if.then, label %if.end, !dbg !11181

if.then:                                          ; preds = %entry
  br label %if.end11, !dbg !11182

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11183
  %call = call i32 @pcie_get_mps(%struct.pci_dev* %1) #9, !dbg !11184
  store i32 %call, i32* %mrrs, align 4, !dbg !11185
  br label %while.cond, !dbg !11186

while.cond:                                       ; preds = %if.end6, %if.end
  %2 = load i32, i32* %mrrs, align 4, !dbg !11187
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11188
  %call1 = call i32 @pcie_get_readrq(%struct.pci_dev* %3) #9, !dbg !11189
  %cmp2 = icmp ne i32 %2, %call1, !dbg !11190
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !11191

land.rhs:                                         ; preds = %while.cond
  %4 = load i32, i32* %mrrs, align 4, !dbg !11192
  %cmp3 = icmp sge i32 %4, 128, !dbg !11193
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ], !dbg !11194
  br i1 %5, label %while.body, label %while.end, !dbg !11186

while.body:                                       ; preds = %land.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11195
  %7 = load i32, i32* %mrrs, align 4, !dbg !11197
  %call4 = call i32 @pcie_set_readrq(%struct.pci_dev* %6, i32 %7) #9, !dbg !11198
  store i32 %call4, i32* %rc, align 4, !dbg !11199
  %8 = load i32, i32* %rc, align 4, !dbg !11200
  %tobool = icmp ne i32 %8, 0, !dbg !11200
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !11202

if.then5:                                         ; preds = %while.body
  br label %while.end, !dbg !11203

if.end6:                                          ; preds = %while.body
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11204
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !11204
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev7, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.77, i64 0, i64 0)) #10, !dbg !11204
  %10 = load i32, i32* %mrrs, align 4, !dbg !11205
  %div = sdiv i32 %10, 2, !dbg !11205
  store i32 %div, i32* %mrrs, align 4, !dbg !11205
  br label %while.cond, !dbg !11186, !llvm.loop !11206

while.end:                                        ; preds = %if.then5, %land.end
  %11 = load i32, i32* %mrrs, align 4, !dbg !11208
  %cmp8 = icmp slt i32 %11, 128, !dbg !11210
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !11211

if.then9:                                         ; preds = %while.end
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11212
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !11212
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev10, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.78, i64 0, i64 0)) #10, !dbg !11212
  br label %if.end11, !dbg !11212

if.end11:                                         ; preds = %if.then, %if.then9, %while.end
  ret void, !dbg !11213
}

; Function Attrs: noredzone
declare dso_local i32 @pcie_get_readrq(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @pcie_set_readrq(%struct.pci_dev*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @jailhouse_paravirt() #0 !dbg !11214 {
entry:
  ret i1 false, !dbg !11216
}

; Function Attrs: noredzone
declare dso_local i32 @pci_iov_bus_range(%struct.pci_bus*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_bridge(%struct.pci_dev* %dev) #0 !dbg !11217 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11218, metadata !DIExpression()), !dbg !11219
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11220
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 13, !dbg !11221
  %1 = load i8, i8* %hdr_type, align 1, !dbg !11221
  %conv = zext i8 %1 to i32, !dbg !11220
  %cmp = icmp eq i32 %conv, 1, !dbg !11222
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11223

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11224
  %hdr_type2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 13, !dbg !11225
  %3 = load i8, i8* %hdr_type2, align 1, !dbg !11225
  %conv3 = zext i8 %3 to i32, !dbg !11224
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !11226
  br label %lor.end, !dbg !11223

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  ret i1 %4, !dbg !11227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !11228 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11233, metadata !DIExpression()), !dbg !11234
  br label %do.body, !dbg !11235

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11237

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11235
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !11235
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11235
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !11237
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !11235
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11239
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !11240
  %conv = zext i1 %cmp to i32, !dbg !11240
  ret i32 %conv, !dbg !11241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !11242 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11245, metadata !DIExpression()), !dbg !11246
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11247, metadata !DIExpression()), !dbg !11248
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11249, metadata !DIExpression()), !dbg !11250
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !11251, metadata !DIExpression()), !dbg !11252
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11253
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !11254
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !11254
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !11252
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !11255, metadata !DIExpression()), !dbg !11256
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11257
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !11258
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !11258
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !11256
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11259
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !11260
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !11261
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !11262
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !11263
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11264
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !11265
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !11266
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11267
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !11268
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !11269
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !11270
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !11271
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11272
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !11273
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !11274
  ret void, !dbg !11275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_enable_async_suspend(%struct.device* %dev) #0 !dbg !11276 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11277, metadata !DIExpression()), !dbg !11278
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11279
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !11281
  %is_prepared = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !11282
  %bf.load = load i16, i16* %is_prepared, align 4, !dbg !11282
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !11282
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11282
  %bf.cast = trunc i16 %bf.clear to i1, !dbg !11282
  br i1 %bf.cast, label %if.end, label %if.then, !dbg !11283

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11284
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !11285
  %async_suspend = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 1, !dbg !11286
  %bf.load2 = load i16, i16* %async_suspend, align 4, !dbg !11287
  %bf.clear3 = and i16 %bf.load2, -3, !dbg !11287
  %bf.set = or i16 %bf.clear3, 2, !dbg !11287
  store i16 %bf.set, i16* %async_suspend, align 4, !dbg !11287
  br label %if.end, !dbg !11284

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11288
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !11289 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11290, metadata !DIExpression()), !dbg !11291
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11292, metadata !DIExpression()), !dbg !11293
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11294
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !11295
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11296
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11297
  call void @list_add_tail(%struct.list_head* %1, %struct.list_head* %2) #9, !dbg !11298
  ret void, !dbg !11299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @resource_type(%struct.resource* %res) #0 !dbg !11300 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !11303, metadata !DIExpression()), !dbg !11304
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !11305
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 3, !dbg !11306
  %1 = load i64, i64* %flags, align 8, !dbg !11306
  %and = and i64 %1, 7936, !dbg !11307
  ret i64 %and, !dbg !11308
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @device_del(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !11309 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11310, metadata !DIExpression()), !dbg !11311
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11312
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !11314
  br i1 %call, label %if.end, label %if.then, !dbg !11315

if.then:                                          ; preds = %entry
  br label %return, !dbg !11316

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11317
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11318
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !11318
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11319
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11320
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11320
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !11321
  br label %return, !dbg !11322

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !11323 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11326, metadata !DIExpression()), !dbg !11327
  ret i1 true, !dbg !11328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !11329 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11330, metadata !DIExpression()), !dbg !11331
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11332, metadata !DIExpression()), !dbg !11333
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11334
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11335
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11336
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !11337
  br label %do.body, !dbg !11338

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !11339

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !11341

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !11339

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11343
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11343
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11343
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !11343
  br label %do.end5, !dbg !11343

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !11339

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !11345
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone }
attributes #10 = { cold noredzone }
attributes #11 = { nounwind }
attributes #12 = { noredzone nounwind readnone }
attributes #13 = { noredzone nounwind }
attributes #14 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4452, !4453, !4454, !4455}
!llvm.ident = !{!4456}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pci_root_buses", scope: !2, file: !3, line: 35, type: !238, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !221, globals: !4418, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/pci/probe.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !107, !114, !126, !153, !159, !164, !174, !179, !186, !195, !202, !208}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !94, line: 76, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!96 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_bar_type", file: !108, line: 262, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "drivers/pci/pci.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112, !113}
!110 = !DIEnumerator(name: "pci_bar_unknown", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "pci_bar_io", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "pci_bar_mem32", value: 2, isUnsigned: true)
!113 = !DIEnumerator(name: "pci_bar_mem64", value: 3, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !115, line: 89, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124, !125}
!117 = !DIEnumerator(name: "PCI_STD_RESOURCES", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "PCI_STD_RESOURCE_END", value: 5, isUnsigned: true)
!119 = !DIEnumerator(name: "PCI_ROM_RESOURCE", value: 6, isUnsigned: true)
!120 = !DIEnumerator(name: "PCI_IOV_RESOURCES", value: 7, isUnsigned: true)
!121 = !DIEnumerator(name: "PCI_IOV_RESOURCE_END", value: 12, isUnsigned: true)
!122 = !DIEnumerator(name: "PCI_BRIDGE_RESOURCES", value: 13, isUnsigned: true)
!123 = !DIEnumerator(name: "PCI_BRIDGE_RESOURCE_END", value: 16, isUnsigned: true)
!124 = !DIEnumerator(name: "PCI_NUM_RESOURCES", value: 17, isUnsigned: true)
!125 = !DIEnumerator(name: "DEVICE_COUNT_RESOURCE", value: 17, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_bus_speed", file: !115, line: 259, baseType: !7, size: 32, elements: !127)
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152}
!128 = !DIEnumerator(name: "PCI_SPEED_33MHz", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "PCI_SPEED_66MHz", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "PCI_SPEED_66MHz_PCIX", value: 2, isUnsigned: true)
!131 = !DIEnumerator(name: "PCI_SPEED_100MHz_PCIX", value: 3, isUnsigned: true)
!132 = !DIEnumerator(name: "PCI_SPEED_133MHz_PCIX", value: 4, isUnsigned: true)
!133 = !DIEnumerator(name: "PCI_SPEED_66MHz_PCIX_ECC", value: 5, isUnsigned: true)
!134 = !DIEnumerator(name: "PCI_SPEED_100MHz_PCIX_ECC", value: 6, isUnsigned: true)
!135 = !DIEnumerator(name: "PCI_SPEED_133MHz_PCIX_ECC", value: 7, isUnsigned: true)
!136 = !DIEnumerator(name: "PCI_SPEED_66MHz_PCIX_266", value: 9, isUnsigned: true)
!137 = !DIEnumerator(name: "PCI_SPEED_100MHz_PCIX_266", value: 10, isUnsigned: true)
!138 = !DIEnumerator(name: "PCI_SPEED_133MHz_PCIX_266", value: 11, isUnsigned: true)
!139 = !DIEnumerator(name: "AGP_UNKNOWN", value: 12, isUnsigned: true)
!140 = !DIEnumerator(name: "AGP_1X", value: 13, isUnsigned: true)
!141 = !DIEnumerator(name: "AGP_2X", value: 14, isUnsigned: true)
!142 = !DIEnumerator(name: "AGP_4X", value: 15, isUnsigned: true)
!143 = !DIEnumerator(name: "AGP_8X", value: 16, isUnsigned: true)
!144 = !DIEnumerator(name: "PCI_SPEED_66MHz_PCIX_533", value: 17, isUnsigned: true)
!145 = !DIEnumerator(name: "PCI_SPEED_100MHz_PCIX_533", value: 18, isUnsigned: true)
!146 = !DIEnumerator(name: "PCI_SPEED_133MHz_PCIX_533", value: 19, isUnsigned: true)
!147 = !DIEnumerator(name: "PCIE_SPEED_2_5GT", value: 20, isUnsigned: true)
!148 = !DIEnumerator(name: "PCIE_SPEED_5_0GT", value: 21, isUnsigned: true)
!149 = !DIEnumerator(name: "PCIE_SPEED_8_0GT", value: 22, isUnsigned: true)
!150 = !DIEnumerator(name: "PCIE_SPEED_16_0GT", value: 23, isUnsigned: true)
!151 = !DIEnumerator(name: "PCIE_SPEED_32_0GT", value: 24, isUnsigned: true)
!152 = !DIEnumerator(name: "PCI_SPEED_UNKNOWN", value: 255, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_bus_flags", file: !115, line: 238, baseType: !7, size: 32, elements: !154)
!154 = !{!155, !156, !157, !158}
!155 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_MSI", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_MMRBC", value: 2, isUnsigned: true)
!157 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_AERSID", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_EXTCFG", value: 8, isUnsigned: true)
!159 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !115, line: 182, baseType: !7, size: 32, elements: !160)
!160 = !{!161, !162, !163}
!161 = !DIEnumerator(name: "pci_channel_io_normal", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "pci_channel_io_frozen", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "pci_channel_io_perm_failure", value: 3, isUnsigned: true)
!164 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_fixup_pass", file: !115, line: 1903, baseType: !7, size: 32, elements: !165)
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173}
!166 = !DIEnumerator(name: "pci_fixup_early", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "pci_fixup_header", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "pci_fixup_final", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "pci_fixup_enable", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "pci_fixup_resume", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "pci_fixup_suspend", value: 5, isUnsigned: true)
!172 = !DIEnumerator(name: "pci_fixup_resume_early", value: 6, isUnsigned: true)
!173 = !DIEnumerator(name: "pci_fixup_suspend_late", value: 7, isUnsigned: true)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !175, line: 10, baseType: !7, size: 32, elements: !176)
!175 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!176 = !{!177, !178}
!177 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!178 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pcie_bus_config_types", file: !115, line: 973, baseType: !7, size: 32, elements: !180)
!180 = !{!181, !182, !183, !184, !185}
!181 = !DIEnumerator(name: "PCIE_BUS_TUNE_OFF", value: 0, isUnsigned: true)
!182 = !DIEnumerator(name: "PCIE_BUS_DEFAULT", value: 1, isUnsigned: true)
!183 = !DIEnumerator(name: "PCIE_BUS_SAFE", value: 2, isUnsigned: true)
!184 = !DIEnumerator(name: "PCIE_BUS_PERFORMANCE", value: 3, isUnsigned: true)
!185 = !DIEnumerator(name: "PCIE_BUS_PEER2PEER", value: 4, isUnsigned: true)
!186 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !115, line: 946, baseType: !7, size: 32, elements: !187)
!187 = !{!188, !189, !190, !191, !192, !193, !194}
!188 = !DIEnumerator(name: "PCI_REASSIGN_ALL_RSRC", value: 1, isUnsigned: true)
!189 = !DIEnumerator(name: "PCI_REASSIGN_ALL_BUS", value: 2, isUnsigned: true)
!190 = !DIEnumerator(name: "PCI_PROBE_ONLY", value: 4, isUnsigned: true)
!191 = !DIEnumerator(name: "PCI_CAN_SKIP_ISA_ALIGN", value: 8, isUnsigned: true)
!192 = !DIEnumerator(name: "PCI_ENABLE_PROC_DOMAINS", value: 16, isUnsigned: true)
!193 = !DIEnumerator(name: "PCI_COMPAT_DOMAIN_0", value: 32, isUnsigned: true)
!194 = !DIEnumerator(name: "PCI_SCAN_ALL_PCIE_DEVS", value: 64, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !196, line: 305, baseType: !7, size: 32, elements: !197)
!196 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!197 = !{!198, !199, !200, !201}
!198 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!202 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !203, line: 567, baseType: !7, size: 32, elements: !204)
!203 = !DIFile(filename: "./include/linux/printk.h", directory: "/home/lizy2001/genbc/linux")
!204 = !{!205, !206, !207}
!205 = !DIEnumerator(name: "DUMP_PREFIX_NONE", value: 0, isUnsigned: true)
!206 = !DIEnumerator(name: "DUMP_PREFIX_ADDRESS", value: 1, isUnsigned: true)
!207 = !DIEnumerator(name: "DUMP_PREFIX_OFFSET", value: 2, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_dev_flags", file: !115, line: 207, baseType: !7, size: 32, elements: !209)
!209 = !{!210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!210 = !DIEnumerator(name: "PCI_DEV_FLAGS_MSI_INTX_DISABLE_BUG", value: 1, isUnsigned: true)
!211 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_D3", value: 2, isUnsigned: true)
!212 = !DIEnumerator(name: "PCI_DEV_FLAGS_ASSIGNED", value: 4, isUnsigned: true)
!213 = !DIEnumerator(name: "PCI_DEV_FLAGS_ACS_ENABLED_QUIRK", value: 8, isUnsigned: true)
!214 = !DIEnumerator(name: "PCI_DEV_FLAG_PCIE_BRIDGE_ALIAS", value: 32, isUnsigned: true)
!215 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_BUS_RESET", value: 64, isUnsigned: true)
!216 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_PM_RESET", value: 128, isUnsigned: true)
!217 = !DIEnumerator(name: "PCI_DEV_FLAGS_VPD_REF_F0", value: 256, isUnsigned: true)
!218 = !DIEnumerator(name: "PCI_DEV_FLAGS_BRIDGE_XLATE_ROOT", value: 512, isUnsigned: true)
!219 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_FLR_RESET", value: 1024, isUnsigned: true)
!220 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_RELAXED_ORDERING", value: 2048, isUnsigned: true)
!221 = !{!222, !223, !227, !229, !230, !232, !233, !234, !4355, !418, !4363, !4364, !4408, !7, !247, !3473, !294, !4410, !4412}
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !224, line: 21, baseType: !225)
!224 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !226, line: 27, baseType: !7)
!226 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !224, line: 23, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !226, line: 31, baseType: !229)
!229 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !231, line: 148, baseType: !7)
!231 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!232 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !115, line: 155, baseType: !232)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !115, line: 605, size: 8064, elements: !236)
!236 = !{!237, !243, !244, !245, !246, !4226, !4227, !4229, !4230, !4231, !4255, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4347, !4348, !4350, !4351, !4352, !4353, !4354}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !235, file: !115, line: 606, baseType: !238, size: 128)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !231, line: 178, size: 128, elements: !239)
!239 = !{!240, !242}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !238, file: !231, line: 179, baseType: !241, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !238, file: !231, line: 179, baseType: !241, size: 64, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !235, file: !115, line: 607, baseType: !234, size: 64, offset: 128)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !235, file: !115, line: 608, baseType: !238, size: 128, offset: 192)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !235, file: !115, line: 609, baseType: !238, size: 128, offset: 320)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !235, file: !115, line: 610, baseType: !247, size: 64, offset: 448)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !115, line: 309, size: 19264, elements: !249)
!249 = !{!250, !251, !252, !253, !254, !258, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3474, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4110, !4113, !4114, !4115, !4116, !4117, !4118, !4119, !4120, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4176, !4177, !4178, !4179, !4180, !4181, !4183, !4184, !4185, !4188, !4219, !4220, !4221, !4222, !4223, !4224, !4225}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !248, file: !115, line: 310, baseType: !238, size: 128)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !248, file: !115, line: 311, baseType: !234, size: 64, offset: 128)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !248, file: !115, line: 312, baseType: !234, size: 64, offset: 192)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !248, file: !115, line: 314, baseType: !222, size: 64, offset: 256)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !248, file: !115, line: 315, baseType: !255, size: 64, offset: 320)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !257, line: 123, flags: DIFlagFwdDecl)
!257 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!258 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !248, file: !115, line: 316, baseType: !259, size: 64, offset: 384)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !115, line: 69, size: 832, elements: !261)
!261 = !{!262, !263, !264, !312, !313}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !260, file: !115, line: 70, baseType: !234, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !260, file: !115, line: 71, baseType: !238, size: 128, offset: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !260, file: !115, line: 72, baseType: !265, size: 64, offset: 192)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !267, line: 56, size: 384, elements: !268)
!267 = !DIFile(filename: "./include/linux/pci_hotplug.h", directory: "/home/lizy2001/genbc/linux")
!268 = !{!269, !302, !303, !304, !308}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !266, file: !267, line: 57, baseType: !270, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot_ops", file: !267, line: 38, size: 576, elements: !273)
!273 = !{!274, !278, !279, !286, !290, !295, !296, !297, !298}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "enable_slot", scope: !272, file: !267, line: 39, baseType: !275, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DISubroutineType(types: !277)
!277 = !{!232, !265}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "disable_slot", scope: !272, file: !267, line: 40, baseType: !275, size: 64, offset: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "set_attention_status", scope: !272, file: !267, line: 41, baseType: !280, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DISubroutineType(types: !282)
!282 = !{!232, !265, !283}
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !224, line: 17, baseType: !284)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !226, line: 21, baseType: !285)
!285 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_test", scope: !272, file: !267, line: 42, baseType: !287, size: 64, offset: 192)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DISubroutineType(types: !289)
!289 = !{!232, !265, !223}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "get_power_status", scope: !272, file: !267, line: 43, baseType: !291, size: 64, offset: 256)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = !DISubroutineType(types: !293)
!293 = !{!232, !265, !294}
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "get_attention_status", scope: !272, file: !267, line: 44, baseType: !291, size: 64, offset: 320)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "get_latch_status", scope: !272, file: !267, line: 45, baseType: !291, size: 64, offset: 384)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "get_adapter_status", scope: !272, file: !267, line: 46, baseType: !291, size: 64, offset: 448)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "reset_slot", scope: !272, file: !267, line: 47, baseType: !299, size: 64, offset: 512)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{!232, !265, !232}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "slot_list", scope: !266, file: !267, line: 60, baseType: !238, size: 128, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "pci_slot", scope: !266, file: !267, line: 61, baseType: !259, size: 64, offset: 192)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !266, file: !267, line: 62, baseType: !305, size: 64, offset: 256)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !307, line: 76, flags: DIFlagFwdDecl)
!307 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!308 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !266, file: !267, line: 63, baseType: !309, size: 64, offset: 320)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !311)
!311 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !260, file: !115, line: 73, baseType: !285, size: 8, offset: 256)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !260, file: !115, line: 74, baseType: !314, size: 512, offset: 320)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !315, line: 64, size: 512, elements: !316)
!315 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!316 = !{!317, !318, !319, !321, !381, !3308, !3447, !3452, !3453, !3454, !3455, !3456}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !314, file: !315, line: 65, baseType: !309, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !314, file: !315, line: 66, baseType: !238, size: 128, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !314, file: !315, line: 67, baseType: !320, size: 64, offset: 192)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !314, file: !315, line: 68, baseType: !322, size: 64, offset: 256)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !315, line: 192, size: 704, elements: !324)
!324 = !{!325, !326, !342, !343}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !323, file: !315, line: 193, baseType: !238, size: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !323, file: !315, line: 194, baseType: !327, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !328, line: 83, baseType: !329)
!328 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !328, line: 71, elements: !330)
!330 = !{!331}
!331 = !DIDerivedType(tag: DW_TAG_member, scope: !329, file: !328, line: 72, baseType: !332)
!332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !329, file: !328, line: 72, elements: !333)
!333 = !{!334}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !332, file: !328, line: 73, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !328, line: 20, elements: !336)
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !335, file: !328, line: 21, baseType: !338)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !339, line: 25, baseType: !340)
!339 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 25, elements: !341)
!341 = !{}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !323, file: !315, line: 195, baseType: !314, size: 512, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !323, file: !315, line: 196, baseType: !344, size: 64, offset: 640)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !315, line: 156, size: 192, elements: !347)
!347 = !{!348, !353, !358}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !346, file: !315, line: 157, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DISubroutineType(types: !352)
!352 = !{!232, !322, !320}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !346, file: !315, line: 158, baseType: !354, size: 64, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !355)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = !DISubroutineType(types: !357)
!357 = !{!309, !322, !320}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !346, file: !315, line: 159, baseType: !359, size: 64, offset: 128)
!359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !360)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DISubroutineType(types: !362)
!362 = !{!232, !322, !320, !363}
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !315, line: 148, size: 20736, elements: !365)
!365 = !{!366, !371, !375, !376, !380}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !364, file: !315, line: 149, baseType: !367, size: 192)
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !368, size: 192, elements: !369)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!369 = !{!370}
!370 = !DISubrange(count: 3)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !364, file: !315, line: 150, baseType: !372, size: 4096, offset: 192)
!372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !368, size: 4096, elements: !373)
!373 = !{!374}
!374 = !DISubrange(count: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !364, file: !315, line: 151, baseType: !232, size: 32, offset: 4288)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !364, file: !315, line: 152, baseType: !377, size: 16384, offset: 4320)
!377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 16384, elements: !378)
!378 = !{!379}
!379 = !DISubrange(count: 2048)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !364, file: !315, line: 153, baseType: !232, size: 32, offset: 20704)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !314, file: !315, line: 69, baseType: !382, size: 64, offset: 320)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !315, line: 138, size: 448, elements: !384)
!384 = !{!385, !389, !419, !421, !3270, !3298, !3302}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !383, file: !315, line: 139, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DISubroutineType(types: !388)
!388 = !{null, !320}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !383, file: !315, line: 140, baseType: !390, size: 64, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !392)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !393, line: 230, size: 128, elements: !394)
!393 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!394 = !{!395, !411}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !392, file: !393, line: 231, baseType: !396, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DISubroutineType(types: !398)
!398 = !{!399, !320, !404, !368}
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !231, line: 60, baseType: !400)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !401, line: 73, baseType: !402)
!401 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !401, line: 15, baseType: !403)
!403 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !393, line: 30, size: 128, elements: !406)
!406 = !{!407, !408}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !405, file: !393, line: 31, baseType: !309, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !405, file: !393, line: 32, baseType: !409, size: 16, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !231, line: 19, baseType: !410)
!410 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !392, file: !393, line: 232, baseType: !412, size: 64, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DISubroutineType(types: !414)
!414 = !{!399, !320, !404, !309, !415}
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !231, line: 55, baseType: !416)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !401, line: 72, baseType: !417)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !401, line: 16, baseType: !418)
!418 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !383, file: !315, line: 141, baseType: !420, size: 64, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !383, file: !315, line: 142, baseType: !422, size: 64, offset: 192)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !425)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !393, line: 84, size: 320, elements: !426)
!426 = !{!427, !428, !432, !3267, !3268}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !425, file: !393, line: 85, baseType: !309, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !425, file: !393, line: 86, baseType: !429, size: 64, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DISubroutineType(types: !431)
!431 = !{!409, !320, !404, !232}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !425, file: !393, line: 88, baseType: !433, size: 64, offset: 128)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{!409, !320, !436, !232}
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !393, line: 168, size: 448, elements: !438)
!438 = !{!439, !440, !441, !442, !3262, !3263}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !437, file: !393, line: 169, baseType: !405, size: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !437, file: !393, line: 170, baseType: !415, size: 64, offset: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !437, file: !393, line: 171, baseType: !222, size: 64, offset: 192)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !437, file: !393, line: 172, baseType: !443, size: 64, offset: 256)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DISubroutineType(types: !445)
!445 = !{!399, !446, !320, !436, !368, !617, !415}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !448)
!448 = !{!449, !467, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3245, !3246, !3255, !3256, !3257, !3258, !3259, !3260, !3261}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !447, file: !44, line: 920, baseType: !450, size: 128)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !447, file: !44, line: 917, size: 128, elements: !451)
!451 = !{!452, !458}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !450, file: !44, line: 918, baseType: !453, size: 64)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !454, line: 58, size: 64, elements: !455)
!454 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!455 = !{!456}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !453, file: !454, line: 59, baseType: !457, size: 64)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !450, file: !44, line: 919, baseType: !459, size: 128, align: 64)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !231, line: 216, size: 128, align: 64, elements: !460)
!460 = !{!461, !463}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !459, file: !231, line: 217, baseType: !462, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !459, file: !231, line: 218, baseType: !464, size: 64, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DISubroutineType(types: !466)
!466 = !{null, !462}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !447, file: !44, line: 921, baseType: !468, size: 128, offset: 128)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !469, line: 8, size: 128, elements: !470)
!469 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!470 = !{!471, !475}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !468, file: !469, line: 9, baseType: !472, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !474, line: 18, flags: DIFlagFwdDecl)
!474 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!475 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !468, file: !469, line: 10, baseType: !476, size: 64, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !474, line: 89, size: 1536, elements: !478)
!478 = !{!479, !480, !490, !498, !499, !514, !3195, !3197, !3209, !3210, !3211, !3212, !3213, !3219, !3220, !3221}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !477, file: !474, line: 91, baseType: !7, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !477, file: !474, line: 92, baseType: !481, size: 32, offset: 32)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !482, line: 277, baseType: !483)
!482 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !482, line: 277, size: 32, elements: !484)
!484 = !{!485}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !483, file: !482, line: 277, baseType: !486, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !482, line: 70, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !482, line: 65, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !487, file: !482, line: 66, baseType: !7, size: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !477, file: !474, line: 93, baseType: !491, size: 128, offset: 64)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !492, line: 38, size: 128, elements: !493)
!492 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!493 = !{!494, !496}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !491, file: !492, line: 39, baseType: !495, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !491, file: !492, line: 39, baseType: !497, size: 64, offset: 64)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !477, file: !474, line: 94, baseType: !476, size: 64, offset: 192)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !477, file: !474, line: 95, baseType: !500, size: 128, offset: 256)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !474, line: 47, size: 128, elements: !501)
!501 = !{!502, !511}
!502 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !474, line: 48, baseType: !503, size: 64)
!503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !474, line: 48, size: 64, elements: !504)
!504 = !{!505, !510}
!505 = !DIDerivedType(tag: DW_TAG_member, scope: !503, file: !474, line: 49, baseType: !506, size: 64)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !503, file: !474, line: 49, size: 64, elements: !507)
!507 = !{!508, !509}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !506, file: !474, line: 50, baseType: !223, size: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !506, file: !474, line: 50, baseType: !223, size: 32, offset: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !503, file: !474, line: 52, baseType: !227, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !500, file: !474, line: 54, baseType: !512, size: 64, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !285)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !477, file: !474, line: 96, baseType: !515, size: 64, offset: 384)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !517)
!517 = !{!518, !519, !520, !528, !535, !536, !684, !2906, !2907, !2908, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !3171, !3179, !3180, !3181, !3191, !3192, !3193, !3194}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !516, file: !44, line: 611, baseType: !409, size: 16)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !516, file: !44, line: 612, baseType: !410, size: 16, offset: 16)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !516, file: !44, line: 613, baseType: !521, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !522, line: 23, baseType: !523)
!522 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !522, line: 21, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !523, file: !522, line: 22, baseType: !526, size: 32)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !231, line: 32, baseType: !527)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !401, line: 49, baseType: !7)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !516, file: !44, line: 614, baseType: !529, size: 32, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !522, line: 28, baseType: !530)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !522, line: 26, size: 32, elements: !531)
!531 = !{!532}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !530, file: !522, line: 27, baseType: !533, size: 32)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !231, line: 33, baseType: !534)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !401, line: 50, baseType: !7)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !516, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !516, file: !44, line: 622, baseType: !537, size: 64, offset: 128)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !540)
!540 = !{!541, !545, !558, !562, !568, !572, !578, !582, !586, !590, !594, !595, !601, !605, !631, !660, !664, !670, !675, !679, !680}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !539, file: !44, line: 1865, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DISubroutineType(types: !544)
!544 = !{!476, !515, !476, !7}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !539, file: !44, line: 1866, baseType: !546, size: 64, offset: 64)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = !DISubroutineType(types: !548)
!548 = !{!309, !476, !515, !549}
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !551, line: 10, size: 128, elements: !552)
!551 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!552 = !{!553, !557}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !550, file: !551, line: 11, baseType: !554, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DISubroutineType(types: !556)
!556 = !{null, !222}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !550, file: !551, line: 12, baseType: !222, size: 64, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !539, file: !44, line: 1867, baseType: !559, size: 64, offset: 128)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DISubroutineType(types: !561)
!561 = !{!232, !515, !232}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !539, file: !44, line: 1868, baseType: !563, size: 64, offset: 192)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DISubroutineType(types: !565)
!565 = !{!566, !515, !232}
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !539, file: !44, line: 1870, baseType: !569, size: 64, offset: 256)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DISubroutineType(types: !571)
!571 = !{!232, !476, !368, !232}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !539, file: !44, line: 1872, baseType: !573, size: 64, offset: 320)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = !DISubroutineType(types: !575)
!575 = !{!232, !515, !476, !409, !576}
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !231, line: 30, baseType: !577)
!577 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !539, file: !44, line: 1873, baseType: !579, size: 64, offset: 384)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = !DISubroutineType(types: !581)
!581 = !{!232, !476, !515, !476}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !539, file: !44, line: 1874, baseType: !583, size: 64, offset: 448)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{!232, !515, !476}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !539, file: !44, line: 1875, baseType: !587, size: 64, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DISubroutineType(types: !589)
!589 = !{!232, !515, !476, !309}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !539, file: !44, line: 1876, baseType: !591, size: 64, offset: 576)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DISubroutineType(types: !593)
!593 = !{!232, !515, !476, !409}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !539, file: !44, line: 1877, baseType: !583, size: 64, offset: 640)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !539, file: !44, line: 1878, baseType: !596, size: 64, offset: 704)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DISubroutineType(types: !598)
!598 = !{!232, !515, !476, !409, !599}
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !231, line: 16, baseType: !600)
!600 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !231, line: 13, baseType: !223)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !539, file: !44, line: 1879, baseType: !602, size: 64, offset: 768)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DISubroutineType(types: !604)
!604 = !{!232, !515, !476, !515, !476, !7}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !539, file: !44, line: 1881, baseType: !606, size: 64, offset: 832)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DISubroutineType(types: !608)
!608 = !{!232, !476, !609}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !611)
!611 = !{!612, !613, !614, !615, !616, !620, !628, !629, !630}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !610, file: !44, line: 220, baseType: !7, size: 32)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !610, file: !44, line: 221, baseType: !409, size: 16, offset: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !610, file: !44, line: 222, baseType: !521, size: 32, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !610, file: !44, line: 223, baseType: !529, size: 32, offset: 96)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !610, file: !44, line: 224, baseType: !617, size: 64, offset: 128)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !231, line: 46, baseType: !618)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !401, line: 88, baseType: !619)
!619 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !610, file: !44, line: 225, baseType: !621, size: 128, offset: 192)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !622, line: 13, size: 128, elements: !623)
!622 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!623 = !{!624, !627}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !621, file: !622, line: 14, baseType: !625, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !622, line: 8, baseType: !626)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !226, line: 30, baseType: !619)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !621, file: !622, line: 15, baseType: !403, size: 64, offset: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !610, file: !44, line: 226, baseType: !621, size: 128, offset: 320)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !610, file: !44, line: 227, baseType: !621, size: 128, offset: 448)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !610, file: !44, line: 234, baseType: !446, size: 64, offset: 576)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !539, file: !44, line: 1882, baseType: !632, size: 64, offset: 896)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DISubroutineType(types: !634)
!634 = !{!232, !635, !637, !223, !7}
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !639, line: 22, size: 1152, elements: !640)
!639 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!640 = !{!641, !642, !643, !644, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !638, file: !639, line: 23, baseType: !223, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !638, file: !639, line: 24, baseType: !409, size: 16, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !638, file: !639, line: 25, baseType: !7, size: 32, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !638, file: !639, line: 26, baseType: !645, size: 32, offset: 96)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !231, line: 104, baseType: !223)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !638, file: !639, line: 27, baseType: !227, size: 64, offset: 128)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !638, file: !639, line: 28, baseType: !227, size: 64, offset: 192)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !638, file: !639, line: 37, baseType: !227, size: 64, offset: 256)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !638, file: !639, line: 38, baseType: !599, size: 32, offset: 320)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !638, file: !639, line: 39, baseType: !599, size: 32, offset: 352)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !638, file: !639, line: 40, baseType: !521, size: 32, offset: 384)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !638, file: !639, line: 41, baseType: !529, size: 32, offset: 416)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !638, file: !639, line: 42, baseType: !617, size: 64, offset: 448)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !638, file: !639, line: 43, baseType: !621, size: 128, offset: 512)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !638, file: !639, line: 44, baseType: !621, size: 128, offset: 640)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !638, file: !639, line: 45, baseType: !621, size: 128, offset: 768)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !638, file: !639, line: 46, baseType: !621, size: 128, offset: 896)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !638, file: !639, line: 47, baseType: !227, size: 64, offset: 1024)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !638, file: !639, line: 48, baseType: !227, size: 64, offset: 1088)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !539, file: !44, line: 1883, baseType: !661, size: 64, offset: 960)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DISubroutineType(types: !663)
!663 = !{!399, !476, !368, !415}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !539, file: !44, line: 1884, baseType: !665, size: 64, offset: 1024)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{!232, !515, !668, !227, !227}
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !539, file: !44, line: 1886, baseType: !671, size: 64, offset: 1088)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DISubroutineType(types: !673)
!673 = !{!232, !515, !674, !232}
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !539, file: !44, line: 1887, baseType: !676, size: 64, offset: 1152)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DISubroutineType(types: !678)
!678 = !{!232, !515, !476, !446, !7, !409}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !539, file: !44, line: 1890, baseType: !591, size: 64, offset: 1216)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !539, file: !44, line: 1891, baseType: !681, size: 64, offset: 1280)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!232, !515, !566, !232}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !516, file: !44, line: 623, baseType: !685, size: 64, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !687)
!687 = !{!688, !689, !690, !691, !692, !693, !740, !2513, !2595, !2678, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2694, !2698, !2699, !2702, !2703, !2706, !2707, !2708, !2749, !2776, !2777, !2778, !2779, !2780, !2781, !2784, !2786, !2793, !2794, !2796, !2797, !2798, !2857, !2858, !2873, !2874, !2875, !2876, !2877, !2880, !2881, !2882, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !686, file: !44, line: 1417, baseType: !238, size: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !686, file: !44, line: 1418, baseType: !599, size: 32, offset: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !686, file: !44, line: 1419, baseType: !285, size: 8, offset: 160)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !686, file: !44, line: 1420, baseType: !418, size: 64, offset: 192)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !686, file: !44, line: 1421, baseType: !617, size: 64, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !686, file: !44, line: 1422, baseType: !694, size: 64, offset: 320)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !696)
!696 = !{!697, !698, !699, !706, !710, !714, !718, !719, !720, !730, !733, !734, !735, !737, !738, !739}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !695, file: !44, line: 2229, baseType: !309, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !695, file: !44, line: 2230, baseType: !232, size: 32, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !695, file: !44, line: 2238, baseType: !700, size: 64, offset: 128)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{!232, !703}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !705, line: 28, flags: DIFlagFwdDecl)
!705 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!706 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !695, file: !44, line: 2239, baseType: !707, size: 64, offset: 192)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !709)
!709 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !695, file: !44, line: 2240, baseType: !711, size: 64, offset: 256)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DISubroutineType(types: !713)
!713 = !{!476, !694, !232, !309, !222}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !695, file: !44, line: 2242, baseType: !715, size: 64, offset: 320)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{null, !685}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !695, file: !44, line: 2243, baseType: !305, size: 64, offset: 384)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !695, file: !44, line: 2244, baseType: !694, size: 64, offset: 448)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !695, file: !44, line: 2245, baseType: !721, size: 64, offset: 512)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !231, line: 182, size: 64, elements: !722)
!722 = !{!723}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !721, file: !231, line: 183, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !231, line: 186, size: 128, elements: !726)
!726 = !{!727, !728}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !725, file: !231, line: 187, baseType: !724, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !725, file: !231, line: 187, baseType: !729, size: 64, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !695, file: !44, line: 2247, baseType: !731, offset: 576)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !732, line: 187, elements: !341)
!732 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!733 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !695, file: !44, line: 2248, baseType: !731, offset: 576)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !695, file: !44, line: 2249, baseType: !731, offset: 576)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !695, file: !44, line: 2250, baseType: !736, offset: 576)
!736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, elements: !369)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !695, file: !44, line: 2252, baseType: !731, offset: 576)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !695, file: !44, line: 2253, baseType: !731, offset: 576)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !695, file: !44, line: 2254, baseType: !731, offset: 576)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !686, file: !44, line: 1423, baseType: !741, size: 64, offset: 384)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !743)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !744)
!744 = !{!745, !749, !753, !754, !758, !764, !768, !769, !770, !774, !778, !779, !780, !781, !787, !792, !793, !800, !801, !802, !803, !2497, !2512}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !743, file: !44, line: 1936, baseType: !746, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DISubroutineType(types: !748)
!748 = !{!515, !685}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !743, file: !44, line: 1937, baseType: !750, size: 64, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DISubroutineType(types: !752)
!752 = !{null, !515}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !743, file: !44, line: 1938, baseType: !750, size: 64, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !743, file: !44, line: 1940, baseType: !755, size: 64, offset: 192)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DISubroutineType(types: !757)
!757 = !{null, !515, !232}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !743, file: !44, line: 1941, baseType: !759, size: 64, offset: 256)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DISubroutineType(types: !761)
!761 = !{!232, !515, !762}
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !743, file: !44, line: 1942, baseType: !765, size: 64, offset: 320)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DISubroutineType(types: !767)
!767 = !{!232, !515}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !743, file: !44, line: 1943, baseType: !750, size: 64, offset: 384)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !743, file: !44, line: 1944, baseType: !715, size: 64, offset: 448)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !743, file: !44, line: 1945, baseType: !771, size: 64, offset: 512)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DISubroutineType(types: !773)
!773 = !{!232, !685, !232}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !743, file: !44, line: 1946, baseType: !775, size: 64, offset: 576)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DISubroutineType(types: !777)
!777 = !{!232, !685}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !743, file: !44, line: 1947, baseType: !775, size: 64, offset: 640)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !743, file: !44, line: 1948, baseType: !775, size: 64, offset: 704)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !743, file: !44, line: 1949, baseType: !775, size: 64, offset: 768)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !743, file: !44, line: 1950, baseType: !782, size: 64, offset: 832)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{!232, !476, !785}
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !743, file: !44, line: 1951, baseType: !788, size: 64, offset: 896)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{!232, !685, !791, !368}
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !743, file: !44, line: 1952, baseType: !715, size: 64, offset: 960)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !743, file: !44, line: 1954, baseType: !794, size: 64, offset: 1024)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DISubroutineType(types: !796)
!796 = !{!232, !797, !476}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !799, line: 539, flags: DIFlagFwdDecl)
!799 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!800 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !743, file: !44, line: 1955, baseType: !794, size: 64, offset: 1088)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !743, file: !44, line: 1956, baseType: !794, size: 64, offset: 1152)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !743, file: !44, line: 1957, baseType: !794, size: 64, offset: 1216)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !743, file: !44, line: 1963, baseType: !804, size: 64, offset: 1280)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!232, !685, !807, !230}
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !809, line: 68, size: 512, align: 128, elements: !810)
!809 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!810 = !{!811, !812, !2489, !2496}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !808, file: !809, line: 69, baseType: !418, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, scope: !808, file: !809, line: 77, baseType: !813, size: 320, offset: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !808, file: !809, line: 77, size: 320, elements: !814)
!814 = !{!815, !1002, !1007, !1035, !1043, !1049, !2420, !2488}
!815 = !DIDerivedType(tag: DW_TAG_member, scope: !813, file: !809, line: 78, baseType: !816, size: 320)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !813, file: !809, line: 78, size: 320, elements: !817)
!817 = !{!818, !819, !1000, !1001}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !816, file: !809, line: 84, baseType: !238, size: 128)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !816, file: !809, line: 86, baseType: !820, size: 64, offset: 128)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !822)
!822 = !{!823, !824, !831, !832, !837, !852, !868, !869, !870, !871, !993, !994, !997, !998, !999}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !821, file: !44, line: 452, baseType: !515, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !821, file: !44, line: 453, baseType: !825, size: 128, offset: 64)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !826, line: 292, size: 128, elements: !827)
!826 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!827 = !{!828, !829, !830}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !825, file: !826, line: 293, baseType: !327)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !825, file: !826, line: 295, baseType: !230, size: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !825, file: !826, line: 296, baseType: !222, size: 64, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !821, file: !44, line: 454, baseType: !230, size: 32, offset: 192)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !821, file: !44, line: 455, baseType: !833, size: 32, offset: 224)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !231, line: 168, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !231, line: 166, size: 32, elements: !835)
!835 = !{!836}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !834, file: !231, line: 167, baseType: !232, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !821, file: !44, line: 460, baseType: !838, size: 128, offset: 256)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !839, line: 125, size: 128, elements: !840)
!839 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!840 = !{!841, !851}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !838, file: !839, line: 126, baseType: !842, size: 64)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !839, line: 31, size: 64, elements: !843)
!843 = !{!844}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !842, file: !839, line: 32, baseType: !845, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !839, line: 24, size: 192, align: 64, elements: !847)
!847 = !{!848, !849, !850}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !846, file: !839, line: 25, baseType: !418, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !846, file: !839, line: 26, baseType: !845, size: 64, offset: 64)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !846, file: !839, line: 27, baseType: !845, size: 64, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !838, file: !839, line: 127, baseType: !845, size: 64, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !821, file: !44, line: 461, baseType: !853, size: 256, offset: 384)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !854, line: 35, size: 256, elements: !855)
!854 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!855 = !{!856, !864, !865, !867}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !853, file: !854, line: 36, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !858, line: 13, baseType: !859)
!858 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !231, line: 175, baseType: !860)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !231, line: 173, size: 64, elements: !861)
!861 = !{!862}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !860, file: !231, line: 174, baseType: !863, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !224, line: 22, baseType: !626)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !853, file: !854, line: 42, baseType: !857, size: 64, offset: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !853, file: !854, line: 46, baseType: !866, offset: 128)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !328, line: 29, baseType: !335)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !853, file: !854, line: 47, baseType: !238, size: 128, offset: 128)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !821, file: !44, line: 462, baseType: !418, size: 64, offset: 640)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !821, file: !44, line: 463, baseType: !418, size: 64, offset: 704)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !821, file: !44, line: 464, baseType: !418, size: 64, offset: 768)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !821, file: !44, line: 465, baseType: !872, size: 64, offset: 832)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !875)
!875 = !{!876, !880, !884, !888, !892, !896, !902, !908, !912, !917, !921, !925, !929, !957, !961, !967, !968, !969, !973, !978, !982, !989}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !874, file: !44, line: 368, baseType: !877, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DISubroutineType(types: !879)
!879 = !{!232, !807, !762}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !874, file: !44, line: 369, baseType: !881, size: 64, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DISubroutineType(types: !883)
!883 = !{!232, !446, !807}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !874, file: !44, line: 372, baseType: !885, size: 64, offset: 128)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DISubroutineType(types: !887)
!887 = !{!232, !820, !762}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !874, file: !44, line: 375, baseType: !889, size: 64, offset: 192)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DISubroutineType(types: !891)
!891 = !{!232, !807}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !874, file: !44, line: 381, baseType: !893, size: 64, offset: 256)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{!232, !446, !820, !241, !7}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !874, file: !44, line: 383, baseType: !897, size: 64, offset: 320)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DISubroutineType(types: !899)
!899 = !{null, !900}
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !874, file: !44, line: 385, baseType: !903, size: 64, offset: 384)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!232, !446, !820, !617, !7, !7, !906, !907}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !874, file: !44, line: 388, baseType: !909, size: 64, offset: 448)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{!232, !446, !820, !617, !7, !7, !807, !222}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !874, file: !44, line: 393, baseType: !913, size: 64, offset: 512)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!916, !820, !916}
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !231, line: 125, baseType: !227)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !874, file: !44, line: 394, baseType: !918, size: 64, offset: 576)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{null, !807, !7, !7}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !874, file: !44, line: 395, baseType: !922, size: 64, offset: 640)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{!232, !807, !230}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !874, file: !44, line: 396, baseType: !926, size: 64, offset: 704)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DISubroutineType(types: !928)
!928 = !{null, !807}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !874, file: !44, line: 397, baseType: !930, size: 64, offset: 768)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DISubroutineType(types: !932)
!932 = !{!399, !933, !955}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !935)
!935 = !{!936, !937, !938, !942, !943, !944, !947, !948}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !934, file: !44, line: 321, baseType: !446, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !934, file: !44, line: 326, baseType: !617, size: 64, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !934, file: !44, line: 327, baseType: !939, size: 64, offset: 128)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{null, !933, !403, !403}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !934, file: !44, line: 328, baseType: !222, size: 64, offset: 192)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !934, file: !44, line: 329, baseType: !232, size: 32, offset: 256)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !934, file: !44, line: 330, baseType: !945, size: 16, offset: 288)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !224, line: 19, baseType: !946)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !226, line: 24, baseType: !410)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !934, file: !44, line: 331, baseType: !945, size: 16, offset: 304)
!948 = !DIDerivedType(tag: DW_TAG_member, scope: !934, file: !44, line: 332, baseType: !949, size: 64, offset: 320)
!949 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !934, file: !44, line: 332, size: 64, elements: !950)
!950 = !{!951, !952}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !949, file: !44, line: 333, baseType: !7, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !949, file: !44, line: 334, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !874, file: !44, line: 402, baseType: !958, size: 64, offset: 832)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DISubroutineType(types: !960)
!960 = !{!232, !820, !807, !807, !5}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !874, file: !44, line: 404, baseType: !962, size: 64, offset: 896)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!576, !807, !965}
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !966, line: 305, baseType: !7)
!966 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!967 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !874, file: !44, line: 405, baseType: !926, size: 64, offset: 960)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !874, file: !44, line: 406, baseType: !889, size: 64, offset: 1024)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !874, file: !44, line: 407, baseType: !970, size: 64, offset: 1088)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DISubroutineType(types: !972)
!972 = !{!232, !807, !418, !418}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !874, file: !44, line: 409, baseType: !974, size: 64, offset: 1152)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DISubroutineType(types: !976)
!976 = !{null, !807, !977, !977}
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !874, file: !44, line: 410, baseType: !979, size: 64, offset: 1216)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!232, !820, !807}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !874, file: !44, line: 413, baseType: !983, size: 64, offset: 1280)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{!232, !986, !446, !988}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !874, file: !44, line: 415, baseType: !990, size: 64, offset: 1344)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DISubroutineType(types: !992)
!992 = !{null, !446}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !821, file: !44, line: 466, baseType: !418, size: 64, offset: 896)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !821, file: !44, line: 467, baseType: !995, size: 32, offset: 960)
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !996, line: 8, baseType: !223)
!996 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!997 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !821, file: !44, line: 468, baseType: !327, offset: 992)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !821, file: !44, line: 469, baseType: !238, size: 128, offset: 1024)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !821, file: !44, line: 470, baseType: !222, size: 64, offset: 1152)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !816, file: !809, line: 87, baseType: !418, size: 64, offset: 192)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !816, file: !809, line: 94, baseType: !418, size: 64, offset: 256)
!1002 = !DIDerivedType(tag: DW_TAG_member, scope: !813, file: !809, line: 96, baseType: !1003, size: 64)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !813, file: !809, line: 96, size: 64, elements: !1004)
!1004 = !{!1005}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1003, file: !809, line: 101, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !231, line: 143, baseType: !227)
!1007 = !DIDerivedType(tag: DW_TAG_member, scope: !813, file: !809, line: 103, baseType: !1008, size: 320)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !813, file: !809, line: 103, size: 320, elements: !1009)
!1009 = !{!1010, !1020, !1023, !1024}
!1010 = !DIDerivedType(tag: DW_TAG_member, scope: !1008, file: !809, line: 104, baseType: !1011, size: 128)
!1011 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1008, file: !809, line: 104, size: 128, elements: !1012)
!1012 = !{!1013, !1014}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1011, file: !809, line: 105, baseType: !238, size: 128)
!1014 = !DIDerivedType(tag: DW_TAG_member, scope: !1011, file: !809, line: 106, baseType: !1015, size: 128)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1011, file: !809, line: 106, size: 128, elements: !1016)
!1016 = !{!1017, !1018, !1019}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1015, file: !809, line: 107, baseType: !807, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1015, file: !809, line: 109, baseType: !232, size: 32, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1015, file: !809, line: 110, baseType: !232, size: 32, offset: 96)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1008, file: !809, line: 117, baseType: !1021, size: 64, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !809, line: 117, flags: DIFlagFwdDecl)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1008, file: !809, line: 119, baseType: !222, size: 64, offset: 192)
!1024 = !DIDerivedType(tag: DW_TAG_member, scope: !1008, file: !809, line: 120, baseType: !1025, size: 64, offset: 256)
!1025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1008, file: !809, line: 120, size: 64, elements: !1026)
!1026 = !{!1027, !1028, !1029}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1025, file: !809, line: 121, baseType: !222, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1025, file: !809, line: 122, baseType: !418, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, scope: !1025, file: !809, line: 123, baseType: !1030, size: 32)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1025, file: !809, line: 123, size: 32, elements: !1031)
!1031 = !{!1032, !1033, !1034}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1030, file: !809, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1030, file: !809, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1030, file: !809, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1035 = !DIDerivedType(tag: DW_TAG_member, scope: !813, file: !809, line: 130, baseType: !1036, size: 192)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !813, file: !809, line: 130, size: 192, elements: !1037)
!1037 = !{!1038, !1039, !1040, !1041, !1042}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1036, file: !809, line: 131, baseType: !418, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1036, file: !809, line: 134, baseType: !285, size: 8, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1036, file: !809, line: 135, baseType: !285, size: 8, offset: 72)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1036, file: !809, line: 136, baseType: !833, size: 32, offset: 96)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1036, file: !809, line: 137, baseType: !7, size: 32, offset: 128)
!1043 = !DIDerivedType(tag: DW_TAG_member, scope: !813, file: !809, line: 139, baseType: !1044, size: 256)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !813, file: !809, line: 139, size: 256, elements: !1045)
!1045 = !{!1046, !1047, !1048}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1044, file: !809, line: 140, baseType: !418, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1044, file: !809, line: 141, baseType: !833, size: 32, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1044, file: !809, line: 143, baseType: !238, size: 128, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_member, scope: !813, file: !809, line: 145, baseType: !1050, size: 256)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !813, file: !809, line: 145, size: 256, elements: !1051)
!1051 = !{!1052, !1053, !1055, !1056, !2419}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1050, file: !809, line: 146, baseType: !418, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1050, file: !809, line: 147, baseType: !1054, size: 64, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !799, line: 509, baseType: !807)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1050, file: !809, line: 148, baseType: !418, size: 64, offset: 128)
!1056 = !DIDerivedType(tag: DW_TAG_member, scope: !1050, file: !809, line: 149, baseType: !1057, size: 64, offset: 192)
!1057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1050, file: !809, line: 149, size: 64, elements: !1058)
!1058 = !{!1059, !2418}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1057, file: !809, line: 150, baseType: !1060, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !809, line: 388, size: 7296, elements: !1062)
!1062 = !{!1063, !2414}
!1063 = !DIDerivedType(tag: DW_TAG_member, scope: !1061, file: !809, line: 389, baseType: !1064, size: 7296)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1061, file: !809, line: 389, size: 7296, elements: !1065)
!1065 = !{!1066, !1184, !1185, !1186, !1190, !1191, !1192, !1193, !1194, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1235, !1243, !1246, !1292, !1293, !2398, !2399, !2402, !2403, !2404, !2407, !2408, !2409, !2412, !2413}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1064, file: !809, line: 390, baseType: !1067, size: 64)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !809, line: 305, size: 1472, elements: !1069)
!1069 = !{!1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1084, !1085, !1090, !1091, !1094, !1178, !1179, !1180, !1181, !1182}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1068, file: !809, line: 308, baseType: !418, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1068, file: !809, line: 309, baseType: !418, size: 64, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1068, file: !809, line: 313, baseType: !1067, size: 64, offset: 128)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1068, file: !809, line: 313, baseType: !1067, size: 64, offset: 192)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1068, file: !809, line: 315, baseType: !846, size: 192, align: 64, offset: 256)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1068, file: !809, line: 323, baseType: !418, size: 64, offset: 448)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1068, file: !809, line: 327, baseType: !1060, size: 64, offset: 512)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1068, file: !809, line: 333, baseType: !1078, size: 64, offset: 576)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !799, line: 284, baseType: !1079)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !799, line: 284, size: 64, elements: !1080)
!1080 = !{!1081}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1079, file: !799, line: 284, baseType: !1082, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1083, line: 19, baseType: !418)
!1083 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1068, file: !809, line: 334, baseType: !418, size: 64, offset: 640)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1068, file: !809, line: 343, baseType: !1086, size: 256, offset: 704)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1068, file: !809, line: 340, size: 256, elements: !1087)
!1087 = !{!1088, !1089}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1086, file: !809, line: 341, baseType: !846, size: 192, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1086, file: !809, line: 342, baseType: !418, size: 64, offset: 192)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1068, file: !809, line: 351, baseType: !238, size: 128, offset: 960)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1068, file: !809, line: 353, baseType: !1092, size: 64, offset: 1088)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !809, line: 353, flags: DIFlagFwdDecl)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1068, file: !809, line: 356, baseType: !1095, size: 64, offset: 1152)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1098)
!1098 = !{!1099, !1103, !1104, !1108, !1112, !1152, !1156, !1160, !1164, !1165, !1166, !1170, !1174}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1097, file: !14, line: 558, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{null, !1067}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1097, file: !14, line: 559, baseType: !1100, size: 64, offset: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1097, file: !14, line: 560, baseType: !1105, size: 64, offset: 128)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!232, !1067, !418}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1097, file: !14, line: 561, baseType: !1109, size: 64, offset: 192)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!232, !1067}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1097, file: !14, line: 562, baseType: !1113, size: 64, offset: 256)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!1116, !1117}
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !809, line: 682, baseType: !7)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1119)
!1119 = !{!1120, !1121, !1122, !1123, !1124, !1125, !1132, !1139, !1145, !1146, !1147, !1149, !1151}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1118, file: !14, line: 509, baseType: !1067, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1118, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1118, file: !14, line: 511, baseType: !230, size: 32, offset: 96)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1118, file: !14, line: 512, baseType: !418, size: 64, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1118, file: !14, line: 513, baseType: !418, size: 64, offset: 192)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1118, file: !14, line: 514, baseType: !1126, size: 64, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !799, line: 385, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 385, size: 64, elements: !1129)
!1129 = !{!1130}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1128, file: !799, line: 385, baseType: !1131, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1083, line: 15, baseType: !418)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1118, file: !14, line: 516, baseType: !1133, size: 64, offset: 320)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !799, line: 359, baseType: !1135)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 359, size: 64, elements: !1136)
!1136 = !{!1137}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1135, file: !799, line: 359, baseType: !1138, size: 64)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1083, line: 16, baseType: !418)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1118, file: !14, line: 519, baseType: !1140, size: 64, offset: 384)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1083, line: 21, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1083, line: 21, size: 64, elements: !1142)
!1142 = !{!1143}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1141, file: !1083, line: 21, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1083, line: 14, baseType: !418)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1118, file: !14, line: 521, baseType: !807, size: 64, offset: 448)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1118, file: !14, line: 522, baseType: !807, size: 64, offset: 512)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1118, file: !14, line: 528, baseType: !1148, size: 64, offset: 576)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1118, file: !14, line: 532, baseType: !1150, size: 64, offset: 640)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1118, file: !14, line: 536, baseType: !1054, size: 64, offset: 704)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1097, file: !14, line: 563, baseType: !1153, size: 64, offset: 320)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!1116, !1117, !13}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1097, file: !14, line: 565, baseType: !1157, size: 64, offset: 384)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{null, !1117, !418, !418}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1097, file: !14, line: 567, baseType: !1161, size: 64, offset: 448)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!418, !1067}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1097, file: !14, line: 571, baseType: !1113, size: 64, offset: 512)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1097, file: !14, line: 574, baseType: !1113, size: 64, offset: 576)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1097, file: !14, line: 579, baseType: !1167, size: 64, offset: 640)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!232, !1067, !418, !222, !232, !232}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1097, file: !14, line: 585, baseType: !1171, size: 64, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!309, !1067}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1097, file: !14, line: 615, baseType: !1175, size: 64, offset: 768)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!807, !1067, !418}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1068, file: !809, line: 359, baseType: !418, size: 64, offset: 1216)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1068, file: !809, line: 361, baseType: !446, size: 64, offset: 1280)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1068, file: !809, line: 362, baseType: !222, size: 64, offset: 1344)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1068, file: !809, line: 365, baseType: !857, size: 64, offset: 1408)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1068, file: !809, line: 373, baseType: !1183, offset: 1472)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !809, line: 296, elements: !341)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1064, file: !809, line: 391, baseType: !842, size: 64, offset: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1064, file: !809, line: 392, baseType: !227, size: 64, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1064, file: !809, line: 394, baseType: !1187, size: 64, offset: 192)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!418, !446, !418, !418, !418, !418}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1064, file: !809, line: 398, baseType: !418, size: 64, offset: 256)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1064, file: !809, line: 399, baseType: !418, size: 64, offset: 320)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1064, file: !809, line: 405, baseType: !418, size: 64, offset: 384)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1064, file: !809, line: 406, baseType: !418, size: 64, offset: 448)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1064, file: !809, line: 407, baseType: !1195, size: 64, offset: 512)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !799, line: 286, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !799, line: 286, size: 64, elements: !1198)
!1198 = !{!1199}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1197, file: !799, line: 286, baseType: !1200, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1083, line: 18, baseType: !418)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1064, file: !809, line: 416, baseType: !833, size: 32, offset: 576)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1064, file: !809, line: 428, baseType: !833, size: 32, offset: 608)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1064, file: !809, line: 437, baseType: !833, size: 32, offset: 640)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1064, file: !809, line: 447, baseType: !833, size: 32, offset: 672)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1064, file: !809, line: 450, baseType: !857, size: 64, offset: 704)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1064, file: !809, line: 452, baseType: !232, size: 32, offset: 768)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1064, file: !809, line: 454, baseType: !327, offset: 800)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1064, file: !809, line: 457, baseType: !853, size: 256, offset: 832)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1064, file: !809, line: 459, baseType: !238, size: 128, offset: 1088)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1064, file: !809, line: 466, baseType: !418, size: 64, offset: 1216)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1064, file: !809, line: 467, baseType: !418, size: 64, offset: 1280)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1064, file: !809, line: 469, baseType: !418, size: 64, offset: 1344)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1064, file: !809, line: 470, baseType: !418, size: 64, offset: 1408)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1064, file: !809, line: 471, baseType: !859, size: 64, offset: 1472)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1064, file: !809, line: 472, baseType: !418, size: 64, offset: 1536)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1064, file: !809, line: 473, baseType: !418, size: 64, offset: 1600)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1064, file: !809, line: 474, baseType: !418, size: 64, offset: 1664)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1064, file: !809, line: 475, baseType: !418, size: 64, offset: 1728)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1064, file: !809, line: 477, baseType: !327, offset: 1792)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1064, file: !809, line: 478, baseType: !418, size: 64, offset: 1792)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1064, file: !809, line: 478, baseType: !418, size: 64, offset: 1856)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1064, file: !809, line: 478, baseType: !418, size: 64, offset: 1920)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1064, file: !809, line: 478, baseType: !418, size: 64, offset: 1984)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1064, file: !809, line: 479, baseType: !418, size: 64, offset: 2048)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1064, file: !809, line: 479, baseType: !418, size: 64, offset: 2112)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1064, file: !809, line: 479, baseType: !418, size: 64, offset: 2176)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1064, file: !809, line: 480, baseType: !418, size: 64, offset: 2240)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1064, file: !809, line: 480, baseType: !418, size: 64, offset: 2304)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1064, file: !809, line: 480, baseType: !418, size: 64, offset: 2368)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1064, file: !809, line: 480, baseType: !418, size: 64, offset: 2432)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1064, file: !809, line: 482, baseType: !1232, size: 2816, offset: 2496)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !418, size: 2816, elements: !1233)
!1233 = !{!1234}
!1234 = !DISubrange(count: 44)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1064, file: !809, line: 488, baseType: !1236, size: 256, offset: 5312)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1237, line: 60, size: 256, elements: !1238)
!1237 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1238 = !{!1239}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1236, file: !1237, line: 61, baseType: !1240, size: 256)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 256, elements: !1241)
!1241 = !{!1242}
!1242 = !DISubrange(count: 4)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1064, file: !809, line: 490, baseType: !1244, size: 64, offset: 5568)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !809, line: 490, flags: DIFlagFwdDecl)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1064, file: !809, line: 493, baseType: !1247, size: 896, offset: 5632)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1248, line: 53, baseType: !1249)
!1248 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1248, line: 13, size: 896, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1257, !1258, !1265, !1266, !1286, !1287, !1288}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1249, file: !1248, line: 18, baseType: !227, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1249, file: !1248, line: 28, baseType: !859, size: 64, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1249, file: !1248, line: 31, baseType: !853, size: 256, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1249, file: !1248, line: 32, baseType: !1255, size: 64, offset: 384)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1248, line: 32, flags: DIFlagFwdDecl)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1249, file: !1248, line: 37, baseType: !410, size: 16, offset: 448)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1249, file: !1248, line: 40, baseType: !1259, size: 192, offset: 512)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1260, line: 53, size: 192, elements: !1261)
!1260 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1261 = !{!1262, !1263, !1264}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1259, file: !1260, line: 54, baseType: !857, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1259, file: !1260, line: 55, baseType: !327, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1259, file: !1260, line: 59, baseType: !238, size: 128, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1249, file: !1248, line: 41, baseType: !222, size: 64, offset: 704)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1249, file: !1248, line: 42, baseType: !1267, size: 64, offset: 768)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1270, line: 13, size: 896, elements: !1271)
!1270 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1271 = !{!1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1269, file: !1270, line: 14, baseType: !222, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1269, file: !1270, line: 15, baseType: !418, size: 64, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1269, file: !1270, line: 17, baseType: !418, size: 64, offset: 128)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1269, file: !1270, line: 17, baseType: !418, size: 64, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1269, file: !1270, line: 19, baseType: !403, size: 64, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1269, file: !1270, line: 21, baseType: !403, size: 64, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1269, file: !1270, line: 22, baseType: !403, size: 64, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1269, file: !1270, line: 23, baseType: !403, size: 64, offset: 448)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1269, file: !1270, line: 24, baseType: !403, size: 64, offset: 512)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1269, file: !1270, line: 25, baseType: !403, size: 64, offset: 576)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1269, file: !1270, line: 26, baseType: !403, size: 64, offset: 640)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1269, file: !1270, line: 27, baseType: !403, size: 64, offset: 704)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1269, file: !1270, line: 28, baseType: !403, size: 64, offset: 768)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1269, file: !1270, line: 29, baseType: !403, size: 64, offset: 832)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1249, file: !1248, line: 44, baseType: !833, size: 32, offset: 832)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1249, file: !1248, line: 50, baseType: !945, size: 16, offset: 864)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1249, file: !1248, line: 51, baseType: !1289, size: 16, offset: 880)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !224, line: 18, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !226, line: 23, baseType: !1291)
!1291 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1064, file: !809, line: 495, baseType: !418, size: 64, offset: 6528)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1064, file: !809, line: 497, baseType: !1294, size: 64, offset: 6592)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !809, line: 381, size: 384, elements: !1296)
!1296 = !{!1297, !1298, !2397}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1295, file: !809, line: 382, baseType: !833, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1295, file: !809, line: 383, baseType: !1299, size: 128, offset: 64)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !809, line: 376, size: 128, elements: !1300)
!1300 = !{!1301, !2395}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1299, file: !809, line: 377, baseType: !1302, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1304, line: 640, size: 48640, elements: !1305)
!1304 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1305 = !{!1306, !1312, !1314, !1315, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1332, !1350, !1361, !1444, !1445, !1446, !1457, !1458, !1460, !1461, !1462, !1463, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1542, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1580, !1582, !1583, !1584, !1596, !1597, !1598, !1599, !1600, !1601, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1625, !1630, !1814, !1815, !1816, !1817, !1821, !1824, !1827, !1830, !1833, !1836, !1937, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1983, !1984, !1985, !1986, !1987, !1992, !1993, !1994, !1997, !1998, !2001, !2004, !2007, !2010, !2053, !2056, !2057, !2136, !2137, !2140, !2141, !2144, !2145, !2146, !2150, !2151, !2152, !2165, !2166, !2167, !2177, !2182, !2185, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1303, file: !1304, line: 646, baseType: !1307, size: 128)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1308, line: 56, size: 128, elements: !1309)
!1308 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1309 = !{!1310, !1311}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1307, file: !1308, line: 57, baseType: !418, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1307, file: !1308, line: 58, baseType: !223, size: 32, offset: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1303, file: !1304, line: 649, baseType: !1313, size: 64, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !403)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1303, file: !1304, line: 657, baseType: !222, size: 64, offset: 192)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1303, file: !1304, line: 658, baseType: !1316, size: 32, offset: 256)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1317, line: 113, baseType: !1318)
!1317 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1317, line: 111, size: 32, elements: !1319)
!1319 = !{!1320}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1318, file: !1317, line: 112, baseType: !833, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1303, file: !1304, line: 660, baseType: !7, size: 32, offset: 288)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1303, file: !1304, line: 661, baseType: !7, size: 32, offset: 320)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1303, file: !1304, line: 684, baseType: !232, size: 32, offset: 352)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1303, file: !1304, line: 686, baseType: !232, size: 32, offset: 384)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1303, file: !1304, line: 687, baseType: !232, size: 32, offset: 416)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1303, file: !1304, line: 688, baseType: !232, size: 32, offset: 448)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1303, file: !1304, line: 689, baseType: !7, size: 32, offset: 480)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1303, file: !1304, line: 691, baseType: !1329, size: 64, offset: 512)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1331)
!1331 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1304, line: 691, flags: DIFlagFwdDecl)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1303, file: !1304, line: 692, baseType: !1333, size: 832, offset: 576)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1304, line: 451, size: 832, elements: !1334)
!1334 = !{!1335, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1333, file: !1304, line: 453, baseType: !1336, size: 128)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1304, line: 325, size: 128, elements: !1337)
!1337 = !{!1338, !1339}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1336, file: !1304, line: 326, baseType: !418, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1336, file: !1304, line: 327, baseType: !223, size: 32, offset: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1333, file: !1304, line: 454, baseType: !846, size: 192, align: 64, offset: 128)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1333, file: !1304, line: 455, baseType: !238, size: 128, offset: 320)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1333, file: !1304, line: 456, baseType: !7, size: 32, offset: 448)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1333, file: !1304, line: 458, baseType: !227, size: 64, offset: 512)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1333, file: !1304, line: 459, baseType: !227, size: 64, offset: 576)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1333, file: !1304, line: 460, baseType: !227, size: 64, offset: 640)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1333, file: !1304, line: 461, baseType: !227, size: 64, offset: 704)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1333, file: !1304, line: 463, baseType: !227, size: 64, offset: 768)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1333, file: !1304, line: 465, baseType: !1349, offset: 832)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1304, line: 415, elements: !341)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1303, file: !1304, line: 693, baseType: !1351, size: 384, offset: 1408)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1304, line: 489, size: 384, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1357, !1358, !1359}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1351, file: !1304, line: 490, baseType: !238, size: 128)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1351, file: !1304, line: 491, baseType: !418, size: 64, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1351, file: !1304, line: 492, baseType: !418, size: 64, offset: 192)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1351, file: !1304, line: 493, baseType: !7, size: 32, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1351, file: !1304, line: 494, baseType: !410, size: 16, offset: 288)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1351, file: !1304, line: 495, baseType: !410, size: 16, offset: 304)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1351, file: !1304, line: 497, baseType: !1360, size: 64, offset: 320)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1303, file: !1304, line: 697, baseType: !1362, size: 1792, offset: 1792)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1304, line: 507, size: 1792, elements: !1363)
!1363 = !{!1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1441, !1442}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1362, file: !1304, line: 508, baseType: !846, size: 192, align: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1362, file: !1304, line: 515, baseType: !227, size: 64, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1362, file: !1304, line: 516, baseType: !227, size: 64, offset: 256)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1362, file: !1304, line: 517, baseType: !227, size: 64, offset: 320)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1362, file: !1304, line: 518, baseType: !227, size: 64, offset: 384)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1362, file: !1304, line: 519, baseType: !227, size: 64, offset: 448)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1362, file: !1304, line: 526, baseType: !863, size: 64, offset: 512)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1362, file: !1304, line: 527, baseType: !227, size: 64, offset: 576)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1362, file: !1304, line: 528, baseType: !7, size: 32, offset: 640)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1362, file: !1304, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1362, file: !1304, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1362, file: !1304, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1362, file: !1304, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1362, file: !1304, line: 563, baseType: !1378, size: 512, offset: 704)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1379)
!1379 = !{!1380, !1388, !1389, !1394, !1437, !1438, !1439, !1440}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1378, file: !20, line: 119, baseType: !1381, size: 256)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1382, line: 9, size: 256, elements: !1383)
!1382 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1383 = !{!1384, !1385}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1381, file: !1382, line: 10, baseType: !846, size: 192, align: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1381, file: !1382, line: 11, baseType: !1386, size: 64, offset: 192)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1387, line: 29, baseType: !863)
!1387 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1378, file: !20, line: 120, baseType: !1386, size: 64, offset: 256)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1378, file: !20, line: 121, baseType: !1390, size: 64, offset: 320)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!19, !1393}
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1378, file: !20, line: 122, baseType: !1395, size: 64, offset: 384)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1397)
!1397 = !{!1398, !1418, !1419, !1422, !1427, !1428, !1432, !1436}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1396, file: !20, line: 160, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1401)
!1401 = !{!1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1400, file: !20, line: 215, baseType: !866)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1400, file: !20, line: 216, baseType: !7, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1400, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1400, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1400, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1400, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1400, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1400, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1400, file: !20, line: 233, baseType: !1386, size: 64, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1400, file: !20, line: 234, baseType: !1393, size: 64, offset: 192)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1400, file: !20, line: 235, baseType: !1386, size: 64, offset: 256)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1400, file: !20, line: 236, baseType: !1393, size: 64, offset: 320)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1400, file: !20, line: 237, baseType: !1415, size: 4096, offset: 512)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 4096, elements: !1416)
!1416 = !{!1417}
!1417 = !DISubrange(count: 8)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1396, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1396, file: !20, line: 162, baseType: !1420, size: 32, offset: 96)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !231, line: 27, baseType: !1421)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !401, line: 96, baseType: !232)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1396, file: !20, line: 163, baseType: !1423, size: 32, offset: 128)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !482, line: 276, baseType: !1424)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !482, line: 276, size: 32, elements: !1425)
!1425 = !{!1426}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1424, file: !482, line: 276, baseType: !486, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1396, file: !20, line: 164, baseType: !1393, size: 64, offset: 192)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1396, file: !20, line: 165, baseType: !1429, size: 128, offset: 256)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1382, line: 14, size: 128, elements: !1430)
!1430 = !{!1431}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1429, file: !1382, line: 15, baseType: !838, size: 128)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1396, file: !20, line: 166, baseType: !1433, size: 64, offset: 384)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{!1386}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1396, file: !20, line: 167, baseType: !1386, size: 64, offset: 448)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1378, file: !20, line: 123, baseType: !283, size: 8, offset: 448)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1378, file: !20, line: 124, baseType: !283, size: 8, offset: 456)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1378, file: !20, line: 125, baseType: !283, size: 8, offset: 464)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1378, file: !20, line: 126, baseType: !283, size: 8, offset: 472)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1362, file: !1304, line: 572, baseType: !1378, size: 512, offset: 1216)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1362, file: !1304, line: 580, baseType: !1443, size: 64, offset: 1728)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1303, file: !1304, line: 721, baseType: !7, size: 32, offset: 3584)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1303, file: !1304, line: 722, baseType: !232, size: 32, offset: 3616)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1303, file: !1304, line: 723, baseType: !1447, size: 64, offset: 3648)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1449)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1450, line: 17, baseType: !1451)
!1450 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1450, line: 17, size: 64, elements: !1452)
!1452 = !{!1453}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1451, file: !1450, line: 17, baseType: !1454, size: 64)
!1454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !418, size: 64, elements: !1455)
!1455 = !{!1456}
!1456 = !DISubrange(count: 1)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1303, file: !1304, line: 724, baseType: !1449, size: 64, offset: 3712)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1303, file: !1304, line: 749, baseType: !1459, offset: 3776)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1304, line: 290, elements: !341)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1303, file: !1304, line: 751, baseType: !238, size: 128, offset: 3776)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1303, file: !1304, line: 757, baseType: !1060, size: 64, offset: 3904)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1303, file: !1304, line: 758, baseType: !1060, size: 64, offset: 3968)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1303, file: !1304, line: 761, baseType: !1464, size: 320, offset: 4032)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1237, line: 34, size: 320, elements: !1465)
!1465 = !{!1466, !1467}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1464, file: !1237, line: 35, baseType: !227, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1464, file: !1237, line: 36, baseType: !1468, size: 256, offset: 64)
!1468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1067, size: 256, elements: !1241)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1303, file: !1304, line: 766, baseType: !232, size: 32, offset: 4352)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1303, file: !1304, line: 767, baseType: !232, size: 32, offset: 4384)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1303, file: !1304, line: 768, baseType: !232, size: 32, offset: 4416)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1303, file: !1304, line: 770, baseType: !232, size: 32, offset: 4448)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1303, file: !1304, line: 772, baseType: !418, size: 64, offset: 4480)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1303, file: !1304, line: 775, baseType: !7, size: 32, offset: 4544)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1303, file: !1304, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1303, file: !1304, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1303, file: !1304, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1303, file: !1304, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1303, file: !1304, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1303, file: !1304, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1303, file: !1304, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1303, file: !1304, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1303, file: !1304, line: 831, baseType: !418, size: 64, offset: 4672)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1303, file: !1304, line: 833, baseType: !1485, size: 384, offset: 4736)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1486)
!1486 = !{!1487, !1492}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1485, file: !25, line: 26, baseType: !1488, size: 64)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!403, !1491}
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, scope: !1485, file: !25, line: 27, baseType: !1493, size: 320, offset: 64)
!1493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1485, file: !25, line: 27, size: 320, elements: !1494)
!1494 = !{!1495, !1505, !1532}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1493, file: !25, line: 36, baseType: !1496, size: 320)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1493, file: !25, line: 29, size: 320, elements: !1497)
!1497 = !{!1498, !1500, !1501, !1502, !1503, !1504}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1496, file: !25, line: 30, baseType: !1499, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1496, file: !25, line: 31, baseType: !223, size: 32, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1496, file: !25, line: 32, baseType: !223, size: 32, offset: 96)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1496, file: !25, line: 33, baseType: !223, size: 32, offset: 128)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1496, file: !25, line: 34, baseType: !227, size: 64, offset: 192)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1496, file: !25, line: 35, baseType: !1499, size: 64, offset: 256)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1493, file: !25, line: 46, baseType: !1506, size: 192)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1493, file: !25, line: 38, size: 192, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1531}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1506, file: !25, line: 39, baseType: !1420, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1506, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, scope: !1506, file: !25, line: 41, baseType: !1511, size: 64, offset: 64)
!1511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1506, file: !25, line: 41, size: 64, elements: !1512)
!1512 = !{!1513, !1521}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1511, file: !25, line: 42, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1516, line: 7, size: 128, elements: !1517)
!1516 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1517 = !{!1518, !1520}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1515, file: !1516, line: 8, baseType: !1519, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !401, line: 93, baseType: !619)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1515, file: !1516, line: 9, baseType: !619, size: 64, offset: 64)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1511, file: !25, line: 43, baseType: !1522, size: 64)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1524, line: 7, size: 64, elements: !1525)
!1524 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1525 = !{!1526, !1530}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1523, file: !1524, line: 8, baseType: !1527, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1524, line: 5, baseType: !1528)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !224, line: 20, baseType: !1529)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !226, line: 26, baseType: !232)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1523, file: !1524, line: 9, baseType: !1528, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1506, file: !25, line: 45, baseType: !227, size: 64, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1493, file: !25, line: 54, baseType: !1533, size: 256)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1493, file: !25, line: 48, size: 256, elements: !1534)
!1534 = !{!1535, !1538, !1539, !1540, !1541}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1533, file: !25, line: 49, baseType: !1536, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1533, file: !25, line: 50, baseType: !232, size: 32, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1533, file: !25, line: 51, baseType: !232, size: 32, offset: 96)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1533, file: !25, line: 52, baseType: !418, size: 64, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1533, file: !25, line: 53, baseType: !418, size: 64, offset: 192)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1303, file: !1304, line: 835, baseType: !1543, size: 32, offset: 5120)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !231, line: 22, baseType: !1544)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !401, line: 28, baseType: !232)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1303, file: !1304, line: 836, baseType: !1543, size: 32, offset: 5152)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1303, file: !1304, line: 840, baseType: !418, size: 64, offset: 5184)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1303, file: !1304, line: 849, baseType: !1302, size: 64, offset: 5248)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1303, file: !1304, line: 852, baseType: !1302, size: 64, offset: 5312)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1303, file: !1304, line: 857, baseType: !238, size: 128, offset: 5376)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1303, file: !1304, line: 858, baseType: !238, size: 128, offset: 5504)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1303, file: !1304, line: 859, baseType: !1302, size: 64, offset: 5632)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1303, file: !1304, line: 867, baseType: !238, size: 128, offset: 5696)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1303, file: !1304, line: 868, baseType: !238, size: 128, offset: 5824)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1303, file: !1304, line: 871, baseType: !1555, size: 64, offset: 5952)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1557)
!1557 = !{!1558, !1559, !1560, !1561, !1563, !1564, !1571, !1572}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1556, file: !53, line: 61, baseType: !1316, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1556, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1556, file: !53, line: 63, baseType: !327, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1556, file: !53, line: 65, baseType: !1562, size: 256, offset: 64)
!1562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !721, size: 256, elements: !1241)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1556, file: !53, line: 66, baseType: !721, size: 64, offset: 320)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1556, file: !53, line: 68, baseType: !1565, size: 128, offset: 384)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1566, line: 40, baseType: !1567)
!1566 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1566, line: 36, size: 128, elements: !1568)
!1568 = !{!1569, !1570}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1567, file: !1566, line: 37, baseType: !327)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1567, file: !1566, line: 38, baseType: !238, size: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1556, file: !53, line: 69, baseType: !459, size: 128, align: 64, offset: 512)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1556, file: !53, line: 70, baseType: !1573, size: 128, offset: 640)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1574, size: 128, elements: !1455)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1575)
!1575 = !{!1576, !1577}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1574, file: !53, line: 55, baseType: !232, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1574, file: !53, line: 56, baseType: !1578, size: 64, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1303, file: !1304, line: 872, baseType: !1581, size: 512, offset: 6016)
!1581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 512, elements: !1241)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1303, file: !1304, line: 873, baseType: !238, size: 128, offset: 6528)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1303, file: !1304, line: 874, baseType: !238, size: 128, offset: 6656)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1303, file: !1304, line: 876, baseType: !1585, size: 64, offset: 6784)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1587, line: 26, size: 192, elements: !1588)
!1587 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1588 = !{!1589, !1590}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1586, file: !1587, line: 27, baseType: !7, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1586, file: !1587, line: 28, baseType: !1591, size: 128, offset: 64)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1592, line: 43, size: 128, elements: !1593)
!1592 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1593 = !{!1594, !1595}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1591, file: !1592, line: 44, baseType: !866)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1591, file: !1592, line: 45, baseType: !238, size: 128)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1303, file: !1304, line: 879, baseType: !791, size: 64, offset: 6848)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1303, file: !1304, line: 882, baseType: !791, size: 64, offset: 6912)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1303, file: !1304, line: 884, baseType: !227, size: 64, offset: 6976)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1303, file: !1304, line: 885, baseType: !227, size: 64, offset: 7040)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1303, file: !1304, line: 890, baseType: !227, size: 64, offset: 7104)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1303, file: !1304, line: 891, baseType: !1602, size: 128, offset: 7168)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1304, line: 242, size: 128, elements: !1603)
!1603 = !{!1604, !1605, !1606}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1602, file: !1304, line: 244, baseType: !227, size: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1602, file: !1304, line: 245, baseType: !227, size: 64, offset: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1602, file: !1304, line: 246, baseType: !866, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1303, file: !1304, line: 900, baseType: !418, size: 64, offset: 7296)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1303, file: !1304, line: 901, baseType: !418, size: 64, offset: 7360)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1303, file: !1304, line: 904, baseType: !227, size: 64, offset: 7424)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1303, file: !1304, line: 907, baseType: !227, size: 64, offset: 7488)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1303, file: !1304, line: 910, baseType: !418, size: 64, offset: 7552)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1303, file: !1304, line: 911, baseType: !418, size: 64, offset: 7616)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1303, file: !1304, line: 914, baseType: !1614, size: 640, offset: 7680)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1615, line: 123, size: 640, elements: !1616)
!1615 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1616 = !{!1617, !1623, !1624}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1614, file: !1615, line: 124, baseType: !1618, size: 576)
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1619, size: 576, elements: !369)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1615, line: 108, size: 192, elements: !1620)
!1620 = !{!1621, !1622}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1619, file: !1615, line: 109, baseType: !227, size: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1619, file: !1615, line: 110, baseType: !1429, size: 128, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1614, file: !1615, line: 125, baseType: !7, size: 32, offset: 576)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1614, file: !1615, line: 126, baseType: !7, size: 32, offset: 608)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1303, file: !1304, line: 917, baseType: !1626, size: 192, offset: 8320)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1615, line: 134, size: 192, elements: !1627)
!1627 = !{!1628, !1629}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1626, file: !1615, line: 135, baseType: !459, size: 128, align: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1626, file: !1615, line: 136, baseType: !7, size: 32, offset: 128)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1303, file: !1304, line: 923, baseType: !1631, size: 64, offset: 8512)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1633)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1634, line: 111, size: 1280, elements: !1635)
!1634 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1635 = !{!1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1655, !1656, !1657, !1658, !1659, !1660, !1767, !1768, !1769, !1770, !1796, !1799, !1809}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1633, file: !1634, line: 112, baseType: !833, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1633, file: !1634, line: 120, baseType: !521, size: 32, offset: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1633, file: !1634, line: 121, baseType: !529, size: 32, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1633, file: !1634, line: 122, baseType: !521, size: 32, offset: 96)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1633, file: !1634, line: 123, baseType: !529, size: 32, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1633, file: !1634, line: 124, baseType: !521, size: 32, offset: 160)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1633, file: !1634, line: 125, baseType: !529, size: 32, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1633, file: !1634, line: 126, baseType: !521, size: 32, offset: 224)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1633, file: !1634, line: 127, baseType: !529, size: 32, offset: 256)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1633, file: !1634, line: 128, baseType: !7, size: 32, offset: 288)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1633, file: !1634, line: 129, baseType: !1647, size: 64, offset: 320)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1648, line: 26, baseType: !1649)
!1648 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1648, line: 24, size: 64, elements: !1650)
!1650 = !{!1651}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1649, file: !1648, line: 25, baseType: !1652, size: 64)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !225, size: 64, elements: !1653)
!1653 = !{!1654}
!1654 = !DISubrange(count: 2)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1633, file: !1634, line: 130, baseType: !1647, size: 64, offset: 384)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1633, file: !1634, line: 131, baseType: !1647, size: 64, offset: 448)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1633, file: !1634, line: 132, baseType: !1647, size: 64, offset: 512)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1633, file: !1634, line: 133, baseType: !1647, size: 64, offset: 576)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1633, file: !1634, line: 135, baseType: !285, size: 8, offset: 640)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1633, file: !1634, line: 137, baseType: !1661, size: 64, offset: 704)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1663, line: 189, size: 1664, elements: !1664)
!1663 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1664 = !{!1665, !1666, !1669, !1674, !1675, !1678, !1679, !1684, !1685, !1686, !1687, !1689, !1690, !1691, !1692, !1693, !1731, !1752}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1662, file: !1663, line: 190, baseType: !1316, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1662, file: !1663, line: 191, baseType: !1667, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1663, line: 28, baseType: !1668)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !231, line: 98, baseType: !1528)
!1669 = !DIDerivedType(tag: DW_TAG_member, scope: !1662, file: !1663, line: 192, baseType: !1670, size: 192, offset: 64)
!1670 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1662, file: !1663, line: 192, size: 192, elements: !1671)
!1671 = !{!1672, !1673}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1670, file: !1663, line: 193, baseType: !238, size: 128)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1670, file: !1663, line: 194, baseType: !846, size: 192, align: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1662, file: !1663, line: 199, baseType: !853, size: 256, offset: 256)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1662, file: !1663, line: 200, baseType: !1676, size: 64, offset: 512)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1663, line: 200, flags: DIFlagFwdDecl)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1662, file: !1663, line: 201, baseType: !222, size: 64, offset: 576)
!1679 = !DIDerivedType(tag: DW_TAG_member, scope: !1662, file: !1663, line: 202, baseType: !1680, size: 64, offset: 640)
!1680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1662, file: !1663, line: 202, size: 64, elements: !1681)
!1681 = !{!1682, !1683}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1680, file: !1663, line: 203, baseType: !625, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1680, file: !1663, line: 204, baseType: !625, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1662, file: !1663, line: 206, baseType: !625, size: 64, offset: 704)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1662, file: !1663, line: 207, baseType: !521, size: 32, offset: 768)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1662, file: !1663, line: 208, baseType: !529, size: 32, offset: 800)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1662, file: !1663, line: 209, baseType: !1688, size: 32, offset: 832)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1663, line: 31, baseType: !645)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1662, file: !1663, line: 210, baseType: !410, size: 16, offset: 864)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1662, file: !1663, line: 211, baseType: !410, size: 16, offset: 880)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1662, file: !1663, line: 215, baseType: !1291, size: 16, offset: 896)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1662, file: !1663, line: 222, baseType: !418, size: 64, offset: 960)
!1693 = !DIDerivedType(tag: DW_TAG_member, scope: !1662, file: !1663, line: 239, baseType: !1694, size: 320, offset: 1024)
!1694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1662, file: !1663, line: 239, size: 320, elements: !1695)
!1695 = !{!1696, !1723}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1694, file: !1663, line: 240, baseType: !1697, size: 320)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1663, line: 108, size: 320, elements: !1698)
!1698 = !{!1699, !1700, !1712, !1715, !1722}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1697, file: !1663, line: 110, baseType: !418, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, scope: !1697, file: !1663, line: 111, baseType: !1701, size: 64, offset: 64)
!1701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1697, file: !1663, line: 111, size: 64, elements: !1702)
!1702 = !{!1703, !1711}
!1703 = !DIDerivedType(tag: DW_TAG_member, scope: !1701, file: !1663, line: 112, baseType: !1704, size: 64)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1701, file: !1663, line: 112, size: 64, elements: !1705)
!1705 = !{!1706, !1707}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1704, file: !1663, line: 114, baseType: !945, size: 16)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1704, file: !1663, line: 115, baseType: !1708, size: 48, offset: 16)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 48, elements: !1709)
!1709 = !{!1710}
!1710 = !DISubrange(count: 6)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1701, file: !1663, line: 121, baseType: !418, size: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1697, file: !1663, line: 123, baseType: !1713, size: 64, offset: 128)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64)
!1714 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1663, line: 96, flags: DIFlagFwdDecl)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1697, file: !1663, line: 124, baseType: !1716, size: 64, offset: 192)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1663, line: 102, size: 192, elements: !1718)
!1718 = !{!1719, !1720, !1721}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1717, file: !1663, line: 103, baseType: !459, size: 128, align: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1717, file: !1663, line: 104, baseType: !1316, size: 32, offset: 128)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1717, file: !1663, line: 105, baseType: !576, size: 8, offset: 160)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1697, file: !1663, line: 125, baseType: !309, size: 64, offset: 256)
!1723 = !DIDerivedType(tag: DW_TAG_member, scope: !1694, file: !1663, line: 241, baseType: !1724, size: 320)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1694, file: !1663, line: 241, size: 320, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729, !1730}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1724, file: !1663, line: 242, baseType: !418, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1724, file: !1663, line: 243, baseType: !418, size: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1724, file: !1663, line: 244, baseType: !1713, size: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1724, file: !1663, line: 245, baseType: !1716, size: 64, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1724, file: !1663, line: 246, baseType: !368, size: 64, offset: 256)
!1731 = !DIDerivedType(tag: DW_TAG_member, scope: !1662, file: !1663, line: 254, baseType: !1732, size: 256, offset: 1344)
!1732 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1662, file: !1663, line: 254, size: 256, elements: !1733)
!1733 = !{!1734, !1740}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1732, file: !1663, line: 255, baseType: !1735, size: 256)
!1735 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1663, line: 128, size: 256, elements: !1736)
!1736 = !{!1737, !1738}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1735, file: !1663, line: 129, baseType: !222, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1735, file: !1663, line: 130, baseType: !1739, size: 256)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !222, size: 256, elements: !1241)
!1740 = !DIDerivedType(tag: DW_TAG_member, scope: !1732, file: !1663, line: 256, baseType: !1741, size: 256)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1732, file: !1663, line: 256, size: 256, elements: !1742)
!1742 = !{!1743, !1744}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1741, file: !1663, line: 258, baseType: !238, size: 128)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1741, file: !1663, line: 259, baseType: !1745, size: 128, offset: 128)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1746, line: 22, size: 128, elements: !1747)
!1746 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1747 = !{!1748, !1751}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1745, file: !1746, line: 23, baseType: !1749, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1746, line: 23, flags: DIFlagFwdDecl)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1745, file: !1746, line: 24, baseType: !418, size: 64, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1662, file: !1663, line: 274, baseType: !1753, size: 64, offset: 1600)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1663, line: 170, size: 192, elements: !1755)
!1755 = !{!1756, !1765, !1766}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1754, file: !1663, line: 171, baseType: !1757, size: 64)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1663, line: 165, baseType: !1758)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!232, !1661, !1761, !1763, !1661}
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1714)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1735)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1754, file: !1663, line: 172, baseType: !1661, size: 64, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1754, file: !1663, line: 173, baseType: !1713, size: 64, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1633, file: !1634, line: 138, baseType: !1661, size: 64, offset: 768)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1633, file: !1634, line: 139, baseType: !1661, size: 64, offset: 832)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1633, file: !1634, line: 140, baseType: !1661, size: 64, offset: 896)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1633, file: !1634, line: 145, baseType: !1771, size: 64, offset: 960)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1773, line: 13, size: 896, elements: !1774)
!1773 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1774 = !{!1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1772, file: !1773, line: 14, baseType: !1316, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1772, file: !1773, line: 15, baseType: !833, size: 32, offset: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1772, file: !1773, line: 16, baseType: !833, size: 32, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1772, file: !1773, line: 21, baseType: !857, size: 64, offset: 128)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1772, file: !1773, line: 27, baseType: !418, size: 64, offset: 192)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1772, file: !1773, line: 28, baseType: !418, size: 64, offset: 256)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1772, file: !1773, line: 29, baseType: !857, size: 64, offset: 320)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1772, file: !1773, line: 32, baseType: !725, size: 128, offset: 384)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1772, file: !1773, line: 33, baseType: !521, size: 32, offset: 512)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1772, file: !1773, line: 37, baseType: !857, size: 64, offset: 576)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1772, file: !1773, line: 44, baseType: !1786, size: 256, offset: 640)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1787, line: 15, size: 256, elements: !1788)
!1787 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1788 = !{!1789, !1790, !1791, !1792, !1793, !1794, !1795}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1786, file: !1787, line: 16, baseType: !866)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1786, file: !1787, line: 18, baseType: !232, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1786, file: !1787, line: 19, baseType: !232, size: 32, offset: 32)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1786, file: !1787, line: 20, baseType: !232, size: 32, offset: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1786, file: !1787, line: 21, baseType: !232, size: 32, offset: 96)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1786, file: !1787, line: 22, baseType: !418, size: 64, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1786, file: !1787, line: 23, baseType: !418, size: 64, offset: 192)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1633, file: !1634, line: 146, baseType: !1797, size: 64, offset: 1024)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !809, line: 516, flags: DIFlagFwdDecl)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1633, file: !1634, line: 147, baseType: !1800, size: 64, offset: 1088)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1634, line: 25, size: 64, elements: !1802)
!1802 = !{!1803, !1804, !1805}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1801, file: !1634, line: 26, baseType: !833, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1801, file: !1634, line: 27, baseType: !232, size: 32, offset: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1801, file: !1634, line: 28, baseType: !1806, offset: 64)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, elements: !1807)
!1807 = !{!1808}
!1808 = !DISubrange(count: 0)
!1809 = !DIDerivedType(tag: DW_TAG_member, scope: !1633, file: !1634, line: 149, baseType: !1810, size: 128, offset: 1152)
!1810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1633, file: !1634, line: 149, size: 128, elements: !1811)
!1811 = !{!1812, !1813}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1810, file: !1634, line: 150, baseType: !232, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1810, file: !1634, line: 151, baseType: !459, size: 128, align: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1303, file: !1304, line: 926, baseType: !1631, size: 64, offset: 8576)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1303, file: !1304, line: 929, baseType: !1631, size: 64, offset: 8640)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1303, file: !1304, line: 933, baseType: !1661, size: 64, offset: 8704)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1303, file: !1304, line: 943, baseType: !1818, size: 128, offset: 8768)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 128, elements: !1819)
!1819 = !{!1820}
!1820 = !DISubrange(count: 16)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1303, file: !1304, line: 945, baseType: !1822, size: 64, offset: 8896)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1304, line: 49, flags: DIFlagFwdDecl)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1303, file: !1304, line: 956, baseType: !1825, size: 64, offset: 8960)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1304, line: 45, flags: DIFlagFwdDecl)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1303, file: !1304, line: 959, baseType: !1828, size: 64, offset: 9024)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1304, line: 959, flags: DIFlagFwdDecl)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1303, file: !1304, line: 962, baseType: !1831, size: 64, offset: 9088)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1304, line: 66, flags: DIFlagFwdDecl)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1303, file: !1304, line: 966, baseType: !1834, size: 64, offset: 9152)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1304, line: 50, flags: DIFlagFwdDecl)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1303, file: !1304, line: 969, baseType: !1837, size: 64, offset: 9216)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1839, line: 82, size: 7296, elements: !1840)
!1839 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1840 = !{!1841, !1842, !1843, !1844, !1845, !1846, !1847, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1876, !1885, !1886, !1888, !1889, !1890, !1893, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1923, !1924, !1931, !1932, !1933, !1934, !1935, !1936}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1838, file: !1839, line: 83, baseType: !1316, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1838, file: !1839, line: 84, baseType: !833, size: 32, offset: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1838, file: !1839, line: 85, baseType: !232, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1838, file: !1839, line: 86, baseType: !238, size: 128, offset: 128)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1838, file: !1839, line: 88, baseType: !1565, size: 128, offset: 256)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1838, file: !1839, line: 91, baseType: !1302, size: 64, offset: 384)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1838, file: !1839, line: 94, baseType: !1848, size: 192, offset: 448)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1849, line: 30, size: 192, elements: !1850)
!1849 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1850 = !{!1851, !1852}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1848, file: !1849, line: 31, baseType: !238, size: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1848, file: !1849, line: 32, baseType: !1853, size: 64, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1854, line: 25, baseType: !1855)
!1854 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1854, line: 23, size: 64, elements: !1856)
!1856 = !{!1857}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1855, file: !1854, line: 24, baseType: !1454, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1838, file: !1839, line: 97, baseType: !721, size: 64, offset: 640)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1838, file: !1839, line: 100, baseType: !232, size: 32, offset: 704)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1838, file: !1839, line: 106, baseType: !232, size: 32, offset: 736)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1838, file: !1839, line: 107, baseType: !1302, size: 64, offset: 768)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1838, file: !1839, line: 110, baseType: !232, size: 32, offset: 832)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1838, file: !1839, line: 111, baseType: !7, size: 32, offset: 864)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1838, file: !1839, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1838, file: !1839, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1838, file: !1839, line: 128, baseType: !232, size: 32, offset: 928)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1838, file: !1839, line: 129, baseType: !238, size: 128, offset: 960)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1838, file: !1839, line: 132, baseType: !1378, size: 512, offset: 1088)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1838, file: !1839, line: 133, baseType: !1386, size: 64, offset: 1600)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1838, file: !1839, line: 140, baseType: !1871, size: 256, offset: 1664)
!1871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1872, size: 256, elements: !1653)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1839, line: 38, size: 128, elements: !1873)
!1873 = !{!1874, !1875}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1872, file: !1839, line: 39, baseType: !227, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1872, file: !1839, line: 40, baseType: !227, size: 64, offset: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1838, file: !1839, line: 146, baseType: !1877, size: 192, offset: 1920)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1839, line: 66, size: 192, elements: !1878)
!1878 = !{!1879}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1877, file: !1839, line: 67, baseType: !1880, size: 192)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1839, line: 47, size: 192, elements: !1881)
!1881 = !{!1882, !1883, !1884}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1880, file: !1839, line: 48, baseType: !859, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1880, file: !1839, line: 49, baseType: !859, size: 64, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1880, file: !1839, line: 50, baseType: !859, size: 64, offset: 128)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1838, file: !1839, line: 150, baseType: !1614, size: 640, offset: 2112)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1838, file: !1839, line: 153, baseType: !1887, size: 256, offset: 2752)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1555, size: 256, elements: !1241)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1838, file: !1839, line: 159, baseType: !1555, size: 64, offset: 3008)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1838, file: !1839, line: 162, baseType: !232, size: 32, offset: 3072)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1838, file: !1839, line: 164, baseType: !1891, size: 64, offset: 3136)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1839, line: 164, flags: DIFlagFwdDecl)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1838, file: !1839, line: 175, baseType: !1894, size: 32, offset: 3200)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !482, line: 805, baseType: !1895)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 798, size: 32, elements: !1896)
!1896 = !{!1897, !1898}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1895, file: !482, line: 803, baseType: !481, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1895, file: !482, line: 804, baseType: !327, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1838, file: !1839, line: 176, baseType: !227, size: 64, offset: 3264)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1838, file: !1839, line: 176, baseType: !227, size: 64, offset: 3328)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1838, file: !1839, line: 176, baseType: !227, size: 64, offset: 3392)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1838, file: !1839, line: 176, baseType: !227, size: 64, offset: 3456)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1838, file: !1839, line: 177, baseType: !227, size: 64, offset: 3520)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1838, file: !1839, line: 178, baseType: !227, size: 64, offset: 3584)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1838, file: !1839, line: 179, baseType: !1602, size: 128, offset: 3648)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1838, file: !1839, line: 180, baseType: !418, size: 64, offset: 3776)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1838, file: !1839, line: 180, baseType: !418, size: 64, offset: 3840)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1838, file: !1839, line: 180, baseType: !418, size: 64, offset: 3904)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1838, file: !1839, line: 180, baseType: !418, size: 64, offset: 3968)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1838, file: !1839, line: 181, baseType: !418, size: 64, offset: 4032)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1838, file: !1839, line: 181, baseType: !418, size: 64, offset: 4096)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1838, file: !1839, line: 181, baseType: !418, size: 64, offset: 4160)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1838, file: !1839, line: 181, baseType: !418, size: 64, offset: 4224)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1838, file: !1839, line: 182, baseType: !418, size: 64, offset: 4288)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1838, file: !1839, line: 182, baseType: !418, size: 64, offset: 4352)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1838, file: !1839, line: 182, baseType: !418, size: 64, offset: 4416)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1838, file: !1839, line: 182, baseType: !418, size: 64, offset: 4480)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1838, file: !1839, line: 183, baseType: !418, size: 64, offset: 4544)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1838, file: !1839, line: 183, baseType: !418, size: 64, offset: 4608)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1838, file: !1839, line: 184, baseType: !1921, offset: 4672)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1922, line: 12, elements: !341)
!1922 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1838, file: !1839, line: 192, baseType: !229, size: 64, offset: 4672)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1838, file: !1839, line: 203, baseType: !1925, size: 2048, offset: 4736)
!1925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1926, size: 2048, elements: !1819)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1927, line: 43, size: 128, elements: !1928)
!1927 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1928 = !{!1929, !1930}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1926, file: !1927, line: 44, baseType: !417, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1926, file: !1927, line: 45, baseType: !417, size: 64, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1838, file: !1839, line: 220, baseType: !576, size: 8, offset: 6784)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1838, file: !1839, line: 221, baseType: !1291, size: 16, offset: 6800)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1838, file: !1839, line: 222, baseType: !1291, size: 16, offset: 6816)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1838, file: !1839, line: 224, baseType: !1060, size: 64, offset: 6848)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1838, file: !1839, line: 227, baseType: !1259, size: 192, offset: 6912)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1838, file: !1839, line: 233, baseType: !1259, size: 192, offset: 7104)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1303, file: !1304, line: 970, baseType: !1938, size: 64, offset: 9280)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1839, line: 20, size: 16576, elements: !1940)
!1940 = !{!1941, !1942, !1943, !1944}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1939, file: !1839, line: 21, baseType: !327)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1939, file: !1839, line: 22, baseType: !1316, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1939, file: !1839, line: 23, baseType: !1565, size: 128, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1939, file: !1839, line: 24, baseType: !1945, size: 16384, offset: 192)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1946, size: 16384, elements: !373)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1849, line: 49, size: 256, elements: !1947)
!1947 = !{!1948}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1946, file: !1849, line: 50, baseType: !1949, size: 256)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1849, line: 35, size: 256, elements: !1950)
!1950 = !{!1951, !1958, !1959, !1965}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1949, file: !1849, line: 37, baseType: !1952, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1953, line: 19, baseType: !1954)
!1953 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1953, line: 18, baseType: !1956)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{null, !232}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1949, file: !1849, line: 38, baseType: !418, size: 64, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1949, file: !1849, line: 44, baseType: !1960, size: 64, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1953, line: 22, baseType: !1961)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1953, line: 21, baseType: !1963)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{null}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1949, file: !1849, line: 46, baseType: !1853, size: 64, offset: 192)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1303, file: !1304, line: 971, baseType: !1853, size: 64, offset: 9344)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1303, file: !1304, line: 972, baseType: !1853, size: 64, offset: 9408)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1303, file: !1304, line: 974, baseType: !1853, size: 64, offset: 9472)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1303, file: !1304, line: 975, baseType: !1848, size: 192, offset: 9536)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1303, file: !1304, line: 976, baseType: !418, size: 64, offset: 9728)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1303, file: !1304, line: 977, baseType: !415, size: 64, offset: 9792)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1303, file: !1304, line: 978, baseType: !7, size: 32, offset: 9856)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1303, file: !1304, line: 980, baseType: !462, size: 64, offset: 9920)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1303, file: !1304, line: 989, baseType: !1975, size: 128, offset: 9984)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1976, line: 35, size: 128, elements: !1977)
!1976 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1977 = !{!1978, !1979, !1980}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1975, file: !1976, line: 36, baseType: !232, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1975, file: !1976, line: 37, baseType: !833, size: 32, offset: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1975, file: !1976, line: 38, baseType: !1981, size: 64, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!1982 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1976, line: 23, flags: DIFlagFwdDecl)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1303, file: !1304, line: 992, baseType: !227, size: 64, offset: 10112)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1303, file: !1304, line: 993, baseType: !227, size: 64, offset: 10176)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1303, file: !1304, line: 996, baseType: !327, offset: 10240)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1303, file: !1304, line: 999, baseType: !866, offset: 10240)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1303, file: !1304, line: 1001, baseType: !1988, size: 64, offset: 10240)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1304, line: 636, size: 64, elements: !1989)
!1989 = !{!1990}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1988, file: !1304, line: 637, baseType: !1991, size: 64)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1303, file: !1304, line: 1005, baseType: !838, size: 128, offset: 10304)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1303, file: !1304, line: 1007, baseType: !1302, size: 64, offset: 10432)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1303, file: !1304, line: 1009, baseType: !1995, size: 64, offset: 10496)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1304, line: 1009, flags: DIFlagFwdDecl)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1303, file: !1304, line: 1043, baseType: !222, size: 64, offset: 10560)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1303, file: !1304, line: 1046, baseType: !1999, size: 64, offset: 10624)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1304, line: 41, flags: DIFlagFwdDecl)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1303, file: !1304, line: 1050, baseType: !2002, size: 64, offset: 10688)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1304, line: 42, flags: DIFlagFwdDecl)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1303, file: !1304, line: 1054, baseType: !2005, size: 64, offset: 10752)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1304, line: 55, flags: DIFlagFwdDecl)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1303, file: !1304, line: 1056, baseType: !2008, size: 64, offset: 10816)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1304, line: 40, flags: DIFlagFwdDecl)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1303, file: !1304, line: 1058, baseType: !2011, size: 64, offset: 10880)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2013, line: 99, size: 704, elements: !2014)
!2013 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2014 = !{!2015, !2016, !2017, !2018, !2019, !2020, !2021, !2040, !2041}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2012, file: !2013, line: 100, baseType: !857, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2012, file: !2013, line: 101, baseType: !833, size: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2012, file: !2013, line: 102, baseType: !833, size: 32, offset: 96)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2012, file: !2013, line: 105, baseType: !327, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2012, file: !2013, line: 107, baseType: !410, size: 16, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2012, file: !2013, line: 109, baseType: !825, size: 128, offset: 192)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2012, file: !2013, line: 110, baseType: !2022, size: 64, offset: 320)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2013, line: 73, size: 448, elements: !2024)
!2024 = !{!2025, !2028, !2029, !2034, !2039}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2023, file: !2013, line: 74, baseType: !2026, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2013, line: 74, flags: DIFlagFwdDecl)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2023, file: !2013, line: 75, baseType: !2011, size: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, scope: !2023, file: !2013, line: 83, baseType: !2030, size: 128, offset: 128)
!2030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2023, file: !2013, line: 83, size: 128, elements: !2031)
!2031 = !{!2032, !2033}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2030, file: !2013, line: 84, baseType: !238, size: 128)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2030, file: !2013, line: 85, baseType: !1021, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, scope: !2023, file: !2013, line: 87, baseType: !2035, size: 128, offset: 256)
!2035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2023, file: !2013, line: 87, size: 128, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2035, file: !2013, line: 88, baseType: !725, size: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2035, file: !2013, line: 89, baseType: !459, size: 128, align: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2023, file: !2013, line: 92, baseType: !7, size: 32, offset: 384)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2012, file: !2013, line: 111, baseType: !721, size: 64, offset: 384)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2012, file: !2013, line: 113, baseType: !2042, size: 256, offset: 448)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2043, line: 102, size: 256, elements: !2044)
!2043 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2044 = !{!2045, !2046, !2047}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2042, file: !2043, line: 103, baseType: !857, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2042, file: !2043, line: 104, baseType: !238, size: 128, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2042, file: !2043, line: 105, baseType: !2048, size: 64, offset: 192)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2043, line: 21, baseType: !2049)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{null, !2052}
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1303, file: !1304, line: 1061, baseType: !2054, size: 64, offset: 10944)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1304, line: 43, flags: DIFlagFwdDecl)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1303, file: !1304, line: 1064, baseType: !418, size: 64, offset: 11008)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1303, file: !1304, line: 1065, baseType: !2058, size: 64, offset: 11072)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1849, line: 14, baseType: !2060)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1849, line: 12, size: 384, elements: !2061)
!2061 = !{!2062}
!2062 = !DIDerivedType(tag: DW_TAG_member, scope: !2060, file: !1849, line: 13, baseType: !2063, size: 384)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2060, file: !1849, line: 13, size: 384, elements: !2064)
!2064 = !{!2065, !2066, !2067, !2068}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2063, file: !1849, line: 13, baseType: !232, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2063, file: !1849, line: 13, baseType: !232, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2063, file: !1849, line: 13, baseType: !232, size: 32, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2063, file: !1849, line: 13, baseType: !2069, size: 256, offset: 128)
!2069 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2070, line: 32, size: 256, elements: !2071)
!2070 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2071 = !{!2072, !2077, !2090, !2096, !2105, !2125, !2130}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2069, file: !2070, line: 37, baseType: !2073, size: 64)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2069, file: !2070, line: 34, size: 64, elements: !2074)
!2074 = !{!2075, !2076}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2073, file: !2070, line: 35, baseType: !1544, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2073, file: !2070, line: 36, baseType: !527, size: 32, offset: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2069, file: !2070, line: 45, baseType: !2078, size: 192)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2069, file: !2070, line: 40, size: 192, elements: !2079)
!2079 = !{!2080, !2082, !2083, !2089}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2078, file: !2070, line: 41, baseType: !2081, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !401, line: 95, baseType: !232)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2078, file: !2070, line: 42, baseType: !232, size: 32, offset: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2078, file: !2070, line: 43, baseType: !2084, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2070, line: 11, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2070, line: 8, size: 64, elements: !2086)
!2086 = !{!2087, !2088}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2085, file: !2070, line: 9, baseType: !232, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2085, file: !2070, line: 10, baseType: !222, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2078, file: !2070, line: 44, baseType: !232, size: 32, offset: 128)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2069, file: !2070, line: 52, baseType: !2091, size: 128)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2069, file: !2070, line: 48, size: 128, elements: !2092)
!2092 = !{!2093, !2094, !2095}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2091, file: !2070, line: 49, baseType: !1544, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2091, file: !2070, line: 50, baseType: !527, size: 32, offset: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2091, file: !2070, line: 51, baseType: !2084, size: 64, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2069, file: !2070, line: 61, baseType: !2097, size: 256)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2069, file: !2070, line: 55, size: 256, elements: !2098)
!2098 = !{!2099, !2100, !2101, !2102, !2104}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2097, file: !2070, line: 56, baseType: !1544, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2097, file: !2070, line: 57, baseType: !527, size: 32, offset: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2097, file: !2070, line: 58, baseType: !232, size: 32, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2097, file: !2070, line: 59, baseType: !2103, size: 64, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !401, line: 94, baseType: !402)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2097, file: !2070, line: 60, baseType: !2103, size: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2069, file: !2070, line: 95, baseType: !2106, size: 256)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2069, file: !2070, line: 64, size: 256, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2106, file: !2070, line: 65, baseType: !222, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, scope: !2106, file: !2070, line: 77, baseType: !2110, size: 192, offset: 64)
!2110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2106, file: !2070, line: 77, size: 192, elements: !2111)
!2111 = !{!2112, !2113, !2120}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2110, file: !2070, line: 82, baseType: !1291, size: 16)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2110, file: !2070, line: 88, baseType: !2114, size: 192)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2110, file: !2070, line: 84, size: 192, elements: !2115)
!2115 = !{!2116, !2118, !2119}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2114, file: !2070, line: 85, baseType: !2117, size: 64)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 64, elements: !1416)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2114, file: !2070, line: 86, baseType: !222, size: 64, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2114, file: !2070, line: 87, baseType: !222, size: 64, offset: 128)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2110, file: !2070, line: 93, baseType: !2121, size: 96)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2110, file: !2070, line: 90, size: 96, elements: !2122)
!2122 = !{!2123, !2124}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2121, file: !2070, line: 91, baseType: !2117, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2121, file: !2070, line: 92, baseType: !225, size: 32, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2069, file: !2070, line: 101, baseType: !2126, size: 128)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2069, file: !2070, line: 98, size: 128, elements: !2127)
!2127 = !{!2128, !2129}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2126, file: !2070, line: 99, baseType: !403, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2126, file: !2070, line: 100, baseType: !232, size: 32, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2069, file: !2070, line: 108, baseType: !2131, size: 128)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2069, file: !2070, line: 104, size: 128, elements: !2132)
!2132 = !{!2133, !2134, !2135}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2131, file: !2070, line: 105, baseType: !222, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2131, file: !2070, line: 106, baseType: !232, size: 32, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2131, file: !2070, line: 107, baseType: !7, size: 32, offset: 96)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1303, file: !1304, line: 1067, baseType: !1921, offset: 11136)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1303, file: !1304, line: 1099, baseType: !2138, size: 64, offset: 11136)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1304, line: 56, flags: DIFlagFwdDecl)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1303, file: !1304, line: 1103, baseType: !238, size: 128, offset: 11200)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1303, file: !1304, line: 1104, baseType: !2142, size: 64, offset: 11328)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1304, line: 46, flags: DIFlagFwdDecl)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1303, file: !1304, line: 1105, baseType: !1259, size: 192, offset: 11392)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1303, file: !1304, line: 1106, baseType: !7, size: 32, offset: 11584)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1303, file: !1304, line: 1109, baseType: !2147, size: 128, offset: 11648)
!2147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2148, size: 128, elements: !1653)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1304, line: 51, flags: DIFlagFwdDecl)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1303, file: !1304, line: 1110, baseType: !1259, size: 192, offset: 11776)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1303, file: !1304, line: 1111, baseType: !238, size: 128, offset: 11968)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1303, file: !1304, line: 1173, baseType: !2153, size: 64, offset: 12096)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2155, line: 62, size: 256, align: 256, elements: !2156)
!2155 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2156 = !{!2157, !2158, !2159, !2164}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2154, file: !2155, line: 75, baseType: !225, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2154, file: !2155, line: 90, baseType: !225, size: 32, offset: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2154, file: !2155, line: 124, baseType: !2160, size: 64, offset: 64)
!2160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !2155, line: 109, size: 64, elements: !2161)
!2161 = !{!2162, !2163}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2160, file: !2155, line: 110, baseType: !228, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2160, file: !2155, line: 112, baseType: !228, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2154, file: !2155, line: 144, baseType: !225, size: 32, offset: 128)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1303, file: !1304, line: 1174, baseType: !223, size: 32, offset: 12160)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1303, file: !1304, line: 1179, baseType: !418, size: 64, offset: 12224)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1303, file: !1304, line: 1182, baseType: !2168, size: 128, offset: 12288)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1237, line: 76, size: 128, elements: !2169)
!2169 = !{!2170, !2175, !2176}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2168, file: !1237, line: 85, baseType: !2171, size: 64)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2172, line: 7, size: 64, elements: !2173)
!2172 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2171, file: !2172, line: 12, baseType: !1451, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2168, file: !1237, line: 88, baseType: !576, size: 8, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2168, file: !1237, line: 95, baseType: !576, size: 8, offset: 72)
!2177 = !DIDerivedType(tag: DW_TAG_member, scope: !1303, file: !1304, line: 1184, baseType: !2178, size: 128, offset: 12416)
!2178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1303, file: !1304, line: 1184, size: 128, elements: !2179)
!2179 = !{!2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2178, file: !1304, line: 1185, baseType: !1316, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2178, file: !1304, line: 1186, baseType: !459, size: 128, align: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1303, file: !1304, line: 1190, baseType: !2183, size: 64, offset: 12544)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1304, line: 53, flags: DIFlagFwdDecl)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1303, file: !1304, line: 1192, baseType: !2186, size: 128, offset: 12608)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1237, line: 64, size: 128, elements: !2187)
!2187 = !{!2188, !2189, !2190}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2186, file: !1237, line: 65, baseType: !807, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2186, file: !1237, line: 67, baseType: !225, size: 32, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2186, file: !1237, line: 68, baseType: !225, size: 32, offset: 96)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1303, file: !1304, line: 1206, baseType: !232, size: 32, offset: 12736)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1303, file: !1304, line: 1207, baseType: !232, size: 32, offset: 12768)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1303, file: !1304, line: 1209, baseType: !418, size: 64, offset: 12800)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1303, file: !1304, line: 1219, baseType: !227, size: 64, offset: 12864)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1303, file: !1304, line: 1220, baseType: !227, size: 64, offset: 12928)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1303, file: !1304, line: 1317, baseType: !232, size: 32, offset: 12992)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1303, file: !1304, line: 1319, baseType: !1302, size: 64, offset: 13056)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1303, file: !1304, line: 1322, baseType: !2199, size: 64, offset: 13120)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2201, line: 56, size: 512, elements: !2202)
!2201 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2202 = !{!2203, !2204, !2205, !2206, !2207, !2208, !2209, !2211}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2200, file: !2201, line: 57, baseType: !2199, size: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2200, file: !2201, line: 58, baseType: !222, size: 64, offset: 64)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2200, file: !2201, line: 59, baseType: !418, size: 64, offset: 128)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2200, file: !2201, line: 60, baseType: !418, size: 64, offset: 192)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2200, file: !2201, line: 61, baseType: !906, size: 64, offset: 256)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2200, file: !2201, line: 62, baseType: !7, size: 32, offset: 320)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2200, file: !2201, line: 63, baseType: !2210, size: 64, offset: 384)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !231, line: 153, baseType: !227)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2200, file: !2201, line: 64, baseType: !2212, size: 64, offset: 448)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1303, file: !1304, line: 1326, baseType: !1316, size: 32, offset: 13184)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1303, file: !1304, line: 1342, baseType: !222, size: 64, offset: 13248)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1303, file: !1304, line: 1343, baseType: !228, size: 64, offset: 13312)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1303, file: !1304, line: 1344, baseType: !227, size: 64, offset: 13376)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1303, file: !1304, line: 1345, baseType: !228, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1303, file: !1304, line: 1346, baseType: !228, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1303, file: !1304, line: 1347, baseType: !228, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1303, file: !1304, line: 1348, baseType: !459, size: 128, align: 64, offset: 13504)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1303, file: !1304, line: 1358, baseType: !2223, size: 34816, offset: 13824)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2224, line: 485, size: 34816, elements: !2225)
!2224 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2225 = !{!2226, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2255, !2256, !2257, !2258, !2259, !2260, !2263, !2264, !2265}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2223, file: !2224, line: 487, baseType: !2227, size: 192)
!2227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2228, size: 192, elements: !369)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2229, line: 16, size: 64, elements: !2230)
!2229 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2230 = !{!2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2228, file: !2229, line: 17, baseType: !945, size: 16)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2228, file: !2229, line: 18, baseType: !945, size: 16, offset: 16)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2228, file: !2229, line: 19, baseType: !945, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2228, file: !2229, line: 19, baseType: !945, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2228, file: !2229, line: 19, baseType: !945, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2228, file: !2229, line: 19, baseType: !945, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2228, file: !2229, line: 19, baseType: !945, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2228, file: !2229, line: 20, baseType: !945, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2228, file: !2229, line: 20, baseType: !945, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2228, file: !2229, line: 20, baseType: !945, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2228, file: !2229, line: 20, baseType: !945, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2228, file: !2229, line: 20, baseType: !945, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2228, file: !2229, line: 20, baseType: !945, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2223, file: !2224, line: 491, baseType: !418, size: 64, offset: 192)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2223, file: !2224, line: 495, baseType: !410, size: 16, offset: 256)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2223, file: !2224, line: 496, baseType: !410, size: 16, offset: 272)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2223, file: !2224, line: 497, baseType: !410, size: 16, offset: 288)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2223, file: !2224, line: 498, baseType: !410, size: 16, offset: 304)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2223, file: !2224, line: 502, baseType: !418, size: 64, offset: 320)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2223, file: !2224, line: 503, baseType: !418, size: 64, offset: 384)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2223, file: !2224, line: 514, baseType: !2252, size: 256, offset: 448)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2253, size: 256, elements: !1241)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2224, line: 483, flags: DIFlagFwdDecl)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2223, file: !2224, line: 516, baseType: !418, size: 64, offset: 704)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2223, file: !2224, line: 518, baseType: !418, size: 64, offset: 768)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2223, file: !2224, line: 520, baseType: !418, size: 64, offset: 832)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2223, file: !2224, line: 521, baseType: !418, size: 64, offset: 896)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2223, file: !2224, line: 522, baseType: !418, size: 64, offset: 960)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2223, file: !2224, line: 528, baseType: !2261, size: 64, offset: 1024)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2224, line: 10, flags: DIFlagFwdDecl)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2223, file: !2224, line: 535, baseType: !418, size: 64, offset: 1088)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2223, file: !2224, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2223, file: !2224, line: 540, baseType: !2266, size: 33280, offset: 1536)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2267, line: 317, size: 33280, elements: !2268)
!2267 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2268 = !{!2269, !2270, !2271}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2266, file: !2267, line: 330, baseType: !7, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2266, file: !2267, line: 337, baseType: !418, size: 64, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2266, file: !2267, line: 348, baseType: !2272, size: 32768, offset: 512)
!2272 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2267, line: 304, size: 32768, elements: !2273)
!2273 = !{!2274, !2289, !2328, !2378, !2391}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2272, file: !2267, line: 305, baseType: !2275, size: 896)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2267, line: 12, size: 896, elements: !2276)
!2276 = !{!2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2288}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2275, file: !2267, line: 13, baseType: !223, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2275, file: !2267, line: 14, baseType: !223, size: 32, offset: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2275, file: !2267, line: 15, baseType: !223, size: 32, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2275, file: !2267, line: 16, baseType: !223, size: 32, offset: 96)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2275, file: !2267, line: 17, baseType: !223, size: 32, offset: 128)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2275, file: !2267, line: 18, baseType: !223, size: 32, offset: 160)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2275, file: !2267, line: 19, baseType: !223, size: 32, offset: 192)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2275, file: !2267, line: 22, baseType: !2285, size: 640, offset: 224)
!2285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 640, elements: !2286)
!2286 = !{!2287}
!2287 = !DISubrange(count: 20)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2275, file: !2267, line: 25, baseType: !223, size: 32, offset: 864)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2272, file: !2267, line: 306, baseType: !2290, size: 4096, align: 128)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2267, line: 34, size: 4096, align: 128, elements: !2291)
!2291 = !{!2292, !2293, !2294, !2295, !2296, !2311, !2312, !2313, !2317, !2319, !2323}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2290, file: !2267, line: 35, baseType: !945, size: 16)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2290, file: !2267, line: 36, baseType: !945, size: 16, offset: 16)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2290, file: !2267, line: 37, baseType: !945, size: 16, offset: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2290, file: !2267, line: 38, baseType: !945, size: 16, offset: 48)
!2296 = !DIDerivedType(tag: DW_TAG_member, scope: !2290, file: !2267, line: 39, baseType: !2297, size: 128, offset: 64)
!2297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2290, file: !2267, line: 39, size: 128, elements: !2298)
!2298 = !{!2299, !2304}
!2299 = !DIDerivedType(tag: DW_TAG_member, scope: !2297, file: !2267, line: 40, baseType: !2300, size: 128)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2297, file: !2267, line: 40, size: 128, elements: !2301)
!2301 = !{!2302, !2303}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2300, file: !2267, line: 41, baseType: !227, size: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2300, file: !2267, line: 42, baseType: !227, size: 64, offset: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, scope: !2297, file: !2267, line: 44, baseType: !2305, size: 128)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2297, file: !2267, line: 44, size: 128, elements: !2306)
!2306 = !{!2307, !2308, !2309, !2310}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2305, file: !2267, line: 45, baseType: !223, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2305, file: !2267, line: 46, baseType: !223, size: 32, offset: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2305, file: !2267, line: 47, baseType: !223, size: 32, offset: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2305, file: !2267, line: 48, baseType: !223, size: 32, offset: 96)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2290, file: !2267, line: 51, baseType: !223, size: 32, offset: 192)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2290, file: !2267, line: 52, baseType: !223, size: 32, offset: 224)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2290, file: !2267, line: 55, baseType: !2314, size: 1024, offset: 256)
!2314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 1024, elements: !2315)
!2315 = !{!2316}
!2316 = !DISubrange(count: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2290, file: !2267, line: 58, baseType: !2318, size: 2048, offset: 1280)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 2048, elements: !373)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2290, file: !2267, line: 60, baseType: !2320, size: 384, offset: 3328)
!2320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 384, elements: !2321)
!2321 = !{!2322}
!2322 = !DISubrange(count: 12)
!2323 = !DIDerivedType(tag: DW_TAG_member, scope: !2290, file: !2267, line: 62, baseType: !2324, size: 384, offset: 3712)
!2324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2290, file: !2267, line: 62, size: 384, elements: !2325)
!2325 = !{!2326, !2327}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2324, file: !2267, line: 63, baseType: !2320, size: 384)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2324, file: !2267, line: 64, baseType: !2320, size: 384)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2272, file: !2267, line: 307, baseType: !2329, size: 1088)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2267, line: 79, size: 1088, elements: !2330)
!2330 = !{!2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2377}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2329, file: !2267, line: 80, baseType: !223, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2329, file: !2267, line: 81, baseType: !223, size: 32, offset: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2329, file: !2267, line: 82, baseType: !223, size: 32, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2329, file: !2267, line: 83, baseType: !223, size: 32, offset: 96)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2329, file: !2267, line: 84, baseType: !223, size: 32, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2329, file: !2267, line: 85, baseType: !223, size: 32, offset: 160)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2329, file: !2267, line: 86, baseType: !223, size: 32, offset: 192)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2329, file: !2267, line: 88, baseType: !2285, size: 640, offset: 224)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2329, file: !2267, line: 89, baseType: !283, size: 8, offset: 864)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2329, file: !2267, line: 90, baseType: !283, size: 8, offset: 872)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2329, file: !2267, line: 91, baseType: !283, size: 8, offset: 880)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2329, file: !2267, line: 92, baseType: !283, size: 8, offset: 888)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2329, file: !2267, line: 93, baseType: !283, size: 8, offset: 896)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2329, file: !2267, line: 94, baseType: !283, size: 8, offset: 904)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2329, file: !2267, line: 95, baseType: !2346, size: 64, offset: 960)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2348, line: 11, size: 128, elements: !2349)
!2348 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2349 = !{!2350, !2351}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2347, file: !2348, line: 12, baseType: !403, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2347, file: !2348, line: 13, baseType: !2352, size: 64, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2354, line: 56, size: 1344, elements: !2355)
!2354 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2355 = !{!2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2353, file: !2354, line: 61, baseType: !418, size: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2353, file: !2354, line: 62, baseType: !418, size: 64, offset: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2353, file: !2354, line: 63, baseType: !418, size: 64, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2353, file: !2354, line: 64, baseType: !418, size: 64, offset: 192)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2353, file: !2354, line: 65, baseType: !418, size: 64, offset: 256)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2353, file: !2354, line: 66, baseType: !418, size: 64, offset: 320)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2353, file: !2354, line: 68, baseType: !418, size: 64, offset: 384)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2353, file: !2354, line: 69, baseType: !418, size: 64, offset: 448)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2353, file: !2354, line: 70, baseType: !418, size: 64, offset: 512)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2353, file: !2354, line: 71, baseType: !418, size: 64, offset: 576)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2353, file: !2354, line: 72, baseType: !418, size: 64, offset: 640)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2353, file: !2354, line: 73, baseType: !418, size: 64, offset: 704)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2353, file: !2354, line: 74, baseType: !418, size: 64, offset: 768)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2353, file: !2354, line: 75, baseType: !418, size: 64, offset: 832)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2353, file: !2354, line: 76, baseType: !418, size: 64, offset: 896)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2353, file: !2354, line: 81, baseType: !418, size: 64, offset: 960)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2353, file: !2354, line: 83, baseType: !418, size: 64, offset: 1024)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2353, file: !2354, line: 84, baseType: !418, size: 64, offset: 1088)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2353, file: !2354, line: 85, baseType: !418, size: 64, offset: 1152)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2353, file: !2354, line: 86, baseType: !418, size: 64, offset: 1216)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2353, file: !2354, line: 87, baseType: !418, size: 64, offset: 1280)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2329, file: !2267, line: 96, baseType: !223, size: 32, offset: 1024)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2272, file: !2267, line: 308, baseType: !2379, size: 4608, align: 512)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2267, line: 289, size: 4608, align: 512, elements: !2380)
!2380 = !{!2381, !2382, !2389}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2379, file: !2267, line: 290, baseType: !2290, size: 4096, align: 128)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2379, file: !2267, line: 291, baseType: !2383, size: 512, offset: 4096)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2267, line: 268, size: 512, elements: !2384)
!2384 = !{!2385, !2386, !2387}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2383, file: !2267, line: 269, baseType: !227, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2383, file: !2267, line: 270, baseType: !227, size: 64, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2383, file: !2267, line: 271, baseType: !2388, size: 384, offset: 128)
!2388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 384, elements: !1709)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2379, file: !2267, line: 292, baseType: !2390, offset: 4608)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, elements: !1807)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2272, file: !2267, line: 309, baseType: !2392, size: 32768)
!2392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 32768, elements: !2393)
!2393 = !{!2394}
!2394 = !DISubrange(count: 4096)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1299, file: !809, line: 378, baseType: !2396, size: 64, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1295, file: !809, line: 384, baseType: !1586, size: 192, offset: 192)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1064, file: !809, line: 500, baseType: !327, offset: 6656)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1064, file: !809, line: 501, baseType: !2400, size: 64, offset: 6656)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !809, line: 387, flags: DIFlagFwdDecl)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1064, file: !809, line: 516, baseType: !1797, size: 64, offset: 6720)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1064, file: !809, line: 519, baseType: !446, size: 64, offset: 6784)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1064, file: !809, line: 521, baseType: !2405, size: 64, offset: 6848)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !809, line: 521, flags: DIFlagFwdDecl)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1064, file: !809, line: 545, baseType: !833, size: 32, offset: 6912)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1064, file: !809, line: 548, baseType: !576, size: 8, offset: 6944)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1064, file: !809, line: 550, baseType: !2410, offset: 6952)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2411, line: 142, elements: !341)
!2411 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1064, file: !809, line: 554, baseType: !2042, size: 256, offset: 6976)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1064, file: !809, line: 557, baseType: !223, size: 32, offset: 7232)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1061, file: !809, line: 565, baseType: !2415, offset: 7296)
!2415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !418, elements: !2416)
!2416 = !{!2417}
!2417 = !DISubrange(count: -1)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1057, file: !809, line: 151, baseType: !833, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1050, file: !809, line: 156, baseType: !327, offset: 256)
!2420 = !DIDerivedType(tag: DW_TAG_member, scope: !813, file: !809, line: 159, baseType: !2421, size: 128)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !813, file: !809, line: 159, size: 128, elements: !2422)
!2422 = !{!2423, !2487}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2421, file: !809, line: 161, baseType: !2424, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2426)
!2426 = !{!2427, !2437, !2458, !2459, !2460, !2461, !2462, !2474, !2475, !2476}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2425, file: !31, line: 111, baseType: !2428, size: 384)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2429)
!2429 = !{!2430, !2432, !2433, !2434, !2435, !2436}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2428, file: !31, line: 20, baseType: !2431, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !418)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2428, file: !31, line: 21, baseType: !2431, size: 64, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2428, file: !31, line: 22, baseType: !2431, size: 64, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2428, file: !31, line: 23, baseType: !418, size: 64, offset: 192)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2428, file: !31, line: 24, baseType: !418, size: 64, offset: 256)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2428, file: !31, line: 25, baseType: !418, size: 64, offset: 320)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2425, file: !31, line: 112, baseType: !2438, size: 64, offset: 384)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2440, line: 105, size: 128, elements: !2441)
!2440 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2441 = !{!2442, !2443}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2439, file: !2440, line: 110, baseType: !418, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2439, file: !2440, line: 118, baseType: !2444, size: 64, offset: 64)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2440, line: 95, size: 448, elements: !2446)
!2446 = !{!2447, !2448, !2453, !2454, !2455, !2456, !2457}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2445, file: !2440, line: 96, baseType: !857, size: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2445, file: !2440, line: 97, baseType: !2449, size: 64, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2440, line: 60, baseType: !2451)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{null, !2438}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2445, file: !2440, line: 98, baseType: !2449, size: 64, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2445, file: !2440, line: 99, baseType: !576, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2445, file: !2440, line: 100, baseType: !576, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2445, file: !2440, line: 101, baseType: !459, size: 128, align: 64, offset: 256)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2445, file: !2440, line: 102, baseType: !2438, size: 64, offset: 384)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2425, file: !31, line: 113, baseType: !2439, size: 128, offset: 448)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2425, file: !31, line: 114, baseType: !1586, size: 192, offset: 576)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2425, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2425, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2425, file: !31, line: 117, baseType: !2463, size: 64, offset: 832)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2465)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2466)
!2466 = !{!2467, !2468, !2472, !2473}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2465, file: !31, line: 73, baseType: !926, size: 64)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2465, file: !31, line: 78, baseType: !2469, size: 64, offset: 64)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{null, !2424}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2465, file: !31, line: 83, baseType: !2469, size: 64, offset: 128)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2465, file: !31, line: 89, baseType: !1113, size: 64, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2425, file: !31, line: 118, baseType: !222, size: 64, offset: 896)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2425, file: !31, line: 119, baseType: !232, size: 32, offset: 960)
!2476 = !DIDerivedType(tag: DW_TAG_member, scope: !2425, file: !31, line: 120, baseType: !2477, size: 128, offset: 1024)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2425, file: !31, line: 120, size: 128, elements: !2478)
!2478 = !{!2479, !2485}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2477, file: !31, line: 121, baseType: !2480, size: 128)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2481, line: 6, size: 128, elements: !2482)
!2481 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2480, file: !2481, line: 7, baseType: !227, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2480, file: !2481, line: 8, baseType: !227, size: 64, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2477, file: !31, line: 122, baseType: !2486)
!2486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2480, elements: !1807)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2421, file: !809, line: 162, baseType: !222, size: 64, offset: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !813, file: !809, line: 176, baseType: !459, size: 128, align: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, scope: !808, file: !809, line: 179, baseType: !2490, size: 32, offset: 384)
!2490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !808, file: !809, line: 179, size: 32, elements: !2491)
!2491 = !{!2492, !2493, !2494, !2495}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2490, file: !809, line: 184, baseType: !833, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2490, file: !809, line: 192, baseType: !7, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2490, file: !809, line: 194, baseType: !7, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2490, file: !809, line: 195, baseType: !232, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !808, file: !809, line: 199, baseType: !833, size: 32, offset: 416)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !743, file: !44, line: 1964, baseType: !2498, size: 64, offset: 1344)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2499 = !DISubroutineType(types: !2500)
!2500 = !{!403, !685, !2501}
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2503, line: 12, size: 256, elements: !2504)
!2503 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2504 = !{!2505, !2506, !2507, !2508, !2509}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2502, file: !2503, line: 13, baseType: !230, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2502, file: !2503, line: 16, baseType: !232, size: 32, offset: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2502, file: !2503, line: 23, baseType: !418, size: 64, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2502, file: !2503, line: 30, baseType: !418, size: 64, offset: 128)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2502, file: !2503, line: 33, baseType: !2510, size: 64, offset: 192)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !809, line: 27, flags: DIFlagFwdDecl)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !743, file: !44, line: 1966, baseType: !2498, size: 64, offset: 1408)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !686, file: !44, line: 1424, baseType: !2514, size: 64, offset: 448)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64)
!2515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2516)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2517)
!2517 = !{!2518, !2564, !2568, !2572, !2573, !2574, !2575, !2576, !2581, !2586, !2590}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2516, file: !38, line: 323, baseType: !2519, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{!232, !2522}
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2549, !2550, !2551}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2523, file: !38, line: 295, baseType: !725, size: 128)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2523, file: !38, line: 296, baseType: !238, size: 128, offset: 128)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2523, file: !38, line: 297, baseType: !238, size: 128, offset: 256)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2523, file: !38, line: 298, baseType: !238, size: 128, offset: 384)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2523, file: !38, line: 299, baseType: !1259, size: 192, offset: 512)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2523, file: !38, line: 300, baseType: !327, offset: 704)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2523, file: !38, line: 301, baseType: !833, size: 32, offset: 704)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2523, file: !38, line: 302, baseType: !685, size: 64, offset: 768)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2523, file: !38, line: 303, baseType: !2534, size: 64, offset: 832)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2535)
!2535 = !{!2536, !2548}
!2536 = !DIDerivedType(tag: DW_TAG_member, scope: !2534, file: !38, line: 69, baseType: !2537, size: 32)
!2537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2534, file: !38, line: 69, size: 32, elements: !2538)
!2538 = !{!2539, !2540, !2541}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2537, file: !38, line: 70, baseType: !521, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2537, file: !38, line: 71, baseType: !529, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2537, file: !38, line: 72, baseType: !2542, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2543, line: 24, baseType: !2544)
!2543 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2543, line: 22, size: 32, elements: !2545)
!2545 = !{!2546}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2544, file: !2543, line: 23, baseType: !2547, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2543, line: 20, baseType: !527)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2534, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2523, file: !38, line: 304, baseType: !617, size: 64, offset: 896)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2523, file: !38, line: 305, baseType: !418, size: 64, offset: 960)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2523, file: !38, line: 306, baseType: !2552, size: 576, offset: 1024)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2553)
!2553 = !{!2554, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2552, file: !38, line: 206, baseType: !2555, size: 64)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !619)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2552, file: !38, line: 207, baseType: !2555, size: 64, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2552, file: !38, line: 208, baseType: !2555, size: 64, offset: 128)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2552, file: !38, line: 209, baseType: !2555, size: 64, offset: 192)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2552, file: !38, line: 210, baseType: !2555, size: 64, offset: 256)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2552, file: !38, line: 211, baseType: !2555, size: 64, offset: 320)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2552, file: !38, line: 212, baseType: !2555, size: 64, offset: 384)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2552, file: !38, line: 213, baseType: !625, size: 64, offset: 448)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2552, file: !38, line: 214, baseType: !625, size: 64, offset: 512)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2516, file: !38, line: 324, baseType: !2565, size: 64, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2566 = !DISubroutineType(types: !2567)
!2567 = !{!2522, !685, !232}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2516, file: !38, line: 325, baseType: !2569, size: 64, offset: 128)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = !DISubroutineType(types: !2571)
!2571 = !{null, !2522}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2516, file: !38, line: 326, baseType: !2519, size: 64, offset: 192)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2516, file: !38, line: 327, baseType: !2519, size: 64, offset: 256)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2516, file: !38, line: 328, baseType: !2519, size: 64, offset: 320)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2516, file: !38, line: 329, baseType: !771, size: 64, offset: 384)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2516, file: !38, line: 332, baseType: !2577, size: 64, offset: 448)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!2580, !515}
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2516, file: !38, line: 333, baseType: !2582, size: 64, offset: 512)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 64)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{!232, !515, !2585}
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2516, file: !38, line: 335, baseType: !2587, size: 64, offset: 576)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64)
!2588 = !DISubroutineType(types: !2589)
!2589 = !{!232, !515, !2580}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2516, file: !38, line: 337, baseType: !2591, size: 64, offset: 640)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{!232, !685, !2594}
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !686, file: !44, line: 1425, baseType: !2596, size: 64, offset: 512)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2598)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2599)
!2599 = !{!2600, !2604, !2605, !2609, !2610, !2611, !2626, !2649, !2653, !2654, !2677}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2598, file: !38, line: 429, baseType: !2601, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = !DISubroutineType(types: !2603)
!2603 = !{!232, !685, !232, !232, !635}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2598, file: !38, line: 430, baseType: !771, size: 64, offset: 64)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2598, file: !38, line: 431, baseType: !2606, size: 64, offset: 128)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = !DISubroutineType(types: !2608)
!2608 = !{!232, !685, !7}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2598, file: !38, line: 432, baseType: !2606, size: 64, offset: 192)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2598, file: !38, line: 433, baseType: !771, size: 64, offset: 256)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2598, file: !38, line: 434, baseType: !2612, size: 64, offset: 320)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!232, !685, !232, !2615}
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2617)
!2617 = !{!2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2616, file: !38, line: 416, baseType: !232, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2616, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2616, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2616, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2616, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2616, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2616, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2616, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2598, file: !38, line: 435, baseType: !2627, size: 64, offset: 384)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!232, !685, !2534, !2630}
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2632)
!2632 = !{!2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2631, file: !38, line: 344, baseType: !232, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2631, file: !38, line: 345, baseType: !227, size: 64, offset: 64)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2631, file: !38, line: 346, baseType: !227, size: 64, offset: 128)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2631, file: !38, line: 347, baseType: !227, size: 64, offset: 192)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2631, file: !38, line: 348, baseType: !227, size: 64, offset: 256)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2631, file: !38, line: 349, baseType: !227, size: 64, offset: 320)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2631, file: !38, line: 350, baseType: !227, size: 64, offset: 384)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2631, file: !38, line: 351, baseType: !863, size: 64, offset: 448)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2631, file: !38, line: 353, baseType: !863, size: 64, offset: 512)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2631, file: !38, line: 354, baseType: !232, size: 32, offset: 576)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2631, file: !38, line: 355, baseType: !232, size: 32, offset: 608)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2631, file: !38, line: 356, baseType: !227, size: 64, offset: 640)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2631, file: !38, line: 357, baseType: !227, size: 64, offset: 704)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2631, file: !38, line: 358, baseType: !227, size: 64, offset: 768)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2631, file: !38, line: 359, baseType: !863, size: 64, offset: 832)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2631, file: !38, line: 360, baseType: !232, size: 32, offset: 896)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2598, file: !38, line: 436, baseType: !2650, size: 64, offset: 448)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{!232, !685, !2594, !2630}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2598, file: !38, line: 438, baseType: !2627, size: 64, offset: 512)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2598, file: !38, line: 439, baseType: !2655, size: 64, offset: 576)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{!232, !685, !2658}
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2660)
!2660 = !{!2661, !2662}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2659, file: !38, line: 410, baseType: !7, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2659, file: !38, line: 411, baseType: !2663, size: 1344, offset: 64)
!2663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2664, size: 1344, elements: !369)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2665)
!2665 = !{!2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2676}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2664, file: !38, line: 396, baseType: !7, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2664, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2664, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2664, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2664, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2664, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2664, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2664, file: !38, line: 404, baseType: !229, size: 64, offset: 256)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2664, file: !38, line: 405, baseType: !2675, size: 64, offset: 320)
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !231, line: 126, baseType: !227)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2664, file: !38, line: 406, baseType: !2675, size: 64, offset: 384)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2598, file: !38, line: 440, baseType: !2606, size: 64, offset: 640)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !686, file: !44, line: 1426, baseType: !2679, size: 64, offset: 576)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2681)
!2681 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !686, file: !44, line: 1427, baseType: !418, size: 64, offset: 640)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !686, file: !44, line: 1428, baseType: !418, size: 64, offset: 704)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !686, file: !44, line: 1429, baseType: !418, size: 64, offset: 768)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !686, file: !44, line: 1430, baseType: !476, size: 64, offset: 832)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !686, file: !44, line: 1431, baseType: !853, size: 256, offset: 896)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !686, file: !44, line: 1432, baseType: !232, size: 32, offset: 1152)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !686, file: !44, line: 1433, baseType: !833, size: 32, offset: 1184)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !686, file: !44, line: 1437, baseType: !2690, size: 64, offset: 1216)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2693)
!2693 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !686, file: !44, line: 1449, baseType: !2695, size: 64, offset: 1280)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !492, line: 34, size: 64, elements: !2696)
!2696 = !{!2697}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2695, file: !492, line: 35, baseType: !495, size: 64)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !686, file: !44, line: 1450, baseType: !238, size: 128, offset: 1344)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !686, file: !44, line: 1451, baseType: !2700, size: 64, offset: 1472)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !686, file: !44, line: 1452, baseType: !2008, size: 64, offset: 1536)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !686, file: !44, line: 1453, baseType: !2704, size: 64, offset: 1600)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64)
!2705 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !686, file: !44, line: 1454, baseType: !725, size: 128, offset: 1664)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !686, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !686, file: !44, line: 1456, baseType: !2709, size: 2432, offset: 1856)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2710)
!2710 = !{!2711, !2712, !2713, !2715, !2747}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2709, file: !38, line: 519, baseType: !7, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2709, file: !38, line: 520, baseType: !853, size: 256, offset: 64)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2709, file: !38, line: 521, baseType: !2714, size: 192, offset: 320)
!2714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 192, elements: !369)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2709, file: !38, line: 522, baseType: !2716, size: 1728, offset: 512)
!2716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2717, size: 1728, elements: !369)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2718)
!2718 = !{!2719, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2717, file: !38, line: 223, baseType: !2720, size: 64)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2722)
!2722 = !{!2723, !2724, !2737, !2738}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2721, file: !38, line: 444, baseType: !232, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2721, file: !38, line: 445, baseType: !2725, size: 64, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2727)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2728)
!2728 = !{!2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2727, file: !38, line: 311, baseType: !771, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2727, file: !38, line: 312, baseType: !771, size: 64, offset: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2727, file: !38, line: 313, baseType: !771, size: 64, offset: 128)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2727, file: !38, line: 314, baseType: !771, size: 64, offset: 192)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2727, file: !38, line: 315, baseType: !2519, size: 64, offset: 256)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2727, file: !38, line: 316, baseType: !2519, size: 64, offset: 320)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2727, file: !38, line: 317, baseType: !2519, size: 64, offset: 384)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2727, file: !38, line: 318, baseType: !2591, size: 64, offset: 448)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2721, file: !38, line: 446, baseType: !305, size: 64, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2721, file: !38, line: 447, baseType: !2720, size: 64, offset: 192)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2717, file: !38, line: 224, baseType: !232, size: 32, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2717, file: !38, line: 226, baseType: !238, size: 128, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2717, file: !38, line: 227, baseType: !418, size: 64, offset: 256)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2717, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2717, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2717, file: !38, line: 230, baseType: !2555, size: 64, offset: 384)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2717, file: !38, line: 231, baseType: !2555, size: 64, offset: 448)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2717, file: !38, line: 232, baseType: !222, size: 64, offset: 512)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2709, file: !38, line: 523, baseType: !2748, size: 192, offset: 2240)
!2748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2725, size: 192, elements: !369)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !686, file: !44, line: 1458, baseType: !2750, size: 2112, offset: 4288)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2751)
!2751 = !{!2752, !2753, !2754}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2750, file: !44, line: 1411, baseType: !232, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2750, file: !44, line: 1412, baseType: !1565, size: 128, offset: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2750, file: !44, line: 1413, baseType: !2755, size: 1920, offset: 192)
!2755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2756, size: 1920, elements: !369)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2757, line: 12, size: 640, elements: !2758)
!2757 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2758 = !{!2759, !2767, !2769, !2774, !2775}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2756, file: !2757, line: 13, baseType: !2760, size: 320)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2761, line: 17, size: 320, elements: !2762)
!2761 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2762 = !{!2763, !2764, !2765, !2766}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2760, file: !2761, line: 18, baseType: !232, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2760, file: !2761, line: 19, baseType: !232, size: 32, offset: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2760, file: !2761, line: 20, baseType: !1565, size: 128, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2760, file: !2761, line: 22, baseType: !459, size: 128, align: 64, offset: 192)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2756, file: !2757, line: 14, baseType: !2768, size: 64, offset: 320)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2756, file: !2757, line: 15, baseType: !2770, size: 64, offset: 384)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2771, line: 16, size: 64, elements: !2772)
!2771 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2772 = !{!2773}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2770, file: !2771, line: 17, baseType: !1302, size: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2756, file: !2757, line: 16, baseType: !1565, size: 128, offset: 448)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2756, file: !2757, line: 17, baseType: !833, size: 32, offset: 576)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !686, file: !44, line: 1465, baseType: !222, size: 64, offset: 6400)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !686, file: !44, line: 1468, baseType: !223, size: 32, offset: 6464)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !686, file: !44, line: 1470, baseType: !625, size: 64, offset: 6528)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !686, file: !44, line: 1471, baseType: !625, size: 64, offset: 6592)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !686, file: !44, line: 1473, baseType: !225, size: 32, offset: 6656)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !686, file: !44, line: 1474, baseType: !2782, size: 64, offset: 6720)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !686, file: !44, line: 1477, baseType: !2785, size: 256, offset: 6784)
!2785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 256, elements: !2315)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !686, file: !44, line: 1478, baseType: !2787, size: 128, offset: 7040)
!2787 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2788, line: 18, baseType: !2789)
!2788 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2788, line: 16, size: 128, elements: !2790)
!2790 = !{!2791}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2789, file: !2788, line: 17, baseType: !2792, size: 128)
!2792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 128, elements: !1819)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !686, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !686, file: !44, line: 1481, baseType: !2795, size: 32, offset: 7200)
!2795 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !231, line: 150, baseType: !7)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !686, file: !44, line: 1487, baseType: !1259, size: 192, offset: 7232)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !686, file: !44, line: 1493, baseType: !309, size: 64, offset: 7424)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !686, file: !44, line: 1495, baseType: !2799, size: 64, offset: 7488)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2801)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !474, line: 135, size: 1024, align: 512, elements: !2802)
!2802 = !{!2803, !2807, !2808, !2815, !2821, !2825, !2829, !2833, !2834, !2838, !2842, !2847, !2851}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2801, file: !474, line: 136, baseType: !2804, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DISubroutineType(types: !2806)
!2806 = !{!232, !476, !7}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2801, file: !474, line: 137, baseType: !2804, size: 64, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2801, file: !474, line: 138, baseType: !2809, size: 64, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = !DISubroutineType(types: !2811)
!2811 = !{!232, !2812, !2814}
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !477)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2801, file: !474, line: 139, baseType: !2816, size: 64, offset: 192)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!232, !2812, !7, !309, !2819}
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !500)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2801, file: !474, line: 141, baseType: !2822, size: 64, offset: 256)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{!232, !2812}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2801, file: !474, line: 142, baseType: !2826, size: 64, offset: 320)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2827 = !DISubroutineType(types: !2828)
!2828 = !{!232, !476}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2801, file: !474, line: 143, baseType: !2830, size: 64, offset: 384)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 64)
!2831 = !DISubroutineType(types: !2832)
!2832 = !{null, !476}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2801, file: !474, line: 144, baseType: !2830, size: 64, offset: 448)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2801, file: !474, line: 145, baseType: !2835, size: 64, offset: 512)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DISubroutineType(types: !2837)
!2837 = !{null, !476, !515}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2801, file: !474, line: 146, baseType: !2839, size: 64, offset: 576)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{!368, !476, !368, !232}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2801, file: !474, line: 147, baseType: !2843, size: 64, offset: 640)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{!472, !2846}
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2801, file: !474, line: 148, baseType: !2848, size: 64, offset: 704)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{!232, !635, !576}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2801, file: !474, line: 149, baseType: !2852, size: 64, offset: 768)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!476, !476, !2855}
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !686, file: !44, line: 1500, baseType: !232, size: 32, offset: 7552)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !686, file: !44, line: 1502, baseType: !2859, size: 448, offset: 7616)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2503, line: 60, size: 448, elements: !2860)
!2860 = !{!2861, !2866, !2867, !2868, !2869, !2870, !2871}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2859, file: !2503, line: 61, baseType: !2862, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{!418, !2865, !2501}
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2859, file: !2503, line: 63, baseType: !2862, size: 64, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2859, file: !2503, line: 66, baseType: !403, size: 64, offset: 128)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2859, file: !2503, line: 67, baseType: !232, size: 32, offset: 192)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2859, file: !2503, line: 68, baseType: !7, size: 32, offset: 224)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2859, file: !2503, line: 71, baseType: !238, size: 128, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2859, file: !2503, line: 77, baseType: !2872, size: 64, offset: 384)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !686, file: !44, line: 1505, baseType: !857, size: 64, offset: 8064)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !686, file: !44, line: 1508, baseType: !857, size: 64, offset: 8128)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !686, file: !44, line: 1511, baseType: !232, size: 32, offset: 8192)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !686, file: !44, line: 1514, baseType: !995, size: 32, offset: 8224)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !686, file: !44, line: 1517, baseType: !2878, size: 64, offset: 8256)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2043, line: 18, flags: DIFlagFwdDecl)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !686, file: !44, line: 1518, baseType: !721, size: 64, offset: 8320)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !686, file: !44, line: 1525, baseType: !1797, size: 64, offset: 8384)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !686, file: !44, line: 1532, baseType: !2883, size: 64, offset: 8448)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2884, line: 52, size: 64, elements: !2885)
!2884 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2885 = !{!2886}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2883, file: !2884, line: 53, baseType: !2887, size: 64)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2884, line: 40, size: 256, elements: !2889)
!2889 = !{!2890, !2891, !2896}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2888, file: !2884, line: 42, baseType: !327)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2888, file: !2884, line: 44, baseType: !2892, size: 192)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2884, line: 28, size: 192, elements: !2893)
!2893 = !{!2894, !2895}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2892, file: !2884, line: 29, baseType: !238, size: 128)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2892, file: !2884, line: 31, baseType: !403, size: 64, offset: 128)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2888, file: !2884, line: 49, baseType: !403, size: 64, offset: 192)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !686, file: !44, line: 1533, baseType: !2883, size: 64, offset: 8512)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !686, file: !44, line: 1534, baseType: !459, size: 128, align: 64, offset: 8576)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !686, file: !44, line: 1535, baseType: !2042, size: 256, offset: 8704)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !686, file: !44, line: 1537, baseType: !1259, size: 192, offset: 8960)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !686, file: !44, line: 1542, baseType: !232, size: 32, offset: 9152)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !686, file: !44, line: 1545, baseType: !327, offset: 9184)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !686, file: !44, line: 1546, baseType: !238, size: 128, offset: 9216)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !686, file: !44, line: 1548, baseType: !327, offset: 9344)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !686, file: !44, line: 1549, baseType: !238, size: 128, offset: 9344)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !516, file: !44, line: 624, baseType: !820, size: 64, offset: 256)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !516, file: !44, line: 631, baseType: !418, size: 64, offset: 320)
!2908 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !44, line: 639, baseType: !2909, size: 32, offset: 384)
!2909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !516, file: !44, line: 639, size: 32, elements: !2910)
!2910 = !{!2911, !2913}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2909, file: !44, line: 640, baseType: !2912, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2909, file: !44, line: 641, baseType: !7, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !516, file: !44, line: 643, baseType: !599, size: 32, offset: 416)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !516, file: !44, line: 644, baseType: !617, size: 64, offset: 448)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !516, file: !44, line: 645, baseType: !621, size: 128, offset: 512)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !516, file: !44, line: 646, baseType: !621, size: 128, offset: 640)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !516, file: !44, line: 647, baseType: !621, size: 128, offset: 768)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !516, file: !44, line: 648, baseType: !327, offset: 896)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !516, file: !44, line: 649, baseType: !410, size: 16, offset: 896)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !516, file: !44, line: 650, baseType: !283, size: 8, offset: 912)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !516, file: !44, line: 651, baseType: !283, size: 8, offset: 920)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !516, file: !44, line: 652, baseType: !2675, size: 64, offset: 960)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !516, file: !44, line: 659, baseType: !418, size: 64, offset: 1024)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !516, file: !44, line: 660, baseType: !853, size: 256, offset: 1088)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !516, file: !44, line: 662, baseType: !418, size: 64, offset: 1344)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !516, file: !44, line: 663, baseType: !418, size: 64, offset: 1408)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !516, file: !44, line: 665, baseType: !725, size: 128, offset: 1472)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !516, file: !44, line: 666, baseType: !238, size: 128, offset: 1600)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !516, file: !44, line: 675, baseType: !238, size: 128, offset: 1728)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !516, file: !44, line: 676, baseType: !238, size: 128, offset: 1856)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !516, file: !44, line: 677, baseType: !238, size: 128, offset: 1984)
!2933 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !44, line: 678, baseType: !2934, size: 128, offset: 2112)
!2934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !516, file: !44, line: 678, size: 128, elements: !2935)
!2935 = !{!2936, !2937}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2934, file: !44, line: 679, baseType: !721, size: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2934, file: !44, line: 680, baseType: !459, size: 128, align: 64)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !516, file: !44, line: 682, baseType: !859, size: 64, offset: 2240)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !516, file: !44, line: 683, baseType: !859, size: 64, offset: 2304)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !516, file: !44, line: 684, baseType: !833, size: 32, offset: 2368)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !516, file: !44, line: 685, baseType: !833, size: 32, offset: 2400)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !516, file: !44, line: 686, baseType: !833, size: 32, offset: 2432)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !516, file: !44, line: 688, baseType: !833, size: 32, offset: 2464)
!2944 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !44, line: 690, baseType: !2945, size: 64, offset: 2496)
!2945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !516, file: !44, line: 690, size: 64, elements: !2946)
!2946 = !{!2947, !3170}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2945, file: !44, line: 691, baseType: !2948, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2950)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2951)
!2951 = !{!2952, !2953, !2957, !2962, !2966, !2967, !2968, !2972, !2985, !2986, !2994, !2998, !2999, !3003, !3004, !3008, !3013, !3014, !3018, !3022, !3130, !3134, !3135, !3139, !3140, !3144, !3148, !3153, !3157, !3161, !3165, !3169}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2950, file: !44, line: 1823, baseType: !305, size: 64)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2950, file: !44, line: 1824, baseType: !2954, size: 64, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!617, !446, !617, !232}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2950, file: !44, line: 1825, baseType: !2958, size: 64, offset: 128)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 64)
!2959 = !DISubroutineType(types: !2960)
!2960 = !{!399, !446, !368, !415, !2961}
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2950, file: !44, line: 1826, baseType: !2963, size: 64, offset: 192)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DISubroutineType(types: !2965)
!2965 = !{!399, !446, !309, !415, !2961}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2950, file: !44, line: 1827, baseType: !930, size: 64, offset: 256)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2950, file: !44, line: 1828, baseType: !930, size: 64, offset: 320)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2950, file: !44, line: 1829, baseType: !2969, size: 64, offset: 384)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{!232, !933, !576}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2950, file: !44, line: 1830, baseType: !2973, size: 64, offset: 448)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{!232, !446, !2976}
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2978)
!2978 = !{!2979, !2984}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2977, file: !44, line: 1777, baseType: !2980, size: 64)
!2980 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2981)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DISubroutineType(types: !2983)
!2983 = !{!232, !2976, !309, !232, !617, !227, !7}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2977, file: !44, line: 1778, baseType: !617, size: 64, offset: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2950, file: !44, line: 1831, baseType: !2973, size: 64, offset: 512)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2950, file: !44, line: 1832, baseType: !2987, size: 64, offset: 576)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{!2990, !446, !2992}
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2991, line: 52, baseType: !7)
!2991 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !705, line: 27, flags: DIFlagFwdDecl)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2950, file: !44, line: 1833, baseType: !2995, size: 64, offset: 640)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!403, !446, !7, !418}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2950, file: !44, line: 1834, baseType: !2995, size: 64, offset: 704)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2950, file: !44, line: 1835, baseType: !3000, size: 64, offset: 768)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!232, !446, !1067}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2950, file: !44, line: 1836, baseType: !418, size: 64, offset: 832)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2950, file: !44, line: 1837, baseType: !3005, size: 64, offset: 896)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!232, !515, !446}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2950, file: !44, line: 1838, baseType: !3009, size: 64, offset: 960)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DISubroutineType(types: !3011)
!3011 = !{!232, !446, !3012}
!3012 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !222)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2950, file: !44, line: 1839, baseType: !3005, size: 64, offset: 1024)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2950, file: !44, line: 1840, baseType: !3015, size: 64, offset: 1088)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{!232, !446, !617, !617, !232}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2950, file: !44, line: 1841, baseType: !3019, size: 64, offset: 1152)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{!232, !232, !446, !232}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2950, file: !44, line: 1842, baseType: !3023, size: 64, offset: 1216)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{!232, !446, !232, !3026}
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3028)
!3028 = !{!3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3060, !3061, !3062, !3075, !3106}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3027, file: !44, line: 1063, baseType: !3026, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3027, file: !44, line: 1064, baseType: !238, size: 128, offset: 64)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3027, file: !44, line: 1065, baseType: !725, size: 128, offset: 192)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3027, file: !44, line: 1066, baseType: !238, size: 128, offset: 320)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3027, file: !44, line: 1069, baseType: !238, size: 128, offset: 448)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3027, file: !44, line: 1072, baseType: !3012, size: 64, offset: 576)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3027, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3027, file: !44, line: 1074, baseType: !285, size: 8, offset: 672)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3027, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3027, file: !44, line: 1076, baseType: !232, size: 32, offset: 736)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3027, file: !44, line: 1077, baseType: !1565, size: 128, offset: 768)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3027, file: !44, line: 1078, baseType: !446, size: 64, offset: 896)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3027, file: !44, line: 1079, baseType: !617, size: 64, offset: 960)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3027, file: !44, line: 1080, baseType: !617, size: 64, offset: 1024)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3027, file: !44, line: 1082, baseType: !3044, size: 64, offset: 1088)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3046)
!3046 = !{!3047, !3055, !3056, !3057, !3058, !3059}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3045, file: !44, line: 1315, baseType: !3048)
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3049, line: 20, baseType: !3050)
!3049 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3049, line: 11, elements: !3051)
!3051 = !{!3052}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3050, file: !3049, line: 12, baseType: !3053)
!3053 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !339, line: 33, baseType: !3054)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 31, elements: !341)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3045, file: !44, line: 1316, baseType: !232, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3045, file: !44, line: 1317, baseType: !232, size: 32, offset: 32)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3045, file: !44, line: 1318, baseType: !3044, size: 64, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3045, file: !44, line: 1319, baseType: !446, size: 64, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3045, file: !44, line: 1320, baseType: !459, size: 128, align: 64, offset: 192)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3027, file: !44, line: 1084, baseType: !418, size: 64, offset: 1152)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3027, file: !44, line: 1085, baseType: !418, size: 64, offset: 1216)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3027, file: !44, line: 1087, baseType: !3063, size: 64, offset: 1280)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3065)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3066)
!3066 = !{!3067, !3071}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3065, file: !44, line: 1012, baseType: !3068, size: 64)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{null, !3026, !3026}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3065, file: !44, line: 1013, baseType: !3072, size: 64, offset: 64)
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3073, size: 64)
!3073 = !DISubroutineType(types: !3074)
!3074 = !{null, !3026}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3027, file: !44, line: 1088, baseType: !3076, size: 64, offset: 1344)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3078)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3079)
!3079 = !{!3080, !3084, !3088, !3089, !3093, !3097, !3101, !3105}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3078, file: !44, line: 1017, baseType: !3081, size: 64)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{!3012, !3012}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3078, file: !44, line: 1018, baseType: !3085, size: 64, offset: 64)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{null, !3012}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3078, file: !44, line: 1019, baseType: !3072, size: 64, offset: 128)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3078, file: !44, line: 1020, baseType: !3090, size: 64, offset: 192)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!232, !3026, !232}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3078, file: !44, line: 1021, baseType: !3094, size: 64, offset: 256)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!576, !3026}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3078, file: !44, line: 1022, baseType: !3098, size: 64, offset: 320)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{!232, !3026, !232, !241}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3078, file: !44, line: 1023, baseType: !3102, size: 64, offset: 384)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{null, !3026, !907}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3078, file: !44, line: 1024, baseType: !3094, size: 64, offset: 448)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3027, file: !44, line: 1097, baseType: !3107, size: 256, offset: 1408)
!3107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3027, file: !44, line: 1089, size: 256, elements: !3108)
!3108 = !{!3109, !3118, !3124}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3107, file: !44, line: 1090, baseType: !3110, size: 256)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3111, line: 10, size: 256, elements: !3112)
!3111 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3112 = !{!3113, !3114, !3117}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3110, file: !3111, line: 11, baseType: !223, size: 32)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3110, file: !3111, line: 12, baseType: !3115, size: 64, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3116 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3111, line: 5, flags: DIFlagFwdDecl)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3110, file: !3111, line: 13, baseType: !238, size: 128, offset: 128)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3107, file: !44, line: 1091, baseType: !3119, size: 64)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3111, line: 17, size: 64, elements: !3120)
!3120 = !{!3121}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3119, file: !3111, line: 18, baseType: !3122, size: 64)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3111, line: 16, flags: DIFlagFwdDecl)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3107, file: !44, line: 1096, baseType: !3125, size: 192)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3107, file: !44, line: 1092, size: 192, elements: !3126)
!3126 = !{!3127, !3128, !3129}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3125, file: !44, line: 1093, baseType: !238, size: 128)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3125, file: !44, line: 1094, baseType: !232, size: 32, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3125, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2950, file: !44, line: 1843, baseType: !3131, size: 64, offset: 1280)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{!399, !446, !807, !232, !415, !2961, !232}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2950, file: !44, line: 1844, baseType: !1187, size: 64, offset: 1344)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2950, file: !44, line: 1845, baseType: !3136, size: 64, offset: 1408)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = !DISubroutineType(types: !3138)
!3138 = !{!232, !232}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2950, file: !44, line: 1846, baseType: !3023, size: 64, offset: 1472)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2950, file: !44, line: 1847, baseType: !3141, size: 64, offset: 1536)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!399, !2183, !446, !2961, !415, !7}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2950, file: !44, line: 1848, baseType: !3145, size: 64, offset: 1600)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 64)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{!399, !446, !2961, !2183, !415, !7}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2950, file: !44, line: 1849, baseType: !3149, size: 64, offset: 1664)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{!232, !446, !403, !3152, !907}
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2950, file: !44, line: 1850, baseType: !3154, size: 64, offset: 1728)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{!403, !446, !232, !617, !617}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2950, file: !44, line: 1852, baseType: !3158, size: 64, offset: 1792)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DISubroutineType(types: !3160)
!3160 = !{null, !797, !446}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2950, file: !44, line: 1856, baseType: !3162, size: 64, offset: 1856)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!399, !446, !617, !446, !617, !415, !7}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2950, file: !44, line: 1858, baseType: !3166, size: 64, offset: 1920)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{!617, !446, !617, !446, !617, !617, !7}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2950, file: !44, line: 1861, baseType: !3015, size: 64, offset: 1984)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2945, file: !44, line: 692, baseType: !750, size: 64)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !516, file: !44, line: 694, baseType: !3172, size: 64, offset: 2560)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3174)
!3174 = !{!3175, !3176, !3177, !3178}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3173, file: !44, line: 1101, baseType: !327)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3173, file: !44, line: 1102, baseType: !238, size: 128)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3173, file: !44, line: 1103, baseType: !238, size: 128, offset: 128)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3173, file: !44, line: 1104, baseType: !238, size: 128, offset: 256)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !516, file: !44, line: 695, baseType: !821, size: 1216, align: 64, offset: 2624)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !516, file: !44, line: 696, baseType: !238, size: 128, offset: 3840)
!3181 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !44, line: 697, baseType: !3182, size: 64, offset: 3968)
!3182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !516, file: !44, line: 697, size: 64, elements: !3183)
!3183 = !{!3184, !3185, !3186, !3189, !3190}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3182, file: !44, line: 698, baseType: !2183, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3182, file: !44, line: 699, baseType: !2700, size: 64)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3182, file: !44, line: 700, baseType: !3187, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3182, file: !44, line: 701, baseType: !368, size: 64)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3182, file: !44, line: 702, baseType: !7, size: 32)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !516, file: !44, line: 705, baseType: !225, size: 32, offset: 4032)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !516, file: !44, line: 708, baseType: !225, size: 32, offset: 4064)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !516, file: !44, line: 709, baseType: !2782, size: 64, offset: 4096)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !516, file: !44, line: 720, baseType: !222, size: 64, offset: 4160)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !477, file: !474, line: 98, baseType: !3196, size: 256, offset: 448)
!3196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 256, elements: !2315)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !477, file: !474, line: 101, baseType: !3198, size: 32, offset: 704)
!3198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3199, line: 25, size: 32, elements: !3200)
!3199 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3200 = !{!3201}
!3201 = !DIDerivedType(tag: DW_TAG_member, scope: !3198, file: !3199, line: 26, baseType: !3202, size: 32)
!3202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3198, file: !3199, line: 26, size: 32, elements: !3203)
!3203 = !{!3204}
!3204 = !DIDerivedType(tag: DW_TAG_member, scope: !3202, file: !3199, line: 30, baseType: !3205, size: 32)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3202, file: !3199, line: 30, size: 32, elements: !3206)
!3206 = !{!3207, !3208}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3205, file: !3199, line: 31, baseType: !327)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3205, file: !3199, line: 32, baseType: !232, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !477, file: !474, line: 102, baseType: !2799, size: 64, offset: 768)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !477, file: !474, line: 103, baseType: !685, size: 64, offset: 832)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !477, file: !474, line: 104, baseType: !418, size: 64, offset: 896)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !477, file: !474, line: 105, baseType: !222, size: 64, offset: 960)
!3213 = !DIDerivedType(tag: DW_TAG_member, scope: !477, file: !474, line: 107, baseType: !3214, size: 128, offset: 1024)
!3214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !477, file: !474, line: 107, size: 128, elements: !3215)
!3215 = !{!3216, !3217}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3214, file: !474, line: 108, baseType: !238, size: 128)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3214, file: !474, line: 109, baseType: !3218, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !477, file: !474, line: 111, baseType: !238, size: 128, offset: 1152)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !477, file: !474, line: 112, baseType: !238, size: 128, offset: 1280)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !477, file: !474, line: 120, baseType: !3222, size: 128, offset: 1408)
!3222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !477, file: !474, line: 116, size: 128, elements: !3223)
!3223 = !{!3224, !3225, !3226}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3222, file: !474, line: 117, baseType: !725, size: 128)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3222, file: !474, line: 118, baseType: !491, size: 128)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3222, file: !474, line: 119, baseType: !459, size: 128, align: 64)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !447, file: !44, line: 922, baseType: !515, size: 64, offset: 256)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !447, file: !44, line: 923, baseType: !2948, size: 64, offset: 320)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !447, file: !44, line: 929, baseType: !327, offset: 384)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !447, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !447, file: !44, line: 931, baseType: !857, size: 64, offset: 448)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !447, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !447, file: !44, line: 933, baseType: !2795, size: 32, offset: 544)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !447, file: !44, line: 934, baseType: !1259, size: 192, offset: 576)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !447, file: !44, line: 935, baseType: !617, size: 64, offset: 768)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !447, file: !44, line: 936, baseType: !3237, size: 192, offset: 832)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3238)
!3238 = !{!3239, !3240, !3241, !3242, !3243, !3244}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3237, file: !44, line: 886, baseType: !3048)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3237, file: !44, line: 887, baseType: !1555, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3237, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3237, file: !44, line: 889, baseType: !521, size: 32, offset: 96)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3237, file: !44, line: 889, baseType: !521, size: 32, offset: 128)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3237, file: !44, line: 890, baseType: !232, size: 32, offset: 160)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !447, file: !44, line: 937, baseType: !1631, size: 64, offset: 1024)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !447, file: !44, line: 938, baseType: !3247, size: 256, offset: 1088)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3248)
!3248 = !{!3249, !3250, !3251, !3252, !3253, !3254}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3247, file: !44, line: 897, baseType: !418, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3247, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3247, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3247, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3247, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3247, file: !44, line: 904, baseType: !617, size: 64, offset: 192)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !447, file: !44, line: 940, baseType: !227, size: 64, offset: 1344)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !447, file: !44, line: 945, baseType: !222, size: 64, offset: 1408)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !447, file: !44, line: 949, baseType: !238, size: 128, offset: 1472)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !447, file: !44, line: 950, baseType: !238, size: 128, offset: 1600)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !447, file: !44, line: 952, baseType: !820, size: 64, offset: 1728)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !447, file: !44, line: 953, baseType: !995, size: 32, offset: 1792)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !447, file: !44, line: 954, baseType: !995, size: 32, offset: 1824)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !437, file: !393, line: 174, baseType: !443, size: 64, offset: 320)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !437, file: !393, line: 176, baseType: !3264, size: 64, offset: 384)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3265 = !DISubroutineType(types: !3266)
!3266 = !{!232, !446, !320, !436, !1067}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !425, file: !393, line: 90, baseType: !420, size: 64, offset: 192)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !425, file: !393, line: 91, baseType: !3269, size: 64, offset: 256)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !383, file: !315, line: 143, baseType: !3271, size: 64, offset: 256)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 64)
!3272 = !DISubroutineType(types: !3273)
!3273 = !{!3274, !320}
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3276)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3277)
!3277 = !{!3278, !3279, !3283, !3287, !3293, !3297}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3276, file: !61, line: 40, baseType: !60, size: 32)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3276, file: !61, line: 41, baseType: !3280, size: 64, offset: 64)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!576}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3276, file: !61, line: 42, baseType: !3284, size: 64, offset: 128)
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3285, size: 64)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{!222}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3276, file: !61, line: 43, baseType: !3288, size: 64, offset: 192)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{!2212, !3291}
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3276, file: !61, line: 44, baseType: !3294, size: 64, offset: 256)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 64)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{!2212}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3276, file: !61, line: 45, baseType: !554, size: 64, offset: 320)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !383, file: !315, line: 144, baseType: !3299, size: 64, offset: 320)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{!2212, !320}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !383, file: !315, line: 145, baseType: !3303, size: 64, offset: 384)
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 64)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{null, !320, !3306, !3307}
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !314, file: !315, line: 70, baseType: !3309, size: 64, offset: 384)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !705, line: 123, size: 1024, elements: !3311)
!3311 = !{!3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3440, !3441, !3442, !3443, !3444}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3310, file: !705, line: 124, baseType: !833, size: 32)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3310, file: !705, line: 125, baseType: !833, size: 32, offset: 32)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3310, file: !705, line: 135, baseType: !3309, size: 64, offset: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3310, file: !705, line: 136, baseType: !309, size: 64, offset: 128)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3310, file: !705, line: 138, baseType: !846, size: 192, align: 64, offset: 192)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3310, file: !705, line: 140, baseType: !2212, size: 64, offset: 384)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3310, file: !705, line: 141, baseType: !7, size: 32, offset: 448)
!3319 = !DIDerivedType(tag: DW_TAG_member, scope: !3310, file: !705, line: 142, baseType: !3320, size: 256, offset: 512)
!3320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3310, file: !705, line: 142, size: 256, elements: !3321)
!3321 = !{!3322, !3368, !3372}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3320, file: !705, line: 143, baseType: !3323, size: 192)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !705, line: 91, size: 192, elements: !3324)
!3324 = !{!3325, !3326, !3327}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3323, file: !705, line: 92, baseType: !418, size: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3323, file: !705, line: 94, baseType: !842, size: 64, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3323, file: !705, line: 100, baseType: !3328, size: 64, offset: 128)
!3328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3329, size: 64)
!3329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !705, line: 180, size: 704, elements: !3330)
!3330 = !{!3331, !3332, !3333, !3340, !3341, !3342, !3366, !3367}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3329, file: !705, line: 182, baseType: !3309, size: 64)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3329, file: !705, line: 183, baseType: !7, size: 32, offset: 64)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3329, file: !705, line: 186, baseType: !3334, size: 192, offset: 128)
!3334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3335, line: 19, size: 192, elements: !3336)
!3335 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3336 = !{!3337, !3338, !3339}
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3334, file: !3335, line: 20, baseType: !825, size: 128)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3334, file: !3335, line: 21, baseType: !7, size: 32, offset: 128)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3334, file: !3335, line: 22, baseType: !7, size: 32, offset: 160)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3329, file: !705, line: 187, baseType: !223, size: 32, offset: 320)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3329, file: !705, line: 188, baseType: !223, size: 32, offset: 352)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3329, file: !705, line: 189, baseType: !3343, size: 64, offset: 384)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3344, size: 64)
!3344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !705, line: 168, size: 320, elements: !3345)
!3345 = !{!3346, !3350, !3354, !3358, !3362}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3344, file: !705, line: 169, baseType: !3347, size: 64)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{!232, !797, !3328}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3344, file: !705, line: 171, baseType: !3351, size: 64, offset: 64)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!232, !3309, !309, !409}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3344, file: !705, line: 173, baseType: !3355, size: 64, offset: 128)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!232, !3309}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3344, file: !705, line: 174, baseType: !3359, size: 64, offset: 192)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 64)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!232, !3309, !3309, !309}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3344, file: !705, line: 176, baseType: !3363, size: 64, offset: 256)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{!232, !797, !3309, !3328}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3329, file: !705, line: 192, baseType: !238, size: 128, offset: 448)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3329, file: !705, line: 194, baseType: !1565, size: 128, offset: 576)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3320, file: !705, line: 144, baseType: !3369, size: 64)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !705, line: 103, size: 64, elements: !3370)
!3370 = !{!3371}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3369, file: !705, line: 104, baseType: !3309, size: 64)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3320, file: !705, line: 145, baseType: !3373, size: 256)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !705, line: 107, size: 256, elements: !3374)
!3374 = !{!3375, !3435, !3438, !3439}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3373, file: !705, line: 108, baseType: !3376, size: 64)
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3378)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !705, line: 217, size: 768, elements: !3379)
!3379 = !{!3380, !3400, !3404, !3408, !3412, !3416, !3420, !3424, !3425, !3426, !3427, !3431}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3378, file: !705, line: 222, baseType: !3381, size: 64)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{!232, !3384}
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !705, line: 197, size: 1088, elements: !3386)
!3386 = !{!3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3385, file: !705, line: 199, baseType: !3309, size: 64)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3385, file: !705, line: 200, baseType: !446, size: 64, offset: 64)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3385, file: !705, line: 201, baseType: !797, size: 64, offset: 128)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3385, file: !705, line: 202, baseType: !222, size: 64, offset: 192)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3385, file: !705, line: 205, baseType: !1259, size: 192, offset: 256)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3385, file: !705, line: 206, baseType: !1259, size: 192, offset: 448)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3385, file: !705, line: 207, baseType: !232, size: 32, offset: 640)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3385, file: !705, line: 208, baseType: !238, size: 128, offset: 704)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3385, file: !705, line: 209, baseType: !368, size: 64, offset: 832)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3385, file: !705, line: 211, baseType: !415, size: 64, offset: 896)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3385, file: !705, line: 212, baseType: !576, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3385, file: !705, line: 213, baseType: !576, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3385, file: !705, line: 214, baseType: !1095, size: 64, offset: 1024)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3378, file: !705, line: 223, baseType: !3401, size: 64, offset: 64)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{null, !3384}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3378, file: !705, line: 236, baseType: !3405, size: 64, offset: 128)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{!232, !797, !222}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3378, file: !705, line: 238, baseType: !3409, size: 64, offset: 192)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!222, !797, !2961}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3378, file: !705, line: 239, baseType: !3413, size: 64, offset: 256)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!222, !797, !222, !2961}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3378, file: !705, line: 240, baseType: !3417, size: 64, offset: 320)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{null, !797, !222}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3378, file: !705, line: 242, baseType: !3421, size: 64, offset: 384)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!399, !3384, !368, !415, !617}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3378, file: !705, line: 252, baseType: !415, size: 64, offset: 448)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3378, file: !705, line: 259, baseType: !576, size: 8, offset: 512)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3378, file: !705, line: 260, baseType: !3421, size: 64, offset: 576)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3378, file: !705, line: 263, baseType: !3428, size: 64, offset: 640)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{!2990, !3384, !2992}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3378, file: !705, line: 266, baseType: !3432, size: 64, offset: 704)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{!232, !3384, !1067}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3373, file: !705, line: 109, baseType: !3436, size: 64, offset: 64)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !705, line: 31, flags: DIFlagFwdDecl)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3373, file: !705, line: 110, baseType: !617, size: 64, offset: 128)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3373, file: !705, line: 111, baseType: !3309, size: 64, offset: 192)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3310, file: !705, line: 148, baseType: !222, size: 64, offset: 768)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3310, file: !705, line: 154, baseType: !227, size: 64, offset: 832)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3310, file: !705, line: 156, baseType: !410, size: 16, offset: 896)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3310, file: !705, line: 157, baseType: !409, size: 16, offset: 912)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3310, file: !705, line: 158, baseType: !3445, size: 64, offset: 960)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !705, line: 32, flags: DIFlagFwdDecl)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !314, file: !315, line: 71, baseType: !3448, size: 32, offset: 448)
!3448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3449, line: 19, size: 32, elements: !3450)
!3449 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3450 = !{!3451}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3448, file: !3449, line: 20, baseType: !1316, size: 32)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !314, file: !315, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !314, file: !315, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !314, file: !315, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !314, file: !315, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !314, file: !315, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !248, file: !115, line: 318, baseType: !7, size: 32, offset: 448)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !248, file: !115, line: 319, baseType: !410, size: 16, offset: 480)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !248, file: !115, line: 320, baseType: !410, size: 16, offset: 496)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !248, file: !115, line: 321, baseType: !410, size: 16, offset: 512)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !248, file: !115, line: 322, baseType: !410, size: 16, offset: 528)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !248, file: !115, line: 323, baseType: !7, size: 32, offset: 544)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !248, file: !115, line: 324, baseType: !283, size: 8, offset: 576)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !248, file: !115, line: 325, baseType: !283, size: 8, offset: 584)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !248, file: !115, line: 330, baseType: !283, size: 8, offset: 592)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !248, file: !115, line: 331, baseType: !283, size: 8, offset: 600)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !248, file: !115, line: 332, baseType: !283, size: 8, offset: 608)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !248, file: !115, line: 333, baseType: !283, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !248, file: !115, line: 334, baseType: !283, size: 8, offset: 624)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !248, file: !115, line: 335, baseType: !283, size: 8, offset: 632)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !248, file: !115, line: 336, baseType: !945, size: 16, offset: 640)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !248, file: !115, line: 337, baseType: !3473, size: 64, offset: 704)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !248, file: !115, line: 339, baseType: !3475, size: 64, offset: 768)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !115, line: 858, size: 2048, elements: !3477)
!3477 = !{!3478, !3479, !3480, !3494, !3498, !3502, !3510, !3514, !3515, !3519, !3538, !3539, !4083}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3476, file: !115, line: 859, baseType: !238, size: 128)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3476, file: !115, line: 860, baseType: !309, size: 64, offset: 128)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !3476, file: !115, line: 861, baseType: !3481, size: 64, offset: 192)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3483)
!3483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3484, line: 38, size: 256, elements: !3485)
!3484 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3485 = !{!3486, !3487, !3488, !3489, !3490, !3491, !3492}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3483, file: !3484, line: 39, baseType: !225, size: 32)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !3483, file: !3484, line: 39, baseType: !225, size: 32, offset: 32)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !3483, file: !3484, line: 40, baseType: !225, size: 32, offset: 64)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !3483, file: !3484, line: 40, baseType: !225, size: 32, offset: 96)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3483, file: !3484, line: 41, baseType: !225, size: 32, offset: 128)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !3483, file: !3484, line: 41, baseType: !225, size: 32, offset: 160)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3483, file: !3484, line: 42, baseType: !3493, size: 64, offset: 192)
!3493 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3484, line: 14, baseType: !418)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3476, file: !115, line: 862, baseType: !3495, size: 64, offset: 256)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{!232, !247, !3481}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3476, file: !115, line: 863, baseType: !3499, size: 64, offset: 320)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{null, !247}
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3476, file: !115, line: 864, baseType: !3503, size: 64, offset: 384)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!232, !247, !3506}
!3506 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3507)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3508)
!3508 = !{!3509}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3507, file: !80, line: 51, baseType: !232, size: 32)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3476, file: !115, line: 865, baseType: !3511, size: 64, offset: 448)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{!232, !247}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3476, file: !115, line: 866, baseType: !3499, size: 64, offset: 512)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !3476, file: !115, line: 867, baseType: !3516, size: 64, offset: 576)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{!232, !247, !232}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !3476, file: !115, line: 868, baseType: !3520, size: 64, offset: 640)
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3522)
!3522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !115, line: 795, size: 384, elements: !3523)
!3523 = !{!3524, !3530, !3534, !3535, !3536, !3537}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !3522, file: !115, line: 797, baseType: !3525, size: 64)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = !DISubroutineType(types: !3527)
!3527 = !{!3528, !247, !3529}
!3528 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !115, line: 772, baseType: !7)
!3529 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !115, line: 180, baseType: !7)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !3522, file: !115, line: 801, baseType: !3531, size: 64, offset: 64)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = !DISubroutineType(types: !3533)
!3533 = !{!3528, !247}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !3522, file: !115, line: 804, baseType: !3531, size: 64, offset: 128)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !3522, file: !115, line: 807, baseType: !3499, size: 64, offset: 192)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !3522, file: !115, line: 808, baseType: !3499, size: 64, offset: 256)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3522, file: !115, line: 811, baseType: !3499, size: 64, offset: 320)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3476, file: !115, line: 869, baseType: !422, size: 64, offset: 704)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3476, file: !115, line: 870, baseType: !3540, size: 1152, offset: 768)
!3540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3541)
!3541 = !{!3542, !3543, !4042, !4043, !4044, !4045, !4046, !4058, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3540, file: !67, line: 96, baseType: !309, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3540, file: !67, line: 97, baseType: !3544, size: 64, offset: 64)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3546, line: 82, size: 1408, elements: !3547)
!3546 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3547 = !{!3548, !3549, !3550, !4013, !4014, !4015, !4016, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4031, !4032, !4033, !4034, !4035, !4039, !4040, !4041}
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3545, file: !3546, line: 83, baseType: !309, size: 64)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3545, file: !3546, line: 84, baseType: !309, size: 64, offset: 64)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3545, file: !3546, line: 85, baseType: !3551, size: 64, offset: 128)
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3552, size: 64)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !3553)
!3553 = !{!3554, !3555, !3556, !3559, !3560, !3611, !3612, !3614, !3615, !3616, !3617, !3626, !3731, !3744, !3938, !3939, !3943, !3945, !3946, !3947, !3951, !3957, !3958, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !4001, !4002, !4003, !4006, !4009, !4010, !4011, !4012}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3552, file: !73, line: 462, baseType: !314, size: 512)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3552, file: !73, line: 463, baseType: !3551, size: 64, offset: 512)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3552, file: !73, line: 465, baseType: !3557, size: 64, offset: 576)
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3552, file: !73, line: 467, baseType: !309, size: 64, offset: 640)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3552, file: !73, line: 468, baseType: !3561, size: 64, offset: 704)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3563)
!3563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3564)
!3564 = !{!3565, !3566, !3567, !3571, !3576, !3580}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3563, file: !73, line: 88, baseType: !309, size: 64)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3563, file: !73, line: 89, baseType: !422, size: 64, offset: 64)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3563, file: !73, line: 90, baseType: !3568, size: 64, offset: 128)
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!232, !3551, !363}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3563, file: !73, line: 91, baseType: !3572, size: 64, offset: 192)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = !DISubroutineType(types: !3574)
!3574 = !{!368, !3551, !3575, !3306, !3307}
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3563, file: !73, line: 93, baseType: !3577, size: 64, offset: 256)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{null, !3551}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3563, file: !73, line: 95, baseType: !3581, size: 64, offset: 320)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3583)
!3583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3584)
!3584 = !{!3585, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3583, file: !80, line: 279, baseType: !3586, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 64)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{!232, !3551}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3583, file: !80, line: 280, baseType: !3577, size: 64, offset: 64)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3583, file: !80, line: 281, baseType: !3586, size: 64, offset: 128)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3583, file: !80, line: 282, baseType: !3586, size: 64, offset: 192)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3583, file: !80, line: 283, baseType: !3586, size: 64, offset: 256)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3583, file: !80, line: 284, baseType: !3586, size: 64, offset: 320)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3583, file: !80, line: 285, baseType: !3586, size: 64, offset: 384)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3583, file: !80, line: 286, baseType: !3586, size: 64, offset: 448)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3583, file: !80, line: 287, baseType: !3586, size: 64, offset: 512)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3583, file: !80, line: 288, baseType: !3586, size: 64, offset: 576)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3583, file: !80, line: 289, baseType: !3586, size: 64, offset: 640)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3583, file: !80, line: 290, baseType: !3586, size: 64, offset: 704)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3583, file: !80, line: 291, baseType: !3586, size: 64, offset: 768)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3583, file: !80, line: 292, baseType: !3586, size: 64, offset: 832)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3583, file: !80, line: 293, baseType: !3586, size: 64, offset: 896)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3583, file: !80, line: 294, baseType: !3586, size: 64, offset: 960)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3583, file: !80, line: 295, baseType: !3586, size: 64, offset: 1024)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3583, file: !80, line: 296, baseType: !3586, size: 64, offset: 1088)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3583, file: !80, line: 297, baseType: !3586, size: 64, offset: 1152)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3583, file: !80, line: 298, baseType: !3586, size: 64, offset: 1216)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3583, file: !80, line: 299, baseType: !3586, size: 64, offset: 1280)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3583, file: !80, line: 300, baseType: !3586, size: 64, offset: 1344)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3583, file: !80, line: 301, baseType: !3586, size: 64, offset: 1408)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3552, file: !73, line: 470, baseType: !3544, size: 64, offset: 768)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3552, file: !73, line: 471, baseType: !3613, size: 64, offset: 832)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3552, file: !73, line: 473, baseType: !222, size: 64, offset: 896)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3552, file: !73, line: 475, baseType: !222, size: 64, offset: 960)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3552, file: !73, line: 480, baseType: !1259, size: 192, offset: 1024)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3552, file: !73, line: 484, baseType: !3618, size: 576, offset: 1216)
!3618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3619)
!3619 = !{!3620, !3621, !3622, !3623, !3624, !3625}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3618, file: !73, line: 362, baseType: !238, size: 128)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3618, file: !73, line: 363, baseType: !238, size: 128, offset: 128)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3618, file: !73, line: 364, baseType: !238, size: 128, offset: 256)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3618, file: !73, line: 365, baseType: !238, size: 128, offset: 384)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3618, file: !73, line: 366, baseType: !576, size: 8, offset: 512)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3618, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3552, file: !73, line: 485, baseType: !3627, size: 2304, offset: 1792)
!3627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3628)
!3628 = !{!3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3724, !3728}
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3627, file: !80, line: 566, baseType: !3506, size: 32)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3627, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3627, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3627, file: !80, line: 569, baseType: !576, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3627, file: !80, line: 570, baseType: !576, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3627, file: !80, line: 571, baseType: !576, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3627, file: !80, line: 572, baseType: !576, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3627, file: !80, line: 573, baseType: !576, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3627, file: !80, line: 574, baseType: !576, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3627, file: !80, line: 575, baseType: !576, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3627, file: !80, line: 576, baseType: !576, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3627, file: !80, line: 577, baseType: !223, size: 32, offset: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3627, file: !80, line: 578, baseType: !327, offset: 96)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3627, file: !80, line: 580, baseType: !238, size: 128, offset: 128)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3627, file: !80, line: 581, baseType: !1586, size: 192, offset: 256)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3627, file: !80, line: 582, baseType: !3645, size: 64, offset: 448)
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 64)
!3646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3647, line: 43, size: 1472, elements: !3648)
!3647 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3648 = !{!3649, !3650, !3651, !3652, !3653, !3656, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3646, file: !3647, line: 44, baseType: !309, size: 64)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3646, file: !3647, line: 45, baseType: !232, size: 32, offset: 64)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3646, file: !3647, line: 46, baseType: !238, size: 128, offset: 128)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3646, file: !3647, line: 47, baseType: !327, offset: 256)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3646, file: !3647, line: 48, baseType: !3654, size: 64, offset: 256)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3646, file: !3647, line: 49, baseType: !3657, size: 320, offset: 320)
!3657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3658, line: 11, size: 320, elements: !3659)
!3658 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3659 = !{!3660, !3661, !3662, !3667}
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3657, file: !3658, line: 16, baseType: !725, size: 128)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3657, file: !3658, line: 17, baseType: !418, size: 64, offset: 128)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3657, file: !3658, line: 18, baseType: !3663, size: 64, offset: 192)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{null, !3666}
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3657, size: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3657, file: !3658, line: 19, baseType: !223, size: 32, offset: 256)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3646, file: !3647, line: 50, baseType: !418, size: 64, offset: 640)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3646, file: !3647, line: 51, baseType: !1386, size: 64, offset: 704)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3646, file: !3647, line: 52, baseType: !1386, size: 64, offset: 768)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3646, file: !3647, line: 53, baseType: !1386, size: 64, offset: 832)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3646, file: !3647, line: 54, baseType: !1386, size: 64, offset: 896)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3646, file: !3647, line: 55, baseType: !1386, size: 64, offset: 960)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3646, file: !3647, line: 56, baseType: !418, size: 64, offset: 1024)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3646, file: !3647, line: 57, baseType: !418, size: 64, offset: 1088)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3646, file: !3647, line: 58, baseType: !418, size: 64, offset: 1152)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3646, file: !3647, line: 59, baseType: !418, size: 64, offset: 1216)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3646, file: !3647, line: 60, baseType: !418, size: 64, offset: 1280)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3646, file: !3647, line: 61, baseType: !3551, size: 64, offset: 1344)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3646, file: !3647, line: 62, baseType: !576, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3646, file: !3647, line: 63, baseType: !576, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3627, file: !80, line: 583, baseType: !576, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3627, file: !80, line: 584, baseType: !576, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3627, file: !80, line: 585, baseType: !576, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3627, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3627, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3627, file: !80, line: 592, baseType: !1378, size: 512, offset: 576)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3627, file: !80, line: 593, baseType: !227, size: 64, offset: 1088)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3627, file: !80, line: 594, baseType: !2042, size: 256, offset: 1152)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3627, file: !80, line: 595, baseType: !1565, size: 128, offset: 1408)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3627, file: !80, line: 596, baseType: !3654, size: 64, offset: 1536)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3627, file: !80, line: 597, baseType: !833, size: 32, offset: 1600)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3627, file: !80, line: 598, baseType: !833, size: 32, offset: 1632)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3627, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3627, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3627, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3627, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3627, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3627, file: !80, line: 604, baseType: !576, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3627, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3627, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3627, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3627, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3627, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3627, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3627, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3627, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3627, file: !80, line: 613, baseType: !232, size: 32, offset: 1792)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3627, file: !80, line: 614, baseType: !232, size: 32, offset: 1824)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3627, file: !80, line: 615, baseType: !227, size: 64, offset: 1856)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3627, file: !80, line: 616, baseType: !227, size: 64, offset: 1920)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3627, file: !80, line: 617, baseType: !227, size: 64, offset: 1984)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3627, file: !80, line: 618, baseType: !227, size: 64, offset: 2048)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3627, file: !80, line: 620, baseType: !3715, size: 64, offset: 2112)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3717)
!3717 = !{!3718, !3719, !3720, !3721}
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3716, file: !80, line: 537, baseType: !327)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3716, file: !80, line: 538, baseType: !7, size: 32)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3716, file: !80, line: 540, baseType: !238, size: 128, offset: 64)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3716, file: !80, line: 543, baseType: !3722, size: 64, offset: 192)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3627, file: !80, line: 621, baseType: !3725, size: 64, offset: 2176)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{null, !3551, !1528}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3627, file: !80, line: 622, baseType: !3729, size: 64, offset: 2240)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3552, file: !73, line: 486, baseType: !3732, size: 64, offset: 4096)
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3734)
!3734 = !{!3735, !3736, !3737, !3741, !3742, !3743}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3733, file: !80, line: 643, baseType: !3583, size: 1472)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3733, file: !80, line: 644, baseType: !3586, size: 64, offset: 1472)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3733, file: !80, line: 645, baseType: !3738, size: 64, offset: 1536)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = !DISubroutineType(types: !3740)
!3740 = !{null, !3551, !576}
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3733, file: !80, line: 646, baseType: !3586, size: 64, offset: 1600)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3733, file: !80, line: 647, baseType: !3577, size: 64, offset: 1664)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3733, file: !80, line: 648, baseType: !3577, size: 64, offset: 1728)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3552, file: !73, line: 493, baseType: !3745, size: 64, offset: 4160)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 64)
!3746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !94, line: 162, size: 1088, elements: !3747)
!3747 = !{!3748, !3749, !3750, !3922, !3923, !3924, !3925, !3926, !3927, !3930, !3931, !3932, !3933, !3934, !3935, !3936}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3746, file: !94, line: 163, baseType: !238, size: 128)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3746, file: !94, line: 164, baseType: !309, size: 64, offset: 128)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3746, file: !94, line: 165, baseType: !3751, size: 64, offset: 192)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3753)
!3753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !94, line: 105, size: 640, elements: !3754)
!3754 = !{!3755, !3873, !3884, !3889, !3893, !3899, !3903, !3907, !3914, !3918}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3753, file: !94, line: 106, baseType: !3756, size: 64)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{!232, !3745, !3759, !93}
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!3760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3761, line: 51, size: 1344, elements: !3762)
!3761 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3762 = !{!3763, !3764, !3766, !3767, !3857, !3866, !3867, !3868, !3869, !3870, !3871, !3872}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3760, file: !3761, line: 52, baseType: !309, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3760, file: !3761, line: 53, baseType: !3765, size: 32, offset: 64)
!3765 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3761, line: 28, baseType: !223)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3760, file: !3761, line: 54, baseType: !309, size: 64, offset: 128)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3760, file: !3761, line: 55, baseType: !3768, size: 192, offset: 192)
!3768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3769, line: 17, size: 192, elements: !3770)
!3769 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3770 = !{!3771, !3773, !3856}
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3768, file: !3769, line: 18, baseType: !3772, size: 64)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3768, file: !3769, line: 19, baseType: !3774, size: 64, offset: 64)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3776)
!3776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3769, line: 110, size: 1152, elements: !3777)
!3777 = !{!3778, !3782, !3786, !3792, !3798, !3802, !3806, !3811, !3815, !3816, !3820, !3824, !3828, !3839, !3840, !3841, !3842, !3852}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3776, file: !3769, line: 111, baseType: !3779, size: 64)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!3772, !3772}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3776, file: !3769, line: 112, baseType: !3783, size: 64, offset: 64)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DISubroutineType(types: !3785)
!3785 = !{null, !3772}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3776, file: !3769, line: 113, baseType: !3787, size: 64, offset: 128)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{!576, !3790}
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3768)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3776, file: !3769, line: 114, baseType: !3793, size: 64, offset: 192)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{!2212, !3790, !3796}
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3552)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3776, file: !3769, line: 116, baseType: !3799, size: 64, offset: 256)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{!576, !3790, !309}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3776, file: !3769, line: 118, baseType: !3803, size: 64, offset: 320)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DISubroutineType(types: !3805)
!3805 = !{!232, !3790, !309, !7, !222, !415}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3776, file: !3769, line: 123, baseType: !3807, size: 64, offset: 384)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DISubroutineType(types: !3809)
!3809 = !{!232, !3790, !309, !3810, !415}
!3810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3776, file: !3769, line: 126, baseType: !3812, size: 64, offset: 448)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!309, !3790}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3776, file: !3769, line: 127, baseType: !3812, size: 64, offset: 512)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3776, file: !3769, line: 128, baseType: !3817, size: 64, offset: 576)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!3772, !3790}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3776, file: !3769, line: 130, baseType: !3821, size: 64, offset: 640)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3822, size: 64)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{!3772, !3790, !3772}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3776, file: !3769, line: 133, baseType: !3825, size: 64, offset: 704)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{!3772, !3790, !309}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3776, file: !3769, line: 135, baseType: !3829, size: 64, offset: 768)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{!232, !3790, !309, !309, !7, !7, !3832}
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3769, line: 43, size: 640, elements: !3834)
!3834 = !{!3835, !3836, !3837}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3833, file: !3769, line: 44, baseType: !3772, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3833, file: !3769, line: 45, baseType: !7, size: 32, offset: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3833, file: !3769, line: 46, baseType: !3838, size: 512, offset: 128)
!3838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 512, elements: !1416)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3776, file: !3769, line: 140, baseType: !3821, size: 64, offset: 832)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3776, file: !3769, line: 143, baseType: !3817, size: 64, offset: 896)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3776, file: !3769, line: 145, baseType: !3779, size: 64, offset: 960)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3776, file: !3769, line: 146, baseType: !3843, size: 64, offset: 1024)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{!232, !3790, !3846}
!3846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 64)
!3847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3769, line: 29, size: 128, elements: !3848)
!3848 = !{!3849, !3850, !3851}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3847, file: !3769, line: 30, baseType: !7, size: 32)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3847, file: !3769, line: 31, baseType: !7, size: 32, offset: 32)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3847, file: !3769, line: 32, baseType: !3790, size: 64, offset: 64)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3776, file: !3769, line: 148, baseType: !3853, size: 64, offset: 1088)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{!232, !3790, !3551}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3768, file: !3769, line: 20, baseType: !3551, size: 64, offset: 128)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3760, file: !3761, line: 57, baseType: !3858, size: 64, offset: 384)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3761, line: 31, size: 704, elements: !3860)
!3860 = !{!3861, !3862, !3863, !3864, !3865}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3859, file: !3761, line: 32, baseType: !368, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3859, file: !3761, line: 33, baseType: !232, size: 32, offset: 64)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3859, file: !3761, line: 34, baseType: !222, size: 64, offset: 128)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3859, file: !3761, line: 35, baseType: !3858, size: 64, offset: 192)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3859, file: !3761, line: 43, baseType: !437, size: 448, offset: 256)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3760, file: !3761, line: 58, baseType: !3858, size: 64, offset: 448)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3760, file: !3761, line: 59, baseType: !3759, size: 64, offset: 512)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3760, file: !3761, line: 60, baseType: !3759, size: 64, offset: 576)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3760, file: !3761, line: 61, baseType: !3759, size: 64, offset: 640)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3760, file: !3761, line: 63, baseType: !314, size: 512, offset: 704)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3760, file: !3761, line: 65, baseType: !418, size: 64, offset: 1216)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3760, file: !3761, line: 66, baseType: !222, size: 64, offset: 1280)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3753, file: !94, line: 108, baseType: !3874, size: 64, offset: 64)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DISubroutineType(types: !3876)
!3876 = !{!232, !3745, !3877, !93}
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !94, line: 63, size: 640, elements: !3879)
!3879 = !{!3880, !3881, !3882}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3878, file: !94, line: 64, baseType: !3772, size: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3878, file: !94, line: 65, baseType: !232, size: 32, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3878, file: !94, line: 66, baseType: !3883, size: 512, offset: 96)
!3883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 512, elements: !1819)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3753, file: !94, line: 110, baseType: !3885, size: 64, offset: 128)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DISubroutineType(types: !3887)
!3887 = !{!232, !3745, !7, !3888}
!3888 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !231, line: 164, baseType: !418)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3753, file: !94, line: 111, baseType: !3890, size: 64, offset: 192)
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 64)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{null, !3745, !7}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3753, file: !94, line: 112, baseType: !3894, size: 64, offset: 256)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3895, size: 64)
!3895 = !DISubroutineType(types: !3896)
!3896 = !{!232, !3745, !3759, !3897, !7, !3473, !2768}
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !223)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3753, file: !94, line: 117, baseType: !3900, size: 64, offset: 320)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!232, !3745, !7, !7, !222}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3753, file: !94, line: 119, baseType: !3904, size: 64, offset: 384)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{null, !3745, !7, !7}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3753, file: !94, line: 121, baseType: !3908, size: 64, offset: 448)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = !DISubroutineType(types: !3910)
!3910 = !{!232, !3745, !3911, !576}
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 64)
!3912 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3913, line: 16, flags: DIFlagFwdDecl)
!3913 = !DIFile(filename: "./include/linux/msi.h", directory: "/home/lizy2001/genbc/linux")
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3753, file: !94, line: 122, baseType: !3915, size: 64, offset: 512)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{null, !3745, !3911}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3753, file: !94, line: 123, baseType: !3919, size: 64, offset: 576)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{!232, !3745, !3877, !3473, !2768}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3746, file: !94, line: 166, baseType: !222, size: 64, offset: 256)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3746, file: !94, line: 167, baseType: !7, size: 32, offset: 320)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3746, file: !94, line: 168, baseType: !7, size: 32, offset: 352)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3746, file: !94, line: 171, baseType: !3772, size: 64, offset: 384)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3746, file: !94, line: 172, baseType: !93, size: 32, offset: 448)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3746, file: !94, line: 173, baseType: !3928, size: 64, offset: 512)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !94, line: 134, flags: DIFlagFwdDecl)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3746, file: !94, line: 175, baseType: !3745, size: 64, offset: 576)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3746, file: !94, line: 182, baseType: !3888, size: 64, offset: 640)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3746, file: !94, line: 183, baseType: !7, size: 32, offset: 704)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3746, file: !94, line: 184, baseType: !7, size: 32, offset: 736)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3746, file: !94, line: 185, baseType: !825, size: 128, offset: 768)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3746, file: !94, line: 186, baseType: !1259, size: 192, offset: 896)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3746, file: !94, line: 187, baseType: !3937, offset: 1088)
!3937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2416)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3552, file: !73, line: 499, baseType: !238, size: 128, offset: 4224)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3552, file: !73, line: 502, baseType: !3940, size: 64, offset: 4352)
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3942)
!3942 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3552, file: !73, line: 504, baseType: !3944, size: 64, offset: 4416)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3552, file: !73, line: 505, baseType: !227, size: 64, offset: 4480)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3552, file: !73, line: 510, baseType: !227, size: 64, offset: 4544)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3552, file: !73, line: 511, baseType: !3948, size: 64, offset: 4608)
!3948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!3949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3950)
!3950 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3552, file: !73, line: 513, baseType: !3952, size: 64, offset: 4672)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3954)
!3954 = !{!3955, !3956}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3953, file: !73, line: 293, baseType: !7, size: 32)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3953, file: !73, line: 294, baseType: !418, size: 64, offset: 64)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3552, file: !73, line: 515, baseType: !238, size: 128, offset: 4736)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3552, file: !73, line: 526, baseType: !3959, offset: 4864)
!3959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3960, line: 5, elements: !341)
!3960 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3552, file: !73, line: 528, baseType: !3759, size: 64, offset: 4864)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3552, file: !73, line: 529, baseType: !3772, size: 64, offset: 4928)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3552, file: !73, line: 534, baseType: !599, size: 32, offset: 4992)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3552, file: !73, line: 535, baseType: !223, size: 32, offset: 5024)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3552, file: !73, line: 537, baseType: !327, offset: 5056)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3552, file: !73, line: 538, baseType: !238, size: 128, offset: 5056)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3552, file: !73, line: 540, baseType: !3968, size: 64, offset: 5184)
!3968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3969, size: 64)
!3969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3970, line: 54, size: 960, elements: !3971)
!3970 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3971 = !{!3972, !3973, !3974, !3975, !3976, !3977, !3978, !3982, !3986, !3987, !3988, !3989, !3993, !3997, !3998}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3969, file: !3970, line: 55, baseType: !309, size: 64)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3969, file: !3970, line: 56, baseType: !305, size: 64, offset: 64)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3969, file: !3970, line: 58, baseType: !422, size: 64, offset: 128)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3969, file: !3970, line: 59, baseType: !422, size: 64, offset: 192)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3969, file: !3970, line: 60, baseType: !320, size: 64, offset: 256)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3969, file: !3970, line: 62, baseType: !3568, size: 64, offset: 320)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3969, file: !3970, line: 63, baseType: !3979, size: 64, offset: 384)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = !DISubroutineType(types: !3981)
!3981 = !{!368, !3551, !3575}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3969, file: !3970, line: 65, baseType: !3983, size: 64, offset: 448)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{null, !3968}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3969, file: !3970, line: 66, baseType: !3577, size: 64, offset: 512)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3969, file: !3970, line: 68, baseType: !3586, size: 64, offset: 576)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3969, file: !3970, line: 70, baseType: !3274, size: 64, offset: 640)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3969, file: !3970, line: 71, baseType: !3990, size: 64, offset: 704)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!2212, !3551}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3969, file: !3970, line: 73, baseType: !3994, size: 64, offset: 768)
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 64)
!3995 = !DISubroutineType(types: !3996)
!3996 = !{null, !3551, !3306, !3307}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3969, file: !3970, line: 75, baseType: !3581, size: 64, offset: 832)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3969, file: !3970, line: 77, baseType: !3999, size: 64, offset: 896)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3546, line: 111, flags: DIFlagFwdDecl)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3552, file: !73, line: 541, baseType: !422, size: 64, offset: 5248)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3552, file: !73, line: 543, baseType: !3577, size: 64, offset: 5312)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3552, file: !73, line: 544, baseType: !4004, size: 64, offset: 5376)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3552, file: !73, line: 545, baseType: !4007, size: 64, offset: 5440)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3552, file: !73, line: 547, baseType: !576, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3552, file: !73, line: 548, baseType: !576, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3552, file: !73, line: 549, baseType: !576, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3552, file: !73, line: 550, baseType: !576, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3545, file: !3546, line: 86, baseType: !422, size: 64, offset: 192)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3545, file: !3546, line: 87, baseType: !422, size: 64, offset: 256)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3545, file: !3546, line: 88, baseType: !422, size: 64, offset: 320)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3545, file: !3546, line: 90, baseType: !4017, size: 64, offset: 384)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!232, !3551, !3613}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3545, file: !3546, line: 91, baseType: !3568, size: 64, offset: 448)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3545, file: !3546, line: 92, baseType: !3586, size: 64, offset: 512)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3545, file: !3546, line: 93, baseType: !3577, size: 64, offset: 576)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3545, file: !3546, line: 94, baseType: !3586, size: 64, offset: 640)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3545, file: !3546, line: 95, baseType: !3577, size: 64, offset: 704)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3545, file: !3546, line: 97, baseType: !3586, size: 64, offset: 768)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3545, file: !3546, line: 98, baseType: !3586, size: 64, offset: 832)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3545, file: !3546, line: 100, baseType: !4028, size: 64, offset: 896)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{!232, !3551, !3506}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3545, file: !3546, line: 101, baseType: !3586, size: 64, offset: 960)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3545, file: !3546, line: 103, baseType: !3586, size: 64, offset: 1024)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3545, file: !3546, line: 105, baseType: !3586, size: 64, offset: 1088)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3545, file: !3546, line: 107, baseType: !3581, size: 64, offset: 1152)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3545, file: !3546, line: 109, baseType: !4036, size: 64, offset: 1216)
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4038)
!4038 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3546, line: 109, flags: DIFlagFwdDecl)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3545, file: !3546, line: 111, baseType: !3999, size: 64, offset: 1280)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3545, file: !3546, line: 112, baseType: !731, offset: 1344)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3545, file: !3546, line: 114, baseType: !576, size: 8, offset: 1344)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3540, file: !67, line: 99, baseType: !305, size: 64, offset: 128)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3540, file: !67, line: 100, baseType: !309, size: 64, offset: 192)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3540, file: !67, line: 102, baseType: !576, size: 8, offset: 256)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3540, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3540, file: !67, line: 105, baseType: !4047, size: 64, offset: 320)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4049)
!4049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3484, line: 262, size: 1600, elements: !4050)
!4050 = !{!4051, !4052, !4053, !4057}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4049, file: !3484, line: 263, baseType: !2785, size: 256)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4049, file: !3484, line: 264, baseType: !2785, size: 256, offset: 256)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4049, file: !3484, line: 265, baseType: !4054, size: 1024, offset: 512)
!4054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 1024, elements: !4055)
!4055 = !{!4056}
!4056 = !DISubrange(count: 128)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4049, file: !3484, line: 266, baseType: !2212, size: 64, offset: 1536)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3540, file: !67, line: 106, baseType: !4059, size: 64, offset: 384)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4061)
!4061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3484, line: 210, size: 256, elements: !4062)
!4062 = !{!4063, !4067, !4068, !4069}
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4061, file: !3484, line: 211, baseType: !4064, size: 72)
!4064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 72, elements: !4065)
!4065 = !{!4066}
!4066 = !DISubrange(count: 9)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4061, file: !3484, line: 212, baseType: !3493, size: 64, offset: 128)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4061, file: !3484, line: 213, baseType: !225, size: 32, offset: 192)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4061, file: !3484, line: 214, baseType: !225, size: 32, offset: 224)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3540, file: !67, line: 108, baseType: !3586, size: 64, offset: 448)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3540, file: !67, line: 109, baseType: !3577, size: 64, offset: 512)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3540, file: !67, line: 110, baseType: !3586, size: 64, offset: 576)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3540, file: !67, line: 111, baseType: !3577, size: 64, offset: 640)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3540, file: !67, line: 112, baseType: !4028, size: 64, offset: 704)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3540, file: !67, line: 113, baseType: !3586, size: 64, offset: 768)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3540, file: !67, line: 114, baseType: !422, size: 64, offset: 832)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3540, file: !67, line: 115, baseType: !422, size: 64, offset: 896)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3540, file: !67, line: 117, baseType: !3581, size: 64, offset: 960)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3540, file: !67, line: 118, baseType: !3577, size: 64, offset: 1024)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3540, file: !67, line: 120, baseType: !4081, size: 64, offset: 1088)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !3476, file: !115, line: 871, baseType: !4084, size: 128, offset: 1920)
!4084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !115, line: 759, size: 128, elements: !4085)
!4085 = !{!4086, !4087}
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4084, file: !115, line: 760, baseType: !327)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4084, file: !115, line: 761, baseType: !238, size: 128)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !248, file: !115, line: 340, baseType: !227, size: 64, offset: 832)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !248, file: !115, line: 346, baseType: !3953, size: 128, offset: 896)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !248, file: !115, line: 348, baseType: !233, size: 32, offset: 1024)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !248, file: !115, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !248, file: !115, line: 352, baseType: !283, size: 8, offset: 1064)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !248, file: !115, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !248, file: !115, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !248, file: !115, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !248, file: !115, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !248, file: !115, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !248, file: !115, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !248, file: !115, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !248, file: !115, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !248, file: !115, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !248, file: !115, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !248, file: !115, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !248, file: !115, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !248, file: !115, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !248, file: !115, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !248, file: !115, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !248, file: !115, line: 376, baseType: !7, size: 32, offset: 1120)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !248, file: !115, line: 377, baseType: !7, size: 32, offset: 1152)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !248, file: !115, line: 380, baseType: !4111, size: 64, offset: 1216)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !115, line: 303, flags: DIFlagFwdDecl)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !248, file: !115, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !248, file: !115, line: 383, baseType: !232, size: 32, offset: 1312)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !248, file: !115, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !248, file: !115, line: 387, baseType: !3529, size: 32, offset: 1376)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !248, file: !115, line: 388, baseType: !3552, size: 5568, offset: 1408)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !248, file: !115, line: 390, baseType: !232, size: 32, offset: 6976)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !248, file: !115, line: 396, baseType: !7, size: 32, offset: 7008)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !248, file: !115, line: 397, baseType: !4121, size: 8704, offset: 7040)
!4121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4122, size: 8704, elements: !4135)
!4122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4123, line: 20, size: 512, elements: !4124)
!4123 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4124 = !{!4125, !4127, !4128, !4129, !4130, !4131, !4133, !4134}
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4122, file: !4123, line: 21, baseType: !4126, size: 64)
!4126 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !231, line: 158, baseType: !2210)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4122, file: !4123, line: 22, baseType: !4126, size: 64, offset: 64)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4122, file: !4123, line: 23, baseType: !309, size: 64, offset: 128)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4122, file: !4123, line: 24, baseType: !418, size: 64, offset: 192)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4122, file: !4123, line: 25, baseType: !418, size: 64, offset: 256)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4122, file: !4123, line: 26, baseType: !4132, size: 64, offset: 320)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4122, file: !4123, line: 26, baseType: !4132, size: 64, offset: 384)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4122, file: !4123, line: 26, baseType: !4132, size: 64, offset: 448)
!4135 = !{!4136}
!4136 = !DISubrange(count: 17)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !248, file: !115, line: 399, baseType: !576, size: 8, offset: 15744)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !248, file: !115, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !248, file: !115, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !248, file: !115, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !248, file: !115, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !248, file: !115, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !248, file: !115, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !248, file: !115, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !248, file: !115, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !248, file: !115, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !248, file: !115, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !248, file: !115, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !248, file: !115, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !248, file: !115, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !248, file: !115, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !248, file: !115, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !248, file: !115, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !248, file: !115, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !248, file: !115, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !248, file: !115, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !248, file: !115, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !248, file: !115, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !248, file: !115, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !248, file: !115, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !248, file: !115, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !248, file: !115, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !248, file: !115, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !248, file: !115, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !248, file: !115, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !248, file: !115, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !248, file: !115, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !248, file: !115, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !248, file: !115, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !248, file: !115, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !248, file: !115, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !248, file: !115, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !248, file: !115, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !248, file: !115, line: 450, baseType: !4175, size: 16, offset: 15792)
!4175 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !115, line: 206, baseType: !410)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !248, file: !115, line: 451, baseType: !833, size: 32, offset: 15808)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !248, file: !115, line: 453, baseType: !3883, size: 512, offset: 15840)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !248, file: !115, line: 454, baseType: !721, size: 64, offset: 16384)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !248, file: !115, line: 455, baseType: !436, size: 64, offset: 16448)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !248, file: !115, line: 456, baseType: !232, size: 32, offset: 16512)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !248, file: !115, line: 457, baseType: !4182, size: 1088, offset: 16576)
!4182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !436, size: 1088, elements: !4135)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !248, file: !115, line: 458, baseType: !4182, size: 1088, offset: 17664)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !248, file: !115, line: 469, baseType: !422, size: 64, offset: 18752)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !248, file: !115, line: 471, baseType: !4186, size: 64, offset: 18816)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !115, line: 304, flags: DIFlagFwdDecl)
!4188 = !DIDerivedType(tag: DW_TAG_member, scope: !248, file: !115, line: 478, baseType: !4189, size: 64, offset: 18880)
!4189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !248, file: !115, line: 478, size: 64, elements: !4190)
!4190 = !{!4191, !4218}
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4189, file: !115, line: 479, baseType: !4192, size: 64)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !108, line: 323, size: 1024, elements: !4194)
!4194 = !{!4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4217}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4193, file: !108, line: 324, baseType: !232, size: 32)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "nres", scope: !4193, file: !108, line: 325, baseType: !232, size: 32, offset: 32)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !4193, file: !108, line: 326, baseType: !223, size: 32, offset: 64)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !4193, file: !108, line: 327, baseType: !945, size: 16, offset: 96)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "total_VFs", scope: !4193, file: !108, line: 328, baseType: !945, size: 16, offset: 112)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "initial_VFs", scope: !4193, file: !108, line: 329, baseType: !945, size: 16, offset: 128)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "num_VFs", scope: !4193, file: !108, line: 330, baseType: !945, size: 16, offset: 144)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4193, file: !108, line: 331, baseType: !945, size: 16, offset: 160)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !4193, file: !108, line: 332, baseType: !945, size: 16, offset: 176)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "vf_device", scope: !4193, file: !108, line: 333, baseType: !945, size: 16, offset: 192)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "pgsz", scope: !4193, file: !108, line: 334, baseType: !223, size: 32, offset: 224)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4193, file: !108, line: 335, baseType: !283, size: 8, offset: 256)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "max_VF_buses", scope: !4193, file: !108, line: 336, baseType: !283, size: 8, offset: 264)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "driver_max_VFs", scope: !4193, file: !108, line: 337, baseType: !945, size: 16, offset: 272)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4193, file: !108, line: 338, baseType: !247, size: 64, offset: 320)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4193, file: !108, line: 339, baseType: !247, size: 64, offset: 384)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4193, file: !108, line: 340, baseType: !223, size: 32, offset: 448)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4193, file: !108, line: 341, baseType: !283, size: 8, offset: 480)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4193, file: !108, line: 342, baseType: !945, size: 16, offset: 496)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4193, file: !108, line: 343, baseType: !945, size: 16, offset: 512)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "barsz", scope: !4193, file: !108, line: 344, baseType: !4216, size: 384, offset: 576)
!4216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4126, size: 384, elements: !1709)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_autoprobe", scope: !4193, file: !108, line: 345, baseType: !576, size: 8, offset: 960)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4189, file: !115, line: 480, baseType: !247, size: 64)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !248, file: !115, line: 482, baseType: !945, size: 16, offset: 18944)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !248, file: !115, line: 483, baseType: !283, size: 8, offset: 18960)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !248, file: !115, line: 497, baseType: !945, size: 16, offset: 18976)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !248, file: !115, line: 498, baseType: !2210, size: 64, offset: 19008)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !248, file: !115, line: 499, baseType: !415, size: 64, offset: 19072)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !248, file: !115, line: 500, baseType: !368, size: 64, offset: 19136)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !248, file: !115, line: 502, baseType: !418, size: 64, offset: 19200)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !235, file: !115, line: 611, baseType: !238, size: 128, offset: 512)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !235, file: !115, line: 613, baseType: !4228, size: 256, offset: 640)
!4228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4132, size: 256, elements: !1241)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !235, file: !115, line: 614, baseType: !238, size: 128, offset: 896)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !235, file: !115, line: 615, baseType: !4122, size: 512, offset: 1024)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !235, file: !115, line: 617, baseType: !4232, size: 64, offset: 1536)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !115, line: 731, size: 320, elements: !4234)
!4234 = !{!4235, !4239, !4243, !4247, !4251}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4233, file: !115, line: 732, baseType: !4236, size: 64)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!232, !234}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4233, file: !115, line: 733, baseType: !4240, size: 64, offset: 64)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4241 = !DISubroutineType(types: !4242)
!4242 = !{null, !234}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4233, file: !115, line: 734, baseType: !4244, size: 64, offset: 128)
!4244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{!222, !234, !7, !232}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4233, file: !115, line: 735, baseType: !4248, size: 64, offset: 192)
!4248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4249, size: 64)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{!232, !234, !7, !232, !232, !1499}
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4233, file: !115, line: 736, baseType: !4252, size: 64, offset: 256)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{!232, !234, !7, !232, !232, !223}
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !235, file: !115, line: 618, baseType: !4256, size: 64, offset: 1600)
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4257, size: 64)
!4257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !3913, line: 230, size: 512, elements: !4258)
!4258 = !{!4259, !4260, !4261, !4262, !4263, !4329, !4333}
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4257, file: !3913, line: 231, baseType: !305, size: 64)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4257, file: !3913, line: 232, baseType: !3551, size: 64, offset: 64)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !4257, file: !3913, line: 233, baseType: !3759, size: 64, offset: 128)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4257, file: !3913, line: 234, baseType: !238, size: 128, offset: 192)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "setup_irq", scope: !4257, file: !3913, line: 236, baseType: !4264, size: 64, offset: 320)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DISubroutineType(types: !4266)
!4266 = !{!232, !4256, !247, !4267}
!4267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4268, size: 64)
!4268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !3913, line: 85, size: 768, elements: !4269)
!4269 = !{!4270, !4271, !4272, !4273, !4274, !4280, !4286, !4290, !4291}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4268, file: !3913, line: 87, baseType: !238, size: 128)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4268, file: !3913, line: 88, baseType: !7, size: 32, offset: 128)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "nvec_used", scope: !4268, file: !3913, line: 89, baseType: !7, size: 32, offset: 160)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4268, file: !3913, line: 90, baseType: !3551, size: 64, offset: 192)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4268, file: !3913, line: 91, baseType: !4275, size: 96, offset: 256)
!4275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !3913, line: 8, size: 96, elements: !4276)
!4276 = !{!4277, !4278, !4279}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "address_lo", scope: !4275, file: !3913, line: 9, baseType: !223, size: 32)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "address_hi", scope: !4275, file: !3913, line: 10, baseType: !223, size: 32, offset: 32)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4275, file: !3913, line: 11, baseType: !223, size: 32, offset: 64)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !4268, file: !3913, line: 92, baseType: !4281, size: 64, offset: 384)
!4281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4282, size: 64)
!4282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_affinity_desc", file: !257, line: 308, size: 128, elements: !4283)
!4283 = !{!4284, !4285}
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4282, file: !257, line: 309, baseType: !1451, size: 64)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4282, file: !257, line: 310, baseType: !7, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg", scope: !4268, file: !3913, line: 97, baseType: !4287, size: 64, offset: 448)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{null, !4267, !222}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg_data", scope: !4268, file: !3913, line: 98, baseType: !222, size: 64, offset: 512)
!4291 = !DIDerivedType(tag: DW_TAG_member, scope: !4268, file: !3913, line: 100, baseType: !4292, size: 192, offset: 576)
!4292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4268, file: !3913, line: 100, size: 192, elements: !4293)
!4293 = !{!4294, !4314, !4321, !4325}
!4294 = !DIDerivedType(tag: DW_TAG_member, scope: !4292, file: !3913, line: 102, baseType: !4295, size: 192)
!4295 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4292, file: !3913, line: 102, size: 192, elements: !4296)
!4296 = !{!4297, !4298, !4309}
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "masked", scope: !4295, file: !3913, line: 103, baseType: !223, size: 32)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "msi_attrib", scope: !4295, file: !3913, line: 113, baseType: !4299, size: 64, offset: 32)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4295, file: !3913, line: 104, size: 64, elements: !4300)
!4300 = !{!4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "is_msix", scope: !4299, file: !3913, line: 105, baseType: !283, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "multiple", scope: !4299, file: !3913, line: 106, baseType: !283, size: 3, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "multi_cap", scope: !4299, file: !3913, line: 107, baseType: !283, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "maskbit", scope: !4299, file: !3913, line: 108, baseType: !283, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "is_64", scope: !4299, file: !3913, line: 109, baseType: !283, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtual", scope: !4299, file: !3913, line: 110, baseType: !283, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "entry_nr", scope: !4299, file: !3913, line: 111, baseType: !945, size: 16, offset: 16)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "default_irq", scope: !4299, file: !3913, line: 112, baseType: !7, size: 32, offset: 32)
!4309 = !DIDerivedType(tag: DW_TAG_member, scope: !4295, file: !3913, line: 114, baseType: !4310, size: 64, offset: 128)
!4310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4295, file: !3913, line: 114, size: 64, elements: !4311)
!4311 = !{!4312, !4313}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pos", scope: !4310, file: !3913, line: 115, baseType: !283, size: 8)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "mask_base", scope: !4310, file: !3913, line: 116, baseType: !222, size: 64)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "platform", scope: !4292, file: !3913, line: 127, baseType: !4315, size: 128)
!4315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_desc", file: !3913, line: 37, size: 128, elements: !4316)
!4316 = !{!4317, !4320}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "msi_priv_data", scope: !4315, file: !3913, line: 38, baseType: !4318, size: 64)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_priv_data", file: !3913, line: 19, flags: DIFlagFwdDecl)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !4315, file: !3913, line: 39, baseType: !945, size: 16, offset: 64)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "fsl_mc", scope: !4292, file: !3913, line: 128, baseType: !4322, size: 16)
!4322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_msi_desc", file: !3913, line: 46, size: 16, elements: !4323)
!4323 = !{!4324}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !4322, file: !3913, line: 47, baseType: !945, size: 16)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "inta", scope: !4292, file: !3913, line: 129, baseType: !4326, size: 16)
!4326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ti_sci_inta_msi_desc", file: !3913, line: 54, size: 16, elements: !4327)
!4327 = !{!4328}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index", scope: !4326, file: !3913, line: 55, baseType: !945, size: 16)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "setup_irqs", scope: !4257, file: !3913, line: 238, baseType: !4330, size: 64, offset: 384)
!4330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4331 = !DISubroutineType(types: !4332)
!4332 = !{!232, !4256, !247, !232, !232}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "teardown_irq", scope: !4257, file: !3913, line: 240, baseType: !4334, size: 64, offset: 448)
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = !DISubroutineType(types: !4336)
!4336 = !{null, !4256, !7}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !235, file: !115, line: 619, baseType: !222, size: 64, offset: 1664)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !235, file: !115, line: 620, baseType: !255, size: 64, offset: 1728)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !235, file: !115, line: 622, baseType: !285, size: 8, offset: 1792)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !235, file: !115, line: 623, baseType: !285, size: 8, offset: 1800)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !235, file: !115, line: 624, baseType: !285, size: 8, offset: 1808)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !235, file: !115, line: 625, baseType: !285, size: 8, offset: 1816)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !235, file: !115, line: 630, baseType: !4344, size: 384, offset: 1824)
!4344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 384, elements: !4345)
!4345 = !{!4346}
!4346 = !DISubrange(count: 48)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !235, file: !115, line: 632, baseType: !410, size: 16, offset: 2208)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !235, file: !115, line: 633, baseType: !4349, size: 16, offset: 2224)
!4349 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !115, line: 237, baseType: !410)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !235, file: !115, line: 634, baseType: !3551, size: 64, offset: 2240)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !235, file: !115, line: 635, baseType: !3552, size: 5568, offset: 2304)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !235, file: !115, line: 636, baseType: !436, size: 64, offset: 7872)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !235, file: !115, line: 637, baseType: !436, size: 64, offset: 7936)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !235, file: !115, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 64)
!4356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource_entry", file: !4357, line: 23, size: 768, elements: !4358)
!4357 = !DIFile(filename: "./include/linux/resource_ext.h", directory: "/home/lizy2001/genbc/linux")
!4358 = !{!4359, !4360, !4361, !4362}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4356, file: !4357, line: 24, baseType: !238, size: 128)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !4356, file: !4357, line: 25, baseType: !4132, size: 64, offset: 128)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4356, file: !4357, line: 26, baseType: !4126, size: 64, offset: 192)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "__res", scope: !4356, file: !4357, line: 27, baseType: !4122, size: 512, offset: 256)
!4363 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_addr_t", file: !115, line: 749, baseType: !227)
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 64)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_host_bridge", file: !115, line: 524, size: 6656, elements: !4366)
!4366 = !{!4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4379, !4385, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4407}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4365, file: !115, line: 525, baseType: !3552, size: 5568)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4365, file: !115, line: 526, baseType: !234, size: 64, offset: 5568)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4365, file: !115, line: 527, baseType: !4232, size: 64, offset: 5632)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "child_ops", scope: !4365, file: !115, line: 528, baseType: !4232, size: 64, offset: 5696)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4365, file: !115, line: 529, baseType: !222, size: 64, offset: 5760)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "busnr", scope: !4365, file: !115, line: 530, baseType: !232, size: 32, offset: 5824)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !4365, file: !115, line: 531, baseType: !238, size: 128, offset: 5888)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ranges", scope: !4365, file: !115, line: 532, baseType: !238, size: 128, offset: 6016)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "swizzle_irq", scope: !4365, file: !115, line: 533, baseType: !4376, size: 64, offset: 6144)
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{!283, !247, !294}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "map_irq", scope: !4365, file: !115, line: 534, baseType: !4380, size: 64, offset: 6208)
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4381, size: 64)
!4381 = !DISubroutineType(types: !4382)
!4382 = !{!232, !4383, !283, !283}
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 64)
!4384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "release_fn", scope: !4365, file: !115, line: 535, baseType: !4386, size: 64, offset: 6272)
!4386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4387, size: 64)
!4387 = !DISubroutineType(types: !4388)
!4388 = !{null, !4364}
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "release_data", scope: !4365, file: !115, line: 536, baseType: !222, size: 64, offset: 6336)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4365, file: !115, line: 537, baseType: !4256, size: 64, offset: 6400)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_reset_delay", scope: !4365, file: !115, line: 538, baseType: !7, size: 1, offset: 6464, flags: DIFlagBitField, extraData: i64 6464)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "no_ext_tags", scope: !4365, file: !115, line: 539, baseType: !7, size: 1, offset: 6465, flags: DIFlagBitField, extraData: i64 6464)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "native_aer", scope: !4365, file: !115, line: 540, baseType: !7, size: 1, offset: 6466, flags: DIFlagBitField, extraData: i64 6464)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "native_pcie_hotplug", scope: !4365, file: !115, line: 541, baseType: !7, size: 1, offset: 6467, flags: DIFlagBitField, extraData: i64 6464)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "native_shpc_hotplug", scope: !4365, file: !115, line: 542, baseType: !7, size: 1, offset: 6468, flags: DIFlagBitField, extraData: i64 6464)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "native_pme", scope: !4365, file: !115, line: 543, baseType: !7, size: 1, offset: 6469, flags: DIFlagBitField, extraData: i64 6464)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "native_ltr", scope: !4365, file: !115, line: 544, baseType: !7, size: 1, offset: 6470, flags: DIFlagBitField, extraData: i64 6464)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "native_dpc", scope: !4365, file: !115, line: 545, baseType: !7, size: 1, offset: 6471, flags: DIFlagBitField, extraData: i64 6464)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_config", scope: !4365, file: !115, line: 546, baseType: !7, size: 1, offset: 6472, flags: DIFlagBitField, extraData: i64 6464)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "size_windows", scope: !4365, file: !115, line: 547, baseType: !7, size: 1, offset: 6473, flags: DIFlagBitField, extraData: i64 6464)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "align_resource", scope: !4365, file: !115, line: 550, baseType: !4402, size: 64, offset: 6528)
!4402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4403, size: 64)
!4403 = !DISubroutineType(types: !4404)
!4404 = !{!4126, !247, !4405, !4126, !4126, !4126}
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4122)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4365, file: !115, line: 555, baseType: !2415, align: 512, offset: 6656)
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !241)
!4410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4411, size: 64)
!4411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4409)
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_domain_busn_res", file: !3, line: 40, size: 704, elements: !4414)
!4414 = !{!4415, !4416, !4417}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4413, file: !3, line: 41, baseType: !238, size: 128)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !4413, file: !3, line: 42, baseType: !4122, size: 512, offset: 128)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "domain_nr", scope: !4413, file: !3, line: 43, baseType: !232, size: 32, offset: 640)
!4418 = !{!0, !4419, !4421, !4424, !4432, !4437, !4439, !4444, !4446, !4448, !4450}
!4419 = !DIGlobalVariableExpression(var: !4420, expr: !DIExpression())
!4420 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pcibus_class_init244", scope: !2, file: !3, line: 108, type: !222, isLocal: true, isDefinition: true)
!4421 = !DIGlobalVariableExpression(var: !4422, expr: !DIExpression())
!4422 = distinct !DIGlobalVariable(name: "pcie_link_speed", scope: !2, file: !3, line: 673, type: !4423, isLocal: false, isDefinition: true)
!4423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, size: 128, elements: !1819)
!4424 = !DIGlobalVariableExpression(var: !4425, expr: !DIExpression())
!4425 = distinct !DIGlobalVariable(name: "speed_strings", scope: !4426, file: !3, line: 696, type: !4429, isLocal: true, isDefinition: true)
!4426 = distinct !DISubprogram(name: "pci_speed_string", scope: !3, file: !3, line: 693, type: !4427, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!309, !126}
!4429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 1600, elements: !4430)
!4430 = !{!4431}
!4431 = !DISubrange(count: 25)
!4432 = !DIGlobalVariableExpression(var: !4433, expr: !DIExpression())
!4433 = distinct !DIGlobalVariable(name: "__key", scope: !4434, file: !3, line: 106, type: !731, isLocal: true, isDefinition: true)
!4434 = distinct !DISubprogram(name: "pcibus_class_init", scope: !3, file: !3, line: 104, type: !4435, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!232}
!4437 = !DIGlobalVariableExpression(var: !4438, expr: !DIExpression())
!4438 = distinct !DIGlobalVariable(name: "pcibus_class", scope: !2, file: !3, line: 98, type: !3969, isLocal: true, isDefinition: true)
!4439 = !DIGlobalVariableExpression(var: !4440, expr: !DIExpression())
!4440 = distinct !DIGlobalVariable(name: "agp_speeds", scope: !2, file: !3, line: 736, type: !4441, isLocal: true, isDefinition: true)
!4441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 40, elements: !4442)
!4442 = !{!4443}
!4443 = !DISubrange(count: 5)
!4444 = !DIGlobalVariableExpression(var: !4445, expr: !DIExpression())
!4445 = distinct !DIGlobalVariable(name: "pcix_bus_speed", scope: !2, file: !3, line: 653, type: !4423, isLocal: true, isDefinition: true)
!4446 = !DIGlobalVariableExpression(var: !4447, expr: !DIExpression())
!4447 = distinct !DIGlobalVariable(name: "pci_domain_busn_res_list", scope: !2, file: !3, line: 38, type: !238, isLocal: true, isDefinition: true)
!4448 = !DIGlobalVariableExpression(var: !4449, expr: !DIExpression())
!4449 = distinct !DIGlobalVariable(name: "busn_resource", scope: !2, file: !3, line: 27, type: !4122, isLocal: true, isDefinition: true)
!4450 = !DIGlobalVariableExpression(var: !4451, expr: !DIExpression())
!4451 = distinct !DIGlobalVariable(name: "pci_rescan_remove_lock", scope: !2, file: !3, line: 3241, type: !1259, isLocal: true, isDefinition: true)
!4452 = !{i32 7, !"Dwarf Version", i32 4}
!4453 = !{i32 2, !"Debug Info Version", i32 3}
!4454 = !{i32 1, !"wchar_size", i32 2}
!4455 = !{i32 1, !"Code Model", i32 2}
!4456 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4457 = distinct !DISubprogram(name: "no_pci_devices", scope: !3, file: !3, line: 73, type: !4435, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!4458 = !DILocalVariable(name: "dev", scope: !4457, file: !3, line: 75, type: !3551)
!4459 = !DILocation(line: 75, column: 17, scope: !4457)
!4460 = !DILocalVariable(name: "no_devices", scope: !4457, file: !3, line: 76, type: !232)
!4461 = !DILocation(line: 76, column: 6, scope: !4457)
!4462 = !DILocation(line: 78, column: 8, scope: !4457)
!4463 = !DILocation(line: 78, column: 6, scope: !4457)
!4464 = !DILocation(line: 79, column: 16, scope: !4457)
!4465 = !DILocation(line: 79, column: 20, scope: !4457)
!4466 = !DILocation(line: 79, column: 13, scope: !4457)
!4467 = !DILocation(line: 80, column: 13, scope: !4457)
!4468 = !DILocation(line: 80, column: 2, scope: !4457)
!4469 = !DILocation(line: 81, column: 9, scope: !4457)
!4470 = !DILocation(line: 81, column: 2, scope: !4457)
!4471 = distinct !DISubprogram(name: "bus_find_next_device", scope: !3546, file: !3546, line: 222, type: !4472, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!3551, !3544, !3551}
!4474 = !DILocalVariable(name: "bus", arg: 1, scope: !4471, file: !3546, line: 222, type: !3544)
!4475 = !DILocation(line: 222, column: 39, scope: !4471)
!4476 = !DILocalVariable(name: "cur", arg: 2, scope: !4471, file: !3546, line: 222, type: !3551)
!4477 = !DILocation(line: 222, column: 58, scope: !4471)
!4478 = !DILocation(line: 224, column: 25, scope: !4471)
!4479 = !DILocation(line: 224, column: 30, scope: !4471)
!4480 = !DILocation(line: 224, column: 9, scope: !4471)
!4481 = !DILocation(line: 224, column: 2, scope: !4471)
!4482 = !DILocation(line: 106, column: 9, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 106, column: 9)
!4484 = !DILocation(line: 106, column: 2, scope: !4434)
!4485 = distinct !DISubprogram(name: "__pci_read_base", scope: !3, file: !3, line: 176, type: !4486, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!4486 = !DISubroutineType(types: !4487)
!4487 = !{!232, !247, !107, !4132, !7}
!4488 = !DILocalVariable(name: "dev", arg: 1, scope: !4485, file: !3, line: 176, type: !247)
!4489 = !DILocation(line: 176, column: 37, scope: !4485)
!4490 = !DILocalVariable(name: "type", arg: 2, scope: !4485, file: !3, line: 176, type: !107)
!4491 = !DILocation(line: 176, column: 60, scope: !4485)
!4492 = !DILocalVariable(name: "res", arg: 3, scope: !4485, file: !3, line: 177, type: !4132)
!4493 = !DILocation(line: 177, column: 24, scope: !4485)
!4494 = !DILocalVariable(name: "pos", arg: 4, scope: !4485, file: !3, line: 177, type: !7)
!4495 = !DILocation(line: 177, column: 42, scope: !4485)
!4496 = !DILocalVariable(name: "l", scope: !4485, file: !3, line: 179, type: !223)
!4497 = !DILocation(line: 179, column: 6, scope: !4485)
!4498 = !DILocalVariable(name: "sz", scope: !4485, file: !3, line: 179, type: !223)
!4499 = !DILocation(line: 179, column: 13, scope: !4485)
!4500 = !DILocalVariable(name: "mask", scope: !4485, file: !3, line: 179, type: !223)
!4501 = !DILocation(line: 179, column: 21, scope: !4485)
!4502 = !DILocalVariable(name: "l64", scope: !4485, file: !3, line: 180, type: !227)
!4503 = !DILocation(line: 180, column: 6, scope: !4485)
!4504 = !DILocalVariable(name: "sz64", scope: !4485, file: !3, line: 180, type: !227)
!4505 = !DILocation(line: 180, column: 11, scope: !4485)
!4506 = !DILocalVariable(name: "mask64", scope: !4485, file: !3, line: 180, type: !227)
!4507 = !DILocation(line: 180, column: 17, scope: !4485)
!4508 = !DILocalVariable(name: "orig_cmd", scope: !4485, file: !3, line: 181, type: !945)
!4509 = !DILocation(line: 181, column: 6, scope: !4485)
!4510 = !DILocalVariable(name: "region", scope: !4485, file: !3, line: 182, type: !4511)
!4511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus_region", file: !115, line: 754, size: 128, elements: !4512)
!4512 = !{!4513, !4514}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4511, file: !115, line: 755, baseType: !4363, size: 64)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4511, file: !115, line: 756, baseType: !4363, size: 64, offset: 64)
!4515 = !DILocation(line: 182, column: 24, scope: !4485)
!4516 = !DILocalVariable(name: "inverted_region", scope: !4485, file: !3, line: 182, type: !4511)
!4517 = !DILocation(line: 182, column: 32, scope: !4485)
!4518 = !DILocation(line: 184, column: 9, scope: !4485)
!4519 = !DILocation(line: 184, column: 7, scope: !4485)
!4520 = !DILocation(line: 187, column: 7, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 187, column: 6)
!4522 = !DILocation(line: 187, column: 12, scope: !4521)
!4523 = !DILocation(line: 187, column: 6, scope: !4485)
!4524 = !DILocation(line: 188, column: 24, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 187, column: 28)
!4526 = !DILocation(line: 188, column: 3, scope: !4525)
!4527 = !DILocation(line: 189, column: 7, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 189, column: 7)
!4529 = !DILocation(line: 189, column: 16, scope: !4528)
!4530 = !DILocation(line: 189, column: 7, scope: !4525)
!4531 = !DILocation(line: 190, column: 26, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 189, column: 45)
!4533 = !DILocation(line: 191, column: 5, scope: !4532)
!4534 = !DILocation(line: 191, column: 14, scope: !4532)
!4535 = !DILocation(line: 190, column: 4, scope: !4532)
!4536 = !DILocation(line: 192, column: 3, scope: !4532)
!4537 = !DILocation(line: 193, column: 2, scope: !4525)
!4538 = !DILocation(line: 195, column: 23, scope: !4485)
!4539 = !DILocation(line: 195, column: 14, scope: !4485)
!4540 = !DILocation(line: 195, column: 2, scope: !4485)
!4541 = !DILocation(line: 195, column: 7, scope: !4485)
!4542 = !DILocation(line: 195, column: 12, scope: !4485)
!4543 = !DILocation(line: 197, column: 24, scope: !4485)
!4544 = !DILocation(line: 197, column: 29, scope: !4485)
!4545 = !DILocation(line: 197, column: 2, scope: !4485)
!4546 = !DILocation(line: 198, column: 25, scope: !4485)
!4547 = !DILocation(line: 198, column: 30, scope: !4485)
!4548 = !DILocation(line: 198, column: 35, scope: !4485)
!4549 = !DILocation(line: 198, column: 39, scope: !4485)
!4550 = !DILocation(line: 198, column: 37, scope: !4485)
!4551 = !DILocation(line: 198, column: 2, scope: !4485)
!4552 = !DILocation(line: 199, column: 24, scope: !4485)
!4553 = !DILocation(line: 199, column: 29, scope: !4485)
!4554 = !DILocation(line: 199, column: 2, scope: !4485)
!4555 = !DILocation(line: 200, column: 25, scope: !4485)
!4556 = !DILocation(line: 200, column: 30, scope: !4485)
!4557 = !DILocation(line: 200, column: 35, scope: !4485)
!4558 = !DILocation(line: 200, column: 2, scope: !4485)
!4559 = !DILocation(line: 208, column: 6, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 208, column: 6)
!4561 = !DILocation(line: 208, column: 9, scope: !4560)
!4562 = !DILocation(line: 208, column: 6, scope: !4485)
!4563 = !DILocation(line: 209, column: 6, scope: !4560)
!4564 = !DILocation(line: 209, column: 3, scope: !4560)
!4565 = !DILocation(line: 215, column: 6, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 215, column: 6)
!4567 = !DILocation(line: 215, column: 8, scope: !4566)
!4568 = !DILocation(line: 215, column: 6, scope: !4485)
!4569 = !DILocation(line: 216, column: 5, scope: !4566)
!4570 = !DILocation(line: 216, column: 3, scope: !4566)
!4571 = !DILocation(line: 218, column: 6, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 218, column: 6)
!4573 = !DILocation(line: 218, column: 11, scope: !4572)
!4574 = !DILocation(line: 218, column: 6, scope: !4485)
!4575 = !DILocation(line: 219, column: 27, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 218, column: 31)
!4577 = !DILocation(line: 219, column: 32, scope: !4576)
!4578 = !DILocation(line: 219, column: 16, scope: !4576)
!4579 = !DILocation(line: 219, column: 3, scope: !4576)
!4580 = !DILocation(line: 219, column: 8, scope: !4576)
!4581 = !DILocation(line: 219, column: 14, scope: !4576)
!4582 = !DILocation(line: 220, column: 3, scope: !4576)
!4583 = !DILocation(line: 220, column: 8, scope: !4576)
!4584 = !DILocation(line: 220, column: 14, scope: !4576)
!4585 = !DILocation(line: 221, column: 7, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 221, column: 7)
!4587 = !DILocation(line: 221, column: 12, scope: !4586)
!4588 = !DILocation(line: 221, column: 18, scope: !4586)
!4589 = !DILocation(line: 221, column: 7, scope: !4576)
!4590 = !DILocation(line: 222, column: 10, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 221, column: 35)
!4592 = !DILocation(line: 222, column: 12, scope: !4591)
!4593 = !DILocation(line: 222, column: 8, scope: !4591)
!4594 = !DILocation(line: 223, column: 11, scope: !4591)
!4595 = !DILocation(line: 223, column: 14, scope: !4591)
!4596 = !DILocation(line: 223, column: 9, scope: !4591)
!4597 = !DILocation(line: 224, column: 11, scope: !4591)
!4598 = !DILocation(line: 225, column: 3, scope: !4591)
!4599 = !DILocation(line: 226, column: 10, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 225, column: 10)
!4601 = !DILocation(line: 226, column: 12, scope: !4600)
!4602 = !DILocation(line: 226, column: 8, scope: !4600)
!4603 = !DILocation(line: 227, column: 11, scope: !4600)
!4604 = !DILocation(line: 227, column: 14, scope: !4600)
!4605 = !DILocation(line: 227, column: 9, scope: !4600)
!4606 = !DILocation(line: 228, column: 11, scope: !4600)
!4607 = !DILocation(line: 230, column: 2, scope: !4576)
!4608 = !DILocation(line: 231, column: 7, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 231, column: 7)
!4610 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 230, column: 9)
!4611 = !DILocation(line: 231, column: 9, scope: !4609)
!4612 = !DILocation(line: 231, column: 7, scope: !4610)
!4613 = !DILocation(line: 232, column: 4, scope: !4609)
!4614 = !DILocation(line: 232, column: 9, scope: !4609)
!4615 = !DILocation(line: 232, column: 15, scope: !4609)
!4616 = !DILocation(line: 233, column: 9, scope: !4610)
!4617 = !DILocation(line: 233, column: 11, scope: !4610)
!4618 = !DILocation(line: 233, column: 7, scope: !4610)
!4619 = !DILocation(line: 234, column: 10, scope: !4610)
!4620 = !DILocation(line: 234, column: 13, scope: !4610)
!4621 = !DILocation(line: 234, column: 8, scope: !4610)
!4622 = !DILocation(line: 235, column: 10, scope: !4610)
!4623 = !DILocation(line: 238, column: 6, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 238, column: 6)
!4625 = !DILocation(line: 238, column: 11, scope: !4624)
!4626 = !DILocation(line: 238, column: 17, scope: !4624)
!4627 = !DILocation(line: 238, column: 6, scope: !4485)
!4628 = !DILocation(line: 239, column: 25, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4624, file: !3, line: 238, column: 38)
!4630 = !DILocation(line: 239, column: 30, scope: !4629)
!4631 = !DILocation(line: 239, column: 34, scope: !4629)
!4632 = !DILocation(line: 239, column: 3, scope: !4629)
!4633 = !DILocation(line: 240, column: 26, scope: !4629)
!4634 = !DILocation(line: 240, column: 31, scope: !4629)
!4635 = !DILocation(line: 240, column: 35, scope: !4629)
!4636 = !DILocation(line: 240, column: 3, scope: !4629)
!4637 = !DILocation(line: 241, column: 25, scope: !4629)
!4638 = !DILocation(line: 241, column: 30, scope: !4629)
!4639 = !DILocation(line: 241, column: 34, scope: !4629)
!4640 = !DILocation(line: 241, column: 3, scope: !4629)
!4641 = !DILocation(line: 242, column: 26, scope: !4629)
!4642 = !DILocation(line: 242, column: 31, scope: !4629)
!4643 = !DILocation(line: 242, column: 35, scope: !4629)
!4644 = !DILocation(line: 242, column: 40, scope: !4629)
!4645 = !DILocation(line: 242, column: 3, scope: !4629)
!4646 = !DILocation(line: 244, column: 16, scope: !4629)
!4647 = !DILocation(line: 244, column: 11, scope: !4629)
!4648 = !DILocation(line: 244, column: 18, scope: !4629)
!4649 = !DILocation(line: 244, column: 7, scope: !4629)
!4650 = !DILocation(line: 245, column: 17, scope: !4629)
!4651 = !DILocation(line: 245, column: 12, scope: !4629)
!4652 = !DILocation(line: 245, column: 20, scope: !4629)
!4653 = !DILocation(line: 245, column: 8, scope: !4629)
!4654 = !DILocation(line: 246, column: 10, scope: !4629)
!4655 = !DILocation(line: 247, column: 2, scope: !4629)
!4656 = !DILocation(line: 249, column: 7, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 249, column: 6)
!4658 = !DILocation(line: 249, column: 12, scope: !4657)
!4659 = !DILocation(line: 249, column: 27, scope: !4657)
!4660 = !DILocation(line: 249, column: 31, scope: !4657)
!4661 = !DILocation(line: 249, column: 40, scope: !4657)
!4662 = !DILocation(line: 249, column: 6, scope: !4485)
!4663 = !DILocation(line: 250, column: 25, scope: !4657)
!4664 = !DILocation(line: 250, column: 43, scope: !4657)
!4665 = !DILocation(line: 250, column: 3, scope: !4657)
!4666 = !DILocation(line: 252, column: 7, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 252, column: 6)
!4668 = !DILocation(line: 252, column: 6, scope: !4485)
!4669 = !DILocation(line: 253, column: 3, scope: !4667)
!4670 = !DILocation(line: 255, column: 18, scope: !4485)
!4671 = !DILocation(line: 255, column: 23, scope: !4485)
!4672 = !DILocation(line: 255, column: 29, scope: !4485)
!4673 = !DILocation(line: 255, column: 9, scope: !4485)
!4674 = !DILocation(line: 255, column: 7, scope: !4485)
!4675 = !DILocation(line: 256, column: 7, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 256, column: 6)
!4677 = !DILocation(line: 256, column: 6, scope: !4485)
!4678 = !DILocation(line: 257, column: 3, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 256, column: 13)
!4680 = !DILocation(line: 259, column: 3, scope: !4679)
!4681 = !DILocation(line: 262, column: 6, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 262, column: 6)
!4683 = !DILocation(line: 262, column: 11, scope: !4682)
!4684 = !DILocation(line: 262, column: 17, scope: !4682)
!4685 = !DILocation(line: 262, column: 6, scope: !4485)
!4686 = !DILocation(line: 282, column: 2, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 262, column: 38)
!4688 = !DILocation(line: 284, column: 17, scope: !4485)
!4689 = !DILocation(line: 284, column: 9, scope: !4485)
!4690 = !DILocation(line: 284, column: 15, scope: !4485)
!4691 = !DILocation(line: 285, column: 15, scope: !4485)
!4692 = !DILocation(line: 285, column: 21, scope: !4485)
!4693 = !DILocation(line: 285, column: 19, scope: !4485)
!4694 = !DILocation(line: 285, column: 26, scope: !4485)
!4695 = !DILocation(line: 285, column: 9, scope: !4485)
!4696 = !DILocation(line: 285, column: 13, scope: !4485)
!4697 = !DILocation(line: 287, column: 26, scope: !4485)
!4698 = !DILocation(line: 287, column: 31, scope: !4485)
!4699 = !DILocation(line: 287, column: 36, scope: !4485)
!4700 = !DILocation(line: 287, column: 2, scope: !4485)
!4701 = !DILocation(line: 288, column: 26, scope: !4485)
!4702 = !DILocation(line: 288, column: 31, scope: !4485)
!4703 = !DILocation(line: 288, column: 54, scope: !4485)
!4704 = !DILocation(line: 288, column: 2, scope: !4485)
!4705 = !DILocation(line: 301, column: 22, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 301, column: 6)
!4707 = !DILocation(line: 301, column: 38, scope: !4706)
!4708 = !DILocation(line: 301, column: 28, scope: !4706)
!4709 = !DILocation(line: 301, column: 6, scope: !4485)
!4710 = !DILocation(line: 302, column: 3, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 301, column: 45)
!4712 = !DILocation(line: 302, column: 8, scope: !4711)
!4713 = !DILocation(line: 302, column: 14, scope: !4711)
!4714 = !DILocation(line: 303, column: 3, scope: !4711)
!4715 = !DILocation(line: 303, column: 8, scope: !4711)
!4716 = !DILocation(line: 303, column: 14, scope: !4711)
!4717 = !DILocation(line: 304, column: 21, scope: !4711)
!4718 = !DILocation(line: 304, column: 34, scope: !4711)
!4719 = !DILocation(line: 304, column: 25, scope: !4711)
!4720 = !DILocation(line: 304, column: 3, scope: !4711)
!4721 = !DILocation(line: 304, column: 8, scope: !4711)
!4722 = !DILocation(line: 304, column: 12, scope: !4711)
!4723 = !DILocation(line: 305, column: 3, scope: !4711)
!4724 = !DILocation(line: 307, column: 2, scope: !4711)
!4725 = !DILocation(line: 309, column: 2, scope: !4485)
!4726 = !DILabel(scope: !4485, name: "fail", file: !3, line: 312)
!4727 = !DILocation(line: 312, column: 1, scope: !4485)
!4728 = !DILocation(line: 313, column: 2, scope: !4485)
!4729 = !DILocation(line: 313, column: 7, scope: !4485)
!4730 = !DILocation(line: 313, column: 13, scope: !4485)
!4731 = !DILabel(scope: !4485, name: "out", file: !3, line: 314)
!4732 = !DILocation(line: 314, column: 1, scope: !4485)
!4733 = !DILocation(line: 315, column: 6, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 315, column: 6)
!4735 = !DILocation(line: 315, column: 11, scope: !4734)
!4736 = !DILocation(line: 315, column: 6, scope: !4485)
!4737 = !DILocation(line: 316, column: 3, scope: !4734)
!4738 = !DILocation(line: 318, column: 10, scope: !4485)
!4739 = !DILocation(line: 318, column: 15, scope: !4485)
!4740 = !DILocation(line: 318, column: 21, scope: !4485)
!4741 = !DILocation(line: 318, column: 9, scope: !4485)
!4742 = !DILocation(line: 318, column: 2, scope: !4485)
!4743 = distinct !DISubprogram(name: "pci_name", scope: !115, file: !115, line: 1875, type: !4744, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!4744 = !DISubroutineType(types: !4745)
!4745 = !{!309, !4383}
!4746 = !DILocalVariable(name: "pdev", arg: 1, scope: !4743, file: !115, line: 1875, type: !4383)
!4747 = !DILocation(line: 1875, column: 58, scope: !4743)
!4748 = !DILocation(line: 1877, column: 19, scope: !4743)
!4749 = !DILocation(line: 1877, column: 25, scope: !4743)
!4750 = !DILocation(line: 1877, column: 9, scope: !4743)
!4751 = !DILocation(line: 1877, column: 2, scope: !4743)
!4752 = distinct !DISubprogram(name: "decode_bar", scope: !3, file: !3, line: 132, type: !4753, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{!418, !247, !223}
!4755 = !DILocalVariable(name: "dev", arg: 1, scope: !4752, file: !3, line: 132, type: !247)
!4756 = !DILocation(line: 132, column: 56, scope: !4752)
!4757 = !DILocalVariable(name: "bar", arg: 2, scope: !4752, file: !3, line: 132, type: !223)
!4758 = !DILocation(line: 132, column: 65, scope: !4752)
!4759 = !DILocalVariable(name: "mem_type", scope: !4752, file: !3, line: 134, type: !223)
!4760 = !DILocation(line: 134, column: 6, scope: !4752)
!4761 = !DILocalVariable(name: "flags", scope: !4752, file: !3, line: 135, type: !418)
!4762 = !DILocation(line: 135, column: 16, scope: !4752)
!4763 = !DILocation(line: 137, column: 7, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 137, column: 6)
!4765 = !DILocation(line: 137, column: 11, scope: !4764)
!4766 = !DILocation(line: 137, column: 37, scope: !4764)
!4767 = !DILocation(line: 137, column: 6, scope: !4752)
!4768 = !DILocation(line: 138, column: 11, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 137, column: 67)
!4770 = !DILocation(line: 138, column: 15, scope: !4769)
!4771 = !DILocation(line: 138, column: 9, scope: !4769)
!4772 = !DILocation(line: 139, column: 9, scope: !4769)
!4773 = !DILocation(line: 140, column: 10, scope: !4769)
!4774 = !DILocation(line: 140, column: 3, scope: !4769)
!4775 = !DILocation(line: 143, column: 10, scope: !4752)
!4776 = !DILocation(line: 143, column: 14, scope: !4752)
!4777 = !DILocation(line: 143, column: 8, scope: !4752)
!4778 = !DILocation(line: 144, column: 8, scope: !4752)
!4779 = !DILocation(line: 145, column: 6, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 145, column: 6)
!4781 = !DILocation(line: 145, column: 12, scope: !4780)
!4782 = !DILocation(line: 145, column: 6, scope: !4752)
!4783 = !DILocation(line: 146, column: 9, scope: !4780)
!4784 = !DILocation(line: 146, column: 3, scope: !4780)
!4785 = !DILocation(line: 148, column: 13, scope: !4752)
!4786 = !DILocation(line: 148, column: 17, scope: !4752)
!4787 = !DILocation(line: 148, column: 11, scope: !4752)
!4788 = !DILocation(line: 149, column: 10, scope: !4752)
!4789 = !DILocation(line: 149, column: 2, scope: !4752)
!4790 = !DILocation(line: 151, column: 3, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 149, column: 20)
!4792 = !DILocation(line: 154, column: 3, scope: !4791)
!4793 = !DILocation(line: 156, column: 9, scope: !4791)
!4794 = !DILocation(line: 157, column: 3, scope: !4791)
!4795 = !DILocation(line: 160, column: 3, scope: !4791)
!4796 = !DILocation(line: 162, column: 9, scope: !4752)
!4797 = !DILocation(line: 162, column: 2, scope: !4752)
!4798 = !DILocation(line: 163, column: 1, scope: !4752)
!4799 = distinct !DISubprogram(name: "pci_size", scope: !3, file: !3, line: 110, type: !4800, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!227, !227, !227, !227}
!4802 = !DILocalVariable(name: "base", arg: 1, scope: !4799, file: !3, line: 110, type: !227)
!4803 = !DILocation(line: 110, column: 25, scope: !4799)
!4804 = !DILocalVariable(name: "maxbase", arg: 2, scope: !4799, file: !3, line: 110, type: !227)
!4805 = !DILocation(line: 110, column: 35, scope: !4799)
!4806 = !DILocalVariable(name: "mask", arg: 3, scope: !4799, file: !3, line: 110, type: !227)
!4807 = !DILocation(line: 110, column: 48, scope: !4799)
!4808 = !DILocalVariable(name: "size", scope: !4799, file: !3, line: 112, type: !227)
!4809 = !DILocation(line: 112, column: 6, scope: !4799)
!4810 = !DILocation(line: 112, column: 13, scope: !4799)
!4811 = !DILocation(line: 112, column: 20, scope: !4799)
!4812 = !DILocation(line: 112, column: 18, scope: !4799)
!4813 = !DILocation(line: 113, column: 7, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 113, column: 6)
!4815 = !DILocation(line: 113, column: 6, scope: !4799)
!4816 = !DILocation(line: 114, column: 3, scope: !4814)
!4817 = !DILocation(line: 120, column: 9, scope: !4799)
!4818 = !DILocation(line: 120, column: 18, scope: !4799)
!4819 = !DILocation(line: 120, column: 22, scope: !4799)
!4820 = !DILocation(line: 120, column: 16, scope: !4799)
!4821 = !DILocation(line: 120, column: 14, scope: !4799)
!4822 = !DILocation(line: 120, column: 7, scope: !4799)
!4823 = !DILocation(line: 126, column: 6, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 126, column: 6)
!4825 = !DILocation(line: 126, column: 14, scope: !4824)
!4826 = !DILocation(line: 126, column: 11, scope: !4824)
!4827 = !DILocation(line: 126, column: 22, scope: !4824)
!4828 = !DILocation(line: 126, column: 27, scope: !4824)
!4829 = !DILocation(line: 126, column: 35, scope: !4824)
!4830 = !DILocation(line: 126, column: 40, scope: !4824)
!4831 = !DILocation(line: 126, column: 32, scope: !4824)
!4832 = !DILocation(line: 126, column: 48, scope: !4824)
!4833 = !DILocation(line: 126, column: 46, scope: !4824)
!4834 = !DILocation(line: 126, column: 57, scope: !4824)
!4835 = !DILocation(line: 126, column: 54, scope: !4824)
!4836 = !DILocation(line: 126, column: 6, scope: !4799)
!4837 = !DILocation(line: 127, column: 3, scope: !4824)
!4838 = !DILocation(line: 129, column: 9, scope: !4799)
!4839 = !DILocation(line: 129, column: 2, scope: !4799)
!4840 = !DILocation(line: 130, column: 1, scope: !4799)
!4841 = distinct !DISubprogram(name: "pci_read_bridge_bases", scope: !3, file: !3, line: 513, type: !4241, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!4842 = !DILocalVariable(name: "child", arg: 1, scope: !4841, file: !3, line: 513, type: !234)
!4843 = !DILocation(line: 513, column: 44, scope: !4841)
!4844 = !DILocalVariable(name: "dev", scope: !4841, file: !3, line: 515, type: !247)
!4845 = !DILocation(line: 515, column: 18, scope: !4841)
!4846 = !DILocation(line: 515, column: 24, scope: !4841)
!4847 = !DILocation(line: 515, column: 31, scope: !4841)
!4848 = !DILocalVariable(name: "res", scope: !4841, file: !3, line: 516, type: !4132)
!4849 = !DILocation(line: 516, column: 19, scope: !4841)
!4850 = !DILocalVariable(name: "i", scope: !4841, file: !3, line: 517, type: !232)
!4851 = !DILocation(line: 517, column: 6, scope: !4841)
!4852 = !DILocation(line: 519, column: 22, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 519, column: 6)
!4854 = !DILocation(line: 519, column: 6, scope: !4853)
!4855 = !DILocation(line: 519, column: 6, scope: !4841)
!4856 = !DILocation(line: 520, column: 3, scope: !4853)
!4857 = !DILocation(line: 522, column: 2, scope: !4841)
!4858 = !DILocation(line: 526, column: 27, scope: !4841)
!4859 = !DILocation(line: 526, column: 2, scope: !4841)
!4860 = !DILocation(line: 527, column: 9, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 527, column: 2)
!4862 = !DILocation(line: 527, column: 7, scope: !4861)
!4863 = !DILocation(line: 527, column: 14, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 527, column: 2)
!4865 = !DILocation(line: 527, column: 16, scope: !4864)
!4866 = !DILocation(line: 527, column: 2, scope: !4861)
!4867 = !DILocation(line: 528, column: 25, scope: !4864)
!4868 = !DILocation(line: 528, column: 30, scope: !4864)
!4869 = !DILocation(line: 528, column: 60, scope: !4864)
!4870 = !DILocation(line: 528, column: 59, scope: !4864)
!4871 = !DILocation(line: 528, column: 3, scope: !4864)
!4872 = !DILocation(line: 528, column: 10, scope: !4864)
!4873 = !DILocation(line: 528, column: 19, scope: !4864)
!4874 = !DILocation(line: 528, column: 22, scope: !4864)
!4875 = !DILocation(line: 527, column: 44, scope: !4864)
!4876 = !DILocation(line: 527, column: 2, scope: !4864)
!4877 = distinct !{!4877, !4866, !4878}
!4878 = !DILocation(line: 528, column: 61, scope: !4861)
!4879 = !DILocation(line: 530, column: 21, scope: !4841)
!4880 = !DILocation(line: 530, column: 2, scope: !4841)
!4881 = !DILocation(line: 531, column: 23, scope: !4841)
!4882 = !DILocation(line: 531, column: 2, scope: !4841)
!4883 = !DILocation(line: 532, column: 28, scope: !4841)
!4884 = !DILocation(line: 532, column: 2, scope: !4841)
!4885 = !DILocation(line: 534, column: 6, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 534, column: 6)
!4887 = !DILocation(line: 534, column: 11, scope: !4886)
!4888 = !DILocation(line: 534, column: 6, scope: !4841)
!4889 = !DILocation(line: 535, column: 3, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 535, column: 3)
!4891 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 534, column: 24)
!4892 = !DILocation(line: 535, column: 3, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 535, column: 3)
!4894 = !DILocation(line: 536, column: 8, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 536, column: 8)
!4896 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 535, column: 52)
!4897 = !DILocation(line: 536, column: 12, scope: !4895)
!4898 = !DILocation(line: 536, column: 15, scope: !4895)
!4899 = !DILocation(line: 536, column: 20, scope: !4895)
!4900 = !DILocation(line: 536, column: 8, scope: !4896)
!4901 = !DILocation(line: 537, column: 26, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 536, column: 27)
!4903 = !DILocation(line: 537, column: 33, scope: !4902)
!4904 = !DILocation(line: 537, column: 5, scope: !4902)
!4905 = !DILocation(line: 539, column: 5, scope: !4902)
!4906 = !DILocation(line: 541, column: 4, scope: !4902)
!4907 = !DILocation(line: 542, column: 3, scope: !4896)
!4908 = distinct !{!4908, !4889, !4909}
!4909 = !DILocation(line: 542, column: 3, scope: !4890)
!4910 = !DILocation(line: 543, column: 2, scope: !4891)
!4911 = !DILocation(line: 544, column: 1, scope: !4841)
!4912 = distinct !DISubprogram(name: "pci_is_root_bus", scope: !115, file: !115, line: 656, type: !4913, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!4913 = !DISubroutineType(types: !4914)
!4914 = !{!576, !234}
!4915 = !DILocalVariable(name: "pbus", arg: 1, scope: !4912, file: !115, line: 656, type: !234)
!4916 = !DILocation(line: 656, column: 52, scope: !4912)
!4917 = !DILocation(line: 658, column: 11, scope: !4912)
!4918 = !DILocation(line: 658, column: 17, scope: !4912)
!4919 = !DILocation(line: 658, column: 9, scope: !4912)
!4920 = !DILocation(line: 658, column: 2, scope: !4912)
!4921 = distinct !DISubprogram(name: "pci_read_bridge_io", scope: !3, file: !3, line: 398, type: !4241, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!4922 = !DILocalVariable(name: "child", arg: 1, scope: !4921, file: !3, line: 398, type: !234)
!4923 = !DILocation(line: 398, column: 48, scope: !4921)
!4924 = !DILocalVariable(name: "dev", scope: !4921, file: !3, line: 400, type: !247)
!4925 = !DILocation(line: 400, column: 18, scope: !4921)
!4926 = !DILocation(line: 400, column: 24, scope: !4921)
!4927 = !DILocation(line: 400, column: 31, scope: !4921)
!4928 = !DILocalVariable(name: "io_base_lo", scope: !4921, file: !3, line: 401, type: !283)
!4929 = !DILocation(line: 401, column: 5, scope: !4921)
!4930 = !DILocalVariable(name: "io_limit_lo", scope: !4921, file: !3, line: 401, type: !283)
!4931 = !DILocation(line: 401, column: 17, scope: !4921)
!4932 = !DILocalVariable(name: "io_mask", scope: !4921, file: !3, line: 402, type: !418)
!4933 = !DILocation(line: 402, column: 16, scope: !4921)
!4934 = !DILocalVariable(name: "io_granularity", scope: !4921, file: !3, line: 402, type: !418)
!4935 = !DILocation(line: 402, column: 25, scope: !4921)
!4936 = !DILocalVariable(name: "base", scope: !4921, file: !3, line: 402, type: !418)
!4937 = !DILocation(line: 402, column: 41, scope: !4921)
!4938 = !DILocalVariable(name: "limit", scope: !4921, file: !3, line: 402, type: !418)
!4939 = !DILocation(line: 402, column: 47, scope: !4921)
!4940 = !DILocalVariable(name: "region", scope: !4921, file: !3, line: 403, type: !4511)
!4941 = !DILocation(line: 403, column: 24, scope: !4921)
!4942 = !DILocalVariable(name: "res", scope: !4921, file: !3, line: 404, type: !4132)
!4943 = !DILocation(line: 404, column: 19, scope: !4921)
!4944 = !DILocation(line: 406, column: 10, scope: !4921)
!4945 = !DILocation(line: 407, column: 17, scope: !4921)
!4946 = !DILocation(line: 408, column: 6, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 408, column: 6)
!4948 = !DILocation(line: 408, column: 11, scope: !4947)
!4949 = !DILocation(line: 408, column: 6, scope: !4921)
!4950 = !DILocation(line: 410, column: 11, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 408, column: 25)
!4952 = !DILocation(line: 411, column: 18, scope: !4951)
!4953 = !DILocation(line: 412, column: 2, scope: !4951)
!4954 = !DILocation(line: 414, column: 8, scope: !4921)
!4955 = !DILocation(line: 414, column: 15, scope: !4921)
!4956 = !DILocation(line: 414, column: 6, scope: !4921)
!4957 = !DILocation(line: 415, column: 23, scope: !4921)
!4958 = !DILocation(line: 415, column: 2, scope: !4921)
!4959 = !DILocation(line: 416, column: 23, scope: !4921)
!4960 = !DILocation(line: 416, column: 2, scope: !4921)
!4961 = !DILocation(line: 417, column: 10, scope: !4921)
!4962 = !DILocation(line: 417, column: 23, scope: !4921)
!4963 = !DILocation(line: 417, column: 21, scope: !4921)
!4964 = !DILocation(line: 417, column: 32, scope: !4921)
!4965 = !DILocation(line: 417, column: 7, scope: !4921)
!4966 = !DILocation(line: 418, column: 11, scope: !4921)
!4967 = !DILocation(line: 418, column: 25, scope: !4921)
!4968 = !DILocation(line: 418, column: 23, scope: !4921)
!4969 = !DILocation(line: 418, column: 34, scope: !4921)
!4970 = !DILocation(line: 418, column: 8, scope: !4921)
!4971 = !DILocation(line: 420, column: 7, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 420, column: 6)
!4973 = !DILocation(line: 420, column: 18, scope: !4972)
!4974 = !DILocation(line: 420, column: 44, scope: !4972)
!4975 = !DILocation(line: 420, column: 6, scope: !4921)
!4976 = !DILocalVariable(name: "io_base_hi", scope: !4977, file: !3, line: 421, type: !945)
!4977 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 420, column: 69)
!4978 = !DILocation(line: 421, column: 7, scope: !4977)
!4979 = !DILocalVariable(name: "io_limit_hi", scope: !4977, file: !3, line: 421, type: !945)
!4980 = !DILocation(line: 421, column: 19, scope: !4977)
!4981 = !DILocation(line: 423, column: 24, scope: !4977)
!4982 = !DILocation(line: 423, column: 3, scope: !4977)
!4983 = !DILocation(line: 424, column: 24, scope: !4977)
!4984 = !DILocation(line: 424, column: 3, scope: !4977)
!4985 = !DILocation(line: 425, column: 28, scope: !4977)
!4986 = !DILocation(line: 425, column: 12, scope: !4977)
!4987 = !DILocation(line: 425, column: 39, scope: !4977)
!4988 = !DILocation(line: 425, column: 8, scope: !4977)
!4989 = !DILocation(line: 426, column: 29, scope: !4977)
!4990 = !DILocation(line: 426, column: 13, scope: !4977)
!4991 = !DILocation(line: 426, column: 41, scope: !4977)
!4992 = !DILocation(line: 426, column: 9, scope: !4977)
!4993 = !DILocation(line: 427, column: 2, scope: !4977)
!4994 = !DILocation(line: 429, column: 6, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 429, column: 6)
!4996 = !DILocation(line: 429, column: 14, scope: !4995)
!4997 = !DILocation(line: 429, column: 11, scope: !4995)
!4998 = !DILocation(line: 429, column: 6, scope: !4921)
!4999 = !DILocation(line: 430, column: 17, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 429, column: 21)
!5001 = !DILocation(line: 430, column: 28, scope: !5000)
!5002 = !DILocation(line: 430, column: 54, scope: !5000)
!5003 = !DILocation(line: 430, column: 3, scope: !5000)
!5004 = !DILocation(line: 430, column: 8, scope: !5000)
!5005 = !DILocation(line: 430, column: 14, scope: !5000)
!5006 = !DILocation(line: 431, column: 18, scope: !5000)
!5007 = !DILocation(line: 431, column: 10, scope: !5000)
!5008 = !DILocation(line: 431, column: 16, scope: !5000)
!5009 = !DILocation(line: 432, column: 16, scope: !5000)
!5010 = !DILocation(line: 432, column: 24, scope: !5000)
!5011 = !DILocation(line: 432, column: 22, scope: !5000)
!5012 = !DILocation(line: 432, column: 39, scope: !5000)
!5013 = !DILocation(line: 432, column: 10, scope: !5000)
!5014 = !DILocation(line: 432, column: 14, scope: !5000)
!5015 = !DILocation(line: 433, column: 27, scope: !5000)
!5016 = !DILocation(line: 433, column: 32, scope: !5000)
!5017 = !DILocation(line: 433, column: 37, scope: !5000)
!5018 = !DILocation(line: 433, column: 3, scope: !5000)
!5019 = !DILocation(line: 434, column: 3, scope: !5000)
!5020 = !DILocation(line: 435, column: 2, scope: !5000)
!5021 = !DILocation(line: 436, column: 1, scope: !4921)
!5022 = distinct !DISubprogram(name: "pci_read_bridge_mmio", scope: !3, file: !3, line: 438, type: !4241, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5023 = !DILocalVariable(name: "child", arg: 1, scope: !5022, file: !3, line: 438, type: !234)
!5024 = !DILocation(line: 438, column: 50, scope: !5022)
!5025 = !DILocalVariable(name: "dev", scope: !5022, file: !3, line: 440, type: !247)
!5026 = !DILocation(line: 440, column: 18, scope: !5022)
!5027 = !DILocation(line: 440, column: 24, scope: !5022)
!5028 = !DILocation(line: 440, column: 31, scope: !5022)
!5029 = !DILocalVariable(name: "mem_base_lo", scope: !5022, file: !3, line: 441, type: !945)
!5030 = !DILocation(line: 441, column: 6, scope: !5022)
!5031 = !DILocalVariable(name: "mem_limit_lo", scope: !5022, file: !3, line: 441, type: !945)
!5032 = !DILocation(line: 441, column: 19, scope: !5022)
!5033 = !DILocalVariable(name: "base", scope: !5022, file: !3, line: 442, type: !418)
!5034 = !DILocation(line: 442, column: 16, scope: !5022)
!5035 = !DILocalVariable(name: "limit", scope: !5022, file: !3, line: 442, type: !418)
!5036 = !DILocation(line: 442, column: 22, scope: !5022)
!5037 = !DILocalVariable(name: "region", scope: !5022, file: !3, line: 443, type: !4511)
!5038 = !DILocation(line: 443, column: 24, scope: !5022)
!5039 = !DILocalVariable(name: "res", scope: !5022, file: !3, line: 444, type: !4132)
!5040 = !DILocation(line: 444, column: 19, scope: !5022)
!5041 = !DILocation(line: 446, column: 8, scope: !5022)
!5042 = !DILocation(line: 446, column: 15, scope: !5022)
!5043 = !DILocation(line: 446, column: 6, scope: !5022)
!5044 = !DILocation(line: 447, column: 23, scope: !5022)
!5045 = !DILocation(line: 447, column: 2, scope: !5022)
!5046 = !DILocation(line: 448, column: 23, scope: !5022)
!5047 = !DILocation(line: 448, column: 2, scope: !5022)
!5048 = !DILocation(line: 449, column: 26, scope: !5022)
!5049 = !DILocation(line: 449, column: 10, scope: !5022)
!5050 = !DILocation(line: 449, column: 38, scope: !5022)
!5051 = !DILocation(line: 449, column: 63, scope: !5022)
!5052 = !DILocation(line: 449, column: 7, scope: !5022)
!5053 = !DILocation(line: 450, column: 27, scope: !5022)
!5054 = !DILocation(line: 450, column: 11, scope: !5022)
!5055 = !DILocation(line: 450, column: 40, scope: !5022)
!5056 = !DILocation(line: 450, column: 65, scope: !5022)
!5057 = !DILocation(line: 450, column: 8, scope: !5022)
!5058 = !DILocation(line: 451, column: 6, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 451, column: 6)
!5060 = !DILocation(line: 451, column: 14, scope: !5059)
!5061 = !DILocation(line: 451, column: 11, scope: !5059)
!5062 = !DILocation(line: 451, column: 6, scope: !5022)
!5063 = !DILocation(line: 452, column: 17, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 451, column: 21)
!5065 = !DILocation(line: 452, column: 29, scope: !5064)
!5066 = !DILocation(line: 452, column: 59, scope: !5064)
!5067 = !DILocation(line: 452, column: 3, scope: !5064)
!5068 = !DILocation(line: 452, column: 8, scope: !5064)
!5069 = !DILocation(line: 452, column: 14, scope: !5064)
!5070 = !DILocation(line: 453, column: 18, scope: !5064)
!5071 = !DILocation(line: 453, column: 10, scope: !5064)
!5072 = !DILocation(line: 453, column: 16, scope: !5064)
!5073 = !DILocation(line: 454, column: 16, scope: !5064)
!5074 = !DILocation(line: 454, column: 22, scope: !5064)
!5075 = !DILocation(line: 454, column: 10, scope: !5064)
!5076 = !DILocation(line: 454, column: 14, scope: !5064)
!5077 = !DILocation(line: 455, column: 27, scope: !5064)
!5078 = !DILocation(line: 455, column: 32, scope: !5064)
!5079 = !DILocation(line: 455, column: 37, scope: !5064)
!5080 = !DILocation(line: 455, column: 3, scope: !5064)
!5081 = !DILocation(line: 456, column: 3, scope: !5064)
!5082 = !DILocation(line: 457, column: 2, scope: !5064)
!5083 = !DILocation(line: 458, column: 1, scope: !5022)
!5084 = distinct !DISubprogram(name: "pci_read_bridge_mmio_pref", scope: !3, file: !3, line: 460, type: !4241, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5085 = !DILocalVariable(name: "child", arg: 1, scope: !5084, file: !3, line: 460, type: !234)
!5086 = !DILocation(line: 460, column: 55, scope: !5084)
!5087 = !DILocalVariable(name: "dev", scope: !5084, file: !3, line: 462, type: !247)
!5088 = !DILocation(line: 462, column: 18, scope: !5084)
!5089 = !DILocation(line: 462, column: 24, scope: !5084)
!5090 = !DILocation(line: 462, column: 31, scope: !5084)
!5091 = !DILocalVariable(name: "mem_base_lo", scope: !5084, file: !3, line: 463, type: !945)
!5092 = !DILocation(line: 463, column: 6, scope: !5084)
!5093 = !DILocalVariable(name: "mem_limit_lo", scope: !5084, file: !3, line: 463, type: !945)
!5094 = !DILocation(line: 463, column: 19, scope: !5084)
!5095 = !DILocalVariable(name: "base64", scope: !5084, file: !3, line: 464, type: !227)
!5096 = !DILocation(line: 464, column: 6, scope: !5084)
!5097 = !DILocalVariable(name: "limit64", scope: !5084, file: !3, line: 464, type: !227)
!5098 = !DILocation(line: 464, column: 14, scope: !5084)
!5099 = !DILocalVariable(name: "base", scope: !5084, file: !3, line: 465, type: !4363)
!5100 = !DILocation(line: 465, column: 17, scope: !5084)
!5101 = !DILocalVariable(name: "limit", scope: !5084, file: !3, line: 465, type: !4363)
!5102 = !DILocation(line: 465, column: 23, scope: !5084)
!5103 = !DILocalVariable(name: "region", scope: !5084, file: !3, line: 466, type: !4511)
!5104 = !DILocation(line: 466, column: 24, scope: !5084)
!5105 = !DILocalVariable(name: "res", scope: !5084, file: !3, line: 467, type: !4132)
!5106 = !DILocation(line: 467, column: 19, scope: !5084)
!5107 = !DILocation(line: 469, column: 8, scope: !5084)
!5108 = !DILocation(line: 469, column: 15, scope: !5084)
!5109 = !DILocation(line: 469, column: 6, scope: !5084)
!5110 = !DILocation(line: 470, column: 23, scope: !5084)
!5111 = !DILocation(line: 470, column: 2, scope: !5084)
!5112 = !DILocation(line: 471, column: 23, scope: !5084)
!5113 = !DILocation(line: 471, column: 2, scope: !5084)
!5114 = !DILocation(line: 472, column: 12, scope: !5084)
!5115 = !DILocation(line: 472, column: 24, scope: !5084)
!5116 = !DILocation(line: 472, column: 47, scope: !5084)
!5117 = !DILocation(line: 472, column: 9, scope: !5084)
!5118 = !DILocation(line: 473, column: 13, scope: !5084)
!5119 = !DILocation(line: 473, column: 26, scope: !5084)
!5120 = !DILocation(line: 473, column: 49, scope: !5084)
!5121 = !DILocation(line: 473, column: 10, scope: !5084)
!5122 = !DILocation(line: 475, column: 7, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 475, column: 6)
!5124 = !DILocation(line: 475, column: 19, scope: !5123)
!5125 = !DILocation(line: 475, column: 47, scope: !5123)
!5126 = !DILocation(line: 475, column: 6, scope: !5084)
!5127 = !DILocalVariable(name: "mem_base_hi", scope: !5128, file: !3, line: 476, type: !223)
!5128 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 475, column: 74)
!5129 = !DILocation(line: 476, column: 7, scope: !5128)
!5130 = !DILocalVariable(name: "mem_limit_hi", scope: !5128, file: !3, line: 476, type: !223)
!5131 = !DILocation(line: 476, column: 20, scope: !5128)
!5132 = !DILocation(line: 478, column: 25, scope: !5128)
!5133 = !DILocation(line: 478, column: 3, scope: !5128)
!5134 = !DILocation(line: 479, column: 25, scope: !5128)
!5135 = !DILocation(line: 479, column: 3, scope: !5128)
!5136 = !DILocation(line: 486, column: 7, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 486, column: 7)
!5138 = !DILocation(line: 486, column: 22, scope: !5137)
!5139 = !DILocation(line: 486, column: 19, scope: !5137)
!5140 = !DILocation(line: 486, column: 7, scope: !5128)
!5141 = !DILocation(line: 487, column: 20, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 486, column: 36)
!5143 = !DILocation(line: 487, column: 14, scope: !5142)
!5144 = !DILocation(line: 487, column: 32, scope: !5142)
!5145 = !DILocation(line: 487, column: 11, scope: !5142)
!5146 = !DILocation(line: 488, column: 21, scope: !5142)
!5147 = !DILocation(line: 488, column: 15, scope: !5142)
!5148 = !DILocation(line: 488, column: 34, scope: !5142)
!5149 = !DILocation(line: 488, column: 12, scope: !5142)
!5150 = !DILocation(line: 489, column: 3, scope: !5142)
!5151 = !DILocation(line: 490, column: 2, scope: !5128)
!5152 = !DILocation(line: 492, column: 26, scope: !5084)
!5153 = !DILocation(line: 492, column: 7, scope: !5084)
!5154 = !DILocation(line: 493, column: 27, scope: !5084)
!5155 = !DILocation(line: 493, column: 8, scope: !5084)
!5156 = !DILocation(line: 495, column: 6, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 495, column: 6)
!5158 = !DILocation(line: 495, column: 14, scope: !5157)
!5159 = !DILocation(line: 495, column: 11, scope: !5157)
!5160 = !DILocation(line: 495, column: 6, scope: !5084)
!5161 = !DILocation(line: 496, column: 3, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5157, file: !3, line: 495, column: 22)
!5163 = !DILocation(line: 498, column: 3, scope: !5162)
!5164 = !DILocation(line: 501, column: 6, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 501, column: 6)
!5166 = !DILocation(line: 501, column: 14, scope: !5165)
!5167 = !DILocation(line: 501, column: 11, scope: !5165)
!5168 = !DILocation(line: 501, column: 6, scope: !5084)
!5169 = !DILocation(line: 502, column: 17, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 501, column: 21)
!5171 = !DILocation(line: 502, column: 29, scope: !5170)
!5172 = !DILocation(line: 502, column: 57, scope: !5170)
!5173 = !DILocation(line: 503, column: 22, scope: !5170)
!5174 = !DILocation(line: 502, column: 3, scope: !5170)
!5175 = !DILocation(line: 502, column: 8, scope: !5170)
!5176 = !DILocation(line: 502, column: 14, scope: !5170)
!5177 = !DILocation(line: 504, column: 7, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 504, column: 7)
!5179 = !DILocation(line: 504, column: 12, scope: !5178)
!5180 = !DILocation(line: 504, column: 18, scope: !5178)
!5181 = !DILocation(line: 504, column: 7, scope: !5170)
!5182 = !DILocation(line: 505, column: 4, scope: !5178)
!5183 = !DILocation(line: 505, column: 9, scope: !5178)
!5184 = !DILocation(line: 505, column: 15, scope: !5178)
!5185 = !DILocation(line: 506, column: 18, scope: !5170)
!5186 = !DILocation(line: 506, column: 10, scope: !5170)
!5187 = !DILocation(line: 506, column: 16, scope: !5170)
!5188 = !DILocation(line: 507, column: 16, scope: !5170)
!5189 = !DILocation(line: 507, column: 22, scope: !5170)
!5190 = !DILocation(line: 507, column: 10, scope: !5170)
!5191 = !DILocation(line: 507, column: 14, scope: !5170)
!5192 = !DILocation(line: 508, column: 27, scope: !5170)
!5193 = !DILocation(line: 508, column: 32, scope: !5170)
!5194 = !DILocation(line: 508, column: 37, scope: !5170)
!5195 = !DILocation(line: 508, column: 3, scope: !5170)
!5196 = !DILocation(line: 509, column: 3, scope: !5170)
!5197 = !DILocation(line: 510, column: 2, scope: !5170)
!5198 = !DILocation(line: 511, column: 1, scope: !5084)
!5199 = distinct !DISubprogram(name: "pci_alloc_host_bridge", scope: !3, file: !3, line: 601, type: !5200, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5200 = !DISubroutineType(types: !5201)
!5201 = !{!4364, !415}
!5202 = !DILocalVariable(name: "priv", arg: 1, scope: !5199, file: !3, line: 601, type: !415)
!5203 = !DILocation(line: 601, column: 54, scope: !5199)
!5204 = !DILocalVariable(name: "bridge", scope: !5199, file: !3, line: 603, type: !4364)
!5205 = !DILocation(line: 603, column: 26, scope: !5199)
!5206 = !DILocation(line: 605, column: 37, scope: !5199)
!5207 = !DILocation(line: 605, column: 35, scope: !5199)
!5208 = !DILocation(line: 605, column: 11, scope: !5199)
!5209 = !DILocation(line: 605, column: 9, scope: !5199)
!5210 = !DILocation(line: 606, column: 7, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 606, column: 6)
!5212 = !DILocation(line: 606, column: 6, scope: !5199)
!5213 = !DILocation(line: 607, column: 3, scope: !5211)
!5214 = !DILocation(line: 609, column: 23, scope: !5199)
!5215 = !DILocation(line: 609, column: 2, scope: !5199)
!5216 = !DILocation(line: 610, column: 2, scope: !5199)
!5217 = !DILocation(line: 610, column: 10, scope: !5199)
!5218 = !DILocation(line: 610, column: 14, scope: !5199)
!5219 = !DILocation(line: 610, column: 22, scope: !5199)
!5220 = !DILocation(line: 612, column: 9, scope: !5199)
!5221 = !DILocation(line: 612, column: 2, scope: !5199)
!5222 = !DILocation(line: 613, column: 1, scope: !5199)
!5223 = distinct !DISubprogram(name: "kzalloc", scope: !196, file: !196, line: 662, type: !5224, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5224 = !DISubroutineType(types: !5225)
!5225 = !{!222, !415, !230}
!5226 = !DILocalVariable(name: "s", arg: 1, scope: !5227, file: !196, line: 445, type: !1021)
!5227 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !196, file: !196, line: 445, type: !5228, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5228 = !DISubroutineType(types: !5229)
!5229 = !{!222, !1021, !230, !415}
!5230 = !DILocation(line: 445, column: 72, scope: !5227, inlinedAt: !5231)
!5231 = distinct !DILocation(line: 552, column: 10, scope: !5232, inlinedAt: !5235)
!5232 = distinct !DILexicalBlock(scope: !5233, file: !196, line: 540, column: 34)
!5233 = distinct !DILexicalBlock(scope: !5234, file: !196, line: 540, column: 6)
!5234 = distinct !DISubprogram(name: "kmalloc", scope: !196, file: !196, line: 538, type: !5224, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5235 = distinct !DILocation(line: 664, column: 9, scope: !5223)
!5236 = !DILocalVariable(name: "flags", arg: 2, scope: !5227, file: !196, line: 446, type: !230)
!5237 = !DILocation(line: 446, column: 9, scope: !5227, inlinedAt: !5231)
!5238 = !DILocalVariable(name: "size", arg: 3, scope: !5227, file: !196, line: 446, type: !415)
!5239 = !DILocation(line: 446, column: 23, scope: !5227, inlinedAt: !5231)
!5240 = !DILocalVariable(name: "ret", scope: !5227, file: !196, line: 448, type: !222)
!5241 = !DILocation(line: 448, column: 8, scope: !5227, inlinedAt: !5231)
!5242 = !DILocalVariable(name: "flags", arg: 1, scope: !5243, file: !196, line: 318, type: !230)
!5243 = distinct !DISubprogram(name: "kmalloc_type", scope: !196, file: !196, line: 318, type: !5244, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{!195, !230}
!5246 = !DILocation(line: 318, column: 67, scope: !5243, inlinedAt: !5247)
!5247 = distinct !DILocation(line: 553, column: 20, scope: !5232, inlinedAt: !5235)
!5248 = !DILocalVariable(name: "size", arg: 1, scope: !5249, file: !196, line: 346, type: !415)
!5249 = distinct !DISubprogram(name: "kmalloc_index", scope: !196, file: !196, line: 346, type: !5250, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5250 = !DISubroutineType(types: !5251)
!5251 = !{!7, !415}
!5252 = !DILocation(line: 346, column: 58, scope: !5249, inlinedAt: !5253)
!5253 = distinct !DILocation(line: 547, column: 11, scope: !5232, inlinedAt: !5235)
!5254 = !DILocalVariable(name: "size", arg: 1, scope: !5255, file: !196, line: 472, type: !415)
!5255 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !196, file: !196, line: 472, type: !5256, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5256 = !DISubroutineType(types: !5257)
!5257 = !{!222, !415, !230, !7}
!5258 = !DILocation(line: 472, column: 28, scope: !5255, inlinedAt: !5259)
!5259 = distinct !DILocation(line: 481, column: 9, scope: !5260, inlinedAt: !5261)
!5260 = distinct !DISubprogram(name: "kmalloc_large", scope: !196, file: !196, line: 478, type: !5224, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5261 = distinct !DILocation(line: 545, column: 11, scope: !5262, inlinedAt: !5235)
!5262 = distinct !DILexicalBlock(scope: !5232, file: !196, line: 544, column: 7)
!5263 = !DILocalVariable(name: "flags", arg: 2, scope: !5255, file: !196, line: 472, type: !230)
!5264 = !DILocation(line: 472, column: 40, scope: !5255, inlinedAt: !5259)
!5265 = !DILocalVariable(name: "order", arg: 3, scope: !5255, file: !196, line: 472, type: !7)
!5266 = !DILocation(line: 472, column: 60, scope: !5255, inlinedAt: !5259)
!5267 = !DILocalVariable(name: "size", arg: 1, scope: !5260, file: !196, line: 478, type: !415)
!5268 = !DILocation(line: 478, column: 51, scope: !5260, inlinedAt: !5261)
!5269 = !DILocalVariable(name: "flags", arg: 2, scope: !5260, file: !196, line: 478, type: !230)
!5270 = !DILocation(line: 478, column: 63, scope: !5260, inlinedAt: !5261)
!5271 = !DILocalVariable(name: "order", scope: !5260, file: !196, line: 480, type: !7)
!5272 = !DILocation(line: 480, column: 15, scope: !5260, inlinedAt: !5261)
!5273 = !DILocalVariable(name: "size", arg: 1, scope: !5234, file: !196, line: 538, type: !415)
!5274 = !DILocation(line: 538, column: 45, scope: !5234, inlinedAt: !5235)
!5275 = !DILocalVariable(name: "flags", arg: 2, scope: !5234, file: !196, line: 538, type: !230)
!5276 = !DILocation(line: 538, column: 57, scope: !5234, inlinedAt: !5235)
!5277 = !DILocalVariable(name: "index", scope: !5232, file: !196, line: 542, type: !7)
!5278 = !DILocation(line: 542, column: 16, scope: !5232, inlinedAt: !5235)
!5279 = !DILocalVariable(name: "size", arg: 1, scope: !5223, file: !196, line: 662, type: !415)
!5280 = !DILocation(line: 662, column: 36, scope: !5223)
!5281 = !DILocalVariable(name: "flags", arg: 2, scope: !5223, file: !196, line: 662, type: !230)
!5282 = !DILocation(line: 662, column: 48, scope: !5223)
!5283 = !DILocation(line: 664, column: 17, scope: !5223)
!5284 = !DILocation(line: 664, column: 23, scope: !5223)
!5285 = !DILocation(line: 664, column: 29, scope: !5223)
!5286 = !DILocation(line: 540, column: 27, scope: !5233, inlinedAt: !5235)
!5287 = !DILocation(line: 540, column: 6, scope: !5233, inlinedAt: !5235)
!5288 = !DILocation(line: 540, column: 6, scope: !5234, inlinedAt: !5235)
!5289 = !DILocation(line: 544, column: 7, scope: !5262, inlinedAt: !5235)
!5290 = !DILocation(line: 544, column: 12, scope: !5262, inlinedAt: !5235)
!5291 = !DILocation(line: 544, column: 7, scope: !5232, inlinedAt: !5235)
!5292 = !DILocation(line: 545, column: 25, scope: !5262, inlinedAt: !5235)
!5293 = !DILocation(line: 545, column: 31, scope: !5262, inlinedAt: !5235)
!5294 = !DILocation(line: 480, column: 33, scope: !5260, inlinedAt: !5261)
!5295 = !DILocation(line: 480, column: 23, scope: !5260, inlinedAt: !5261)
!5296 = !DILocation(line: 481, column: 29, scope: !5260, inlinedAt: !5261)
!5297 = !DILocation(line: 481, column: 35, scope: !5260, inlinedAt: !5261)
!5298 = !DILocation(line: 481, column: 42, scope: !5260, inlinedAt: !5261)
!5299 = !DILocation(line: 474, column: 23, scope: !5255, inlinedAt: !5259)
!5300 = !DILocation(line: 474, column: 29, scope: !5255, inlinedAt: !5259)
!5301 = !DILocation(line: 474, column: 36, scope: !5255, inlinedAt: !5259)
!5302 = !DILocation(line: 474, column: 9, scope: !5255, inlinedAt: !5259)
!5303 = !DILocation(line: 545, column: 4, scope: !5262, inlinedAt: !5235)
!5304 = !DILocation(line: 547, column: 25, scope: !5232, inlinedAt: !5235)
!5305 = !DILocation(line: 348, column: 7, scope: !5306, inlinedAt: !5253)
!5306 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 348, column: 6)
!5307 = !DILocation(line: 348, column: 6, scope: !5249, inlinedAt: !5253)
!5308 = !DILocation(line: 349, column: 3, scope: !5306, inlinedAt: !5253)
!5309 = !DILocation(line: 351, column: 6, scope: !5310, inlinedAt: !5253)
!5310 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 351, column: 6)
!5311 = !DILocation(line: 351, column: 11, scope: !5310, inlinedAt: !5253)
!5312 = !DILocation(line: 351, column: 6, scope: !5249, inlinedAt: !5253)
!5313 = !DILocation(line: 352, column: 3, scope: !5310, inlinedAt: !5253)
!5314 = !DILocation(line: 354, column: 32, scope: !5315, inlinedAt: !5253)
!5315 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 354, column: 6)
!5316 = !DILocation(line: 354, column: 37, scope: !5315, inlinedAt: !5253)
!5317 = !DILocation(line: 354, column: 42, scope: !5315, inlinedAt: !5253)
!5318 = !DILocation(line: 354, column: 45, scope: !5315, inlinedAt: !5253)
!5319 = !DILocation(line: 354, column: 50, scope: !5315, inlinedAt: !5253)
!5320 = !DILocation(line: 354, column: 6, scope: !5249, inlinedAt: !5253)
!5321 = !DILocation(line: 355, column: 3, scope: !5315, inlinedAt: !5253)
!5322 = !DILocation(line: 356, column: 32, scope: !5323, inlinedAt: !5253)
!5323 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 356, column: 6)
!5324 = !DILocation(line: 356, column: 37, scope: !5323, inlinedAt: !5253)
!5325 = !DILocation(line: 356, column: 43, scope: !5323, inlinedAt: !5253)
!5326 = !DILocation(line: 356, column: 46, scope: !5323, inlinedAt: !5253)
!5327 = !DILocation(line: 356, column: 51, scope: !5323, inlinedAt: !5253)
!5328 = !DILocation(line: 356, column: 6, scope: !5249, inlinedAt: !5253)
!5329 = !DILocation(line: 357, column: 3, scope: !5323, inlinedAt: !5253)
!5330 = !DILocation(line: 358, column: 6, scope: !5331, inlinedAt: !5253)
!5331 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 358, column: 6)
!5332 = !DILocation(line: 358, column: 11, scope: !5331, inlinedAt: !5253)
!5333 = !DILocation(line: 358, column: 6, scope: !5249, inlinedAt: !5253)
!5334 = !DILocation(line: 358, column: 26, scope: !5331, inlinedAt: !5253)
!5335 = !DILocation(line: 359, column: 6, scope: !5336, inlinedAt: !5253)
!5336 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 359, column: 6)
!5337 = !DILocation(line: 359, column: 11, scope: !5336, inlinedAt: !5253)
!5338 = !DILocation(line: 359, column: 6, scope: !5249, inlinedAt: !5253)
!5339 = !DILocation(line: 359, column: 26, scope: !5336, inlinedAt: !5253)
!5340 = !DILocation(line: 360, column: 6, scope: !5341, inlinedAt: !5253)
!5341 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 360, column: 6)
!5342 = !DILocation(line: 360, column: 11, scope: !5341, inlinedAt: !5253)
!5343 = !DILocation(line: 360, column: 6, scope: !5249, inlinedAt: !5253)
!5344 = !DILocation(line: 360, column: 26, scope: !5341, inlinedAt: !5253)
!5345 = !DILocation(line: 361, column: 6, scope: !5346, inlinedAt: !5253)
!5346 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 361, column: 6)
!5347 = !DILocation(line: 361, column: 11, scope: !5346, inlinedAt: !5253)
!5348 = !DILocation(line: 361, column: 6, scope: !5249, inlinedAt: !5253)
!5349 = !DILocation(line: 361, column: 26, scope: !5346, inlinedAt: !5253)
!5350 = !DILocation(line: 362, column: 6, scope: !5351, inlinedAt: !5253)
!5351 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 362, column: 6)
!5352 = !DILocation(line: 362, column: 11, scope: !5351, inlinedAt: !5253)
!5353 = !DILocation(line: 362, column: 6, scope: !5249, inlinedAt: !5253)
!5354 = !DILocation(line: 362, column: 26, scope: !5351, inlinedAt: !5253)
!5355 = !DILocation(line: 363, column: 6, scope: !5356, inlinedAt: !5253)
!5356 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 363, column: 6)
!5357 = !DILocation(line: 363, column: 11, scope: !5356, inlinedAt: !5253)
!5358 = !DILocation(line: 363, column: 6, scope: !5249, inlinedAt: !5253)
!5359 = !DILocation(line: 363, column: 26, scope: !5356, inlinedAt: !5253)
!5360 = !DILocation(line: 364, column: 6, scope: !5361, inlinedAt: !5253)
!5361 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 364, column: 6)
!5362 = !DILocation(line: 364, column: 11, scope: !5361, inlinedAt: !5253)
!5363 = !DILocation(line: 364, column: 6, scope: !5249, inlinedAt: !5253)
!5364 = !DILocation(line: 364, column: 26, scope: !5361, inlinedAt: !5253)
!5365 = !DILocation(line: 365, column: 6, scope: !5366, inlinedAt: !5253)
!5366 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 365, column: 6)
!5367 = !DILocation(line: 365, column: 11, scope: !5366, inlinedAt: !5253)
!5368 = !DILocation(line: 365, column: 6, scope: !5249, inlinedAt: !5253)
!5369 = !DILocation(line: 365, column: 26, scope: !5366, inlinedAt: !5253)
!5370 = !DILocation(line: 366, column: 6, scope: !5371, inlinedAt: !5253)
!5371 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 366, column: 6)
!5372 = !DILocation(line: 366, column: 11, scope: !5371, inlinedAt: !5253)
!5373 = !DILocation(line: 366, column: 6, scope: !5249, inlinedAt: !5253)
!5374 = !DILocation(line: 366, column: 26, scope: !5371, inlinedAt: !5253)
!5375 = !DILocation(line: 367, column: 6, scope: !5376, inlinedAt: !5253)
!5376 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 367, column: 6)
!5377 = !DILocation(line: 367, column: 11, scope: !5376, inlinedAt: !5253)
!5378 = !DILocation(line: 367, column: 6, scope: !5249, inlinedAt: !5253)
!5379 = !DILocation(line: 367, column: 26, scope: !5376, inlinedAt: !5253)
!5380 = !DILocation(line: 368, column: 6, scope: !5381, inlinedAt: !5253)
!5381 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 368, column: 6)
!5382 = !DILocation(line: 368, column: 11, scope: !5381, inlinedAt: !5253)
!5383 = !DILocation(line: 368, column: 6, scope: !5249, inlinedAt: !5253)
!5384 = !DILocation(line: 368, column: 26, scope: !5381, inlinedAt: !5253)
!5385 = !DILocation(line: 369, column: 6, scope: !5386, inlinedAt: !5253)
!5386 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 369, column: 6)
!5387 = !DILocation(line: 369, column: 11, scope: !5386, inlinedAt: !5253)
!5388 = !DILocation(line: 369, column: 6, scope: !5249, inlinedAt: !5253)
!5389 = !DILocation(line: 369, column: 26, scope: !5386, inlinedAt: !5253)
!5390 = !DILocation(line: 370, column: 6, scope: !5391, inlinedAt: !5253)
!5391 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 370, column: 6)
!5392 = !DILocation(line: 370, column: 11, scope: !5391, inlinedAt: !5253)
!5393 = !DILocation(line: 370, column: 6, scope: !5249, inlinedAt: !5253)
!5394 = !DILocation(line: 370, column: 26, scope: !5391, inlinedAt: !5253)
!5395 = !DILocation(line: 371, column: 6, scope: !5396, inlinedAt: !5253)
!5396 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 371, column: 6)
!5397 = !DILocation(line: 371, column: 11, scope: !5396, inlinedAt: !5253)
!5398 = !DILocation(line: 371, column: 6, scope: !5249, inlinedAt: !5253)
!5399 = !DILocation(line: 371, column: 26, scope: !5396, inlinedAt: !5253)
!5400 = !DILocation(line: 372, column: 6, scope: !5401, inlinedAt: !5253)
!5401 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 372, column: 6)
!5402 = !DILocation(line: 372, column: 11, scope: !5401, inlinedAt: !5253)
!5403 = !DILocation(line: 372, column: 6, scope: !5249, inlinedAt: !5253)
!5404 = !DILocation(line: 372, column: 26, scope: !5401, inlinedAt: !5253)
!5405 = !DILocation(line: 373, column: 6, scope: !5406, inlinedAt: !5253)
!5406 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 373, column: 6)
!5407 = !DILocation(line: 373, column: 11, scope: !5406, inlinedAt: !5253)
!5408 = !DILocation(line: 373, column: 6, scope: !5249, inlinedAt: !5253)
!5409 = !DILocation(line: 373, column: 26, scope: !5406, inlinedAt: !5253)
!5410 = !DILocation(line: 374, column: 6, scope: !5411, inlinedAt: !5253)
!5411 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 374, column: 6)
!5412 = !DILocation(line: 374, column: 11, scope: !5411, inlinedAt: !5253)
!5413 = !DILocation(line: 374, column: 6, scope: !5249, inlinedAt: !5253)
!5414 = !DILocation(line: 374, column: 26, scope: !5411, inlinedAt: !5253)
!5415 = !DILocation(line: 375, column: 6, scope: !5416, inlinedAt: !5253)
!5416 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 375, column: 6)
!5417 = !DILocation(line: 375, column: 11, scope: !5416, inlinedAt: !5253)
!5418 = !DILocation(line: 375, column: 6, scope: !5249, inlinedAt: !5253)
!5419 = !DILocation(line: 375, column: 27, scope: !5416, inlinedAt: !5253)
!5420 = !DILocation(line: 376, column: 6, scope: !5421, inlinedAt: !5253)
!5421 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 376, column: 6)
!5422 = !DILocation(line: 376, column: 11, scope: !5421, inlinedAt: !5253)
!5423 = !DILocation(line: 376, column: 6, scope: !5249, inlinedAt: !5253)
!5424 = !DILocation(line: 376, column: 32, scope: !5421, inlinedAt: !5253)
!5425 = !DILocation(line: 377, column: 6, scope: !5426, inlinedAt: !5253)
!5426 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 377, column: 6)
!5427 = !DILocation(line: 377, column: 11, scope: !5426, inlinedAt: !5253)
!5428 = !DILocation(line: 377, column: 6, scope: !5249, inlinedAt: !5253)
!5429 = !DILocation(line: 377, column: 32, scope: !5426, inlinedAt: !5253)
!5430 = !DILocation(line: 378, column: 6, scope: !5431, inlinedAt: !5253)
!5431 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 378, column: 6)
!5432 = !DILocation(line: 378, column: 11, scope: !5431, inlinedAt: !5253)
!5433 = !DILocation(line: 378, column: 6, scope: !5249, inlinedAt: !5253)
!5434 = !DILocation(line: 378, column: 32, scope: !5431, inlinedAt: !5253)
!5435 = !DILocation(line: 379, column: 6, scope: !5436, inlinedAt: !5253)
!5436 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 379, column: 6)
!5437 = !DILocation(line: 379, column: 11, scope: !5436, inlinedAt: !5253)
!5438 = !DILocation(line: 379, column: 6, scope: !5249, inlinedAt: !5253)
!5439 = !DILocation(line: 379, column: 33, scope: !5436, inlinedAt: !5253)
!5440 = !DILocation(line: 380, column: 6, scope: !5441, inlinedAt: !5253)
!5441 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 380, column: 6)
!5442 = !DILocation(line: 380, column: 11, scope: !5441, inlinedAt: !5253)
!5443 = !DILocation(line: 380, column: 6, scope: !5249, inlinedAt: !5253)
!5444 = !DILocation(line: 380, column: 33, scope: !5441, inlinedAt: !5253)
!5445 = !DILocation(line: 381, column: 6, scope: !5446, inlinedAt: !5253)
!5446 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 381, column: 6)
!5447 = !DILocation(line: 381, column: 11, scope: !5446, inlinedAt: !5253)
!5448 = !DILocation(line: 381, column: 6, scope: !5249, inlinedAt: !5253)
!5449 = !DILocation(line: 381, column: 33, scope: !5446, inlinedAt: !5253)
!5450 = !DILocation(line: 382, column: 2, scope: !5451, inlinedAt: !5253)
!5451 = distinct !DILexicalBlock(scope: !5452, file: !196, line: 382, column: 2)
!5452 = distinct !DILexicalBlock(scope: !5249, file: !196, line: 382, column: 2)
!5453 = !{i32 -2143361317, i32 -2143361288, i32 -2143361242, i32 -2143361184, i32 -2143361130, i32 -2143361076, i32 -2143361021, i32 -2143360990}
!5454 = !DILocation(line: 382, column: 2, scope: !5455, inlinedAt: !5253)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !196, line: 382, column: 2)
!5456 = distinct !DILexicalBlock(scope: !5452, file: !196, line: 382, column: 2)
!5457 = !{i32 -2143360547, i32 -2143360540, i32 -2143360486, i32 -2143360455, i32 -2143360425}
!5458 = !DILocation(line: 382, column: 2, scope: !5456, inlinedAt: !5253)
!5459 = !DILocation(line: 386, column: 1, scope: !5249, inlinedAt: !5253)
!5460 = !DILocation(line: 547, column: 9, scope: !5232, inlinedAt: !5235)
!5461 = !DILocation(line: 549, column: 8, scope: !5462, inlinedAt: !5235)
!5462 = distinct !DILexicalBlock(scope: !5232, file: !196, line: 549, column: 7)
!5463 = !DILocation(line: 549, column: 7, scope: !5232, inlinedAt: !5235)
!5464 = !DILocation(line: 550, column: 4, scope: !5462, inlinedAt: !5235)
!5465 = !DILocation(line: 553, column: 33, scope: !5232, inlinedAt: !5235)
!5466 = !DILocation(line: 325, column: 6, scope: !5467, inlinedAt: !5247)
!5467 = distinct !DILexicalBlock(scope: !5243, file: !196, line: 325, column: 6)
!5468 = !DILocation(line: 325, column: 6, scope: !5243, inlinedAt: !5247)
!5469 = !DILocation(line: 326, column: 3, scope: !5467, inlinedAt: !5247)
!5470 = !DILocation(line: 332, column: 9, scope: !5243, inlinedAt: !5247)
!5471 = !DILocation(line: 332, column: 15, scope: !5243, inlinedAt: !5247)
!5472 = !DILocation(line: 332, column: 2, scope: !5243, inlinedAt: !5247)
!5473 = !DILocation(line: 336, column: 1, scope: !5243, inlinedAt: !5247)
!5474 = !DILocation(line: 553, column: 5, scope: !5232, inlinedAt: !5235)
!5475 = !DILocation(line: 553, column: 41, scope: !5232, inlinedAt: !5235)
!5476 = !DILocation(line: 554, column: 5, scope: !5232, inlinedAt: !5235)
!5477 = !DILocation(line: 554, column: 12, scope: !5232, inlinedAt: !5235)
!5478 = !DILocation(line: 448, column: 31, scope: !5227, inlinedAt: !5231)
!5479 = !DILocation(line: 448, column: 34, scope: !5227, inlinedAt: !5231)
!5480 = !DILocation(line: 448, column: 14, scope: !5227, inlinedAt: !5231)
!5481 = !DILocation(line: 450, column: 22, scope: !5227, inlinedAt: !5231)
!5482 = !DILocation(line: 450, column: 25, scope: !5227, inlinedAt: !5231)
!5483 = !DILocation(line: 450, column: 30, scope: !5227, inlinedAt: !5231)
!5484 = !DILocation(line: 450, column: 36, scope: !5227, inlinedAt: !5231)
!5485 = !DILocation(line: 450, column: 8, scope: !5227, inlinedAt: !5231)
!5486 = !DILocation(line: 450, column: 6, scope: !5227, inlinedAt: !5231)
!5487 = !DILocation(line: 451, column: 9, scope: !5227, inlinedAt: !5231)
!5488 = !DILocation(line: 552, column: 3, scope: !5232, inlinedAt: !5235)
!5489 = !DILocation(line: 557, column: 19, scope: !5234, inlinedAt: !5235)
!5490 = !DILocation(line: 557, column: 25, scope: !5234, inlinedAt: !5235)
!5491 = !DILocation(line: 557, column: 9, scope: !5234, inlinedAt: !5235)
!5492 = !DILocation(line: 557, column: 2, scope: !5234, inlinedAt: !5235)
!5493 = !DILocation(line: 558, column: 1, scope: !5234, inlinedAt: !5235)
!5494 = !DILocation(line: 664, column: 2, scope: !5223)
!5495 = distinct !DISubprogram(name: "pci_init_host_bridge", scope: !3, file: !3, line: 580, type: !4387, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5496 = !DILocalVariable(name: "bridge", arg: 1, scope: !5495, file: !3, line: 580, type: !4364)
!5497 = !DILocation(line: 580, column: 58, scope: !5495)
!5498 = !DILocation(line: 582, column: 18, scope: !5495)
!5499 = !DILocation(line: 582, column: 26, scope: !5495)
!5500 = !DILocation(line: 582, column: 2, scope: !5495)
!5501 = !DILocation(line: 583, column: 18, scope: !5495)
!5502 = !DILocation(line: 583, column: 26, scope: !5495)
!5503 = !DILocation(line: 583, column: 2, scope: !5495)
!5504 = !DILocation(line: 591, column: 2, scope: !5495)
!5505 = !DILocation(line: 591, column: 10, scope: !5495)
!5506 = !DILocation(line: 591, column: 21, scope: !5495)
!5507 = !DILocation(line: 592, column: 2, scope: !5495)
!5508 = !DILocation(line: 592, column: 10, scope: !5495)
!5509 = !DILocation(line: 592, column: 30, scope: !5495)
!5510 = !DILocation(line: 593, column: 2, scope: !5495)
!5511 = !DILocation(line: 593, column: 10, scope: !5495)
!5512 = !DILocation(line: 593, column: 30, scope: !5495)
!5513 = !DILocation(line: 594, column: 2, scope: !5495)
!5514 = !DILocation(line: 594, column: 10, scope: !5495)
!5515 = !DILocation(line: 594, column: 21, scope: !5495)
!5516 = !DILocation(line: 595, column: 2, scope: !5495)
!5517 = !DILocation(line: 595, column: 10, scope: !5495)
!5518 = !DILocation(line: 595, column: 21, scope: !5495)
!5519 = !DILocation(line: 596, column: 2, scope: !5495)
!5520 = !DILocation(line: 596, column: 10, scope: !5495)
!5521 = !DILocation(line: 596, column: 21, scope: !5495)
!5522 = !DILocation(line: 598, column: 21, scope: !5495)
!5523 = !DILocation(line: 598, column: 29, scope: !5495)
!5524 = !DILocation(line: 598, column: 2, scope: !5495)
!5525 = !DILocation(line: 599, column: 1, scope: !5495)
!5526 = distinct !DISubprogram(name: "pci_release_host_bridge_dev", scope: !3, file: !3, line: 568, type: !3578, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5527 = !DILocalVariable(name: "dev", arg: 1, scope: !5526, file: !3, line: 568, type: !3551)
!5528 = !DILocation(line: 568, column: 56, scope: !5526)
!5529 = !DILocalVariable(name: "bridge", scope: !5526, file: !3, line: 570, type: !4364)
!5530 = !DILocation(line: 570, column: 26, scope: !5526)
!5531 = !DILocalVariable(name: "__mptr", scope: !5532, file: !3, line: 570, type: !222)
!5532 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 570, column: 35)
!5533 = !DILocation(line: 570, column: 35, scope: !5532)
!5534 = !DILocation(line: 570, column: 35, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 570, column: 35)
!5536 = !DILocation(line: 572, column: 6, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 572, column: 6)
!5538 = !DILocation(line: 572, column: 14, scope: !5537)
!5539 = !DILocation(line: 572, column: 6, scope: !5526)
!5540 = !DILocation(line: 573, column: 3, scope: !5537)
!5541 = !DILocation(line: 573, column: 11, scope: !5537)
!5542 = !DILocation(line: 573, column: 22, scope: !5537)
!5543 = !DILocation(line: 575, column: 26, scope: !5526)
!5544 = !DILocation(line: 575, column: 34, scope: !5526)
!5545 = !DILocation(line: 575, column: 2, scope: !5526)
!5546 = !DILocation(line: 576, column: 26, scope: !5526)
!5547 = !DILocation(line: 576, column: 34, scope: !5526)
!5548 = !DILocation(line: 576, column: 2, scope: !5526)
!5549 = !DILocation(line: 577, column: 8, scope: !5526)
!5550 = !DILocation(line: 577, column: 2, scope: !5526)
!5551 = !DILocation(line: 578, column: 1, scope: !5526)
!5552 = distinct !DISubprogram(name: "devm_pci_alloc_host_bridge", scope: !3, file: !3, line: 621, type: !5553, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5553 = !DISubroutineType(types: !5554)
!5554 = !{!4364, !3551, !415}
!5555 = !DILocalVariable(name: "dev", arg: 1, scope: !5552, file: !3, line: 621, type: !3551)
!5556 = !DILocation(line: 621, column: 67, scope: !5552)
!5557 = !DILocalVariable(name: "priv", arg: 2, scope: !5552, file: !3, line: 622, type: !415)
!5558 = !DILocation(line: 622, column: 17, scope: !5552)
!5559 = !DILocalVariable(name: "ret", scope: !5552, file: !3, line: 624, type: !232)
!5560 = !DILocation(line: 624, column: 6, scope: !5552)
!5561 = !DILocalVariable(name: "bridge", scope: !5552, file: !3, line: 625, type: !4364)
!5562 = !DILocation(line: 625, column: 26, scope: !5552)
!5563 = !DILocation(line: 627, column: 33, scope: !5552)
!5564 = !DILocation(line: 627, column: 11, scope: !5552)
!5565 = !DILocation(line: 627, column: 9, scope: !5552)
!5566 = !DILocation(line: 628, column: 7, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 628, column: 6)
!5568 = !DILocation(line: 628, column: 6, scope: !5552)
!5569 = !DILocation(line: 629, column: 3, scope: !5567)
!5570 = !DILocation(line: 631, column: 23, scope: !5552)
!5571 = !DILocation(line: 631, column: 2, scope: !5552)
!5572 = !DILocation(line: 631, column: 10, scope: !5552)
!5573 = !DILocation(line: 631, column: 14, scope: !5552)
!5574 = !DILocation(line: 631, column: 21, scope: !5552)
!5575 = !DILocation(line: 633, column: 33, scope: !5552)
!5576 = !DILocation(line: 634, column: 12, scope: !5552)
!5577 = !DILocation(line: 633, column: 8, scope: !5552)
!5578 = !DILocation(line: 633, column: 6, scope: !5552)
!5579 = !DILocation(line: 635, column: 6, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 635, column: 6)
!5581 = !DILocation(line: 635, column: 6, scope: !5552)
!5582 = !DILocation(line: 636, column: 3, scope: !5580)
!5583 = !DILocation(line: 638, column: 32, scope: !5552)
!5584 = !DILocation(line: 638, column: 37, scope: !5552)
!5585 = !DILocation(line: 638, column: 8, scope: !5552)
!5586 = !DILocation(line: 638, column: 6, scope: !5552)
!5587 = !DILocation(line: 639, column: 6, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 639, column: 6)
!5589 = !DILocation(line: 639, column: 6, scope: !5552)
!5590 = !DILocation(line: 640, column: 3, scope: !5588)
!5591 = !DILocation(line: 642, column: 9, scope: !5552)
!5592 = !DILocation(line: 642, column: 2, scope: !5552)
!5593 = !DILocation(line: 643, column: 1, scope: !5552)
!5594 = distinct !DISubprogram(name: "devm_add_action_or_reset", scope: !73, file: !73, line: 257, type: !5595, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5595 = !DISubroutineType(types: !5596)
!5596 = !{!232, !3551, !554, !222}
!5597 = !DILocalVariable(name: "dev", arg: 1, scope: !5594, file: !73, line: 257, type: !3551)
!5598 = !DILocation(line: 257, column: 59, scope: !5594)
!5599 = !DILocalVariable(name: "action", arg: 2, scope: !5594, file: !73, line: 258, type: !554)
!5600 = !DILocation(line: 258, column: 16, scope: !5594)
!5601 = !DILocalVariable(name: "data", arg: 3, scope: !5594, file: !73, line: 258, type: !222)
!5602 = !DILocation(line: 258, column: 39, scope: !5594)
!5603 = !DILocalVariable(name: "ret", scope: !5594, file: !73, line: 260, type: !232)
!5604 = !DILocation(line: 260, column: 6, scope: !5594)
!5605 = !DILocation(line: 262, column: 24, scope: !5594)
!5606 = !DILocation(line: 262, column: 29, scope: !5594)
!5607 = !DILocation(line: 262, column: 37, scope: !5594)
!5608 = !DILocation(line: 262, column: 8, scope: !5594)
!5609 = !DILocation(line: 262, column: 6, scope: !5594)
!5610 = !DILocation(line: 263, column: 6, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5594, file: !73, line: 263, column: 6)
!5612 = !DILocation(line: 263, column: 6, scope: !5594)
!5613 = !DILocation(line: 264, column: 3, scope: !5611)
!5614 = !DILocation(line: 264, column: 10, scope: !5611)
!5615 = !DILocation(line: 266, column: 9, scope: !5594)
!5616 = !DILocation(line: 266, column: 2, scope: !5594)
!5617 = distinct !DISubprogram(name: "devm_pci_alloc_host_bridge_release", scope: !3, file: !3, line: 616, type: !555, scopeLine: 617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5618 = !DILocalVariable(name: "data", arg: 1, scope: !5617, file: !3, line: 616, type: !222)
!5619 = !DILocation(line: 616, column: 54, scope: !5617)
!5620 = !DILocation(line: 618, column: 23, scope: !5617)
!5621 = !DILocation(line: 618, column: 2, scope: !5617)
!5622 = !DILocation(line: 619, column: 1, scope: !5617)
!5623 = distinct !DISubprogram(name: "pci_free_host_bridge", scope: !3, file: !3, line: 646, type: !4387, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5624 = !DILocalVariable(name: "bridge", arg: 1, scope: !5623, file: !3, line: 646, type: !4364)
!5625 = !DILocation(line: 646, column: 51, scope: !5623)
!5626 = !DILocation(line: 648, column: 14, scope: !5623)
!5627 = !DILocation(line: 648, column: 22, scope: !5623)
!5628 = !DILocation(line: 648, column: 2, scope: !5623)
!5629 = !DILocation(line: 649, column: 1, scope: !5623)
!5630 = !DILocalVariable(name: "speed", arg: 1, scope: !4426, file: !3, line: 693, type: !126)
!5631 = !DILocation(line: 693, column: 49, scope: !4426)
!5632 = !DILocation(line: 724, column: 6, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 724, column: 6)
!5634 = !DILocation(line: 724, column: 12, scope: !5633)
!5635 = !DILocation(line: 724, column: 6, scope: !4426)
!5636 = !DILocation(line: 725, column: 24, scope: !5633)
!5637 = !DILocation(line: 725, column: 10, scope: !5633)
!5638 = !DILocation(line: 725, column: 3, scope: !5633)
!5639 = !DILocation(line: 726, column: 2, scope: !4426)
!5640 = !DILocation(line: 727, column: 1, scope: !4426)
!5641 = distinct !DISubprogram(name: "pcie_update_link_speed", scope: !3, file: !3, line: 730, type: !5642, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5642 = !DISubroutineType(types: !5643)
!5643 = !{null, !234, !945}
!5644 = !DILocalVariable(name: "bus", arg: 1, scope: !5641, file: !3, line: 730, type: !234)
!5645 = !DILocation(line: 730, column: 45, scope: !5641)
!5646 = !DILocalVariable(name: "linksta", arg: 2, scope: !5641, file: !3, line: 730, type: !945)
!5647 = !DILocation(line: 730, column: 54, scope: !5641)
!5648 = !DILocation(line: 732, column: 39, scope: !5641)
!5649 = !DILocation(line: 732, column: 47, scope: !5641)
!5650 = !DILocation(line: 732, column: 23, scope: !5641)
!5651 = !DILocation(line: 732, column: 2, scope: !5641)
!5652 = !DILocation(line: 732, column: 7, scope: !5641)
!5653 = !DILocation(line: 732, column: 21, scope: !5641)
!5654 = !DILocation(line: 733, column: 1, scope: !5641)
!5655 = distinct !DISubprogram(name: "pci_add_new_bus", scope: !3, file: !3, line: 1124, type: !5656, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5656 = !DISubroutineType(types: !5657)
!5657 = !{!234, !234, !247, !232}
!5658 = !DILocalVariable(name: "parent", arg: 1, scope: !5655, file: !3, line: 1124, type: !234)
!5659 = !DILocation(line: 1124, column: 49, scope: !5655)
!5660 = !DILocalVariable(name: "dev", arg: 2, scope: !5655, file: !3, line: 1124, type: !247)
!5661 = !DILocation(line: 1124, column: 73, scope: !5655)
!5662 = !DILocalVariable(name: "busnr", arg: 3, scope: !5655, file: !3, line: 1125, type: !232)
!5663 = !DILocation(line: 1125, column: 9, scope: !5655)
!5664 = !DILocalVariable(name: "child", scope: !5655, file: !3, line: 1127, type: !234)
!5665 = !DILocation(line: 1127, column: 18, scope: !5655)
!5666 = !DILocation(line: 1129, column: 30, scope: !5655)
!5667 = !DILocation(line: 1129, column: 38, scope: !5655)
!5668 = !DILocation(line: 1129, column: 43, scope: !5655)
!5669 = !DILocation(line: 1129, column: 10, scope: !5655)
!5670 = !DILocation(line: 1129, column: 8, scope: !5655)
!5671 = !DILocation(line: 1130, column: 6, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1130, column: 6)
!5673 = !DILocation(line: 1130, column: 6, scope: !5655)
!5674 = !DILocation(line: 1131, column: 3, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5672, file: !3, line: 1130, column: 13)
!5676 = !DILocation(line: 1132, column: 18, scope: !5675)
!5677 = !DILocation(line: 1132, column: 25, scope: !5675)
!5678 = !DILocation(line: 1132, column: 32, scope: !5675)
!5679 = !DILocation(line: 1132, column: 40, scope: !5675)
!5680 = !DILocation(line: 1132, column: 3, scope: !5675)
!5681 = !DILocation(line: 1133, column: 3, scope: !5675)
!5682 = !DILocation(line: 1134, column: 2, scope: !5675)
!5683 = !DILocation(line: 1135, column: 9, scope: !5655)
!5684 = !DILocation(line: 1135, column: 2, scope: !5655)
!5685 = distinct !DISubprogram(name: "pci_alloc_child_bus", scope: !3, file: !3, line: 1041, type: !5656, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5686 = !DILocalVariable(name: "parent", arg: 1, scope: !5685, file: !3, line: 1041, type: !234)
!5687 = !DILocation(line: 1041, column: 60, scope: !5685)
!5688 = !DILocalVariable(name: "bridge", arg: 2, scope: !5685, file: !3, line: 1042, type: !247)
!5689 = !DILocation(line: 1042, column: 25, scope: !5685)
!5690 = !DILocalVariable(name: "busnr", arg: 3, scope: !5685, file: !3, line: 1042, type: !232)
!5691 = !DILocation(line: 1042, column: 37, scope: !5685)
!5692 = !DILocalVariable(name: "child", scope: !5685, file: !3, line: 1044, type: !234)
!5693 = !DILocation(line: 1044, column: 18, scope: !5685)
!5694 = !DILocalVariable(name: "host", scope: !5685, file: !3, line: 1045, type: !4364)
!5695 = !DILocation(line: 1045, column: 26, scope: !5685)
!5696 = !DILocalVariable(name: "i", scope: !5685, file: !3, line: 1046, type: !232)
!5697 = !DILocation(line: 1046, column: 6, scope: !5685)
!5698 = !DILocalVariable(name: "ret", scope: !5685, file: !3, line: 1047, type: !232)
!5699 = !DILocation(line: 1047, column: 6, scope: !5685)
!5700 = !DILocation(line: 1050, column: 24, scope: !5685)
!5701 = !DILocation(line: 1050, column: 10, scope: !5685)
!5702 = !DILocation(line: 1050, column: 8, scope: !5685)
!5703 = !DILocation(line: 1051, column: 7, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 1051, column: 6)
!5705 = !DILocation(line: 1051, column: 6, scope: !5685)
!5706 = !DILocation(line: 1052, column: 3, scope: !5704)
!5707 = !DILocation(line: 1054, column: 18, scope: !5685)
!5708 = !DILocation(line: 1054, column: 2, scope: !5685)
!5709 = !DILocation(line: 1054, column: 9, scope: !5685)
!5710 = !DILocation(line: 1054, column: 16, scope: !5685)
!5711 = !DILocation(line: 1055, column: 15, scope: !5685)
!5712 = !DILocation(line: 1055, column: 23, scope: !5685)
!5713 = !DILocation(line: 1055, column: 2, scope: !5685)
!5714 = !DILocation(line: 1055, column: 9, scope: !5685)
!5715 = !DILocation(line: 1055, column: 13, scope: !5685)
!5716 = !DILocation(line: 1056, column: 19, scope: !5685)
!5717 = !DILocation(line: 1056, column: 27, scope: !5685)
!5718 = !DILocation(line: 1056, column: 2, scope: !5685)
!5719 = !DILocation(line: 1056, column: 9, scope: !5685)
!5720 = !DILocation(line: 1056, column: 17, scope: !5685)
!5721 = !DILocation(line: 1057, column: 21, scope: !5685)
!5722 = !DILocation(line: 1057, column: 29, scope: !5685)
!5723 = !DILocation(line: 1057, column: 2, scope: !5685)
!5724 = !DILocation(line: 1057, column: 9, scope: !5685)
!5725 = !DILocation(line: 1057, column: 19, scope: !5685)
!5726 = !DILocation(line: 1059, column: 30, scope: !5685)
!5727 = !DILocation(line: 1059, column: 9, scope: !5685)
!5728 = !DILocation(line: 1059, column: 7, scope: !5685)
!5729 = !DILocation(line: 1060, column: 6, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 1060, column: 6)
!5731 = !DILocation(line: 1060, column: 12, scope: !5730)
!5732 = !DILocation(line: 1060, column: 6, scope: !5685)
!5733 = !DILocation(line: 1061, column: 16, scope: !5730)
!5734 = !DILocation(line: 1061, column: 22, scope: !5730)
!5735 = !DILocation(line: 1061, column: 3, scope: !5730)
!5736 = !DILocation(line: 1061, column: 10, scope: !5730)
!5737 = !DILocation(line: 1061, column: 14, scope: !5730)
!5738 = !DILocation(line: 1063, column: 16, scope: !5730)
!5739 = !DILocation(line: 1063, column: 24, scope: !5730)
!5740 = !DILocation(line: 1063, column: 3, scope: !5730)
!5741 = !DILocation(line: 1063, column: 10, scope: !5730)
!5742 = !DILocation(line: 1063, column: 14, scope: !5730)
!5743 = !DILocation(line: 1069, column: 2, scope: !5685)
!5744 = !DILocation(line: 1069, column: 9, scope: !5685)
!5745 = !DILocation(line: 1069, column: 13, scope: !5685)
!5746 = !DILocation(line: 1069, column: 19, scope: !5685)
!5747 = !DILocation(line: 1070, column: 16, scope: !5685)
!5748 = !DILocation(line: 1070, column: 23, scope: !5685)
!5749 = !DILocation(line: 1070, column: 55, scope: !5685)
!5750 = !DILocation(line: 1070, column: 41, scope: !5685)
!5751 = !DILocation(line: 1070, column: 63, scope: !5685)
!5752 = !DILocation(line: 1070, column: 2, scope: !5685)
!5753 = !DILocation(line: 1073, column: 42, scope: !5685)
!5754 = !DILocation(line: 1073, column: 18, scope: !5685)
!5755 = !DILocation(line: 1073, column: 25, scope: !5685)
!5756 = !DILocation(line: 1073, column: 34, scope: !5685)
!5757 = !DILocation(line: 1073, column: 40, scope: !5685)
!5758 = !DILocation(line: 1073, column: 2, scope: !5685)
!5759 = !DILocation(line: 1073, column: 9, scope: !5685)
!5760 = !DILocation(line: 1073, column: 16, scope: !5685)
!5761 = !DILocation(line: 1074, column: 19, scope: !5685)
!5762 = !DILocation(line: 1074, column: 27, scope: !5685)
!5763 = !DILocation(line: 1074, column: 36, scope: !5685)
!5764 = !DILocation(line: 1074, column: 2, scope: !5685)
!5765 = !DILocation(line: 1074, column: 9, scope: !5685)
!5766 = !DILocation(line: 1074, column: 17, scope: !5685)
!5767 = !DILocation(line: 1075, column: 2, scope: !5685)
!5768 = !DILocation(line: 1075, column: 9, scope: !5685)
!5769 = !DILocation(line: 1075, column: 18, scope: !5685)
!5770 = !DILocation(line: 1075, column: 22, scope: !5685)
!5771 = !DILocation(line: 1077, column: 7, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 1077, column: 6)
!5773 = !DILocation(line: 1077, column: 6, scope: !5685)
!5774 = !DILocation(line: 1078, column: 23, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1077, column: 15)
!5776 = !DILocation(line: 1078, column: 31, scope: !5775)
!5777 = !DILocation(line: 1078, column: 3, scope: !5775)
!5778 = !DILocation(line: 1078, column: 10, scope: !5775)
!5779 = !DILocation(line: 1078, column: 14, scope: !5775)
!5780 = !DILocation(line: 1078, column: 21, scope: !5775)
!5781 = !DILocation(line: 1079, column: 3, scope: !5775)
!5782 = !DILocation(line: 1082, column: 16, scope: !5685)
!5783 = !DILocation(line: 1082, column: 2, scope: !5685)
!5784 = !DILocation(line: 1082, column: 9, scope: !5685)
!5785 = !DILocation(line: 1082, column: 14, scope: !5685)
!5786 = !DILocation(line: 1083, column: 30, scope: !5685)
!5787 = !DILocation(line: 1083, column: 38, scope: !5685)
!5788 = !DILocation(line: 1083, column: 18, scope: !5685)
!5789 = !DILocation(line: 1083, column: 2, scope: !5685)
!5790 = !DILocation(line: 1083, column: 9, scope: !5685)
!5791 = !DILocation(line: 1083, column: 16, scope: !5685)
!5792 = !DILocation(line: 1084, column: 22, scope: !5685)
!5793 = !DILocation(line: 1084, column: 29, scope: !5685)
!5794 = !DILocation(line: 1084, column: 2, scope: !5685)
!5795 = !DILocation(line: 1084, column: 9, scope: !5685)
!5796 = !DILocation(line: 1084, column: 13, scope: !5685)
!5797 = !DILocation(line: 1084, column: 20, scope: !5685)
!5798 = !DILocation(line: 1085, column: 22, scope: !5685)
!5799 = !DILocation(line: 1085, column: 2, scope: !5685)
!5800 = !DILocation(line: 1086, column: 20, scope: !5685)
!5801 = !DILocation(line: 1086, column: 2, scope: !5685)
!5802 = !DILocation(line: 1093, column: 43, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 1093, column: 6)
!5804 = !DILocation(line: 1093, column: 7, scope: !5803)
!5805 = !DILocation(line: 1093, column: 6, scope: !5685)
!5806 = !DILocation(line: 1094, column: 3, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 1093, column: 52)
!5808 = !DILocation(line: 1094, column: 10, scope: !5807)
!5809 = !DILocation(line: 1094, column: 20, scope: !5807)
!5810 = !DILocation(line: 1095, column: 3, scope: !5807)
!5811 = !DILocation(line: 1096, column: 2, scope: !5807)
!5812 = !DILocation(line: 1099, column: 9, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 1099, column: 2)
!5814 = !DILocation(line: 1099, column: 7, scope: !5813)
!5815 = !DILocation(line: 1099, column: 14, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5813, file: !3, line: 1099, column: 2)
!5817 = !DILocation(line: 1099, column: 16, scope: !5816)
!5818 = !DILocation(line: 1099, column: 2, scope: !5813)
!5819 = !DILocation(line: 1100, column: 25, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5816, file: !3, line: 1099, column: 48)
!5821 = !DILocation(line: 1100, column: 33, scope: !5820)
!5822 = !DILocation(line: 1100, column: 63, scope: !5820)
!5823 = !DILocation(line: 1100, column: 62, scope: !5820)
!5824 = !DILocation(line: 1100, column: 3, scope: !5820)
!5825 = !DILocation(line: 1100, column: 10, scope: !5820)
!5826 = !DILocation(line: 1100, column: 19, scope: !5820)
!5827 = !DILocation(line: 1100, column: 22, scope: !5820)
!5828 = !DILocation(line: 1101, column: 30, scope: !5820)
!5829 = !DILocation(line: 1101, column: 37, scope: !5820)
!5830 = !DILocation(line: 1101, column: 3, scope: !5820)
!5831 = !DILocation(line: 1101, column: 10, scope: !5820)
!5832 = !DILocation(line: 1101, column: 19, scope: !5820)
!5833 = !DILocation(line: 1101, column: 23, scope: !5820)
!5834 = !DILocation(line: 1101, column: 28, scope: !5820)
!5835 = !DILocation(line: 1102, column: 2, scope: !5820)
!5836 = !DILocation(line: 1099, column: 44, scope: !5816)
!5837 = !DILocation(line: 1099, column: 2, scope: !5816)
!5838 = distinct !{!5838, !5818, !5839}
!5839 = !DILocation(line: 1102, column: 2, scope: !5813)
!5840 = !DILocation(line: 1103, column: 24, scope: !5685)
!5841 = !DILocation(line: 1103, column: 2, scope: !5685)
!5842 = !DILocation(line: 1103, column: 10, scope: !5685)
!5843 = !DILocation(line: 1103, column: 22, scope: !5685)
!5844 = !DILabel(scope: !5685, name: "add_dev", file: !3, line: 1105)
!5845 = !DILocation(line: 1105, column: 1, scope: !5685)
!5846 = !DILocation(line: 1106, column: 25, scope: !5685)
!5847 = !DILocation(line: 1106, column: 2, scope: !5685)
!5848 = !DILocation(line: 1107, column: 25, scope: !5685)
!5849 = !DILocation(line: 1107, column: 32, scope: !5685)
!5850 = !DILocation(line: 1107, column: 8, scope: !5685)
!5851 = !DILocation(line: 1107, column: 6, scope: !5685)
!5852 = !DILocalVariable(name: "__ret_warn_on", scope: !5853, file: !3, line: 1108, type: !232)
!5853 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 1108, column: 2)
!5854 = !DILocation(line: 1108, column: 2, scope: !5853)
!5855 = !DILocation(line: 1108, column: 2, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 1108, column: 2)
!5857 = !DILocation(line: 1108, column: 2, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5856, file: !3, line: 1108, column: 2)
!5859 = !DILocation(line: 1108, column: 2, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1108, column: 2)
!5861 = !DILocation(line: 1108, column: 2, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1108, column: 2)
!5863 = !{i32 -2140908628, i32 -2140908599, i32 -2140908553, i32 -2140908495, i32 -2140908441, i32 -2140908387, i32 -2140908332, i32 -2140908301}
!5864 = !DILocation(line: 1108, column: 2, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1108, column: 2)
!5866 = !{i32 -2140907899, i32 -2140907892, i32 -2140907840, i32 -2140907809, i32 -2140907779}
!5867 = !DILocation(line: 1108, column: 2, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1108, column: 2)
!5869 = !DILocation(line: 1110, column: 18, scope: !5685)
!5870 = !DILocation(line: 1110, column: 2, scope: !5685)
!5871 = !DILocation(line: 1112, column: 6, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 1112, column: 6)
!5873 = !DILocation(line: 1112, column: 13, scope: !5872)
!5874 = !DILocation(line: 1112, column: 18, scope: !5872)
!5875 = !DILocation(line: 1112, column: 6, scope: !5685)
!5876 = !DILocation(line: 1113, column: 9, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 1112, column: 27)
!5878 = !DILocation(line: 1113, column: 16, scope: !5877)
!5879 = !DILocation(line: 1113, column: 21, scope: !5877)
!5880 = !DILocation(line: 1113, column: 29, scope: !5877)
!5881 = !DILocation(line: 1113, column: 7, scope: !5877)
!5882 = !DILocalVariable(name: "__ret_warn_on", scope: !5883, file: !3, line: 1114, type: !232)
!5883 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 1114, column: 7)
!5884 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 1114, column: 7)
!5885 = !DILocation(line: 1114, column: 7, scope: !5883)
!5886 = !DILocation(line: 1114, column: 7, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5883, file: !3, line: 1114, column: 7)
!5888 = !DILocation(line: 1114, column: 7, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 1114, column: 7)
!5890 = !DILocation(line: 1114, column: 7, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 1114, column: 7)
!5892 = !DILocation(line: 1114, column: 7, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 1114, column: 7)
!5894 = !{i32 -2140907200, i32 -2140907171, i32 -2140907125, i32 -2140907067, i32 -2140907013, i32 -2140906959, i32 -2140906904, i32 -2140906873}
!5895 = !DILocation(line: 1114, column: 7, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 1114, column: 7)
!5897 = !{i32 -2140906471, i32 -2140906464, i32 -2140906412, i32 -2140906381, i32 -2140906351}
!5898 = !DILocation(line: 1114, column: 7, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 1114, column: 7)
!5900 = !DILocation(line: 1114, column: 7, scope: !5884)
!5901 = !DILocation(line: 1114, column: 7, scope: !5877)
!5902 = !DILocation(line: 1115, column: 4, scope: !5884)
!5903 = !DILocation(line: 1116, column: 2, scope: !5877)
!5904 = !DILocation(line: 1119, column: 26, scope: !5685)
!5905 = !DILocation(line: 1119, column: 2, scope: !5685)
!5906 = !DILocation(line: 1121, column: 9, scope: !5685)
!5907 = !DILocation(line: 1121, column: 2, scope: !5685)
!5908 = !DILocation(line: 1122, column: 1, scope: !5685)
!5909 = distinct !DISubprogram(name: "list_add_tail", scope: !5910, file: !5910, line: 98, type: !5911, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5910 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5911 = !DISubroutineType(types: !5912)
!5912 = !{null, !241, !241}
!5913 = !DILocalVariable(name: "new", arg: 1, scope: !5909, file: !5910, line: 98, type: !241)
!5914 = !DILocation(line: 98, column: 52, scope: !5909)
!5915 = !DILocalVariable(name: "head", arg: 2, scope: !5909, file: !5910, line: 98, type: !241)
!5916 = !DILocation(line: 98, column: 75, scope: !5909)
!5917 = !DILocation(line: 100, column: 13, scope: !5909)
!5918 = !DILocation(line: 100, column: 18, scope: !5909)
!5919 = !DILocation(line: 100, column: 24, scope: !5909)
!5920 = !DILocation(line: 100, column: 30, scope: !5909)
!5921 = !DILocation(line: 100, column: 2, scope: !5909)
!5922 = !DILocation(line: 101, column: 1, scope: !5909)
!5923 = distinct !DISubprogram(name: "pci_scan_bridge", scope: !3, file: !3, line: 1457, type: !5924, scopeLine: 1458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5924 = !DISubroutineType(types: !5925)
!5925 = !{!232, !234, !247, !232, !232}
!5926 = !DILocalVariable(name: "bus", arg: 1, scope: !5923, file: !3, line: 1457, type: !234)
!5927 = !DILocation(line: 1457, column: 37, scope: !5923)
!5928 = !DILocalVariable(name: "dev", arg: 2, scope: !5923, file: !3, line: 1457, type: !247)
!5929 = !DILocation(line: 1457, column: 58, scope: !5923)
!5930 = !DILocalVariable(name: "max", arg: 3, scope: !5923, file: !3, line: 1457, type: !232)
!5931 = !DILocation(line: 1457, column: 67, scope: !5923)
!5932 = !DILocalVariable(name: "pass", arg: 4, scope: !5923, file: !3, line: 1457, type: !232)
!5933 = !DILocation(line: 1457, column: 76, scope: !5923)
!5934 = !DILocation(line: 1459, column: 32, scope: !5923)
!5935 = !DILocation(line: 1459, column: 37, scope: !5923)
!5936 = !DILocation(line: 1459, column: 42, scope: !5923)
!5937 = !DILocation(line: 1459, column: 50, scope: !5923)
!5938 = !DILocation(line: 1459, column: 9, scope: !5923)
!5939 = !DILocation(line: 1459, column: 2, scope: !5923)
!5940 = distinct !DISubprogram(name: "pci_scan_bridge_extend", scope: !3, file: !3, line: 1212, type: !5941, scopeLine: 1215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!5941 = !DISubroutineType(types: !5942)
!5942 = !{!232, !234, !247, !232, !7, !232}
!5943 = !DILocalVariable(name: "bus", arg: 1, scope: !5940, file: !3, line: 1212, type: !234)
!5944 = !DILocation(line: 1212, column: 51, scope: !5940)
!5945 = !DILocalVariable(name: "dev", arg: 2, scope: !5940, file: !3, line: 1212, type: !247)
!5946 = !DILocation(line: 1212, column: 72, scope: !5940)
!5947 = !DILocalVariable(name: "max", arg: 3, scope: !5940, file: !3, line: 1213, type: !232)
!5948 = !DILocation(line: 1213, column: 11, scope: !5940)
!5949 = !DILocalVariable(name: "available_buses", arg: 4, scope: !5940, file: !3, line: 1213, type: !7)
!5950 = !DILocation(line: 1213, column: 29, scope: !5940)
!5951 = !DILocalVariable(name: "pass", arg: 5, scope: !5940, file: !3, line: 1214, type: !232)
!5952 = !DILocation(line: 1214, column: 11, scope: !5940)
!5953 = !DILocalVariable(name: "child", scope: !5940, file: !3, line: 1216, type: !234)
!5954 = !DILocation(line: 1216, column: 18, scope: !5940)
!5955 = !DILocalVariable(name: "is_cardbus", scope: !5940, file: !3, line: 1217, type: !232)
!5956 = !DILocation(line: 1217, column: 6, scope: !5940)
!5957 = !DILocation(line: 1217, column: 20, scope: !5940)
!5958 = !DILocation(line: 1217, column: 25, scope: !5940)
!5959 = !DILocation(line: 1217, column: 34, scope: !5940)
!5960 = !DILocalVariable(name: "buses", scope: !5940, file: !3, line: 1218, type: !223)
!5961 = !DILocation(line: 1218, column: 6, scope: !5940)
!5962 = !DILocalVariable(name: "i", scope: !5940, file: !3, line: 1218, type: !223)
!5963 = !DILocation(line: 1218, column: 13, scope: !5940)
!5964 = !DILocalVariable(name: "j", scope: !5940, file: !3, line: 1218, type: !223)
!5965 = !DILocation(line: 1218, column: 16, scope: !5940)
!5966 = !DILocalVariable(name: "bctl", scope: !5940, file: !3, line: 1219, type: !945)
!5967 = !DILocation(line: 1219, column: 6, scope: !5940)
!5968 = !DILocalVariable(name: "primary", scope: !5940, file: !3, line: 1220, type: !283)
!5969 = !DILocation(line: 1220, column: 5, scope: !5940)
!5970 = !DILocalVariable(name: "secondary", scope: !5940, file: !3, line: 1220, type: !283)
!5971 = !DILocation(line: 1220, column: 14, scope: !5940)
!5972 = !DILocalVariable(name: "subordinate", scope: !5940, file: !3, line: 1220, type: !283)
!5973 = !DILocation(line: 1220, column: 25, scope: !5940)
!5974 = !DILocalVariable(name: "broken", scope: !5940, file: !3, line: 1221, type: !232)
!5975 = !DILocation(line: 1221, column: 6, scope: !5940)
!5976 = !DILocalVariable(name: "fixed_buses", scope: !5940, file: !3, line: 1222, type: !576)
!5977 = !DILocation(line: 1222, column: 7, scope: !5940)
!5978 = !DILocalVariable(name: "fixed_sec", scope: !5940, file: !3, line: 1223, type: !283)
!5979 = !DILocation(line: 1223, column: 5, scope: !5940)
!5980 = !DILocalVariable(name: "fixed_sub", scope: !5940, file: !3, line: 1223, type: !283)
!5981 = !DILocation(line: 1223, column: 16, scope: !5940)
!5982 = !DILocalVariable(name: "next_busnr", scope: !5940, file: !3, line: 1224, type: !232)
!5983 = !DILocation(line: 1224, column: 6, scope: !5940)
!5984 = !DILocation(line: 1230, column: 23, scope: !5940)
!5985 = !DILocation(line: 1230, column: 28, scope: !5940)
!5986 = !DILocation(line: 1230, column: 2, scope: !5940)
!5987 = !DILocation(line: 1232, column: 24, scope: !5940)
!5988 = !DILocation(line: 1232, column: 2, scope: !5940)
!5989 = !DILocation(line: 1233, column: 12, scope: !5940)
!5990 = !DILocation(line: 1233, column: 18, scope: !5940)
!5991 = !DILocation(line: 1233, column: 10, scope: !5940)
!5992 = !DILocation(line: 1234, column: 15, scope: !5940)
!5993 = !DILocation(line: 1234, column: 21, scope: !5940)
!5994 = !DILocation(line: 1234, column: 27, scope: !5940)
!5995 = !DILocation(line: 1234, column: 14, scope: !5940)
!5996 = !DILocation(line: 1234, column: 12, scope: !5940)
!5997 = !DILocation(line: 1235, column: 17, scope: !5940)
!5998 = !DILocation(line: 1235, column: 23, scope: !5940)
!5999 = !DILocation(line: 1235, column: 30, scope: !5940)
!6000 = !DILocation(line: 1235, column: 16, scope: !5940)
!6001 = !DILocation(line: 1235, column: 14, scope: !5940)
!6002 = !DILocation(line: 1240, column: 7, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 1240, column: 6)
!6004 = !DILocation(line: 1240, column: 15, scope: !6003)
!6005 = !DILocation(line: 1240, column: 19, scope: !6003)
!6006 = !DILocation(line: 1240, column: 30, scope: !6003)
!6007 = !DILocation(line: 1240, column: 35, scope: !6003)
!6008 = !DILocation(line: 1240, column: 27, scope: !6003)
!6009 = !DILocation(line: 1240, column: 43, scope: !6003)
!6010 = !DILocation(line: 1240, column: 46, scope: !6003)
!6011 = !DILocation(line: 1240, column: 56, scope: !6003)
!6012 = !DILocation(line: 1240, column: 59, scope: !6003)
!6013 = !DILocation(line: 1240, column: 6, scope: !5940)
!6014 = !DILocation(line: 1241, column: 3, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 1240, column: 72)
!6016 = !DILocation(line: 1242, column: 13, scope: !6015)
!6017 = !DILocation(line: 1242, column: 18, scope: !6015)
!6018 = !DILocation(line: 1242, column: 11, scope: !6015)
!6019 = !DILocation(line: 1243, column: 2, scope: !6015)
!6020 = !DILocation(line: 1246, column: 7, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 1246, column: 6)
!6022 = !DILocation(line: 1246, column: 12, scope: !6021)
!6023 = !DILocation(line: 1247, column: 7, scope: !6021)
!6024 = !DILocation(line: 1247, column: 18, scope: !6021)
!6025 = !DILocation(line: 1247, column: 23, scope: !6021)
!6026 = !DILocation(line: 1247, column: 15, scope: !6021)
!6027 = !DILocation(line: 1247, column: 30, scope: !6021)
!6028 = !DILocation(line: 1247, column: 33, scope: !6021)
!6029 = !DILocation(line: 1247, column: 46, scope: !6021)
!6030 = !DILocation(line: 1247, column: 51, scope: !6021)
!6031 = !DILocation(line: 1247, column: 43, scope: !6021)
!6032 = !DILocation(line: 1247, column: 58, scope: !6021)
!6033 = !DILocation(line: 1248, column: 7, scope: !6021)
!6034 = !DILocation(line: 1248, column: 19, scope: !6021)
!6035 = !DILocation(line: 1248, column: 17, scope: !6021)
!6036 = !DILocation(line: 1246, column: 6, scope: !5940)
!6037 = !DILocation(line: 1249, column: 3, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6021, file: !3, line: 1248, column: 33)
!6039 = !DILocation(line: 1251, column: 10, scope: !6038)
!6040 = !DILocation(line: 1252, column: 2, scope: !6038)
!6041 = !DILocation(line: 1258, column: 23, scope: !5940)
!6042 = !DILocation(line: 1258, column: 2, scope: !5940)
!6043 = !DILocation(line: 1259, column: 24, scope: !5940)
!6044 = !DILocation(line: 1260, column: 10, scope: !5940)
!6045 = !DILocation(line: 1260, column: 15, scope: !5940)
!6046 = !DILocation(line: 1259, column: 2, scope: !5940)
!6047 = !DILocation(line: 1262, column: 17, scope: !5940)
!6048 = !DILocation(line: 1262, column: 2, scope: !5940)
!6049 = !DILocation(line: 1264, column: 7, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 1264, column: 6)
!6051 = !DILocation(line: 1264, column: 17, scope: !6050)
!6052 = !DILocation(line: 1264, column: 20, scope: !6050)
!6053 = !DILocation(line: 1264, column: 33, scope: !6050)
!6054 = !DILocation(line: 1264, column: 37, scope: !6050)
!6055 = !DILocation(line: 1264, column: 65, scope: !6050)
!6056 = !DILocation(line: 1265, column: 7, scope: !6050)
!6057 = !DILocation(line: 1265, column: 18, scope: !6050)
!6058 = !DILocation(line: 1265, column: 22, scope: !6050)
!6059 = !DILocation(line: 1264, column: 6, scope: !5940)
!6060 = !DILocalVariable(name: "cmax", scope: !6061, file: !3, line: 1266, type: !7)
!6061 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 1265, column: 30)
!6062 = !DILocation(line: 1266, column: 16, scope: !6061)
!6063 = !DILocation(line: 1272, column: 7, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 1272, column: 7)
!6065 = !DILocation(line: 1272, column: 7, scope: !6061)
!6066 = !DILocation(line: 1273, column: 4, scope: !6064)
!6067 = !DILocation(line: 1281, column: 38, scope: !6061)
!6068 = !DILocation(line: 1281, column: 24, scope: !6061)
!6069 = !DILocation(line: 1281, column: 44, scope: !6061)
!6070 = !DILocation(line: 1281, column: 11, scope: !6061)
!6071 = !DILocation(line: 1281, column: 9, scope: !6061)
!6072 = !DILocation(line: 1282, column: 8, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 1282, column: 7)
!6074 = !DILocation(line: 1282, column: 7, scope: !6061)
!6075 = !DILocation(line: 1283, column: 28, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 1282, column: 15)
!6077 = !DILocation(line: 1283, column: 33, scope: !6076)
!6078 = !DILocation(line: 1283, column: 38, scope: !6076)
!6079 = !DILocation(line: 1283, column: 12, scope: !6076)
!6080 = !DILocation(line: 1283, column: 10, scope: !6076)
!6081 = !DILocation(line: 1284, column: 9, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 1284, column: 8)
!6083 = !DILocation(line: 1284, column: 8, scope: !6076)
!6084 = !DILocation(line: 1285, column: 5, scope: !6082)
!6085 = !DILocation(line: 1286, column: 21, scope: !6076)
!6086 = !DILocation(line: 1286, column: 4, scope: !6076)
!6087 = !DILocation(line: 1286, column: 11, scope: !6076)
!6088 = !DILocation(line: 1286, column: 19, scope: !6076)
!6089 = !DILocation(line: 1287, column: 28, scope: !6076)
!6090 = !DILocation(line: 1287, column: 35, scope: !6076)
!6091 = !DILocation(line: 1287, column: 46, scope: !6076)
!6092 = !DILocation(line: 1287, column: 4, scope: !6076)
!6093 = !DILocation(line: 1288, column: 24, scope: !6076)
!6094 = !DILocation(line: 1288, column: 4, scope: !6076)
!6095 = !DILocation(line: 1288, column: 11, scope: !6076)
!6096 = !DILocation(line: 1288, column: 22, scope: !6076)
!6097 = !DILocation(line: 1289, column: 3, scope: !6076)
!6098 = !DILocation(line: 1291, column: 29, scope: !6061)
!6099 = !DILocation(line: 1291, column: 10, scope: !6061)
!6100 = !DILocation(line: 1291, column: 8, scope: !6061)
!6101 = !DILocation(line: 1292, column: 7, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 1292, column: 7)
!6103 = !DILocation(line: 1292, column: 14, scope: !6102)
!6104 = !DILocation(line: 1292, column: 12, scope: !6102)
!6105 = !DILocation(line: 1292, column: 7, scope: !6061)
!6106 = !DILocation(line: 1293, column: 4, scope: !6102)
!6107 = !DILocation(line: 1297, column: 7, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 1297, column: 7)
!6109 = !DILocation(line: 1297, column: 21, scope: !6108)
!6110 = !DILocation(line: 1297, column: 19, scope: !6108)
!6111 = !DILocation(line: 1297, column: 7, scope: !6061)
!6112 = !DILocation(line: 1298, column: 10, scope: !6108)
!6113 = !DILocation(line: 1298, column: 8, scope: !6108)
!6114 = !DILocation(line: 1298, column: 4, scope: !6108)
!6115 = !DILocation(line: 1299, column: 2, scope: !6061)
!6116 = !DILocation(line: 1305, column: 8, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1305, column: 7)
!6118 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 1299, column: 9)
!6119 = !DILocation(line: 1305, column: 7, scope: !6118)
!6120 = !DILocation(line: 1306, column: 8, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 1306, column: 8)
!6122 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 1305, column: 14)
!6123 = !DILocation(line: 1306, column: 36, scope: !6121)
!6124 = !DILocation(line: 1306, column: 39, scope: !6121)
!6125 = !DILocation(line: 1306, column: 46, scope: !6121)
!6126 = !DILocation(line: 1306, column: 49, scope: !6121)
!6127 = !DILocation(line: 1306, column: 8, scope: !6122)
!6128 = !DILocation(line: 1316, column: 28, scope: !6121)
!6129 = !DILocation(line: 1317, column: 14, scope: !6121)
!6130 = !DILocation(line: 1317, column: 20, scope: !6121)
!6131 = !DILocation(line: 1316, column: 5, scope: !6121)
!6132 = !DILocation(line: 1318, column: 4, scope: !6122)
!6133 = !DILocation(line: 1322, column: 25, scope: !6118)
!6134 = !DILocation(line: 1322, column: 3, scope: !6118)
!6135 = !DILocation(line: 1325, column: 37, scope: !6118)
!6136 = !DILocation(line: 1325, column: 17, scope: !6118)
!6137 = !DILocation(line: 1325, column: 15, scope: !6118)
!6138 = !DILocation(line: 1326, column: 7, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1326, column: 7)
!6140 = !DILocation(line: 1326, column: 7, scope: !6118)
!6141 = !DILocation(line: 1327, column: 17, scope: !6139)
!6142 = !DILocation(line: 1327, column: 15, scope: !6139)
!6143 = !DILocation(line: 1327, column: 4, scope: !6139)
!6144 = !DILocation(line: 1329, column: 17, scope: !6139)
!6145 = !DILocation(line: 1329, column: 21, scope: !6139)
!6146 = !DILocation(line: 1329, column: 15, scope: !6139)
!6147 = !DILocation(line: 1336, column: 38, scope: !6118)
!6148 = !DILocation(line: 1336, column: 24, scope: !6118)
!6149 = !DILocation(line: 1336, column: 44, scope: !6118)
!6150 = !DILocation(line: 1336, column: 11, scope: !6118)
!6151 = !DILocation(line: 1336, column: 9, scope: !6118)
!6152 = !DILocation(line: 1337, column: 8, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1337, column: 7)
!6154 = !DILocation(line: 1337, column: 7, scope: !6118)
!6155 = !DILocation(line: 1338, column: 28, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 1337, column: 15)
!6157 = !DILocation(line: 1338, column: 33, scope: !6156)
!6158 = !DILocation(line: 1338, column: 38, scope: !6156)
!6159 = !DILocation(line: 1338, column: 12, scope: !6156)
!6160 = !DILocation(line: 1338, column: 10, scope: !6156)
!6161 = !DILocation(line: 1339, column: 9, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 1339, column: 8)
!6163 = !DILocation(line: 1339, column: 8, scope: !6156)
!6164 = !DILocation(line: 1340, column: 5, scope: !6162)
!6165 = !DILocation(line: 1341, column: 28, scope: !6156)
!6166 = !DILocation(line: 1341, column: 35, scope: !6156)
!6167 = !DILocation(line: 1342, column: 7, scope: !6156)
!6168 = !DILocation(line: 1342, column: 12, scope: !6156)
!6169 = !DILocation(line: 1342, column: 21, scope: !6156)
!6170 = !DILocation(line: 1341, column: 4, scope: !6156)
!6171 = !DILocation(line: 1343, column: 3, scope: !6156)
!6172 = !DILocation(line: 1344, column: 6, scope: !6118)
!6173 = !DILocation(line: 1345, column: 7, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1345, column: 7)
!6175 = !DILocation(line: 1345, column: 7, scope: !6118)
!6176 = !DILocation(line: 1346, column: 19, scope: !6174)
!6177 = !DILocation(line: 1346, column: 4, scope: !6174)
!6178 = !DILocation(line: 1348, column: 12, scope: !6118)
!6179 = !DILocation(line: 1348, column: 18, scope: !6118)
!6180 = !DILocation(line: 1349, column: 27, scope: !6118)
!6181 = !DILocation(line: 1349, column: 34, scope: !6118)
!6182 = !DILocation(line: 1349, column: 12, scope: !6118)
!6183 = !DILocation(line: 1349, column: 47, scope: !6118)
!6184 = !DILocation(line: 1349, column: 9, scope: !6118)
!6185 = !DILocation(line: 1350, column: 27, scope: !6118)
!6186 = !DILocation(line: 1350, column: 34, scope: !6118)
!6187 = !DILocation(line: 1350, column: 43, scope: !6118)
!6188 = !DILocation(line: 1350, column: 12, scope: !6118)
!6189 = !DILocation(line: 1350, column: 52, scope: !6118)
!6190 = !DILocation(line: 1350, column: 9, scope: !6118)
!6191 = !DILocation(line: 1351, column: 27, scope: !6118)
!6192 = !DILocation(line: 1351, column: 34, scope: !6118)
!6193 = !DILocation(line: 1351, column: 43, scope: !6118)
!6194 = !DILocation(line: 1351, column: 12, scope: !6118)
!6195 = !DILocation(line: 1351, column: 48, scope: !6118)
!6196 = !DILocation(line: 1351, column: 9, scope: !6118)
!6197 = !DILocation(line: 1348, column: 9, scope: !6118)
!6198 = !DILocation(line: 1357, column: 7, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1357, column: 7)
!6200 = !DILocation(line: 1357, column: 7, scope: !6118)
!6201 = !DILocation(line: 1358, column: 10, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 1357, column: 19)
!6203 = !DILocation(line: 1359, column: 10, scope: !6202)
!6204 = !DILocation(line: 1360, column: 3, scope: !6202)
!6205 = !DILocation(line: 1363, column: 26, scope: !6118)
!6206 = !DILocation(line: 1363, column: 48, scope: !6118)
!6207 = !DILocation(line: 1363, column: 3, scope: !6118)
!6208 = !DILocation(line: 1365, column: 8, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1365, column: 7)
!6210 = !DILocation(line: 1365, column: 7, scope: !6118)
!6211 = !DILocation(line: 1366, column: 24, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 1365, column: 20)
!6213 = !DILocation(line: 1366, column: 4, scope: !6212)
!6214 = !DILocation(line: 1366, column: 11, scope: !6212)
!6215 = !DILocation(line: 1366, column: 22, scope: !6212)
!6216 = !DILocation(line: 1367, column: 36, scope: !6212)
!6217 = !DILocation(line: 1367, column: 43, scope: !6212)
!6218 = !DILocation(line: 1367, column: 10, scope: !6212)
!6219 = !DILocation(line: 1367, column: 8, scope: !6212)
!6220 = !DILocation(line: 1368, column: 3, scope: !6212)
!6221 = !DILocation(line: 1375, column: 11, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 1375, column: 4)
!6223 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 1368, column: 10)
!6224 = !DILocation(line: 1375, column: 9, scope: !6222)
!6225 = !DILocation(line: 1375, column: 16, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 1375, column: 4)
!6227 = !DILocation(line: 1375, column: 18, scope: !6226)
!6228 = !DILocation(line: 1375, column: 4, scope: !6222)
!6229 = !DILocalVariable(name: "parent", scope: !6230, file: !3, line: 1376, type: !234)
!6230 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 1375, column: 48)
!6231 = !DILocation(line: 1376, column: 21, scope: !6230)
!6232 = !DILocation(line: 1376, column: 30, scope: !6230)
!6233 = !DILocation(line: 1377, column: 36, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 1377, column: 9)
!6235 = !DILocation(line: 1377, column: 22, scope: !6234)
!6236 = !DILocation(line: 1378, column: 8, scope: !6234)
!6237 = !DILocation(line: 1378, column: 12, scope: !6234)
!6238 = !DILocation(line: 1378, column: 11, scope: !6234)
!6239 = !DILocation(line: 1378, column: 13, scope: !6234)
!6240 = !DILocation(line: 1377, column: 9, scope: !6234)
!6241 = !DILocation(line: 1377, column: 9, scope: !6230)
!6242 = !DILocation(line: 1379, column: 6, scope: !6234)
!6243 = !DILocation(line: 1380, column: 5, scope: !6230)
!6244 = !DILocation(line: 1380, column: 12, scope: !6230)
!6245 = !DILocation(line: 1380, column: 20, scope: !6230)
!6246 = !DILocation(line: 1381, column: 12, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 1381, column: 10)
!6248 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 1380, column: 28)
!6249 = !DILocation(line: 1381, column: 41, scope: !6247)
!6250 = !DILocation(line: 1382, column: 11, scope: !6247)
!6251 = !DILocation(line: 1382, column: 19, scope: !6247)
!6252 = !DILocation(line: 1382, column: 28, scope: !6247)
!6253 = !DILocation(line: 1382, column: 34, scope: !6247)
!6254 = !DILocation(line: 1382, column: 32, scope: !6247)
!6255 = !DILocation(line: 1382, column: 39, scope: !6247)
!6256 = !DILocation(line: 1383, column: 11, scope: !6247)
!6257 = !DILocation(line: 1383, column: 19, scope: !6247)
!6258 = !DILocation(line: 1383, column: 28, scope: !6247)
!6259 = !DILocation(line: 1383, column: 35, scope: !6247)
!6260 = !DILocation(line: 1383, column: 39, scope: !6247)
!6261 = !DILocation(line: 1383, column: 38, scope: !6247)
!6262 = !DILocation(line: 1383, column: 32, scope: !6247)
!6263 = !DILocation(line: 1381, column: 10, scope: !6248)
!6264 = !DILocation(line: 1384, column: 9, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 1383, column: 43)
!6266 = !DILocation(line: 1385, column: 6, scope: !6265)
!6267 = !DILocation(line: 1386, column: 15, scope: !6248)
!6268 = !DILocation(line: 1386, column: 23, scope: !6248)
!6269 = !DILocation(line: 1386, column: 13, scope: !6248)
!6270 = distinct !{!6270, !6243, !6271}
!6271 = !DILocation(line: 1387, column: 5, scope: !6230)
!6272 = !DILocation(line: 1388, column: 9, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 1388, column: 9)
!6274 = !DILocation(line: 1388, column: 9, scope: !6230)
!6275 = !DILocation(line: 1395, column: 8, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 1388, column: 12)
!6277 = !DILocation(line: 1396, column: 6, scope: !6276)
!6278 = !DILocation(line: 1398, column: 4, scope: !6230)
!6279 = !DILocation(line: 1375, column: 44, scope: !6226)
!6280 = !DILocation(line: 1375, column: 4, scope: !6226)
!6281 = distinct !{!6281, !6228, !6282}
!6282 = !DILocation(line: 1398, column: 4, scope: !6222)
!6283 = !DILocation(line: 1399, column: 11, scope: !6223)
!6284 = !DILocation(line: 1399, column: 8, scope: !6223)
!6285 = !DILocation(line: 1407, column: 7, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1407, column: 7)
!6287 = !DILocation(line: 1407, column: 7, scope: !6118)
!6288 = !DILocation(line: 1408, column: 10, scope: !6286)
!6289 = !DILocation(line: 1408, column: 8, scope: !6286)
!6290 = !DILocation(line: 1408, column: 4, scope: !6286)
!6291 = !DILocation(line: 1409, column: 31, scope: !6118)
!6292 = !DILocation(line: 1409, column: 38, scope: !6118)
!6293 = !DILocation(line: 1409, column: 3, scope: !6118)
!6294 = !DILocation(line: 1410, column: 25, scope: !6118)
!6295 = !DILocation(line: 1410, column: 51, scope: !6118)
!6296 = !DILocation(line: 1410, column: 3, scope: !6118)
!6297 = !DILocation(line: 1413, column: 10, scope: !5940)
!6298 = !DILocation(line: 1413, column: 17, scope: !5940)
!6299 = !DILocation(line: 1414, column: 4, scope: !5940)
!6300 = !DILocation(line: 1415, column: 17, scope: !5940)
!6301 = !DILocation(line: 1415, column: 3, scope: !5940)
!6302 = !DILocation(line: 1415, column: 23, scope: !5940)
!6303 = !DILocation(line: 1415, column: 30, scope: !5940)
!6304 = !DILocation(line: 1413, column: 2, scope: !5940)
!6305 = !DILocation(line: 1418, column: 2, scope: !5940)
!6306 = !DILocation(line: 1418, column: 9, scope: !5940)
!6307 = !DILocation(line: 1418, column: 14, scope: !5940)
!6308 = !DILocation(line: 1419, column: 8, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 1419, column: 7)
!6310 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 1418, column: 22)
!6311 = !DILocation(line: 1419, column: 15, scope: !6309)
!6312 = !DILocation(line: 1419, column: 24, scope: !6309)
!6313 = !DILocation(line: 1419, column: 30, scope: !6309)
!6314 = !DILocation(line: 1419, column: 35, scope: !6309)
!6315 = !DILocation(line: 1419, column: 44, scope: !6309)
!6316 = !DILocation(line: 1419, column: 28, scope: !6309)
!6317 = !DILocation(line: 1419, column: 49, scope: !6309)
!6318 = !DILocation(line: 1420, column: 8, scope: !6309)
!6319 = !DILocation(line: 1420, column: 15, scope: !6309)
!6320 = !DILocation(line: 1420, column: 24, scope: !6309)
!6321 = !DILocation(line: 1420, column: 29, scope: !6309)
!6322 = !DILocation(line: 1420, column: 38, scope: !6309)
!6323 = !DILocation(line: 1420, column: 22, scope: !6309)
!6324 = !DILocation(line: 1420, column: 43, scope: !6309)
!6325 = !DILocation(line: 1421, column: 8, scope: !6309)
!6326 = !DILocation(line: 1421, column: 15, scope: !6309)
!6327 = !DILocation(line: 1421, column: 24, scope: !6309)
!6328 = !DILocation(line: 1421, column: 29, scope: !6309)
!6329 = !DILocation(line: 1421, column: 22, scope: !6309)
!6330 = !DILocation(line: 1421, column: 37, scope: !6309)
!6331 = !DILocation(line: 1422, column: 8, scope: !6309)
!6332 = !DILocation(line: 1422, column: 15, scope: !6309)
!6333 = !DILocation(line: 1422, column: 24, scope: !6309)
!6334 = !DILocation(line: 1422, column: 30, scope: !6309)
!6335 = !DILocation(line: 1422, column: 35, scope: !6309)
!6336 = !DILocation(line: 1422, column: 28, scope: !6309)
!6337 = !DILocation(line: 1419, column: 7, scope: !6310)
!6338 = !DILocation(line: 1423, column: 4, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 1422, column: 44)
!6340 = !DILocation(line: 1425, column: 4, scope: !6339)
!6341 = !DILocation(line: 1427, column: 9, scope: !6310)
!6342 = !DILocation(line: 1427, column: 14, scope: !6310)
!6343 = !DILocation(line: 1427, column: 7, scope: !6310)
!6344 = distinct !{!6344, !6305, !6345}
!6345 = !DILocation(line: 1428, column: 2, scope: !5940)
!6346 = !DILabel(scope: !5940, name: "out", file: !3, line: 1430)
!6347 = !DILocation(line: 1430, column: 1, scope: !5940)
!6348 = !DILocation(line: 1431, column: 24, scope: !5940)
!6349 = !DILocation(line: 1431, column: 49, scope: !5940)
!6350 = !DILocation(line: 1431, column: 2, scope: !5940)
!6351 = !DILocation(line: 1433, column: 18, scope: !5940)
!6352 = !DILocation(line: 1433, column: 23, scope: !5940)
!6353 = !DILocation(line: 1433, column: 2, scope: !5940)
!6354 = !DILocation(line: 1435, column: 9, scope: !5940)
!6355 = !DILocation(line: 1435, column: 2, scope: !5940)
!6356 = distinct !DISubprogram(name: "set_pcie_port_type", scope: !3, file: !3, line: 1485, type: !3500, scopeLine: 1486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6357 = !DILocalVariable(name: "pdev", arg: 1, scope: !6356, file: !3, line: 1485, type: !247)
!6358 = !DILocation(line: 1485, column: 41, scope: !6356)
!6359 = !DILocalVariable(name: "pos", scope: !6356, file: !3, line: 1487, type: !232)
!6360 = !DILocation(line: 1487, column: 6, scope: !6356)
!6361 = !DILocalVariable(name: "reg16", scope: !6356, file: !3, line: 1488, type: !945)
!6362 = !DILocation(line: 1488, column: 6, scope: !6356)
!6363 = !DILocalVariable(name: "type", scope: !6356, file: !3, line: 1489, type: !232)
!6364 = !DILocation(line: 1489, column: 6, scope: !6356)
!6365 = !DILocalVariable(name: "parent", scope: !6356, file: !3, line: 1490, type: !247)
!6366 = !DILocation(line: 1490, column: 18, scope: !6356)
!6367 = !DILocation(line: 1492, column: 28, scope: !6356)
!6368 = !DILocation(line: 1492, column: 8, scope: !6356)
!6369 = !DILocation(line: 1492, column: 6, scope: !6356)
!6370 = !DILocation(line: 1493, column: 7, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1493, column: 6)
!6372 = !DILocation(line: 1493, column: 6, scope: !6356)
!6373 = !DILocation(line: 1494, column: 3, scope: !6371)
!6374 = !DILocation(line: 1496, column: 19, scope: !6356)
!6375 = !DILocation(line: 1496, column: 2, scope: !6356)
!6376 = !DILocation(line: 1496, column: 8, scope: !6356)
!6377 = !DILocation(line: 1496, column: 17, scope: !6356)
!6378 = !DILocation(line: 1497, column: 23, scope: !6356)
!6379 = !DILocation(line: 1497, column: 29, scope: !6356)
!6380 = !DILocation(line: 1497, column: 33, scope: !6356)
!6381 = !DILocation(line: 1497, column: 2, scope: !6356)
!6382 = !DILocation(line: 1498, column: 25, scope: !6356)
!6383 = !DILocation(line: 1498, column: 2, scope: !6356)
!6384 = !DILocation(line: 1498, column: 8, scope: !6356)
!6385 = !DILocation(line: 1498, column: 23, scope: !6356)
!6386 = !DILocation(line: 1499, column: 23, scope: !6356)
!6387 = !DILocation(line: 1499, column: 29, scope: !6356)
!6388 = !DILocation(line: 1499, column: 33, scope: !6356)
!6389 = !DILocation(line: 1499, column: 2, scope: !6356)
!6390 = !DILocation(line: 1500, column: 20, scope: !6356)
!6391 = !DILocation(line: 1500, column: 26, scope: !6356)
!6392 = !DILocation(line: 1500, column: 2, scope: !6356)
!6393 = !DILocation(line: 1500, column: 8, scope: !6356)
!6394 = !DILocation(line: 1500, column: 18, scope: !6356)
!6395 = !DILocation(line: 1502, column: 31, scope: !6356)
!6396 = !DILocation(line: 1502, column: 11, scope: !6356)
!6397 = !DILocation(line: 1502, column: 9, scope: !6356)
!6398 = !DILocation(line: 1503, column: 7, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1503, column: 6)
!6400 = !DILocation(line: 1503, column: 6, scope: !6356)
!6401 = !DILocation(line: 1504, column: 3, scope: !6399)
!6402 = !DILocation(line: 1511, column: 23, scope: !6356)
!6403 = !DILocation(line: 1511, column: 9, scope: !6356)
!6404 = !DILocation(line: 1511, column: 7, scope: !6356)
!6405 = !DILocation(line: 1512, column: 6, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1512, column: 6)
!6407 = !DILocation(line: 1512, column: 11, scope: !6406)
!6408 = !DILocation(line: 1512, column: 6, scope: !6356)
!6409 = !DILocation(line: 1518, column: 28, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1518, column: 7)
!6411 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1512, column: 39)
!6412 = !DILocation(line: 1518, column: 7, scope: !6410)
!6413 = !DILocation(line: 1518, column: 7, scope: !6411)
!6414 = !DILocation(line: 1519, column: 4, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1518, column: 37)
!6416 = !DILocation(line: 1520, column: 4, scope: !6415)
!6417 = !DILocation(line: 1520, column: 10, scope: !6415)
!6418 = !DILocation(line: 1520, column: 25, scope: !6415)
!6419 = !DILocation(line: 1521, column: 4, scope: !6415)
!6420 = !DILocation(line: 1521, column: 10, scope: !6415)
!6421 = !DILocation(line: 1521, column: 25, scope: !6415)
!6422 = !DILocation(line: 1522, column: 3, scope: !6415)
!6423 = !DILocation(line: 1523, column: 2, scope: !6411)
!6424 = !DILocation(line: 1523, column: 13, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1523, column: 13)
!6426 = !DILocation(line: 1523, column: 18, scope: !6425)
!6427 = !DILocation(line: 1523, column: 13, scope: !6406)
!6428 = !DILocation(line: 1529, column: 21, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 1529, column: 7)
!6430 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 1523, column: 44)
!6431 = !DILocation(line: 1529, column: 7, scope: !6429)
!6432 = !DILocation(line: 1529, column: 29, scope: !6429)
!6433 = !DILocation(line: 1529, column: 7, scope: !6430)
!6434 = !DILocation(line: 1530, column: 4, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 1529, column: 55)
!6436 = !DILocation(line: 1531, column: 4, scope: !6435)
!6437 = !DILocation(line: 1531, column: 10, scope: !6435)
!6438 = !DILocation(line: 1531, column: 25, scope: !6435)
!6439 = !DILocation(line: 1532, column: 4, scope: !6435)
!6440 = !DILocation(line: 1532, column: 10, scope: !6435)
!6441 = !DILocation(line: 1532, column: 25, scope: !6435)
!6442 = !DILocation(line: 1533, column: 3, scope: !6435)
!6443 = !DILocation(line: 1534, column: 2, scope: !6430)
!6444 = !DILocation(line: 1535, column: 1, scope: !6356)
!6445 = distinct !DISubprogram(name: "pci_upstream_bridge", scope: !115, file: !115, line: 678, type: !6446, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6446 = !DISubroutineType(types: !6447)
!6447 = !{!247, !247}
!6448 = !DILocalVariable(name: "dev", arg: 1, scope: !6445, file: !115, line: 678, type: !247)
!6449 = !DILocation(line: 678, column: 67, scope: !6445)
!6450 = !DILocation(line: 680, column: 19, scope: !6445)
!6451 = !DILocation(line: 680, column: 8, scope: !6445)
!6452 = !DILocation(line: 680, column: 6, scope: !6445)
!6453 = !DILocation(line: 681, column: 22, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6445, file: !115, line: 681, column: 6)
!6455 = !DILocation(line: 681, column: 27, scope: !6454)
!6456 = !DILocation(line: 681, column: 6, scope: !6454)
!6457 = !DILocation(line: 681, column: 6, scope: !6445)
!6458 = !DILocation(line: 682, column: 3, scope: !6454)
!6459 = !DILocation(line: 684, column: 9, scope: !6445)
!6460 = !DILocation(line: 684, column: 14, scope: !6445)
!6461 = !DILocation(line: 684, column: 19, scope: !6445)
!6462 = !DILocation(line: 684, column: 2, scope: !6445)
!6463 = !DILocation(line: 685, column: 1, scope: !6445)
!6464 = distinct !DISubprogram(name: "pci_pcie_type", scope: !115, file: !115, line: 2157, type: !6465, scopeLine: 2158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6465 = !DISubroutineType(types: !6466)
!6466 = !{!232, !4383}
!6467 = !DILocalVariable(name: "dev", arg: 1, scope: !6464, file: !115, line: 2157, type: !4383)
!6468 = !DILocation(line: 2157, column: 55, scope: !6464)
!6469 = !DILocation(line: 2159, column: 24, scope: !6464)
!6470 = !DILocation(line: 2159, column: 10, scope: !6464)
!6471 = !DILocation(line: 2159, column: 29, scope: !6464)
!6472 = !DILocation(line: 2159, column: 51, scope: !6464)
!6473 = !DILocation(line: 2159, column: 2, scope: !6464)
!6474 = distinct !DISubprogram(name: "pcie_downstream_port", scope: !108, file: !108, line: 133, type: !6475, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6475 = !DISubroutineType(types: !6476)
!6476 = !{!576, !4383}
!6477 = !DILocalVariable(name: "dev", arg: 1, scope: !6474, file: !108, line: 133, type: !4383)
!6478 = !DILocation(line: 133, column: 63, scope: !6474)
!6479 = !DILocalVariable(name: "type", scope: !6474, file: !108, line: 135, type: !232)
!6480 = !DILocation(line: 135, column: 6, scope: !6474)
!6481 = !DILocation(line: 135, column: 27, scope: !6474)
!6482 = !DILocation(line: 135, column: 13, scope: !6474)
!6483 = !DILocation(line: 137, column: 9, scope: !6474)
!6484 = !DILocation(line: 137, column: 14, scope: !6474)
!6485 = !DILocation(line: 137, column: 40, scope: !6474)
!6486 = !DILocation(line: 138, column: 9, scope: !6474)
!6487 = !DILocation(line: 138, column: 14, scope: !6474)
!6488 = !DILocation(line: 138, column: 41, scope: !6474)
!6489 = !DILocation(line: 139, column: 9, scope: !6474)
!6490 = !DILocation(line: 139, column: 14, scope: !6474)
!6491 = !DILocation(line: 137, column: 2, scope: !6474)
!6492 = distinct !DISubprogram(name: "set_pcie_hotplug_bridge", scope: !3, file: !3, line: 1537, type: !3500, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6493 = !DILocalVariable(name: "pdev", arg: 1, scope: !6492, file: !3, line: 1537, type: !247)
!6494 = !DILocation(line: 1537, column: 46, scope: !6492)
!6495 = !DILocalVariable(name: "reg32", scope: !6492, file: !3, line: 1539, type: !223)
!6496 = !DILocation(line: 1539, column: 6, scope: !6492)
!6497 = !DILocation(line: 1541, column: 29, scope: !6492)
!6498 = !DILocation(line: 1541, column: 2, scope: !6492)
!6499 = !DILocation(line: 1542, column: 6, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 1542, column: 6)
!6501 = !DILocation(line: 1542, column: 12, scope: !6500)
!6502 = !DILocation(line: 1542, column: 6, scope: !6492)
!6503 = !DILocation(line: 1543, column: 3, scope: !6500)
!6504 = !DILocation(line: 1543, column: 9, scope: !6500)
!6505 = !DILocation(line: 1543, column: 27, scope: !6500)
!6506 = !DILocation(line: 1544, column: 1, scope: !6492)
!6507 = distinct !DISubprogram(name: "pci_cfg_space_size", scope: !3, file: !3, line: 1638, type: !3512, scopeLine: 1639, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6508 = !DILocalVariable(name: "dev", arg: 1, scope: !6507, file: !3, line: 1638, type: !247)
!6509 = !DILocation(line: 1638, column: 40, scope: !6507)
!6510 = !DILocalVariable(name: "pos", scope: !6507, file: !3, line: 1640, type: !232)
!6511 = !DILocation(line: 1640, column: 6, scope: !6507)
!6512 = !DILocalVariable(name: "status", scope: !6507, file: !3, line: 1641, type: !223)
!6513 = !DILocation(line: 1641, column: 6, scope: !6507)
!6514 = !DILocalVariable(name: "class", scope: !6507, file: !3, line: 1642, type: !945)
!6515 = !DILocation(line: 1642, column: 6, scope: !6507)
!6516 = !DILocation(line: 1655, column: 6, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 1655, column: 6)
!6518 = !DILocation(line: 1655, column: 11, scope: !6517)
!6519 = !DILocation(line: 1655, column: 6, scope: !6507)
!6520 = !DILocation(line: 1656, column: 3, scope: !6517)
!6521 = !DILocation(line: 1659, column: 6, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 1659, column: 6)
!6523 = !DILocation(line: 1659, column: 11, scope: !6522)
!6524 = !DILocation(line: 1659, column: 16, scope: !6522)
!6525 = !DILocation(line: 1659, column: 26, scope: !6522)
!6526 = !DILocation(line: 1659, column: 6, scope: !6507)
!6527 = !DILocation(line: 1660, column: 3, scope: !6522)
!6528 = !DILocation(line: 1662, column: 10, scope: !6507)
!6529 = !DILocation(line: 1662, column: 15, scope: !6507)
!6530 = !DILocation(line: 1662, column: 21, scope: !6507)
!6531 = !DILocation(line: 1662, column: 8, scope: !6507)
!6532 = !DILocation(line: 1663, column: 6, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 1663, column: 6)
!6534 = !DILocation(line: 1663, column: 12, scope: !6533)
!6535 = !DILocation(line: 1663, column: 6, scope: !6507)
!6536 = !DILocation(line: 1664, column: 33, scope: !6533)
!6537 = !DILocation(line: 1664, column: 10, scope: !6533)
!6538 = !DILocation(line: 1664, column: 3, scope: !6533)
!6539 = !DILocation(line: 1666, column: 18, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 1666, column: 6)
!6541 = !DILocation(line: 1666, column: 6, scope: !6540)
!6542 = !DILocation(line: 1666, column: 6, scope: !6507)
!6543 = !DILocation(line: 1667, column: 33, scope: !6540)
!6544 = !DILocation(line: 1667, column: 10, scope: !6540)
!6545 = !DILocation(line: 1667, column: 3, scope: !6540)
!6546 = !DILocation(line: 1669, column: 28, scope: !6507)
!6547 = !DILocation(line: 1669, column: 8, scope: !6507)
!6548 = !DILocation(line: 1669, column: 6, scope: !6507)
!6549 = !DILocation(line: 1670, column: 7, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 1670, column: 6)
!6551 = !DILocation(line: 1670, column: 6, scope: !6507)
!6552 = !DILocation(line: 1671, column: 3, scope: !6550)
!6553 = !DILocation(line: 1673, column: 24, scope: !6507)
!6554 = !DILocation(line: 1673, column: 29, scope: !6507)
!6555 = !DILocation(line: 1673, column: 33, scope: !6507)
!6556 = !DILocation(line: 1673, column: 2, scope: !6507)
!6557 = !DILocation(line: 1674, column: 6, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 1674, column: 6)
!6559 = !DILocation(line: 1674, column: 13, scope: !6558)
!6560 = !DILocation(line: 1674, column: 6, scope: !6507)
!6561 = !DILocation(line: 1675, column: 33, scope: !6558)
!6562 = !DILocation(line: 1675, column: 10, scope: !6558)
!6563 = !DILocation(line: 1675, column: 3, scope: !6558)
!6564 = !DILocation(line: 1677, column: 2, scope: !6507)
!6565 = !DILocation(line: 1678, column: 1, scope: !6507)
!6566 = distinct !DISubprogram(name: "pci_cfg_space_size_ext", scope: !3, file: !3, line: 1625, type: !3512, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6567 = !DILocalVariable(name: "dev", arg: 1, scope: !6566, file: !3, line: 1625, type: !247)
!6568 = !DILocation(line: 1625, column: 51, scope: !6566)
!6569 = !DILocalVariable(name: "status", scope: !6566, file: !3, line: 1627, type: !223)
!6570 = !DILocation(line: 1627, column: 6, scope: !6566)
!6571 = !DILocalVariable(name: "pos", scope: !6566, file: !3, line: 1628, type: !232)
!6572 = !DILocation(line: 1628, column: 6, scope: !6566)
!6573 = !DILocation(line: 1630, column: 28, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 1630, column: 6)
!6575 = !DILocation(line: 1630, column: 33, scope: !6574)
!6576 = !DILocation(line: 1630, column: 6, scope: !6574)
!6577 = !DILocation(line: 1630, column: 47, scope: !6574)
!6578 = !DILocation(line: 1630, column: 6, scope: !6566)
!6579 = !DILocation(line: 1631, column: 3, scope: !6574)
!6580 = !DILocation(line: 1632, column: 6, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 1632, column: 6)
!6582 = !DILocation(line: 1632, column: 13, scope: !6581)
!6583 = !DILocation(line: 1632, column: 27, scope: !6581)
!6584 = !DILocation(line: 1632, column: 53, scope: !6581)
!6585 = !DILocation(line: 1632, column: 30, scope: !6581)
!6586 = !DILocation(line: 1632, column: 6, scope: !6566)
!6587 = !DILocation(line: 1633, column: 3, scope: !6581)
!6588 = !DILocation(line: 1635, column: 2, scope: !6566)
!6589 = !DILocation(line: 1636, column: 1, scope: !6566)
!6590 = distinct !DISubprogram(name: "pci_is_pcie", scope: !115, file: !115, line: 2139, type: !6591, scopeLine: 2140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6591 = !DISubroutineType(types: !6592)
!6592 = !{!576, !247}
!6593 = !DILocalVariable(name: "dev", arg: 1, scope: !6590, file: !115, line: 2139, type: !247)
!6594 = !DILocation(line: 2139, column: 48, scope: !6590)
!6595 = !DILocation(line: 2141, column: 22, scope: !6590)
!6596 = !DILocation(line: 2141, column: 9, scope: !6590)
!6597 = !DILocation(line: 2141, column: 2, scope: !6590)
!6598 = distinct !DISubprogram(name: "pci_setup_device", scope: !3, file: !3, line: 1787, type: !3512, scopeLine: 1788, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6599 = !DILocalVariable(name: "dev", arg: 1, scope: !6598, file: !3, line: 1787, type: !247)
!6600 = !DILocation(line: 1787, column: 38, scope: !6598)
!6601 = !DILocalVariable(name: "class", scope: !6598, file: !3, line: 1789, type: !223)
!6602 = !DILocation(line: 1789, column: 6, scope: !6598)
!6603 = !DILocalVariable(name: "cmd", scope: !6598, file: !3, line: 1790, type: !945)
!6604 = !DILocation(line: 1790, column: 6, scope: !6598)
!6605 = !DILocalVariable(name: "hdr_type", scope: !6598, file: !3, line: 1791, type: !283)
!6606 = !DILocation(line: 1791, column: 5, scope: !6598)
!6607 = !DILocalVariable(name: "pos", scope: !6598, file: !3, line: 1792, type: !232)
!6608 = !DILocation(line: 1792, column: 6, scope: !6598)
!6609 = !DILocalVariable(name: "region", scope: !6598, file: !3, line: 1793, type: !4511)
!6610 = !DILocation(line: 1793, column: 24, scope: !6598)
!6611 = !DILocalVariable(name: "res", scope: !6598, file: !3, line: 1794, type: !4132)
!6612 = !DILocation(line: 1794, column: 19, scope: !6598)
!6613 = !DILocation(line: 1796, column: 26, scope: !6598)
!6614 = !DILocation(line: 1796, column: 13, scope: !6598)
!6615 = !DILocation(line: 1796, column: 11, scope: !6598)
!6616 = !DILocation(line: 1798, column: 17, scope: !6598)
!6617 = !DILocation(line: 1798, column: 22, scope: !6598)
!6618 = !DILocation(line: 1798, column: 27, scope: !6598)
!6619 = !DILocation(line: 1798, column: 2, scope: !6598)
!6620 = !DILocation(line: 1798, column: 7, scope: !6598)
!6621 = !DILocation(line: 1798, column: 15, scope: !6598)
!6622 = !DILocation(line: 1799, column: 20, scope: !6598)
!6623 = !DILocation(line: 1799, column: 25, scope: !6598)
!6624 = !DILocation(line: 1799, column: 30, scope: !6598)
!6625 = !DILocation(line: 1799, column: 2, scope: !6598)
!6626 = !DILocation(line: 1799, column: 7, scope: !6598)
!6627 = !DILocation(line: 1799, column: 11, scope: !6598)
!6628 = !DILocation(line: 1799, column: 18, scope: !6598)
!6629 = !DILocation(line: 1800, column: 2, scope: !6598)
!6630 = !DILocation(line: 1800, column: 7, scope: !6598)
!6631 = !DILocation(line: 1800, column: 11, scope: !6598)
!6632 = !DILocation(line: 1800, column: 15, scope: !6598)
!6633 = !DILocation(line: 1801, column: 18, scope: !6598)
!6634 = !DILocation(line: 1801, column: 27, scope: !6598)
!6635 = !DILocation(line: 1801, column: 2, scope: !6598)
!6636 = !DILocation(line: 1801, column: 7, scope: !6598)
!6637 = !DILocation(line: 1801, column: 16, scope: !6598)
!6638 = !DILocation(line: 1802, column: 26, scope: !6598)
!6639 = !DILocation(line: 1802, column: 35, scope: !6598)
!6640 = !DILocation(line: 1802, column: 24, scope: !6598)
!6641 = !DILocation(line: 1802, column: 23, scope: !6598)
!6642 = !DILocation(line: 1802, column: 2, scope: !6598)
!6643 = !DILocation(line: 1802, column: 7, scope: !6598)
!6644 = !DILocation(line: 1802, column: 21, scope: !6598)
!6645 = !DILocation(line: 1803, column: 2, scope: !6598)
!6646 = !DILocation(line: 1803, column: 7, scope: !6598)
!6647 = !DILocation(line: 1803, column: 19, scope: !6598)
!6648 = !DILocation(line: 1804, column: 21, scope: !6598)
!6649 = !DILocation(line: 1804, column: 2, scope: !6598)
!6650 = !DILocation(line: 1806, column: 22, scope: !6598)
!6651 = !DILocation(line: 1806, column: 2, scope: !6598)
!6652 = !DILocation(line: 1812, column: 2, scope: !6598)
!6653 = !DILocation(line: 1812, column: 7, scope: !6598)
!6654 = !DILocation(line: 1812, column: 16, scope: !6598)
!6655 = !DILocation(line: 1814, column: 16, scope: !6598)
!6656 = !DILocation(line: 1814, column: 21, scope: !6598)
!6657 = !DILocation(line: 1814, column: 61, scope: !6598)
!6658 = !DILocation(line: 1814, column: 66, scope: !6598)
!6659 = !DILocation(line: 1814, column: 47, scope: !6598)
!6660 = !DILocation(line: 1815, column: 8, scope: !6598)
!6661 = !DILocation(line: 1815, column: 13, scope: !6598)
!6662 = !DILocation(line: 1815, column: 18, scope: !6598)
!6663 = !DILocation(line: 1815, column: 26, scope: !6598)
!6664 = !DILocation(line: 1816, column: 8, scope: !6598)
!6665 = !DILocation(line: 1814, column: 2, scope: !6598)
!6666 = !DILocation(line: 1818, column: 20, scope: !6598)
!6667 = !DILocation(line: 1818, column: 10, scope: !6598)
!6668 = !DILocation(line: 1818, column: 8, scope: !6598)
!6669 = !DILocation(line: 1820, column: 18, scope: !6598)
!6670 = !DILocation(line: 1820, column: 24, scope: !6598)
!6671 = !DILocation(line: 1820, column: 2, scope: !6598)
!6672 = !DILocation(line: 1820, column: 7, scope: !6598)
!6673 = !DILocation(line: 1820, column: 16, scope: !6598)
!6674 = !DILocation(line: 1821, column: 15, scope: !6598)
!6675 = !DILocation(line: 1821, column: 21, scope: !6598)
!6676 = !DILocation(line: 1821, column: 2, scope: !6598)
!6677 = !DILocation(line: 1821, column: 7, scope: !6598)
!6678 = !DILocation(line: 1821, column: 13, scope: !6598)
!6679 = !DILocation(line: 1823, column: 6, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1823, column: 6)
!6681 = !DILocation(line: 1823, column: 6, scope: !6598)
!6682 = !DILocation(line: 1824, column: 25, scope: !6680)
!6683 = !DILocation(line: 1824, column: 3, scope: !6680)
!6684 = !DILocation(line: 1827, column: 37, scope: !6598)
!6685 = !DILocation(line: 1827, column: 18, scope: !6598)
!6686 = !DILocation(line: 1827, column: 2, scope: !6598)
!6687 = !DILocation(line: 1827, column: 7, scope: !6598)
!6688 = !DILocation(line: 1827, column: 16, scope: !6598)
!6689 = !DILocation(line: 1830, column: 23, scope: !6598)
!6690 = !DILocation(line: 1830, column: 2, scope: !6598)
!6691 = !DILocation(line: 1832, column: 21, scope: !6598)
!6692 = !DILocation(line: 1832, column: 2, scope: !6598)
!6693 = !DILocation(line: 1835, column: 2, scope: !6598)
!6694 = !DILocation(line: 1835, column: 7, scope: !6598)
!6695 = !DILocation(line: 1835, column: 21, scope: !6598)
!6696 = !DILocation(line: 1838, column: 36, scope: !6598)
!6697 = !DILocation(line: 1838, column: 2, scope: !6598)
!6698 = !DILocation(line: 1840, column: 2, scope: !6598)
!6699 = !DILocation(line: 1844, column: 10, scope: !6598)
!6700 = !DILocation(line: 1844, column: 15, scope: !6598)
!6701 = !DILocation(line: 1844, column: 21, scope: !6598)
!6702 = !DILocation(line: 1844, column: 8, scope: !6598)
!6703 = !DILocation(line: 1846, column: 6, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1846, column: 6)
!6705 = !DILocation(line: 1846, column: 11, scope: !6704)
!6706 = !DILocation(line: 1846, column: 30, scope: !6704)
!6707 = !DILocation(line: 1846, column: 34, scope: !6704)
!6708 = !DILocation(line: 1846, column: 39, scope: !6704)
!6709 = !DILocation(line: 1846, column: 6, scope: !6598)
!6710 = !DILocation(line: 1847, column: 24, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 1846, column: 55)
!6712 = !DILocation(line: 1847, column: 3, scope: !6711)
!6713 = !DILocation(line: 1848, column: 7, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 1848, column: 7)
!6715 = !DILocation(line: 1848, column: 11, scope: !6714)
!6716 = !DILocation(line: 1848, column: 7, scope: !6711)
!6717 = !DILocation(line: 1849, column: 4, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 1848, column: 52)
!6719 = !DILocation(line: 1850, column: 8, scope: !6718)
!6720 = !DILocation(line: 1851, column: 8, scope: !6718)
!6721 = !DILocation(line: 1852, column: 26, scope: !6718)
!6722 = !DILocation(line: 1852, column: 44, scope: !6718)
!6723 = !DILocation(line: 1852, column: 4, scope: !6718)
!6724 = !DILocation(line: 1853, column: 3, scope: !6718)
!6725 = !DILocation(line: 1854, column: 2, scope: !6711)
!6726 = !DILocation(line: 1856, column: 50, scope: !6598)
!6727 = !DILocation(line: 1856, column: 29, scope: !6598)
!6728 = !DILocation(line: 1856, column: 2, scope: !6598)
!6729 = !DILocation(line: 1856, column: 7, scope: !6598)
!6730 = !DILocation(line: 1856, column: 27, scope: !6598)
!6731 = !DILocation(line: 1858, column: 10, scope: !6598)
!6732 = !DILocation(line: 1858, column: 15, scope: !6598)
!6733 = !DILocation(line: 1858, column: 2, scope: !6598)
!6734 = !DILocation(line: 1860, column: 7, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 1860, column: 7)
!6736 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1858, column: 25)
!6737 = !DILocation(line: 1860, column: 13, scope: !6735)
!6738 = !DILocation(line: 1860, column: 7, scope: !6736)
!6739 = !DILocation(line: 1861, column: 4, scope: !6735)
!6740 = !DILocation(line: 1862, column: 16, scope: !6736)
!6741 = !DILocation(line: 1862, column: 3, scope: !6736)
!6742 = !DILocation(line: 1863, column: 18, scope: !6736)
!6743 = !DILocation(line: 1863, column: 3, scope: !6736)
!6744 = !DILocation(line: 1865, column: 21, scope: !6736)
!6745 = !DILocation(line: 1865, column: 27, scope: !6736)
!6746 = !DILocation(line: 1865, column: 32, scope: !6736)
!6747 = !DILocation(line: 1865, column: 51, scope: !6736)
!6748 = !DILocation(line: 1865, column: 56, scope: !6736)
!6749 = !DILocation(line: 1865, column: 3, scope: !6736)
!6750 = !DILocation(line: 1873, column: 7, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 1873, column: 7)
!6752 = !DILocation(line: 1873, column: 13, scope: !6751)
!6753 = !DILocation(line: 1873, column: 7, scope: !6736)
!6754 = !DILocalVariable(name: "progif", scope: !6755, file: !3, line: 1874, type: !283)
!6755 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 1873, column: 39)
!6756 = !DILocation(line: 1874, column: 7, scope: !6755)
!6757 = !DILocation(line: 1875, column: 25, scope: !6755)
!6758 = !DILocation(line: 1875, column: 4, scope: !6755)
!6759 = !DILocation(line: 1876, column: 9, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 1876, column: 8)
!6761 = !DILocation(line: 1876, column: 16, scope: !6760)
!6762 = !DILocation(line: 1876, column: 21, scope: !6760)
!6763 = !DILocation(line: 1876, column: 8, scope: !6755)
!6764 = !DILocation(line: 1877, column: 12, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 1876, column: 27)
!6766 = !DILocation(line: 1877, column: 18, scope: !6765)
!6767 = !DILocation(line: 1878, column: 12, scope: !6765)
!6768 = !DILocation(line: 1878, column: 16, scope: !6765)
!6769 = !DILocation(line: 1879, column: 12, scope: !6765)
!6770 = !DILocation(line: 1879, column: 17, scope: !6765)
!6771 = !DILocation(line: 1879, column: 9, scope: !6765)
!6772 = !DILocation(line: 1880, column: 5, scope: !6765)
!6773 = !DILocation(line: 1880, column: 10, scope: !6765)
!6774 = !DILocation(line: 1880, column: 16, scope: !6765)
!6775 = !DILocation(line: 1881, column: 29, scope: !6765)
!6776 = !DILocation(line: 1881, column: 34, scope: !6765)
!6777 = !DILocation(line: 1881, column: 39, scope: !6765)
!6778 = !DILocation(line: 1881, column: 5, scope: !6765)
!6779 = !DILocation(line: 1882, column: 5, scope: !6765)
!6780 = !DILocation(line: 1884, column: 12, scope: !6765)
!6781 = !DILocation(line: 1884, column: 18, scope: !6765)
!6782 = !DILocation(line: 1885, column: 12, scope: !6765)
!6783 = !DILocation(line: 1885, column: 16, scope: !6765)
!6784 = !DILocation(line: 1886, column: 12, scope: !6765)
!6785 = !DILocation(line: 1886, column: 17, scope: !6765)
!6786 = !DILocation(line: 1886, column: 9, scope: !6765)
!6787 = !DILocation(line: 1887, column: 5, scope: !6765)
!6788 = !DILocation(line: 1887, column: 10, scope: !6765)
!6789 = !DILocation(line: 1887, column: 16, scope: !6765)
!6790 = !DILocation(line: 1888, column: 29, scope: !6765)
!6791 = !DILocation(line: 1888, column: 34, scope: !6765)
!6792 = !DILocation(line: 1888, column: 39, scope: !6765)
!6793 = !DILocation(line: 1888, column: 5, scope: !6765)
!6794 = !DILocation(line: 1889, column: 5, scope: !6765)
!6795 = !DILocation(line: 1891, column: 4, scope: !6765)
!6796 = !DILocation(line: 1892, column: 9, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 1892, column: 8)
!6798 = !DILocation(line: 1892, column: 16, scope: !6797)
!6799 = !DILocation(line: 1892, column: 21, scope: !6797)
!6800 = !DILocation(line: 1892, column: 8, scope: !6755)
!6801 = !DILocation(line: 1893, column: 12, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 1892, column: 27)
!6803 = !DILocation(line: 1893, column: 18, scope: !6802)
!6804 = !DILocation(line: 1894, column: 12, scope: !6802)
!6805 = !DILocation(line: 1894, column: 16, scope: !6802)
!6806 = !DILocation(line: 1895, column: 12, scope: !6802)
!6807 = !DILocation(line: 1895, column: 17, scope: !6802)
!6808 = !DILocation(line: 1895, column: 9, scope: !6802)
!6809 = !DILocation(line: 1896, column: 5, scope: !6802)
!6810 = !DILocation(line: 1896, column: 10, scope: !6802)
!6811 = !DILocation(line: 1896, column: 16, scope: !6802)
!6812 = !DILocation(line: 1897, column: 29, scope: !6802)
!6813 = !DILocation(line: 1897, column: 34, scope: !6802)
!6814 = !DILocation(line: 1897, column: 39, scope: !6802)
!6815 = !DILocation(line: 1897, column: 5, scope: !6802)
!6816 = !DILocation(line: 1898, column: 5, scope: !6802)
!6817 = !DILocation(line: 1900, column: 12, scope: !6802)
!6818 = !DILocation(line: 1900, column: 18, scope: !6802)
!6819 = !DILocation(line: 1901, column: 12, scope: !6802)
!6820 = !DILocation(line: 1901, column: 16, scope: !6802)
!6821 = !DILocation(line: 1902, column: 12, scope: !6802)
!6822 = !DILocation(line: 1902, column: 17, scope: !6802)
!6823 = !DILocation(line: 1902, column: 9, scope: !6802)
!6824 = !DILocation(line: 1903, column: 5, scope: !6802)
!6825 = !DILocation(line: 1903, column: 10, scope: !6802)
!6826 = !DILocation(line: 1903, column: 16, scope: !6802)
!6827 = !DILocation(line: 1904, column: 29, scope: !6802)
!6828 = !DILocation(line: 1904, column: 34, scope: !6802)
!6829 = !DILocation(line: 1904, column: 39, scope: !6802)
!6830 = !DILocation(line: 1904, column: 5, scope: !6802)
!6831 = !DILocation(line: 1905, column: 5, scope: !6802)
!6832 = !DILocation(line: 1907, column: 4, scope: !6802)
!6833 = !DILocation(line: 1908, column: 3, scope: !6755)
!6834 = !DILocation(line: 1909, column: 3, scope: !6736)
!6835 = !DILocation(line: 1917, column: 16, scope: !6736)
!6836 = !DILocation(line: 1917, column: 3, scope: !6736)
!6837 = !DILocation(line: 1918, column: 24, scope: !6736)
!6838 = !DILocation(line: 1918, column: 29, scope: !6736)
!6839 = !DILocation(line: 1918, column: 35, scope: !6736)
!6840 = !DILocation(line: 1918, column: 43, scope: !6736)
!6841 = !DILocation(line: 1918, column: 3, scope: !6736)
!6842 = !DILocation(line: 1918, column: 8, scope: !6736)
!6843 = !DILocation(line: 1918, column: 20, scope: !6736)
!6844 = !DILocation(line: 1919, column: 18, scope: !6736)
!6845 = !DILocation(line: 1919, column: 3, scope: !6736)
!6846 = !DILocation(line: 1920, column: 27, scope: !6736)
!6847 = !DILocation(line: 1920, column: 3, scope: !6736)
!6848 = !DILocation(line: 1921, column: 27, scope: !6736)
!6849 = !DILocation(line: 1921, column: 3, scope: !6736)
!6850 = !DILocation(line: 1922, column: 29, scope: !6736)
!6851 = !DILocation(line: 1922, column: 9, scope: !6736)
!6852 = !DILocation(line: 1922, column: 7, scope: !6736)
!6853 = !DILocation(line: 1923, column: 7, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 1923, column: 7)
!6855 = !DILocation(line: 1923, column: 7, scope: !6736)
!6856 = !DILocation(line: 1924, column: 25, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 1923, column: 12)
!6858 = !DILocation(line: 1924, column: 30, scope: !6857)
!6859 = !DILocation(line: 1924, column: 34, scope: !6857)
!6860 = !DILocation(line: 1924, column: 58, scope: !6857)
!6861 = !DILocation(line: 1924, column: 63, scope: !6857)
!6862 = !DILocation(line: 1924, column: 4, scope: !6857)
!6863 = !DILocation(line: 1925, column: 25, scope: !6857)
!6864 = !DILocation(line: 1925, column: 30, scope: !6857)
!6865 = !DILocation(line: 1925, column: 34, scope: !6857)
!6866 = !DILocation(line: 1925, column: 58, scope: !6857)
!6867 = !DILocation(line: 1925, column: 63, scope: !6857)
!6868 = !DILocation(line: 1925, column: 4, scope: !6857)
!6869 = !DILocation(line: 1926, column: 3, scope: !6857)
!6870 = !DILocation(line: 1927, column: 3, scope: !6736)
!6871 = !DILocation(line: 1930, column: 7, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 1930, column: 7)
!6873 = !DILocation(line: 1930, column: 13, scope: !6872)
!6874 = !DILocation(line: 1930, column: 7, scope: !6736)
!6875 = !DILocation(line: 1931, column: 4, scope: !6872)
!6876 = !DILocation(line: 1932, column: 16, scope: !6736)
!6877 = !DILocation(line: 1932, column: 3, scope: !6736)
!6878 = !DILocation(line: 1933, column: 18, scope: !6736)
!6879 = !DILocation(line: 1933, column: 3, scope: !6736)
!6880 = !DILocation(line: 1934, column: 24, scope: !6736)
!6881 = !DILocation(line: 1934, column: 58, scope: !6736)
!6882 = !DILocation(line: 1934, column: 63, scope: !6736)
!6883 = !DILocation(line: 1934, column: 3, scope: !6736)
!6884 = !DILocation(line: 1935, column: 24, scope: !6736)
!6885 = !DILocation(line: 1935, column: 51, scope: !6736)
!6886 = !DILocation(line: 1935, column: 56, scope: !6736)
!6887 = !DILocation(line: 1935, column: 3, scope: !6736)
!6888 = !DILocation(line: 1936, column: 3, scope: !6736)
!6889 = !DILocation(line: 1939, column: 3, scope: !6736)
!6890 = !DILocation(line: 1941, column: 3, scope: !6736)
!6891 = !DILabel(scope: !6736, name: "bad", file: !3, line: 1943)
!6892 = !DILocation(line: 1943, column: 2, scope: !6736)
!6893 = !DILocation(line: 1944, column: 3, scope: !6736)
!6894 = !DILocation(line: 1946, column: 3, scope: !6736)
!6895 = !DILocation(line: 1946, column: 8, scope: !6736)
!6896 = !DILocation(line: 1946, column: 14, scope: !6736)
!6897 = !DILocation(line: 1947, column: 2, scope: !6736)
!6898 = !DILocation(line: 1950, column: 2, scope: !6598)
!6899 = !DILocation(line: 1951, column: 1, scope: !6598)
!6900 = distinct !DISubprogram(name: "pci_hdr_type", scope: !3, file: !3, line: 1705, type: !6901, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6901 = !DISubroutineType(types: !6902)
!6902 = !{!283, !247}
!6903 = !DILocalVariable(name: "dev", arg: 1, scope: !6900, file: !3, line: 1705, type: !247)
!6904 = !DILocation(line: 1705, column: 40, scope: !6900)
!6905 = !DILocalVariable(name: "hdr_type", scope: !6900, file: !3, line: 1707, type: !283)
!6906 = !DILocation(line: 1707, column: 5, scope: !6900)
!6907 = !DILocation(line: 1710, column: 6, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 1710, column: 6)
!6909 = !DILocation(line: 1710, column: 11, scope: !6908)
!6910 = !DILocation(line: 1710, column: 6, scope: !6900)
!6911 = !DILocation(line: 1711, column: 10, scope: !6908)
!6912 = !DILocation(line: 1711, column: 15, scope: !6908)
!6913 = !DILocation(line: 1711, column: 23, scope: !6908)
!6914 = !DILocation(line: 1711, column: 30, scope: !6908)
!6915 = !DILocation(line: 1711, column: 3, scope: !6908)
!6916 = !DILocation(line: 1713, column: 23, scope: !6900)
!6917 = !DILocation(line: 1713, column: 2, scope: !6900)
!6918 = !DILocation(line: 1714, column: 9, scope: !6900)
!6919 = !DILocation(line: 1714, column: 2, scope: !6900)
!6920 = !DILocation(line: 1715, column: 1, scope: !6900)
!6921 = distinct !DISubprogram(name: "pci_domain_nr", scope: !6922, file: !6922, line: 44, type: !4237, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6922 = !DIFile(filename: "./arch/x86/include/asm/pci.h", directory: "/home/lizy2001/genbc/linux")
!6923 = !DILocalVariable(name: "bus", arg: 1, scope: !6921, file: !6922, line: 44, type: !234)
!6924 = !DILocation(line: 44, column: 49, scope: !6921)
!6925 = !DILocation(line: 46, column: 24, scope: !6921)
!6926 = !DILocation(line: 46, column: 9, scope: !6921)
!6927 = !DILocation(line: 46, column: 30, scope: !6921)
!6928 = !DILocation(line: 46, column: 2, scope: !6921)
!6929 = distinct !DISubprogram(name: "pci_class", scope: !3, file: !3, line: 1680, type: !6930, scopeLine: 1681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6930 = !DISubroutineType(types: !6931)
!6931 = !{!223, !247}
!6932 = !DILocalVariable(name: "dev", arg: 1, scope: !6929, file: !3, line: 1680, type: !247)
!6933 = !DILocation(line: 1680, column: 38, scope: !6929)
!6934 = !DILocalVariable(name: "class", scope: !6929, file: !3, line: 1682, type: !223)
!6935 = !DILocation(line: 1682, column: 6, scope: !6929)
!6936 = !DILocation(line: 1685, column: 6, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6929, file: !3, line: 1685, column: 6)
!6938 = !DILocation(line: 1685, column: 11, scope: !6937)
!6939 = !DILocation(line: 1685, column: 6, scope: !6929)
!6940 = !DILocation(line: 1686, column: 10, scope: !6937)
!6941 = !DILocation(line: 1686, column: 15, scope: !6937)
!6942 = !DILocation(line: 1686, column: 23, scope: !6937)
!6943 = !DILocation(line: 1686, column: 30, scope: !6937)
!6944 = !DILocation(line: 1686, column: 3, scope: !6937)
!6945 = !DILocation(line: 1688, column: 24, scope: !6929)
!6946 = !DILocation(line: 1688, column: 2, scope: !6929)
!6947 = !DILocation(line: 1689, column: 9, scope: !6929)
!6948 = !DILocation(line: 1689, column: 2, scope: !6929)
!6949 = !DILocation(line: 1690, column: 1, scope: !6929)
!6950 = distinct !DISubprogram(name: "early_dump_pci_device", scope: !3, file: !3, line: 1763, type: !3500, scopeLine: 1764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6951 = !DILocalVariable(name: "pdev", arg: 1, scope: !6950, file: !3, line: 1763, type: !247)
!6952 = !DILocation(line: 1763, column: 51, scope: !6950)
!6953 = !DILocalVariable(name: "value", scope: !6950, file: !3, line: 1765, type: !2318)
!6954 = !DILocation(line: 1765, column: 6, scope: !6950)
!6955 = !DILocalVariable(name: "i", scope: !6950, file: !3, line: 1766, type: !232)
!6956 = !DILocation(line: 1766, column: 6, scope: !6950)
!6957 = !DILocation(line: 1768, column: 2, scope: !6950)
!6958 = !DILocation(line: 1770, column: 9, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 1770, column: 2)
!6960 = !DILocation(line: 1770, column: 7, scope: !6959)
!6961 = !DILocation(line: 1770, column: 14, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 1770, column: 2)
!6963 = !DILocation(line: 1770, column: 16, scope: !6962)
!6964 = !DILocation(line: 1770, column: 2, scope: !6959)
!6965 = !DILocation(line: 1771, column: 25, scope: !6962)
!6966 = !DILocation(line: 1771, column: 31, scope: !6962)
!6967 = !DILocation(line: 1771, column: 41, scope: !6962)
!6968 = !DILocation(line: 1771, column: 43, scope: !6962)
!6969 = !DILocation(line: 1771, column: 35, scope: !6962)
!6970 = !DILocation(line: 1771, column: 3, scope: !6962)
!6971 = !DILocation(line: 1770, column: 25, scope: !6962)
!6972 = !DILocation(line: 1770, column: 2, scope: !6962)
!6973 = distinct !{!6973, !6964, !6974}
!6974 = !DILocation(line: 1771, column: 47, scope: !6959)
!6975 = !DILocation(line: 1774, column: 10, scope: !6950)
!6976 = !DILocation(line: 1773, column: 2, scope: !6950)
!6977 = !DILocation(line: 1775, column: 1, scope: !6950)
!6978 = distinct !DISubprogram(name: "set_pcie_thunderbolt", scope: !3, file: !3, line: 1546, type: !3500, scopeLine: 1547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!6979 = !DILocalVariable(name: "dev", arg: 1, scope: !6978, file: !3, line: 1546, type: !247)
!6980 = !DILocation(line: 1546, column: 50, scope: !6978)
!6981 = !DILocalVariable(name: "vsec", scope: !6978, file: !3, line: 1548, type: !232)
!6982 = !DILocation(line: 1548, column: 6, scope: !6978)
!6983 = !DILocalVariable(name: "header", scope: !6978, file: !3, line: 1549, type: !223)
!6984 = !DILocation(line: 1549, column: 6, scope: !6978)
!6985 = !DILocation(line: 1551, column: 2, scope: !6978)
!6986 = !DILocation(line: 1551, column: 46, scope: !6978)
!6987 = !DILocation(line: 1551, column: 51, scope: !6978)
!6988 = !DILocation(line: 1551, column: 17, scope: !6978)
!6989 = !DILocation(line: 1551, column: 15, scope: !6978)
!6990 = !DILocation(line: 1553, column: 25, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 1552, column: 34)
!6992 = !DILocation(line: 1553, column: 30, scope: !6991)
!6993 = !DILocation(line: 1553, column: 35, scope: !6991)
!6994 = !DILocation(line: 1553, column: 3, scope: !6991)
!6995 = !DILocation(line: 1556, column: 7, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 1556, column: 7)
!6997 = !DILocation(line: 1556, column: 12, scope: !6996)
!6998 = !DILocation(line: 1556, column: 19, scope: !6996)
!6999 = !DILocation(line: 1556, column: 42, scope: !6996)
!7000 = !DILocation(line: 1557, column: 7, scope: !6996)
!7001 = !DILocation(line: 1557, column: 34, scope: !6996)
!7002 = !DILocation(line: 1556, column: 7, scope: !6991)
!7003 = !DILocation(line: 1558, column: 4, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 1557, column: 60)
!7005 = !DILocation(line: 1558, column: 9, scope: !7004)
!7006 = !DILocation(line: 1558, column: 24, scope: !7004)
!7007 = !DILocation(line: 1559, column: 4, scope: !7004)
!7008 = distinct !{!7008, !6985, !7009}
!7009 = !DILocation(line: 1561, column: 2, scope: !6978)
!7010 = !DILocation(line: 1562, column: 1, scope: !6978)
!7011 = distinct !DISubprogram(name: "set_pcie_untrusted", scope: !3, file: !3, line: 1564, type: !3500, scopeLine: 1565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7012 = !DILocalVariable(name: "dev", arg: 1, scope: !7011, file: !3, line: 1564, type: !247)
!7013 = !DILocation(line: 1564, column: 48, scope: !7011)
!7014 = !DILocalVariable(name: "parent", scope: !7011, file: !3, line: 1566, type: !247)
!7015 = !DILocation(line: 1566, column: 18, scope: !7011)
!7016 = !DILocation(line: 1572, column: 31, scope: !7011)
!7017 = !DILocation(line: 1572, column: 11, scope: !7011)
!7018 = !DILocation(line: 1572, column: 9, scope: !7011)
!7019 = !DILocation(line: 1573, column: 6, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 1573, column: 6)
!7021 = !DILocation(line: 1573, column: 13, scope: !7020)
!7022 = !DILocation(line: 1573, column: 17, scope: !7020)
!7023 = !DILocation(line: 1573, column: 25, scope: !7020)
!7024 = !DILocation(line: 1573, column: 35, scope: !7020)
!7025 = !DILocation(line: 1573, column: 38, scope: !7020)
!7026 = !DILocation(line: 1573, column: 46, scope: !7020)
!7027 = !DILocation(line: 1573, column: 6, scope: !7011)
!7028 = !DILocation(line: 1574, column: 3, scope: !7020)
!7029 = !DILocation(line: 1574, column: 8, scope: !7020)
!7030 = !DILocation(line: 1574, column: 18, scope: !7020)
!7031 = !DILocation(line: 1575, column: 1, scope: !7011)
!7032 = distinct !DISubprogram(name: "pci_intx_mask_broken", scope: !3, file: !3, line: 1742, type: !3512, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7033 = !DILocalVariable(name: "dev", arg: 1, scope: !7032, file: !3, line: 1742, type: !247)
!7034 = !DILocation(line: 1742, column: 49, scope: !7032)
!7035 = !DILocalVariable(name: "orig", scope: !7032, file: !3, line: 1744, type: !945)
!7036 = !DILocation(line: 1744, column: 6, scope: !7032)
!7037 = !DILocalVariable(name: "toggle", scope: !7032, file: !3, line: 1744, type: !945)
!7038 = !DILocation(line: 1744, column: 12, scope: !7032)
!7039 = !DILocalVariable(name: "new", scope: !7032, file: !3, line: 1744, type: !945)
!7040 = !DILocation(line: 1744, column: 20, scope: !7032)
!7041 = !DILocation(line: 1746, column: 23, scope: !7032)
!7042 = !DILocation(line: 1746, column: 2, scope: !7032)
!7043 = !DILocation(line: 1747, column: 11, scope: !7032)
!7044 = !DILocation(line: 1747, column: 16, scope: !7032)
!7045 = !DILocation(line: 1747, column: 9, scope: !7032)
!7046 = !DILocation(line: 1748, column: 24, scope: !7032)
!7047 = !DILocation(line: 1748, column: 42, scope: !7032)
!7048 = !DILocation(line: 1748, column: 2, scope: !7032)
!7049 = !DILocation(line: 1749, column: 23, scope: !7032)
!7050 = !DILocation(line: 1749, column: 2, scope: !7032)
!7051 = !DILocation(line: 1751, column: 24, scope: !7032)
!7052 = !DILocation(line: 1751, column: 42, scope: !7032)
!7053 = !DILocation(line: 1751, column: 2, scope: !7032)
!7054 = !DILocation(line: 1758, column: 6, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 1758, column: 6)
!7056 = !DILocation(line: 1758, column: 13, scope: !7055)
!7057 = !DILocation(line: 1758, column: 10, scope: !7055)
!7058 = !DILocation(line: 1758, column: 6, scope: !7032)
!7059 = !DILocation(line: 1759, column: 3, scope: !7055)
!7060 = !DILocation(line: 1760, column: 2, scope: !7032)
!7061 = !DILocation(line: 1761, column: 1, scope: !7032)
!7062 = distinct !DISubprogram(name: "pci_read_irq", scope: !3, file: !3, line: 1467, type: !3500, scopeLine: 1468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7063 = !DILocalVariable(name: "dev", arg: 1, scope: !7062, file: !3, line: 1467, type: !247)
!7064 = !DILocation(line: 1467, column: 42, scope: !7062)
!7065 = !DILocalVariable(name: "irq", scope: !7062, file: !3, line: 1469, type: !285)
!7066 = !DILocation(line: 1469, column: 16, scope: !7062)
!7067 = !DILocation(line: 1472, column: 6, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 1472, column: 6)
!7069 = !DILocation(line: 1472, column: 11, scope: !7068)
!7070 = !DILocation(line: 1472, column: 6, scope: !7062)
!7071 = !DILocation(line: 1473, column: 3, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 1472, column: 22)
!7073 = !DILocation(line: 1473, column: 8, scope: !7072)
!7074 = !DILocation(line: 1473, column: 12, scope: !7072)
!7075 = !DILocation(line: 1474, column: 3, scope: !7072)
!7076 = !DILocation(line: 1474, column: 8, scope: !7072)
!7077 = !DILocation(line: 1474, column: 12, scope: !7072)
!7078 = !DILocation(line: 1475, column: 3, scope: !7072)
!7079 = !DILocation(line: 1478, column: 23, scope: !7062)
!7080 = !DILocation(line: 1478, column: 2, scope: !7062)
!7081 = !DILocation(line: 1479, column: 13, scope: !7062)
!7082 = !DILocation(line: 1479, column: 2, scope: !7062)
!7083 = !DILocation(line: 1479, column: 7, scope: !7062)
!7084 = !DILocation(line: 1479, column: 11, scope: !7062)
!7085 = !DILocation(line: 1480, column: 6, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 1480, column: 6)
!7087 = !DILocation(line: 1480, column: 6, scope: !7062)
!7088 = !DILocation(line: 1481, column: 24, scope: !7086)
!7089 = !DILocation(line: 1481, column: 3, scope: !7086)
!7090 = !DILocation(line: 1482, column: 13, scope: !7062)
!7091 = !DILocation(line: 1482, column: 2, scope: !7062)
!7092 = !DILocation(line: 1482, column: 7, scope: !7062)
!7093 = !DILocation(line: 1482, column: 11, scope: !7062)
!7094 = !DILocation(line: 1483, column: 1, scope: !7062)
!7095 = distinct !DISubprogram(name: "pci_read_bases", scope: !3, file: !3, line: 321, type: !7096, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7096 = !DISubroutineType(types: !7097)
!7097 = !{null, !247, !7, !232}
!7098 = !DILocalVariable(name: "dev", arg: 1, scope: !7095, file: !3, line: 321, type: !247)
!7099 = !DILocation(line: 321, column: 44, scope: !7095)
!7100 = !DILocalVariable(name: "howmany", arg: 2, scope: !7095, file: !3, line: 321, type: !7)
!7101 = !DILocation(line: 321, column: 62, scope: !7095)
!7102 = !DILocalVariable(name: "rom", arg: 3, scope: !7095, file: !3, line: 321, type: !232)
!7103 = !DILocation(line: 321, column: 75, scope: !7095)
!7104 = !DILocalVariable(name: "pos", scope: !7095, file: !3, line: 323, type: !7)
!7105 = !DILocation(line: 323, column: 15, scope: !7095)
!7106 = !DILocalVariable(name: "reg", scope: !7095, file: !3, line: 323, type: !7)
!7107 = !DILocation(line: 323, column: 20, scope: !7095)
!7108 = !DILocation(line: 325, column: 6, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 325, column: 6)
!7110 = !DILocation(line: 325, column: 11, scope: !7109)
!7111 = !DILocation(line: 325, column: 6, scope: !7095)
!7112 = !DILocation(line: 326, column: 3, scope: !7109)
!7113 = !DILocation(line: 329, column: 6, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 329, column: 6)
!7115 = !DILocation(line: 329, column: 11, scope: !7114)
!7116 = !DILocation(line: 329, column: 6, scope: !7095)
!7117 = !DILocation(line: 330, column: 3, scope: !7114)
!7118 = !DILocation(line: 332, column: 11, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 332, column: 2)
!7120 = !DILocation(line: 332, column: 7, scope: !7119)
!7121 = !DILocation(line: 332, column: 16, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 332, column: 2)
!7123 = !DILocation(line: 332, column: 22, scope: !7122)
!7124 = !DILocation(line: 332, column: 20, scope: !7122)
!7125 = !DILocation(line: 332, column: 2, scope: !7119)
!7126 = !DILocalVariable(name: "res", scope: !7127, file: !3, line: 333, type: !4132)
!7127 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 332, column: 38)
!7128 = !DILocation(line: 333, column: 20, scope: !7127)
!7129 = !DILocation(line: 333, column: 27, scope: !7127)
!7130 = !DILocation(line: 333, column: 32, scope: !7127)
!7131 = !DILocation(line: 333, column: 41, scope: !7127)
!7132 = !DILocation(line: 334, column: 31, scope: !7127)
!7133 = !DILocation(line: 334, column: 35, scope: !7127)
!7134 = !DILocation(line: 334, column: 28, scope: !7127)
!7135 = !DILocation(line: 334, column: 7, scope: !7127)
!7136 = !DILocation(line: 335, column: 26, scope: !7127)
!7137 = !DILocation(line: 335, column: 48, scope: !7127)
!7138 = !DILocation(line: 335, column: 53, scope: !7127)
!7139 = !DILocation(line: 335, column: 10, scope: !7127)
!7140 = !DILocation(line: 335, column: 7, scope: !7127)
!7141 = !DILocation(line: 336, column: 2, scope: !7127)
!7142 = !DILocation(line: 332, column: 34, scope: !7122)
!7143 = !DILocation(line: 332, column: 2, scope: !7122)
!7144 = distinct !{!7144, !7125, !7145}
!7145 = !DILocation(line: 336, column: 2, scope: !7119)
!7146 = !DILocation(line: 338, column: 6, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 338, column: 6)
!7148 = !DILocation(line: 338, column: 6, scope: !7095)
!7149 = !DILocalVariable(name: "res", scope: !7150, file: !3, line: 339, type: !4132)
!7150 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 338, column: 11)
!7151 = !DILocation(line: 339, column: 20, scope: !7150)
!7152 = !DILocation(line: 339, column: 27, scope: !7150)
!7153 = !DILocation(line: 339, column: 32, scope: !7150)
!7154 = !DILocation(line: 340, column: 23, scope: !7150)
!7155 = !DILocation(line: 340, column: 3, scope: !7150)
!7156 = !DILocation(line: 340, column: 8, scope: !7150)
!7157 = !DILocation(line: 340, column: 21, scope: !7150)
!7158 = !DILocation(line: 341, column: 3, scope: !7150)
!7159 = !DILocation(line: 341, column: 8, scope: !7150)
!7160 = !DILocation(line: 341, column: 14, scope: !7150)
!7161 = !DILocation(line: 343, column: 19, scope: !7150)
!7162 = !DILocation(line: 343, column: 39, scope: !7150)
!7163 = !DILocation(line: 343, column: 44, scope: !7150)
!7164 = !DILocation(line: 343, column: 3, scope: !7150)
!7165 = !DILocation(line: 344, column: 2, scope: !7150)
!7166 = !DILocation(line: 345, column: 1, scope: !7095)
!7167 = distinct !DISubprogram(name: "pci_subsystem_ids", scope: !3, file: !3, line: 1692, type: !7168, scopeLine: 1693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7168 = !DISubroutineType(types: !7169)
!7169 = !{null, !247, !7170, !7170}
!7170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!7171 = !DILocalVariable(name: "dev", arg: 1, scope: !7167, file: !3, line: 1692, type: !247)
!7172 = !DILocation(line: 1692, column: 47, scope: !7167)
!7173 = !DILocalVariable(name: "vendor", arg: 2, scope: !7167, file: !3, line: 1692, type: !7170)
!7174 = !DILocation(line: 1692, column: 57, scope: !7167)
!7175 = !DILocalVariable(name: "device", arg: 3, scope: !7167, file: !3, line: 1692, type: !7170)
!7176 = !DILocation(line: 1692, column: 70, scope: !7167)
!7177 = !DILocation(line: 1695, column: 6, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 1695, column: 6)
!7179 = !DILocation(line: 1695, column: 11, scope: !7178)
!7180 = !DILocation(line: 1695, column: 6, scope: !7167)
!7181 = !DILocation(line: 1696, column: 13, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 1695, column: 22)
!7183 = !DILocation(line: 1696, column: 18, scope: !7182)
!7184 = !DILocation(line: 1696, column: 26, scope: !7182)
!7185 = !DILocation(line: 1696, column: 33, scope: !7182)
!7186 = !DILocation(line: 1696, column: 4, scope: !7182)
!7187 = !DILocation(line: 1696, column: 11, scope: !7182)
!7188 = !DILocation(line: 1697, column: 13, scope: !7182)
!7189 = !DILocation(line: 1697, column: 18, scope: !7182)
!7190 = !DILocation(line: 1697, column: 26, scope: !7182)
!7191 = !DILocation(line: 1697, column: 33, scope: !7182)
!7192 = !DILocation(line: 1697, column: 4, scope: !7182)
!7193 = !DILocation(line: 1697, column: 11, scope: !7182)
!7194 = !DILocation(line: 1698, column: 3, scope: !7182)
!7195 = !DILocation(line: 1701, column: 23, scope: !7167)
!7196 = !DILocation(line: 1701, column: 53, scope: !7167)
!7197 = !DILocation(line: 1701, column: 2, scope: !7167)
!7198 = !DILocation(line: 1702, column: 23, scope: !7167)
!7199 = !DILocation(line: 1702, column: 46, scope: !7167)
!7200 = !DILocation(line: 1702, column: 2, scope: !7167)
!7201 = !DILocation(line: 1703, column: 1, scope: !7167)
!7202 = distinct !DISubprogram(name: "pci_read_bridge_windows", scope: !3, file: !3, line: 347, type: !3500, scopeLine: 348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7203 = !DILocalVariable(name: "bridge", arg: 1, scope: !7202, file: !3, line: 347, type: !247)
!7204 = !DILocation(line: 347, column: 53, scope: !7202)
!7205 = !DILocalVariable(name: "io", scope: !7202, file: !3, line: 349, type: !945)
!7206 = !DILocation(line: 349, column: 6, scope: !7202)
!7207 = !DILocalVariable(name: "pmem", scope: !7202, file: !3, line: 350, type: !223)
!7208 = !DILocation(line: 350, column: 6, scope: !7202)
!7209 = !DILocalVariable(name: "tmp", scope: !7202, file: !3, line: 350, type: !223)
!7210 = !DILocation(line: 350, column: 12, scope: !7202)
!7211 = !DILocation(line: 352, column: 23, scope: !7202)
!7212 = !DILocation(line: 352, column: 2, scope: !7202)
!7213 = !DILocation(line: 353, column: 7, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 353, column: 6)
!7215 = !DILocation(line: 353, column: 6, scope: !7202)
!7216 = !DILocation(line: 354, column: 25, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 353, column: 11)
!7218 = !DILocation(line: 354, column: 3, scope: !7217)
!7219 = !DILocation(line: 355, column: 24, scope: !7217)
!7220 = !DILocation(line: 355, column: 3, scope: !7217)
!7221 = !DILocation(line: 356, column: 25, scope: !7217)
!7222 = !DILocation(line: 356, column: 3, scope: !7217)
!7223 = !DILocation(line: 357, column: 2, scope: !7217)
!7224 = !DILocation(line: 358, column: 6, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 358, column: 6)
!7226 = !DILocation(line: 358, column: 6, scope: !7202)
!7227 = !DILocation(line: 359, column: 3, scope: !7225)
!7228 = !DILocation(line: 359, column: 11, scope: !7225)
!7229 = !DILocation(line: 359, column: 21, scope: !7225)
!7230 = !DILocation(line: 366, column: 6, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 366, column: 6)
!7232 = !DILocation(line: 366, column: 14, scope: !7231)
!7233 = !DILocation(line: 366, column: 21, scope: !7231)
!7234 = !DILocation(line: 366, column: 42, scope: !7231)
!7235 = !DILocation(line: 366, column: 45, scope: !7231)
!7236 = !DILocation(line: 366, column: 53, scope: !7231)
!7237 = !DILocation(line: 366, column: 60, scope: !7231)
!7238 = !DILocation(line: 366, column: 6, scope: !7202)
!7239 = !DILocation(line: 367, column: 3, scope: !7231)
!7240 = !DILocation(line: 369, column: 24, scope: !7202)
!7241 = !DILocation(line: 369, column: 2, scope: !7202)
!7242 = !DILocation(line: 370, column: 7, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 370, column: 6)
!7244 = !DILocation(line: 370, column: 6, scope: !7202)
!7245 = !DILocation(line: 371, column: 26, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 370, column: 13)
!7247 = !DILocation(line: 371, column: 3, scope: !7246)
!7248 = !DILocation(line: 373, column: 25, scope: !7246)
!7249 = !DILocation(line: 373, column: 3, scope: !7246)
!7250 = !DILocation(line: 374, column: 26, scope: !7246)
!7251 = !DILocation(line: 374, column: 3, scope: !7246)
!7252 = !DILocation(line: 375, column: 2, scope: !7246)
!7253 = !DILocation(line: 376, column: 7, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 376, column: 6)
!7255 = !DILocation(line: 376, column: 6, scope: !7202)
!7256 = !DILocation(line: 377, column: 3, scope: !7254)
!7257 = !DILocation(line: 379, column: 2, scope: !7202)
!7258 = !DILocation(line: 379, column: 10, scope: !7202)
!7259 = !DILocation(line: 379, column: 22, scope: !7202)
!7260 = !DILocation(line: 381, column: 7, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 381, column: 6)
!7262 = !DILocation(line: 381, column: 12, scope: !7261)
!7263 = !DILocation(line: 381, column: 40, scope: !7261)
!7264 = !DILocation(line: 381, column: 6, scope: !7202)
!7265 = !DILocation(line: 388, column: 25, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 381, column: 67)
!7267 = !DILocation(line: 388, column: 3, scope: !7266)
!7268 = !DILocation(line: 389, column: 26, scope: !7266)
!7269 = !DILocation(line: 389, column: 3, scope: !7266)
!7270 = !DILocation(line: 391, column: 25, scope: !7266)
!7271 = !DILocation(line: 391, column: 3, scope: !7266)
!7272 = !DILocation(line: 392, column: 26, scope: !7266)
!7273 = !DILocation(line: 392, column: 57, scope: !7266)
!7274 = !DILocation(line: 392, column: 3, scope: !7266)
!7275 = !DILocation(line: 393, column: 7, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 393, column: 7)
!7277 = !DILocation(line: 393, column: 7, scope: !7266)
!7278 = !DILocation(line: 394, column: 4, scope: !7276)
!7279 = !DILocation(line: 394, column: 12, scope: !7276)
!7280 = !DILocation(line: 394, column: 27, scope: !7276)
!7281 = !DILocation(line: 395, column: 2, scope: !7266)
!7282 = !DILocation(line: 396, column: 1, scope: !7202)
!7283 = distinct !DISubprogram(name: "pci_configure_extended_tags", scope: !3, file: !3, line: 2023, type: !7284, scopeLine: 2024, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7284 = !DISubroutineType(types: !7285)
!7285 = !{!232, !247, !222}
!7286 = !DILocalVariable(name: "dev", arg: 1, scope: !7283, file: !3, line: 2023, type: !247)
!7287 = !DILocation(line: 2023, column: 49, scope: !7283)
!7288 = !DILocalVariable(name: "ign", arg: 2, scope: !7283, file: !3, line: 2023, type: !222)
!7289 = !DILocation(line: 2023, column: 60, scope: !7283)
!7290 = !DILocalVariable(name: "host", scope: !7283, file: !3, line: 2025, type: !4364)
!7291 = !DILocation(line: 2025, column: 26, scope: !7283)
!7292 = !DILocalVariable(name: "cap", scope: !7283, file: !3, line: 2026, type: !223)
!7293 = !DILocation(line: 2026, column: 6, scope: !7283)
!7294 = !DILocalVariable(name: "ctl", scope: !7283, file: !3, line: 2027, type: !945)
!7295 = !DILocation(line: 2027, column: 6, scope: !7283)
!7296 = !DILocalVariable(name: "ret", scope: !7283, file: !3, line: 2028, type: !232)
!7297 = !DILocation(line: 2028, column: 6, scope: !7283)
!7298 = !DILocation(line: 2030, column: 19, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2030, column: 6)
!7300 = !DILocation(line: 2030, column: 7, scope: !7299)
!7301 = !DILocation(line: 2030, column: 6, scope: !7283)
!7302 = !DILocation(line: 2031, column: 3, scope: !7299)
!7303 = !DILocation(line: 2033, column: 35, scope: !7283)
!7304 = !DILocation(line: 2033, column: 8, scope: !7283)
!7305 = !DILocation(line: 2033, column: 6, scope: !7283)
!7306 = !DILocation(line: 2034, column: 6, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2034, column: 6)
!7308 = !DILocation(line: 2034, column: 6, scope: !7283)
!7309 = !DILocation(line: 2035, column: 3, scope: !7307)
!7310 = !DILocation(line: 2037, column: 8, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2037, column: 6)
!7312 = !DILocation(line: 2037, column: 12, scope: !7311)
!7313 = !DILocation(line: 2037, column: 6, scope: !7283)
!7314 = !DILocation(line: 2038, column: 3, scope: !7311)
!7315 = !DILocation(line: 2040, column: 34, scope: !7283)
!7316 = !DILocation(line: 2040, column: 8, scope: !7283)
!7317 = !DILocation(line: 2040, column: 6, scope: !7283)
!7318 = !DILocation(line: 2041, column: 6, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2041, column: 6)
!7320 = !DILocation(line: 2041, column: 6, scope: !7283)
!7321 = !DILocation(line: 2042, column: 3, scope: !7319)
!7322 = !DILocation(line: 2044, column: 30, scope: !7283)
!7323 = !DILocation(line: 2044, column: 35, scope: !7283)
!7324 = !DILocation(line: 2044, column: 9, scope: !7283)
!7325 = !DILocation(line: 2044, column: 7, scope: !7283)
!7326 = !DILocation(line: 2045, column: 7, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2045, column: 6)
!7328 = !DILocation(line: 2045, column: 6, scope: !7283)
!7329 = !DILocation(line: 2046, column: 3, scope: !7327)
!7330 = !DILocation(line: 2052, column: 6, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2052, column: 6)
!7332 = !DILocation(line: 2052, column: 12, scope: !7331)
!7333 = !DILocation(line: 2052, column: 6, scope: !7283)
!7334 = !DILocation(line: 2053, column: 7, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 2053, column: 7)
!7336 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 2052, column: 25)
!7337 = !DILocation(line: 2053, column: 11, scope: !7335)
!7338 = !DILocation(line: 2053, column: 7, scope: !7336)
!7339 = !DILocation(line: 2054, column: 4, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 2053, column: 37)
!7341 = !DILocation(line: 2055, column: 31, scope: !7340)
!7342 = !DILocation(line: 2055, column: 4, scope: !7340)
!7343 = !DILocation(line: 2057, column: 3, scope: !7340)
!7344 = !DILocation(line: 2058, column: 3, scope: !7336)
!7345 = !DILocation(line: 2061, column: 8, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2061, column: 6)
!7347 = !DILocation(line: 2061, column: 12, scope: !7346)
!7348 = !DILocation(line: 2061, column: 6, scope: !7283)
!7349 = !DILocation(line: 2062, column: 3, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 2061, column: 39)
!7351 = !DILocation(line: 2063, column: 28, scope: !7350)
!7352 = !DILocation(line: 2063, column: 3, scope: !7350)
!7353 = !DILocation(line: 2065, column: 2, scope: !7350)
!7354 = !DILocation(line: 2066, column: 2, scope: !7283)
!7355 = !DILocation(line: 2067, column: 1, scope: !7283)
!7356 = distinct !DISubprogram(name: "pcie_capability_clear_word", scope: !115, file: !115, line: 1139, type: !7357, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7357 = !DISubroutineType(types: !7358)
!7358 = !{!232, !247, !232, !945}
!7359 = !DILocalVariable(name: "dev", arg: 1, scope: !7356, file: !115, line: 1139, type: !247)
!7360 = !DILocation(line: 1139, column: 62, scope: !7356)
!7361 = !DILocalVariable(name: "pos", arg: 2, scope: !7356, file: !115, line: 1139, type: !232)
!7362 = !DILocation(line: 1139, column: 71, scope: !7356)
!7363 = !DILocalVariable(name: "clear", arg: 3, scope: !7356, file: !115, line: 1140, type: !945)
!7364 = !DILocation(line: 1140, column: 15, scope: !7356)
!7365 = !DILocation(line: 1142, column: 44, scope: !7356)
!7366 = !DILocation(line: 1142, column: 49, scope: !7356)
!7367 = !DILocation(line: 1142, column: 54, scope: !7356)
!7368 = !DILocation(line: 1142, column: 9, scope: !7356)
!7369 = !DILocation(line: 1142, column: 2, scope: !7356)
!7370 = distinct !DISubprogram(name: "pcie_capability_set_word", scope: !115, file: !115, line: 1127, type: !7357, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7371 = !DILocalVariable(name: "dev", arg: 1, scope: !7370, file: !115, line: 1127, type: !247)
!7372 = !DILocation(line: 1127, column: 60, scope: !7370)
!7373 = !DILocalVariable(name: "pos", arg: 2, scope: !7370, file: !115, line: 1127, type: !232)
!7374 = !DILocation(line: 1127, column: 69, scope: !7370)
!7375 = !DILocalVariable(name: "set", arg: 3, scope: !7370, file: !115, line: 1128, type: !945)
!7376 = !DILocation(line: 1128, column: 13, scope: !7370)
!7377 = !DILocation(line: 1130, column: 44, scope: !7370)
!7378 = !DILocation(line: 1130, column: 49, scope: !7370)
!7379 = !DILocation(line: 1130, column: 57, scope: !7370)
!7380 = !DILocation(line: 1130, column: 9, scope: !7370)
!7381 = !DILocation(line: 1130, column: 2, scope: !7370)
!7382 = distinct !DISubprogram(name: "pcie_relaxed_ordering_enabled", scope: !3, file: !3, line: 2075, type: !6591, scopeLine: 2076, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7383 = !DILocalVariable(name: "dev", arg: 1, scope: !7382, file: !3, line: 2075, type: !247)
!7384 = !DILocation(line: 2075, column: 52, scope: !7382)
!7385 = !DILocalVariable(name: "v", scope: !7382, file: !3, line: 2077, type: !945)
!7386 = !DILocation(line: 2077, column: 6, scope: !7382)
!7387 = !DILocation(line: 2079, column: 28, scope: !7382)
!7388 = !DILocation(line: 2079, column: 2, scope: !7382)
!7389 = !DILocation(line: 2081, column: 12, scope: !7382)
!7390 = !DILocation(line: 2081, column: 14, scope: !7382)
!7391 = !DILocation(line: 2081, column: 10, scope: !7382)
!7392 = !DILocation(line: 2081, column: 9, scope: !7382)
!7393 = !DILocation(line: 2081, column: 2, scope: !7382)
!7394 = distinct !DISubprogram(name: "pci_alloc_dev", scope: !3, file: !3, line: 2246, type: !7395, scopeLine: 2247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7395 = !DISubroutineType(types: !7396)
!7396 = !{!247, !234}
!7397 = !DILocalVariable(name: "bus", arg: 1, scope: !7394, file: !3, line: 2246, type: !234)
!7398 = !DILocation(line: 2246, column: 47, scope: !7394)
!7399 = !DILocalVariable(name: "dev", scope: !7394, file: !3, line: 2248, type: !247)
!7400 = !DILocation(line: 2248, column: 18, scope: !7394)
!7401 = !DILocation(line: 2250, column: 8, scope: !7394)
!7402 = !DILocation(line: 2250, column: 6, scope: !7394)
!7403 = !DILocation(line: 2251, column: 7, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7394, file: !3, line: 2251, column: 6)
!7405 = !DILocation(line: 2251, column: 6, scope: !7394)
!7406 = !DILocation(line: 2252, column: 3, scope: !7404)
!7407 = !DILocation(line: 2254, column: 18, scope: !7394)
!7408 = !DILocation(line: 2254, column: 23, scope: !7394)
!7409 = !DILocation(line: 2254, column: 2, scope: !7394)
!7410 = !DILocation(line: 2255, column: 2, scope: !7394)
!7411 = !DILocation(line: 2255, column: 7, scope: !7394)
!7412 = !DILocation(line: 2255, column: 11, scope: !7394)
!7413 = !DILocation(line: 2255, column: 16, scope: !7394)
!7414 = !DILocation(line: 2256, column: 25, scope: !7394)
!7415 = !DILocation(line: 2256, column: 13, scope: !7394)
!7416 = !DILocation(line: 2256, column: 2, scope: !7394)
!7417 = !DILocation(line: 2256, column: 7, scope: !7394)
!7418 = !DILocation(line: 2256, column: 11, scope: !7394)
!7419 = !DILocation(line: 2258, column: 9, scope: !7394)
!7420 = !DILocation(line: 2258, column: 2, scope: !7394)
!7421 = !DILocation(line: 2259, column: 1, scope: !7394)
!7422 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !5910, file: !5910, line: 33, type: !7423, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7423 = !DISubroutineType(types: !7424)
!7424 = !{null, !241}
!7425 = !DILocalVariable(name: "list", arg: 1, scope: !7422, file: !5910, line: 33, type: !241)
!7426 = !DILocation(line: 33, column: 53, scope: !7422)
!7427 = !DILocation(line: 35, column: 2, scope: !7422)
!7428 = !DILocation(line: 35, column: 2, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7422, file: !5910, line: 35, column: 2)
!7430 = !DILocation(line: 35, column: 2, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7429, file: !5910, line: 35, column: 2)
!7432 = !DILocation(line: 35, column: 2, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7429, file: !5910, line: 35, column: 2)
!7434 = !DILocation(line: 36, column: 15, scope: !7422)
!7435 = !DILocation(line: 36, column: 2, scope: !7422)
!7436 = !DILocation(line: 36, column: 8, scope: !7422)
!7437 = !DILocation(line: 36, column: 13, scope: !7422)
!7438 = !DILocation(line: 37, column: 1, scope: !7422)
!7439 = distinct !DISubprogram(name: "pci_bus_generic_read_dev_vendor_id", scope: !3, file: !3, line: 2311, type: !7440, scopeLine: 2313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{!576, !234, !232, !1499, !232}
!7442 = !DILocalVariable(name: "bus", arg: 1, scope: !7439, file: !3, line: 2311, type: !234)
!7443 = !DILocation(line: 2311, column: 57, scope: !7439)
!7444 = !DILocalVariable(name: "devfn", arg: 2, scope: !7439, file: !3, line: 2311, type: !232)
!7445 = !DILocation(line: 2311, column: 66, scope: !7439)
!7446 = !DILocalVariable(name: "l", arg: 3, scope: !7439, file: !3, line: 2311, type: !1499)
!7447 = !DILocation(line: 2311, column: 78, scope: !7439)
!7448 = !DILocalVariable(name: "timeout", arg: 4, scope: !7439, file: !3, line: 2312, type: !232)
!7449 = !DILocation(line: 2312, column: 10, scope: !7439)
!7450 = !DILocation(line: 2314, column: 32, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 2314, column: 6)
!7452 = !DILocation(line: 2314, column: 37, scope: !7451)
!7453 = !DILocation(line: 2314, column: 59, scope: !7451)
!7454 = !DILocation(line: 2314, column: 6, scope: !7451)
!7455 = !DILocation(line: 2314, column: 6, scope: !7439)
!7456 = !DILocation(line: 2315, column: 3, scope: !7451)
!7457 = !DILocation(line: 2318, column: 7, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 2318, column: 6)
!7459 = !DILocation(line: 2318, column: 6, scope: !7458)
!7460 = !DILocation(line: 2318, column: 9, scope: !7458)
!7461 = !DILocation(line: 2318, column: 23, scope: !7458)
!7462 = !DILocation(line: 2318, column: 27, scope: !7458)
!7463 = !DILocation(line: 2318, column: 26, scope: !7458)
!7464 = !DILocation(line: 2318, column: 29, scope: !7458)
!7465 = !DILocation(line: 2318, column: 43, scope: !7458)
!7466 = !DILocation(line: 2319, column: 7, scope: !7458)
!7467 = !DILocation(line: 2319, column: 6, scope: !7458)
!7468 = !DILocation(line: 2319, column: 9, scope: !7458)
!7469 = !DILocation(line: 2319, column: 23, scope: !7458)
!7470 = !DILocation(line: 2319, column: 27, scope: !7458)
!7471 = !DILocation(line: 2319, column: 26, scope: !7458)
!7472 = !DILocation(line: 2319, column: 29, scope: !7458)
!7473 = !DILocation(line: 2318, column: 6, scope: !7439)
!7474 = !DILocation(line: 2320, column: 3, scope: !7458)
!7475 = !DILocation(line: 2322, column: 29, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 2322, column: 6)
!7477 = !DILocation(line: 2322, column: 28, scope: !7476)
!7478 = !DILocation(line: 2322, column: 6, scope: !7476)
!7479 = !DILocation(line: 2322, column: 6, scope: !7439)
!7480 = !DILocation(line: 2323, column: 27, scope: !7476)
!7481 = !DILocation(line: 2323, column: 32, scope: !7476)
!7482 = !DILocation(line: 2323, column: 39, scope: !7476)
!7483 = !DILocation(line: 2323, column: 42, scope: !7476)
!7484 = !DILocation(line: 2323, column: 10, scope: !7476)
!7485 = !DILocation(line: 2323, column: 3, scope: !7476)
!7486 = !DILocation(line: 2325, column: 2, scope: !7439)
!7487 = !DILocation(line: 2326, column: 1, scope: !7439)
!7488 = distinct !DISubprogram(name: "pci_bus_crs_vendor_id", scope: !3, file: !3, line: 2262, type: !7489, scopeLine: 2263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7489 = !DISubroutineType(types: !7490)
!7490 = !{!576, !223}
!7491 = !DILocalVariable(name: "l", arg: 1, scope: !7488, file: !3, line: 2262, type: !223)
!7492 = !DILocation(line: 2262, column: 39, scope: !7488)
!7493 = !DILocation(line: 2264, column: 10, scope: !7488)
!7494 = !DILocation(line: 2264, column: 12, scope: !7488)
!7495 = !DILocation(line: 2264, column: 22, scope: !7488)
!7496 = !DILocation(line: 2264, column: 2, scope: !7488)
!7497 = distinct !DISubprogram(name: "pci_bus_wait_crs", scope: !3, file: !3, line: 2267, type: !7440, scopeLine: 2269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7498 = !DILocalVariable(name: "bus", arg: 1, scope: !7497, file: !3, line: 2267, type: !234)
!7499 = !DILocation(line: 2267, column: 46, scope: !7497)
!7500 = !DILocalVariable(name: "devfn", arg: 2, scope: !7497, file: !3, line: 2267, type: !232)
!7501 = !DILocation(line: 2267, column: 55, scope: !7497)
!7502 = !DILocalVariable(name: "l", arg: 3, scope: !7497, file: !3, line: 2267, type: !1499)
!7503 = !DILocation(line: 2267, column: 67, scope: !7497)
!7504 = !DILocalVariable(name: "timeout", arg: 4, scope: !7497, file: !3, line: 2268, type: !232)
!7505 = !DILocation(line: 2268, column: 13, scope: !7497)
!7506 = !DILocalVariable(name: "delay", scope: !7497, file: !3, line: 2270, type: !232)
!7507 = !DILocation(line: 2270, column: 6, scope: !7497)
!7508 = !DILocation(line: 2272, column: 30, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 2272, column: 6)
!7510 = !DILocation(line: 2272, column: 29, scope: !7509)
!7511 = !DILocation(line: 2272, column: 7, scope: !7509)
!7512 = !DILocation(line: 2272, column: 6, scope: !7497)
!7513 = !DILocation(line: 2273, column: 3, scope: !7509)
!7514 = !DILocation(line: 2275, column: 7, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 2275, column: 6)
!7516 = !DILocation(line: 2275, column: 6, scope: !7497)
!7517 = !DILocation(line: 2276, column: 3, scope: !7515)
!7518 = !DILocation(line: 2283, column: 2, scope: !7497)
!7519 = !DILocation(line: 2283, column: 32, scope: !7497)
!7520 = !DILocation(line: 2283, column: 31, scope: !7497)
!7521 = !DILocation(line: 2283, column: 9, scope: !7497)
!7522 = !DILocation(line: 2284, column: 7, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 2284, column: 7)
!7524 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 2283, column: 36)
!7525 = !DILocation(line: 2284, column: 15, scope: !7523)
!7526 = !DILocation(line: 2284, column: 13, scope: !7523)
!7527 = !DILocation(line: 2284, column: 7, scope: !7524)
!7528 = !DILocation(line: 2285, column: 4, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 2284, column: 24)
!7530 = !DILocation(line: 2289, column: 4, scope: !7529)
!7531 = !DILocation(line: 2291, column: 7, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 2291, column: 7)
!7533 = !DILocation(line: 2291, column: 13, scope: !7532)
!7534 = !DILocation(line: 2291, column: 7, scope: !7524)
!7535 = !DILocation(line: 2292, column: 4, scope: !7532)
!7536 = !DILocation(line: 2296, column: 10, scope: !7524)
!7537 = !DILocation(line: 2296, column: 3, scope: !7524)
!7538 = !DILocation(line: 2297, column: 9, scope: !7524)
!7539 = !DILocation(line: 2299, column: 33, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 2299, column: 7)
!7541 = !DILocation(line: 2299, column: 38, scope: !7540)
!7542 = !DILocation(line: 2299, column: 60, scope: !7540)
!7543 = !DILocation(line: 2299, column: 7, scope: !7540)
!7544 = !DILocation(line: 2299, column: 7, scope: !7524)
!7545 = !DILocation(line: 2300, column: 4, scope: !7540)
!7546 = distinct !{!7546, !7518, !7547}
!7547 = !DILocation(line: 2301, column: 2, scope: !7497)
!7548 = !DILocation(line: 2303, column: 6, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 2303, column: 6)
!7550 = !DILocation(line: 2303, column: 12, scope: !7549)
!7551 = !DILocation(line: 2303, column: 6, scope: !7497)
!7552 = !DILocation(line: 2304, column: 3, scope: !7549)
!7553 = !DILocation(line: 2308, column: 2, scope: !7497)
!7554 = !DILocation(line: 2309, column: 1, scope: !7497)
!7555 = distinct !DISubprogram(name: "pci_bus_read_dev_vendor_id", scope: !3, file: !3, line: 2328, type: !7440, scopeLine: 2330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7556 = !DILocalVariable(name: "bus", arg: 1, scope: !7555, file: !3, line: 2328, type: !234)
!7557 = !DILocation(line: 2328, column: 49, scope: !7555)
!7558 = !DILocalVariable(name: "devfn", arg: 2, scope: !7555, file: !3, line: 2328, type: !232)
!7559 = !DILocation(line: 2328, column: 58, scope: !7555)
!7560 = !DILocalVariable(name: "l", arg: 3, scope: !7555, file: !3, line: 2328, type: !1499)
!7561 = !DILocation(line: 2328, column: 70, scope: !7555)
!7562 = !DILocalVariable(name: "timeout", arg: 4, scope: !7555, file: !3, line: 2329, type: !232)
!7563 = !DILocation(line: 2329, column: 9, scope: !7555)
!7564 = !DILocalVariable(name: "bridge", scope: !7555, file: !3, line: 2332, type: !247)
!7565 = !DILocation(line: 2332, column: 18, scope: !7555)
!7566 = !DILocation(line: 2332, column: 27, scope: !7555)
!7567 = !DILocation(line: 2332, column: 32, scope: !7555)
!7568 = !DILocation(line: 2338, column: 6, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 2338, column: 6)
!7570 = !DILocation(line: 2338, column: 13, scope: !7569)
!7571 = !DILocation(line: 2338, column: 16, scope: !7569)
!7572 = !DILocation(line: 2338, column: 24, scope: !7569)
!7573 = !DILocation(line: 2338, column: 31, scope: !7569)
!7574 = !DILocation(line: 2338, column: 52, scope: !7569)
!7575 = !DILocation(line: 2339, column: 6, scope: !7569)
!7576 = !DILocation(line: 2339, column: 14, scope: !7569)
!7577 = !DILocation(line: 2339, column: 21, scope: !7569)
!7578 = !DILocation(line: 2338, column: 6, scope: !7555)
!7579 = !DILocation(line: 2340, column: 28, scope: !7569)
!7580 = !DILocation(line: 2340, column: 33, scope: !7569)
!7581 = !DILocation(line: 2340, column: 40, scope: !7569)
!7582 = !DILocation(line: 2340, column: 43, scope: !7569)
!7583 = !DILocation(line: 2340, column: 10, scope: !7569)
!7584 = !DILocation(line: 2340, column: 3, scope: !7569)
!7585 = !DILocation(line: 2343, column: 44, scope: !7555)
!7586 = !DILocation(line: 2343, column: 49, scope: !7555)
!7587 = !DILocation(line: 2343, column: 56, scope: !7555)
!7588 = !DILocation(line: 2343, column: 59, scope: !7555)
!7589 = !DILocation(line: 2343, column: 9, scope: !7555)
!7590 = !DILocation(line: 2343, column: 2, scope: !7555)
!7591 = !DILocation(line: 2344, column: 1, scope: !7555)
!7592 = distinct !DISubprogram(name: "pcie_report_downtraining", scope: !3, file: !3, line: 2378, type: !3500, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7593 = !DILocalVariable(name: "dev", arg: 1, scope: !7592, file: !3, line: 2378, type: !247)
!7594 = !DILocation(line: 2378, column: 47, scope: !7592)
!7595 = !DILocation(line: 2380, column: 19, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 2380, column: 6)
!7597 = !DILocation(line: 2380, column: 7, scope: !7596)
!7598 = !DILocation(line: 2380, column: 6, scope: !7592)
!7599 = !DILocation(line: 2381, column: 3, scope: !7596)
!7600 = !DILocation(line: 2384, column: 21, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 2384, column: 6)
!7602 = !DILocation(line: 2384, column: 7, scope: !7601)
!7603 = !DILocation(line: 2384, column: 26, scope: !7601)
!7604 = !DILocation(line: 2384, column: 52, scope: !7601)
!7605 = !DILocation(line: 2385, column: 21, scope: !7601)
!7606 = !DILocation(line: 2385, column: 7, scope: !7601)
!7607 = !DILocation(line: 2385, column: 26, scope: !7601)
!7608 = !DILocation(line: 2385, column: 51, scope: !7601)
!7609 = !DILocation(line: 2386, column: 21, scope: !7601)
!7610 = !DILocation(line: 2386, column: 7, scope: !7601)
!7611 = !DILocation(line: 2386, column: 26, scope: !7601)
!7612 = !DILocation(line: 2384, column: 6, scope: !7592)
!7613 = !DILocation(line: 2387, column: 3, scope: !7601)
!7614 = !DILocation(line: 2390, column: 6, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 2390, column: 6)
!7616 = !DILocation(line: 2390, column: 27, scope: !7615)
!7617 = !DILocation(line: 2390, column: 32, scope: !7615)
!7618 = !DILocation(line: 2390, column: 35, scope: !7615)
!7619 = !DILocation(line: 2390, column: 40, scope: !7615)
!7620 = !DILocation(line: 2390, column: 6, scope: !7592)
!7621 = !DILocation(line: 2391, column: 3, scope: !7615)
!7622 = !DILocation(line: 2394, column: 27, scope: !7592)
!7623 = !DILocation(line: 2394, column: 2, scope: !7592)
!7624 = !DILocation(line: 2395, column: 1, scope: !7592)
!7625 = distinct !DISubprogram(name: "pci_device_add", scope: !3, file: !3, line: 2469, type: !7626, scopeLine: 2470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7626 = !DISubroutineType(types: !7627)
!7627 = !{null, !247, !234}
!7628 = !DILocalVariable(name: "dev", arg: 1, scope: !7625, file: !3, line: 2469, type: !247)
!7629 = !DILocation(line: 2469, column: 37, scope: !7625)
!7630 = !DILocalVariable(name: "bus", arg: 2, scope: !7625, file: !3, line: 2469, type: !234)
!7631 = !DILocation(line: 2469, column: 58, scope: !7625)
!7632 = !DILocalVariable(name: "ret", scope: !7625, file: !3, line: 2471, type: !232)
!7633 = !DILocation(line: 2471, column: 6, scope: !7625)
!7634 = !DILocation(line: 2473, column: 23, scope: !7625)
!7635 = !DILocation(line: 2473, column: 2, scope: !7625)
!7636 = !DILocation(line: 2475, column: 21, scope: !7625)
!7637 = !DILocation(line: 2475, column: 26, scope: !7625)
!7638 = !DILocation(line: 2475, column: 2, scope: !7625)
!7639 = !DILocation(line: 2476, column: 2, scope: !7625)
!7640 = !DILocation(line: 2476, column: 7, scope: !7625)
!7641 = !DILocation(line: 2476, column: 11, scope: !7625)
!7642 = !DILocation(line: 2476, column: 19, scope: !7625)
!7643 = !DILocation(line: 2478, column: 16, scope: !7625)
!7644 = !DILocation(line: 2478, column: 21, scope: !7625)
!7645 = !DILocation(line: 2478, column: 26, scope: !7625)
!7646 = !DILocation(line: 2478, column: 2, scope: !7625)
!7647 = !DILocation(line: 2479, column: 23, scope: !7625)
!7648 = !DILocation(line: 2479, column: 28, scope: !7625)
!7649 = !DILocation(line: 2479, column: 2, scope: !7625)
!7650 = !DILocation(line: 2479, column: 7, scope: !7625)
!7651 = !DILocation(line: 2479, column: 11, scope: !7625)
!7652 = !DILocation(line: 2479, column: 20, scope: !7625)
!7653 = !DILocation(line: 2480, column: 24, scope: !7625)
!7654 = !DILocation(line: 2480, column: 29, scope: !7625)
!7655 = !DILocation(line: 2480, column: 2, scope: !7625)
!7656 = !DILocation(line: 2480, column: 7, scope: !7625)
!7657 = !DILocation(line: 2480, column: 11, scope: !7625)
!7658 = !DILocation(line: 2480, column: 21, scope: !7625)
!7659 = !DILocation(line: 2481, column: 2, scope: !7625)
!7660 = !DILocation(line: 2481, column: 7, scope: !7625)
!7661 = !DILocation(line: 2481, column: 11, scope: !7625)
!7662 = !DILocation(line: 2481, column: 29, scope: !7625)
!7663 = !DILocation(line: 2483, column: 24, scope: !7625)
!7664 = !DILocation(line: 2483, column: 29, scope: !7625)
!7665 = !DILocation(line: 2483, column: 2, scope: !7625)
!7666 = !DILocation(line: 2484, column: 24, scope: !7625)
!7667 = !DILocation(line: 2484, column: 29, scope: !7625)
!7668 = !DILocation(line: 2484, column: 2, scope: !7625)
!7669 = !DILocation(line: 2487, column: 37, scope: !7625)
!7670 = !DILocation(line: 2487, column: 2, scope: !7625)
!7671 = !DILocation(line: 2489, column: 37, scope: !7625)
!7672 = !DILocation(line: 2489, column: 2, scope: !7625)
!7673 = !DILocation(line: 2491, column: 2, scope: !7625)
!7674 = !DILocation(line: 2491, column: 7, scope: !7625)
!7675 = !DILocation(line: 2491, column: 19, scope: !7625)
!7676 = !DILocation(line: 2493, column: 24, scope: !7625)
!7677 = !DILocation(line: 2493, column: 2, scope: !7625)
!7678 = !DILocation(line: 2499, column: 2, scope: !7625)
!7679 = !DILocation(line: 2500, column: 17, scope: !7625)
!7680 = !DILocation(line: 2500, column: 22, scope: !7625)
!7681 = !DILocation(line: 2500, column: 33, scope: !7625)
!7682 = !DILocation(line: 2500, column: 38, scope: !7625)
!7683 = !DILocation(line: 2500, column: 2, scope: !7625)
!7684 = !DILocation(line: 2501, column: 2, scope: !7625)
!7685 = !DILocation(line: 2503, column: 27, scope: !7625)
!7686 = !DILocation(line: 2503, column: 8, scope: !7625)
!7687 = !DILocation(line: 2503, column: 6, scope: !7625)
!7688 = !DILocalVariable(name: "__ret_warn_on", scope: !7689, file: !3, line: 2504, type: !232)
!7689 = distinct !DILexicalBlock(scope: !7625, file: !3, line: 2504, column: 2)
!7690 = !DILocation(line: 2504, column: 2, scope: !7689)
!7691 = !DILocation(line: 2504, column: 2, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 2504, column: 2)
!7693 = !DILocation(line: 2504, column: 2, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 2504, column: 2)
!7695 = !DILocation(line: 2504, column: 2, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2504, column: 2)
!7697 = !DILocation(line: 2504, column: 2, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2504, column: 2)
!7699 = !{i32 -2140894528, i32 -2140894499, i32 -2140894453, i32 -2140894395, i32 -2140894341, i32 -2140894287, i32 -2140894232, i32 -2140894201}
!7700 = !DILocation(line: 2504, column: 2, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2504, column: 2)
!7702 = !{i32 -2140893799, i32 -2140893792, i32 -2140893740, i32 -2140893709, i32 -2140893679}
!7703 = !DILocation(line: 2504, column: 2, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2504, column: 2)
!7705 = !DILocation(line: 2507, column: 21, scope: !7625)
!7706 = !DILocation(line: 2507, column: 2, scope: !7625)
!7707 = !DILocation(line: 2510, column: 2, scope: !7625)
!7708 = !DILocation(line: 2510, column: 7, scope: !7625)
!7709 = !DILocation(line: 2510, column: 20, scope: !7625)
!7710 = !DILocation(line: 2511, column: 20, scope: !7625)
!7711 = !DILocation(line: 2511, column: 25, scope: !7625)
!7712 = !DILocation(line: 2511, column: 8, scope: !7625)
!7713 = !DILocation(line: 2511, column: 6, scope: !7625)
!7714 = !DILocalVariable(name: "__ret_warn_on", scope: !7715, file: !3, line: 2512, type: !232)
!7715 = distinct !DILexicalBlock(scope: !7625, file: !3, line: 2512, column: 2)
!7716 = !DILocation(line: 2512, column: 2, scope: !7715)
!7717 = !DILocation(line: 2512, column: 2, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 2512, column: 2)
!7719 = !DILocation(line: 2512, column: 2, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 2512, column: 2)
!7721 = !DILocation(line: 2512, column: 2, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 2512, column: 2)
!7723 = !DILocation(line: 2512, column: 2, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 2512, column: 2)
!7725 = !{i32 -2140893100, i32 -2140893071, i32 -2140893025, i32 -2140892967, i32 -2140892913, i32 -2140892859, i32 -2140892804, i32 -2140892773}
!7726 = !DILocation(line: 2512, column: 2, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 2512, column: 2)
!7728 = !{i32 -2140892371, i32 -2140892364, i32 -2140892312, i32 -2140892281, i32 -2140892251}
!7729 = !DILocation(line: 2512, column: 2, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 2512, column: 2)
!7731 = !DILocation(line: 2513, column: 1, scope: !7625)
!7732 = distinct !DISubprogram(name: "pci_configure_device", scope: !3, file: !3, line: 2204, type: !3500, scopeLine: 2205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7733 = !DILocalVariable(name: "dev", arg: 1, scope: !7732, file: !3, line: 2204, type: !247)
!7734 = !DILocation(line: 2204, column: 50, scope: !7732)
!7735 = !DILocation(line: 2206, column: 20, scope: !7732)
!7736 = !DILocation(line: 2206, column: 2, scope: !7732)
!7737 = !DILocation(line: 2207, column: 30, scope: !7732)
!7738 = !DILocation(line: 2207, column: 2, scope: !7732)
!7739 = !DILocation(line: 2208, column: 33, scope: !7732)
!7740 = !DILocation(line: 2208, column: 2, scope: !7732)
!7741 = !DILocation(line: 2209, column: 20, scope: !7732)
!7742 = !DILocation(line: 2209, column: 2, scope: !7732)
!7743 = !DILocation(line: 2210, column: 29, scope: !7732)
!7744 = !DILocation(line: 2210, column: 2, scope: !7732)
!7745 = !DILocation(line: 2211, column: 21, scope: !7732)
!7746 = !DILocation(line: 2211, column: 2, scope: !7732)
!7747 = !DILocation(line: 2213, column: 29, scope: !7732)
!7748 = !DILocation(line: 2213, column: 2, scope: !7732)
!7749 = !DILocation(line: 2214, column: 1, scope: !7732)
!7750 = distinct !DISubprogram(name: "pci_release_dev", scope: !3, file: !3, line: 2232, type: !3578, scopeLine: 2233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7751 = !DILocalVariable(name: "dev", arg: 1, scope: !7750, file: !3, line: 2232, type: !3551)
!7752 = !DILocation(line: 2232, column: 44, scope: !7750)
!7753 = !DILocalVariable(name: "pci_dev", scope: !7750, file: !3, line: 2234, type: !247)
!7754 = !DILocation(line: 2234, column: 18, scope: !7750)
!7755 = !DILocalVariable(name: "__mptr", scope: !7756, file: !3, line: 2236, type: !222)
!7756 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 2236, column: 12)
!7757 = !DILocation(line: 2236, column: 12, scope: !7756)
!7758 = !DILocation(line: 2236, column: 12, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7756, file: !3, line: 2236, column: 12)
!7760 = !DILocation(line: 2236, column: 10, scope: !7750)
!7761 = !DILocation(line: 2237, column: 27, scope: !7750)
!7762 = !DILocation(line: 2237, column: 2, scope: !7750)
!7763 = !DILocation(line: 2238, column: 22, scope: !7750)
!7764 = !DILocation(line: 2238, column: 2, scope: !7750)
!7765 = !DILocation(line: 2239, column: 25, scope: !7750)
!7766 = !DILocation(line: 2239, column: 2, scope: !7750)
!7767 = !DILocation(line: 2240, column: 14, scope: !7750)
!7768 = !DILocation(line: 2240, column: 23, scope: !7750)
!7769 = !DILocation(line: 2240, column: 2, scope: !7750)
!7770 = !DILocation(line: 2241, column: 8, scope: !7750)
!7771 = !DILocation(line: 2241, column: 17, scope: !7750)
!7772 = !DILocation(line: 2241, column: 2, scope: !7750)
!7773 = !DILocation(line: 2242, column: 14, scope: !7750)
!7774 = !DILocation(line: 2242, column: 23, scope: !7750)
!7775 = !DILocation(line: 2242, column: 2, scope: !7750)
!7776 = !DILocation(line: 2243, column: 8, scope: !7750)
!7777 = !DILocation(line: 2243, column: 2, scope: !7750)
!7778 = !DILocation(line: 2244, column: 1, scope: !7750)
!7779 = distinct !DISubprogram(name: "set_dev_node", scope: !73, file: !73, line: 634, type: !7780, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7780 = !DISubroutineType(types: !7781)
!7781 = !{null, !3551, !232}
!7782 = !DILocalVariable(name: "dev", arg: 1, scope: !7779, file: !73, line: 634, type: !3551)
!7783 = !DILocation(line: 634, column: 48, scope: !7779)
!7784 = !DILocalVariable(name: "node", arg: 2, scope: !7779, file: !73, line: 634, type: !232)
!7785 = !DILocation(line: 634, column: 57, scope: !7779)
!7786 = !DILocation(line: 636, column: 1, scope: !7779)
!7787 = distinct !DISubprogram(name: "dma_set_max_seg_size", scope: !7788, file: !7788, line: 459, type: !7789, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7788 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!7789 = !DISubroutineType(types: !7790)
!7790 = !{!232, !3551, !7}
!7791 = !DILocalVariable(name: "dev", arg: 1, scope: !7787, file: !7788, line: 459, type: !3551)
!7792 = !DILocation(line: 459, column: 55, scope: !7787)
!7793 = !DILocalVariable(name: "size", arg: 2, scope: !7787, file: !7788, line: 459, type: !7)
!7794 = !DILocation(line: 459, column: 73, scope: !7787)
!7795 = !DILocation(line: 461, column: 6, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7787, file: !7788, line: 461, column: 6)
!7797 = !DILocation(line: 461, column: 11, scope: !7796)
!7798 = !DILocation(line: 461, column: 6, scope: !7787)
!7799 = !DILocation(line: 462, column: 38, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7796, file: !7788, line: 461, column: 22)
!7801 = !DILocation(line: 462, column: 3, scope: !7800)
!7802 = !DILocation(line: 462, column: 8, scope: !7800)
!7803 = !DILocation(line: 462, column: 19, scope: !7800)
!7804 = !DILocation(line: 462, column: 36, scope: !7800)
!7805 = !DILocation(line: 463, column: 3, scope: !7800)
!7806 = !DILocation(line: 465, column: 2, scope: !7787)
!7807 = !DILocation(line: 466, column: 1, scope: !7787)
!7808 = distinct !DISubprogram(name: "dma_set_seg_boundary", scope: !7788, file: !7788, line: 494, type: !7809, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7809 = !DISubroutineType(types: !7810)
!7810 = !{!232, !3551, !418}
!7811 = !DILocalVariable(name: "dev", arg: 1, scope: !7808, file: !7788, line: 494, type: !3551)
!7812 = !DILocation(line: 494, column: 55, scope: !7808)
!7813 = !DILocalVariable(name: "mask", arg: 2, scope: !7808, file: !7788, line: 494, type: !418)
!7814 = !DILocation(line: 494, column: 74, scope: !7808)
!7815 = !DILocation(line: 496, column: 6, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7808, file: !7788, line: 496, column: 6)
!7817 = !DILocation(line: 496, column: 11, scope: !7816)
!7818 = !DILocation(line: 496, column: 6, scope: !7808)
!7819 = !DILocation(line: 497, column: 43, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7816, file: !7788, line: 496, column: 22)
!7821 = !DILocation(line: 497, column: 3, scope: !7820)
!7822 = !DILocation(line: 497, column: 8, scope: !7820)
!7823 = !DILocation(line: 497, column: 19, scope: !7820)
!7824 = !DILocation(line: 497, column: 41, scope: !7820)
!7825 = !DILocation(line: 498, column: 3, scope: !7820)
!7826 = !DILocation(line: 500, column: 2, scope: !7808)
!7827 = !DILocation(line: 501, column: 1, scope: !7808)
!7828 = distinct !DISubprogram(name: "pci_init_capabilities", scope: !3, file: !3, line: 2397, type: !3500, scopeLine: 2398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7829 = !DILocalVariable(name: "dev", arg: 1, scope: !7828, file: !3, line: 2397, type: !247)
!7830 = !DILocation(line: 2397, column: 51, scope: !7828)
!7831 = !DILocation(line: 2399, column: 14, scope: !7828)
!7832 = !DILocation(line: 2399, column: 2, scope: !7828)
!7833 = !DILocation(line: 2402, column: 24, scope: !7828)
!7834 = !DILocation(line: 2402, column: 2, scope: !7828)
!7835 = !DILocation(line: 2405, column: 32, scope: !7828)
!7836 = !DILocation(line: 2405, column: 2, scope: !7828)
!7837 = !DILocation(line: 2407, column: 14, scope: !7828)
!7838 = !DILocation(line: 2407, column: 2, scope: !7828)
!7839 = !DILocation(line: 2408, column: 15, scope: !7828)
!7840 = !DILocation(line: 2408, column: 2, scope: !7828)
!7841 = !DILocation(line: 2409, column: 20, scope: !7828)
!7842 = !DILocation(line: 2409, column: 2, scope: !7828)
!7843 = !DILocation(line: 2410, column: 15, scope: !7828)
!7844 = !DILocation(line: 2410, column: 2, scope: !7828)
!7845 = !DILocation(line: 2411, column: 15, scope: !7828)
!7846 = !DILocation(line: 2411, column: 2, scope: !7828)
!7847 = !DILocation(line: 2412, column: 15, scope: !7828)
!7848 = !DILocation(line: 2412, column: 2, scope: !7828)
!7849 = !DILocation(line: 2413, column: 17, scope: !7828)
!7850 = !DILocation(line: 2413, column: 2, scope: !7828)
!7851 = !DILocation(line: 2414, column: 15, scope: !7828)
!7852 = !DILocation(line: 2414, column: 2, scope: !7828)
!7853 = !DILocation(line: 2415, column: 15, scope: !7828)
!7854 = !DILocation(line: 2415, column: 2, scope: !7828)
!7855 = !DILocation(line: 2416, column: 15, scope: !7828)
!7856 = !DILocation(line: 2416, column: 2, scope: !7828)
!7857 = !DILocation(line: 2417, column: 15, scope: !7828)
!7858 = !DILocation(line: 2417, column: 2, scope: !7828)
!7859 = !DILocation(line: 2419, column: 27, scope: !7828)
!7860 = !DILocation(line: 2419, column: 2, scope: !7828)
!7861 = !DILocation(line: 2421, column: 31, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 2421, column: 6)
!7863 = !DILocation(line: 2421, column: 6, scope: !7862)
!7864 = !DILocation(line: 2421, column: 36, scope: !7862)
!7865 = !DILocation(line: 2421, column: 6, scope: !7828)
!7866 = !DILocation(line: 2422, column: 3, scope: !7862)
!7867 = !DILocation(line: 2422, column: 8, scope: !7862)
!7868 = !DILocation(line: 2422, column: 17, scope: !7862)
!7869 = !DILocation(line: 2423, column: 1, scope: !7828)
!7870 = distinct !DISubprogram(name: "pci_set_msi_domain", scope: !3, file: !3, line: 2453, type: !3500, scopeLine: 2454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7871 = !DILocalVariable(name: "dev", arg: 1, scope: !7870, file: !3, line: 2453, type: !247)
!7872 = !DILocation(line: 2453, column: 48, scope: !7870)
!7873 = !DILocalVariable(name: "d", scope: !7870, file: !3, line: 2455, type: !3745)
!7874 = !DILocation(line: 2455, column: 21, scope: !7870)
!7875 = !DILocation(line: 2462, column: 25, scope: !7870)
!7876 = !DILocation(line: 2462, column: 6, scope: !7870)
!7877 = !DILocation(line: 2462, column: 4, scope: !7870)
!7878 = !DILocation(line: 2463, column: 7, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7870, file: !3, line: 2463, column: 6)
!7880 = !DILocation(line: 2463, column: 6, scope: !7870)
!7881 = !DILocation(line: 2464, column: 27, scope: !7879)
!7882 = !DILocation(line: 2464, column: 32, scope: !7879)
!7883 = !DILocation(line: 2464, column: 37, scope: !7879)
!7884 = !DILocation(line: 2464, column: 7, scope: !7879)
!7885 = !DILocation(line: 2464, column: 5, scope: !7879)
!7886 = !DILocation(line: 2464, column: 3, scope: !7879)
!7887 = !DILocation(line: 2466, column: 22, scope: !7870)
!7888 = !DILocation(line: 2466, column: 27, scope: !7870)
!7889 = !DILocation(line: 2466, column: 32, scope: !7870)
!7890 = !DILocation(line: 2466, column: 2, scope: !7870)
!7891 = !DILocation(line: 2467, column: 1, scope: !7870)
!7892 = distinct !DISubprogram(name: "pci_scan_single_device", scope: !3, file: !3, line: 2515, type: !7893, scopeLine: 2516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7893 = !DISubroutineType(types: !7894)
!7894 = !{!247, !234, !232}
!7895 = !DILocalVariable(name: "bus", arg: 1, scope: !7892, file: !3, line: 2515, type: !234)
!7896 = !DILocation(line: 2515, column: 56, scope: !7892)
!7897 = !DILocalVariable(name: "devfn", arg: 2, scope: !7892, file: !3, line: 2515, type: !232)
!7898 = !DILocation(line: 2515, column: 65, scope: !7892)
!7899 = !DILocalVariable(name: "dev", scope: !7892, file: !3, line: 2517, type: !247)
!7900 = !DILocation(line: 2517, column: 18, scope: !7892)
!7901 = !DILocation(line: 2519, column: 21, scope: !7892)
!7902 = !DILocation(line: 2519, column: 26, scope: !7892)
!7903 = !DILocation(line: 2519, column: 8, scope: !7892)
!7904 = !DILocation(line: 2519, column: 6, scope: !7892)
!7905 = !DILocation(line: 2520, column: 6, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 2520, column: 6)
!7907 = !DILocation(line: 2520, column: 6, scope: !7892)
!7908 = !DILocation(line: 2521, column: 15, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 2520, column: 11)
!7910 = !DILocation(line: 2521, column: 3, scope: !7909)
!7911 = !DILocation(line: 2522, column: 10, scope: !7909)
!7912 = !DILocation(line: 2522, column: 3, scope: !7909)
!7913 = !DILocation(line: 2525, column: 24, scope: !7892)
!7914 = !DILocation(line: 2525, column: 29, scope: !7892)
!7915 = !DILocation(line: 2525, column: 8, scope: !7892)
!7916 = !DILocation(line: 2525, column: 6, scope: !7892)
!7917 = !DILocation(line: 2526, column: 7, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 2526, column: 6)
!7919 = !DILocation(line: 2526, column: 6, scope: !7892)
!7920 = !DILocation(line: 2527, column: 3, scope: !7918)
!7921 = !DILocation(line: 2529, column: 17, scope: !7892)
!7922 = !DILocation(line: 2529, column: 22, scope: !7892)
!7923 = !DILocation(line: 2529, column: 2, scope: !7892)
!7924 = !DILocation(line: 2531, column: 9, scope: !7892)
!7925 = !DILocation(line: 2531, column: 2, scope: !7892)
!7926 = !DILocation(line: 2532, column: 1, scope: !7892)
!7927 = distinct !DISubprogram(name: "pci_scan_device", scope: !3, file: !3, line: 2351, type: !7893, scopeLine: 2352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7928 = !DILocalVariable(name: "bus", arg: 1, scope: !7927, file: !3, line: 2351, type: !234)
!7929 = !DILocation(line: 2351, column: 56, scope: !7927)
!7930 = !DILocalVariable(name: "devfn", arg: 2, scope: !7927, file: !3, line: 2351, type: !232)
!7931 = !DILocation(line: 2351, column: 65, scope: !7927)
!7932 = !DILocalVariable(name: "dev", scope: !7927, file: !3, line: 2353, type: !247)
!7933 = !DILocation(line: 2353, column: 18, scope: !7927)
!7934 = !DILocalVariable(name: "l", scope: !7927, file: !3, line: 2354, type: !223)
!7935 = !DILocation(line: 2354, column: 6, scope: !7927)
!7936 = !DILocation(line: 2356, column: 34, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 2356, column: 6)
!7938 = !DILocation(line: 2356, column: 39, scope: !7937)
!7939 = !DILocation(line: 2356, column: 7, scope: !7937)
!7940 = !DILocation(line: 2356, column: 6, scope: !7927)
!7941 = !DILocation(line: 2357, column: 3, scope: !7937)
!7942 = !DILocation(line: 2359, column: 22, scope: !7927)
!7943 = !DILocation(line: 2359, column: 8, scope: !7927)
!7944 = !DILocation(line: 2359, column: 6, scope: !7927)
!7945 = !DILocation(line: 2360, column: 7, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 2360, column: 6)
!7947 = !DILocation(line: 2360, column: 6, scope: !7927)
!7948 = !DILocation(line: 2361, column: 3, scope: !7946)
!7949 = !DILocation(line: 2363, column: 15, scope: !7927)
!7950 = !DILocation(line: 2363, column: 2, scope: !7927)
!7951 = !DILocation(line: 2363, column: 7, scope: !7927)
!7952 = !DILocation(line: 2363, column: 13, scope: !7927)
!7953 = !DILocation(line: 2364, column: 16, scope: !7927)
!7954 = !DILocation(line: 2364, column: 18, scope: !7927)
!7955 = !DILocation(line: 2364, column: 2, scope: !7927)
!7956 = !DILocation(line: 2364, column: 7, scope: !7927)
!7957 = !DILocation(line: 2364, column: 14, scope: !7927)
!7958 = !DILocation(line: 2365, column: 17, scope: !7927)
!7959 = !DILocation(line: 2365, column: 19, scope: !7927)
!7960 = !DILocation(line: 2365, column: 26, scope: !7927)
!7961 = !DILocation(line: 2365, column: 16, scope: !7927)
!7962 = !DILocation(line: 2365, column: 2, scope: !7927)
!7963 = !DILocation(line: 2365, column: 7, scope: !7927)
!7964 = !DILocation(line: 2365, column: 14, scope: !7927)
!7965 = !DILocation(line: 2367, column: 18, scope: !7927)
!7966 = !DILocation(line: 2367, column: 2, scope: !7927)
!7967 = !DILocation(line: 2369, column: 23, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 2369, column: 6)
!7969 = !DILocation(line: 2369, column: 6, scope: !7968)
!7970 = !DILocation(line: 2369, column: 6, scope: !7927)
!7971 = !DILocation(line: 2370, column: 15, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 2369, column: 29)
!7973 = !DILocation(line: 2370, column: 20, scope: !7972)
!7974 = !DILocation(line: 2370, column: 3, scope: !7972)
!7975 = !DILocation(line: 2371, column: 9, scope: !7972)
!7976 = !DILocation(line: 2371, column: 3, scope: !7972)
!7977 = !DILocation(line: 2372, column: 3, scope: !7972)
!7978 = !DILocation(line: 2375, column: 9, scope: !7927)
!7979 = !DILocation(line: 2375, column: 2, scope: !7927)
!7980 = !DILocation(line: 2376, column: 1, scope: !7927)
!7981 = distinct !DISubprogram(name: "pci_scan_slot", scope: !3, file: !3, line: 2596, type: !7982, scopeLine: 2597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!7982 = !DISubroutineType(types: !7983)
!7983 = !{!232, !234, !232}
!7984 = !DILocalVariable(name: "bus", arg: 1, scope: !7981, file: !3, line: 2596, type: !234)
!7985 = !DILocation(line: 2596, column: 35, scope: !7981)
!7986 = !DILocalVariable(name: "devfn", arg: 2, scope: !7981, file: !3, line: 2596, type: !232)
!7987 = !DILocation(line: 2596, column: 44, scope: !7981)
!7988 = !DILocalVariable(name: "fn", scope: !7981, file: !3, line: 2598, type: !7)
!7989 = !DILocation(line: 2598, column: 11, scope: !7981)
!7990 = !DILocalVariable(name: "nr", scope: !7981, file: !3, line: 2598, type: !7)
!7991 = !DILocation(line: 2598, column: 15, scope: !7981)
!7992 = !DILocalVariable(name: "dev", scope: !7981, file: !3, line: 2599, type: !247)
!7993 = !DILocation(line: 2599, column: 18, scope: !7981)
!7994 = !DILocation(line: 2601, column: 21, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 2601, column: 6)
!7996 = !DILocation(line: 2601, column: 6, scope: !7995)
!7997 = !DILocation(line: 2601, column: 26, scope: !7995)
!7998 = !DILocation(line: 2601, column: 30, scope: !7995)
!7999 = !DILocation(line: 2601, column: 36, scope: !7995)
!8000 = !DILocation(line: 2601, column: 6, scope: !7981)
!8001 = !DILocation(line: 2602, column: 3, scope: !7995)
!8002 = !DILocation(line: 2604, column: 31, scope: !7981)
!8003 = !DILocation(line: 2604, column: 36, scope: !7981)
!8004 = !DILocation(line: 2604, column: 8, scope: !7981)
!8005 = !DILocation(line: 2604, column: 6, scope: !7981)
!8006 = !DILocation(line: 2605, column: 7, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 2605, column: 6)
!8008 = !DILocation(line: 2605, column: 6, scope: !7981)
!8009 = !DILocation(line: 2606, column: 3, scope: !8007)
!8010 = !DILocation(line: 2607, column: 24, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 2607, column: 6)
!8012 = !DILocation(line: 2607, column: 7, scope: !8011)
!8013 = !DILocation(line: 2607, column: 6, scope: !7981)
!8014 = !DILocation(line: 2608, column: 5, scope: !8011)
!8015 = !DILocation(line: 2608, column: 3, scope: !8011)
!8016 = !DILocation(line: 2610, column: 20, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 2610, column: 2)
!8018 = !DILocation(line: 2610, column: 25, scope: !8017)
!8019 = !DILocation(line: 2610, column: 12, scope: !8017)
!8020 = !DILocation(line: 2610, column: 10, scope: !8017)
!8021 = !DILocation(line: 2610, column: 7, scope: !8017)
!8022 = !DILocation(line: 2610, column: 34, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 2610, column: 2)
!8024 = !DILocation(line: 2610, column: 37, scope: !8023)
!8025 = !DILocation(line: 2610, column: 2, scope: !8017)
!8026 = !DILocation(line: 2611, column: 32, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 2610, column: 70)
!8028 = !DILocation(line: 2611, column: 37, scope: !8027)
!8029 = !DILocation(line: 2611, column: 45, scope: !8027)
!8030 = !DILocation(line: 2611, column: 43, scope: !8027)
!8031 = !DILocation(line: 2611, column: 9, scope: !8027)
!8032 = !DILocation(line: 2611, column: 7, scope: !8027)
!8033 = !DILocation(line: 2612, column: 7, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 2612, column: 7)
!8035 = !DILocation(line: 2612, column: 7, scope: !8027)
!8036 = !DILocation(line: 2613, column: 26, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 2613, column: 8)
!8038 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 2612, column: 12)
!8039 = !DILocation(line: 2613, column: 9, scope: !8037)
!8040 = !DILocation(line: 2613, column: 8, scope: !8038)
!8041 = !DILocation(line: 2614, column: 7, scope: !8037)
!8042 = !DILocation(line: 2614, column: 5, scope: !8037)
!8043 = !DILocation(line: 2615, column: 4, scope: !8038)
!8044 = !DILocation(line: 2615, column: 9, scope: !8038)
!8045 = !DILocation(line: 2615, column: 23, scope: !8038)
!8046 = !DILocation(line: 2616, column: 3, scope: !8038)
!8047 = !DILocation(line: 2617, column: 2, scope: !8027)
!8048 = !DILocation(line: 2610, column: 55, scope: !8023)
!8049 = !DILocation(line: 2610, column: 60, scope: !8023)
!8050 = !DILocation(line: 2610, column: 65, scope: !8023)
!8051 = !DILocation(line: 2610, column: 47, scope: !8023)
!8052 = !DILocation(line: 2610, column: 45, scope: !8023)
!8053 = !DILocation(line: 2610, column: 2, scope: !8023)
!8054 = distinct !{!8054, !8025, !8055}
!8055 = !DILocation(line: 2617, column: 2, scope: !8017)
!8056 = !DILocation(line: 2620, column: 6, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 2620, column: 6)
!8058 = !DILocation(line: 2620, column: 11, scope: !8057)
!8059 = !DILocation(line: 2620, column: 16, scope: !8057)
!8060 = !DILocation(line: 2620, column: 19, scope: !8057)
!8061 = !DILocation(line: 2620, column: 6, scope: !7981)
!8062 = !DILocation(line: 2621, column: 29, scope: !8057)
!8063 = !DILocation(line: 2621, column: 34, scope: !8057)
!8064 = !DILocation(line: 2621, column: 3, scope: !8057)
!8065 = !DILocation(line: 2623, column: 9, scope: !7981)
!8066 = !DILocation(line: 2623, column: 2, scope: !7981)
!8067 = !DILocation(line: 2624, column: 1, scope: !7981)
!8068 = distinct !DISubprogram(name: "only_one_child", scope: !3, file: !3, line: 2563, type: !4237, scopeLine: 2564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8069 = !DILocalVariable(name: "bus", arg: 1, scope: !8068, file: !3, line: 2563, type: !234)
!8070 = !DILocation(line: 2563, column: 43, scope: !8068)
!8071 = !DILocalVariable(name: "bridge", scope: !8068, file: !3, line: 2565, type: !247)
!8072 = !DILocation(line: 2565, column: 18, scope: !8068)
!8073 = !DILocation(line: 2565, column: 27, scope: !8068)
!8074 = !DILocation(line: 2565, column: 32, scope: !8068)
!8075 = !DILocation(line: 2571, column: 6, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2571, column: 6)
!8077 = !DILocation(line: 2571, column: 6, scope: !8068)
!8078 = !DILocation(line: 2572, column: 3, scope: !8076)
!8079 = !DILocation(line: 2579, column: 6, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2579, column: 6)
!8081 = !DILocation(line: 2579, column: 13, scope: !8080)
!8082 = !DILocation(line: 2579, column: 28, scope: !8080)
!8083 = !DILocation(line: 2579, column: 16, scope: !8080)
!8084 = !DILocation(line: 2579, column: 36, scope: !8080)
!8085 = !DILocation(line: 2579, column: 60, scope: !8080)
!8086 = !DILocation(line: 2579, column: 39, scope: !8080)
!8087 = !DILocation(line: 2579, column: 6, scope: !8068)
!8088 = !DILocation(line: 2580, column: 3, scope: !8080)
!8089 = !DILocation(line: 2582, column: 2, scope: !8068)
!8090 = !DILocation(line: 2583, column: 1, scope: !8068)
!8091 = distinct !DISubprogram(name: "pci_dev_is_added", scope: !108, file: !108, line: 418, type: !6475, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8092 = !DILocalVariable(name: "dev", arg: 1, scope: !8091, file: !108, line: 418, type: !4383)
!8093 = !DILocation(line: 418, column: 59, scope: !8091)
!8094 = !DILocation(line: 420, column: 34, scope: !8091)
!8095 = !DILocation(line: 420, column: 39, scope: !8091)
!8096 = !DILocation(line: 420, column: 9, scope: !8091)
!8097 = !DILocation(line: 420, column: 2, scope: !8091)
!8098 = distinct !DISubprogram(name: "next_fn", scope: !3, file: !3, line: 2535, type: !8099, scopeLine: 2536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8099 = !DISubroutineType(types: !8100)
!8100 = !{!7, !234, !247, !7}
!8101 = !DILocalVariable(name: "bus", arg: 1, scope: !8098, file: !3, line: 2535, type: !234)
!8102 = !DILocation(line: 2535, column: 41, scope: !8098)
!8103 = !DILocalVariable(name: "dev", arg: 2, scope: !8098, file: !3, line: 2535, type: !247)
!8104 = !DILocation(line: 2535, column: 62, scope: !8098)
!8105 = !DILocalVariable(name: "fn", arg: 3, scope: !8098, file: !3, line: 2535, type: !7)
!8106 = !DILocation(line: 2535, column: 76, scope: !8098)
!8107 = !DILocalVariable(name: "pos", scope: !8098, file: !3, line: 2537, type: !232)
!8108 = !DILocation(line: 2537, column: 6, scope: !8098)
!8109 = !DILocalVariable(name: "cap", scope: !8098, file: !3, line: 2538, type: !945)
!8110 = !DILocation(line: 2538, column: 6, scope: !8098)
!8111 = !DILocalVariable(name: "next_fn", scope: !8098, file: !3, line: 2539, type: !7)
!8112 = !DILocation(line: 2539, column: 11, scope: !8098)
!8113 = !DILocation(line: 2541, column: 22, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 2541, column: 6)
!8115 = !DILocation(line: 2541, column: 6, scope: !8114)
!8116 = !DILocation(line: 2541, column: 6, scope: !8098)
!8117 = !DILocation(line: 2542, column: 8, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 2542, column: 7)
!8119 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 2541, column: 28)
!8120 = !DILocation(line: 2542, column: 7, scope: !8119)
!8121 = !DILocation(line: 2543, column: 4, scope: !8118)
!8122 = !DILocation(line: 2544, column: 33, scope: !8119)
!8123 = !DILocation(line: 2544, column: 9, scope: !8119)
!8124 = !DILocation(line: 2544, column: 7, scope: !8119)
!8125 = !DILocation(line: 2545, column: 8, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 2545, column: 7)
!8127 = !DILocation(line: 2545, column: 7, scope: !8119)
!8128 = !DILocation(line: 2546, column: 4, scope: !8126)
!8129 = !DILocation(line: 2548, column: 24, scope: !8119)
!8130 = !DILocation(line: 2548, column: 29, scope: !8119)
!8131 = !DILocation(line: 2548, column: 33, scope: !8119)
!8132 = !DILocation(line: 2548, column: 3, scope: !8119)
!8133 = !DILocation(line: 2549, column: 13, scope: !8119)
!8134 = !DILocation(line: 2549, column: 11, scope: !8119)
!8135 = !DILocation(line: 2550, column: 7, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 2550, column: 7)
!8137 = !DILocation(line: 2550, column: 18, scope: !8136)
!8138 = !DILocation(line: 2550, column: 15, scope: !8136)
!8139 = !DILocation(line: 2550, column: 7, scope: !8119)
!8140 = !DILocation(line: 2551, column: 4, scope: !8136)
!8141 = !DILocation(line: 2553, column: 10, scope: !8119)
!8142 = !DILocation(line: 2553, column: 3, scope: !8119)
!8143 = !DILocation(line: 2557, column: 7, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 2557, column: 6)
!8145 = !DILocation(line: 2557, column: 11, scope: !8144)
!8146 = !DILocation(line: 2557, column: 14, scope: !8144)
!8147 = !DILocation(line: 2557, column: 19, scope: !8144)
!8148 = !DILocation(line: 2557, column: 6, scope: !8098)
!8149 = !DILocation(line: 2558, column: 11, scope: !8144)
!8150 = !DILocation(line: 2558, column: 14, scope: !8144)
!8151 = !DILocation(line: 2558, column: 19, scope: !8144)
!8152 = !DILocation(line: 2558, column: 3, scope: !8144)
!8153 = !DILocation(line: 2560, column: 2, scope: !8098)
!8154 = !DILocation(line: 2561, column: 1, scope: !8098)
!8155 = distinct !DISubprogram(name: "pcie_bus_configure_settings", scope: !3, file: !3, line: 2757, type: !4241, scopeLine: 2758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8156 = !DILocalVariable(name: "bus", arg: 1, scope: !8155, file: !3, line: 2757, type: !234)
!8157 = !DILocation(line: 2757, column: 50, scope: !8155)
!8158 = !DILocalVariable(name: "smpss", scope: !8155, file: !3, line: 2759, type: !283)
!8159 = !DILocation(line: 2759, column: 5, scope: !8155)
!8160 = !DILocation(line: 2761, column: 7, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8155, file: !3, line: 2761, column: 6)
!8162 = !DILocation(line: 2761, column: 12, scope: !8161)
!8163 = !DILocation(line: 2761, column: 6, scope: !8155)
!8164 = !DILocation(line: 2762, column: 3, scope: !8161)
!8165 = !DILocation(line: 2764, column: 19, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8155, file: !3, line: 2764, column: 6)
!8167 = !DILocation(line: 2764, column: 24, scope: !8166)
!8168 = !DILocation(line: 2764, column: 7, scope: !8166)
!8169 = !DILocation(line: 2764, column: 6, scope: !8155)
!8170 = !DILocation(line: 2765, column: 3, scope: !8166)
!8171 = !DILocation(line: 2772, column: 6, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8155, file: !3, line: 2772, column: 6)
!8173 = !DILocation(line: 2772, column: 22, scope: !8172)
!8174 = !DILocation(line: 2772, column: 6, scope: !8155)
!8175 = !DILocation(line: 2773, column: 9, scope: !8172)
!8176 = !DILocation(line: 2773, column: 3, scope: !8172)
!8177 = !DILocation(line: 2775, column: 6, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8155, file: !3, line: 2775, column: 6)
!8179 = !DILocation(line: 2775, column: 22, scope: !8178)
!8180 = !DILocation(line: 2775, column: 6, scope: !8155)
!8181 = !DILocation(line: 2776, column: 11, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 2775, column: 40)
!8183 = !DILocation(line: 2776, column: 16, scope: !8182)
!8184 = !DILocation(line: 2776, column: 22, scope: !8182)
!8185 = !DILocation(line: 2776, column: 9, scope: !8182)
!8186 = !DILocation(line: 2778, column: 19, scope: !8182)
!8187 = !DILocation(line: 2778, column: 24, scope: !8182)
!8188 = !DILocation(line: 2778, column: 3, scope: !8182)
!8189 = !DILocation(line: 2779, column: 16, scope: !8182)
!8190 = !DILocation(line: 2779, column: 3, scope: !8182)
!8191 = !DILocation(line: 2780, column: 2, scope: !8182)
!8192 = !DILocation(line: 2782, column: 25, scope: !8155)
!8193 = !DILocation(line: 2782, column: 30, scope: !8155)
!8194 = !DILocation(line: 2782, column: 2, scope: !8155)
!8195 = !DILocation(line: 2783, column: 15, scope: !8155)
!8196 = !DILocation(line: 2783, column: 2, scope: !8155)
!8197 = !DILocation(line: 2784, column: 1, scope: !8155)
!8198 = distinct !DISubprogram(name: "pcie_find_smpss", scope: !3, file: !3, line: 2627, type: !7284, scopeLine: 2628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8199 = !DILocalVariable(name: "dev", arg: 1, scope: !8198, file: !3, line: 2627, type: !247)
!8200 = !DILocation(line: 2627, column: 44, scope: !8198)
!8201 = !DILocalVariable(name: "data", arg: 2, scope: !8198, file: !3, line: 2627, type: !222)
!8202 = !DILocation(line: 2627, column: 55, scope: !8198)
!8203 = !DILocalVariable(name: "smpss", scope: !8198, file: !3, line: 2629, type: !294)
!8204 = !DILocation(line: 2629, column: 6, scope: !8198)
!8205 = !DILocation(line: 2629, column: 14, scope: !8198)
!8206 = !DILocation(line: 2631, column: 19, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 2631, column: 6)
!8208 = !DILocation(line: 2631, column: 7, scope: !8207)
!8209 = !DILocation(line: 2631, column: 6, scope: !8198)
!8210 = !DILocation(line: 2632, column: 3, scope: !8207)
!8211 = !DILocation(line: 2649, column: 6, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 2649, column: 6)
!8213 = !DILocation(line: 2649, column: 11, scope: !8212)
!8214 = !DILocation(line: 2649, column: 29, scope: !8212)
!8215 = !DILocation(line: 2650, column: 20, scope: !8212)
!8216 = !DILocation(line: 2650, column: 6, scope: !8212)
!8217 = !DILocation(line: 2650, column: 25, scope: !8212)
!8218 = !DILocation(line: 2649, column: 6, scope: !8198)
!8219 = !DILocation(line: 2651, column: 4, scope: !8212)
!8220 = !DILocation(line: 2651, column: 10, scope: !8212)
!8221 = !DILocation(line: 2651, column: 3, scope: !8212)
!8222 = !DILocation(line: 2653, column: 7, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 2653, column: 6)
!8224 = !DILocation(line: 2653, column: 6, scope: !8223)
!8225 = !DILocation(line: 2653, column: 15, scope: !8223)
!8226 = !DILocation(line: 2653, column: 20, scope: !8223)
!8227 = !DILocation(line: 2653, column: 13, scope: !8223)
!8228 = !DILocation(line: 2653, column: 6, scope: !8198)
!8229 = !DILocation(line: 2654, column: 12, scope: !8223)
!8230 = !DILocation(line: 2654, column: 17, scope: !8223)
!8231 = !DILocation(line: 2654, column: 4, scope: !8223)
!8232 = !DILocation(line: 2654, column: 10, scope: !8223)
!8233 = !DILocation(line: 2654, column: 3, scope: !8223)
!8234 = !DILocation(line: 2656, column: 2, scope: !8198)
!8235 = !DILocation(line: 2657, column: 1, scope: !8198)
!8236 = distinct !DISubprogram(name: "pcie_bus_configure_set", scope: !3, file: !3, line: 2728, type: !7284, scopeLine: 2729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8237 = !DILocalVariable(name: "dev", arg: 1, scope: !8236, file: !3, line: 2728, type: !247)
!8238 = !DILocation(line: 2728, column: 51, scope: !8236)
!8239 = !DILocalVariable(name: "data", arg: 2, scope: !8236, file: !3, line: 2728, type: !222)
!8240 = !DILocation(line: 2728, column: 62, scope: !8236)
!8241 = !DILocalVariable(name: "mps", scope: !8236, file: !3, line: 2730, type: !232)
!8242 = !DILocation(line: 2730, column: 6, scope: !8236)
!8243 = !DILocalVariable(name: "orig_mps", scope: !8236, file: !3, line: 2730, type: !232)
!8244 = !DILocation(line: 2730, column: 11, scope: !8236)
!8245 = !DILocation(line: 2732, column: 19, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 2732, column: 6)
!8247 = !DILocation(line: 2732, column: 7, scope: !8246)
!8248 = !DILocation(line: 2732, column: 6, scope: !8236)
!8249 = !DILocation(line: 2733, column: 3, scope: !8246)
!8250 = !DILocation(line: 2735, column: 6, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 2735, column: 6)
!8252 = !DILocation(line: 2735, column: 22, scope: !8251)
!8253 = !DILocation(line: 2735, column: 43, scope: !8251)
!8254 = !DILocation(line: 2736, column: 6, scope: !8251)
!8255 = !DILocation(line: 2736, column: 22, scope: !8251)
!8256 = !DILocation(line: 2735, column: 6, scope: !8236)
!8257 = !DILocation(line: 2737, column: 3, scope: !8251)
!8258 = !DILocation(line: 2739, column: 22, scope: !8236)
!8259 = !DILocation(line: 2739, column: 15, scope: !8236)
!8260 = !DILocation(line: 2739, column: 12, scope: !8236)
!8261 = !DILocation(line: 2739, column: 6, scope: !8236)
!8262 = !DILocation(line: 2740, column: 26, scope: !8236)
!8263 = !DILocation(line: 2740, column: 13, scope: !8236)
!8264 = !DILocation(line: 2740, column: 11, scope: !8236)
!8265 = !DILocation(line: 2742, column: 17, scope: !8236)
!8266 = !DILocation(line: 2742, column: 22, scope: !8236)
!8267 = !DILocation(line: 2742, column: 2, scope: !8236)
!8268 = !DILocation(line: 2743, column: 18, scope: !8236)
!8269 = !DILocation(line: 2743, column: 2, scope: !8236)
!8270 = !DILocation(line: 2745, column: 2, scope: !8236)
!8271 = !DILocation(line: 2749, column: 2, scope: !8236)
!8272 = !DILocation(line: 2750, column: 1, scope: !8236)
!8273 = distinct !DISubprogram(name: "pcibios_fixup_bus", scope: !3, file: !3, line: 2791, type: !4241, scopeLine: 2792, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8274 = !DILocalVariable(name: "bus", arg: 1, scope: !8273, file: !3, line: 2791, type: !234)
!8275 = !DILocation(line: 2791, column: 47, scope: !8273)
!8276 = !DILocation(line: 2794, column: 1, scope: !8273)
!8277 = distinct !DISubprogram(name: "pci_scan_child_bus", scope: !3, file: !3, line: 2949, type: !8278, scopeLine: 2950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8278 = !DISubroutineType(types: !8279)
!8279 = !{!7, !234}
!8280 = !DILocalVariable(name: "bus", arg: 1, scope: !8277, file: !3, line: 2949, type: !234)
!8281 = !DILocation(line: 2949, column: 49, scope: !8277)
!8282 = !DILocation(line: 2951, column: 35, scope: !8277)
!8283 = !DILocation(line: 2951, column: 9, scope: !8277)
!8284 = !DILocation(line: 2951, column: 2, scope: !8277)
!8285 = distinct !DISubprogram(name: "pci_scan_child_bus_extend", scope: !3, file: !3, line: 2808, type: !8286, scopeLine: 2810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8286 = !DISubroutineType(types: !8287)
!8287 = !{!7, !234, !7}
!8288 = !DILocalVariable(name: "bus", arg: 1, scope: !8285, file: !3, line: 2808, type: !234)
!8289 = !DILocation(line: 2808, column: 63, scope: !8285)
!8290 = !DILocalVariable(name: "available_buses", arg: 2, scope: !8285, file: !3, line: 2809, type: !7)
!8291 = !DILocation(line: 2809, column: 25, scope: !8285)
!8292 = !DILocalVariable(name: "used_buses", scope: !8285, file: !3, line: 2811, type: !7)
!8293 = !DILocation(line: 2811, column: 15, scope: !8285)
!8294 = !DILocalVariable(name: "normal_bridges", scope: !8285, file: !3, line: 2811, type: !7)
!8295 = !DILocation(line: 2811, column: 27, scope: !8285)
!8296 = !DILocalVariable(name: "hotplug_bridges", scope: !8285, file: !3, line: 2811, type: !7)
!8297 = !DILocation(line: 2811, column: 47, scope: !8285)
!8298 = !DILocalVariable(name: "start", scope: !8285, file: !3, line: 2812, type: !7)
!8299 = !DILocation(line: 2812, column: 15, scope: !8285)
!8300 = !DILocation(line: 2812, column: 23, scope: !8285)
!8301 = !DILocation(line: 2812, column: 28, scope: !8285)
!8302 = !DILocation(line: 2812, column: 37, scope: !8285)
!8303 = !DILocalVariable(name: "devfn", scope: !8285, file: !3, line: 2813, type: !7)
!8304 = !DILocation(line: 2813, column: 15, scope: !8285)
!8305 = !DILocalVariable(name: "fn", scope: !8285, file: !3, line: 2813, type: !7)
!8306 = !DILocation(line: 2813, column: 22, scope: !8285)
!8307 = !DILocalVariable(name: "cmax", scope: !8285, file: !3, line: 2813, type: !7)
!8308 = !DILocation(line: 2813, column: 26, scope: !8285)
!8309 = !DILocalVariable(name: "max", scope: !8285, file: !3, line: 2813, type: !7)
!8310 = !DILocation(line: 2813, column: 32, scope: !8285)
!8311 = !DILocation(line: 2813, column: 38, scope: !8285)
!8312 = !DILocalVariable(name: "dev", scope: !8285, file: !3, line: 2814, type: !247)
!8313 = !DILocation(line: 2814, column: 18, scope: !8285)
!8314 = !DILocalVariable(name: "nr_devs", scope: !8285, file: !3, line: 2815, type: !232)
!8315 = !DILocation(line: 2815, column: 6, scope: !8285)
!8316 = !DILocation(line: 2820, column: 13, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2820, column: 2)
!8318 = !DILocation(line: 2820, column: 7, scope: !8317)
!8319 = !DILocation(line: 2820, column: 18, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8317, file: !3, line: 2820, column: 2)
!8321 = !DILocation(line: 2820, column: 24, scope: !8320)
!8322 = !DILocation(line: 2820, column: 2, scope: !8317)
!8323 = !DILocation(line: 2821, column: 27, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8320, file: !3, line: 2820, column: 43)
!8325 = !DILocation(line: 2821, column: 32, scope: !8324)
!8326 = !DILocation(line: 2821, column: 13, scope: !8324)
!8327 = !DILocation(line: 2821, column: 11, scope: !8324)
!8328 = !DILocation(line: 2828, column: 7, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 2828, column: 7)
!8330 = !DILocation(line: 2828, column: 28, scope: !8329)
!8331 = !DILocation(line: 2828, column: 31, scope: !8329)
!8332 = !DILocation(line: 2828, column: 39, scope: !8329)
!8333 = !DILocation(line: 2828, column: 7, scope: !8324)
!8334 = !DILocation(line: 2829, column: 12, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 2829, column: 4)
!8336 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 2828, column: 45)
!8337 = !DILocation(line: 2829, column: 9, scope: !8335)
!8338 = !DILocation(line: 2829, column: 17, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 2829, column: 4)
!8340 = !DILocation(line: 2829, column: 20, scope: !8339)
!8341 = !DILocation(line: 2829, column: 4, scope: !8335)
!8342 = !DILocation(line: 2830, column: 34, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8339, file: !3, line: 2829, column: 31)
!8344 = !DILocation(line: 2830, column: 39, scope: !8343)
!8345 = !DILocation(line: 2830, column: 47, scope: !8343)
!8346 = !DILocation(line: 2830, column: 45, scope: !8343)
!8347 = !DILocation(line: 2830, column: 11, scope: !8343)
!8348 = !DILocation(line: 2830, column: 9, scope: !8343)
!8349 = !DILocation(line: 2831, column: 9, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 2831, column: 9)
!8351 = !DILocation(line: 2831, column: 9, scope: !8343)
!8352 = !DILocation(line: 2832, column: 6, scope: !8350)
!8353 = !DILocation(line: 2832, column: 11, scope: !8350)
!8354 = !DILocation(line: 2832, column: 25, scope: !8350)
!8355 = !DILocation(line: 2833, column: 4, scope: !8343)
!8356 = !DILocation(line: 2829, column: 27, scope: !8339)
!8357 = !DILocation(line: 2829, column: 4, scope: !8339)
!8358 = distinct !{!8358, !8341, !8359}
!8359 = !DILocation(line: 2833, column: 4, scope: !8335)
!8360 = !DILocation(line: 2834, column: 3, scope: !8336)
!8361 = !DILocation(line: 2835, column: 2, scope: !8324)
!8362 = !DILocation(line: 2820, column: 37, scope: !8320)
!8363 = !DILocation(line: 2820, column: 2, scope: !8320)
!8364 = distinct !{!8364, !8322, !8365}
!8365 = !DILocation(line: 2835, column: 2, scope: !8317)
!8366 = !DILocation(line: 2838, column: 33, scope: !8285)
!8367 = !DILocation(line: 2838, column: 15, scope: !8285)
!8368 = !DILocation(line: 2838, column: 13, scope: !8285)
!8369 = !DILocation(line: 2839, column: 9, scope: !8285)
!8370 = !DILocation(line: 2839, column: 6, scope: !8285)
!8371 = !DILocation(line: 2845, column: 7, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2845, column: 6)
!8373 = !DILocation(line: 2845, column: 12, scope: !8372)
!8374 = !DILocation(line: 2845, column: 6, scope: !8285)
!8375 = !DILocation(line: 2847, column: 21, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 2845, column: 22)
!8377 = !DILocation(line: 2847, column: 3, scope: !8376)
!8378 = !DILocation(line: 2848, column: 3, scope: !8376)
!8379 = !DILocation(line: 2848, column: 8, scope: !8376)
!8380 = !DILocation(line: 2848, column: 17, scope: !8376)
!8381 = !DILocation(line: 2849, column: 2, scope: !8376)
!8382 = !DILocalVariable(name: "__mptr", scope: !8383, file: !3, line: 2856, type: !222)
!8383 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 2856, column: 2)
!8384 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2856, column: 2)
!8385 = !DILocation(line: 2856, column: 2, scope: !8383)
!8386 = !DILocation(line: 2856, column: 2, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 2856, column: 2)
!8388 = !DILocation(line: 2856, column: 2, scope: !8384)
!8389 = !DILocation(line: 2856, column: 2, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 2856, column: 2)
!8391 = !DILocation(line: 2856, column: 2, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 2856, column: 2)
!8393 = !DILocation(line: 2856, column: 2, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 2856, column: 2)
!8395 = !DILocation(line: 2857, column: 7, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 2857, column: 7)
!8397 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 2856, column: 32)
!8398 = !DILocation(line: 2857, column: 12, scope: !8396)
!8399 = !DILocation(line: 2857, column: 7, scope: !8397)
!8400 = !DILocation(line: 2858, column: 19, scope: !8396)
!8401 = !DILocation(line: 2858, column: 4, scope: !8396)
!8402 = !DILocation(line: 2860, column: 18, scope: !8396)
!8403 = !DILocalVariable(name: "__mptr", scope: !8404, file: !3, line: 2856, type: !222)
!8404 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 2856, column: 2)
!8405 = !DILocation(line: 2856, column: 2, scope: !8404)
!8406 = !DILocation(line: 2856, column: 2, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 2856, column: 2)
!8408 = distinct !{!8408, !8388, !8409}
!8409 = !DILocation(line: 2861, column: 2, scope: !8384)
!8410 = !DILocalVariable(name: "__mptr", scope: !8411, file: !3, line: 2868, type: !222)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 2868, column: 2)
!8412 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2868, column: 2)
!8413 = !DILocation(line: 2868, column: 2, scope: !8411)
!8414 = !DILocation(line: 2868, column: 2, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2868, column: 2)
!8416 = !DILocation(line: 2868, column: 2, scope: !8412)
!8417 = !DILocation(line: 2868, column: 2, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 2868, column: 2)
!8419 = !DILocation(line: 2868, column: 2, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 2868, column: 2)
!8421 = !DILocation(line: 2868, column: 2, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 2868, column: 2)
!8423 = !DILocation(line: 2869, column: 10, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 2868, column: 32)
!8425 = !DILocation(line: 2869, column: 8, scope: !8424)
!8426 = !DILocation(line: 2870, column: 32, scope: !8424)
!8427 = !DILocation(line: 2870, column: 37, scope: !8424)
!8428 = !DILocation(line: 2870, column: 42, scope: !8424)
!8429 = !DILocation(line: 2870, column: 9, scope: !8424)
!8430 = !DILocation(line: 2870, column: 7, scope: !8424)
!8431 = !DILocation(line: 2876, column: 13, scope: !8424)
!8432 = !DILocation(line: 2877, column: 7, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 2877, column: 7)
!8434 = !DILocation(line: 2877, column: 14, scope: !8433)
!8435 = !DILocation(line: 2877, column: 12, scope: !8433)
!8436 = !DILocation(line: 2877, column: 18, scope: !8433)
!8437 = !DILocation(line: 2877, column: 7, scope: !8424)
!8438 = !DILocation(line: 2878, column: 18, scope: !8433)
!8439 = !DILocation(line: 2878, column: 25, scope: !8433)
!8440 = !DILocation(line: 2878, column: 23, scope: !8433)
!8441 = !DILocation(line: 2878, column: 29, scope: !8433)
!8442 = !DILocation(line: 2878, column: 15, scope: !8433)
!8443 = !DILocation(line: 2878, column: 4, scope: !8433)
!8444 = !DILocalVariable(name: "__mptr", scope: !8445, file: !3, line: 2868, type: !222)
!8445 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 2868, column: 2)
!8446 = !DILocation(line: 2868, column: 2, scope: !8445)
!8447 = !DILocation(line: 2868, column: 2, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 2868, column: 2)
!8449 = distinct !{!8449, !8416, !8450}
!8450 = !DILocation(line: 2879, column: 2, scope: !8412)
!8451 = !DILocalVariable(name: "__mptr", scope: !8452, file: !3, line: 2882, type: !222)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 2882, column: 2)
!8453 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2882, column: 2)
!8454 = !DILocation(line: 2882, column: 2, scope: !8452)
!8455 = !DILocation(line: 2882, column: 2, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 2882, column: 2)
!8457 = !DILocation(line: 2882, column: 2, scope: !8453)
!8458 = !DILocation(line: 2882, column: 2, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 2882, column: 2)
!8460 = !DILocation(line: 2882, column: 2, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 2882, column: 2)
!8462 = !DILocation(line: 2882, column: 2, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 2882, column: 2)
!8464 = !DILocalVariable(name: "buses", scope: !8465, file: !3, line: 2883, type: !7)
!8465 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 2882, column: 32)
!8466 = !DILocation(line: 2883, column: 16, scope: !8465)
!8467 = !DILocation(line: 2885, column: 8, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 2885, column: 7)
!8469 = !DILocation(line: 2885, column: 24, scope: !8468)
!8470 = !DILocation(line: 2885, column: 27, scope: !8468)
!8471 = !DILocation(line: 2885, column: 42, scope: !8468)
!8472 = !DILocation(line: 2885, column: 7, scope: !8465)
!8473 = !DILocation(line: 2893, column: 12, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8468, file: !3, line: 2885, column: 48)
!8475 = !DILocation(line: 2893, column: 10, scope: !8474)
!8476 = !DILocation(line: 2894, column: 3, scope: !8474)
!8477 = !DILocation(line: 2894, column: 14, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8468, file: !3, line: 2894, column: 14)
!8479 = !DILocation(line: 2894, column: 19, scope: !8478)
!8480 = !DILocation(line: 2894, column: 14, scope: !8468)
!8481 = !DILocation(line: 2900, column: 12, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 2894, column: 38)
!8483 = !DILocation(line: 2900, column: 30, scope: !8482)
!8484 = !DILocation(line: 2900, column: 28, scope: !8482)
!8485 = !DILocation(line: 2900, column: 10, scope: !8482)
!8486 = !DILocalVariable(name: "__UNIQUE_ID___x263", scope: !8487, file: !3, line: 2901, type: !7)
!8487 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 2901, column: 12)
!8488 = !DILocation(line: 2901, column: 12, scope: !8487)
!8489 = !DILocalVariable(name: "__UNIQUE_ID___y264", scope: !8487, file: !3, line: 2901, type: !7)
!8490 = !DILocation(line: 2901, column: 10, scope: !8482)
!8491 = !DILocation(line: 2902, column: 3, scope: !8482)
!8492 = !DILocation(line: 2904, column: 10, scope: !8465)
!8493 = !DILocation(line: 2904, column: 8, scope: !8465)
!8494 = !DILocation(line: 2905, column: 32, scope: !8465)
!8495 = !DILocation(line: 2905, column: 37, scope: !8465)
!8496 = !DILocation(line: 2905, column: 42, scope: !8465)
!8497 = !DILocation(line: 2905, column: 48, scope: !8465)
!8498 = !DILocation(line: 2905, column: 9, scope: !8465)
!8499 = !DILocation(line: 2905, column: 7, scope: !8465)
!8500 = !DILocation(line: 2907, column: 7, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 2907, column: 7)
!8502 = !DILocation(line: 2907, column: 13, scope: !8501)
!8503 = !DILocation(line: 2907, column: 11, scope: !8501)
!8504 = !DILocation(line: 2907, column: 18, scope: !8501)
!8505 = !DILocation(line: 2907, column: 7, scope: !8465)
!8506 = !DILocation(line: 2908, column: 18, scope: !8501)
!8507 = !DILocation(line: 2908, column: 24, scope: !8501)
!8508 = !DILocation(line: 2908, column: 22, scope: !8501)
!8509 = !DILocation(line: 2908, column: 29, scope: !8501)
!8510 = !DILocation(line: 2908, column: 15, scope: !8501)
!8511 = !DILocation(line: 2908, column: 4, scope: !8501)
!8512 = !DILocalVariable(name: "__mptr", scope: !8513, file: !3, line: 2882, type: !222)
!8513 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 2882, column: 2)
!8514 = !DILocation(line: 2882, column: 2, scope: !8513)
!8515 = !DILocation(line: 2882, column: 2, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8513, file: !3, line: 2882, column: 2)
!8517 = distinct !{!8517, !8457, !8518}
!8518 = !DILocation(line: 2909, column: 2, scope: !8453)
!8519 = !DILocation(line: 2916, column: 6, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2916, column: 6)
!8521 = !DILocation(line: 2916, column: 11, scope: !8520)
!8522 = !DILocation(line: 2916, column: 16, scope: !8520)
!8523 = !DILocation(line: 2916, column: 19, scope: !8520)
!8524 = !DILocation(line: 2916, column: 24, scope: !8520)
!8525 = !DILocation(line: 2916, column: 30, scope: !8520)
!8526 = !DILocation(line: 2916, column: 6, scope: !8285)
!8527 = !DILocalVariable(name: "__UNIQUE_ID___x265", scope: !8528, file: !3, line: 2917, type: !7)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 2917, column: 16)
!8529 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 2916, column: 49)
!8530 = !DILocation(line: 2917, column: 16, scope: !8528)
!8531 = !DILocalVariable(name: "__UNIQUE_ID___y266", scope: !8528, file: !3, line: 2917, type: !7)
!8532 = !DILocation(line: 2917, column: 14, scope: !8529)
!8533 = !DILocation(line: 2919, column: 7, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 2919, column: 7)
!8535 = !DILocation(line: 2919, column: 13, scope: !8534)
!8536 = !DILocation(line: 2919, column: 11, scope: !8534)
!8537 = !DILocation(line: 2919, column: 21, scope: !8534)
!8538 = !DILocation(line: 2919, column: 19, scope: !8534)
!8539 = !DILocation(line: 2919, column: 7, scope: !8529)
!8540 = !DILocation(line: 2920, column: 10, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 2919, column: 33)
!8542 = !DILocation(line: 2920, column: 18, scope: !8541)
!8543 = !DILocation(line: 2920, column: 16, scope: !8541)
!8544 = !DILocation(line: 2920, column: 8, scope: !8541)
!8545 = !DILocation(line: 2923, column: 8, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 2923, column: 8)
!8547 = !DILocation(line: 2923, column: 14, scope: !8546)
!8548 = !DILocation(line: 2923, column: 19, scope: !8546)
!8549 = !DILocation(line: 2923, column: 28, scope: !8546)
!8550 = !DILocation(line: 2923, column: 12, scope: !8546)
!8551 = !DILocation(line: 2923, column: 8, scope: !8541)
!8552 = !DILocation(line: 2924, column: 11, scope: !8546)
!8553 = !DILocation(line: 2924, column: 16, scope: !8546)
!8554 = !DILocation(line: 2924, column: 25, scope: !8546)
!8555 = !DILocation(line: 2924, column: 9, scope: !8546)
!8556 = !DILocation(line: 2924, column: 5, scope: !8546)
!8557 = !DILocation(line: 2928, column: 3, scope: !8541)
!8558 = !DILocation(line: 2929, column: 2, scope: !8529)
!8559 = !DILocation(line: 2939, column: 9, scope: !8285)
!8560 = !DILocation(line: 2939, column: 2, scope: !8285)
!8561 = distinct !DISubprogram(name: "pcibios_root_bridge_prepare", scope: !3, file: !3, line: 2962, type: !8562, scopeLine: 2963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8562 = !DISubroutineType(types: !8563)
!8563 = !{!232, !4364}
!8564 = !DILocalVariable(name: "bridge", arg: 1, scope: !8561, file: !3, line: 2962, type: !4364)
!8565 = !DILocation(line: 2962, column: 64, scope: !8561)
!8566 = !DILocation(line: 2964, column: 2, scope: !8561)
!8567 = distinct !DISubprogram(name: "pcibios_add_bus", scope: !3, file: !3, line: 2967, type: !4241, scopeLine: 2968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8568 = !DILocalVariable(name: "bus", arg: 1, scope: !8567, file: !3, line: 2967, type: !234)
!8569 = !DILocation(line: 2967, column: 45, scope: !8567)
!8570 = !DILocation(line: 2969, column: 1, scope: !8567)
!8571 = distinct !DISubprogram(name: "pcibios_remove_bus", scope: !3, file: !3, line: 2971, type: !4241, scopeLine: 2972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8572 = !DILocalVariable(name: "bus", arg: 1, scope: !8571, file: !3, line: 2971, type: !234)
!8573 = !DILocation(line: 2971, column: 48, scope: !8571)
!8574 = !DILocation(line: 2973, column: 1, scope: !8571)
!8575 = distinct !DISubprogram(name: "pci_create_root_bus", scope: !3, file: !3, line: 2975, type: !8576, scopeLine: 2977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8576 = !DISubroutineType(types: !8577)
!8577 = !{!234, !3551, !232, !4232, !222, !241}
!8578 = !DILocalVariable(name: "parent", arg: 1, scope: !8575, file: !3, line: 2975, type: !3551)
!8579 = !DILocation(line: 2975, column: 52, scope: !8575)
!8580 = !DILocalVariable(name: "bus", arg: 2, scope: !8575, file: !3, line: 2975, type: !232)
!8581 = !DILocation(line: 2975, column: 64, scope: !8575)
!8582 = !DILocalVariable(name: "ops", arg: 3, scope: !8575, file: !3, line: 2976, type: !4232)
!8583 = !DILocation(line: 2976, column: 19, scope: !8575)
!8584 = !DILocalVariable(name: "sysdata", arg: 4, scope: !8575, file: !3, line: 2976, type: !222)
!8585 = !DILocation(line: 2976, column: 30, scope: !8575)
!8586 = !DILocalVariable(name: "resources", arg: 5, scope: !8575, file: !3, line: 2976, type: !241)
!8587 = !DILocation(line: 2976, column: 57, scope: !8575)
!8588 = !DILocalVariable(name: "error", scope: !8575, file: !3, line: 2978, type: !232)
!8589 = !DILocation(line: 2978, column: 6, scope: !8575)
!8590 = !DILocalVariable(name: "bridge", scope: !8575, file: !3, line: 2979, type: !4364)
!8591 = !DILocation(line: 2979, column: 26, scope: !8575)
!8592 = !DILocation(line: 2981, column: 11, scope: !8575)
!8593 = !DILocation(line: 2981, column: 9, scope: !8575)
!8594 = !DILocation(line: 2982, column: 7, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 2982, column: 6)
!8596 = !DILocation(line: 2982, column: 6, scope: !8575)
!8597 = !DILocation(line: 2983, column: 3, scope: !8595)
!8598 = !DILocation(line: 2985, column: 23, scope: !8575)
!8599 = !DILocation(line: 2985, column: 2, scope: !8575)
!8600 = !DILocation(line: 2985, column: 10, scope: !8575)
!8601 = !DILocation(line: 2985, column: 14, scope: !8575)
!8602 = !DILocation(line: 2985, column: 21, scope: !8575)
!8603 = !DILocation(line: 2987, column: 19, scope: !8575)
!8604 = !DILocation(line: 2987, column: 31, scope: !8575)
!8605 = !DILocation(line: 2987, column: 39, scope: !8575)
!8606 = !DILocation(line: 2987, column: 2, scope: !8575)
!8607 = !DILocation(line: 2988, column: 20, scope: !8575)
!8608 = !DILocation(line: 2988, column: 2, scope: !8575)
!8609 = !DILocation(line: 2988, column: 10, scope: !8575)
!8610 = !DILocation(line: 2988, column: 18, scope: !8575)
!8611 = !DILocation(line: 2989, column: 18, scope: !8575)
!8612 = !DILocation(line: 2989, column: 2, scope: !8575)
!8613 = !DILocation(line: 2989, column: 10, scope: !8575)
!8614 = !DILocation(line: 2989, column: 16, scope: !8575)
!8615 = !DILocation(line: 2990, column: 16, scope: !8575)
!8616 = !DILocation(line: 2990, column: 2, scope: !8575)
!8617 = !DILocation(line: 2990, column: 10, scope: !8575)
!8618 = !DILocation(line: 2990, column: 14, scope: !8575)
!8619 = !DILocation(line: 2992, column: 35, scope: !8575)
!8620 = !DILocation(line: 2992, column: 10, scope: !8575)
!8621 = !DILocation(line: 2992, column: 8, scope: !8575)
!8622 = !DILocation(line: 2993, column: 6, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 2993, column: 6)
!8624 = !DILocation(line: 2993, column: 12, scope: !8623)
!8625 = !DILocation(line: 2993, column: 6, scope: !8575)
!8626 = !DILocation(line: 2994, column: 3, scope: !8623)
!8627 = !DILocation(line: 2996, column: 9, scope: !8575)
!8628 = !DILocation(line: 2996, column: 17, scope: !8575)
!8629 = !DILocation(line: 2996, column: 2, scope: !8575)
!8630 = !DILabel(scope: !8575, name: "err_out", file: !3, line: 2998)
!8631 = !DILocation(line: 2998, column: 1, scope: !8575)
!8632 = !DILocation(line: 2999, column: 14, scope: !8575)
!8633 = !DILocation(line: 2999, column: 22, scope: !8575)
!8634 = !DILocation(line: 2999, column: 2, scope: !8575)
!8635 = !DILocation(line: 3000, column: 2, scope: !8575)
!8636 = !DILocation(line: 3001, column: 1, scope: !8575)
!8637 = distinct !DISubprogram(name: "list_splice_init", scope: !5910, file: !5910, line: 478, type: !5911, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8638 = !DILocalVariable(name: "list", arg: 1, scope: !8637, file: !5910, line: 478, type: !241)
!8639 = !DILocation(line: 478, column: 55, scope: !8637)
!8640 = !DILocalVariable(name: "head", arg: 2, scope: !8637, file: !5910, line: 479, type: !241)
!8641 = !DILocation(line: 479, column: 27, scope: !8637)
!8642 = !DILocation(line: 481, column: 18, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8637, file: !5910, line: 481, column: 6)
!8644 = !DILocation(line: 481, column: 7, scope: !8643)
!8645 = !DILocation(line: 481, column: 6, scope: !8637)
!8646 = !DILocation(line: 482, column: 17, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8643, file: !5910, line: 481, column: 25)
!8648 = !DILocation(line: 482, column: 23, scope: !8647)
!8649 = !DILocation(line: 482, column: 29, scope: !8647)
!8650 = !DILocation(line: 482, column: 35, scope: !8647)
!8651 = !DILocation(line: 482, column: 3, scope: !8647)
!8652 = !DILocation(line: 483, column: 18, scope: !8647)
!8653 = !DILocation(line: 483, column: 3, scope: !8647)
!8654 = !DILocation(line: 484, column: 2, scope: !8647)
!8655 = !DILocation(line: 485, column: 1, scope: !8637)
!8656 = distinct !DISubprogram(name: "pci_register_host_bridge", scope: !3, file: !3, line: 876, type: !8562, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8657 = !DILocalVariable(name: "bridge", arg: 1, scope: !8656, file: !3, line: 876, type: !4364)
!8658 = !DILocation(line: 876, column: 61, scope: !8656)
!8659 = !DILocalVariable(name: "parent", scope: !8656, file: !3, line: 878, type: !3551)
!8660 = !DILocation(line: 878, column: 17, scope: !8656)
!8661 = !DILocation(line: 878, column: 26, scope: !8656)
!8662 = !DILocation(line: 878, column: 34, scope: !8656)
!8663 = !DILocation(line: 878, column: 38, scope: !8656)
!8664 = !DILocalVariable(name: "window", scope: !8656, file: !3, line: 879, type: !4355)
!8665 = !DILocation(line: 879, column: 25, scope: !8656)
!8666 = !DILocalVariable(name: "n", scope: !8656, file: !3, line: 879, type: !4355)
!8667 = !DILocation(line: 879, column: 34, scope: !8656)
!8668 = !DILocalVariable(name: "bus", scope: !8656, file: !3, line: 880, type: !234)
!8669 = !DILocation(line: 880, column: 18, scope: !8656)
!8670 = !DILocalVariable(name: "b", scope: !8656, file: !3, line: 880, type: !234)
!8671 = !DILocation(line: 880, column: 24, scope: !8656)
!8672 = !DILocalVariable(name: "offset", scope: !8656, file: !3, line: 881, type: !4126)
!8673 = !DILocation(line: 881, column: 18, scope: !8656)
!8674 = !DILocalVariable(name: "resources", scope: !8656, file: !3, line: 882, type: !238)
!8675 = !DILocation(line: 882, column: 2, scope: !8656)
!8676 = !DILocalVariable(name: "res", scope: !8656, file: !3, line: 883, type: !4132)
!8677 = !DILocation(line: 883, column: 19, scope: !8656)
!8678 = !DILocalVariable(name: "addr", scope: !8656, file: !3, line: 884, type: !8679)
!8679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 512, elements: !373)
!8680 = !DILocation(line: 884, column: 7, scope: !8656)
!8681 = !DILocalVariable(name: "fmt", scope: !8656, file: !3, line: 884, type: !368)
!8682 = !DILocation(line: 884, column: 18, scope: !8656)
!8683 = !DILocalVariable(name: "name", scope: !8656, file: !3, line: 885, type: !309)
!8684 = !DILocation(line: 885, column: 14, scope: !8656)
!8685 = !DILocalVariable(name: "err", scope: !8656, file: !3, line: 886, type: !232)
!8686 = !DILocation(line: 886, column: 6, scope: !8656)
!8687 = !DILocation(line: 888, column: 8, scope: !8656)
!8688 = !DILocation(line: 888, column: 6, scope: !8656)
!8689 = !DILocation(line: 889, column: 7, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 889, column: 6)
!8691 = !DILocation(line: 889, column: 6, scope: !8656)
!8692 = !DILocation(line: 890, column: 3, scope: !8690)
!8693 = !DILocation(line: 892, column: 16, scope: !8656)
!8694 = !DILocation(line: 892, column: 2, scope: !8656)
!8695 = !DILocation(line: 892, column: 10, scope: !8656)
!8696 = !DILocation(line: 892, column: 14, scope: !8656)
!8697 = !DILocation(line: 895, column: 20, scope: !8656)
!8698 = !DILocation(line: 895, column: 28, scope: !8656)
!8699 = !DILocation(line: 895, column: 2, scope: !8656)
!8700 = !DILocation(line: 896, column: 17, scope: !8656)
!8701 = !DILocation(line: 896, column: 25, scope: !8656)
!8702 = !DILocation(line: 896, column: 2, scope: !8656)
!8703 = !DILocation(line: 896, column: 7, scope: !8656)
!8704 = !DILocation(line: 896, column: 15, scope: !8656)
!8705 = !DILocation(line: 897, column: 13, scope: !8656)
!8706 = !DILocation(line: 897, column: 21, scope: !8656)
!8707 = !DILocation(line: 897, column: 2, scope: !8656)
!8708 = !DILocation(line: 897, column: 7, scope: !8656)
!8709 = !DILocation(line: 897, column: 11, scope: !8656)
!8710 = !DILocation(line: 898, column: 13, scope: !8656)
!8711 = !DILocation(line: 898, column: 21, scope: !8656)
!8712 = !DILocation(line: 898, column: 2, scope: !8656)
!8713 = !DILocation(line: 898, column: 7, scope: !8656)
!8714 = !DILocation(line: 898, column: 11, scope: !8656)
!8715 = !DILocation(line: 899, column: 38, scope: !8656)
!8716 = !DILocation(line: 899, column: 46, scope: !8656)
!8717 = !DILocation(line: 899, column: 16, scope: !8656)
!8718 = !DILocation(line: 899, column: 21, scope: !8656)
!8719 = !DILocation(line: 899, column: 30, scope: !8656)
!8720 = !DILocation(line: 899, column: 36, scope: !8656)
!8721 = !DILocation(line: 899, column: 2, scope: !8656)
!8722 = !DILocation(line: 899, column: 7, scope: !8656)
!8723 = !DILocation(line: 899, column: 14, scope: !8656)
!8724 = !DILocation(line: 904, column: 33, scope: !8656)
!8725 = !DILocation(line: 904, column: 19, scope: !8656)
!8726 = !DILocation(line: 904, column: 39, scope: !8656)
!8727 = !DILocation(line: 904, column: 47, scope: !8656)
!8728 = !DILocation(line: 904, column: 6, scope: !8656)
!8729 = !DILocation(line: 904, column: 4, scope: !8656)
!8730 = !DILocation(line: 905, column: 6, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 905, column: 6)
!8732 = !DILocation(line: 905, column: 6, scope: !8656)
!8733 = !DILocation(line: 908, column: 7, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 905, column: 9)
!8735 = !DILocation(line: 909, column: 3, scope: !8734)
!8736 = !DILocation(line: 912, column: 16, scope: !8656)
!8737 = !DILocation(line: 912, column: 24, scope: !8656)
!8738 = !DILocation(line: 912, column: 59, scope: !8656)
!8739 = !DILocation(line: 912, column: 45, scope: !8656)
!8740 = !DILocation(line: 913, column: 8, scope: !8656)
!8741 = !DILocation(line: 913, column: 16, scope: !8656)
!8742 = !DILocation(line: 912, column: 2, scope: !8656)
!8743 = !DILocation(line: 915, column: 36, scope: !8656)
!8744 = !DILocation(line: 915, column: 8, scope: !8656)
!8745 = !DILocation(line: 915, column: 6, scope: !8656)
!8746 = !DILocation(line: 916, column: 6, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 916, column: 6)
!8748 = !DILocation(line: 916, column: 6, scope: !8656)
!8749 = !DILocation(line: 917, column: 3, scope: !8747)
!8750 = !DILocation(line: 919, column: 20, scope: !8656)
!8751 = !DILocation(line: 919, column: 28, scope: !8656)
!8752 = !DILocation(line: 919, column: 8, scope: !8656)
!8753 = !DILocation(line: 919, column: 6, scope: !8656)
!8754 = !DILocation(line: 920, column: 6, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 920, column: 6)
!8756 = !DILocation(line: 920, column: 6, scope: !8656)
!8757 = !DILocation(line: 921, column: 15, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8755, file: !3, line: 920, column: 11)
!8759 = !DILocation(line: 921, column: 23, scope: !8758)
!8760 = !DILocation(line: 921, column: 3, scope: !8758)
!8761 = !DILocation(line: 922, column: 3, scope: !8758)
!8762 = !DILocation(line: 924, column: 28, scope: !8656)
!8763 = !DILocation(line: 924, column: 36, scope: !8656)
!8764 = !DILocation(line: 924, column: 16, scope: !8656)
!8765 = !DILocation(line: 924, column: 2, scope: !8656)
!8766 = !DILocation(line: 924, column: 7, scope: !8656)
!8767 = !DILocation(line: 924, column: 14, scope: !8656)
!8768 = !DILocation(line: 925, column: 30, scope: !8656)
!8769 = !DILocation(line: 925, column: 35, scope: !8656)
!8770 = !DILocation(line: 925, column: 2, scope: !8656)
!8771 = !DILocation(line: 926, column: 22, scope: !8656)
!8772 = !DILocation(line: 926, column: 2, scope: !8656)
!8773 = !DILocation(line: 927, column: 25, scope: !8656)
!8774 = !DILocation(line: 927, column: 2, scope: !8656)
!8775 = !DILocation(line: 929, column: 7, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 929, column: 6)
!8777 = !DILocation(line: 929, column: 6, scope: !8656)
!8778 = !DILocation(line: 930, column: 16, scope: !8776)
!8779 = !DILocation(line: 930, column: 21, scope: !8776)
!8780 = !DILocation(line: 930, column: 29, scope: !8776)
!8781 = !DILocation(line: 930, column: 3, scope: !8776)
!8782 = !DILocation(line: 932, column: 2, scope: !8656)
!8783 = !DILocation(line: 932, column: 7, scope: !8656)
!8784 = !DILocation(line: 932, column: 11, scope: !8656)
!8785 = !DILocation(line: 932, column: 17, scope: !8656)
!8786 = !DILocation(line: 933, column: 20, scope: !8656)
!8787 = !DILocation(line: 933, column: 25, scope: !8656)
!8788 = !DILocation(line: 933, column: 2, scope: !8656)
!8789 = !DILocation(line: 933, column: 7, scope: !8656)
!8790 = !DILocation(line: 933, column: 11, scope: !8656)
!8791 = !DILocation(line: 933, column: 18, scope: !8656)
!8792 = !DILocation(line: 935, column: 16, scope: !8656)
!8793 = !DILocation(line: 935, column: 21, scope: !8656)
!8794 = !DILocation(line: 935, column: 53, scope: !8656)
!8795 = !DILocation(line: 935, column: 39, scope: !8656)
!8796 = !DILocation(line: 935, column: 59, scope: !8656)
!8797 = !DILocation(line: 935, column: 64, scope: !8656)
!8798 = !DILocation(line: 935, column: 2, scope: !8656)
!8799 = !DILocation(line: 936, column: 19, scope: !8656)
!8800 = !DILocation(line: 936, column: 24, scope: !8656)
!8801 = !DILocation(line: 936, column: 9, scope: !8656)
!8802 = !DILocation(line: 936, column: 7, scope: !8656)
!8803 = !DILocation(line: 938, column: 25, scope: !8656)
!8804 = !DILocation(line: 938, column: 30, scope: !8656)
!8805 = !DILocation(line: 938, column: 8, scope: !8656)
!8806 = !DILocation(line: 938, column: 6, scope: !8656)
!8807 = !DILocation(line: 939, column: 6, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 939, column: 6)
!8809 = !DILocation(line: 939, column: 6, scope: !8656)
!8810 = !DILocation(line: 940, column: 3, scope: !8808)
!8811 = !DILocation(line: 942, column: 18, scope: !8656)
!8812 = !DILocation(line: 942, column: 2, scope: !8656)
!8813 = !DILocation(line: 944, column: 6, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 944, column: 6)
!8815 = !DILocation(line: 944, column: 11, scope: !8814)
!8816 = !DILocation(line: 944, column: 16, scope: !8814)
!8817 = !DILocation(line: 944, column: 6, scope: !8656)
!8818 = !DILocation(line: 945, column: 9, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 944, column: 25)
!8820 = !DILocation(line: 945, column: 14, scope: !8819)
!8821 = !DILocation(line: 945, column: 19, scope: !8819)
!8822 = !DILocation(line: 945, column: 27, scope: !8819)
!8823 = !DILocation(line: 945, column: 7, scope: !8819)
!8824 = !DILocalVariable(name: "__ret_warn_on", scope: !8825, file: !3, line: 946, type: !232)
!8825 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 946, column: 7)
!8826 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 946, column: 7)
!8827 = !DILocation(line: 946, column: 7, scope: !8825)
!8828 = !DILocation(line: 946, column: 7, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8825, file: !3, line: 946, column: 7)
!8830 = !DILocation(line: 946, column: 7, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 946, column: 7)
!8832 = !DILocation(line: 946, column: 7, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 946, column: 7)
!8834 = !DILocation(line: 946, column: 7, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 946, column: 7)
!8836 = !{i32 -2140917111, i32 -2140917082, i32 -2140917036, i32 -2140916978, i32 -2140916924, i32 -2140916870, i32 -2140916815, i32 -2140916784}
!8837 = !DILocation(line: 946, column: 7, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 946, column: 7)
!8839 = !{i32 -2140916383, i32 -2140916376, i32 -2140916324, i32 -2140916293, i32 -2140916263}
!8840 = !DILocation(line: 946, column: 7, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 946, column: 7)
!8842 = !DILocation(line: 946, column: 7, scope: !8826)
!8843 = !DILocation(line: 946, column: 7, scope: !8819)
!8844 = !DILocation(line: 947, column: 4, scope: !8826)
!8845 = !DILocation(line: 948, column: 2, scope: !8819)
!8846 = !DILocation(line: 951, column: 26, scope: !8656)
!8847 = !DILocation(line: 951, column: 2, scope: !8656)
!8848 = !DILocation(line: 953, column: 6, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 953, column: 6)
!8850 = !DILocation(line: 953, column: 6, scope: !8656)
!8851 = !DILocation(line: 954, column: 3, scope: !8849)
!8852 = !DILocation(line: 956, column: 3, scope: !8849)
!8853 = !DILocalVariable(name: "__mptr", scope: !8854, file: !3, line: 962, type: !222)
!8854 = distinct !DILexicalBlock(scope: !8855, file: !3, line: 962, column: 2)
!8855 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 962, column: 2)
!8856 = !DILocation(line: 962, column: 2, scope: !8854)
!8857 = !DILocation(line: 962, column: 2, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 962, column: 2)
!8859 = !DILocation(line: 962, column: 2, scope: !8855)
!8860 = !DILocalVariable(name: "__mptr", scope: !8861, file: !3, line: 962, type: !222)
!8861 = distinct !DILexicalBlock(scope: !8855, file: !3, line: 962, column: 2)
!8862 = !DILocation(line: 962, column: 2, scope: !8861)
!8863 = !DILocation(line: 962, column: 2, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 962, column: 2)
!8865 = !DILocation(line: 962, column: 2, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8855, file: !3, line: 962, column: 2)
!8867 = !DILocation(line: 963, column: 19, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 962, column: 59)
!8869 = !DILocation(line: 963, column: 27, scope: !8868)
!8870 = !DILocation(line: 963, column: 34, scope: !8868)
!8871 = !DILocation(line: 963, column: 42, scope: !8868)
!8872 = !DILocation(line: 963, column: 3, scope: !8868)
!8873 = !DILocation(line: 964, column: 12, scope: !8868)
!8874 = !DILocation(line: 964, column: 20, scope: !8868)
!8875 = !DILocation(line: 964, column: 10, scope: !8868)
!8876 = !DILocation(line: 965, column: 9, scope: !8868)
!8877 = !DILocation(line: 965, column: 17, scope: !8868)
!8878 = !DILocation(line: 965, column: 7, scope: !8868)
!8879 = !DILocation(line: 967, column: 7, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 967, column: 7)
!8881 = !DILocation(line: 967, column: 12, scope: !8880)
!8882 = !DILocation(line: 967, column: 18, scope: !8880)
!8883 = !DILocation(line: 967, column: 7, scope: !8868)
!8884 = !DILocation(line: 968, column: 28, scope: !8880)
!8885 = !DILocation(line: 968, column: 33, scope: !8880)
!8886 = !DILocation(line: 968, column: 38, scope: !8880)
!8887 = !DILocation(line: 968, column: 46, scope: !8880)
!8888 = !DILocation(line: 968, column: 51, scope: !8880)
!8889 = !DILocation(line: 968, column: 4, scope: !8880)
!8890 = !DILocation(line: 970, column: 25, scope: !8880)
!8891 = !DILocation(line: 970, column: 30, scope: !8880)
!8892 = !DILocation(line: 970, column: 4, scope: !8880)
!8893 = !DILocation(line: 972, column: 7, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 972, column: 7)
!8895 = !DILocation(line: 972, column: 7, scope: !8868)
!8896 = !DILocation(line: 973, column: 22, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8898, file: !3, line: 973, column: 8)
!8898 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 972, column: 15)
!8899 = !DILocation(line: 973, column: 8, scope: !8897)
!8900 = !DILocation(line: 973, column: 27, scope: !8897)
!8901 = !DILocation(line: 973, column: 8, scope: !8898)
!8902 = !DILocation(line: 974, column: 9, scope: !8897)
!8903 = !DILocation(line: 974, column: 5, scope: !8897)
!8904 = !DILocation(line: 976, column: 9, scope: !8897)
!8905 = !DILocation(line: 978, column: 13, scope: !8898)
!8906 = !DILocation(line: 978, column: 33, scope: !8898)
!8907 = !DILocation(line: 979, column: 27, scope: !8898)
!8908 = !DILocation(line: 979, column: 32, scope: !8898)
!8909 = !DILocation(line: 979, column: 40, scope: !8898)
!8910 = !DILocation(line: 979, column: 38, scope: !8898)
!8911 = !DILocation(line: 980, column: 27, scope: !8898)
!8912 = !DILocation(line: 980, column: 32, scope: !8898)
!8913 = !DILocation(line: 980, column: 38, scope: !8898)
!8914 = !DILocation(line: 980, column: 36, scope: !8898)
!8915 = !DILocation(line: 978, column: 4, scope: !8898)
!8916 = !DILocation(line: 981, column: 3, scope: !8898)
!8917 = !DILocation(line: 982, column: 4, scope: !8894)
!8918 = !DILocation(line: 982, column: 12, scope: !8894)
!8919 = !DILocation(line: 984, column: 3, scope: !8868)
!8920 = !DILocation(line: 985, column: 2, scope: !8868)
!8921 = !DILocalVariable(name: "__mptr", scope: !8922, file: !3, line: 962, type: !222)
!8922 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 962, column: 2)
!8923 = !DILocation(line: 962, column: 2, scope: !8922)
!8924 = !DILocation(line: 962, column: 2, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 962, column: 2)
!8926 = distinct !{!8926, !8859, !8927}
!8927 = !DILocation(line: 985, column: 2, scope: !8855)
!8928 = !DILocation(line: 987, column: 2, scope: !8656)
!8929 = !DILocation(line: 988, column: 17, scope: !8656)
!8930 = !DILocation(line: 988, column: 22, scope: !8656)
!8931 = !DILocation(line: 988, column: 2, scope: !8656)
!8932 = !DILocation(line: 989, column: 2, scope: !8656)
!8933 = !DILocation(line: 991, column: 2, scope: !8656)
!8934 = !DILabel(scope: !8656, name: "unregister", file: !3, line: 993)
!8935 = !DILocation(line: 993, column: 1, scope: !8656)
!8936 = !DILocation(line: 994, column: 14, scope: !8656)
!8937 = !DILocation(line: 994, column: 22, scope: !8656)
!8938 = !DILocation(line: 994, column: 2, scope: !8656)
!8939 = !DILocation(line: 995, column: 14, scope: !8656)
!8940 = !DILocation(line: 995, column: 22, scope: !8656)
!8941 = !DILocation(line: 995, column: 2, scope: !8656)
!8942 = !DILabel(scope: !8656, name: "free", file: !3, line: 997)
!8943 = !DILocation(line: 997, column: 1, scope: !8656)
!8944 = !DILocation(line: 998, column: 8, scope: !8656)
!8945 = !DILocation(line: 998, column: 2, scope: !8656)
!8946 = !DILocation(line: 999, column: 9, scope: !8656)
!8947 = !DILocation(line: 999, column: 2, scope: !8656)
!8948 = !DILocation(line: 1000, column: 1, scope: !8656)
!8949 = distinct !DISubprogram(name: "pci_host_probe", scope: !3, file: !3, line: 3004, type: !8562, scopeLine: 3005, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!8950 = !DILocalVariable(name: "bridge", arg: 1, scope: !8949, file: !3, line: 3004, type: !4364)
!8951 = !DILocation(line: 3004, column: 44, scope: !8949)
!8952 = !DILocalVariable(name: "bus", scope: !8949, file: !3, line: 3006, type: !234)
!8953 = !DILocation(line: 3006, column: 18, scope: !8949)
!8954 = !DILocalVariable(name: "child", scope: !8949, file: !3, line: 3006, type: !234)
!8955 = !DILocation(line: 3006, column: 24, scope: !8949)
!8956 = !DILocalVariable(name: "ret", scope: !8949, file: !3, line: 3007, type: !232)
!8957 = !DILocation(line: 3007, column: 6, scope: !8949)
!8958 = !DILocation(line: 3009, column: 33, scope: !8949)
!8959 = !DILocation(line: 3009, column: 8, scope: !8949)
!8960 = !DILocation(line: 3009, column: 6, scope: !8949)
!8961 = !DILocation(line: 3010, column: 6, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 3010, column: 6)
!8963 = !DILocation(line: 3010, column: 10, scope: !8962)
!8964 = !DILocation(line: 3010, column: 6, scope: !8949)
!8965 = !DILocation(line: 3011, column: 3, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 3010, column: 15)
!8967 = !DILocation(line: 3012, column: 10, scope: !8966)
!8968 = !DILocation(line: 3012, column: 3, scope: !8966)
!8969 = !DILocation(line: 3015, column: 8, scope: !8949)
!8970 = !DILocation(line: 3015, column: 16, scope: !8949)
!8971 = !DILocation(line: 3015, column: 6, scope: !8949)
!8972 = !DILocation(line: 3022, column: 6, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 3022, column: 6)
!8974 = !DILocation(line: 3022, column: 6, scope: !8949)
!8975 = !DILocation(line: 3023, column: 27, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 3022, column: 36)
!8977 = !DILocation(line: 3023, column: 3, scope: !8976)
!8978 = !DILocation(line: 3024, column: 2, scope: !8976)
!8979 = !DILocation(line: 3025, column: 24, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 3024, column: 9)
!8981 = !DILocation(line: 3025, column: 3, scope: !8980)
!8982 = !DILocation(line: 3026, column: 28, scope: !8980)
!8983 = !DILocation(line: 3026, column: 3, scope: !8980)
!8984 = !DILocalVariable(name: "__mptr", scope: !8985, file: !3, line: 3028, type: !222)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 3028, column: 3)
!8986 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 3028, column: 3)
!8987 = !DILocation(line: 3028, column: 3, scope: !8985)
!8988 = !DILocation(line: 3028, column: 3, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 3028, column: 3)
!8990 = !DILocation(line: 3028, column: 3, scope: !8986)
!8991 = !DILocation(line: 3028, column: 3, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 3028, column: 3)
!8993 = !DILocation(line: 3029, column: 32, scope: !8992)
!8994 = !DILocation(line: 3029, column: 4, scope: !8992)
!8995 = !DILocalVariable(name: "__mptr", scope: !8996, file: !3, line: 3028, type: !222)
!8996 = distinct !DILexicalBlock(scope: !8992, file: !3, line: 3028, column: 3)
!8997 = !DILocation(line: 3028, column: 3, scope: !8996)
!8998 = !DILocation(line: 3028, column: 3, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 3028, column: 3)
!9000 = distinct !{!9000, !8990, !9001}
!9001 = !DILocation(line: 3029, column: 37, scope: !8986)
!9002 = !DILocation(line: 3032, column: 22, scope: !8949)
!9003 = !DILocation(line: 3032, column: 2, scope: !8949)
!9004 = !DILocation(line: 3033, column: 2, scope: !8949)
!9005 = !DILocation(line: 3034, column: 1, scope: !8949)
!9006 = distinct !DISubprogram(name: "pci_scan_root_bus_bridge", scope: !3, file: !3, line: 3098, type: !8562, scopeLine: 3099, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9007 = !DILocalVariable(name: "bridge", arg: 1, scope: !9006, file: !3, line: 3098, type: !4364)
!9008 = !DILocation(line: 3098, column: 54, scope: !9006)
!9009 = !DILocalVariable(name: "window", scope: !9006, file: !3, line: 3100, type: !4355)
!9010 = !DILocation(line: 3100, column: 25, scope: !9006)
!9011 = !DILocalVariable(name: "found", scope: !9006, file: !3, line: 3101, type: !576)
!9012 = !DILocation(line: 3101, column: 7, scope: !9006)
!9013 = !DILocalVariable(name: "b", scope: !9006, file: !3, line: 3102, type: !234)
!9014 = !DILocation(line: 3102, column: 18, scope: !9006)
!9015 = !DILocalVariable(name: "max", scope: !9006, file: !3, line: 3103, type: !232)
!9016 = !DILocation(line: 3103, column: 6, scope: !9006)
!9017 = !DILocalVariable(name: "bus", scope: !9006, file: !3, line: 3103, type: !232)
!9018 = !DILocation(line: 3103, column: 11, scope: !9006)
!9019 = !DILocalVariable(name: "ret", scope: !9006, file: !3, line: 3103, type: !232)
!9020 = !DILocation(line: 3103, column: 16, scope: !9006)
!9021 = !DILocation(line: 3105, column: 7, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 3105, column: 6)
!9023 = !DILocation(line: 3105, column: 6, scope: !9006)
!9024 = !DILocation(line: 3106, column: 3, scope: !9022)
!9025 = !DILocalVariable(name: "__mptr", scope: !9026, file: !3, line: 3108, type: !222)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !3, line: 3108, column: 2)
!9027 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 3108, column: 2)
!9028 = !DILocation(line: 3108, column: 2, scope: !9026)
!9029 = !DILocation(line: 3108, column: 2, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 3108, column: 2)
!9031 = !DILocation(line: 3108, column: 2, scope: !9027)
!9032 = !DILocation(line: 3108, column: 2, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9027, file: !3, line: 3108, column: 2)
!9034 = !DILocation(line: 3109, column: 7, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 3109, column: 7)
!9036 = !DILocation(line: 3109, column: 15, scope: !9035)
!9037 = !DILocation(line: 3109, column: 20, scope: !9035)
!9038 = !DILocation(line: 3109, column: 26, scope: !9035)
!9039 = !DILocation(line: 3109, column: 7, scope: !9033)
!9040 = !DILocation(line: 3110, column: 20, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9035, file: !3, line: 3109, column: 44)
!9042 = !DILocation(line: 3110, column: 28, scope: !9041)
!9043 = !DILocation(line: 3110, column: 33, scope: !9041)
!9044 = !DILocation(line: 3110, column: 4, scope: !9041)
!9045 = !DILocation(line: 3110, column: 12, scope: !9041)
!9046 = !DILocation(line: 3110, column: 18, scope: !9041)
!9047 = !DILocation(line: 3111, column: 10, scope: !9041)
!9048 = !DILocation(line: 3112, column: 4, scope: !9041)
!9049 = !DILocation(line: 3109, column: 28, scope: !9035)
!9050 = !DILocalVariable(name: "__mptr", scope: !9051, file: !3, line: 3108, type: !222)
!9051 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 3108, column: 2)
!9052 = !DILocation(line: 3108, column: 2, scope: !9051)
!9053 = !DILocation(line: 3108, column: 2, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 3108, column: 2)
!9055 = distinct !{!9055, !9031, !9056}
!9056 = !DILocation(line: 3113, column: 3, scope: !9027)
!9057 = !DILocation(line: 3115, column: 33, scope: !9006)
!9058 = !DILocation(line: 3115, column: 8, scope: !9006)
!9059 = !DILocation(line: 3115, column: 6, scope: !9006)
!9060 = !DILocation(line: 3116, column: 6, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 3116, column: 6)
!9062 = !DILocation(line: 3116, column: 10, scope: !9061)
!9063 = !DILocation(line: 3116, column: 6, scope: !9006)
!9064 = !DILocation(line: 3117, column: 10, scope: !9061)
!9065 = !DILocation(line: 3117, column: 3, scope: !9061)
!9066 = !DILocation(line: 3119, column: 6, scope: !9006)
!9067 = !DILocation(line: 3119, column: 14, scope: !9006)
!9068 = !DILocation(line: 3119, column: 4, scope: !9006)
!9069 = !DILocation(line: 3120, column: 8, scope: !9006)
!9070 = !DILocation(line: 3120, column: 16, scope: !9006)
!9071 = !DILocation(line: 3120, column: 6, scope: !9006)
!9072 = !DILocation(line: 3122, column: 7, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 3122, column: 6)
!9074 = !DILocation(line: 3122, column: 6, scope: !9006)
!9075 = !DILocation(line: 3123, column: 3, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 3122, column: 14)
!9077 = !DILocation(line: 3126, column: 27, scope: !9076)
!9078 = !DILocation(line: 3126, column: 30, scope: !9076)
!9079 = !DILocation(line: 3126, column: 3, scope: !9076)
!9080 = !DILocation(line: 3127, column: 2, scope: !9076)
!9081 = !DILocation(line: 3129, column: 27, scope: !9006)
!9082 = !DILocation(line: 3129, column: 8, scope: !9006)
!9083 = !DILocation(line: 3129, column: 6, scope: !9006)
!9084 = !DILocation(line: 3131, column: 7, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 3131, column: 6)
!9086 = !DILocation(line: 3131, column: 6, scope: !9006)
!9087 = !DILocation(line: 3132, column: 31, scope: !9085)
!9088 = !DILocation(line: 3132, column: 34, scope: !9085)
!9089 = !DILocation(line: 3132, column: 3, scope: !9085)
!9090 = !DILocation(line: 3134, column: 2, scope: !9006)
!9091 = !DILocation(line: 3135, column: 1, scope: !9006)
!9092 = distinct !DISubprogram(name: "pci_has_flag", scope: !115, file: !115, line: 969, type: !3137, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9093 = !DILocalVariable(name: "flag", arg: 1, scope: !9092, file: !115, line: 969, type: !232)
!9094 = !DILocation(line: 969, column: 36, scope: !9092)
!9095 = !DILocation(line: 969, column: 51, scope: !9092)
!9096 = !DILocation(line: 969, column: 63, scope: !9092)
!9097 = !DILocation(line: 969, column: 61, scope: !9092)
!9098 = !DILocation(line: 969, column: 44, scope: !9092)
!9099 = distinct !DISubprogram(name: "pci_bus_insert_busn_res", scope: !3, file: !3, line: 3037, type: !9100, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{!232, !234, !232, !232}
!9102 = !DILocalVariable(name: "b", arg: 1, scope: !9099, file: !3, line: 3037, type: !234)
!9103 = !DILocation(line: 3037, column: 45, scope: !9099)
!9104 = !DILocalVariable(name: "bus", arg: 2, scope: !9099, file: !3, line: 3037, type: !232)
!9105 = !DILocation(line: 3037, column: 52, scope: !9099)
!9106 = !DILocalVariable(name: "bus_max", arg: 3, scope: !9099, file: !3, line: 3037, type: !232)
!9107 = !DILocation(line: 3037, column: 61, scope: !9099)
!9108 = !DILocalVariable(name: "res", scope: !9099, file: !3, line: 3039, type: !4132)
!9109 = !DILocation(line: 3039, column: 19, scope: !9099)
!9110 = !DILocation(line: 3039, column: 26, scope: !9099)
!9111 = !DILocation(line: 3039, column: 29, scope: !9099)
!9112 = !DILocalVariable(name: "parent_res", scope: !9099, file: !3, line: 3040, type: !4132)
!9113 = !DILocation(line: 3040, column: 19, scope: !9099)
!9114 = !DILocalVariable(name: "conflict", scope: !9099, file: !3, line: 3040, type: !4132)
!9115 = !DILocation(line: 3040, column: 32, scope: !9099)
!9116 = !DILocation(line: 3042, column: 15, scope: !9099)
!9117 = !DILocation(line: 3042, column: 2, scope: !9099)
!9118 = !DILocation(line: 3042, column: 7, scope: !9099)
!9119 = !DILocation(line: 3042, column: 13, scope: !9099)
!9120 = !DILocation(line: 3043, column: 13, scope: !9099)
!9121 = !DILocation(line: 3043, column: 2, scope: !9099)
!9122 = !DILocation(line: 3043, column: 7, scope: !9099)
!9123 = !DILocation(line: 3043, column: 11, scope: !9099)
!9124 = !DILocation(line: 3044, column: 2, scope: !9099)
!9125 = !DILocation(line: 3044, column: 7, scope: !9099)
!9126 = !DILocation(line: 3044, column: 13, scope: !9099)
!9127 = !DILocation(line: 3046, column: 23, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 3046, column: 6)
!9129 = !DILocation(line: 3046, column: 7, scope: !9128)
!9130 = !DILocation(line: 3046, column: 6, scope: !9099)
!9131 = !DILocation(line: 3047, column: 17, scope: !9128)
!9132 = !DILocation(line: 3047, column: 20, scope: !9128)
!9133 = !DILocation(line: 3047, column: 28, scope: !9128)
!9134 = !DILocation(line: 3047, column: 14, scope: !9128)
!9135 = !DILocation(line: 3047, column: 3, scope: !9128)
!9136 = !DILocation(line: 3049, column: 54, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3048, column: 7)
!9138 = !DILocation(line: 3049, column: 40, scope: !9137)
!9139 = !DILocation(line: 3049, column: 16, scope: !9137)
!9140 = !DILocation(line: 3049, column: 14, scope: !9137)
!9141 = !DILocation(line: 3050, column: 3, scope: !9137)
!9142 = !DILocation(line: 3050, column: 8, scope: !9137)
!9143 = !DILocation(line: 3050, column: 14, scope: !9137)
!9144 = !DILocation(line: 3053, column: 39, scope: !9099)
!9145 = !DILocation(line: 3053, column: 51, scope: !9099)
!9146 = !DILocation(line: 3053, column: 13, scope: !9099)
!9147 = !DILocation(line: 3053, column: 11, scope: !9099)
!9148 = !DILocation(line: 3055, column: 6, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 3055, column: 6)
!9150 = !DILocation(line: 3055, column: 6, scope: !9099)
!9151 = !DILocation(line: 3056, column: 3, scope: !9149)
!9152 = !DILocation(line: 3061, column: 9, scope: !9099)
!9153 = !DILocation(line: 3061, column: 18, scope: !9099)
!9154 = !DILocation(line: 3061, column: 2, scope: !9099)
!9155 = distinct !DISubprogram(name: "get_pci_domain_busn_res", scope: !3, file: !3, line: 46, type: !9156, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9156 = !DISubroutineType(types: !9157)
!9157 = !{!4132, !232}
!9158 = !DILocalVariable(name: "domain_nr", arg: 1, scope: !9155, file: !3, line: 46, type: !232)
!9159 = !DILocation(line: 46, column: 53, scope: !9155)
!9160 = !DILocalVariable(name: "r", scope: !9155, file: !3, line: 48, type: !4412)
!9161 = !DILocation(line: 48, column: 30, scope: !9155)
!9162 = !DILocalVariable(name: "__mptr", scope: !9163, file: !3, line: 50, type: !222)
!9163 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 50, column: 2)
!9164 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 50, column: 2)
!9165 = !DILocation(line: 50, column: 2, scope: !9163)
!9166 = !DILocation(line: 50, column: 2, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 50, column: 2)
!9168 = !DILocation(line: 50, column: 2, scope: !9164)
!9169 = !DILocation(line: 50, column: 2, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 50, column: 2)
!9171 = !DILocation(line: 51, column: 7, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 51, column: 7)
!9173 = !DILocation(line: 51, column: 10, scope: !9172)
!9174 = !DILocation(line: 51, column: 23, scope: !9172)
!9175 = !DILocation(line: 51, column: 20, scope: !9172)
!9176 = !DILocation(line: 51, column: 7, scope: !9170)
!9177 = !DILocation(line: 52, column: 12, scope: !9172)
!9178 = !DILocation(line: 52, column: 15, scope: !9172)
!9179 = !DILocation(line: 52, column: 4, scope: !9172)
!9180 = !DILocalVariable(name: "__mptr", scope: !9181, file: !3, line: 50, type: !222)
!9181 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 50, column: 2)
!9182 = !DILocation(line: 50, column: 2, scope: !9181)
!9183 = !DILocation(line: 50, column: 2, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 50, column: 2)
!9185 = distinct !{!9185, !9168, !9186}
!9186 = !DILocation(line: 52, column: 15, scope: !9164)
!9187 = !DILocation(line: 54, column: 6, scope: !9155)
!9188 = !DILocation(line: 54, column: 4, scope: !9155)
!9189 = !DILocation(line: 55, column: 7, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 55, column: 6)
!9191 = !DILocation(line: 55, column: 6, scope: !9155)
!9192 = !DILocation(line: 56, column: 3, scope: !9190)
!9193 = !DILocation(line: 58, column: 17, scope: !9155)
!9194 = !DILocation(line: 58, column: 2, scope: !9155)
!9195 = !DILocation(line: 58, column: 5, scope: !9155)
!9196 = !DILocation(line: 58, column: 15, scope: !9155)
!9197 = !DILocation(line: 59, column: 2, scope: !9155)
!9198 = !DILocation(line: 59, column: 5, scope: !9155)
!9199 = !DILocation(line: 59, column: 9, scope: !9155)
!9200 = !DILocation(line: 59, column: 15, scope: !9155)
!9201 = !DILocation(line: 60, column: 2, scope: !9155)
!9202 = !DILocation(line: 60, column: 5, scope: !9155)
!9203 = !DILocation(line: 60, column: 9, scope: !9155)
!9204 = !DILocation(line: 60, column: 13, scope: !9155)
!9205 = !DILocation(line: 61, column: 2, scope: !9155)
!9206 = !DILocation(line: 61, column: 5, scope: !9155)
!9207 = !DILocation(line: 61, column: 9, scope: !9155)
!9208 = !DILocation(line: 61, column: 15, scope: !9155)
!9209 = !DILocation(line: 63, column: 17, scope: !9155)
!9210 = !DILocation(line: 63, column: 20, scope: !9155)
!9211 = !DILocation(line: 63, column: 2, scope: !9155)
!9212 = !DILocation(line: 65, column: 10, scope: !9155)
!9213 = !DILocation(line: 65, column: 13, scope: !9155)
!9214 = !DILocation(line: 65, column: 2, scope: !9155)
!9215 = !DILocation(line: 66, column: 1, scope: !9155)
!9216 = distinct !DISubprogram(name: "pci_bus_update_busn_res_end", scope: !3, file: !3, line: 3064, type: !7982, scopeLine: 3065, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9217 = !DILocalVariable(name: "b", arg: 1, scope: !9216, file: !3, line: 3064, type: !234)
!9218 = !DILocation(line: 3064, column: 49, scope: !9216)
!9219 = !DILocalVariable(name: "bus_max", arg: 2, scope: !9216, file: !3, line: 3064, type: !232)
!9220 = !DILocation(line: 3064, column: 56, scope: !9216)
!9221 = !DILocalVariable(name: "res", scope: !9216, file: !3, line: 3066, type: !4132)
!9222 = !DILocation(line: 3066, column: 19, scope: !9216)
!9223 = !DILocation(line: 3066, column: 26, scope: !9216)
!9224 = !DILocation(line: 3066, column: 29, scope: !9216)
!9225 = !DILocalVariable(name: "old_res", scope: !9216, file: !3, line: 3067, type: !4122)
!9226 = !DILocation(line: 3067, column: 18, scope: !9216)
!9227 = !DILocation(line: 3067, column: 29, scope: !9216)
!9228 = !DILocation(line: 3067, column: 28, scope: !9216)
!9229 = !DILocalVariable(name: "size", scope: !9216, file: !3, line: 3068, type: !4126)
!9230 = !DILocation(line: 3068, column: 18, scope: !9216)
!9231 = !DILocalVariable(name: "ret", scope: !9216, file: !3, line: 3069, type: !232)
!9232 = !DILocation(line: 3069, column: 6, scope: !9216)
!9233 = !DILocation(line: 3071, column: 6, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 3071, column: 6)
!9235 = !DILocation(line: 3071, column: 11, scope: !9234)
!9236 = !DILocation(line: 3071, column: 19, scope: !9234)
!9237 = !DILocation(line: 3071, column: 17, scope: !9234)
!9238 = !DILocation(line: 3071, column: 6, scope: !9216)
!9239 = !DILocation(line: 3072, column: 3, scope: !9234)
!9240 = !DILocation(line: 3074, column: 9, scope: !9216)
!9241 = !DILocation(line: 3074, column: 19, scope: !9216)
!9242 = !DILocation(line: 3074, column: 24, scope: !9216)
!9243 = !DILocation(line: 3074, column: 17, scope: !9216)
!9244 = !DILocation(line: 3074, column: 30, scope: !9216)
!9245 = !DILocation(line: 3074, column: 7, scope: !9216)
!9246 = !DILocation(line: 3075, column: 24, scope: !9216)
!9247 = !DILocation(line: 3075, column: 29, scope: !9216)
!9248 = !DILocation(line: 3075, column: 34, scope: !9216)
!9249 = !DILocation(line: 3075, column: 41, scope: !9216)
!9250 = !DILocation(line: 3075, column: 8, scope: !9216)
!9251 = !DILocation(line: 3075, column: 6, scope: !9216)
!9252 = !DILocation(line: 3076, column: 2, scope: !9216)
!9253 = !DILocation(line: 3079, column: 7, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 3079, column: 6)
!9255 = !DILocation(line: 3079, column: 11, scope: !9254)
!9256 = !DILocation(line: 3079, column: 15, scope: !9254)
!9257 = !DILocation(line: 3079, column: 20, scope: !9254)
!9258 = !DILocation(line: 3079, column: 6, scope: !9216)
!9259 = !DILocation(line: 3080, column: 27, scope: !9254)
!9260 = !DILocation(line: 3080, column: 30, scope: !9254)
!9261 = !DILocation(line: 3080, column: 35, scope: !9254)
!9262 = !DILocation(line: 3080, column: 42, scope: !9254)
!9263 = !DILocation(line: 3080, column: 47, scope: !9254)
!9264 = !DILocation(line: 3080, column: 3, scope: !9254)
!9265 = !DILocation(line: 3082, column: 9, scope: !9216)
!9266 = !DILocation(line: 3082, column: 2, scope: !9216)
!9267 = !DILocation(line: 3083, column: 1, scope: !9216)
!9268 = distinct !DISubprogram(name: "pci_bus_release_busn_res", scope: !3, file: !3, line: 3085, type: !4241, scopeLine: 3086, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9269 = !DILocalVariable(name: "b", arg: 1, scope: !9268, file: !3, line: 3085, type: !234)
!9270 = !DILocation(line: 3085, column: 47, scope: !9268)
!9271 = !DILocalVariable(name: "res", scope: !9268, file: !3, line: 3087, type: !4132)
!9272 = !DILocation(line: 3087, column: 19, scope: !9268)
!9273 = !DILocation(line: 3087, column: 26, scope: !9268)
!9274 = !DILocation(line: 3087, column: 29, scope: !9268)
!9275 = !DILocalVariable(name: "ret", scope: !9268, file: !3, line: 3088, type: !232)
!9276 = !DILocation(line: 3088, column: 6, scope: !9268)
!9277 = !DILocation(line: 3090, column: 7, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3090, column: 6)
!9279 = !DILocation(line: 3090, column: 12, scope: !9278)
!9280 = !DILocation(line: 3090, column: 18, scope: !9278)
!9281 = !DILocation(line: 3090, column: 22, scope: !9278)
!9282 = !DILocation(line: 3090, column: 27, scope: !9278)
!9283 = !DILocation(line: 3090, column: 6, scope: !9268)
!9284 = !DILocation(line: 3091, column: 3, scope: !9278)
!9285 = !DILocation(line: 3093, column: 25, scope: !9268)
!9286 = !DILocation(line: 3093, column: 8, scope: !9268)
!9287 = !DILocation(line: 3093, column: 6, scope: !9268)
!9288 = !DILocation(line: 3094, column: 2, scope: !9268)
!9289 = !DILocation(line: 3096, column: 1, scope: !9268)
!9290 = distinct !DISubprogram(name: "pci_scan_root_bus", scope: !3, file: !3, line: 3138, type: !8576, scopeLine: 3140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9291 = !DILocalVariable(name: "parent", arg: 1, scope: !9290, file: !3, line: 3138, type: !3551)
!9292 = !DILocation(line: 3138, column: 50, scope: !9290)
!9293 = !DILocalVariable(name: "bus", arg: 2, scope: !9290, file: !3, line: 3138, type: !232)
!9294 = !DILocation(line: 3138, column: 62, scope: !9290)
!9295 = !DILocalVariable(name: "ops", arg: 3, scope: !9290, file: !3, line: 3139, type: !4232)
!9296 = !DILocation(line: 3139, column: 19, scope: !9290)
!9297 = !DILocalVariable(name: "sysdata", arg: 4, scope: !9290, file: !3, line: 3139, type: !222)
!9298 = !DILocation(line: 3139, column: 30, scope: !9290)
!9299 = !DILocalVariable(name: "resources", arg: 5, scope: !9290, file: !3, line: 3139, type: !241)
!9300 = !DILocation(line: 3139, column: 57, scope: !9290)
!9301 = !DILocalVariable(name: "window", scope: !9290, file: !3, line: 3141, type: !4355)
!9302 = !DILocation(line: 3141, column: 25, scope: !9290)
!9303 = !DILocalVariable(name: "found", scope: !9290, file: !3, line: 3142, type: !576)
!9304 = !DILocation(line: 3142, column: 7, scope: !9290)
!9305 = !DILocalVariable(name: "b", scope: !9290, file: !3, line: 3143, type: !234)
!9306 = !DILocation(line: 3143, column: 18, scope: !9290)
!9307 = !DILocalVariable(name: "max", scope: !9290, file: !3, line: 3144, type: !232)
!9308 = !DILocation(line: 3144, column: 6, scope: !9290)
!9309 = !DILocalVariable(name: "__mptr", scope: !9310, file: !3, line: 3146, type: !222)
!9310 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 3146, column: 2)
!9311 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 3146, column: 2)
!9312 = !DILocation(line: 3146, column: 2, scope: !9310)
!9313 = !DILocation(line: 3146, column: 2, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 3146, column: 2)
!9315 = !DILocation(line: 3146, column: 2, scope: !9311)
!9316 = !DILocation(line: 3146, column: 2, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 3146, column: 2)
!9318 = !DILocation(line: 3147, column: 7, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 3147, column: 7)
!9320 = !DILocation(line: 3147, column: 15, scope: !9319)
!9321 = !DILocation(line: 3147, column: 20, scope: !9319)
!9322 = !DILocation(line: 3147, column: 26, scope: !9319)
!9323 = !DILocation(line: 3147, column: 7, scope: !9317)
!9324 = !DILocation(line: 3148, column: 10, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9319, file: !3, line: 3147, column: 44)
!9326 = !DILocation(line: 3149, column: 4, scope: !9325)
!9327 = !DILocation(line: 3147, column: 28, scope: !9319)
!9328 = !DILocalVariable(name: "__mptr", scope: !9329, file: !3, line: 3146, type: !222)
!9329 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 3146, column: 2)
!9330 = !DILocation(line: 3146, column: 2, scope: !9329)
!9331 = !DILocation(line: 3146, column: 2, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 3146, column: 2)
!9333 = distinct !{!9333, !9315, !9334}
!9334 = !DILocation(line: 3150, column: 3, scope: !9311)
!9335 = !DILocation(line: 3152, column: 26, scope: !9290)
!9336 = !DILocation(line: 3152, column: 34, scope: !9290)
!9337 = !DILocation(line: 3152, column: 39, scope: !9290)
!9338 = !DILocation(line: 3152, column: 44, scope: !9290)
!9339 = !DILocation(line: 3152, column: 53, scope: !9290)
!9340 = !DILocation(line: 3152, column: 6, scope: !9290)
!9341 = !DILocation(line: 3152, column: 4, scope: !9290)
!9342 = !DILocation(line: 3153, column: 7, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 3153, column: 6)
!9344 = !DILocation(line: 3153, column: 6, scope: !9290)
!9345 = !DILocation(line: 3154, column: 3, scope: !9343)
!9346 = !DILocation(line: 3156, column: 7, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 3156, column: 6)
!9348 = !DILocation(line: 3156, column: 6, scope: !9290)
!9349 = !DILocation(line: 3157, column: 3, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 3156, column: 14)
!9351 = !DILocation(line: 3160, column: 27, scope: !9350)
!9352 = !DILocation(line: 3160, column: 30, scope: !9350)
!9353 = !DILocation(line: 3160, column: 3, scope: !9350)
!9354 = !DILocation(line: 3161, column: 2, scope: !9350)
!9355 = !DILocation(line: 3163, column: 27, scope: !9290)
!9356 = !DILocation(line: 3163, column: 8, scope: !9290)
!9357 = !DILocation(line: 3163, column: 6, scope: !9290)
!9358 = !DILocation(line: 3165, column: 7, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 3165, column: 6)
!9360 = !DILocation(line: 3165, column: 6, scope: !9290)
!9361 = !DILocation(line: 3166, column: 31, scope: !9359)
!9362 = !DILocation(line: 3166, column: 34, scope: !9359)
!9363 = !DILocation(line: 3166, column: 3, scope: !9359)
!9364 = !DILocation(line: 3168, column: 9, scope: !9290)
!9365 = !DILocation(line: 3168, column: 2, scope: !9290)
!9366 = !DILocation(line: 3169, column: 1, scope: !9290)
!9367 = distinct !DISubprogram(name: "pci_scan_bus", scope: !3, file: !3, line: 3172, type: !9368, scopeLine: 3174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9368 = !DISubroutineType(types: !9369)
!9369 = !{!234, !232, !4232, !222}
!9370 = !DILocalVariable(name: "bus", arg: 1, scope: !9367, file: !3, line: 3172, type: !232)
!9371 = !DILocation(line: 3172, column: 34, scope: !9367)
!9372 = !DILocalVariable(name: "ops", arg: 2, scope: !9367, file: !3, line: 3172, type: !4232)
!9373 = !DILocation(line: 3172, column: 55, scope: !9367)
!9374 = !DILocalVariable(name: "sysdata", arg: 3, scope: !9367, file: !3, line: 3173, type: !222)
!9375 = !DILocation(line: 3173, column: 12, scope: !9367)
!9376 = !DILocalVariable(name: "resources", scope: !9367, file: !3, line: 3175, type: !238)
!9377 = !DILocation(line: 3175, column: 2, scope: !9367)
!9378 = !DILocalVariable(name: "b", scope: !9367, file: !3, line: 3176, type: !234)
!9379 = !DILocation(line: 3176, column: 18, scope: !9367)
!9380 = !DILocation(line: 3178, column: 2, scope: !9367)
!9381 = !DILocation(line: 3179, column: 2, scope: !9367)
!9382 = !DILocation(line: 3180, column: 2, scope: !9367)
!9383 = !DILocation(line: 3181, column: 32, scope: !9367)
!9384 = !DILocation(line: 3181, column: 37, scope: !9367)
!9385 = !DILocation(line: 3181, column: 42, scope: !9367)
!9386 = !DILocation(line: 3181, column: 6, scope: !9367)
!9387 = !DILocation(line: 3181, column: 4, scope: !9367)
!9388 = !DILocation(line: 3182, column: 6, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 3182, column: 6)
!9390 = !DILocation(line: 3182, column: 6, scope: !9367)
!9391 = !DILocation(line: 3183, column: 22, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 3182, column: 9)
!9393 = !DILocation(line: 3183, column: 3, scope: !9392)
!9394 = !DILocation(line: 3184, column: 2, scope: !9392)
!9395 = !DILocation(line: 3185, column: 3, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 3184, column: 9)
!9397 = !DILocation(line: 3187, column: 9, scope: !9367)
!9398 = !DILocation(line: 3187, column: 2, scope: !9367)
!9399 = distinct !DISubprogram(name: "pci_rescan_bus_bridge_resize", scope: !3, file: !3, line: 3202, type: !9400, scopeLine: 3203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{!7, !247}
!9402 = !DILocalVariable(name: "bridge", arg: 1, scope: !9399, file: !3, line: 3202, type: !247)
!9403 = !DILocation(line: 3202, column: 59, scope: !9399)
!9404 = !DILocalVariable(name: "max", scope: !9399, file: !3, line: 3204, type: !7)
!9405 = !DILocation(line: 3204, column: 15, scope: !9399)
!9406 = !DILocalVariable(name: "bus", scope: !9399, file: !3, line: 3205, type: !234)
!9407 = !DILocation(line: 3205, column: 18, scope: !9399)
!9408 = !DILocation(line: 3205, column: 24, scope: !9399)
!9409 = !DILocation(line: 3205, column: 32, scope: !9399)
!9410 = !DILocation(line: 3207, column: 27, scope: !9399)
!9411 = !DILocation(line: 3207, column: 8, scope: !9399)
!9412 = !DILocation(line: 3207, column: 6, scope: !9399)
!9413 = !DILocation(line: 3209, column: 41, scope: !9399)
!9414 = !DILocation(line: 3209, column: 2, scope: !9399)
!9415 = !DILocation(line: 3211, column: 22, scope: !9399)
!9416 = !DILocation(line: 3211, column: 2, scope: !9399)
!9417 = !DILocation(line: 3213, column: 9, scope: !9399)
!9418 = !DILocation(line: 3213, column: 2, scope: !9399)
!9419 = distinct !DISubprogram(name: "pci_rescan_bus", scope: !3, file: !3, line: 3225, type: !8278, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9420 = !DILocalVariable(name: "bus", arg: 1, scope: !9419, file: !3, line: 3225, type: !234)
!9421 = !DILocation(line: 3225, column: 45, scope: !9419)
!9422 = !DILocalVariable(name: "max", scope: !9419, file: !3, line: 3227, type: !7)
!9423 = !DILocation(line: 3227, column: 15, scope: !9419)
!9424 = !DILocation(line: 3229, column: 27, scope: !9419)
!9425 = !DILocation(line: 3229, column: 8, scope: !9419)
!9426 = !DILocation(line: 3229, column: 6, scope: !9419)
!9427 = !DILocation(line: 3230, column: 38, scope: !9419)
!9428 = !DILocation(line: 3230, column: 2, scope: !9419)
!9429 = !DILocation(line: 3231, column: 22, scope: !9419)
!9430 = !DILocation(line: 3231, column: 2, scope: !9419)
!9431 = !DILocation(line: 3233, column: 9, scope: !9419)
!9432 = !DILocation(line: 3233, column: 2, scope: !9419)
!9433 = distinct !DISubprogram(name: "pci_lock_rescan_remove", scope: !3, file: !3, line: 3243, type: !1963, scopeLine: 3244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9434 = !DILocation(line: 3245, column: 2, scope: !9433)
!9435 = !DILocation(line: 3246, column: 1, scope: !9433)
!9436 = distinct !DISubprogram(name: "pci_unlock_rescan_remove", scope: !3, file: !3, line: 3249, type: !1963, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9437 = !DILocation(line: 3251, column: 2, scope: !9436)
!9438 = !DILocation(line: 3252, column: 1, scope: !9436)
!9439 = distinct !DISubprogram(name: "pci_sort_breadthfirst", scope: !3, file: !3, line: 3273, type: !1963, scopeLine: 3274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9440 = !DILocation(line: 3275, column: 2, scope: !9439)
!9441 = !DILocation(line: 3276, column: 1, scope: !9439)
!9442 = distinct !DISubprogram(name: "pci_sort_bf_cmp", scope: !3, file: !3, line: 3255, type: !9443, scopeLine: 3257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9443 = !DISubroutineType(types: !9444)
!9444 = !{!232, !3796, !3796}
!9445 = !DILocalVariable(name: "d_a", arg: 1, scope: !9442, file: !3, line: 3255, type: !3796)
!9446 = !DILocation(line: 3255, column: 56, scope: !9442)
!9447 = !DILocalVariable(name: "d_b", arg: 2, scope: !9442, file: !3, line: 3256, type: !3796)
!9448 = !DILocation(line: 3256, column: 28, scope: !9442)
!9449 = !DILocalVariable(name: "a", scope: !9442, file: !3, line: 3258, type: !4383)
!9450 = !DILocation(line: 3258, column: 24, scope: !9442)
!9451 = !DILocalVariable(name: "__mptr", scope: !9452, file: !3, line: 3258, type: !222)
!9452 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 3258, column: 28)
!9453 = !DILocation(line: 3258, column: 28, scope: !9452)
!9454 = !DILocation(line: 3258, column: 28, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 3258, column: 28)
!9456 = !DILocalVariable(name: "b", scope: !9442, file: !3, line: 3259, type: !4383)
!9457 = !DILocation(line: 3259, column: 24, scope: !9442)
!9458 = !DILocalVariable(name: "__mptr", scope: !9459, file: !3, line: 3259, type: !222)
!9459 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 3259, column: 28)
!9460 = !DILocation(line: 3259, column: 28, scope: !9459)
!9461 = !DILocation(line: 3259, column: 28, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 3259, column: 28)
!9463 = !DILocation(line: 3261, column: 25, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 3261, column: 11)
!9465 = !DILocation(line: 3261, column: 28, scope: !9464)
!9466 = !DILocation(line: 3261, column: 11, scope: !9464)
!9467 = !DILocation(line: 3261, column: 49, scope: !9464)
!9468 = !DILocation(line: 3261, column: 52, scope: !9464)
!9469 = !DILocation(line: 3261, column: 35, scope: !9464)
!9470 = !DILocation(line: 3261, column: 33, scope: !9464)
!9471 = !DILocation(line: 3261, column: 11, scope: !9442)
!9472 = !DILocation(line: 3261, column: 58, scope: !9464)
!9473 = !DILocation(line: 3262, column: 25, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9464, file: !3, line: 3262, column: 11)
!9475 = !DILocation(line: 3262, column: 28, scope: !9474)
!9476 = !DILocation(line: 3262, column: 11, scope: !9474)
!9477 = !DILocation(line: 3262, column: 49, scope: !9474)
!9478 = !DILocation(line: 3262, column: 52, scope: !9474)
!9479 = !DILocation(line: 3262, column: 35, scope: !9474)
!9480 = !DILocation(line: 3262, column: 33, scope: !9474)
!9481 = !DILocation(line: 3262, column: 11, scope: !9464)
!9482 = !DILocation(line: 3262, column: 58, scope: !9474)
!9483 = !DILocation(line: 3264, column: 11, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 3264, column: 11)
!9485 = !DILocation(line: 3264, column: 14, scope: !9484)
!9486 = !DILocation(line: 3264, column: 19, scope: !9484)
!9487 = !DILocation(line: 3264, column: 28, scope: !9484)
!9488 = !DILocation(line: 3264, column: 31, scope: !9484)
!9489 = !DILocation(line: 3264, column: 36, scope: !9484)
!9490 = !DILocation(line: 3264, column: 26, scope: !9484)
!9491 = !DILocation(line: 3264, column: 11, scope: !9442)
!9492 = !DILocation(line: 3264, column: 44, scope: !9484)
!9493 = !DILocation(line: 3265, column: 11, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 3265, column: 11)
!9495 = !DILocation(line: 3265, column: 14, scope: !9494)
!9496 = !DILocation(line: 3265, column: 19, scope: !9494)
!9497 = !DILocation(line: 3265, column: 28, scope: !9494)
!9498 = !DILocation(line: 3265, column: 31, scope: !9494)
!9499 = !DILocation(line: 3265, column: 36, scope: !9494)
!9500 = !DILocation(line: 3265, column: 26, scope: !9494)
!9501 = !DILocation(line: 3265, column: 11, scope: !9484)
!9502 = !DILocation(line: 3265, column: 44, scope: !9494)
!9503 = !DILocation(line: 3267, column: 11, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 3267, column: 11)
!9505 = !DILocation(line: 3267, column: 14, scope: !9504)
!9506 = !DILocation(line: 3267, column: 22, scope: !9504)
!9507 = !DILocation(line: 3267, column: 25, scope: !9504)
!9508 = !DILocation(line: 3267, column: 20, scope: !9504)
!9509 = !DILocation(line: 3267, column: 11, scope: !9442)
!9510 = !DILocation(line: 3267, column: 32, scope: !9504)
!9511 = !DILocation(line: 3268, column: 11, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 3268, column: 11)
!9513 = !DILocation(line: 3268, column: 14, scope: !9512)
!9514 = !DILocation(line: 3268, column: 22, scope: !9512)
!9515 = !DILocation(line: 3268, column: 25, scope: !9512)
!9516 = !DILocation(line: 3268, column: 20, scope: !9512)
!9517 = !DILocation(line: 3268, column: 11, scope: !9504)
!9518 = !DILocation(line: 3268, column: 32, scope: !9512)
!9519 = !DILocation(line: 3270, column: 2, scope: !9442)
!9520 = !DILocation(line: 3271, column: 1, scope: !9442)
!9521 = distinct !DISubprogram(name: "pci_hp_add_bridge", scope: !3, file: !3, line: 3278, type: !3512, scopeLine: 3279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9522 = !DILocalVariable(name: "dev", arg: 1, scope: !9521, file: !3, line: 3278, type: !247)
!9523 = !DILocation(line: 3278, column: 39, scope: !9521)
!9524 = !DILocalVariable(name: "parent", scope: !9521, file: !3, line: 3280, type: !234)
!9525 = !DILocation(line: 3280, column: 18, scope: !9521)
!9526 = !DILocation(line: 3280, column: 27, scope: !9521)
!9527 = !DILocation(line: 3280, column: 32, scope: !9521)
!9528 = !DILocalVariable(name: "busnr", scope: !9521, file: !3, line: 3281, type: !232)
!9529 = !DILocation(line: 3281, column: 6, scope: !9521)
!9530 = !DILocalVariable(name: "start", scope: !9521, file: !3, line: 3281, type: !232)
!9531 = !DILocation(line: 3281, column: 13, scope: !9521)
!9532 = !DILocation(line: 3281, column: 21, scope: !9521)
!9533 = !DILocation(line: 3281, column: 29, scope: !9521)
!9534 = !DILocation(line: 3281, column: 38, scope: !9521)
!9535 = !DILocalVariable(name: "available_buses", scope: !9521, file: !3, line: 3282, type: !7)
!9536 = !DILocation(line: 3282, column: 15, scope: !9521)
!9537 = !DILocalVariable(name: "end", scope: !9521, file: !3, line: 3283, type: !232)
!9538 = !DILocation(line: 3283, column: 6, scope: !9521)
!9539 = !DILocation(line: 3283, column: 12, scope: !9521)
!9540 = !DILocation(line: 3283, column: 20, scope: !9521)
!9541 = !DILocation(line: 3283, column: 29, scope: !9521)
!9542 = !DILocation(line: 3285, column: 15, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 3285, column: 2)
!9544 = !DILocation(line: 3285, column: 13, scope: !9543)
!9545 = !DILocation(line: 3285, column: 7, scope: !9543)
!9546 = !DILocation(line: 3285, column: 22, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 3285, column: 2)
!9548 = !DILocation(line: 3285, column: 31, scope: !9547)
!9549 = !DILocation(line: 3285, column: 28, scope: !9547)
!9550 = !DILocation(line: 3285, column: 2, scope: !9543)
!9551 = !DILocation(line: 3286, column: 35, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9553, file: !3, line: 3286, column: 7)
!9553 = distinct !DILexicalBlock(scope: !9547, file: !3, line: 3285, column: 45)
!9554 = !DILocation(line: 3286, column: 21, scope: !9552)
!9555 = !DILocation(line: 3286, column: 44, scope: !9552)
!9556 = !DILocation(line: 3286, column: 8, scope: !9552)
!9557 = !DILocation(line: 3286, column: 7, scope: !9553)
!9558 = !DILocation(line: 3287, column: 4, scope: !9552)
!9559 = !DILocation(line: 3288, column: 2, scope: !9553)
!9560 = !DILocation(line: 3285, column: 41, scope: !9547)
!9561 = !DILocation(line: 3285, column: 2, scope: !9547)
!9562 = distinct !{!9562, !9550, !9563}
!9563 = !DILocation(line: 3288, column: 2, scope: !9543)
!9564 = !DILocation(line: 3289, column: 11, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 3289, column: 6)
!9566 = !DILocation(line: 3289, column: 16, scope: !9565)
!9567 = !DILocation(line: 3289, column: 14, scope: !9565)
!9568 = !DILocation(line: 3289, column: 6, scope: !9521)
!9569 = !DILocation(line: 3290, column: 3, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 3289, column: 21)
!9571 = !DILocation(line: 3291, column: 3, scope: !9570)
!9572 = !DILocation(line: 3295, column: 26, scope: !9521)
!9573 = !DILocation(line: 3295, column: 34, scope: !9521)
!9574 = !DILocation(line: 3295, column: 39, scope: !9521)
!9575 = !DILocation(line: 3295, column: 10, scope: !9521)
!9576 = !DILocation(line: 3295, column: 8, scope: !9521)
!9577 = !DILocation(line: 3301, column: 20, scope: !9521)
!9578 = !DILocation(line: 3301, column: 26, scope: !9521)
!9579 = !DILocation(line: 3301, column: 24, scope: !9521)
!9580 = !DILocation(line: 3301, column: 18, scope: !9521)
!9581 = !DILocation(line: 3304, column: 25, scope: !9521)
!9582 = !DILocation(line: 3304, column: 33, scope: !9521)
!9583 = !DILocation(line: 3304, column: 38, scope: !9521)
!9584 = !DILocation(line: 3304, column: 45, scope: !9521)
!9585 = !DILocation(line: 3304, column: 2, scope: !9521)
!9586 = !DILocation(line: 3306, column: 7, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 3306, column: 6)
!9588 = !DILocation(line: 3306, column: 12, scope: !9587)
!9589 = !DILocation(line: 3306, column: 6, scope: !9521)
!9590 = !DILocation(line: 3307, column: 3, scope: !9587)
!9591 = !DILocation(line: 3309, column: 2, scope: !9521)
!9592 = !DILocation(line: 3310, column: 1, scope: !9521)
!9593 = distinct !DISubprogram(name: "release_pcibus_dev", scope: !3, file: !3, line: 88, type: !3578, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9594 = !DILocalVariable(name: "dev", arg: 1, scope: !9593, file: !3, line: 88, type: !3551)
!9595 = !DILocation(line: 88, column: 47, scope: !9593)
!9596 = !DILocalVariable(name: "pci_bus", scope: !9593, file: !3, line: 90, type: !234)
!9597 = !DILocation(line: 90, column: 18, scope: !9593)
!9598 = !DILocalVariable(name: "__mptr", scope: !9599, file: !3, line: 90, type: !222)
!9599 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 90, column: 28)
!9600 = !DILocation(line: 90, column: 28, scope: !9599)
!9601 = !DILocation(line: 90, column: 28, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 90, column: 28)
!9603 = !DILocation(line: 92, column: 13, scope: !9593)
!9604 = !DILocation(line: 92, column: 22, scope: !9593)
!9605 = !DILocation(line: 92, column: 2, scope: !9593)
!9606 = !DILocation(line: 93, column: 27, scope: !9593)
!9607 = !DILocation(line: 93, column: 2, scope: !9593)
!9608 = !DILocation(line: 94, column: 26, scope: !9593)
!9609 = !DILocation(line: 94, column: 2, scope: !9593)
!9610 = !DILocation(line: 95, column: 8, scope: !9593)
!9611 = !DILocation(line: 95, column: 2, scope: !9593)
!9612 = !DILocation(line: 96, column: 1, scope: !9593)
!9613 = distinct !DISubprogram(name: "dev_name", scope: !73, file: !73, line: 609, type: !9614, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9614 = !DISubroutineType(types: !9615)
!9615 = !{!309, !3796}
!9616 = !DILocalVariable(name: "dev", arg: 1, scope: !9613, file: !73, line: 609, type: !3796)
!9617 = !DILocation(line: 609, column: 57, scope: !9613)
!9618 = !DILocation(line: 612, column: 6, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9613, file: !73, line: 612, column: 6)
!9620 = !DILocation(line: 612, column: 11, scope: !9619)
!9621 = !DILocation(line: 612, column: 6, scope: !9613)
!9622 = !DILocation(line: 613, column: 10, scope: !9619)
!9623 = !DILocation(line: 613, column: 15, scope: !9619)
!9624 = !DILocation(line: 613, column: 3, scope: !9619)
!9625 = !DILocation(line: 615, column: 23, scope: !9613)
!9626 = !DILocation(line: 615, column: 28, scope: !9613)
!9627 = !DILocation(line: 615, column: 9, scope: !9613)
!9628 = !DILocation(line: 615, column: 2, scope: !9613)
!9629 = !DILocation(line: 616, column: 1, scope: !9613)
!9630 = distinct !DISubprogram(name: "kobject_name", scope: !315, file: !315, line: 88, type: !9631, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9631 = !DISubroutineType(types: !9632)
!9632 = !{!309, !9633}
!9633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9634, size: 64)
!9634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!9635 = !DILocalVariable(name: "kobj", arg: 1, scope: !9630, file: !315, line: 88, type: !9633)
!9636 = !DILocation(line: 88, column: 62, scope: !9630)
!9637 = !DILocation(line: 90, column: 9, scope: !9630)
!9638 = !DILocation(line: 90, column: 15, scope: !9630)
!9639 = !DILocation(line: 90, column: 2, scope: !9630)
!9640 = distinct !DISubprogram(name: "get_order", scope: !9641, file: !9641, line: 29, type: !9642, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9641 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!9642 = !DISubroutineType(types: !9643)
!9643 = !{!232, !418}
!9644 = !DILocalVariable(name: "x", arg: 1, scope: !9645, file: !9646, line: 366, type: !228)
!9645 = distinct !DISubprogram(name: "fls64", scope: !9646, file: !9646, line: 366, type: !9647, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9646 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9647 = !DISubroutineType(types: !9648)
!9648 = !{!232, !228}
!9649 = !DILocation(line: 366, column: 40, scope: !9645, inlinedAt: !9650)
!9650 = distinct !DILocation(line: 46, column: 9, scope: !9640)
!9651 = !DILocalVariable(name: "bitpos", scope: !9645, file: !9646, line: 368, type: !232)
!9652 = !DILocation(line: 368, column: 6, scope: !9645, inlinedAt: !9650)
!9653 = !DILocalVariable(name: "size", arg: 1, scope: !9640, file: !9641, line: 29, type: !418)
!9654 = !DILocation(line: 29, column: 63, scope: !9640)
!9655 = !DILocation(line: 31, column: 27, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9640, file: !9641, line: 31, column: 6)
!9657 = !DILocation(line: 31, column: 6, scope: !9656)
!9658 = !DILocation(line: 31, column: 6, scope: !9640)
!9659 = !DILocation(line: 32, column: 8, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9661, file: !9641, line: 32, column: 7)
!9661 = distinct !DILexicalBlock(scope: !9656, file: !9641, line: 31, column: 34)
!9662 = !DILocation(line: 32, column: 7, scope: !9661)
!9663 = !DILocation(line: 33, column: 4, scope: !9660)
!9664 = !DILocation(line: 35, column: 7, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9661, file: !9641, line: 35, column: 7)
!9666 = !DILocation(line: 35, column: 12, scope: !9665)
!9667 = !DILocation(line: 35, column: 7, scope: !9661)
!9668 = !DILocation(line: 36, column: 4, scope: !9665)
!9669 = !DILocation(line: 38, column: 10, scope: !9661)
!9670 = !DILocation(line: 38, column: 28, scope: !9661)
!9671 = !DILocation(line: 38, column: 41, scope: !9661)
!9672 = !DILocation(line: 38, column: 3, scope: !9661)
!9673 = !DILocation(line: 41, column: 6, scope: !9640)
!9674 = !DILocation(line: 42, column: 7, scope: !9640)
!9675 = !DILocation(line: 46, column: 15, scope: !9640)
!9676 = !DILocation(line: 374, column: 2, scope: !9645, inlinedAt: !9650)
!9677 = !DILocation(line: 376, column: 14, scope: !9645, inlinedAt: !9650)
!9678 = !{i32 325127}
!9679 = !DILocation(line: 377, column: 9, scope: !9645, inlinedAt: !9650)
!9680 = !DILocation(line: 377, column: 16, scope: !9645, inlinedAt: !9650)
!9681 = !DILocation(line: 46, column: 2, scope: !9640)
!9682 = !DILocation(line: 48, column: 1, scope: !9640)
!9683 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9684, file: !9684, line: 30, type: !9685, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9684 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9685 = !DISubroutineType(types: !9686)
!9686 = !{!232, !227}
!9687 = !DILocation(line: 366, column: 40, scope: !9645, inlinedAt: !9688)
!9688 = distinct !DILocation(line: 32, column: 9, scope: !9683)
!9689 = !DILocation(line: 368, column: 6, scope: !9645, inlinedAt: !9688)
!9690 = !DILocalVariable(name: "n", arg: 1, scope: !9683, file: !9684, line: 30, type: !227)
!9691 = !DILocation(line: 30, column: 21, scope: !9683)
!9692 = !DILocation(line: 32, column: 15, scope: !9683)
!9693 = !DILocation(line: 374, column: 2, scope: !9645, inlinedAt: !9688)
!9694 = !DILocation(line: 376, column: 14, scope: !9645, inlinedAt: !9688)
!9695 = !DILocation(line: 377, column: 9, scope: !9645, inlinedAt: !9688)
!9696 = !DILocation(line: 377, column: 16, scope: !9645, inlinedAt: !9688)
!9697 = !DILocation(line: 32, column: 18, scope: !9683)
!9698 = !DILocation(line: 32, column: 2, scope: !9683)
!9699 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !9700, file: !9700, line: 137, type: !9701, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9700 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!9701 = !DISubroutineType(types: !9702)
!9702 = !{!222, !1021, !2212, !415, !230}
!9703 = !DILocalVariable(name: "s", arg: 1, scope: !9699, file: !9700, line: 137, type: !1021)
!9704 = !DILocation(line: 137, column: 54, scope: !9699)
!9705 = !DILocalVariable(name: "object", arg: 2, scope: !9699, file: !9700, line: 137, type: !2212)
!9706 = !DILocation(line: 137, column: 69, scope: !9699)
!9707 = !DILocalVariable(name: "size", arg: 3, scope: !9699, file: !9700, line: 138, type: !415)
!9708 = !DILocation(line: 138, column: 12, scope: !9699)
!9709 = !DILocalVariable(name: "flags", arg: 4, scope: !9699, file: !9700, line: 138, type: !230)
!9710 = !DILocation(line: 138, column: 24, scope: !9699)
!9711 = !DILocation(line: 140, column: 17, scope: !9699)
!9712 = !DILocation(line: 140, column: 2, scope: !9699)
!9713 = distinct !DISubprogram(name: "pci_alloc_bus", scope: !3, file: !3, line: 546, type: !9714, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{!234, !234}
!9716 = !DILocalVariable(name: "parent", arg: 1, scope: !9713, file: !3, line: 546, type: !234)
!9717 = !DILocation(line: 546, column: 54, scope: !9713)
!9718 = !DILocalVariable(name: "b", scope: !9713, file: !3, line: 548, type: !234)
!9719 = !DILocation(line: 548, column: 18, scope: !9713)
!9720 = !DILocation(line: 550, column: 6, scope: !9713)
!9721 = !DILocation(line: 550, column: 4, scope: !9713)
!9722 = !DILocation(line: 551, column: 7, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9713, file: !3, line: 551, column: 6)
!9724 = !DILocation(line: 551, column: 6, scope: !9713)
!9725 = !DILocation(line: 552, column: 3, scope: !9723)
!9726 = !DILocation(line: 554, column: 18, scope: !9713)
!9727 = !DILocation(line: 554, column: 21, scope: !9713)
!9728 = !DILocation(line: 554, column: 2, scope: !9713)
!9729 = !DILocation(line: 555, column: 18, scope: !9713)
!9730 = !DILocation(line: 555, column: 21, scope: !9713)
!9731 = !DILocation(line: 555, column: 2, scope: !9713)
!9732 = !DILocation(line: 556, column: 18, scope: !9713)
!9733 = !DILocation(line: 556, column: 21, scope: !9713)
!9734 = !DILocation(line: 556, column: 2, scope: !9713)
!9735 = !DILocation(line: 557, column: 18, scope: !9713)
!9736 = !DILocation(line: 557, column: 21, scope: !9713)
!9737 = !DILocation(line: 557, column: 2, scope: !9713)
!9738 = !DILocation(line: 558, column: 18, scope: !9713)
!9739 = !DILocation(line: 558, column: 21, scope: !9713)
!9740 = !DILocation(line: 558, column: 2, scope: !9713)
!9741 = !DILocation(line: 559, column: 2, scope: !9713)
!9742 = !DILocation(line: 559, column: 5, scope: !9713)
!9743 = !DILocation(line: 559, column: 19, scope: !9713)
!9744 = !DILocation(line: 560, column: 2, scope: !9713)
!9745 = !DILocation(line: 560, column: 5, scope: !9713)
!9746 = !DILocation(line: 560, column: 19, scope: !9713)
!9747 = !DILocation(line: 565, column: 9, scope: !9713)
!9748 = !DILocation(line: 565, column: 2, scope: !9713)
!9749 = !DILocation(line: 566, column: 1, scope: !9713)
!9750 = distinct !DISubprogram(name: "pci_set_bus_speed", scope: !3, file: !3, line: 767, type: !4241, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9751 = !DILocalVariable(name: "bus", arg: 1, scope: !9750, file: !3, line: 767, type: !234)
!9752 = !DILocation(line: 767, column: 47, scope: !9750)
!9753 = !DILocalVariable(name: "bridge", scope: !9750, file: !3, line: 769, type: !247)
!9754 = !DILocation(line: 769, column: 18, scope: !9750)
!9755 = !DILocation(line: 769, column: 27, scope: !9750)
!9756 = !DILocation(line: 769, column: 32, scope: !9750)
!9757 = !DILocalVariable(name: "pos", scope: !9750, file: !3, line: 770, type: !232)
!9758 = !DILocation(line: 770, column: 6, scope: !9750)
!9759 = !DILocation(line: 772, column: 28, scope: !9750)
!9760 = !DILocation(line: 772, column: 8, scope: !9750)
!9761 = !DILocation(line: 772, column: 6, scope: !9750)
!9762 = !DILocation(line: 773, column: 7, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 773, column: 6)
!9764 = !DILocation(line: 773, column: 6, scope: !9750)
!9765 = !DILocation(line: 774, column: 29, scope: !9763)
!9766 = !DILocation(line: 774, column: 9, scope: !9763)
!9767 = !DILocation(line: 774, column: 7, scope: !9763)
!9768 = !DILocation(line: 774, column: 3, scope: !9763)
!9769 = !DILocation(line: 775, column: 6, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 775, column: 6)
!9771 = !DILocation(line: 775, column: 6, scope: !9750)
!9772 = !DILocalVariable(name: "agpstat", scope: !9773, file: !3, line: 776, type: !223)
!9773 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 775, column: 11)
!9774 = !DILocation(line: 776, column: 7, scope: !9773)
!9775 = !DILocalVariable(name: "agpcmd", scope: !9773, file: !3, line: 776, type: !223)
!9776 = !DILocation(line: 776, column: 16, scope: !9773)
!9777 = !DILocation(line: 778, column: 25, scope: !9773)
!9778 = !DILocation(line: 778, column: 33, scope: !9773)
!9779 = !DILocation(line: 778, column: 37, scope: !9773)
!9780 = !DILocation(line: 778, column: 3, scope: !9773)
!9781 = !DILocation(line: 779, column: 34, scope: !9773)
!9782 = !DILocation(line: 779, column: 42, scope: !9773)
!9783 = !DILocation(line: 779, column: 47, scope: !9773)
!9784 = !DILocation(line: 779, column: 55, scope: !9773)
!9785 = !DILocation(line: 779, column: 24, scope: !9773)
!9786 = !DILocation(line: 779, column: 3, scope: !9773)
!9787 = !DILocation(line: 779, column: 8, scope: !9773)
!9788 = !DILocation(line: 779, column: 22, scope: !9773)
!9789 = !DILocation(line: 781, column: 25, scope: !9773)
!9790 = !DILocation(line: 781, column: 33, scope: !9773)
!9791 = !DILocation(line: 781, column: 37, scope: !9773)
!9792 = !DILocation(line: 781, column: 3, scope: !9773)
!9793 = !DILocation(line: 782, column: 34, scope: !9773)
!9794 = !DILocation(line: 782, column: 42, scope: !9773)
!9795 = !DILocation(line: 782, column: 47, scope: !9773)
!9796 = !DILocation(line: 782, column: 54, scope: !9773)
!9797 = !DILocation(line: 782, column: 24, scope: !9773)
!9798 = !DILocation(line: 782, column: 3, scope: !9773)
!9799 = !DILocation(line: 782, column: 8, scope: !9773)
!9800 = !DILocation(line: 782, column: 22, scope: !9773)
!9801 = !DILocation(line: 783, column: 2, scope: !9773)
!9802 = !DILocation(line: 785, column: 28, scope: !9750)
!9803 = !DILocation(line: 785, column: 8, scope: !9750)
!9804 = !DILocation(line: 785, column: 6, scope: !9750)
!9805 = !DILocation(line: 786, column: 6, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 786, column: 6)
!9807 = !DILocation(line: 786, column: 6, scope: !9750)
!9808 = !DILocalVariable(name: "status", scope: !9809, file: !3, line: 787, type: !945)
!9809 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 786, column: 11)
!9810 = !DILocation(line: 787, column: 7, scope: !9809)
!9811 = !DILocalVariable(name: "max", scope: !9809, file: !3, line: 788, type: !126)
!9812 = !DILocation(line: 788, column: 22, scope: !9809)
!9813 = !DILocation(line: 790, column: 24, scope: !9809)
!9814 = !DILocation(line: 790, column: 32, scope: !9809)
!9815 = !DILocation(line: 790, column: 36, scope: !9809)
!9816 = !DILocation(line: 790, column: 3, scope: !9809)
!9817 = !DILocation(line: 793, column: 7, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9809, file: !3, line: 793, column: 7)
!9819 = !DILocation(line: 793, column: 14, scope: !9818)
!9820 = !DILocation(line: 793, column: 7, scope: !9809)
!9821 = !DILocation(line: 794, column: 8, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 793, column: 38)
!9823 = !DILocation(line: 795, column: 3, scope: !9822)
!9824 = !DILocation(line: 795, column: 14, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 795, column: 14)
!9826 = !DILocation(line: 795, column: 21, scope: !9825)
!9827 = !DILocation(line: 795, column: 14, scope: !9818)
!9828 = !DILocation(line: 796, column: 8, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 795, column: 45)
!9830 = !DILocation(line: 797, column: 3, scope: !9829)
!9831 = !DILocation(line: 797, column: 14, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 797, column: 14)
!9833 = !DILocation(line: 797, column: 21, scope: !9832)
!9834 = !DILocation(line: 797, column: 14, scope: !9825)
!9835 = !DILocation(line: 798, column: 9, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 798, column: 8)
!9837 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 797, column: 45)
!9838 = !DILocation(line: 798, column: 16, scope: !9836)
!9839 = !DILocation(line: 798, column: 38, scope: !9836)
!9840 = !DILocation(line: 798, column: 8, scope: !9837)
!9841 = !DILocation(line: 799, column: 9, scope: !9836)
!9842 = !DILocation(line: 799, column: 5, scope: !9836)
!9843 = !DILocation(line: 801, column: 9, scope: !9836)
!9844 = !DILocation(line: 802, column: 3, scope: !9837)
!9845 = !DILocation(line: 803, column: 8, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 802, column: 10)
!9847 = !DILocation(line: 806, column: 24, scope: !9809)
!9848 = !DILocation(line: 806, column: 3, scope: !9809)
!9849 = !DILocation(line: 806, column: 8, scope: !9809)
!9850 = !DILocation(line: 806, column: 22, scope: !9809)
!9851 = !DILocation(line: 808, column: 5, scope: !9809)
!9852 = !DILocation(line: 808, column: 12, scope: !9809)
!9853 = !DILocation(line: 808, column: 34, scope: !9809)
!9854 = !DILocation(line: 807, column: 24, scope: !9809)
!9855 = !DILocation(line: 807, column: 3, scope: !9809)
!9856 = !DILocation(line: 807, column: 8, scope: !9809)
!9857 = !DILocation(line: 807, column: 22, scope: !9809)
!9858 = !DILocation(line: 810, column: 3, scope: !9809)
!9859 = !DILocation(line: 813, column: 18, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 813, column: 6)
!9861 = !DILocation(line: 813, column: 6, scope: !9860)
!9862 = !DILocation(line: 813, column: 6, scope: !9750)
!9863 = !DILocalVariable(name: "linkcap", scope: !9864, file: !3, line: 814, type: !223)
!9864 = distinct !DILexicalBlock(scope: !9860, file: !3, line: 813, column: 27)
!9865 = !DILocation(line: 814, column: 7, scope: !9864)
!9866 = !DILocalVariable(name: "linksta", scope: !9864, file: !3, line: 815, type: !945)
!9867 = !DILocation(line: 815, column: 7, scope: !9864)
!9868 = !DILocation(line: 817, column: 30, scope: !9864)
!9869 = !DILocation(line: 817, column: 3, scope: !9864)
!9870 = !DILocation(line: 818, column: 40, scope: !9864)
!9871 = !DILocation(line: 818, column: 48, scope: !9864)
!9872 = !DILocation(line: 818, column: 24, scope: !9864)
!9873 = !DILocation(line: 818, column: 3, scope: !9864)
!9874 = !DILocation(line: 818, column: 8, scope: !9864)
!9875 = !DILocation(line: 818, column: 22, scope: !9864)
!9876 = !DILocation(line: 819, column: 38, scope: !9864)
!9877 = !DILocation(line: 819, column: 46, scope: !9864)
!9878 = !DILocation(line: 819, column: 36, scope: !9864)
!9879 = !DILocation(line: 819, column: 35, scope: !9864)
!9880 = !DILocation(line: 819, column: 3, scope: !9864)
!9881 = !DILocation(line: 819, column: 11, scope: !9864)
!9882 = !DILocation(line: 819, column: 33, scope: !9864)
!9883 = !DILocation(line: 821, column: 29, scope: !9864)
!9884 = !DILocation(line: 821, column: 3, scope: !9864)
!9885 = !DILocation(line: 822, column: 26, scope: !9864)
!9886 = !DILocation(line: 822, column: 31, scope: !9864)
!9887 = !DILocation(line: 822, column: 3, scope: !9864)
!9888 = !DILocation(line: 823, column: 2, scope: !9864)
!9889 = !DILocation(line: 824, column: 1, scope: !9750)
!9890 = distinct !DISubprogram(name: "pci_bridge_child_ext_cfg_accessible", scope: !3, file: !3, line: 1002, type: !6591, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9891 = !DILocalVariable(name: "bridge", arg: 1, scope: !9890, file: !3, line: 1002, type: !247)
!9892 = !DILocation(line: 1002, column: 65, scope: !9890)
!9893 = !DILocalVariable(name: "pos", scope: !9890, file: !3, line: 1004, type: !232)
!9894 = !DILocation(line: 1004, column: 6, scope: !9890)
!9895 = !DILocalVariable(name: "status", scope: !9890, file: !3, line: 1005, type: !223)
!9896 = !DILocation(line: 1005, column: 6, scope: !9890)
!9897 = !DILocation(line: 1011, column: 6, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 1011, column: 6)
!9899 = !DILocation(line: 1011, column: 14, scope: !9898)
!9900 = !DILocation(line: 1011, column: 19, scope: !9898)
!9901 = !DILocation(line: 1011, column: 29, scope: !9898)
!9902 = !DILocation(line: 1011, column: 6, scope: !9890)
!9903 = !DILocation(line: 1012, column: 3, scope: !9898)
!9904 = !DILocation(line: 1019, column: 18, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 1019, column: 6)
!9906 = !DILocation(line: 1019, column: 6, scope: !9905)
!9907 = !DILocation(line: 1019, column: 26, scope: !9905)
!9908 = !DILocation(line: 1020, column: 21, scope: !9905)
!9909 = !DILocation(line: 1020, column: 7, scope: !9905)
!9910 = !DILocation(line: 1020, column: 29, scope: !9905)
!9911 = !DILocation(line: 1020, column: 55, scope: !9905)
!9912 = !DILocation(line: 1021, column: 21, scope: !9905)
!9913 = !DILocation(line: 1021, column: 7, scope: !9905)
!9914 = !DILocation(line: 1021, column: 29, scope: !9905)
!9915 = !DILocation(line: 1021, column: 54, scope: !9905)
!9916 = !DILocation(line: 1022, column: 21, scope: !9905)
!9917 = !DILocation(line: 1022, column: 7, scope: !9905)
!9918 = !DILocation(line: 1022, column: 29, scope: !9905)
!9919 = !DILocation(line: 1019, column: 6, scope: !9890)
!9920 = !DILocation(line: 1023, column: 3, scope: !9905)
!9921 = !DILocation(line: 1033, column: 28, scope: !9890)
!9922 = !DILocation(line: 1033, column: 8, scope: !9890)
!9923 = !DILocation(line: 1033, column: 6, scope: !9890)
!9924 = !DILocation(line: 1034, column: 7, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 1034, column: 6)
!9926 = !DILocation(line: 1034, column: 6, scope: !9890)
!9927 = !DILocation(line: 1035, column: 3, scope: !9925)
!9928 = !DILocation(line: 1037, column: 24, scope: !9890)
!9929 = !DILocation(line: 1037, column: 32, scope: !9890)
!9930 = !DILocation(line: 1037, column: 36, scope: !9890)
!9931 = !DILocation(line: 1037, column: 2, scope: !9890)
!9932 = !DILocation(line: 1038, column: 9, scope: !9890)
!9933 = !DILocation(line: 1038, column: 16, scope: !9890)
!9934 = !DILocation(line: 1038, column: 2, scope: !9890)
!9935 = !DILocation(line: 1039, column: 1, scope: !9890)
!9936 = distinct !DISubprogram(name: "pci_set_bus_msi_domain", scope: !3, file: !3, line: 855, type: !4241, scopeLine: 856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9937 = !DILocalVariable(name: "bus", arg: 1, scope: !9936, file: !3, line: 855, type: !234)
!9938 = !DILocation(line: 855, column: 52, scope: !9936)
!9939 = !DILocalVariable(name: "d", scope: !9936, file: !3, line: 857, type: !3745)
!9940 = !DILocation(line: 857, column: 21, scope: !9936)
!9941 = !DILocalVariable(name: "b", scope: !9936, file: !3, line: 858, type: !234)
!9942 = !DILocation(line: 858, column: 18, scope: !9936)
!9943 = !DILocation(line: 865, column: 11, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 865, column: 2)
!9945 = !DILocation(line: 865, column: 9, scope: !9944)
!9946 = !DILocation(line: 865, column: 18, scope: !9944)
!9947 = !DILocation(line: 865, column: 7, scope: !9944)
!9948 = !DILocation(line: 865, column: 27, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 865, column: 2)
!9950 = !DILocation(line: 865, column: 29, scope: !9949)
!9951 = !DILocation(line: 865, column: 49, scope: !9949)
!9952 = !DILocation(line: 865, column: 33, scope: !9949)
!9953 = !DILocation(line: 865, column: 32, scope: !9949)
!9954 = !DILocation(line: 0, scope: !9949)
!9955 = !DILocation(line: 865, column: 2, scope: !9944)
!9956 = !DILocation(line: 866, column: 7, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 866, column: 7)
!9958 = distinct !DILexicalBlock(scope: !9949, file: !3, line: 865, column: 68)
!9959 = !DILocation(line: 866, column: 10, scope: !9957)
!9960 = !DILocation(line: 866, column: 7, scope: !9958)
!9961 = !DILocation(line: 867, column: 28, scope: !9957)
!9962 = !DILocation(line: 867, column: 31, scope: !9957)
!9963 = !DILocation(line: 867, column: 37, scope: !9957)
!9964 = !DILocation(line: 867, column: 8, scope: !9957)
!9965 = !DILocation(line: 867, column: 6, scope: !9957)
!9966 = !DILocation(line: 867, column: 4, scope: !9957)
!9967 = !DILocation(line: 868, column: 2, scope: !9958)
!9968 = !DILocation(line: 865, column: 57, scope: !9949)
!9969 = !DILocation(line: 865, column: 60, scope: !9949)
!9970 = !DILocation(line: 865, column: 55, scope: !9949)
!9971 = !DILocation(line: 865, column: 2, scope: !9949)
!9972 = distinct !{!9972, !9955, !9973}
!9973 = !DILocation(line: 868, column: 2, scope: !9944)
!9974 = !DILocation(line: 870, column: 7, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 870, column: 6)
!9976 = !DILocation(line: 870, column: 6, scope: !9936)
!9977 = !DILocation(line: 871, column: 34, scope: !9975)
!9978 = !DILocation(line: 871, column: 7, scope: !9975)
!9979 = !DILocation(line: 871, column: 5, scope: !9975)
!9980 = !DILocation(line: 871, column: 3, scope: !9975)
!9981 = !DILocation(line: 873, column: 22, scope: !9936)
!9982 = !DILocation(line: 873, column: 27, scope: !9936)
!9983 = !DILocation(line: 873, column: 32, scope: !9936)
!9984 = !DILocation(line: 873, column: 2, scope: !9936)
!9985 = !DILocation(line: 874, column: 1, scope: !9936)
!9986 = distinct !DISubprogram(name: "pci_create_legacy_files", scope: !108, file: !108, line: 170, type: !4241, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9987 = !DILocalVariable(name: "bus", arg: 1, scope: !9986, file: !108, line: 170, type: !234)
!9988 = !DILocation(line: 170, column: 60, scope: !9986)
!9989 = !DILocation(line: 170, column: 67, scope: !9986)
!9990 = distinct !DISubprogram(name: "agp_speed", scope: !3, file: !3, line: 744, type: !9991, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!9991 = !DISubroutineType(types: !9992)
!9992 = !{!126, !232, !232}
!9993 = !DILocalVariable(name: "agp3", arg: 1, scope: !9990, file: !3, line: 744, type: !232)
!9994 = !DILocation(line: 744, column: 41, scope: !9990)
!9995 = !DILocalVariable(name: "agpstat", arg: 2, scope: !9990, file: !3, line: 744, type: !232)
!9996 = !DILocation(line: 744, column: 51, scope: !9990)
!9997 = !DILocalVariable(name: "index", scope: !9990, file: !3, line: 746, type: !232)
!9998 = !DILocation(line: 746, column: 6, scope: !9990)
!9999 = !DILocation(line: 748, column: 6, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9990, file: !3, line: 748, column: 6)
!10001 = !DILocation(line: 748, column: 14, scope: !10000)
!10002 = !DILocation(line: 748, column: 6, scope: !9990)
!10003 = !DILocation(line: 749, column: 9, scope: !10000)
!10004 = !DILocation(line: 749, column: 3, scope: !10000)
!10005 = !DILocation(line: 750, column: 11, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 750, column: 11)
!10007 = !DILocation(line: 750, column: 19, scope: !10006)
!10008 = !DILocation(line: 750, column: 11, scope: !10000)
!10009 = !DILocation(line: 751, column: 9, scope: !10006)
!10010 = !DILocation(line: 751, column: 3, scope: !10006)
!10011 = !DILocation(line: 752, column: 11, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 752, column: 11)
!10013 = !DILocation(line: 752, column: 19, scope: !10012)
!10014 = !DILocation(line: 752, column: 11, scope: !10006)
!10015 = !DILocation(line: 753, column: 9, scope: !10012)
!10016 = !DILocation(line: 753, column: 3, scope: !10012)
!10017 = !DILocation(line: 755, column: 3, scope: !10012)
!10018 = !DILocation(line: 757, column: 6, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !9990, file: !3, line: 757, column: 6)
!10020 = !DILocation(line: 757, column: 6, scope: !9990)
!10021 = !DILocation(line: 758, column: 9, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 757, column: 12)
!10023 = !DILocation(line: 759, column: 7, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10022, file: !3, line: 759, column: 7)
!10025 = !DILocation(line: 759, column: 13, scope: !10024)
!10026 = !DILocation(line: 759, column: 7, scope: !10022)
!10027 = !DILocation(line: 760, column: 10, scope: !10024)
!10028 = !DILocation(line: 760, column: 4, scope: !10024)
!10029 = !DILocation(line: 761, column: 2, scope: !10022)
!10030 = !DILabel(scope: !9990, name: "out", file: !3, line: 763)
!10031 = !DILocation(line: 763, column: 2, scope: !9990)
!10032 = !DILocation(line: 764, column: 20, scope: !9990)
!10033 = !DILocation(line: 764, column: 9, scope: !9990)
!10034 = !DILocation(line: 764, column: 2, scope: !9990)
!10035 = distinct !DISubprogram(name: "dev_get_msi_domain", scope: !73, file: !73, line: 639, type: !10036, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10036 = !DISubroutineType(types: !10037)
!10037 = !{!3745, !3796}
!10038 = !DILocalVariable(name: "dev", arg: 1, scope: !10035, file: !73, line: 639, type: !3796)
!10039 = !DILocation(line: 639, column: 74, scope: !10035)
!10040 = !DILocation(line: 642, column: 9, scope: !10035)
!10041 = !DILocation(line: 642, column: 14, scope: !10035)
!10042 = !DILocation(line: 642, column: 2, scope: !10035)
!10043 = distinct !DISubprogram(name: "pci_host_bridge_msi_domain", scope: !3, file: !3, line: 826, type: !10044, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10044 = !DISubroutineType(types: !10045)
!10045 = !{!3745, !234}
!10046 = !DILocalVariable(name: "bus", arg: 1, scope: !10043, file: !3, line: 826, type: !234)
!10047 = !DILocation(line: 826, column: 70, scope: !10043)
!10048 = !DILocalVariable(name: "d", scope: !10043, file: !3, line: 828, type: !3745)
!10049 = !DILocation(line: 828, column: 21, scope: !10043)
!10050 = !DILocation(line: 834, column: 36, scope: !10043)
!10051 = !DILocation(line: 834, column: 6, scope: !10043)
!10052 = !DILocation(line: 834, column: 4, scope: !10043)
!10053 = !DILocation(line: 835, column: 7, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 835, column: 6)
!10055 = !DILocation(line: 835, column: 6, scope: !10043)
!10056 = !DILocation(line: 836, column: 39, scope: !10054)
!10057 = !DILocation(line: 836, column: 7, scope: !10054)
!10058 = !DILocation(line: 836, column: 5, scope: !10054)
!10059 = !DILocation(line: 836, column: 3, scope: !10054)
!10060 = !DILocation(line: 843, column: 7, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 843, column: 6)
!10062 = !DILocation(line: 843, column: 6, scope: !10043)
!10063 = !DILocalVariable(name: "fwnode", scope: !10064, file: !3, line: 844, type: !3772)
!10064 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 843, column: 10)
!10065 = !DILocation(line: 844, column: 25, scope: !10064)
!10066 = !DILocation(line: 844, column: 54, scope: !10064)
!10067 = !DILocation(line: 844, column: 34, scope: !10064)
!10068 = !DILocation(line: 846, column: 7, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 846, column: 7)
!10070 = !DILocation(line: 846, column: 7, scope: !10064)
!10071 = !DILocation(line: 847, column: 33, scope: !10069)
!10072 = !DILocation(line: 847, column: 8, scope: !10069)
!10073 = !DILocation(line: 847, column: 6, scope: !10069)
!10074 = !DILocation(line: 847, column: 4, scope: !10069)
!10075 = !DILocation(line: 849, column: 2, scope: !10064)
!10076 = !DILocation(line: 852, column: 9, scope: !10043)
!10077 = !DILocation(line: 852, column: 2, scope: !10043)
!10078 = distinct !DISubprogram(name: "dev_set_msi_domain", scope: !73, file: !73, line: 648, type: !10079, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10079 = !DISubroutineType(types: !10080)
!10080 = !{null, !3551, !3745}
!10081 = !DILocalVariable(name: "dev", arg: 1, scope: !10078, file: !73, line: 648, type: !3551)
!10082 = !DILocation(line: 648, column: 54, scope: !10078)
!10083 = !DILocalVariable(name: "d", arg: 2, scope: !10078, file: !73, line: 648, type: !3745)
!10084 = !DILocation(line: 648, column: 78, scope: !10078)
!10085 = !DILocation(line: 651, column: 20, scope: !10078)
!10086 = !DILocation(line: 651, column: 2, scope: !10078)
!10087 = !DILocation(line: 651, column: 7, scope: !10078)
!10088 = !DILocation(line: 651, column: 18, scope: !10078)
!10089 = !DILocation(line: 653, column: 1, scope: !10078)
!10090 = distinct !DISubprogram(name: "_pci_root_bus_fwnode", scope: !6922, file: !6922, line: 56, type: !10091, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10091 = !DISubroutineType(types: !10092)
!10092 = !{!222, !234}
!10093 = !DILocalVariable(name: "bus", arg: 1, scope: !10090, file: !6922, line: 56, type: !234)
!10094 = !DILocation(line: 56, column: 58, scope: !10090)
!10095 = !DILocation(line: 58, column: 24, scope: !10090)
!10096 = !DILocation(line: 58, column: 9, scope: !10090)
!10097 = !DILocation(line: 58, column: 30, scope: !10090)
!10098 = !DILocation(line: 58, column: 2, scope: !10090)
!10099 = distinct !DISubprogram(name: "irq_find_matching_fwnode", scope: !94, file: !94, line: 299, type: !10100, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10100 = !DISubroutineType(types: !10101)
!10101 = !{!3745, !3772, !93}
!10102 = !DILocalVariable(name: "fwnode", arg: 1, scope: !10099, file: !94, line: 299, type: !3772)
!10103 = !DILocation(line: 299, column: 67, scope: !10099)
!10104 = !DILocalVariable(name: "bus_token", arg: 2, scope: !10099, file: !94, line: 300, type: !93)
!10105 = !DILocation(line: 300, column: 36, scope: !10099)
!10106 = !DILocalVariable(name: "fwspec", scope: !10099, file: !94, line: 302, type: !3878)
!10107 = !DILocation(line: 302, column: 20, scope: !10099)
!10108 = !DILocation(line: 302, column: 29, scope: !10099)
!10109 = !DILocation(line: 303, column: 13, scope: !10099)
!10110 = !DILocation(line: 306, column: 43, scope: !10099)
!10111 = !DILocation(line: 306, column: 9, scope: !10099)
!10112 = !DILocation(line: 306, column: 2, scope: !10099)
!10113 = distinct !DISubprogram(name: "to_pci_sysdata", scope: !6922, file: !6922, line: 36, type: !10114, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{!10116, !10402}
!10116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10117, size: 64)
!10117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sysdata", file: !6922, line: 15, size: 320, elements: !10118)
!10118 = !{!10119, !10120, !10121, !10399, !10400, !10401}
!10119 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !10117, file: !6922, line: 16, baseType: !232, size: 32)
!10120 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10117, file: !6922, line: 17, baseType: !232, size: 32, offset: 32)
!10121 = !DIDerivedType(tag: DW_TAG_member, name: "companion", scope: !10117, file: !6922, line: 19, baseType: !10122, size: 64, offset: 64)
!10122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10123, size: 64)
!10123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device", file: !10124, line: 351, size: 10880, elements: !10125)
!10124 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!10125 = !{!10126, !10127, !10130, !10131, !10132, !10133, !10134, !10135, !10136, !10145, !10162, !10235, !10262, !10286, !10307, !10311, !10320, !10352, !10366, !10388, !10392, !10393, !10394, !10395, !10396, !10397, !10398}
!10126 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !10123, file: !10124, line: 352, baseType: !232, size: 32)
!10127 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !10123, file: !10124, line: 353, baseType: !10128, size: 64, offset: 64)
!10128 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !10129, line: 424, baseType: !222)
!10129 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!10130 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !10123, file: !10124, line: 354, baseType: !3768, size: 192, offset: 128)
!10131 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10123, file: !10124, line: 355, baseType: !10122, size: 64, offset: 320)
!10132 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10123, file: !10124, line: 356, baseType: !238, size: 128, offset: 384)
!10133 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10123, file: !10124, line: 357, baseType: !238, size: 128, offset: 512)
!10134 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_list", scope: !10123, file: !10124, line: 358, baseType: !238, size: 128, offset: 640)
!10135 = !DIDerivedType(tag: DW_TAG_member, name: "del_list", scope: !10123, file: !10124, line: 359, baseType: !238, size: 128, offset: 768)
!10136 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10123, file: !10124, line: 360, baseType: !10137, size: 32, offset: 896)
!10137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_status", file: !10124, line: 179, size: 32, elements: !10138)
!10138 = !{!10139, !10140, !10141, !10142, !10143, !10144}
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !10137, file: !10124, line: 180, baseType: !223, size: 1, flags: DIFlagBitField, extraData: i64 0)
!10140 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !10137, file: !10124, line: 181, baseType: !223, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!10141 = !DIDerivedType(tag: DW_TAG_member, name: "show_in_ui", scope: !10137, file: !10124, line: 182, baseType: !223, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!10142 = !DIDerivedType(tag: DW_TAG_member, name: "functional", scope: !10137, file: !10124, line: 183, baseType: !223, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!10143 = !DIDerivedType(tag: DW_TAG_member, name: "battery_present", scope: !10137, file: !10124, line: 184, baseType: !223, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!10144 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10137, file: !10124, line: 185, baseType: !223, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!10145 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10123, file: !10124, line: 361, baseType: !10146, size: 32, offset: 928)
!10146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_flags", file: !10124, line: 190, size: 32, elements: !10147)
!10147 = !{!10148, !10149, !10150, !10151, !10152, !10153, !10154, !10155, !10156, !10157, !10158, !10159, !10160, !10161}
!10148 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_status", scope: !10146, file: !10124, line: 191, baseType: !223, size: 1, flags: DIFlagBitField, extraData: i64 0)
!10149 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !10146, file: !10124, line: 192, baseType: !223, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!10150 = !DIDerivedType(tag: DW_TAG_member, name: "ejectable", scope: !10146, file: !10124, line: 193, baseType: !223, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!10151 = !DIDerivedType(tag: DW_TAG_member, name: "power_manageable", scope: !10146, file: !10124, line: 194, baseType: !223, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!10152 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !10146, file: !10124, line: 195, baseType: !223, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!10153 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10146, file: !10124, line: 196, baseType: !223, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!10154 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !10146, file: !10124, line: 197, baseType: !223, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!10155 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_notify", scope: !10146, file: !10124, line: 198, baseType: !223, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!10156 = !DIDerivedType(tag: DW_TAG_member, name: "is_dock_station", scope: !10146, file: !10124, line: 199, baseType: !223, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!10157 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible_ok", scope: !10146, file: !10124, line: 200, baseType: !223, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!10158 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma", scope: !10146, file: !10124, line: 201, baseType: !223, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!10159 = !DIDerivedType(tag: DW_TAG_member, name: "cca_seen", scope: !10146, file: !10124, line: 202, baseType: !223, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "enumeration_by_parent", scope: !10146, file: !10124, line: 203, baseType: !223, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10146, file: !10124, line: 204, baseType: !223, size: 19, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!10162 = !DIDerivedType(tag: DW_TAG_member, name: "pnp", scope: !10123, file: !10124, line: 362, baseType: !10163, size: 960, offset: 960)
!10163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_pnp", file: !10124, line: 234, size: 960, elements: !10164)
!10164 = !{!10165, !10167, !10174, !10176, !10177, !10178, !10183, !10186}
!10165 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !10163, file: !10124, line: 235, baseType: !10166, size: 64)
!10166 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_id", file: !10124, line: 217, baseType: !2117)
!10167 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10163, file: !10124, line: 236, baseType: !10168, size: 32, offset: 64)
!10168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_type", file: !10124, line: 227, size: 32, elements: !10169)
!10169 = !{!10170, !10171, !10172, !10173}
!10170 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !10168, file: !10124, line: 228, baseType: !223, size: 1, flags: DIFlagBitField, extraData: i64 0)
!10171 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !10168, file: !10124, line: 229, baseType: !223, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!10172 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !10168, file: !10124, line: 230, baseType: !223, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!10173 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10168, file: !10124, line: 231, baseType: !223, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!10174 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !10163, file: !10124, line: 237, baseType: !10175, size: 64, offset: 128)
!10175 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_address", file: !10124, line: 218, baseType: !227)
!10176 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !10163, file: !10124, line: 238, baseType: !368, size: 64, offset: 192)
!10177 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !10163, file: !10124, line: 239, baseType: !238, size: 128, offset: 256)
!10178 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !10163, file: !10124, line: 240, baseType: !10179, size: 320, offset: 384)
!10179 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_name", file: !10124, line: 219, baseType: !10180)
!10180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 320, elements: !10181)
!10181 = !{!10182}
!10182 = !DISubrange(count: 40)
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "device_class", scope: !10163, file: !10124, line: 241, baseType: !10184, size: 160, offset: 704)
!10184 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_class", file: !10124, line: 220, baseType: !10185)
!10185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 160, elements: !2286)
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "str_obj", scope: !10163, file: !10124, line: 242, baseType: !10187, size: 64, offset: 896)
!10187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10188, size: 64)
!10188 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !10129, line: 899, size: 192, elements: !10189)
!10189 = !{!10190, !10192, !10197, !10203, !10209, !10215, !10221, !10229}
!10190 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10188, file: !10129, line: 900, baseType: !10191, size: 32)
!10191 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !10129, line: 635, baseType: !223)
!10192 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !10188, file: !10129, line: 904, baseType: !10193, size: 128)
!10193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10188, file: !10129, line: 901, size: 128, elements: !10194)
!10194 = !{!10195, !10196}
!10195 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10193, file: !10129, line: 902, baseType: !10191, size: 32)
!10196 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !10193, file: !10129, line: 903, baseType: !227, size: 64, offset: 64)
!10197 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !10188, file: !10129, line: 910, baseType: !10198, size: 128)
!10198 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10188, file: !10129, line: 906, size: 128, elements: !10199)
!10199 = !{!10200, !10201, !10202}
!10200 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10198, file: !10129, line: 907, baseType: !10191, size: 32)
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10198, file: !10129, line: 908, baseType: !223, size: 32, offset: 32)
!10202 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !10198, file: !10129, line: 909, baseType: !368, size: 64, offset: 64)
!10203 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !10188, file: !10129, line: 916, baseType: !10204, size: 128)
!10204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10188, file: !10129, line: 912, size: 128, elements: !10205)
!10205 = !{!10206, !10207, !10208}
!10206 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10204, file: !10129, line: 913, baseType: !10191, size: 32)
!10207 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10204, file: !10129, line: 914, baseType: !223, size: 32, offset: 32)
!10208 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !10204, file: !10129, line: 915, baseType: !294, size: 64, offset: 64)
!10209 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !10188, file: !10129, line: 922, baseType: !10210, size: 128)
!10210 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10188, file: !10129, line: 918, size: 128, elements: !10211)
!10211 = !{!10212, !10213, !10214}
!10212 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10210, file: !10129, line: 919, baseType: !10191, size: 32)
!10213 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10210, file: !10129, line: 920, baseType: !223, size: 32, offset: 32)
!10214 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !10210, file: !10129, line: 921, baseType: !10187, size: 64, offset: 64)
!10215 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !10188, file: !10129, line: 928, baseType: !10216, size: 128)
!10216 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10188, file: !10129, line: 924, size: 128, elements: !10217)
!10217 = !{!10218, !10219, !10220}
!10218 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10216, file: !10129, line: 925, baseType: !10191, size: 32)
!10219 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !10216, file: !10129, line: 926, baseType: !10191, size: 32, offset: 32)
!10220 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !10216, file: !10129, line: 927, baseType: !10128, size: 64, offset: 64)
!10221 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !10188, file: !10129, line: 935, baseType: !10222, size: 192)
!10222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10188, file: !10129, line: 930, size: 192, elements: !10223)
!10223 = !{!10224, !10225, !10226, !10228}
!10224 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10222, file: !10129, line: 931, baseType: !10191, size: 32)
!10225 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !10222, file: !10129, line: 932, baseType: !223, size: 32, offset: 32)
!10226 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !10222, file: !10129, line: 933, baseType: !10227, size: 64, offset: 64)
!10227 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !10129, line: 128, baseType: !227)
!10228 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !10222, file: !10129, line: 934, baseType: !223, size: 32, offset: 128)
!10229 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !10188, file: !10129, line: 941, baseType: !10230, size: 96)
!10230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10188, file: !10129, line: 937, size: 96, elements: !10231)
!10231 = !{!10232, !10233, !10234}
!10232 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10230, file: !10129, line: 938, baseType: !10191, size: 32)
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !10230, file: !10129, line: 939, baseType: !223, size: 32, offset: 32)
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !10230, file: !10129, line: 940, baseType: !223, size: 32, offset: 64)
!10235 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !10123, file: !10124, line: 363, baseType: !10236, size: 1344, offset: 1920)
!10236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power", file: !10124, line: 275, size: 1344, elements: !10237)
!10237 = !{!10238, !10239, !10249}
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10236, file: !10124, line: 276, baseType: !232, size: 32)
!10239 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10236, file: !10124, line: 277, baseType: !10240, size: 32, offset: 32)
!10240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_flags", file: !10124, line: 254, size: 32, elements: !10241)
!10241 = !{!10242, !10243, !10244, !10245, !10246, !10247, !10248}
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_get", scope: !10240, file: !10124, line: 255, baseType: !223, size: 1, flags: DIFlagBitField, extraData: i64 0)
!10243 = !DIDerivedType(tag: DW_TAG_member, name: "power_resources", scope: !10240, file: !10124, line: 256, baseType: !223, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!10244 = !DIDerivedType(tag: DW_TAG_member, name: "inrush_current", scope: !10240, file: !10124, line: 257, baseType: !223, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!10245 = !DIDerivedType(tag: DW_TAG_member, name: "power_removed", scope: !10240, file: !10124, line: 258, baseType: !223, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!10246 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parent", scope: !10240, file: !10124, line: 259, baseType: !223, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "dsw_present", scope: !10240, file: !10124, line: 260, baseType: !223, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!10248 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10240, file: !10124, line: 261, baseType: !223, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!10249 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10236, file: !10124, line: 278, baseType: !10250, size: 1280, offset: 64)
!10250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10251, size: 1280, elements: !4442)
!10251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_state", file: !10124, line: 264, size: 256, elements: !10252)
!10252 = !{!10253, !10259, !10260, !10261}
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10251, file: !10124, line: 269, baseType: !10254, size: 8)
!10254 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10251, file: !10124, line: 265, size: 8, elements: !10255)
!10255 = !{!10256, !10257, !10258}
!10256 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !10254, file: !10124, line: 266, baseType: !283, size: 1, flags: DIFlagBitField, extraData: i64 0)
!10257 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_set", scope: !10254, file: !10124, line: 267, baseType: !283, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!10258 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10254, file: !10124, line: 268, baseType: !283, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!10259 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !10251, file: !10124, line: 270, baseType: !232, size: 32, offset: 32)
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !10251, file: !10124, line: 271, baseType: !232, size: 32, offset: 64)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !10251, file: !10124, line: 272, baseType: !238, size: 128, offset: 128)
!10262 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !10123, file: !10124, line: 364, baseType: !10263, size: 640, offset: 3264)
!10263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup", file: !10124, line: 315, size: 640, elements: !10264)
!10264 = !{!10265, !10266, !10267, !10268, !10269, !10274, !10283, !10284, !10285}
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_device", scope: !10263, file: !10124, line: 316, baseType: !10128, size: 64)
!10266 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_number", scope: !10263, file: !10124, line: 317, baseType: !227, size: 64, offset: 64)
!10267 = !DIDerivedType(tag: DW_TAG_member, name: "sleep_state", scope: !10263, file: !10124, line: 318, baseType: !227, size: 64, offset: 128)
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !10263, file: !10124, line: 319, baseType: !238, size: 128, offset: 192)
!10269 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10263, file: !10124, line: 320, baseType: !10270, size: 8, offset: 320)
!10270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_flags", file: !10124, line: 305, size: 8, elements: !10271)
!10271 = !{!10272, !10273}
!10272 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !10270, file: !10124, line: 306, baseType: !283, size: 1, flags: DIFlagBitField, extraData: i64 0)
!10273 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_present", scope: !10270, file: !10124, line: 307, baseType: !283, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!10274 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !10263, file: !10124, line: 321, baseType: !10275, size: 128, offset: 384)
!10275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_context", file: !10124, line: 310, size: 128, elements: !10276)
!10276 = !{!10277, !10282}
!10277 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !10275, file: !10124, line: 311, baseType: !10278, size: 64)
!10278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10279, size: 64)
!10279 = !DISubroutineType(types: !10280)
!10280 = !{null, !10281}
!10281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10275, size: 64)
!10282 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10275, file: !10124, line: 312, baseType: !3551, size: 64, offset: 64)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !10263, file: !10124, line: 322, baseType: !3645, size: 64, offset: 512)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !10263, file: !10124, line: 323, baseType: !232, size: 32, offset: 576)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !10263, file: !10124, line: 324, baseType: !232, size: 32, offset: 608)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !10123, file: !10124, line: 365, baseType: !10287, size: 192, offset: 3904)
!10287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf", file: !10124, line: 297, size: 192, elements: !10288)
!10288 = !{!10289, !10290, !10294, !10295}
!10289 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10287, file: !10124, line: 298, baseType: !232, size: 32)
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10287, file: !10124, line: 299, baseType: !10291, size: 8, offset: 32)
!10291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_flags", file: !10124, line: 283, size: 8, elements: !10292)
!10292 = !{!10293}
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10291, file: !10124, line: 284, baseType: !283, size: 8, flags: DIFlagBitField, extraData: i64 0)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !10287, file: !10124, line: 300, baseType: !232, size: 32, offset: 64)
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10287, file: !10124, line: 301, baseType: !10296, size: 64, offset: 128)
!10296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10297, size: 64)
!10297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_state", file: !10124, line: 287, size: 64, elements: !10298)
!10298 = !{!10299, !10304, !10305, !10306}
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10297, file: !10124, line: 291, baseType: !10300, size: 8)
!10300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10297, file: !10124, line: 288, size: 8, elements: !10301)
!10301 = !{!10302, !10303}
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !10300, file: !10124, line: 289, baseType: !283, size: 1, flags: DIFlagBitField, extraData: i64 0)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !10300, file: !10124, line: 290, baseType: !283, size: 7, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !10297, file: !10124, line: 292, baseType: !283, size: 8, offset: 8)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !10297, file: !10124, line: 293, baseType: !283, size: 8, offset: 16)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !10297, file: !10124, line: 294, baseType: !232, size: 32, offset: 32)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !10123, file: !10124, line: 366, baseType: !10308, size: 64, offset: 4096)
!10308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_dir", file: !10124, line: 209, size: 64, elements: !10309)
!10309 = !{!10310}
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !10308, file: !10124, line: 210, baseType: !255, size: 64)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10123, file: !10124, line: 367, baseType: !10312, size: 384, offset: 4160)
!10312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_data", file: !10124, line: 341, size: 384, elements: !10313)
!10313 = !{!10314, !10317, !10318, !10319}
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !10312, file: !10124, line: 342, baseType: !10315, size: 64)
!10315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10316, size: 64)
!10316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10188)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !10312, file: !10124, line: 343, baseType: !238, size: 128, offset: 64)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible", scope: !10312, file: !10124, line: 344, baseType: !10315, size: 64, offset: 192)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "subnodes", scope: !10312, file: !10124, line: 345, baseType: !238, size: 128, offset: 256)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !10123, file: !10124, line: 368, baseType: !10321, size: 64, offset: 4544)
!10321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10322, size: 64)
!10322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_scan_handler", file: !10124, line: 122, size: 1216, elements: !10323)
!10323 = !{!10324, !10325, !10326, !10331, !10335, !10339, !10340, !10341}
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !10322, file: !10124, line: 123, baseType: !4059, size: 64)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !10322, file: !10124, line: 124, baseType: !238, size: 128, offset: 64)
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !10322, file: !10124, line: 125, baseType: !10327, size: 64, offset: 192)
!10327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10328, size: 64)
!10328 = !DISubroutineType(types: !10329)
!10329 = !{!576, !309, !10330}
!10330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !10322, file: !10124, line: 126, baseType: !10332, size: 64, offset: 256)
!10332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10333, size: 64)
!10333 = !DISubroutineType(types: !10334)
!10334 = !{!232, !10122, !4059}
!10335 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !10322, file: !10124, line: 127, baseType: !10336, size: 64, offset: 320)
!10336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10337, size: 64)
!10337 = !DISubroutineType(types: !10338)
!10338 = !{null, !10122}
!10339 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !10322, file: !10124, line: 128, baseType: !3577, size: 64, offset: 384)
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !10322, file: !10124, line: 129, baseType: !3577, size: 64, offset: 448)
!10341 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !10322, file: !10124, line: 130, baseType: !10342, size: 704, offset: 512)
!10342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_profile", file: !10124, line: 108, size: 704, elements: !10343)
!10343 = !{!10344, !10345, !10349, !10350, !10351}
!10344 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !10342, file: !10124, line: 109, baseType: !314, size: 512)
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "scan_dependent", scope: !10342, file: !10124, line: 110, baseType: !10346, size: 64, offset: 512)
!10346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10347, size: 64)
!10347 = !DISubroutineType(types: !10348)
!10348 = !{!232, !10122}
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "notify_online", scope: !10342, file: !10124, line: 111, baseType: !10336, size: 64, offset: 576)
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !10342, file: !10124, line: 112, baseType: !576, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!10351 = !DIDerivedType(tag: DW_TAG_member, name: "demand_offline", scope: !10342, file: !10124, line: 113, baseType: !576, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !10123, file: !10124, line: 369, baseType: !10353, size: 64, offset: 4608)
!10353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10354, size: 64)
!10354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_context", file: !10124, line: 138, size: 256, elements: !10355)
!10355 = !{!10356, !10357, !10361, !10365}
!10356 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !10354, file: !10124, line: 139, baseType: !10122, size: 64)
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !10354, file: !10124, line: 140, baseType: !10358, size: 64, offset: 64)
!10358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10359, size: 64)
!10359 = !DISubroutineType(types: !10360)
!10360 = !{!232, !10122, !223}
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !10354, file: !10124, line: 141, baseType: !10362, size: 64, offset: 128)
!10362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10363, size: 64)
!10363 = !DISubroutineType(types: !10364)
!10364 = !{null, !10122, !223}
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !10354, file: !10124, line: 142, baseType: !10336, size: 64, offset: 192)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10123, file: !10124, line: 370, baseType: !10367, size: 64, offset: 4672)
!10367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10368, size: 64)
!10368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_driver", file: !10124, line: 162, size: 2816, elements: !10369)
!10369 = !{!10370, !10374, !10375, !10376, !10377, !10386, !10387}
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10368, file: !10124, line: 163, baseType: !10371, size: 640)
!10371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 640, elements: !10372)
!10372 = !{!10373}
!10373 = !DISubrange(count: 80)
!10374 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !10368, file: !10124, line: 164, baseType: !10371, size: 640, offset: 640)
!10375 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !10368, file: !10124, line: 165, baseType: !4059, size: 64, offset: 1280)
!10376 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10368, file: !10124, line: 166, baseType: !7, size: 32, offset: 1344)
!10377 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10368, file: !10124, line: 167, baseType: !10378, size: 192, offset: 1408)
!10378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_ops", file: !10124, line: 154, size: 192, elements: !10379)
!10379 = !{!10380, !10382, !10384}
!10380 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !10378, file: !10124, line: 155, baseType: !10381, size: 64)
!10381 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_add", file: !10124, line: 150, baseType: !10346)
!10382 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !10378, file: !10124, line: 156, baseType: !10383, size: 64, offset: 64)
!10383 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_remove", file: !10124, line: 151, baseType: !10346)
!10384 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !10378, file: !10124, line: 157, baseType: !10385, size: 64, offset: 128)
!10385 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_notify", file: !10124, line: 152, baseType: !10362)
!10386 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !10368, file: !10124, line: 168, baseType: !3540, size: 1152, offset: 1600)
!10387 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !10368, file: !10124, line: 169, baseType: !305, size: 64, offset: 2752)
!10388 = !DIDerivedType(tag: DW_TAG_member, name: "driver_gpios", scope: !10123, file: !10124, line: 371, baseType: !10389, size: 64, offset: 4736)
!10389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10390, size: 64)
!10390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10391)
!10391 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_mapping", file: !10124, line: 348, flags: DIFlagFwdDecl)
!10392 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !10123, file: !10124, line: 372, baseType: !222, size: 64, offset: 4800)
!10393 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10123, file: !10124, line: 373, baseType: !3552, size: 5568, offset: 4864)
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_count", scope: !10123, file: !10124, line: 374, baseType: !7, size: 32, offset: 10432)
!10395 = !DIDerivedType(tag: DW_TAG_member, name: "dep_unmet", scope: !10123, file: !10124, line: 375, baseType: !7, size: 32, offset: 10464)
!10396 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_list", scope: !10123, file: !10124, line: 376, baseType: !238, size: 128, offset: 10496)
!10397 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_lock", scope: !10123, file: !10124, line: 377, baseType: !1259, size: 192, offset: 10624)
!10398 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !10123, file: !10124, line: 378, baseType: !10336, size: 64, offset: 10816)
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !10117, file: !6922, line: 22, baseType: !222, size: 64, offset: 128)
!10400 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !10117, file: !6922, line: 25, baseType: !222, size: 64, offset: 192)
!10401 = !DIDerivedType(tag: DW_TAG_member, name: "vmd_dev", scope: !10117, file: !6922, line: 28, baseType: !247, size: 64, offset: 256)
!10402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10403, size: 64)
!10403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!10404 = !DILocalVariable(name: "bus", arg: 1, scope: !10113, file: !6922, line: 36, type: !10402)
!10405 = !DILocation(line: 36, column: 72, scope: !10113)
!10406 = !DILocation(line: 38, column: 9, scope: !10113)
!10407 = !DILocation(line: 38, column: 14, scope: !10113)
!10408 = !DILocation(line: 38, column: 2, scope: !10113)
!10409 = distinct !DISubprogram(name: "__list_add", scope: !5910, file: !5910, line: 63, type: !10410, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10410 = !DISubroutineType(types: !10411)
!10411 = !{null, !241, !241, !241}
!10412 = !DILocalVariable(name: "new", arg: 1, scope: !10409, file: !5910, line: 63, type: !241)
!10413 = !DILocation(line: 63, column: 49, scope: !10409)
!10414 = !DILocalVariable(name: "prev", arg: 2, scope: !10409, file: !5910, line: 64, type: !241)
!10415 = !DILocation(line: 64, column: 28, scope: !10409)
!10416 = !DILocalVariable(name: "next", arg: 3, scope: !10409, file: !5910, line: 65, type: !241)
!10417 = !DILocation(line: 65, column: 28, scope: !10409)
!10418 = !DILocation(line: 67, column: 24, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10409, file: !5910, line: 67, column: 6)
!10420 = !DILocation(line: 67, column: 29, scope: !10419)
!10421 = !DILocation(line: 67, column: 35, scope: !10419)
!10422 = !DILocation(line: 67, column: 7, scope: !10419)
!10423 = !DILocation(line: 67, column: 6, scope: !10409)
!10424 = !DILocation(line: 68, column: 3, scope: !10419)
!10425 = !DILocation(line: 70, column: 15, scope: !10409)
!10426 = !DILocation(line: 70, column: 2, scope: !10409)
!10427 = !DILocation(line: 70, column: 8, scope: !10409)
!10428 = !DILocation(line: 70, column: 13, scope: !10409)
!10429 = !DILocation(line: 71, column: 14, scope: !10409)
!10430 = !DILocation(line: 71, column: 2, scope: !10409)
!10431 = !DILocation(line: 71, column: 7, scope: !10409)
!10432 = !DILocation(line: 71, column: 12, scope: !10409)
!10433 = !DILocation(line: 72, column: 14, scope: !10409)
!10434 = !DILocation(line: 72, column: 2, scope: !10409)
!10435 = !DILocation(line: 72, column: 7, scope: !10409)
!10436 = !DILocation(line: 72, column: 12, scope: !10409)
!10437 = !DILocation(line: 73, column: 2, scope: !10409)
!10438 = !DILocation(line: 73, column: 2, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10409, file: !5910, line: 73, column: 2)
!10440 = !DILocation(line: 73, column: 2, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10439, file: !5910, line: 73, column: 2)
!10442 = !DILocation(line: 73, column: 2, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10439, file: !5910, line: 73, column: 2)
!10444 = !DILocation(line: 74, column: 1, scope: !10409)
!10445 = distinct !DISubprogram(name: "__list_add_valid", scope: !5910, file: !5910, line: 45, type: !10446, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10446 = !DISubroutineType(types: !10447)
!10447 = !{!576, !241, !241, !241}
!10448 = !DILocalVariable(name: "new", arg: 1, scope: !10445, file: !5910, line: 45, type: !241)
!10449 = !DILocation(line: 45, column: 55, scope: !10445)
!10450 = !DILocalVariable(name: "prev", arg: 2, scope: !10445, file: !5910, line: 46, type: !241)
!10451 = !DILocation(line: 46, column: 23, scope: !10445)
!10452 = !DILocalVariable(name: "next", arg: 3, scope: !10445, file: !5910, line: 47, type: !241)
!10453 = !DILocation(line: 47, column: 23, scope: !10445)
!10454 = !DILocation(line: 49, column: 2, scope: !10445)
!10455 = distinct !DISubprogram(name: "pm_runtime_get_sync", scope: !10456, file: !10456, line: 384, type: !3587, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10456 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!10457 = !DILocalVariable(name: "dev", arg: 1, scope: !10455, file: !10456, line: 384, type: !3551)
!10458 = !DILocation(line: 384, column: 54, scope: !10455)
!10459 = !DILocation(line: 386, column: 29, scope: !10455)
!10460 = !DILocation(line: 386, column: 9, scope: !10455)
!10461 = !DILocation(line: 386, column: 2, scope: !10455)
!10462 = distinct !DISubprogram(name: "pci_enable_crs", scope: !3, file: !3, line: 1139, type: !3500, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10463 = !DILocalVariable(name: "pdev", arg: 1, scope: !10462, file: !3, line: 1139, type: !247)
!10464 = !DILocation(line: 1139, column: 44, scope: !10462)
!10465 = !DILocalVariable(name: "root_cap", scope: !10462, file: !3, line: 1141, type: !945)
!10466 = !DILocation(line: 1141, column: 6, scope: !10462)
!10467 = !DILocation(line: 1144, column: 28, scope: !10462)
!10468 = !DILocation(line: 1144, column: 2, scope: !10462)
!10469 = !DILocation(line: 1145, column: 6, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 1145, column: 6)
!10471 = !DILocation(line: 1145, column: 15, scope: !10470)
!10472 = !DILocation(line: 1145, column: 6, scope: !10462)
!10473 = !DILocation(line: 1146, column: 28, scope: !10470)
!10474 = !DILocation(line: 1146, column: 3, scope: !10470)
!10475 = !DILocation(line: 1148, column: 1, scope: !10462)
!10476 = distinct !DISubprogram(name: "pci_ea_fixed_busnrs", scope: !3, file: !3, line: 1163, type: !10477, scopeLine: 1164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10477 = !DISubroutineType(types: !10478)
!10478 = !{!576, !247, !294, !294}
!10479 = !DILocalVariable(name: "dev", arg: 1, scope: !10476, file: !3, line: 1163, type: !247)
!10480 = !DILocation(line: 1163, column: 49, scope: !10476)
!10481 = !DILocalVariable(name: "sec", arg: 2, scope: !10476, file: !3, line: 1163, type: !294)
!10482 = !DILocation(line: 1163, column: 58, scope: !10476)
!10483 = !DILocalVariable(name: "sub", arg: 3, scope: !10476, file: !3, line: 1163, type: !294)
!10484 = !DILocation(line: 1163, column: 67, scope: !10476)
!10485 = !DILocalVariable(name: "ea", scope: !10476, file: !3, line: 1165, type: !232)
!10486 = !DILocation(line: 1165, column: 6, scope: !10476)
!10487 = !DILocalVariable(name: "offset", scope: !10476, file: !3, line: 1165, type: !232)
!10488 = !DILocation(line: 1165, column: 10, scope: !10476)
!10489 = !DILocalVariable(name: "dw", scope: !10476, file: !3, line: 1166, type: !223)
!10490 = !DILocation(line: 1166, column: 6, scope: !10476)
!10491 = !DILocalVariable(name: "ea_sec", scope: !10476, file: !3, line: 1167, type: !283)
!10492 = !DILocation(line: 1167, column: 5, scope: !10476)
!10493 = !DILocalVariable(name: "ea_sub", scope: !10476, file: !3, line: 1167, type: !283)
!10494 = !DILocation(line: 1167, column: 13, scope: !10476)
!10495 = !DILocation(line: 1169, column: 6, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 1169, column: 6)
!10497 = !DILocation(line: 1169, column: 11, scope: !10496)
!10498 = !DILocation(line: 1169, column: 20, scope: !10496)
!10499 = !DILocation(line: 1169, column: 6, scope: !10476)
!10500 = !DILocation(line: 1170, column: 3, scope: !10496)
!10501 = !DILocation(line: 1173, column: 27, scope: !10476)
!10502 = !DILocation(line: 1173, column: 7, scope: !10476)
!10503 = !DILocation(line: 1173, column: 5, scope: !10476)
!10504 = !DILocation(line: 1174, column: 7, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 1174, column: 6)
!10506 = !DILocation(line: 1174, column: 6, scope: !10476)
!10507 = !DILocation(line: 1175, column: 3, scope: !10505)
!10508 = !DILocation(line: 1177, column: 11, scope: !10476)
!10509 = !DILocation(line: 1177, column: 14, scope: !10476)
!10510 = !DILocation(line: 1177, column: 9, scope: !10476)
!10511 = !DILocation(line: 1178, column: 24, scope: !10476)
!10512 = !DILocation(line: 1178, column: 29, scope: !10476)
!10513 = !DILocation(line: 1178, column: 2, scope: !10476)
!10514 = !DILocation(line: 1179, column: 12, scope: !10476)
!10515 = !DILocation(line: 1179, column: 15, scope: !10476)
!10516 = !DILocation(line: 1179, column: 9, scope: !10476)
!10517 = !DILocation(line: 1180, column: 12, scope: !10476)
!10518 = !DILocation(line: 1180, column: 15, scope: !10476)
!10519 = !DILocation(line: 1180, column: 38, scope: !10476)
!10520 = !DILocation(line: 1180, column: 11, scope: !10476)
!10521 = !DILocation(line: 1180, column: 9, scope: !10476)
!10522 = !DILocation(line: 1181, column: 6, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 1181, column: 6)
!10524 = !DILocation(line: 1181, column: 14, scope: !10523)
!10525 = !DILocation(line: 1181, column: 19, scope: !10523)
!10526 = !DILocation(line: 1181, column: 22, scope: !10523)
!10527 = !DILocation(line: 1181, column: 31, scope: !10523)
!10528 = !DILocation(line: 1181, column: 29, scope: !10523)
!10529 = !DILocation(line: 1181, column: 6, scope: !10476)
!10530 = !DILocation(line: 1182, column: 3, scope: !10523)
!10531 = !DILocation(line: 1184, column: 9, scope: !10476)
!10532 = !DILocation(line: 1184, column: 3, scope: !10476)
!10533 = !DILocation(line: 1184, column: 7, scope: !10476)
!10534 = !DILocation(line: 1185, column: 9, scope: !10476)
!10535 = !DILocation(line: 1185, column: 3, scope: !10476)
!10536 = !DILocation(line: 1185, column: 7, scope: !10476)
!10537 = !DILocation(line: 1186, column: 2, scope: !10476)
!10538 = !DILocation(line: 1187, column: 1, scope: !10476)
!10539 = distinct !DISubprogram(name: "pm_runtime_put", scope: !10456, file: !10456, line: 417, type: !3587, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10540 = !DILocalVariable(name: "dev", arg: 1, scope: !10539, file: !10456, line: 417, type: !3551)
!10541 = !DILocation(line: 417, column: 49, scope: !10539)
!10542 = !DILocation(line: 419, column: 27, scope: !10539)
!10543 = !DILocation(line: 419, column: 9, scope: !10539)
!10544 = !DILocation(line: 419, column: 2, scope: !10539)
!10545 = distinct !DISubprogram(name: "pci_physfn", scope: !115, file: !115, line: 505, type: !6446, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10546 = !DILocalVariable(name: "dev", arg: 1, scope: !10545, file: !115, line: 505, type: !247)
!10547 = !DILocation(line: 505, column: 58, scope: !10545)
!10548 = !DILocation(line: 508, column: 6, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10545, file: !115, line: 508, column: 6)
!10550 = !DILocation(line: 508, column: 11, scope: !10549)
!10551 = !DILocation(line: 508, column: 6, scope: !10545)
!10552 = !DILocation(line: 509, column: 9, scope: !10549)
!10553 = !DILocation(line: 509, column: 14, scope: !10549)
!10554 = !DILocation(line: 509, column: 7, scope: !10549)
!10555 = !DILocation(line: 509, column: 3, scope: !10549)
!10556 = !DILocation(line: 511, column: 9, scope: !10545)
!10557 = !DILocation(line: 511, column: 2, scope: !10545)
!10558 = distinct !DISubprogram(name: "pcie_caps_reg", scope: !115, file: !115, line: 2148, type: !10559, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10559 = !DISubroutineType(types: !10560)
!10560 = !{!945, !4383}
!10561 = !DILocalVariable(name: "dev", arg: 1, scope: !10558, file: !115, line: 2148, type: !4383)
!10562 = !DILocation(line: 2148, column: 55, scope: !10558)
!10563 = !DILocation(line: 2150, column: 9, scope: !10558)
!10564 = !DILocation(line: 2150, column: 14, scope: !10558)
!10565 = !DILocation(line: 2150, column: 2, scope: !10558)
!10566 = distinct !DISubprogram(name: "pci_ext_cfg_is_aliased", scope: !3, file: !3, line: 1593, type: !6591, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10567 = !DILocalVariable(name: "dev", arg: 1, scope: !10566, file: !3, line: 1593, type: !247)
!10568 = !DILocation(line: 1593, column: 52, scope: !10566)
!10569 = !DILocalVariable(name: "pos", scope: !10566, file: !3, line: 1596, type: !232)
!10570 = !DILocation(line: 1596, column: 6, scope: !10566)
!10571 = !DILocalVariable(name: "header", scope: !10566, file: !3, line: 1597, type: !223)
!10572 = !DILocation(line: 1597, column: 6, scope: !10566)
!10573 = !DILocalVariable(name: "tmp", scope: !10566, file: !3, line: 1597, type: !223)
!10574 = !DILocation(line: 1597, column: 14, scope: !10566)
!10575 = !DILocation(line: 1599, column: 24, scope: !10566)
!10576 = !DILocation(line: 1599, column: 2, scope: !10566)
!10577 = !DILocation(line: 1601, column: 11, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 1601, column: 2)
!10579 = !DILocation(line: 1601, column: 7, scope: !10578)
!10580 = !DILocation(line: 1602, column: 7, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10578, file: !3, line: 1601, column: 2)
!10582 = !DILocation(line: 1602, column: 11, scope: !10581)
!10583 = !DILocation(line: 1601, column: 2, scope: !10578)
!10584 = !DILocation(line: 1603, column: 29, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 1603, column: 7)
!10586 = distinct !DILexicalBlock(scope: !10581, file: !3, line: 1602, column: 64)
!10587 = !DILocation(line: 1603, column: 34, scope: !10585)
!10588 = !DILocation(line: 1603, column: 7, scope: !10585)
!10589 = !DILocation(line: 1603, column: 45, scope: !10585)
!10590 = !DILocation(line: 1604, column: 7, scope: !10585)
!10591 = !DILocation(line: 1604, column: 10, scope: !10585)
!10592 = !DILocation(line: 1604, column: 20, scope: !10585)
!10593 = !DILocation(line: 1604, column: 17, scope: !10585)
!10594 = !DILocation(line: 1603, column: 7, scope: !10586)
!10595 = !DILocation(line: 1605, column: 4, scope: !10585)
!10596 = !DILocation(line: 1606, column: 2, scope: !10586)
!10597 = !DILocation(line: 1602, column: 41, scope: !10581)
!10598 = !DILocation(line: 1601, column: 2, scope: !10581)
!10599 = distinct !{!10599, !10583, !10600}
!10600 = !DILocation(line: 1606, column: 2, scope: !10578)
!10601 = !DILocation(line: 1608, column: 2, scope: !10566)
!10602 = !DILocation(line: 1612, column: 1, scope: !10566)
!10603 = distinct !DISubprogram(name: "pci_pcie_cap", scope: !115, file: !115, line: 2128, type: !3512, scopeLine: 2129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10604 = !DILocalVariable(name: "dev", arg: 1, scope: !10603, file: !115, line: 2128, type: !247)
!10605 = !DILocation(line: 2128, column: 48, scope: !10603)
!10606 = !DILocation(line: 2130, column: 9, scope: !10603)
!10607 = !DILocation(line: 2130, column: 14, scope: !10603)
!10608 = !DILocation(line: 2130, column: 2, scope: !10603)
!10609 = distinct !DISubprogram(name: "pci_configure_mps", scope: !3, file: !3, line: 1953, type: !3500, scopeLine: 1954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10610 = !DILocalVariable(name: "dev", arg: 1, scope: !10609, file: !3, line: 1953, type: !247)
!10611 = !DILocation(line: 1953, column: 47, scope: !10609)
!10612 = !DILocalVariable(name: "bridge", scope: !10609, file: !3, line: 1955, type: !247)
!10613 = !DILocation(line: 1955, column: 18, scope: !10609)
!10614 = !DILocation(line: 1955, column: 47, scope: !10609)
!10615 = !DILocation(line: 1955, column: 27, scope: !10609)
!10616 = !DILocalVariable(name: "mps", scope: !10609, file: !3, line: 1956, type: !232)
!10617 = !DILocation(line: 1956, column: 6, scope: !10609)
!10618 = !DILocalVariable(name: "mpss", scope: !10609, file: !3, line: 1956, type: !232)
!10619 = !DILocation(line: 1956, column: 11, scope: !10609)
!10620 = !DILocalVariable(name: "p_mps", scope: !10609, file: !3, line: 1956, type: !232)
!10621 = !DILocation(line: 1956, column: 17, scope: !10609)
!10622 = !DILocalVariable(name: "rc", scope: !10609, file: !3, line: 1956, type: !232)
!10623 = !DILocation(line: 1956, column: 24, scope: !10609)
!10624 = !DILocation(line: 1958, column: 19, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 1958, column: 6)
!10626 = !DILocation(line: 1958, column: 7, scope: !10625)
!10627 = !DILocation(line: 1958, column: 6, scope: !10609)
!10628 = !DILocation(line: 1959, column: 3, scope: !10625)
!10629 = !DILocation(line: 1962, column: 6, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 1962, column: 6)
!10631 = !DILocation(line: 1962, column: 11, scope: !10630)
!10632 = !DILocation(line: 1962, column: 6, scope: !10609)
!10633 = !DILocation(line: 1963, column: 3, scope: !10630)
!10634 = !DILocation(line: 1969, column: 20, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 1969, column: 6)
!10636 = !DILocation(line: 1969, column: 6, scope: !10635)
!10637 = !DILocation(line: 1969, column: 25, scope: !10635)
!10638 = !DILocation(line: 1969, column: 6, scope: !10609)
!10639 = !DILocation(line: 1970, column: 7, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 1970, column: 7)
!10641 = distinct !DILexicalBlock(scope: !10635, file: !3, line: 1969, column: 49)
!10642 = !DILocation(line: 1970, column: 23, scope: !10640)
!10643 = !DILocation(line: 1970, column: 7, scope: !10641)
!10644 = !DILocation(line: 1971, column: 8, scope: !10640)
!10645 = !DILocation(line: 1971, column: 4, scope: !10640)
!10646 = !DILocation(line: 1973, column: 17, scope: !10640)
!10647 = !DILocation(line: 1973, column: 22, scope: !10640)
!10648 = !DILocation(line: 1973, column: 14, scope: !10640)
!10649 = !DILocation(line: 1973, column: 8, scope: !10640)
!10650 = !DILocation(line: 1974, column: 21, scope: !10641)
!10651 = !DILocation(line: 1974, column: 26, scope: !10641)
!10652 = !DILocation(line: 1974, column: 8, scope: !10641)
!10653 = !DILocation(line: 1974, column: 6, scope: !10641)
!10654 = !DILocation(line: 1975, column: 7, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 1975, column: 7)
!10656 = !DILocation(line: 1975, column: 7, scope: !10641)
!10657 = !DILocation(line: 1976, column: 4, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 1975, column: 11)
!10659 = !DILocation(line: 1978, column: 3, scope: !10658)
!10660 = !DILocation(line: 1979, column: 3, scope: !10641)
!10661 = !DILocation(line: 1982, column: 7, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 1982, column: 6)
!10663 = !DILocation(line: 1982, column: 14, scope: !10662)
!10664 = !DILocation(line: 1982, column: 30, scope: !10662)
!10665 = !DILocation(line: 1982, column: 18, scope: !10662)
!10666 = !DILocation(line: 1982, column: 6, scope: !10609)
!10667 = !DILocation(line: 1983, column: 3, scope: !10662)
!10668 = !DILocation(line: 1985, column: 21, scope: !10609)
!10669 = !DILocation(line: 1985, column: 8, scope: !10609)
!10670 = !DILocation(line: 1985, column: 6, scope: !10609)
!10671 = !DILocation(line: 1986, column: 23, scope: !10609)
!10672 = !DILocation(line: 1986, column: 10, scope: !10609)
!10673 = !DILocation(line: 1986, column: 8, scope: !10609)
!10674 = !DILocation(line: 1988, column: 6, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 1988, column: 6)
!10676 = !DILocation(line: 1988, column: 13, scope: !10675)
!10677 = !DILocation(line: 1988, column: 10, scope: !10675)
!10678 = !DILocation(line: 1988, column: 6, scope: !10609)
!10679 = !DILocation(line: 1989, column: 3, scope: !10675)
!10680 = !DILocation(line: 1991, column: 6, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 1991, column: 6)
!10682 = !DILocation(line: 1991, column: 22, scope: !10681)
!10683 = !DILocation(line: 1991, column: 6, scope: !10609)
!10684 = !DILocation(line: 1992, column: 3, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 1991, column: 44)
!10686 = !DILocation(line: 1994, column: 3, scope: !10685)
!10687 = !DILocation(line: 2001, column: 6, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 2001, column: 6)
!10689 = !DILocation(line: 2001, column: 22, scope: !10688)
!10690 = !DILocation(line: 2001, column: 6, scope: !10609)
!10691 = !DILocation(line: 2002, column: 3, scope: !10688)
!10692 = !DILocation(line: 2004, column: 16, scope: !10609)
!10693 = !DILocation(line: 2004, column: 21, scope: !10609)
!10694 = !DILocation(line: 2004, column: 13, scope: !10609)
!10695 = !DILocation(line: 2004, column: 7, scope: !10609)
!10696 = !DILocation(line: 2005, column: 6, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 2005, column: 6)
!10698 = !DILocation(line: 2005, column: 13, scope: !10697)
!10699 = !DILocation(line: 2005, column: 11, scope: !10697)
!10700 = !DILocation(line: 2005, column: 19, scope: !10697)
!10701 = !DILocation(line: 2005, column: 36, scope: !10697)
!10702 = !DILocation(line: 2005, column: 22, scope: !10697)
!10703 = !DILocation(line: 2005, column: 44, scope: !10697)
!10704 = !DILocation(line: 2005, column: 6, scope: !10609)
!10705 = !DILocation(line: 2006, column: 16, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 2005, column: 71)
!10707 = !DILocation(line: 2006, column: 24, scope: !10706)
!10708 = !DILocation(line: 2006, column: 3, scope: !10706)
!10709 = !DILocation(line: 2007, column: 3, scope: !10706)
!10710 = !DILocation(line: 2009, column: 24, scope: !10706)
!10711 = !DILocation(line: 2009, column: 11, scope: !10706)
!10712 = !DILocation(line: 2009, column: 9, scope: !10706)
!10713 = !DILocation(line: 2010, column: 2, scope: !10706)
!10714 = !DILocation(line: 2012, column: 20, scope: !10609)
!10715 = !DILocation(line: 2012, column: 25, scope: !10609)
!10716 = !DILocation(line: 2012, column: 7, scope: !10609)
!10717 = !DILocation(line: 2012, column: 5, scope: !10609)
!10718 = !DILocation(line: 2013, column: 6, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 2013, column: 6)
!10720 = !DILocation(line: 2013, column: 6, scope: !10609)
!10721 = !DILocation(line: 2014, column: 3, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 2013, column: 10)
!10723 = !DILocation(line: 2016, column: 3, scope: !10722)
!10724 = !DILocation(line: 2019, column: 2, scope: !10609)
!10725 = !DILocation(line: 2021, column: 1, scope: !10609)
!10726 = distinct !DISubprogram(name: "pci_configure_relaxed_ordering", scope: !3, file: !3, line: 2085, type: !3500, scopeLine: 2086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10727 = !DILocalVariable(name: "dev", arg: 1, scope: !10726, file: !3, line: 2085, type: !247)
!10728 = !DILocation(line: 2085, column: 60, scope: !10726)
!10729 = !DILocalVariable(name: "root", scope: !10726, file: !3, line: 2087, type: !247)
!10730 = !DILocation(line: 2087, column: 18, scope: !10726)
!10731 = !DILocation(line: 2090, column: 6, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 2090, column: 6)
!10733 = !DILocation(line: 2090, column: 11, scope: !10732)
!10734 = !DILocation(line: 2090, column: 6, scope: !10726)
!10735 = !DILocation(line: 2091, column: 3, scope: !10732)
!10736 = !DILocation(line: 2093, column: 37, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 2093, column: 6)
!10738 = !DILocation(line: 2093, column: 7, scope: !10737)
!10739 = !DILocation(line: 2093, column: 6, scope: !10726)
!10740 = !DILocation(line: 2094, column: 3, scope: !10737)
!10741 = !DILocation(line: 2100, column: 29, scope: !10726)
!10742 = !DILocation(line: 2100, column: 9, scope: !10726)
!10743 = !DILocation(line: 2100, column: 7, scope: !10726)
!10744 = !DILocation(line: 2101, column: 7, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 2101, column: 6)
!10746 = !DILocation(line: 2101, column: 6, scope: !10726)
!10747 = !DILocation(line: 2102, column: 3, scope: !10745)
!10748 = !DILocation(line: 2104, column: 6, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 2104, column: 6)
!10750 = !DILocation(line: 2104, column: 12, scope: !10749)
!10751 = !DILocation(line: 2104, column: 22, scope: !10749)
!10752 = !DILocation(line: 2104, column: 6, scope: !10726)
!10753 = !DILocation(line: 2105, column: 30, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 2104, column: 59)
!10755 = !DILocation(line: 2105, column: 3, scope: !10754)
!10756 = !DILocation(line: 2107, column: 3, scope: !10754)
!10757 = !DILocation(line: 2108, column: 2, scope: !10754)
!10758 = !DILocation(line: 2109, column: 1, scope: !10726)
!10759 = distinct !DISubprogram(name: "pci_configure_ltr", scope: !3, file: !3, line: 2111, type: !3500, scopeLine: 2112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10760 = !DILocalVariable(name: "dev", arg: 1, scope: !10759, file: !3, line: 2111, type: !247)
!10761 = !DILocation(line: 2111, column: 47, scope: !10759)
!10762 = !DILocalVariable(name: "host", scope: !10759, file: !3, line: 2114, type: !4364)
!10763 = !DILocation(line: 2114, column: 26, scope: !10759)
!10764 = !DILocation(line: 2114, column: 54, scope: !10759)
!10765 = !DILocation(line: 2114, column: 59, scope: !10759)
!10766 = !DILocation(line: 2114, column: 33, scope: !10759)
!10767 = !DILocalVariable(name: "bridge", scope: !10759, file: !3, line: 2115, type: !247)
!10768 = !DILocation(line: 2115, column: 18, scope: !10759)
!10769 = !DILocalVariable(name: "cap", scope: !10759, file: !3, line: 2116, type: !223)
!10770 = !DILocation(line: 2116, column: 6, scope: !10759)
!10771 = !DILocalVariable(name: "ctl", scope: !10759, file: !3, line: 2116, type: !223)
!10772 = !DILocation(line: 2116, column: 11, scope: !10759)
!10773 = !DILocation(line: 2118, column: 19, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 2118, column: 6)
!10775 = !DILocation(line: 2118, column: 7, scope: !10774)
!10776 = !DILocation(line: 2118, column: 6, scope: !10759)
!10777 = !DILocation(line: 2119, column: 3, scope: !10774)
!10778 = !DILocation(line: 2122, column: 38, scope: !10759)
!10779 = !DILocation(line: 2122, column: 14, scope: !10759)
!10780 = !DILocation(line: 2122, column: 2, scope: !10759)
!10781 = !DILocation(line: 2122, column: 7, scope: !10759)
!10782 = !DILocation(line: 2122, column: 12, scope: !10759)
!10783 = !DILocation(line: 2124, column: 29, scope: !10759)
!10784 = !DILocation(line: 2124, column: 2, scope: !10759)
!10785 = !DILocation(line: 2125, column: 8, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 2125, column: 6)
!10787 = !DILocation(line: 2125, column: 12, scope: !10786)
!10788 = !DILocation(line: 2125, column: 6, scope: !10759)
!10789 = !DILocation(line: 2126, column: 3, scope: !10786)
!10790 = !DILocation(line: 2128, column: 29, scope: !10759)
!10791 = !DILocation(line: 2128, column: 2, scope: !10759)
!10792 = !DILocation(line: 2129, column: 6, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 2129, column: 6)
!10794 = !DILocation(line: 2129, column: 10, scope: !10793)
!10795 = !DILocation(line: 2129, column: 6, scope: !10759)
!10796 = !DILocation(line: 2130, column: 21, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 2130, column: 7)
!10798 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 2129, column: 36)
!10799 = !DILocation(line: 2130, column: 7, scope: !10797)
!10800 = !DILocation(line: 2130, column: 26, scope: !10797)
!10801 = !DILocation(line: 2130, column: 7, scope: !10798)
!10802 = !DILocation(line: 2131, column: 4, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10797, file: !3, line: 2130, column: 53)
!10804 = !DILocation(line: 2131, column: 9, scope: !10803)
!10805 = !DILocation(line: 2131, column: 18, scope: !10803)
!10806 = !DILocation(line: 2132, column: 4, scope: !10803)
!10807 = !DILocation(line: 2135, column: 32, scope: !10798)
!10808 = !DILocation(line: 2135, column: 12, scope: !10798)
!10809 = !DILocation(line: 2135, column: 10, scope: !10798)
!10810 = !DILocation(line: 2136, column: 7, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 2136, column: 7)
!10812 = !DILocation(line: 2136, column: 14, scope: !10811)
!10813 = !DILocation(line: 2136, column: 17, scope: !10811)
!10814 = !DILocation(line: 2136, column: 25, scope: !10811)
!10815 = !DILocation(line: 2136, column: 7, scope: !10798)
!10816 = !DILocation(line: 2137, column: 4, scope: !10811)
!10817 = !DILocation(line: 2137, column: 9, scope: !10811)
!10818 = !DILocation(line: 2137, column: 18, scope: !10811)
!10819 = !DILocation(line: 2139, column: 3, scope: !10798)
!10820 = !DILocation(line: 2142, column: 7, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 2142, column: 6)
!10822 = !DILocation(line: 2142, column: 13, scope: !10821)
!10823 = !DILocation(line: 2142, column: 6, scope: !10759)
!10824 = !DILocation(line: 2143, column: 3, scope: !10821)
!10825 = !DILocation(line: 2150, column: 20, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 2150, column: 6)
!10827 = !DILocation(line: 2150, column: 6, scope: !10826)
!10828 = !DILocation(line: 2150, column: 25, scope: !10826)
!10829 = !DILocation(line: 2150, column: 51, scope: !10826)
!10830 = !DILocation(line: 2151, column: 37, scope: !10826)
!10831 = !DILocation(line: 2151, column: 17, scope: !10826)
!10832 = !DILocation(line: 2151, column: 15, scope: !10826)
!10833 = !DILocation(line: 2151, column: 43, scope: !10826)
!10834 = !DILocation(line: 2152, column: 8, scope: !10826)
!10835 = !DILocation(line: 2152, column: 16, scope: !10826)
!10836 = !DILocation(line: 2150, column: 6, scope: !10759)
!10837 = !DILocation(line: 2153, column: 28, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10826, file: !3, line: 2152, column: 27)
!10839 = !DILocation(line: 2153, column: 3, scope: !10838)
!10840 = !DILocation(line: 2155, column: 3, scope: !10838)
!10841 = !DILocation(line: 2155, column: 8, scope: !10838)
!10842 = !DILocation(line: 2155, column: 17, scope: !10838)
!10843 = !DILocation(line: 2156, column: 2, scope: !10838)
!10844 = !DILocation(line: 2158, column: 1, scope: !10759)
!10845 = distinct !DISubprogram(name: "pci_configure_eetlp_prefix", scope: !3, file: !3, line: 2160, type: !3500, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10846 = !DILocalVariable(name: "dev", arg: 1, scope: !10845, file: !3, line: 2160, type: !247)
!10847 = !DILocation(line: 2160, column: 56, scope: !10845)
!10848 = !DILocation(line: 2184, column: 1, scope: !10845)
!10849 = distinct !DISubprogram(name: "pci_configure_serr", scope: !3, file: !3, line: 2186, type: !3500, scopeLine: 2187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10850 = !DILocalVariable(name: "dev", arg: 1, scope: !10849, file: !3, line: 2186, type: !247)
!10851 = !DILocation(line: 2186, column: 48, scope: !10849)
!10852 = !DILocalVariable(name: "control", scope: !10849, file: !3, line: 2188, type: !945)
!10853 = !DILocation(line: 2188, column: 6, scope: !10849)
!10854 = !DILocation(line: 2190, column: 6, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 2190, column: 6)
!10856 = !DILocation(line: 2190, column: 11, scope: !10855)
!10857 = !DILocation(line: 2190, column: 20, scope: !10855)
!10858 = !DILocation(line: 2190, column: 6, scope: !10849)
!10859 = !DILocation(line: 2196, column: 24, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 2190, column: 47)
!10861 = !DILocation(line: 2196, column: 3, scope: !10860)
!10862 = !DILocation(line: 2197, column: 9, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10860, file: !3, line: 2197, column: 7)
!10864 = !DILocation(line: 2197, column: 17, scope: !10863)
!10865 = !DILocation(line: 2197, column: 7, scope: !10860)
!10866 = !DILocation(line: 2198, column: 12, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10863, file: !3, line: 2197, column: 41)
!10868 = !DILocation(line: 2199, column: 26, scope: !10867)
!10869 = !DILocation(line: 2199, column: 51, scope: !10867)
!10870 = !DILocation(line: 2199, column: 4, scope: !10867)
!10871 = !DILocation(line: 2200, column: 3, scope: !10867)
!10872 = !DILocation(line: 2201, column: 2, scope: !10860)
!10873 = !DILocation(line: 2202, column: 1, scope: !10849)
!10874 = distinct !DISubprogram(name: "pcie_find_root_port", scope: !115, file: !115, line: 2169, type: !6446, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10875 = !DILocalVariable(name: "dev", arg: 1, scope: !10874, file: !115, line: 2169, type: !247)
!10876 = !DILocation(line: 2169, column: 67, scope: !10874)
!10877 = !DILocation(line: 2171, column: 2, scope: !10874)
!10878 = !DILocation(line: 2171, column: 9, scope: !10874)
!10879 = !DILocation(line: 2172, column: 19, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10881, file: !115, line: 2172, column: 7)
!10881 = distinct !DILexicalBlock(scope: !10874, file: !115, line: 2171, column: 14)
!10882 = !DILocation(line: 2172, column: 7, scope: !10880)
!10883 = !DILocation(line: 2172, column: 24, scope: !10880)
!10884 = !DILocation(line: 2173, column: 21, scope: !10880)
!10885 = !DILocation(line: 2173, column: 7, scope: !10880)
!10886 = !DILocation(line: 2173, column: 26, scope: !10880)
!10887 = !DILocation(line: 2172, column: 7, scope: !10881)
!10888 = !DILocation(line: 2174, column: 11, scope: !10880)
!10889 = !DILocation(line: 2174, column: 4, scope: !10880)
!10890 = !DILocation(line: 2175, column: 29, scope: !10881)
!10891 = !DILocation(line: 2175, column: 9, scope: !10881)
!10892 = !DILocation(line: 2175, column: 7, scope: !10881)
!10893 = distinct !{!10893, !10877, !10894}
!10894 = !DILocation(line: 2176, column: 2, scope: !10874)
!10895 = !DILocation(line: 2178, column: 2, scope: !10874)
!10896 = !DILocation(line: 2179, column: 1, scope: !10874)
!10897 = distinct !DISubprogram(name: "pci_release_capabilities", scope: !3, file: !3, line: 2216, type: !3500, scopeLine: 2217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10898 = !DILocalVariable(name: "dev", arg: 1, scope: !10897, file: !3, line: 2216, type: !247)
!10899 = !DILocation(line: 2216, column: 54, scope: !10897)
!10900 = !DILocation(line: 2218, column: 15, scope: !10897)
!10901 = !DILocation(line: 2218, column: 2, scope: !10897)
!10902 = !DILocation(line: 2219, column: 18, scope: !10897)
!10903 = !DILocation(line: 2219, column: 2, scope: !10897)
!10904 = !DILocation(line: 2220, column: 18, scope: !10897)
!10905 = !DILocation(line: 2220, column: 2, scope: !10897)
!10906 = !DILocation(line: 2221, column: 28, scope: !10897)
!10907 = !DILocation(line: 2221, column: 2, scope: !10897)
!10908 = !DILocation(line: 2222, column: 1, scope: !10897)
!10909 = distinct !DISubprogram(name: "pci_aer_exit", scope: !108, file: !108, line: 674, type: !3500, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10910 = !DILocalVariable(name: "d", arg: 1, scope: !10909, file: !108, line: 674, type: !247)
!10911 = !DILocation(line: 674, column: 49, scope: !10909)
!10912 = !DILocation(line: 674, column: 54, scope: !10909)
!10913 = distinct !DISubprogram(name: "pci_msi_setup_pci_dev", scope: !3, file: !3, line: 1719, type: !3500, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10914 = !DILocalVariable(name: "dev", arg: 1, scope: !10913, file: !3, line: 1719, type: !247)
!10915 = !DILocation(line: 1719, column: 51, scope: !10913)
!10916 = !DILocation(line: 1726, column: 37, scope: !10913)
!10917 = !DILocation(line: 1726, column: 17, scope: !10913)
!10918 = !DILocation(line: 1726, column: 2, scope: !10913)
!10919 = !DILocation(line: 1726, column: 7, scope: !10913)
!10920 = !DILocation(line: 1726, column: 15, scope: !10913)
!10921 = !DILocation(line: 1727, column: 6, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 1727, column: 6)
!10923 = !DILocation(line: 1727, column: 11, scope: !10922)
!10924 = !DILocation(line: 1727, column: 6, scope: !10913)
!10925 = !DILocation(line: 1728, column: 22, scope: !10922)
!10926 = !DILocation(line: 1728, column: 3, scope: !10922)
!10927 = !DILocation(line: 1730, column: 38, scope: !10913)
!10928 = !DILocation(line: 1730, column: 18, scope: !10913)
!10929 = !DILocation(line: 1730, column: 2, scope: !10913)
!10930 = !DILocation(line: 1730, column: 7, scope: !10913)
!10931 = !DILocation(line: 1730, column: 16, scope: !10913)
!10932 = !DILocation(line: 1731, column: 6, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 1731, column: 6)
!10934 = !DILocation(line: 1731, column: 11, scope: !10933)
!10935 = !DILocation(line: 1731, column: 6, scope: !10913)
!10936 = !DILocation(line: 1732, column: 31, scope: !10933)
!10937 = !DILocation(line: 1732, column: 3, scope: !10933)
!10938 = !DILocation(line: 1733, column: 1, scope: !10913)
!10939 = distinct !DISubprogram(name: "pci_pri_init", scope: !108, file: !108, line: 476, type: !3500, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10940 = !DILocalVariable(name: "dev", arg: 1, scope: !10939, file: !108, line: 476, type: !247)
!10941 = !DILocation(line: 476, column: 49, scope: !10939)
!10942 = !DILocation(line: 476, column: 56, scope: !10939)
!10943 = distinct !DISubprogram(name: "pci_pasid_init", scope: !108, file: !108, line: 484, type: !3500, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10944 = !DILocalVariable(name: "dev", arg: 1, scope: !10943, file: !108, line: 484, type: !247)
!10945 = !DILocation(line: 484, column: 51, scope: !10943)
!10946 = !DILocation(line: 484, column: 58, scope: !10943)
!10947 = distinct !DISubprogram(name: "pci_ptm_init", scope: !108, file: !108, line: 586, type: !3500, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10948 = !DILocalVariable(name: "dev", arg: 1, scope: !10947, file: !108, line: 586, type: !247)
!10949 = !DILocation(line: 586, column: 49, scope: !10947)
!10950 = !DILocation(line: 586, column: 56, scope: !10947)
!10951 = distinct !DISubprogram(name: "pci_aer_init", scope: !108, file: !108, line: 673, type: !3500, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10952 = !DILocalVariable(name: "d", arg: 1, scope: !10951, file: !108, line: 673, type: !247)
!10953 = !DILocation(line: 673, column: 49, scope: !10951)
!10954 = !DILocation(line: 673, column: 54, scope: !10951)
!10955 = distinct !DISubprogram(name: "pci_dpc_init", scope: !108, file: !108, line: 460, type: !3500, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10956 = !DILocalVariable(name: "pdev", arg: 1, scope: !10955, file: !108, line: 460, type: !247)
!10957 = !DILocation(line: 460, column: 49, scope: !10955)
!10958 = !DILocation(line: 460, column: 56, scope: !10955)
!10959 = distinct !DISubprogram(name: "pci_msi_set_enable", scope: !108, file: !108, line: 188, type: !10960, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10960 = !DISubroutineType(types: !10961)
!10961 = !{null, !247, !232}
!10962 = !DILocalVariable(name: "dev", arg: 1, scope: !10959, file: !108, line: 188, type: !247)
!10963 = !DILocation(line: 188, column: 55, scope: !10959)
!10964 = !DILocalVariable(name: "enable", arg: 2, scope: !10959, file: !108, line: 188, type: !232)
!10965 = !DILocation(line: 188, column: 64, scope: !10959)
!10966 = !DILocalVariable(name: "control", scope: !10959, file: !108, line: 190, type: !945)
!10967 = !DILocation(line: 190, column: 6, scope: !10959)
!10968 = !DILocation(line: 192, column: 23, scope: !10959)
!10969 = !DILocation(line: 192, column: 28, scope: !10959)
!10970 = !DILocation(line: 192, column: 33, scope: !10959)
!10971 = !DILocation(line: 192, column: 41, scope: !10959)
!10972 = !DILocation(line: 192, column: 2, scope: !10959)
!10973 = !DILocation(line: 193, column: 10, scope: !10959)
!10974 = !DILocation(line: 194, column: 6, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10959, file: !108, line: 194, column: 6)
!10976 = !DILocation(line: 194, column: 6, scope: !10959)
!10977 = !DILocation(line: 195, column: 11, scope: !10975)
!10978 = !DILocation(line: 195, column: 3, scope: !10975)
!10979 = !DILocation(line: 196, column: 24, scope: !10959)
!10980 = !DILocation(line: 196, column: 29, scope: !10959)
!10981 = !DILocation(line: 196, column: 34, scope: !10959)
!10982 = !DILocation(line: 196, column: 42, scope: !10959)
!10983 = !DILocation(line: 196, column: 59, scope: !10959)
!10984 = !DILocation(line: 196, column: 2, scope: !10959)
!10985 = !DILocation(line: 197, column: 1, scope: !10959)
!10986 = distinct !DISubprogram(name: "pci_msix_clear_and_set_ctrl", scope: !108, file: !108, line: 199, type: !10987, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!10987 = !DISubroutineType(types: !10988)
!10988 = !{null, !247, !945, !945}
!10989 = !DILocalVariable(name: "dev", arg: 1, scope: !10986, file: !108, line: 199, type: !247)
!10990 = !DILocation(line: 199, column: 64, scope: !10986)
!10991 = !DILocalVariable(name: "clear", arg: 2, scope: !10986, file: !108, line: 199, type: !945)
!10992 = !DILocation(line: 199, column: 73, scope: !10986)
!10993 = !DILocalVariable(name: "set", arg: 3, scope: !10986, file: !108, line: 199, type: !945)
!10994 = !DILocation(line: 199, column: 84, scope: !10986)
!10995 = !DILocalVariable(name: "ctrl", scope: !10986, file: !108, line: 201, type: !945)
!10996 = !DILocation(line: 201, column: 6, scope: !10986)
!10997 = !DILocation(line: 203, column: 23, scope: !10986)
!10998 = !DILocation(line: 203, column: 28, scope: !10986)
!10999 = !DILocation(line: 203, column: 33, scope: !10986)
!11000 = !DILocation(line: 203, column: 42, scope: !10986)
!11001 = !DILocation(line: 203, column: 2, scope: !10986)
!11002 = !DILocation(line: 204, column: 11, scope: !10986)
!11003 = !DILocation(line: 204, column: 10, scope: !10986)
!11004 = !DILocation(line: 204, column: 7, scope: !10986)
!11005 = !DILocation(line: 205, column: 10, scope: !10986)
!11006 = !DILocation(line: 205, column: 7, scope: !10986)
!11007 = !DILocation(line: 206, column: 24, scope: !10986)
!11008 = !DILocation(line: 206, column: 29, scope: !10986)
!11009 = !DILocation(line: 206, column: 34, scope: !10986)
!11010 = !DILocation(line: 206, column: 43, scope: !10986)
!11011 = !DILocation(line: 206, column: 61, scope: !10986)
!11012 = !DILocation(line: 206, column: 2, scope: !10986)
!11013 = !DILocation(line: 207, column: 1, scope: !10986)
!11014 = distinct !DISubprogram(name: "pci_dev_msi_domain", scope: !3, file: !3, line: 2430, type: !11015, scopeLine: 2431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11015 = !DISubroutineType(types: !11016)
!11016 = !{!3745, !247}
!11017 = !DILocalVariable(name: "dev", arg: 1, scope: !11014, file: !3, line: 2430, type: !247)
!11018 = !DILocation(line: 2430, column: 62, scope: !11014)
!11019 = !DILocalVariable(name: "d", scope: !11014, file: !3, line: 2432, type: !3745)
!11020 = !DILocation(line: 2432, column: 21, scope: !11014)
!11021 = !DILocation(line: 2438, column: 26, scope: !11014)
!11022 = !DILocation(line: 2438, column: 31, scope: !11014)
!11023 = !DILocation(line: 2438, column: 6, scope: !11014)
!11024 = !DILocation(line: 2438, column: 4, scope: !11014)
!11025 = !DILocation(line: 2439, column: 6, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 2439, column: 6)
!11027 = !DILocation(line: 2439, column: 6, scope: !11014)
!11028 = !DILocation(line: 2440, column: 10, scope: !11026)
!11029 = !DILocation(line: 2440, column: 3, scope: !11026)
!11030 = !DILocation(line: 2446, column: 32, scope: !11014)
!11031 = !DILocation(line: 2446, column: 6, scope: !11014)
!11032 = !DILocation(line: 2446, column: 4, scope: !11014)
!11033 = !DILocation(line: 2447, column: 6, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 2447, column: 6)
!11035 = !DILocation(line: 2447, column: 6, scope: !11014)
!11036 = !DILocation(line: 2448, column: 10, scope: !11034)
!11037 = !DILocation(line: 2448, column: 3, scope: !11034)
!11038 = !DILocation(line: 2450, column: 2, scope: !11014)
!11039 = !DILocation(line: 2451, column: 1, scope: !11014)
!11040 = distinct !DISubprogram(name: "test_bit", scope: !11041, file: !11041, line: 132, type: !11042, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11041 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!11042 = !DISubroutineType(types: !11043)
!11043 = !{!576, !403, !11044}
!11044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11045, size: 64)
!11045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11046)
!11046 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !418)
!11047 = !DILocalVariable(name: "nr", arg: 1, scope: !11048, file: !9646, line: 210, type: !403)
!11048 = distinct !DISubprogram(name: "variable_test_bit", scope: !9646, file: !9646, line: 210, type: !11042, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11049 = !DILocation(line: 210, column: 52, scope: !11048, inlinedAt: !11050)
!11050 = distinct !DILocation(line: 135, column: 9, scope: !11040)
!11051 = !DILocalVariable(name: "addr", arg: 2, scope: !11048, file: !9646, line: 210, type: !11044)
!11052 = !DILocation(line: 210, column: 86, scope: !11048, inlinedAt: !11050)
!11053 = !DILocalVariable(name: "oldbit", scope: !11048, file: !9646, line: 212, type: !576)
!11054 = !DILocation(line: 212, column: 7, scope: !11048, inlinedAt: !11050)
!11055 = !DILocalVariable(name: "nr", arg: 1, scope: !11056, file: !9646, line: 204, type: !403)
!11056 = distinct !DISubprogram(name: "constant_test_bit", scope: !9646, file: !9646, line: 204, type: !11042, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11057 = !DILocation(line: 204, column: 52, scope: !11056, inlinedAt: !11058)
!11058 = distinct !DILocation(line: 135, column: 9, scope: !11040)
!11059 = !DILocalVariable(name: "addr", arg: 2, scope: !11056, file: !9646, line: 204, type: !11044)
!11060 = !DILocation(line: 204, column: 86, scope: !11056, inlinedAt: !11058)
!11061 = !DILocalVariable(name: "v", arg: 1, scope: !11062, file: !11063, line: 69, type: !11066)
!11062 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !11063, file: !11063, line: 69, type: !11064, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11063 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!11064 = !DISubroutineType(types: !11065)
!11065 = !{null, !11066, !415}
!11066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11067, size: 64)
!11067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11068)
!11068 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!11069 = !DILocation(line: 69, column: 73, scope: !11062, inlinedAt: !11070)
!11070 = distinct !DILocation(line: 134, column: 2, scope: !11040)
!11071 = !DILocalVariable(name: "size", arg: 2, scope: !11062, file: !11063, line: 69, type: !415)
!11072 = !DILocation(line: 69, column: 83, scope: !11062, inlinedAt: !11070)
!11073 = !DILocalVariable(name: "nr", arg: 1, scope: !11040, file: !11041, line: 132, type: !403)
!11074 = !DILocation(line: 132, column: 34, scope: !11040)
!11075 = !DILocalVariable(name: "addr", arg: 2, scope: !11040, file: !11041, line: 132, type: !11044)
!11076 = !DILocation(line: 132, column: 68, scope: !11040)
!11077 = !DILocation(line: 134, column: 25, scope: !11040)
!11078 = !DILocation(line: 134, column: 32, scope: !11040)
!11079 = !DILocation(line: 134, column: 30, scope: !11040)
!11080 = !DILocation(line: 71, column: 19, scope: !11062, inlinedAt: !11070)
!11081 = !DILocation(line: 71, column: 22, scope: !11062, inlinedAt: !11070)
!11082 = !DILocation(line: 71, column: 2, scope: !11062, inlinedAt: !11070)
!11083 = !DILocation(line: 72, column: 2, scope: !11062, inlinedAt: !11070)
!11084 = !DILocation(line: 135, column: 9, scope: !11040)
!11085 = !DILocation(line: 206, column: 19, scope: !11056, inlinedAt: !11058)
!11086 = !DILocation(line: 206, column: 22, scope: !11056, inlinedAt: !11058)
!11087 = !DILocation(line: 206, column: 15, scope: !11056, inlinedAt: !11058)
!11088 = !DILocation(line: 207, column: 4, scope: !11056, inlinedAt: !11058)
!11089 = !DILocation(line: 207, column: 9, scope: !11056, inlinedAt: !11058)
!11090 = !DILocation(line: 207, column: 12, scope: !11056, inlinedAt: !11058)
!11091 = !DILocation(line: 206, column: 44, scope: !11056, inlinedAt: !11058)
!11092 = !DILocation(line: 207, column: 37, scope: !11056, inlinedAt: !11058)
!11093 = !DILocation(line: 217, column: 33, scope: !11048, inlinedAt: !11050)
!11094 = !DILocation(line: 217, column: 46, scope: !11048, inlinedAt: !11050)
!11095 = !DILocation(line: 214, column: 2, scope: !11048, inlinedAt: !11050)
!11096 = !{i32 -2147117846, i32 -2147117786}
!11097 = !DILocation(line: 219, column: 9, scope: !11048, inlinedAt: !11050)
!11098 = !DILocation(line: 135, column: 2, scope: !11040)
!11099 = distinct !DISubprogram(name: "kasan_check_read", scope: !11100, file: !11100, line: 34, type: !11101, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11100 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11101 = !DISubroutineType(types: !11102)
!11102 = !{!576, !11066, !7}
!11103 = !DILocalVariable(name: "p", arg: 1, scope: !11099, file: !11100, line: 34, type: !11066)
!11104 = !DILocation(line: 34, column: 58, scope: !11099)
!11105 = !DILocalVariable(name: "size", arg: 2, scope: !11099, file: !11100, line: 34, type: !7)
!11106 = !DILocation(line: 34, column: 74, scope: !11099)
!11107 = !DILocation(line: 36, column: 2, scope: !11099)
!11108 = distinct !DISubprogram(name: "kcsan_check_access", scope: !11109, file: !11109, line: 178, type: !11110, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11109 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11110 = !DISubroutineType(types: !11111)
!11111 = !{null, !11066, !415, !232}
!11112 = !DILocalVariable(name: "ptr", arg: 1, scope: !11108, file: !11109, line: 178, type: !11066)
!11113 = !DILocation(line: 178, column: 60, scope: !11108)
!11114 = !DILocalVariable(name: "size", arg: 2, scope: !11108, file: !11109, line: 178, type: !415)
!11115 = !DILocation(line: 178, column: 72, scope: !11108)
!11116 = !DILocalVariable(name: "type", arg: 3, scope: !11108, file: !11109, line: 179, type: !232)
!11117 = !DILocation(line: 179, column: 15, scope: !11108)
!11118 = !DILocation(line: 179, column: 23, scope: !11108)
!11119 = distinct !DISubprogram(name: "pci_ari_enabled", scope: !115, file: !115, line: 2369, type: !4913, scopeLine: 2370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11120 = !DILocalVariable(name: "bus", arg: 1, scope: !11119, file: !115, line: 2369, type: !234)
!11121 = !DILocation(line: 2369, column: 52, scope: !11119)
!11122 = !DILocation(line: 2371, column: 9, scope: !11119)
!11123 = !DILocation(line: 2371, column: 14, scope: !11119)
!11124 = !DILocation(line: 2371, column: 19, scope: !11119)
!11125 = !DILocation(line: 2371, column: 22, scope: !11119)
!11126 = !DILocation(line: 2371, column: 27, scope: !11119)
!11127 = !DILocation(line: 2371, column: 33, scope: !11119)
!11128 = !DILocation(line: 0, scope: !11119)
!11129 = !DILocation(line: 2371, column: 2, scope: !11119)
!11130 = distinct !DISubprogram(name: "pcie_write_mps", scope: !3, file: !3, line: 2659, type: !10960, scopeLine: 2660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11131 = !DILocalVariable(name: "dev", arg: 1, scope: !11130, file: !3, line: 2659, type: !247)
!11132 = !DILocation(line: 2659, column: 44, scope: !11130)
!11133 = !DILocalVariable(name: "mps", arg: 2, scope: !11130, file: !3, line: 2659, type: !232)
!11134 = !DILocation(line: 2659, column: 53, scope: !11130)
!11135 = !DILocalVariable(name: "rc", scope: !11130, file: !3, line: 2661, type: !232)
!11136 = !DILocation(line: 2661, column: 6, scope: !11130)
!11137 = !DILocation(line: 2663, column: 6, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 2663, column: 6)
!11139 = !DILocation(line: 2663, column: 22, scope: !11138)
!11140 = !DILocation(line: 2663, column: 6, scope: !11130)
!11141 = !DILocation(line: 2664, column: 16, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11138, file: !3, line: 2663, column: 47)
!11143 = !DILocation(line: 2664, column: 21, scope: !11142)
!11144 = !DILocation(line: 2664, column: 13, scope: !11142)
!11145 = !DILocation(line: 2664, column: 7, scope: !11142)
!11146 = !DILocation(line: 2666, column: 21, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11142, file: !3, line: 2666, column: 7)
!11148 = !DILocation(line: 2666, column: 7, scope: !11147)
!11149 = !DILocation(line: 2666, column: 26, scope: !11147)
!11150 = !DILocation(line: 2666, column: 52, scope: !11147)
!11151 = !DILocation(line: 2667, column: 7, scope: !11147)
!11152 = !DILocation(line: 2667, column: 12, scope: !11147)
!11153 = !DILocation(line: 2667, column: 17, scope: !11147)
!11154 = !DILocation(line: 2666, column: 7, scope: !11142)
!11155 = !DILocalVariable(name: "__UNIQUE_ID___x255", scope: !11156, file: !3, line: 2682, type: !232)
!11156 = distinct !DILexicalBlock(scope: !11147, file: !3, line: 2682, column: 10)
!11157 = !DILocation(line: 2682, column: 10, scope: !11156)
!11158 = !DILocalVariable(name: "__UNIQUE_ID___y256", scope: !11156, file: !3, line: 2682, type: !232)
!11159 = !DILocation(line: 2682, column: 8, scope: !11147)
!11160 = !DILocation(line: 2682, column: 4, scope: !11147)
!11161 = !DILocation(line: 2683, column: 2, scope: !11142)
!11162 = !DILocation(line: 2685, column: 20, scope: !11130)
!11163 = !DILocation(line: 2685, column: 25, scope: !11130)
!11164 = !DILocation(line: 2685, column: 7, scope: !11130)
!11165 = !DILocation(line: 2685, column: 5, scope: !11130)
!11166 = !DILocation(line: 2686, column: 6, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 2686, column: 6)
!11168 = !DILocation(line: 2686, column: 6, scope: !11130)
!11169 = !DILocation(line: 2687, column: 3, scope: !11167)
!11170 = !DILocation(line: 2688, column: 1, scope: !11130)
!11171 = distinct !DISubprogram(name: "pcie_write_mrrs", scope: !3, file: !3, line: 2690, type: !3500, scopeLine: 2691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11172 = !DILocalVariable(name: "dev", arg: 1, scope: !11171, file: !3, line: 2690, type: !247)
!11173 = !DILocation(line: 2690, column: 45, scope: !11171)
!11174 = !DILocalVariable(name: "rc", scope: !11171, file: !3, line: 2692, type: !232)
!11175 = !DILocation(line: 2692, column: 6, scope: !11171)
!11176 = !DILocalVariable(name: "mrrs", scope: !11171, file: !3, line: 2692, type: !232)
!11177 = !DILocation(line: 2692, column: 10, scope: !11171)
!11178 = !DILocation(line: 2698, column: 6, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 2698, column: 6)
!11180 = !DILocation(line: 2698, column: 22, scope: !11179)
!11181 = !DILocation(line: 2698, column: 6, scope: !11171)
!11182 = !DILocation(line: 2699, column: 3, scope: !11179)
!11183 = !DILocation(line: 2707, column: 22, scope: !11171)
!11184 = !DILocation(line: 2707, column: 9, scope: !11171)
!11185 = !DILocation(line: 2707, column: 7, scope: !11171)
!11186 = !DILocation(line: 2715, column: 2, scope: !11171)
!11187 = !DILocation(line: 2715, column: 9, scope: !11171)
!11188 = !DILocation(line: 2715, column: 33, scope: !11171)
!11189 = !DILocation(line: 2715, column: 17, scope: !11171)
!11190 = !DILocation(line: 2715, column: 14, scope: !11171)
!11191 = !DILocation(line: 2715, column: 38, scope: !11171)
!11192 = !DILocation(line: 2715, column: 41, scope: !11171)
!11193 = !DILocation(line: 2715, column: 46, scope: !11171)
!11194 = !DILocation(line: 0, scope: !11171)
!11195 = !DILocation(line: 2716, column: 24, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 2715, column: 54)
!11197 = !DILocation(line: 2716, column: 29, scope: !11196)
!11198 = !DILocation(line: 2716, column: 8, scope: !11196)
!11199 = !DILocation(line: 2716, column: 6, scope: !11196)
!11200 = !DILocation(line: 2717, column: 8, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11196, file: !3, line: 2717, column: 7)
!11202 = !DILocation(line: 2717, column: 7, scope: !11196)
!11203 = !DILocation(line: 2718, column: 4, scope: !11201)
!11204 = !DILocation(line: 2720, column: 3, scope: !11196)
!11205 = !DILocation(line: 2721, column: 8, scope: !11196)
!11206 = distinct !{!11206, !11186, !11207}
!11207 = !DILocation(line: 2722, column: 2, scope: !11171)
!11208 = !DILocation(line: 2724, column: 6, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 2724, column: 6)
!11210 = !DILocation(line: 2724, column: 11, scope: !11209)
!11211 = !DILocation(line: 2724, column: 6, scope: !11171)
!11212 = !DILocation(line: 2725, column: 3, scope: !11209)
!11213 = !DILocation(line: 2726, column: 1, scope: !11171)
!11214 = distinct !DISubprogram(name: "jailhouse_paravirt", scope: !11215, file: !11215, line: 20, type: !3281, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11215 = !DIFile(filename: "./arch/x86/include/asm/jailhouse_para.h", directory: "/home/lizy2001/genbc/linux")
!11216 = !DILocation(line: 22, column: 2, scope: !11214)
!11217 = distinct !DISubprogram(name: "pci_is_bridge", scope: !115, file: !115, line: 668, type: !6591, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11218 = !DILocalVariable(name: "dev", arg: 1, scope: !11217, file: !115, line: 668, type: !247)
!11219 = !DILocation(line: 668, column: 50, scope: !11217)
!11220 = !DILocation(line: 670, column: 9, scope: !11217)
!11221 = !DILocation(line: 670, column: 14, scope: !11217)
!11222 = !DILocation(line: 670, column: 23, scope: !11217)
!11223 = !DILocation(line: 670, column: 49, scope: !11217)
!11224 = !DILocation(line: 671, column: 3, scope: !11217)
!11225 = !DILocation(line: 671, column: 8, scope: !11217)
!11226 = !DILocation(line: 671, column: 17, scope: !11217)
!11227 = !DILocation(line: 670, column: 2, scope: !11217)
!11228 = distinct !DISubprogram(name: "list_empty", scope: !5910, file: !5910, line: 280, type: !11229, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11229 = !DISubroutineType(types: !11230)
!11230 = !{!232, !11231}
!11231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11232, size: 64)
!11232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !238)
!11233 = !DILocalVariable(name: "head", arg: 1, scope: !11228, file: !5910, line: 280, type: !11231)
!11234 = !DILocation(line: 280, column: 54, scope: !11228)
!11235 = !DILocation(line: 282, column: 9, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11228, file: !5910, line: 282, column: 9)
!11237 = !DILocation(line: 282, column: 9, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11236, file: !5910, line: 282, column: 9)
!11239 = !DILocation(line: 282, column: 34, scope: !11228)
!11240 = !DILocation(line: 282, column: 31, scope: !11228)
!11241 = !DILocation(line: 282, column: 2, scope: !11228)
!11242 = distinct !DISubprogram(name: "__list_splice", scope: !5910, file: !5910, line: 433, type: !11243, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11243 = !DISubroutineType(types: !11244)
!11244 = !{null, !11231, !241, !241}
!11245 = !DILocalVariable(name: "list", arg: 1, scope: !11242, file: !5910, line: 433, type: !11231)
!11246 = !DILocation(line: 433, column: 58, scope: !11242)
!11247 = !DILocalVariable(name: "prev", arg: 2, scope: !11242, file: !5910, line: 434, type: !241)
!11248 = !DILocation(line: 434, column: 24, scope: !11242)
!11249 = !DILocalVariable(name: "next", arg: 3, scope: !11242, file: !5910, line: 435, type: !241)
!11250 = !DILocation(line: 435, column: 24, scope: !11242)
!11251 = !DILocalVariable(name: "first", scope: !11242, file: !5910, line: 437, type: !241)
!11252 = !DILocation(line: 437, column: 20, scope: !11242)
!11253 = !DILocation(line: 437, column: 28, scope: !11242)
!11254 = !DILocation(line: 437, column: 34, scope: !11242)
!11255 = !DILocalVariable(name: "last", scope: !11242, file: !5910, line: 438, type: !241)
!11256 = !DILocation(line: 438, column: 20, scope: !11242)
!11257 = !DILocation(line: 438, column: 27, scope: !11242)
!11258 = !DILocation(line: 438, column: 33, scope: !11242)
!11259 = !DILocation(line: 440, column: 16, scope: !11242)
!11260 = !DILocation(line: 440, column: 2, scope: !11242)
!11261 = !DILocation(line: 440, column: 9, scope: !11242)
!11262 = !DILocation(line: 440, column: 14, scope: !11242)
!11263 = !DILocation(line: 441, column: 15, scope: !11242)
!11264 = !DILocation(line: 441, column: 2, scope: !11242)
!11265 = !DILocation(line: 441, column: 8, scope: !11242)
!11266 = !DILocation(line: 441, column: 13, scope: !11242)
!11267 = !DILocation(line: 443, column: 15, scope: !11242)
!11268 = !DILocation(line: 443, column: 2, scope: !11242)
!11269 = !DILocation(line: 443, column: 8, scope: !11242)
!11270 = !DILocation(line: 443, column: 13, scope: !11242)
!11271 = !DILocation(line: 444, column: 15, scope: !11242)
!11272 = !DILocation(line: 444, column: 2, scope: !11242)
!11273 = !DILocation(line: 444, column: 8, scope: !11242)
!11274 = !DILocation(line: 444, column: 13, scope: !11242)
!11275 = !DILocation(line: 445, column: 1, scope: !11242)
!11276 = distinct !DISubprogram(name: "device_enable_async_suspend", scope: !73, file: !73, line: 685, type: !3578, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11277 = !DILocalVariable(name: "dev", arg: 1, scope: !11276, file: !73, line: 685, type: !3551)
!11278 = !DILocation(line: 685, column: 63, scope: !11276)
!11279 = !DILocation(line: 687, column: 7, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11276, file: !73, line: 687, column: 6)
!11281 = !DILocation(line: 687, column: 12, scope: !11280)
!11282 = !DILocation(line: 687, column: 18, scope: !11280)
!11283 = !DILocation(line: 687, column: 6, scope: !11276)
!11284 = !DILocation(line: 688, column: 3, scope: !11280)
!11285 = !DILocation(line: 688, column: 8, scope: !11280)
!11286 = !DILocation(line: 688, column: 14, scope: !11280)
!11287 = !DILocation(line: 688, column: 28, scope: !11280)
!11288 = !DILocation(line: 689, column: 1, scope: !11276)
!11289 = distinct !DISubprogram(name: "list_move_tail", scope: !5910, file: !5910, line: 224, type: !5911, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11290 = !DILocalVariable(name: "list", arg: 1, scope: !11289, file: !5910, line: 224, type: !241)
!11291 = !DILocation(line: 224, column: 53, scope: !11289)
!11292 = !DILocalVariable(name: "head", arg: 2, scope: !11289, file: !5910, line: 225, type: !241)
!11293 = !DILocation(line: 225, column: 25, scope: !11289)
!11294 = !DILocation(line: 227, column: 19, scope: !11289)
!11295 = !DILocation(line: 227, column: 2, scope: !11289)
!11296 = !DILocation(line: 228, column: 16, scope: !11289)
!11297 = !DILocation(line: 228, column: 22, scope: !11289)
!11298 = !DILocation(line: 228, column: 2, scope: !11289)
!11299 = !DILocation(line: 229, column: 1, scope: !11289)
!11300 = distinct !DISubprogram(name: "resource_type", scope: !4123, file: !4123, line: 214, type: !11301, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11301 = !DISubroutineType(types: !11302)
!11302 = !{!418, !4405}
!11303 = !DILocalVariable(name: "res", arg: 1, scope: !11300, file: !4123, line: 214, type: !4405)
!11304 = !DILocation(line: 214, column: 66, scope: !11300)
!11305 = !DILocation(line: 216, column: 9, scope: !11300)
!11306 = !DILocation(line: 216, column: 14, scope: !11300)
!11307 = !DILocation(line: 216, column: 20, scope: !11300)
!11308 = !DILocation(line: 216, column: 2, scope: !11300)
!11309 = distinct !DISubprogram(name: "__list_del_entry", scope: !5910, file: !5910, line: 130, type: !7423, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11310 = !DILocalVariable(name: "entry", arg: 1, scope: !11309, file: !5910, line: 130, type: !241)
!11311 = !DILocation(line: 130, column: 55, scope: !11309)
!11312 = !DILocation(line: 132, column: 30, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11309, file: !5910, line: 132, column: 6)
!11314 = !DILocation(line: 132, column: 7, scope: !11313)
!11315 = !DILocation(line: 132, column: 6, scope: !11309)
!11316 = !DILocation(line: 133, column: 3, scope: !11313)
!11317 = !DILocation(line: 135, column: 13, scope: !11309)
!11318 = !DILocation(line: 135, column: 20, scope: !11309)
!11319 = !DILocation(line: 135, column: 26, scope: !11309)
!11320 = !DILocation(line: 135, column: 33, scope: !11309)
!11321 = !DILocation(line: 135, column: 2, scope: !11309)
!11322 = !DILocation(line: 136, column: 1, scope: !11309)
!11323 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !5910, file: !5910, line: 51, type: !11324, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11324 = !DISubroutineType(types: !11325)
!11325 = !{!576, !241}
!11326 = !DILocalVariable(name: "entry", arg: 1, scope: !11323, file: !5910, line: 51, type: !241)
!11327 = !DILocation(line: 51, column: 61, scope: !11323)
!11328 = !DILocation(line: 53, column: 2, scope: !11323)
!11329 = distinct !DISubprogram(name: "__list_del", scope: !5910, file: !5910, line: 110, type: !5911, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !341)
!11330 = !DILocalVariable(name: "prev", arg: 1, scope: !11329, file: !5910, line: 110, type: !241)
!11331 = !DILocation(line: 110, column: 50, scope: !11329)
!11332 = !DILocalVariable(name: "next", arg: 2, scope: !11329, file: !5910, line: 110, type: !241)
!11333 = !DILocation(line: 110, column: 75, scope: !11329)
!11334 = !DILocation(line: 112, column: 15, scope: !11329)
!11335 = !DILocation(line: 112, column: 2, scope: !11329)
!11336 = !DILocation(line: 112, column: 8, scope: !11329)
!11337 = !DILocation(line: 112, column: 13, scope: !11329)
!11338 = !DILocation(line: 113, column: 2, scope: !11329)
!11339 = !DILocation(line: 113, column: 2, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11329, file: !5910, line: 113, column: 2)
!11341 = !DILocation(line: 113, column: 2, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11340, file: !5910, line: 113, column: 2)
!11343 = !DILocation(line: 113, column: 2, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11340, file: !5910, line: 113, column: 2)
!11345 = !DILocation(line: 114, column: 1, scope: !11329)
