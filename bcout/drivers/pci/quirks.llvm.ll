; ModuleID = '../bcout/drivers/pci/quirks.llvm.bc'
source_filename = "drivers/pci/quirks.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall5s.init\22, \22a\22\09"
module asm "__initcall_pci_apply_final_quirks5s:\09\09\09"
module asm ".long\09pci_apply_final_quirks - .\09\09\09"
module asm ".previous\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short (~0), (~0)\09\09\09"
module asm ".long 0x0600, 8\09\09"
module asm ".long quirk_mmio_always_on - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x15b3, 0x5a44\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_mellanox_tavor - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x15b3, 0x5a46\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_mellanox_tavor - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1237\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_passive_release - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1237\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_passive_release - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0586\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_isa_dma_hangs - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0596\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_isa_dma_hangs - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x7000\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_isa_dma_hangs - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10b9, 0x1533\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_isa_dma_hangs - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1033, 0x0001\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_isa_dma_hangs - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1033, 0x002d\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_isa_dma_hangs - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1033, 0x003b\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_isa_dma_hangs - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x27bc\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_tigerpoint_bm_sts - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x5597\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_nopcipci - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0496\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_nopcipci - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7454\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_nopciamd - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x122d\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_triton - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x7030\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_triton - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1250\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_triton - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x7100\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_triton - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0305\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_vialatency - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x8391\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_vialatency - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3112\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_vialatency - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0305\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_vialatency - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x8391\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_vialatency - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3112\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_vialatency - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0597\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_viaetbf - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0576\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_vsfx - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10b9, 0x1647\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_alimagik - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10b9, 0x1651\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_alimagik - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1237\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_natoma - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x7180\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_natoma - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x7181\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_natoma - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x7190\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_natoma - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x7191\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_natoma - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x7192\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_natoma - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1014, 0x028C\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_citrine - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x19ee, 0x4000\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_nfp6000 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x19ee, 0x6000\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_nfp6000 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x19ee, 0x5000\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_nfp6000 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x19ee, 0x6003\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_nfp6000 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1014, 0x034a\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_extend_bar_to_page - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x5333, 0x8880\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_s3_64M - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x5333, 0x88f0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_s3_64M - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x2090\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_cs5536_vsa - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0xcab0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ati_exploding_mce - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7912\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_nl_class - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x16c3, (~0)\09\09\09"
module asm ".long 0x0c0330, 0\09\09"
module asm ".long quirk_synopsys_haps - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10b9, 0x7101\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ali7101_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x7113\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_piix4_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x719b\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_piix4_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2410\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich4_lpc_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2420\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich4_lpc_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2440\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich4_lpc_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x244c\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich4_lpc_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2480\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich4_lpc_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x248c\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich4_lpc_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x24c0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich4_lpc_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x24cc\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich4_lpc_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x24d0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich4_lpc_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25a1\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich4_lpc_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2640\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich6_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2641\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich6_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x27b8\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x27b9\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x27bd\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2810\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2812\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2814\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2811\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2815\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2912\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2914\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2916\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2918\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x3a16\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ich7_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3040\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_vt82c586_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3057\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_vt82c686_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3177\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_vt8235_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x104c, 0x8231\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_xio2000a - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0686\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_ioapic - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0686\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_ioapic - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3227\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_vt8237_bypass_apic_deassert - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3227\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_vt8237_bypass_apic_deassert - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7410\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_ioapic - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7450\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_8131_mmrbc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3040\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3057\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_acpi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0686\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x8231\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3074\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3147\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3109\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3177\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3227\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3337\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_enable, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, (~0)\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_vlink - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0597\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_vt82c598_id - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short (~0), (~0)\09\09\09"
module asm ".long 0x0607, 8\09\09"
module asm ".long quirk_cardbus_legacy - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short (~0), (~0)\09\09\09"
module asm ".long 0x0607, 8\09\09"
module asm ".long quirk_cardbus_legacy - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x700C\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_ordering - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x700C\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_ordering - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x5544, 0x0001\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dunord - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x124b\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_transparent_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1179, 0x605\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_transparent_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1078, 0x0001\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_mediagx_master - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1078, 0x0001\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_mediagx_master - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x84cb\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_pxb - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x84cb\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_pxb - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4380\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_ide_mode - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4380\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_ide_mode - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4390\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_ide_mode - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4390\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_ide_mode - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7800\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_ide_mode - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7800\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_ide_mode - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7900\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_ide_mode - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7900\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_ide_mode - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0212\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_svwks_csb5ide - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x248a\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ide_samemode - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, (~0)\09\09\09"
module asm ".long 0x0101, 8\09\09"
module asm ".long quirk_no_ata_d3 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, (~0)\09\09\09"
module asm ".long 0x0101, 8\09\09"
module asm ".long quirk_no_ata_d3 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10b9, (~0)\09\09\09"
module asm ".long 0x0101, 8\09\09"
module asm ".long quirk_no_ata_d3 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, (~0)\09\09\09"
module asm ".long 0x0101, 8\09\09"
module asm ".long quirk_no_ata_d3 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0482\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_eisa_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1a30\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2560\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2530\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2570\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2578\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x255d\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x254c\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x3340\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x3580\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2590\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x7123\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x24c2\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1132\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_hostbridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2410\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x24c0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2440\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2480\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x248c\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x24cc\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x24d0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2410\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x24c0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2440\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2480\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x248c\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x24cc\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x24d0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2641\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc_ich6 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_suspend, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2641\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc_ich6_suspend - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2641\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc_ich6_resume - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2641\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_smbus_lpc_ich6_resume_early - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0961\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_sis_96x_smbus - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0962\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_sis_96x_smbus - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0963\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_sis_96x_smbus - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0018\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_sis_96x_smbus - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0961\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_sis_96x_smbus - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0962\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_sis_96x_smbus - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0963\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_sis_96x_smbus - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0018\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_sis_96x_smbus - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0008\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_sis_503 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0008\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_sis_503 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3227\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_ac97_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x3227\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long asus_hides_ac97_lpc - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2360\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2361\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2362\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2363\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2364\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2365\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2366\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2368\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2369\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2360\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2361\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2362\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2363\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2364\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2365\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2366\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2368\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2369\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_ata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, (~0)\09\09\09"
module asm ".long 0x0101, 8\09\09"
module asm ".long quirk_jmicron_async_suspend - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, (~0)\09\09\09"
module asm ".long 0x010601, 0\09\09"
module asm ".long quirk_jmicron_async_suspend - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2362\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_async_suspend - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x236f\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_jmicron_async_suspend - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0008\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_alder_ioapic - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x3590\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pcie_mch - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x3592\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pcie_mch - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x359e\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pcie_mch - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x19e5, 0x1610\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long quirk_pcie_mch - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0320\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pcie_pxh - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0321\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pcie_pxh - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0329\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pcie_pxh - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x032A\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pcie_pxh - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x032C\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pcie_pxh - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e2\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e3\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e4\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e5\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e6\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e7\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25f7\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25f8\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25f9\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25fa\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2601\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2602\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2603\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2604\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2605\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2606\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2607\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2608\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2609\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x260a\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x260b\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_pcie_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x6741\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_radeon_pm - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x15e0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ryzen_xhci_d3hot - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x15e1\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_ryzen_xhci_d3hot - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0370\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0372\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2670\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0329\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x032A\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x032C\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0330\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0332\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0370\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0372\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2670\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0329\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x032A\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x032C\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0330\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0332\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_reroute_to_boot_interrupts_intel - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25ac\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25ac\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x3c28\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0e28\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f28\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f28\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2034\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x3c28\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0e28\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f28\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f28\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2034\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_intel_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0205\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_broadcom_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0205\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_broadcom_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7450\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_amd_813x_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7450\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_amd_813x_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7458\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_amd_813x_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7458\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_amd_813x_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x746b\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_amd_8111_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x746b\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_amd_8111_boot_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x102f, 0x0105\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_tc86c001_ide - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10b5, 0x9050\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_plx_pci9050 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1402, 0x2000\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_plx_pci9050 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1402, 0x2600\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_plx_pci9050 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x9710, (~0)\09\09\09"
module asm ".long 0x0700, 8\09\09"
module asm ".long quirk_netmos - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, (~0)\09\09\09"
module asm ".long 0x0200, 8\09\09"
module asm ".long quirk_e100_interrupt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10a7\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10a9\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10b6\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10c6\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10c7\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10c8\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10d6\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10db\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10dd\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10e1\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10ec\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10f1\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x10f4\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1508\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b21, 0x1080\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_aspm_l0s_l1 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x12d8, 0xe110\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_enable_clear_retrain_link - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x12d8, 0xe111\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_enable_clear_retrain_link - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x12d8, 0xe130\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_enable_clear_retrain_link - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1000, 0x0001\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long fixup_rev1_53c810 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1460\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_p64h2_1k_io - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x005d\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_nvidia_ck804_pcie_aer_ext_cap - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x005d\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_nvidia_ck804_pcie_aer_ext_cap - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x324e\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_via_cx700_pci_parking_caching - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_enable, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x14e4, 0x1657\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_brcm_5719_limit_mrrs - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2570\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_unhide_mch_dev6 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2578\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_unhide_mch_dev6 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0017\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_all_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x5a33\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_all_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x5950\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_all_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0336\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_all_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0351\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_all_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0364\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_all_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0x0204\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_all_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1039, 0x0761\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_all_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7450\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1106, 0xa238\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x5a3f\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_disable_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x9600\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_780_apc_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x9601\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_780_apc_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0132\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_ht_cap - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x005d\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_nvidia_ck804_msi_ht_cap - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0036\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long ht_enable_msi_mapping - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x7458\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long ht_enable_msi_mapping - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x0373\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long nvenet_msi_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x1ad0\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x1ad1\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x1ad2\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x0bf0\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x0bf1\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x0e1c\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x0e1d\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x0e12\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x0e13\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x0fae\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x0faf\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x10e5\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x10e6\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long pci_quirk_nvidia_tegra_disable_rp_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x0360\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long nvbridge_check_legacy_irq_routing - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x0364\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long nvbridge_check_legacy_irq_routing - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10b9, (~0)\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long nv_msi_ht_cap_quirk_all - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10b9, (~0)\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long nv_msi_ht_cap_quirk_all - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, (~0)\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long nv_msi_ht_cap_quirk_leaf - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, (~0)\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long nv_msi_ht_cap_quirk_leaf - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x14e4, 0x166a\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x14e4, 0x166b\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x14e4, 0x1668\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x14e4, 0x1669\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x14e4, 0x1678\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x14e4, 0x1679\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4390\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_ati_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4391\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_ati_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4392\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_ati_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4393\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_ati_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4394\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_ati_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4373\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4374\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x4375\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1969, 0x1062\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1969, 0x1063\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1969, 0x2060\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1969, 0x2062\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1969, 0x1073\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1969, 0x1083\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1969, 0x1090\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_qca_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1969, 0x1091\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_qca_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1969, 0x10a0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_qca_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1969, 0x10a1\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_qca_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1969, 0xe091\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_msi_intx_disable_qca_bug - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1c36, 0x0031\09\09\09"
module asm ".long 0x0604, 8\09\09"
module asm ".long quirk_al_msi_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x3388, 0x0020\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_hotplug_bridge - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x104c, 0xb800\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long fixup_ti816x_class - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1924, 0x0703\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long fixup_mpss_256 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1924, 0x6703\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long fixup_mpss_256 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1924, 0x0710\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long fixup_mpss_256 - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25c0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25d0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25d4\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25d8\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e2\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e3\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e4\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e5\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e6\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25e7\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25f7\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25f8\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25f9\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x25fa\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x65c0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x65e2\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x65e3\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x65e4\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x65e5\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x65e6\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x65e7\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x65f7\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x65f8\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x65f9\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x65fa\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_mc_errata - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0e08\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_ntb - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0e0d\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_ntb - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0042\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long disable_igfx_irq - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0046\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long disable_igfx_irq - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x004a\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long disable_igfx_irq - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0102\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long disable_igfx_irq - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0106\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long disable_igfx_irq - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x010a\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long disable_igfx_irq - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0152\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long disable_igfx_irq - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0412\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0c00\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x0c0c\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x8c02\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x8c18\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x8c1c\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x8c20\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x8c22\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x8c26\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x8c2d\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x8c31\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x8c3a\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x8c3d\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x8c4e\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2280\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2298\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x229c\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x22b0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x22b5\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x22b7\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x22b8\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x22d8\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x22dc\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_remove_d3hot_delay - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1425, 0x0030\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1814, 0x0601\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b7c, 0x0004\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10ec, 0x8169\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1572\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1574\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1580\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1581\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1583\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1584\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1585\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1586\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1587\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1588\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1589\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x158a\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x158b\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x37d0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x37d1\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x37d2\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x15b3, (~0)\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long mellanox_check_broken_intx_masking - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x168c, 0x0030\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_bus_reset - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x168c, 0x0032\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_bus_reset - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x168c, 0x003c\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_bus_reset - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x168c, 0x0033\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_bus_reset - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x168c, 0x0034\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_bus_reset - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x177d, 0xa100\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_bus_reset - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, (~0)\09\09\09"
module asm ".long 0x0300, 8\09\09"
module asm ".long quirk_no_pm_reset - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1513\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_thunderbolt_hotplug_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x151a\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_thunderbolt_hotplug_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x151b\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_thunderbolt_hotplug_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1547\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_thunderbolt_hotplug_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1549\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_thunderbolt_hotplug_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_suspend_late, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1547\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_apple_poweroff_thunderbolt - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1180, 0xe832\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func0_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1180, 0xe476\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func0_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x9120\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x9123\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x9128\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x9130\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x9170\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x9172\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x917a\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x9182\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x9183\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x91a0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x9220\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b4b, 0x9230\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1103, 0x0642\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1103, 0x0645\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x197B, 0x2392\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1c28, 0x0122\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_dma_func1_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x9005, 0x0285\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_fixed_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b21, 0x1080\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_use_pcie_bridge_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10e3, 0x8113\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_use_pcie_bridge_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1283, 0x8892\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_use_pcie_bridge_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1283, 0x8893\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_use_pcie_bridge_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x244e\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_use_pcie_bridge_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2260\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_mic_x200_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2264\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_mic_x200_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2954\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pex_vca_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2955\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pex_vca_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2956\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pex_vca_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2958\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pex_vca_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2959\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pex_vca_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x295A\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_pex_vca_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x14e4, 0x9000\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_bridge_cavm_thrx2_pcie_root - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x14e4, 0x9084\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_bridge_cavm_thrx2_pcie_root - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1797, 0x6864\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_tw686x_class - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1797, 0x6865\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_tw686x_class - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1797, 0x6868\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_tw686x_class - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1797, 0x6869\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_tw686x_class - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f01\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f02\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f03\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f04\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f05\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f06\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f07\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f08\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f09\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f0a\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f0b\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f0c\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f0d\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x6f0e\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f01\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f02\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f03\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f04\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f05\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f06\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f07\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f08\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f09\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f0a\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f0b\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f0c\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f0d\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x2f0e\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x1a00\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x1a01\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x1a02\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long quirk_relaxedordering_disable - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1425, (~0)\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_chelsio_T5_disable_root_port_attributes - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x443\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_intel_qat_vf_cap - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x1487\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_flr - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x148c\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_flr - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, 0x149c\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_flr - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1502\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_flr - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x8086, 0x1503\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_flr - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0132\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_ext_tags - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0140\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_ext_tags - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0141\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_ext_tags - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0142\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_ext_tags - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0144\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_ext_tags - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0420\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_ext_tags - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1166, 0x0422\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_no_ext_tags - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x98e4\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_harvest_no_ats - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x6900\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_harvest_no_ats - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x7312\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_harvest_no_ats - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, 0x7340\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_amd_harvest_no_ats - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1957, (~0)\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_fsl_no_msi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1002, (~0)\09\09\09"
module asm ".long 0x0403, 8\09\09"
module asm ".long quirk_gpu_hda - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1022, (~0)\09\09\09"
module asm ".long 0x0403, 8\09\09"
module asm ".long quirk_gpu_hda - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, (~0)\09\09\09"
module asm ".long 0x0403, 8\09\09"
module asm ".long quirk_gpu_hda - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, (~0)\09\09\09"
module asm ".long 0x0c03, 8\09\09"
module asm ".long quirk_gpu_usb - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, (~0)\09\09\09"
module asm ".long 0x0c80, 8\09\09"
module asm ".long quirk_gpu_usb_typec_ucsi - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, (~0)\09\09\09"
module asm ".long 0x03, 16\09\09"
module asm ".long quirk_nvidia_hda - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_resume_early, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, (~0)\09\09\09"
module asm ".long 0x03, 16\09\09"
module asm ".long quirk_nvidia_hda - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8531\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8532\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8533\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8534\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8535\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8536\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8541\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8542\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8543\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8544\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8545\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8546\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8551\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8552\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8553\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8554\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8555\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8556\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8561\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8562\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8563\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8564\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8565\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8566\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8571\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8572\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8573\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8574\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8575\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x8576\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4000\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4084\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4068\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4052\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4036\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4028\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4100\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4184\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4168\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4152\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4136\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4128\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4200\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4284\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4268\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4252\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4236\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x11f8, 0x4228\09\09\09"
module asm ".long 0x0680, 8\09\09"
module asm ".long quirk_switchtec_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10b5, 0x87b0\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_plx_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10b5, 0x87b1\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long quirk_plx_ntb_dma_alias - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x10de, 0x13b1\09\09\09"
module asm ".long 0x0300, 8\09\09"
module asm ".long quirk_reset_lenovo_thinkpad_p50_nvgpu - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1b21, 0x2142\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long pci_fixup_no_d0_pme - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x12D8, 0x400e\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long pci_fixup_no_pme - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_final, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x12D8, 0x400f\09\09\09"
module asm ".long (~0), 0\09\09"
module asm ".long pci_fixup_no_pme - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"
module asm ".section .pci_fixup_header, \22a\22\09\09\09\09"
module asm ".balign\0916\09\09\09\09\09"
module asm ".short 0x1ac1, 0x089a\09\09\09"
module asm ".long 0x0000, 8\09\09"
module asm ".long apex_pci_fixup_class - .\09\09\09\09"
module asm ".previous\09\09\09\09\09\09"

%struct.pci_fixup = type { i16, i16, i32, i32, i32 }
%struct.pci_dev_reset_methods = type { i16, i16, i32 (%struct.pci_dev*, i32)* }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.65, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.pci_vpd = type opaque
%union.anon.65 = type { %struct.pci_sriov* }
%struct.pci_sriov = type { i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i32, i8, i8, i16, %struct.pci_dev*, %struct.pci_dev*, i32, i8, i16, i16, [6 x i64], i8 }
%struct.pci_dev_acs_enabled = type { i16, i16, i32 (%struct.pci_dev*, i16)* }
%struct.pci_dev_acs_ops = type { i16, i16, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)* }
%struct.dmi_system_id = type { {}*, i8*, [4 x %struct.dmi_strmatch], i8* }
%struct.dmi_strmatch = type { i8, [79 x i8] }
%struct.kmem_cache = type opaque
%struct.acpi_device = type { i32, i8*, %struct.fwnode_handle, %struct.acpi_device*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.acpi_device_status, %struct.acpi_device_flags, %struct.acpi_device_pnp, %struct.acpi_device_power, %struct.acpi_device_wakeup, %struct.acpi_device_perf, %struct.acpi_device_dir, %struct.acpi_device_data, %struct.acpi_scan_handler*, %struct.acpi_hotplug_context*, %struct.acpi_driver*, %struct.acpi_gpio_mapping*, i8*, %struct.device, i32, i32, %struct.list_head, %struct.mutex, void (%struct.acpi_device*)* }
%struct.acpi_device_status = type { i32 }
%struct.acpi_device_flags = type { i32 }
%struct.acpi_device_pnp = type { [8 x i8], %struct.acpi_pnp_type, i64, i8*, %struct.list_head, [40 x i8], [20 x i8], %union.acpi_object* }
%struct.acpi_pnp_type = type { i32 }
%union.acpi_object = type { %struct.anon.71 }
%struct.anon.71 = type { i32, i32, i64, i32 }
%struct.acpi_device_power = type { i32, %struct.acpi_device_power_flags, [5 x %struct.acpi_device_power_state] }
%struct.acpi_device_power_flags = type { i32 }
%struct.acpi_device_power_state = type { %struct.anon.73, i32, i32, %struct.list_head }
%struct.anon.73 = type { i8 }
%struct.acpi_device_wakeup = type { i8*, i64, i64, %struct.list_head, %struct.acpi_device_wakeup_flags, %struct.acpi_device_wakeup_context, %struct.wakeup_source*, i32, i32 }
%struct.acpi_device_wakeup_flags = type { i8 }
%struct.acpi_device_wakeup_context = type { void (%struct.acpi_device_wakeup_context*)*, %struct.device* }
%struct.acpi_device_perf = type { i32, %struct.acpi_device_perf_flags, i32, %struct.acpi_device_perf_state* }
%struct.acpi_device_perf_flags = type { i8 }
%struct.acpi_device_perf_state = type { %struct.anon.74, i8, i8, i32 }
%struct.anon.74 = type { i8 }
%struct.acpi_device_dir = type { %struct.proc_dir_entry* }
%struct.acpi_device_data = type { %union.acpi_object*, %struct.list_head, %union.acpi_object*, %struct.list_head }
%struct.acpi_scan_handler = type { %struct.acpi_device_id*, %struct.list_head, i1 (i8*, %struct.acpi_device_id**)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, void (%struct.acpi_device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.acpi_hotplug_profile }
%struct.acpi_hotplug_profile = type { %struct.kobject, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*)*, i8 }
%struct.acpi_hotplug_context = type { %struct.acpi_device*, i32 (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*)* }
%struct.acpi_driver = type { [80 x i8], [80 x i8], %struct.acpi_device_id*, i32, %struct.acpi_device_ops, %struct.device_driver, %struct.module* }
%struct.acpi_device_ops = type { i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*, i32)* }
%struct.acpi_gpio_mapping = type opaque
%struct.pci_cap_saved_state = type { %struct.hlist_node, %struct.pci_cap_saved_data }
%struct.pci_cap_saved_data = type { i16, i8, i32, [0 x i32] }
%struct.pci_host_bridge = type { %struct.device, %struct.pci_bus*, %struct.pci_ops*, %struct.pci_ops*, i8*, i32, %struct.list_head, %struct.list_head, i8 (%struct.pci_dev*, i8*)*, i32 (%struct.pci_dev*, i8, i8)*, void (%struct.pci_host_bridge*)*, i8*, %struct.msi_controller*, i16, i64 (%struct.pci_dev*, %struct.resource*, i64, i64, i64)*, [8 x i8], [0 x i64] }
%struct.ntb_info_regs = type <{ i8, i8, i16, i64, i16, i16, [4 x i32], [48 x %struct.nt_partition_info] }>
%struct.nt_partition_info = type { i32, i32, i32, i32 }
%struct.ntb_ctrl_regs = type { i32, i32, i32, i32, i32, i16, i16, i32, i16, i16, i32, [7 x i32], [6 x %struct.anon.75], [6 x %struct.anon.76], [192 x i32], [512 x i32], [256 x i32], [512 x i64] }
%struct.anon.75 = type { i32, i32, i64 }
%struct.anon.76 = type { i32, [3 x i32] }
%struct.pci_bus_region = type { i64, i64 }
%struct.pci_sysdata = type { i32, i32, %struct.acpi_device*, i8*, i8*, %struct.pci_dev* }
%struct.acpi_table_header = type { [4 x i8], i32, i8, i8, [6 x i8], [8 x i8], i32, [4 x i8], i32 }
%struct.device_link = type { %struct.device*, %struct.list_head, %struct.device*, %struct.list_head, %struct.device, i32, i32, %struct.refcount_struct, %struct.kref, %struct.callback_head, i8 }

@__start_pci_fixups_early = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_early = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_header = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_header = external dso_local global [0 x %struct.pci_fixup], align 4
@pci_apply_fixup_final_quirks = internal global i8 0, align 1, !dbg !0
@__start_pci_fixups_final = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_final = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_enable = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_enable = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_resume = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_resume = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_resume_early = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_resume_early = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_suspend = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_suspend = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_suspend_late = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_suspend_late = external dso_local global [0 x %struct.pci_fixup], align 4
@__UNIQUE_ID___addressable_pci_apply_final_quirks240 = internal global i8* bitcast (i32 ()* @pci_apply_final_quirks to i8*), section ".discard.addressable", align 8, !dbg !4589
@__UNIQUE_ID___addressable_quirk_mmio_always_on241 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_mmio_always_on to i8*), section ".discard.addressable", align 8, !dbg !4591
@__UNIQUE_ID___addressable_quirk_mellanox_tavor242 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_mellanox_tavor to i8*), section ".discard.addressable", align 8, !dbg !4593
@__UNIQUE_ID___addressable_quirk_mellanox_tavor243 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_mellanox_tavor to i8*), section ".discard.addressable", align 8, !dbg !4595
@__UNIQUE_ID___addressable_quirk_passive_release244 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_passive_release to i8*), section ".discard.addressable", align 8, !dbg !4597
@__UNIQUE_ID___addressable_quirk_passive_release245 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_passive_release to i8*), section ".discard.addressable", align 8, !dbg !4599
@__UNIQUE_ID___addressable_quirk_isa_dma_hangs246 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_isa_dma_hangs to i8*), section ".discard.addressable", align 8, !dbg !4601
@__UNIQUE_ID___addressable_quirk_isa_dma_hangs247 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_isa_dma_hangs to i8*), section ".discard.addressable", align 8, !dbg !4603
@__UNIQUE_ID___addressable_quirk_isa_dma_hangs248 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_isa_dma_hangs to i8*), section ".discard.addressable", align 8, !dbg !4605
@__UNIQUE_ID___addressable_quirk_isa_dma_hangs249 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_isa_dma_hangs to i8*), section ".discard.addressable", align 8, !dbg !4607
@__UNIQUE_ID___addressable_quirk_isa_dma_hangs250 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_isa_dma_hangs to i8*), section ".discard.addressable", align 8, !dbg !4609
@__UNIQUE_ID___addressable_quirk_isa_dma_hangs251 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_isa_dma_hangs to i8*), section ".discard.addressable", align 8, !dbg !4611
@__UNIQUE_ID___addressable_quirk_isa_dma_hangs252 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_isa_dma_hangs to i8*), section ".discard.addressable", align 8, !dbg !4613
@__UNIQUE_ID___addressable_quirk_tigerpoint_bm_sts253 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_tigerpoint_bm_sts to i8*), section ".discard.addressable", align 8, !dbg !4615
@__UNIQUE_ID___addressable_quirk_nopcipci254 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nopcipci to i8*), section ".discard.addressable", align 8, !dbg !4617
@__UNIQUE_ID___addressable_quirk_nopcipci255 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nopcipci to i8*), section ".discard.addressable", align 8, !dbg !4619
@__UNIQUE_ID___addressable_quirk_nopciamd256 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nopciamd to i8*), section ".discard.addressable", align 8, !dbg !4621
@__UNIQUE_ID___addressable_quirk_triton257 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_triton to i8*), section ".discard.addressable", align 8, !dbg !4623
@__UNIQUE_ID___addressable_quirk_triton258 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_triton to i8*), section ".discard.addressable", align 8, !dbg !4625
@__UNIQUE_ID___addressable_quirk_triton259 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_triton to i8*), section ".discard.addressable", align 8, !dbg !4627
@__UNIQUE_ID___addressable_quirk_triton260 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_triton to i8*), section ".discard.addressable", align 8, !dbg !4629
@__UNIQUE_ID___addressable_quirk_vialatency261 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_vialatency to i8*), section ".discard.addressable", align 8, !dbg !4631
@__UNIQUE_ID___addressable_quirk_vialatency262 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_vialatency to i8*), section ".discard.addressable", align 8, !dbg !4633
@__UNIQUE_ID___addressable_quirk_vialatency263 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_vialatency to i8*), section ".discard.addressable", align 8, !dbg !4635
@__UNIQUE_ID___addressable_quirk_vialatency264 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_vialatency to i8*), section ".discard.addressable", align 8, !dbg !4637
@__UNIQUE_ID___addressable_quirk_vialatency265 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_vialatency to i8*), section ".discard.addressable", align 8, !dbg !4639
@__UNIQUE_ID___addressable_quirk_vialatency266 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_vialatency to i8*), section ".discard.addressable", align 8, !dbg !4641
@__UNIQUE_ID___addressable_quirk_viaetbf267 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_viaetbf to i8*), section ".discard.addressable", align 8, !dbg !4643
@__UNIQUE_ID___addressable_quirk_vsfx268 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_vsfx to i8*), section ".discard.addressable", align 8, !dbg !4645
@__UNIQUE_ID___addressable_quirk_alimagik269 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_alimagik to i8*), section ".discard.addressable", align 8, !dbg !4647
@__UNIQUE_ID___addressable_quirk_alimagik270 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_alimagik to i8*), section ".discard.addressable", align 8, !dbg !4649
@__UNIQUE_ID___addressable_quirk_natoma271 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_natoma to i8*), section ".discard.addressable", align 8, !dbg !4651
@__UNIQUE_ID___addressable_quirk_natoma272 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_natoma to i8*), section ".discard.addressable", align 8, !dbg !4653
@__UNIQUE_ID___addressable_quirk_natoma273 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_natoma to i8*), section ".discard.addressable", align 8, !dbg !4655
@__UNIQUE_ID___addressable_quirk_natoma274 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_natoma to i8*), section ".discard.addressable", align 8, !dbg !4657
@__UNIQUE_ID___addressable_quirk_natoma275 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_natoma to i8*), section ".discard.addressable", align 8, !dbg !4659
@__UNIQUE_ID___addressable_quirk_natoma276 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_natoma to i8*), section ".discard.addressable", align 8, !dbg !4661
@__UNIQUE_ID___addressable_quirk_citrine277 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_citrine to i8*), section ".discard.addressable", align 8, !dbg !4663
@__UNIQUE_ID___addressable_quirk_nfp6000278 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nfp6000 to i8*), section ".discard.addressable", align 8, !dbg !4665
@__UNIQUE_ID___addressable_quirk_nfp6000279 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nfp6000 to i8*), section ".discard.addressable", align 8, !dbg !4667
@__UNIQUE_ID___addressable_quirk_nfp6000280 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nfp6000 to i8*), section ".discard.addressable", align 8, !dbg !4669
@__UNIQUE_ID___addressable_quirk_nfp6000281 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nfp6000 to i8*), section ".discard.addressable", align 8, !dbg !4671
@__UNIQUE_ID___addressable_quirk_extend_bar_to_page282 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_extend_bar_to_page to i8*), section ".discard.addressable", align 8, !dbg !4673
@__UNIQUE_ID___addressable_quirk_s3_64M283 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_s3_64M to i8*), section ".discard.addressable", align 8, !dbg !4675
@__UNIQUE_ID___addressable_quirk_s3_64M284 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_s3_64M to i8*), section ".discard.addressable", align 8, !dbg !4677
@__UNIQUE_ID___addressable_quirk_cs5536_vsa285 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_cs5536_vsa to i8*), section ".discard.addressable", align 8, !dbg !4679
@__UNIQUE_ID___addressable_quirk_ati_exploding_mce286 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ati_exploding_mce to i8*), section ".discard.addressable", align 8, !dbg !4681
@__UNIQUE_ID___addressable_quirk_amd_nl_class287 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_nl_class to i8*), section ".discard.addressable", align 8, !dbg !4683
@__UNIQUE_ID___addressable_quirk_synopsys_haps288 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_synopsys_haps to i8*), section ".discard.addressable", align 8, !dbg !4685
@__UNIQUE_ID___addressable_quirk_ali7101_acpi289 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ali7101_acpi to i8*), section ".discard.addressable", align 8, !dbg !4687
@__UNIQUE_ID___addressable_quirk_piix4_acpi290 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_piix4_acpi to i8*), section ".discard.addressable", align 8, !dbg !4689
@__UNIQUE_ID___addressable_quirk_piix4_acpi291 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_piix4_acpi to i8*), section ".discard.addressable", align 8, !dbg !4691
@__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi292 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich4_lpc_acpi to i8*), section ".discard.addressable", align 8, !dbg !4693
@__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi293 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich4_lpc_acpi to i8*), section ".discard.addressable", align 8, !dbg !4695
@__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi294 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich4_lpc_acpi to i8*), section ".discard.addressable", align 8, !dbg !4697
@__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi295 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich4_lpc_acpi to i8*), section ".discard.addressable", align 8, !dbg !4699
@__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi296 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich4_lpc_acpi to i8*), section ".discard.addressable", align 8, !dbg !4701
@__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi297 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich4_lpc_acpi to i8*), section ".discard.addressable", align 8, !dbg !4703
@__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi298 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich4_lpc_acpi to i8*), section ".discard.addressable", align 8, !dbg !4705
@__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi299 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich4_lpc_acpi to i8*), section ".discard.addressable", align 8, !dbg !4707
@__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi300 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich4_lpc_acpi to i8*), section ".discard.addressable", align 8, !dbg !4709
@__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi301 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich4_lpc_acpi to i8*), section ".discard.addressable", align 8, !dbg !4711
@__UNIQUE_ID___addressable_quirk_ich6_lpc302 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich6_lpc to i8*), section ".discard.addressable", align 8, !dbg !4713
@__UNIQUE_ID___addressable_quirk_ich6_lpc303 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich6_lpc to i8*), section ".discard.addressable", align 8, !dbg !4715
@__UNIQUE_ID___addressable_quirk_ich7_lpc304 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4717
@__UNIQUE_ID___addressable_quirk_ich7_lpc305 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4719
@__UNIQUE_ID___addressable_quirk_ich7_lpc306 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4721
@__UNIQUE_ID___addressable_quirk_ich7_lpc307 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4723
@__UNIQUE_ID___addressable_quirk_ich7_lpc308 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4725
@__UNIQUE_ID___addressable_quirk_ich7_lpc309 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4727
@__UNIQUE_ID___addressable_quirk_ich7_lpc310 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4729
@__UNIQUE_ID___addressable_quirk_ich7_lpc311 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4731
@__UNIQUE_ID___addressable_quirk_ich7_lpc312 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4733
@__UNIQUE_ID___addressable_quirk_ich7_lpc313 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4735
@__UNIQUE_ID___addressable_quirk_ich7_lpc314 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4737
@__UNIQUE_ID___addressable_quirk_ich7_lpc315 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4739
@__UNIQUE_ID___addressable_quirk_ich7_lpc316 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ich7_lpc to i8*), section ".discard.addressable", align 8, !dbg !4741
@__UNIQUE_ID___addressable_quirk_vt82c586_acpi317 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_vt82c586_acpi to i8*), section ".discard.addressable", align 8, !dbg !4743
@__UNIQUE_ID___addressable_quirk_vt82c686_acpi318 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_vt82c686_acpi to i8*), section ".discard.addressable", align 8, !dbg !4745
@__UNIQUE_ID___addressable_quirk_vt8235_acpi319 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_vt8235_acpi to i8*), section ".discard.addressable", align 8, !dbg !4747
@__UNIQUE_ID___addressable_quirk_xio2000a322 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_xio2000a to i8*), section ".discard.addressable", align 8, !dbg !4749
@__UNIQUE_ID___addressable_quirk_via_ioapic323 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_ioapic to i8*), section ".discard.addressable", align 8, !dbg !4751
@__UNIQUE_ID___addressable_quirk_via_ioapic324 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_ioapic to i8*), section ".discard.addressable", align 8, !dbg !4753
@__UNIQUE_ID___addressable_quirk_via_vt8237_bypass_apic_deassert325 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_vt8237_bypass_apic_deassert to i8*), section ".discard.addressable", align 8, !dbg !4755
@__UNIQUE_ID___addressable_quirk_via_vt8237_bypass_apic_deassert326 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_vt8237_bypass_apic_deassert to i8*), section ".discard.addressable", align 8, !dbg !4757
@__UNIQUE_ID___addressable_quirk_amd_ioapic327 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_ioapic to i8*), section ".discard.addressable", align 8, !dbg !4759
@__UNIQUE_ID___addressable_quirk_amd_8131_mmrbc328 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_8131_mmrbc to i8*), section ".discard.addressable", align 8, !dbg !4761
@__UNIQUE_ID___addressable_quirk_via_acpi329 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_acpi to i8*), section ".discard.addressable", align 8, !dbg !4763
@__UNIQUE_ID___addressable_quirk_via_acpi330 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_acpi to i8*), section ".discard.addressable", align 8, !dbg !4765
@__UNIQUE_ID___addressable_quirk_via_bridge331 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_bridge to i8*), section ".discard.addressable", align 8, !dbg !4767
@__UNIQUE_ID___addressable_quirk_via_bridge332 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_bridge to i8*), section ".discard.addressable", align 8, !dbg !4769
@__UNIQUE_ID___addressable_quirk_via_bridge333 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_bridge to i8*), section ".discard.addressable", align 8, !dbg !4771
@__UNIQUE_ID___addressable_quirk_via_bridge334 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_bridge to i8*), section ".discard.addressable", align 8, !dbg !4773
@__UNIQUE_ID___addressable_quirk_via_bridge335 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_bridge to i8*), section ".discard.addressable", align 8, !dbg !4775
@__UNIQUE_ID___addressable_quirk_via_bridge336 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_bridge to i8*), section ".discard.addressable", align 8, !dbg !4777
@__UNIQUE_ID___addressable_quirk_via_bridge337 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_bridge to i8*), section ".discard.addressable", align 8, !dbg !4779
@__UNIQUE_ID___addressable_quirk_via_bridge338 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_bridge to i8*), section ".discard.addressable", align 8, !dbg !4781
@__UNIQUE_ID___addressable_quirk_via_vlink339 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_vlink to i8*), section ".discard.addressable", align 8, !dbg !4783
@__UNIQUE_ID___addressable_quirk_vt82c598_id340 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_vt82c598_id to i8*), section ".discard.addressable", align 8, !dbg !4785
@__UNIQUE_ID___addressable_quirk_cardbus_legacy341 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_cardbus_legacy to i8*), section ".discard.addressable", align 8, !dbg !4787
@__UNIQUE_ID___addressable_quirk_cardbus_legacy342 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_cardbus_legacy to i8*), section ".discard.addressable", align 8, !dbg !4789
@__UNIQUE_ID___addressable_quirk_amd_ordering343 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_ordering to i8*), section ".discard.addressable", align 8, !dbg !4791
@__UNIQUE_ID___addressable_quirk_amd_ordering344 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_ordering to i8*), section ".discard.addressable", align 8, !dbg !4793
@__UNIQUE_ID___addressable_quirk_dunord345 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dunord to i8*), section ".discard.addressable", align 8, !dbg !4795
@__UNIQUE_ID___addressable_quirk_transparent_bridge346 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_transparent_bridge to i8*), section ".discard.addressable", align 8, !dbg !4797
@__UNIQUE_ID___addressable_quirk_transparent_bridge347 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_transparent_bridge to i8*), section ".discard.addressable", align 8, !dbg !4799
@__UNIQUE_ID___addressable_quirk_mediagx_master348 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_mediagx_master to i8*), section ".discard.addressable", align 8, !dbg !4801
@__UNIQUE_ID___addressable_quirk_mediagx_master349 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_mediagx_master to i8*), section ".discard.addressable", align 8, !dbg !4803
@__UNIQUE_ID___addressable_quirk_disable_pxb350 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_pxb to i8*), section ".discard.addressable", align 8, !dbg !4805
@__UNIQUE_ID___addressable_quirk_disable_pxb351 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_pxb to i8*), section ".discard.addressable", align 8, !dbg !4807
@__UNIQUE_ID___addressable_quirk_amd_ide_mode352 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_ide_mode to i8*), section ".discard.addressable", align 8, !dbg !4809
@__UNIQUE_ID___addressable_quirk_amd_ide_mode353 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_ide_mode to i8*), section ".discard.addressable", align 8, !dbg !4811
@__UNIQUE_ID___addressable_quirk_amd_ide_mode354 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_ide_mode to i8*), section ".discard.addressable", align 8, !dbg !4813
@__UNIQUE_ID___addressable_quirk_amd_ide_mode355 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_ide_mode to i8*), section ".discard.addressable", align 8, !dbg !4815
@__UNIQUE_ID___addressable_quirk_amd_ide_mode356 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_ide_mode to i8*), section ".discard.addressable", align 8, !dbg !4817
@__UNIQUE_ID___addressable_quirk_amd_ide_mode357 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_ide_mode to i8*), section ".discard.addressable", align 8, !dbg !4819
@__UNIQUE_ID___addressable_quirk_amd_ide_mode358 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_ide_mode to i8*), section ".discard.addressable", align 8, !dbg !4821
@__UNIQUE_ID___addressable_quirk_amd_ide_mode359 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_ide_mode to i8*), section ".discard.addressable", align 8, !dbg !4823
@__UNIQUE_ID___addressable_quirk_svwks_csb5ide360 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_svwks_csb5ide to i8*), section ".discard.addressable", align 8, !dbg !4825
@__UNIQUE_ID___addressable_quirk_ide_samemode361 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ide_samemode to i8*), section ".discard.addressable", align 8, !dbg !4827
@__UNIQUE_ID___addressable_quirk_no_ata_d3362 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_ata_d3 to i8*), section ".discard.addressable", align 8, !dbg !4829
@__UNIQUE_ID___addressable_quirk_no_ata_d3363 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_ata_d3 to i8*), section ".discard.addressable", align 8, !dbg !4831
@__UNIQUE_ID___addressable_quirk_no_ata_d3364 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_ata_d3 to i8*), section ".discard.addressable", align 8, !dbg !4833
@__UNIQUE_ID___addressable_quirk_no_ata_d3365 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_ata_d3 to i8*), section ".discard.addressable", align 8, !dbg !4835
@__UNIQUE_ID___addressable_quirk_eisa_bridge366 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_eisa_bridge to i8*), section ".discard.addressable", align 8, !dbg !4837
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge367 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4839
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge368 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4841
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge369 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4843
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge370 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4845
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge371 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4847
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge372 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4849
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge373 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4851
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge374 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4853
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge375 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4855
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge376 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4857
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge377 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4859
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge378 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4861
@__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge379 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_hostbridge to i8*), section ".discard.addressable", align 8, !dbg !4863
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc380 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4865
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc381 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4867
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc382 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4869
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc383 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4871
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc384 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4873
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc385 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4875
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc386 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4877
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc387 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4879
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc388 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4881
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc389 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4883
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc390 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4885
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc391 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4887
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc392 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4889
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc393 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc to i8*), section ".discard.addressable", align 8, !dbg !4891
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6395 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc_ich6 to i8*), section ".discard.addressable", align 8, !dbg !4893
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6_suspend396 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc_ich6_suspend to i8*), section ".discard.addressable", align 8, !dbg !4895
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6_resume397 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc_ich6_resume to i8*), section ".discard.addressable", align 8, !dbg !4897
@__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6_resume_early398 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_smbus_lpc_ich6_resume_early to i8*), section ".discard.addressable", align 8, !dbg !4899
@__UNIQUE_ID___addressable_quirk_sis_96x_smbus399 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_sis_96x_smbus to i8*), section ".discard.addressable", align 8, !dbg !4901
@__UNIQUE_ID___addressable_quirk_sis_96x_smbus400 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_sis_96x_smbus to i8*), section ".discard.addressable", align 8, !dbg !4903
@__UNIQUE_ID___addressable_quirk_sis_96x_smbus401 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_sis_96x_smbus to i8*), section ".discard.addressable", align 8, !dbg !4905
@__UNIQUE_ID___addressable_quirk_sis_96x_smbus402 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_sis_96x_smbus to i8*), section ".discard.addressable", align 8, !dbg !4907
@__UNIQUE_ID___addressable_quirk_sis_96x_smbus403 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_sis_96x_smbus to i8*), section ".discard.addressable", align 8, !dbg !4909
@__UNIQUE_ID___addressable_quirk_sis_96x_smbus404 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_sis_96x_smbus to i8*), section ".discard.addressable", align 8, !dbg !4911
@__UNIQUE_ID___addressable_quirk_sis_96x_smbus405 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_sis_96x_smbus to i8*), section ".discard.addressable", align 8, !dbg !4913
@__UNIQUE_ID___addressable_quirk_sis_96x_smbus406 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_sis_96x_smbus to i8*), section ".discard.addressable", align 8, !dbg !4915
@__UNIQUE_ID___addressable_quirk_sis_503407 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_sis_503 to i8*), section ".discard.addressable", align 8, !dbg !4917
@__UNIQUE_ID___addressable_quirk_sis_503408 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_sis_503 to i8*), section ".discard.addressable", align 8, !dbg !4919
@__UNIQUE_ID___addressable_asus_hides_ac97_lpc409 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_ac97_lpc to i8*), section ".discard.addressable", align 8, !dbg !4921
@__UNIQUE_ID___addressable_asus_hides_ac97_lpc410 = internal global i8* bitcast (void (%struct.pci_dev*)* @asus_hides_ac97_lpc to i8*), section ".discard.addressable", align 8, !dbg !4923
@__UNIQUE_ID___addressable_quirk_jmicron_ata411 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4925
@__UNIQUE_ID___addressable_quirk_jmicron_ata412 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4927
@__UNIQUE_ID___addressable_quirk_jmicron_ata413 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4929
@__UNIQUE_ID___addressable_quirk_jmicron_ata414 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4931
@__UNIQUE_ID___addressable_quirk_jmicron_ata415 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4933
@__UNIQUE_ID___addressable_quirk_jmicron_ata416 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4935
@__UNIQUE_ID___addressable_quirk_jmicron_ata417 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4937
@__UNIQUE_ID___addressable_quirk_jmicron_ata418 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4939
@__UNIQUE_ID___addressable_quirk_jmicron_ata419 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4941
@__UNIQUE_ID___addressable_quirk_jmicron_ata420 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4943
@__UNIQUE_ID___addressable_quirk_jmicron_ata421 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4945
@__UNIQUE_ID___addressable_quirk_jmicron_ata422 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4947
@__UNIQUE_ID___addressable_quirk_jmicron_ata423 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4949
@__UNIQUE_ID___addressable_quirk_jmicron_ata424 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4951
@__UNIQUE_ID___addressable_quirk_jmicron_ata425 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4953
@__UNIQUE_ID___addressable_quirk_jmicron_ata426 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4955
@__UNIQUE_ID___addressable_quirk_jmicron_ata427 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4957
@__UNIQUE_ID___addressable_quirk_jmicron_ata428 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_ata to i8*), section ".discard.addressable", align 8, !dbg !4959
@__UNIQUE_ID___addressable_quirk_jmicron_async_suspend429 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_async_suspend to i8*), section ".discard.addressable", align 8, !dbg !4961
@__UNIQUE_ID___addressable_quirk_jmicron_async_suspend430 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_async_suspend to i8*), section ".discard.addressable", align 8, !dbg !4963
@__UNIQUE_ID___addressable_quirk_jmicron_async_suspend431 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_async_suspend to i8*), section ".discard.addressable", align 8, !dbg !4965
@__UNIQUE_ID___addressable_quirk_jmicron_async_suspend432 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_jmicron_async_suspend to i8*), section ".discard.addressable", align 8, !dbg !4967
@__UNIQUE_ID___addressable_quirk_alder_ioapic433 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_alder_ioapic to i8*), section ".discard.addressable", align 8, !dbg !4969
@__UNIQUE_ID___addressable_quirk_pcie_mch434 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pcie_mch to i8*), section ".discard.addressable", align 8, !dbg !4971
@__UNIQUE_ID___addressable_quirk_pcie_mch435 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pcie_mch to i8*), section ".discard.addressable", align 8, !dbg !4973
@__UNIQUE_ID___addressable_quirk_pcie_mch436 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pcie_mch to i8*), section ".discard.addressable", align 8, !dbg !4975
@__UNIQUE_ID___addressable_quirk_pcie_mch437 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pcie_mch to i8*), section ".discard.addressable", align 8, !dbg !4977
@__UNIQUE_ID___addressable_quirk_pcie_pxh438 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pcie_pxh to i8*), section ".discard.addressable", align 8, !dbg !4979
@__UNIQUE_ID___addressable_quirk_pcie_pxh439 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pcie_pxh to i8*), section ".discard.addressable", align 8, !dbg !4981
@__UNIQUE_ID___addressable_quirk_pcie_pxh440 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pcie_pxh to i8*), section ".discard.addressable", align 8, !dbg !4983
@__UNIQUE_ID___addressable_quirk_pcie_pxh441 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pcie_pxh to i8*), section ".discard.addressable", align 8, !dbg !4985
@__UNIQUE_ID___addressable_quirk_pcie_pxh442 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pcie_pxh to i8*), section ".discard.addressable", align 8, !dbg !4987
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm443 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !4989
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm444 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !4991
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm445 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !4993
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm446 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !4995
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm447 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !4997
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm448 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !4999
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm449 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5001
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm450 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5003
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm451 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5005
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm452 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5007
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm453 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5009
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm454 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5011
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm455 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5013
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm456 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5015
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm457 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5017
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm458 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5019
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm459 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5021
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm460 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5023
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm461 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5025
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm462 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5027
@__UNIQUE_ID___addressable_quirk_intel_pcie_pm463 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_pcie_pm to i8*), section ".discard.addressable", align 8, !dbg !5029
@__UNIQUE_ID___addressable_quirk_radeon_pm464 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_radeon_pm to i8*), section ".discard.addressable", align 8, !dbg !5031
@__UNIQUE_ID___addressable_quirk_ryzen_xhci_d3hot465 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ryzen_xhci_d3hot to i8*), section ".discard.addressable", align 8, !dbg !5033
@__UNIQUE_ID___addressable_quirk_ryzen_xhci_d3hot466 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_ryzen_xhci_d3hot to i8*), section ".discard.addressable", align 8, !dbg !5035
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel467 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5037
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel468 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5039
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel469 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5041
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel470 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5043
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel471 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5045
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel472 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5047
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel473 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5049
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel474 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5051
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel475 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5053
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel476 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5055
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel477 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5057
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel478 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5059
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel479 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5061
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel480 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5063
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel481 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5065
@__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel482 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reroute_to_boot_interrupts_intel to i8*), section ".discard.addressable", align 8, !dbg !5067
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt483 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5069
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt484 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5071
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt485 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5073
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt486 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5075
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt487 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5077
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt488 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5079
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt489 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5081
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt490 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5083
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt491 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5085
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt492 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5087
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt493 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5089
@__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt494 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_intel_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5091
@__UNIQUE_ID___addressable_quirk_disable_broadcom_boot_interrupt495 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_broadcom_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5093
@__UNIQUE_ID___addressable_quirk_disable_broadcom_boot_interrupt496 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_broadcom_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5095
@__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt497 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_amd_813x_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5097
@__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt498 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_amd_813x_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5099
@__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt499 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_amd_813x_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5101
@__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt500 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_amd_813x_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5103
@__UNIQUE_ID___addressable_quirk_disable_amd_8111_boot_interrupt501 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_amd_8111_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5105
@__UNIQUE_ID___addressable_quirk_disable_amd_8111_boot_interrupt502 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_amd_8111_boot_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5107
@__UNIQUE_ID___addressable_quirk_tc86c001_ide503 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_tc86c001_ide to i8*), section ".discard.addressable", align 8, !dbg !5109
@__UNIQUE_ID___addressable_quirk_plx_pci9050504 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_plx_pci9050 to i8*), section ".discard.addressable", align 8, !dbg !5111
@__UNIQUE_ID___addressable_quirk_plx_pci9050505 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_plx_pci9050 to i8*), section ".discard.addressable", align 8, !dbg !5113
@__UNIQUE_ID___addressable_quirk_plx_pci9050506 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_plx_pci9050 to i8*), section ".discard.addressable", align 8, !dbg !5115
@__UNIQUE_ID___addressable_quirk_netmos507 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_netmos to i8*), section ".discard.addressable", align 8, !dbg !5117
@__UNIQUE_ID___addressable_quirk_e100_interrupt508 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_e100_interrupt to i8*), section ".discard.addressable", align 8, !dbg !5119
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s509 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5121
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s510 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5123
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s511 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5125
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s512 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5127
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s513 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5129
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s514 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5131
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s515 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5133
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s516 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5135
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s517 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5137
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s518 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5139
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s519 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5141
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s520 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5143
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s521 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5145
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s522 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s to i8*), section ".discard.addressable", align 8, !dbg !5147
@__UNIQUE_ID___addressable_quirk_disable_aspm_l0s_l1523 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_aspm_l0s_l1 to i8*), section ".discard.addressable", align 8, !dbg !5149
@__UNIQUE_ID___addressable_quirk_enable_clear_retrain_link524 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_enable_clear_retrain_link to i8*), section ".discard.addressable", align 8, !dbg !5151
@__UNIQUE_ID___addressable_quirk_enable_clear_retrain_link525 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_enable_clear_retrain_link to i8*), section ".discard.addressable", align 8, !dbg !5153
@__UNIQUE_ID___addressable_quirk_enable_clear_retrain_link526 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_enable_clear_retrain_link to i8*), section ".discard.addressable", align 8, !dbg !5155
@__UNIQUE_ID___addressable_fixup_rev1_53c810527 = internal global i8* bitcast (void (%struct.pci_dev*)* @fixup_rev1_53c810 to i8*), section ".discard.addressable", align 8, !dbg !5157
@__UNIQUE_ID___addressable_quirk_p64h2_1k_io528 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_p64h2_1k_io to i8*), section ".discard.addressable", align 8, !dbg !5159
@__UNIQUE_ID___addressable_quirk_nvidia_ck804_pcie_aer_ext_cap529 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nvidia_ck804_pcie_aer_ext_cap to i8*), section ".discard.addressable", align 8, !dbg !5161
@__UNIQUE_ID___addressable_quirk_nvidia_ck804_pcie_aer_ext_cap530 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nvidia_ck804_pcie_aer_ext_cap to i8*), section ".discard.addressable", align 8, !dbg !5163
@__UNIQUE_ID___addressable_quirk_via_cx700_pci_parking_caching531 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_via_cx700_pci_parking_caching to i8*), section ".discard.addressable", align 8, !dbg !5165
@__UNIQUE_ID___addressable_quirk_brcm_5719_limit_mrrs532 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_brcm_5719_limit_mrrs to i8*), section ".discard.addressable", align 8, !dbg !5167
@__UNIQUE_ID___addressable_quirk_unhide_mch_dev6533 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_unhide_mch_dev6 to i8*), section ".discard.addressable", align 8, !dbg !5169
@__UNIQUE_ID___addressable_quirk_unhide_mch_dev6534 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_unhide_mch_dev6 to i8*), section ".discard.addressable", align 8, !dbg !5171
@__UNIQUE_ID___addressable_quirk_disable_all_msi535 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_all_msi to i8*), section ".discard.addressable", align 8, !dbg !5173
@__UNIQUE_ID___addressable_quirk_disable_all_msi536 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_all_msi to i8*), section ".discard.addressable", align 8, !dbg !5175
@__UNIQUE_ID___addressable_quirk_disable_all_msi537 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_all_msi to i8*), section ".discard.addressable", align 8, !dbg !5177
@__UNIQUE_ID___addressable_quirk_disable_all_msi538 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_all_msi to i8*), section ".discard.addressable", align 8, !dbg !5179
@__UNIQUE_ID___addressable_quirk_disable_all_msi539 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_all_msi to i8*), section ".discard.addressable", align 8, !dbg !5181
@__UNIQUE_ID___addressable_quirk_disable_all_msi540 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_all_msi to i8*), section ".discard.addressable", align 8, !dbg !5183
@__UNIQUE_ID___addressable_quirk_disable_all_msi541 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_all_msi to i8*), section ".discard.addressable", align 8, !dbg !5185
@__UNIQUE_ID___addressable_quirk_disable_all_msi542 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_all_msi to i8*), section ".discard.addressable", align 8, !dbg !5187
@__UNIQUE_ID___addressable_quirk_disable_msi543 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_msi to i8*), section ".discard.addressable", align 8, !dbg !5189
@__UNIQUE_ID___addressable_quirk_disable_msi544 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_msi to i8*), section ".discard.addressable", align 8, !dbg !5191
@__UNIQUE_ID___addressable_quirk_disable_msi545 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_disable_msi to i8*), section ".discard.addressable", align 8, !dbg !5193
@__UNIQUE_ID___addressable_quirk_amd_780_apc_msi546 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_780_apc_msi to i8*), section ".discard.addressable", align 8, !dbg !5195
@__UNIQUE_ID___addressable_quirk_amd_780_apc_msi547 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_780_apc_msi to i8*), section ".discard.addressable", align 8, !dbg !5197
@__UNIQUE_ID___addressable_quirk_msi_ht_cap548 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_ht_cap to i8*), section ".discard.addressable", align 8, !dbg !5199
@__UNIQUE_ID___addressable_quirk_nvidia_ck804_msi_ht_cap549 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nvidia_ck804_msi_ht_cap to i8*), section ".discard.addressable", align 8, !dbg !5201
@__UNIQUE_ID___addressable_ht_enable_msi_mapping550 = internal global i8* bitcast (void (%struct.pci_dev*)* @ht_enable_msi_mapping to i8*), section ".discard.addressable", align 8, !dbg !5203
@__UNIQUE_ID___addressable_ht_enable_msi_mapping551 = internal global i8* bitcast (void (%struct.pci_dev*)* @ht_enable_msi_mapping to i8*), section ".discard.addressable", align 8, !dbg !5205
@__UNIQUE_ID___addressable_nvenet_msi_disable552 = internal global i8* bitcast (void (%struct.pci_dev*)* @nvenet_msi_disable to i8*), section ".discard.addressable", align 8, !dbg !5207
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi553 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5209
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi554 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5211
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi555 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5213
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi556 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5215
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi557 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5217
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi558 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5219
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi559 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5221
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi560 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5223
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi561 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5225
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi562 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5227
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi563 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5229
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi564 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5231
@__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi565 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_quirk_nvidia_tegra_disable_rp_msi to i8*), section ".discard.addressable", align 8, !dbg !5233
@__UNIQUE_ID___addressable_nvbridge_check_legacy_irq_routing566 = internal global i8* bitcast (void (%struct.pci_dev*)* @nvbridge_check_legacy_irq_routing to i8*), section ".discard.addressable", align 8, !dbg !5235
@__UNIQUE_ID___addressable_nvbridge_check_legacy_irq_routing567 = internal global i8* bitcast (void (%struct.pci_dev*)* @nvbridge_check_legacy_irq_routing to i8*), section ".discard.addressable", align 8, !dbg !5237
@__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_all568 = internal global i8* bitcast (void (%struct.pci_dev*)* @nv_msi_ht_cap_quirk_all to i8*), section ".discard.addressable", align 8, !dbg !5239
@__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_all569 = internal global i8* bitcast (void (%struct.pci_dev*)* @nv_msi_ht_cap_quirk_all to i8*), section ".discard.addressable", align 8, !dbg !5241
@__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_leaf570 = internal global i8* bitcast (void (%struct.pci_dev*)* @nv_msi_ht_cap_quirk_leaf to i8*), section ".discard.addressable", align 8, !dbg !5243
@__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_leaf571 = internal global i8* bitcast (void (%struct.pci_dev*)* @nv_msi_ht_cap_quirk_leaf to i8*), section ".discard.addressable", align 8, !dbg !5245
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug572 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5247
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug573 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5249
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug574 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5251
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug575 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5253
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug576 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5255
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug577 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5257
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug578 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_ati_bug to i8*), section ".discard.addressable", align 8, !dbg !5259
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug579 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_ati_bug to i8*), section ".discard.addressable", align 8, !dbg !5261
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug580 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_ati_bug to i8*), section ".discard.addressable", align 8, !dbg !5263
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug581 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_ati_bug to i8*), section ".discard.addressable", align 8, !dbg !5265
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug582 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_ati_bug to i8*), section ".discard.addressable", align 8, !dbg !5267
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug583 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5269
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug584 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5271
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug585 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5273
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug586 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5275
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug587 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5277
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug588 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5279
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug589 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5281
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug590 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5283
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug591 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_bug to i8*), section ".discard.addressable", align 8, !dbg !5285
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug592 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_qca_bug to i8*), section ".discard.addressable", align 8, !dbg !5287
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug593 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_qca_bug to i8*), section ".discard.addressable", align 8, !dbg !5289
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug594 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_qca_bug to i8*), section ".discard.addressable", align 8, !dbg !5291
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug595 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_qca_bug to i8*), section ".discard.addressable", align 8, !dbg !5293
@__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug596 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_msi_intx_disable_qca_bug to i8*), section ".discard.addressable", align 8, !dbg !5295
@__UNIQUE_ID___addressable_quirk_al_msi_disable597 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_al_msi_disable to i8*), section ".discard.addressable", align 8, !dbg !5297
@__UNIQUE_ID___addressable_quirk_hotplug_bridge598 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_hotplug_bridge to i8*), section ".discard.addressable", align 8, !dbg !5299
@__UNIQUE_ID___addressable_fixup_ti816x_class599 = internal global i8* bitcast (void (%struct.pci_dev*)* @fixup_ti816x_class to i8*), section ".discard.addressable", align 8, !dbg !5301
@__UNIQUE_ID___addressable_fixup_mpss_256600 = internal global i8* bitcast (void (%struct.pci_dev*)* @fixup_mpss_256 to i8*), section ".discard.addressable", align 8, !dbg !5303
@__UNIQUE_ID___addressable_fixup_mpss_256601 = internal global i8* bitcast (void (%struct.pci_dev*)* @fixup_mpss_256 to i8*), section ".discard.addressable", align 8, !dbg !5305
@__UNIQUE_ID___addressable_fixup_mpss_256602 = internal global i8* bitcast (void (%struct.pci_dev*)* @fixup_mpss_256 to i8*), section ".discard.addressable", align 8, !dbg !5307
@__UNIQUE_ID___addressable_quirk_intel_mc_errata603 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5309
@__UNIQUE_ID___addressable_quirk_intel_mc_errata604 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5311
@__UNIQUE_ID___addressable_quirk_intel_mc_errata605 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5313
@__UNIQUE_ID___addressable_quirk_intel_mc_errata606 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5315
@__UNIQUE_ID___addressable_quirk_intel_mc_errata607 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5317
@__UNIQUE_ID___addressable_quirk_intel_mc_errata608 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5319
@__UNIQUE_ID___addressable_quirk_intel_mc_errata609 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5321
@__UNIQUE_ID___addressable_quirk_intel_mc_errata610 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5323
@__UNIQUE_ID___addressable_quirk_intel_mc_errata611 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5325
@__UNIQUE_ID___addressable_quirk_intel_mc_errata612 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5327
@__UNIQUE_ID___addressable_quirk_intel_mc_errata613 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5329
@__UNIQUE_ID___addressable_quirk_intel_mc_errata614 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5331
@__UNIQUE_ID___addressable_quirk_intel_mc_errata615 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5333
@__UNIQUE_ID___addressable_quirk_intel_mc_errata616 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5335
@__UNIQUE_ID___addressable_quirk_intel_mc_errata617 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5337
@__UNIQUE_ID___addressable_quirk_intel_mc_errata618 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5339
@__UNIQUE_ID___addressable_quirk_intel_mc_errata619 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5341
@__UNIQUE_ID___addressable_quirk_intel_mc_errata620 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5343
@__UNIQUE_ID___addressable_quirk_intel_mc_errata621 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5345
@__UNIQUE_ID___addressable_quirk_intel_mc_errata622 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5347
@__UNIQUE_ID___addressable_quirk_intel_mc_errata623 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5349
@__UNIQUE_ID___addressable_quirk_intel_mc_errata624 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5351
@__UNIQUE_ID___addressable_quirk_intel_mc_errata625 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5353
@__UNIQUE_ID___addressable_quirk_intel_mc_errata626 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5355
@__UNIQUE_ID___addressable_quirk_intel_mc_errata627 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_mc_errata to i8*), section ".discard.addressable", align 8, !dbg !5357
@__UNIQUE_ID___addressable_quirk_intel_ntb628 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_ntb to i8*), section ".discard.addressable", align 8, !dbg !5359
@__UNIQUE_ID___addressable_quirk_intel_ntb629 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_ntb to i8*), section ".discard.addressable", align 8, !dbg !5361
@__UNIQUE_ID___addressable_disable_igfx_irq630 = internal global i8* bitcast (void (%struct.pci_dev*)* @disable_igfx_irq to i8*), section ".discard.addressable", align 8, !dbg !5363
@__UNIQUE_ID___addressable_disable_igfx_irq631 = internal global i8* bitcast (void (%struct.pci_dev*)* @disable_igfx_irq to i8*), section ".discard.addressable", align 8, !dbg !5365
@__UNIQUE_ID___addressable_disable_igfx_irq632 = internal global i8* bitcast (void (%struct.pci_dev*)* @disable_igfx_irq to i8*), section ".discard.addressable", align 8, !dbg !5367
@__UNIQUE_ID___addressable_disable_igfx_irq633 = internal global i8* bitcast (void (%struct.pci_dev*)* @disable_igfx_irq to i8*), section ".discard.addressable", align 8, !dbg !5369
@__UNIQUE_ID___addressable_disable_igfx_irq634 = internal global i8* bitcast (void (%struct.pci_dev*)* @disable_igfx_irq to i8*), section ".discard.addressable", align 8, !dbg !5371
@__UNIQUE_ID___addressable_disable_igfx_irq635 = internal global i8* bitcast (void (%struct.pci_dev*)* @disable_igfx_irq to i8*), section ".discard.addressable", align 8, !dbg !5373
@__UNIQUE_ID___addressable_disable_igfx_irq636 = internal global i8* bitcast (void (%struct.pci_dev*)* @disable_igfx_irq to i8*), section ".discard.addressable", align 8, !dbg !5375
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay637 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5377
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay638 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5379
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay639 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5381
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay640 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5383
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay641 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5385
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay642 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5387
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay643 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5389
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay644 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5391
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay645 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5393
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay646 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5395
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay647 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5397
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay648 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5399
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay649 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5401
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay650 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5403
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay651 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5405
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay652 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5407
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay653 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5409
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay654 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5411
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay655 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5413
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay656 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5415
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay657 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5417
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay658 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5419
@__UNIQUE_ID___addressable_quirk_remove_d3hot_delay659 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_remove_d3hot_delay to i8*), section ".discard.addressable", align 8, !dbg !5421
@__UNIQUE_ID___addressable_quirk_broken_intx_masking660 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5423
@__UNIQUE_ID___addressable_quirk_broken_intx_masking661 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5425
@__UNIQUE_ID___addressable_quirk_broken_intx_masking662 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5427
@__UNIQUE_ID___addressable_quirk_broken_intx_masking663 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5429
@__UNIQUE_ID___addressable_quirk_broken_intx_masking664 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5431
@__UNIQUE_ID___addressable_quirk_broken_intx_masking665 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5433
@__UNIQUE_ID___addressable_quirk_broken_intx_masking666 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5435
@__UNIQUE_ID___addressable_quirk_broken_intx_masking667 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5437
@__UNIQUE_ID___addressable_quirk_broken_intx_masking668 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5439
@__UNIQUE_ID___addressable_quirk_broken_intx_masking669 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5441
@__UNIQUE_ID___addressable_quirk_broken_intx_masking670 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5443
@__UNIQUE_ID___addressable_quirk_broken_intx_masking671 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5445
@__UNIQUE_ID___addressable_quirk_broken_intx_masking672 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5447
@__UNIQUE_ID___addressable_quirk_broken_intx_masking673 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5449
@__UNIQUE_ID___addressable_quirk_broken_intx_masking674 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5451
@__UNIQUE_ID___addressable_quirk_broken_intx_masking675 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5453
@__UNIQUE_ID___addressable_quirk_broken_intx_masking676 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5455
@__UNIQUE_ID___addressable_quirk_broken_intx_masking677 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5457
@__UNIQUE_ID___addressable_quirk_broken_intx_masking678 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5459
@__UNIQUE_ID___addressable_quirk_broken_intx_masking679 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5461
@__UNIQUE_ID___addressable_mellanox_check_broken_intx_masking680 = internal global i8* bitcast (void (%struct.pci_dev*)* @mellanox_check_broken_intx_masking to i8*), section ".discard.addressable", align 8, !dbg !5463
@__UNIQUE_ID___addressable_quirk_no_bus_reset681 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_bus_reset to i8*), section ".discard.addressable", align 8, !dbg !5465
@__UNIQUE_ID___addressable_quirk_no_bus_reset682 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_bus_reset to i8*), section ".discard.addressable", align 8, !dbg !5467
@__UNIQUE_ID___addressable_quirk_no_bus_reset683 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_bus_reset to i8*), section ".discard.addressable", align 8, !dbg !5469
@__UNIQUE_ID___addressable_quirk_no_bus_reset684 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_bus_reset to i8*), section ".discard.addressable", align 8, !dbg !5471
@__UNIQUE_ID___addressable_quirk_no_bus_reset685 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_bus_reset to i8*), section ".discard.addressable", align 8, !dbg !5473
@__UNIQUE_ID___addressable_quirk_no_bus_reset686 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_bus_reset to i8*), section ".discard.addressable", align 8, !dbg !5475
@__UNIQUE_ID___addressable_quirk_no_pm_reset687 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_pm_reset to i8*), section ".discard.addressable", align 8, !dbg !5477
@__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi688 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_thunderbolt_hotplug_msi to i8*), section ".discard.addressable", align 8, !dbg !5479
@__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi689 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_thunderbolt_hotplug_msi to i8*), section ".discard.addressable", align 8, !dbg !5481
@__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi690 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_thunderbolt_hotplug_msi to i8*), section ".discard.addressable", align 8, !dbg !5483
@__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi691 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_thunderbolt_hotplug_msi to i8*), section ".discard.addressable", align 8, !dbg !5485
@__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi692 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_thunderbolt_hotplug_msi to i8*), section ".discard.addressable", align 8, !dbg !5487
@__UNIQUE_ID___addressable_quirk_apple_poweroff_thunderbolt694 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_apple_poweroff_thunderbolt to i8*), section ".discard.addressable", align 8, !dbg !5489
@pci_dev_reset_methods = internal constant [7 x %struct.pci_dev_reset_methods] [%struct.pci_dev_reset_methods { i16 -32634, i16 4333, i32 (%struct.pci_dev*, i32)* @reset_intel_82599_sfp_virtfn }, %struct.pci_dev_reset_methods { i16 -32634, i16 342, i32 (%struct.pci_dev*, i32)* @reset_ivb_igd }, %struct.pci_dev_reset_methods { i16 -32634, i16 358, i32 (%struct.pci_dev*, i32)* @reset_ivb_igd }, %struct.pci_dev_reset_methods { i16 5197, i16 -22524, i32 (%struct.pci_dev*, i32)* @nvme_disable_and_flr }, %struct.pci_dev_reset_methods { i16 -32634, i16 2387, i32 (%struct.pci_dev*, i32)* @delay_250ms_after_flr }, %struct.pci_dev_reset_methods { i16 5157, i16 -1, i32 (%struct.pci_dev*, i32)* @reset_chelsio_generic_dev }, %struct.pci_dev_reset_methods zeroinitializer], align 16, !dbg !5833
@__UNIQUE_ID___addressable_quirk_dma_func0_alias695 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func0_alias to i8*), section ".discard.addressable", align 8, !dbg !5491
@__UNIQUE_ID___addressable_quirk_dma_func0_alias696 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func0_alias to i8*), section ".discard.addressable", align 8, !dbg !5493
@__UNIQUE_ID___addressable_quirk_dma_func1_alias697 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5495
@__UNIQUE_ID___addressable_quirk_dma_func1_alias698 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5497
@__UNIQUE_ID___addressable_quirk_dma_func1_alias699 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5499
@__UNIQUE_ID___addressable_quirk_dma_func1_alias700 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5501
@__UNIQUE_ID___addressable_quirk_dma_func1_alias701 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5503
@__UNIQUE_ID___addressable_quirk_dma_func1_alias702 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5505
@__UNIQUE_ID___addressable_quirk_dma_func1_alias703 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5507
@__UNIQUE_ID___addressable_quirk_dma_func1_alias704 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5509
@__UNIQUE_ID___addressable_quirk_dma_func1_alias705 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5511
@__UNIQUE_ID___addressable_quirk_dma_func1_alias706 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5513
@__UNIQUE_ID___addressable_quirk_dma_func1_alias707 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5515
@__UNIQUE_ID___addressable_quirk_dma_func1_alias708 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5517
@__UNIQUE_ID___addressable_quirk_dma_func1_alias709 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5519
@__UNIQUE_ID___addressable_quirk_dma_func1_alias710 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5521
@__UNIQUE_ID___addressable_quirk_dma_func1_alias711 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5523
@__UNIQUE_ID___addressable_quirk_dma_func1_alias712 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_dma_func1_alias to i8*), section ".discard.addressable", align 8, !dbg !5525
@__UNIQUE_ID___addressable_quirk_fixed_dma_alias713 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_fixed_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5527
@__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias714 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_use_pcie_bridge_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5529
@__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias715 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_use_pcie_bridge_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5531
@__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias716 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_use_pcie_bridge_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5533
@__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias717 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_use_pcie_bridge_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5535
@__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias718 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_use_pcie_bridge_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5537
@__UNIQUE_ID___addressable_quirk_mic_x200_dma_alias719 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_mic_x200_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5539
@__UNIQUE_ID___addressable_quirk_mic_x200_dma_alias720 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_mic_x200_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5541
@__UNIQUE_ID___addressable_quirk_pex_vca_alias721 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pex_vca_alias to i8*), section ".discard.addressable", align 8, !dbg !5543
@__UNIQUE_ID___addressable_quirk_pex_vca_alias722 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pex_vca_alias to i8*), section ".discard.addressable", align 8, !dbg !5545
@__UNIQUE_ID___addressable_quirk_pex_vca_alias723 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pex_vca_alias to i8*), section ".discard.addressable", align 8, !dbg !5547
@__UNIQUE_ID___addressable_quirk_pex_vca_alias724 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pex_vca_alias to i8*), section ".discard.addressable", align 8, !dbg !5549
@__UNIQUE_ID___addressable_quirk_pex_vca_alias725 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pex_vca_alias to i8*), section ".discard.addressable", align 8, !dbg !5551
@__UNIQUE_ID___addressable_quirk_pex_vca_alias726 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_pex_vca_alias to i8*), section ".discard.addressable", align 8, !dbg !5553
@__UNIQUE_ID___addressable_quirk_bridge_cavm_thrx2_pcie_root727 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_bridge_cavm_thrx2_pcie_root to i8*), section ".discard.addressable", align 8, !dbg !5555
@__UNIQUE_ID___addressable_quirk_bridge_cavm_thrx2_pcie_root728 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_bridge_cavm_thrx2_pcie_root to i8*), section ".discard.addressable", align 8, !dbg !5557
@__UNIQUE_ID___addressable_quirk_tw686x_class729 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_tw686x_class to i8*), section ".discard.addressable", align 8, !dbg !5559
@__UNIQUE_ID___addressable_quirk_tw686x_class730 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_tw686x_class to i8*), section ".discard.addressable", align 8, !dbg !5561
@__UNIQUE_ID___addressable_quirk_tw686x_class731 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_tw686x_class to i8*), section ".discard.addressable", align 8, !dbg !5563
@__UNIQUE_ID___addressable_quirk_tw686x_class732 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_tw686x_class to i8*), section ".discard.addressable", align 8, !dbg !5565
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable733 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5567
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable734 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5569
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable735 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5571
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable736 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5573
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable737 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5575
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable738 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5577
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable739 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5579
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable740 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5581
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable741 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5583
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable742 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5585
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable743 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5587
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable744 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5589
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable745 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5591
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable746 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5593
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable747 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5595
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable748 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5597
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable749 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5599
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable750 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5601
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable751 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5603
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable752 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5605
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable753 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5607
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable754 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5609
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable755 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5611
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable756 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5613
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable757 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5615
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable758 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5617
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable759 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5619
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable760 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5621
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable761 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5623
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable762 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5625
@__UNIQUE_ID___addressable_quirk_relaxedordering_disable763 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_relaxedordering_disable to i8*), section ".discard.addressable", align 8, !dbg !5627
@__UNIQUE_ID___addressable_quirk_chelsio_T5_disable_root_port_attributes764 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_chelsio_T5_disable_root_port_attributes to i8*), section ".discard.addressable", align 8, !dbg !5629
@pci_dev_acs_enabled = internal constant [84 x %struct.pci_dev_acs_enabled] [%struct.pci_dev_acs_enabled { i16 4098, i16 17285, i32 (%struct.pci_dev*, i16)* @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4098, i16 17308, i32 (%struct.pci_dev*, i16)* @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4098, i16 17283, i32 (%struct.pci_dev*, i16)* @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4098, i16 17309, i32 (%struct.pci_dev*, i16)* @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4098, i16 17284, i32 (%struct.pci_dev*, i16)* @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4098, i16 17305, i32 (%struct.pci_dev*, i16)* @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4130, i16 30735, i32 (%struct.pci_dev*, i16)* @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4130, i16 30729, i32 (%struct.pci_dev*, i16)* @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 6436, i16 2307, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 6436, i16 2339, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 6436, i16 2563, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4294, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4315, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4317, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4321, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4337, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4343, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4344, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4345, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4346, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4347, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4348, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5383, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5396, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5404, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5417, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5418, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5453, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5455, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5457, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5464, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5385, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5390, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5391, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5392, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5393, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5398, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5415, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4297, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4326, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4327, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4328, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5386, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5389, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5400, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5414, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4263, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4265, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4310, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5409, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5410, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5411, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5412, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4190, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4191, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4192, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4313, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5559, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5560, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 -1, i32 (%struct.pci_dev*, i16)* @pci_quirk_rciep_acs }, %struct.pci_dev_acs_enabled { i16 6091, i16 1024, i32 (%struct.pci_dev*, i16)* @pci_quirk_qcom_rp_acs }, %struct.pci_dev_acs_enabled { i16 6091, i16 1025, i32 (%struct.pci_dev*, i16)* @pci_quirk_qcom_rp_acs }, %struct.pci_dev_acs_enabled { i16 7615, i16 1025, i32 (%struct.pci_dev*, i16)* @pci_quirk_qcom_rp_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 -1, i32 (%struct.pci_dev*, i16)* @pci_quirk_intel_pch_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 -1, i32 (%struct.pci_dev*, i16)* @pci_quirk_intel_spt_pch_acs }, %struct.pci_dev_acs_enabled { i16 6562, i16 1808, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 4319, i16 1824, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 6013, i16 -1, i32 (%struct.pci_dev*, i16)* @pci_quirk_cavium_acs }, %struct.pci_dev_acs_enabled { i16 4328, i16 -8188, i32 (%struct.pci_dev*, i16)* @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8187, i32 (%struct.pci_dev*, i16)* @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8186, i32 (%struct.pci_dev*, i16)* @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8185, i32 (%struct.pci_dev*, i16)* @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8184, i32 (%struct.pci_dev*, i16)* @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8183, i32 (%struct.pci_dev*, i16)* @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8182, i32 (%struct.pci_dev*, i16)* @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8181, i32 (%struct.pci_dev*, i16)* @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8180, i32 (%struct.pci_dev*, i16)* @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 5348, i16 -10476, i32 (%struct.pci_dev*, i16)* @pci_quirk_brcm_acs }, %struct.pci_dev_acs_enabled { i16 7222, i16 49, i32 (%struct.pci_dev*, i16)* @pci_quirk_al_acs }, %struct.pci_dev_acs_enabled { i16 7447, i16 12344, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 7447, i16 12548, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 7447, i16 -28541, i32 (%struct.pci_dev*, i16)* @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 7447, i16 -1, i32 (%struct.pci_dev*, i16)* @pci_quirk_zhaoxin_pcie_ports_acs }, %struct.pci_dev_acs_enabled zeroinitializer], align 16, !dbg !5847
@pci_dev_acs_ops = internal constant [2 x %struct.pci_dev_acs_ops] [%struct.pci_dev_acs_ops { i16 -32634, i16 -1, i32 (%struct.pci_dev*)* @pci_quirk_enable_intel_pch_acs, i32 (%struct.pci_dev*)* null }, %struct.pci_dev_acs_ops { i16 -32634, i16 -1, i32 (%struct.pci_dev*)* @pci_quirk_enable_intel_spt_pch_acs, i32 (%struct.pci_dev*)* @pci_quirk_disable_intel_spt_pch_acs_redir }], align 16, !dbg !5867
@__UNIQUE_ID___addressable_quirk_intel_qat_vf_cap765 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_intel_qat_vf_cap to i8*), section ".discard.addressable", align 8, !dbg !5631
@__UNIQUE_ID___addressable_quirk_no_flr766 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_flr to i8*), section ".discard.addressable", align 8, !dbg !5633
@__UNIQUE_ID___addressable_quirk_no_flr767 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_flr to i8*), section ".discard.addressable", align 8, !dbg !5635
@__UNIQUE_ID___addressable_quirk_no_flr768 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_flr to i8*), section ".discard.addressable", align 8, !dbg !5637
@__UNIQUE_ID___addressable_quirk_no_flr769 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_flr to i8*), section ".discard.addressable", align 8, !dbg !5639
@__UNIQUE_ID___addressable_quirk_no_flr770 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_flr to i8*), section ".discard.addressable", align 8, !dbg !5641
@__UNIQUE_ID___addressable_quirk_no_ext_tags771 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_ext_tags to i8*), section ".discard.addressable", align 8, !dbg !5643
@__UNIQUE_ID___addressable_quirk_no_ext_tags772 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_ext_tags to i8*), section ".discard.addressable", align 8, !dbg !5645
@__UNIQUE_ID___addressable_quirk_no_ext_tags773 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_ext_tags to i8*), section ".discard.addressable", align 8, !dbg !5647
@__UNIQUE_ID___addressable_quirk_no_ext_tags774 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_ext_tags to i8*), section ".discard.addressable", align 8, !dbg !5649
@__UNIQUE_ID___addressable_quirk_no_ext_tags775 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_ext_tags to i8*), section ".discard.addressable", align 8, !dbg !5651
@__UNIQUE_ID___addressable_quirk_no_ext_tags776 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_ext_tags to i8*), section ".discard.addressable", align 8, !dbg !5653
@__UNIQUE_ID___addressable_quirk_no_ext_tags777 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_no_ext_tags to i8*), section ".discard.addressable", align 8, !dbg !5655
@__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats778 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_harvest_no_ats to i8*), section ".discard.addressable", align 8, !dbg !5657
@__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats779 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_harvest_no_ats to i8*), section ".discard.addressable", align 8, !dbg !5659
@__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats780 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_harvest_no_ats to i8*), section ".discard.addressable", align 8, !dbg !5661
@__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats781 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_amd_harvest_no_ats to i8*), section ".discard.addressable", align 8, !dbg !5663
@__UNIQUE_ID___addressable_quirk_fsl_no_msi782 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_fsl_no_msi to i8*), section ".discard.addressable", align 8, !dbg !5665
@__UNIQUE_ID___addressable_quirk_gpu_hda783 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_gpu_hda to i8*), section ".discard.addressable", align 8, !dbg !5667
@__UNIQUE_ID___addressable_quirk_gpu_hda784 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_gpu_hda to i8*), section ".discard.addressable", align 8, !dbg !5669
@__UNIQUE_ID___addressable_quirk_gpu_hda785 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_gpu_hda to i8*), section ".discard.addressable", align 8, !dbg !5671
@__UNIQUE_ID___addressable_quirk_gpu_usb786 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_gpu_usb to i8*), section ".discard.addressable", align 8, !dbg !5673
@__UNIQUE_ID___addressable_quirk_gpu_usb_typec_ucsi787 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_gpu_usb_typec_ucsi to i8*), section ".discard.addressable", align 8, !dbg !5675
@__UNIQUE_ID___addressable_quirk_nvidia_hda788 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nvidia_hda to i8*), section ".discard.addressable", align 8, !dbg !5677
@__UNIQUE_ID___addressable_quirk_nvidia_hda789 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_nvidia_hda to i8*), section ".discard.addressable", align 8, !dbg !5679
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias790 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5681
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias791 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5683
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias792 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5685
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias793 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5687
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias794 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5689
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias795 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5691
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias796 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5693
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias797 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5695
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias798 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5697
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias799 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5699
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias800 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5701
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias801 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5703
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias802 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5705
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias803 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5707
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias804 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5709
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias805 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5711
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias806 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5713
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias807 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5715
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias808 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5717
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias809 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5719
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias810 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5721
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias811 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5723
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias812 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5725
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias813 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5727
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias814 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5729
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias815 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5731
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias816 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5733
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias817 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5735
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias818 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5737
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias819 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5739
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias820 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5741
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias821 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5743
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias822 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5745
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias823 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5747
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias824 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5749
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias825 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5751
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias826 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5753
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias827 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5755
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias828 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5757
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias829 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5759
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias830 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5761
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias831 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5763
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias832 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5765
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias833 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5767
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias834 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5769
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias835 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5771
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias836 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5773
@__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias837 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_switchtec_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5775
@__UNIQUE_ID___addressable_quirk_plx_ntb_dma_alias838 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_plx_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5777
@__UNIQUE_ID___addressable_quirk_plx_ntb_dma_alias839 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_plx_ntb_dma_alias to i8*), section ".discard.addressable", align 8, !dbg !5779
@__UNIQUE_ID___addressable_quirk_reset_lenovo_thinkpad_p50_nvgpu840 = internal global i8* bitcast (void (%struct.pci_dev*)* @quirk_reset_lenovo_thinkpad_p50_nvgpu to i8*), section ".discard.addressable", align 8, !dbg !5781
@__UNIQUE_ID___addressable_pci_fixup_no_d0_pme841 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_fixup_no_d0_pme to i8*), section ".discard.addressable", align 8, !dbg !5783
@__UNIQUE_ID___addressable_pci_fixup_no_pme842 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_fixup_no_pme to i8*), section ".discard.addressable", align 8, !dbg !5785
@__UNIQUE_ID___addressable_pci_fixup_no_pme843 = internal global i8* bitcast (void (%struct.pci_dev*)* @pci_fixup_no_pme to i8*), section ".discard.addressable", align 8, !dbg !5787
@__UNIQUE_ID___addressable_apex_pci_fixup_class844 = internal global i8* bitcast (void (%struct.pci_dev*)* @apex_pci_fixup_class to i8*), section ".discard.addressable", align 8, !dbg !5789
@initcall_debug = external dso_local global i8, align 1
@.str = private unnamed_addr constant [19 x i8] c"calling  %pS @ %i\0A\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"%pS took %lld usecs\0A\00", align 1
@pci_cache_line_size = external dso_local global i8, align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"\016PCI: CLS %u bytes\0A\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"CLS mismatch (%u != %u), using %u bytes\0A\00", align 1
@pci_dfl_cache_line_size = external dso_local global i8, align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\016PCI: CLS %u bytes, default %u\0A\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"PIIX3: Enabling Passive Release\0A\00", align 1
@isa_dma_bridge_buggy = external dso_local global i32, align 4
@.str.6 = private unnamed_addr constant [37 x i8] c"Activating ISA DMA hang workarounds\0A\00", align 1
@.str.7 = private unnamed_addr constant [47 x i8] c"[Firmware Bug]: TigerPoint LPC.BM_STS cleared\0A\00", align 1
@pci_pci_problems = external dso_local global i32, align 4
@.str.8 = private unnamed_addr constant [36 x i8] c"Disabling direct PCI/PCI transfers\0A\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"Chipset erratum: Disabling direct PCI/AGP transfers\0A\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"Limiting direct PCI/PCI transfers\0A\00", align 1
@.str.11 = private unnamed_addr constant [37 x i8] c"Applying VIA southbridge workaround\0A\00", align 1
@.str.12 = private unnamed_addr constant [35 x i8] c"expanded BAR %d to page size: %pR\0A\00", align 1
@quirk_cs5536_vsa.name = internal global i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i32 0, i32 0), align 8, !dbg !5791
@.str.13 = private unnamed_addr constant [18 x i8] c"CS5536 ISA bridge\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%s bug detected (incorrect header); workaround applied\0A\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"[Firmware Bug]: %s quirk: reg 0x%x: %pR\0A\00", align 1
@.str.16 = private unnamed_addr constant [53 x i8] c"ATI Northbridge, reserving I/O ports 0x3b0 to 0x3bb\0A\00", align 1
@ioport_resource = external dso_local global %struct.resource, align 8
@.str.17 = private unnamed_addr constant [10 x i8] c"RadeonIGP\00", align 1
@.str.18 = private unnamed_addr constant [85 x i8] c"PCI class overridden (%#08x -> %#08x) so dwc3 driver can claim this instead of xhci\0A\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"ali7101 ACPI\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"ali7101 SMB\00", align 1
@.str.21 = private unnamed_addr constant [26 x i8] c"quirk: %pR claimed by %s\0A\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"PIIX4 ACPI\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"PIIX4 SMB\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"PIIX4 devres B\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"PIIX4 devres C\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"PIIX4 devres E\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"PIIX4 devres F\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"PIIX4 devres G\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"PIIX4 devres H\00", align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"PIIX4 devres I\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"PIIX4 devres J\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"%s PIO at %04x-%04x\0A\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"%s MMIO at %04x-%04x\0A\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"ICH4 ACPI/GPIO/TCO\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"ICH4 GPIO\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"LPC Generic IO decode 1\00", align 1
@.str.37 = private unnamed_addr constant [24 x i8] c"LPC Generic IO decode 2\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"ICH6 ACPI/GPIO/TCO\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"ICH6 GPIO\00", align 1
@.str.40 = private unnamed_addr constant [29 x i8] c"ICH7 LPC Generic IO decode 1\00", align 1
@.str.41 = private unnamed_addr constant [29 x i8] c"ICH7 LPC Generic IO decode 2\00", align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"ICH7 LPC Generic IO decode 3\00", align 1
@.str.43 = private unnamed_addr constant [29 x i8] c"ICH7 LPC Generic IO decode 4\00", align 1
@.str.44 = private unnamed_addr constant [28 x i8] c"%s PIO at %04x (mask %04x)\0A\00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c"vt82c586 ACPI\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"vt82c686 HW-mon\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"vt82c686 SMB\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"vt8235 PM\00", align 1
@.str.49 = private unnamed_addr constant [11 x i8] c"vt8235 SMB\00", align 1
@.str.50 = private unnamed_addr constant [80 x i8] c"TI XIO2000a quirk detected; secondary bus fast back-to-back transfers disabled\0A\00", align 1
@nr_ioapics = external dso_local global i32, align 4
@.str.51 = private unnamed_addr constant [35 x i8] c"%sbling VIA external APIC routing\0A\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"Disa\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"Ena\00", align 1
@.str.54 = private unnamed_addr constant [43 x i8] c"Bypassing VIA 8237 APIC De-Assert Message\0A\00", align 1
@.str.55 = private unnamed_addr constant [75 x i8] c"I/O APIC: AMD Erratum #22 may be present. In the event of instability try\0A\00", align 1
@.str.56 = private unnamed_addr constant [44 x i8] c"        : booting with the \22noapic\22 option\0A\00", align 1
@.str.57 = private unnamed_addr constant [48 x i8] c"AMD8131 rev %x detected; disabling PCI-X MMRBC\0A\00", align 1
@via_vlink_dev_lo = internal global i32 -1, align 4, !dbg !5794
@via_vlink_dev_hi = internal global i32 18, align 4, !dbg !5796
@.str.58 = private unnamed_addr constant [36 x i8] c"VIA VLink IRQ fixup, from %d to %d\0A\00", align 1
@.str.59 = private unnamed_addr constant [67 x i8] c"BIOS failed to enable PCI standards compliance; fixing this error\0A\00", align 1
@.str.60 = private unnamed_addr constant [65 x i8] c"Fixup for MediaGX/Geode Slave Disconnect Boundary (0x41=0x%02x)\0A\00", align 1
@.str.61 = private unnamed_addr constant [46 x i8] c"C0 revision 450NX. Disabling PCI restreaming\0A\00", align 1
@.str.62 = private unnamed_addr constant [23 x i8] c"set SATA to AHCI mode\0A\00", align 1
@.str.63 = private unnamed_addr constant [40 x i8] c"IDE mode mismatch; forcing legacy mode\0A\00", align 1
@asus_hides_smbus = internal global i32 0, align 4, !dbg !5798
@.str.64 = private unnamed_addr constant [59 x i8] c"i801 SMBus device continues to play 'hide and seek'! 0x%x\0A\00", align 1
@.str.65 = private unnamed_addr constant [27 x i8] c"Enabled i801 SMBus device\0A\00", align 1
@asus_rcba_base = internal global i8* null, align 8, !dbg !5800
@.str.66 = private unnamed_addr constant [21 x i8] c"drivers/pci/quirks.c\00", align 1
@.str.67 = private unnamed_addr constant [32 x i8] c"Enabled ICH6/i801 SMBus device\0A\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c"Enabling SiS 96x SMBus\0A\00", align 1
@.str.69 = private unnamed_addr constant [66 x i8] c"Onboard AC97/MC97 devices continue to play 'hide and seek'! 0x%x\0A\00", align 1
@.str.70 = private unnamed_addr constant [35 x i8] c"Enabled onboard AC97/MC97 devices\0A\00", align 1
@.str.71 = private unnamed_addr constant [72 x i8] c"async suspend disabled to avoid multi-function power-on ordering issue\0A\00", align 1
@iomem_resource = external dso_local global %struct.resource, align 8
@.str.72 = private unnamed_addr constant [46 x i8] c"PXH quirk detected; SHPC device MSI disabled\0A\00", align 1
@pci_pm_d3hot_delay = external dso_local global i32, align 4
@.str.73 = private unnamed_addr constant [54 x i8] c"extending delay after power-on from D3hot to %d msec\0A\00", align 1
@noioapicquirk = external dso_local global i32, align 4
@noioapicreroute = external dso_local global i32, align 4
@.str.74 = private unnamed_addr constant [38 x i8] c"rerouting interrupts for [%04x:%04x]\0A\00", align 1
@.str.75 = private unnamed_addr constant [29 x i8] c"ASUSTek Computer INC. M2N-LR\00", align 1
@boot_interrupt_dmi_table = internal constant [2 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }] [{ i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @dmi_disable_ioapicreroute, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.75, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"ASUSTek Computer INC.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"M2N-LR\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } zeroinitializer], align 16, !dbg !5802
@.str.77 = private unnamed_addr constant [47 x i8] c"\016%s detected: disable boot interrupt reroute\0A\00", align 1
@.str.78 = private unnamed_addr constant [48 x i8] c"disabled boot interrupts on device [%04x:%04x]\0A\00", align 1
@.str.79 = private unnamed_addr constant [56 x i8] c"boot interrupts on device [%04x:%04x] already disabled\0A\00", align 1
@.str.80 = private unnamed_addr constant [68 x i8] c"Re-allocating PLX PCI 9050 BAR %u to length 256 to avoid bit 7 bug\0A\00", align 1
@.str.81 = private unnamed_addr constant [91 x i8] c"Netmos %04x (%u parallel, %u serial); changing class SERIAL to OTHER (use parport_serial)\0A\00", align 1
@.str.82 = private unnamed_addr constant [26 x i8] c"Can't map e100 registers\0A\00", align 1
@.str.83 = private unnamed_addr constant [50 x i8] c"Firmware left e100 interrupts enabled; disabling\0A\00", align 1
@.str.84 = private unnamed_addr constant [15 x i8] c"Disabling L0s\0A\00", align 1
@.str.85 = private unnamed_addr constant [23 x i8] c"Disabling ASPM L0s/L1\0A\00", align 1
@.str.86 = private unnamed_addr constant [32 x i8] c"Enable PCIe Retrain Link quirk\0A\00", align 1
@.str.87 = private unnamed_addr constant [56 x i8] c"NCR 53c810 rev 1 PCI class overridden (%#08x -> %#08x)\0A\00", align 1
@.str.88 = private unnamed_addr constant [37 x i8] c"Enable I/O Space to 1KB granularity\0A\00", align 1
@.str.89 = private unnamed_addr constant [33 x i8] c"Linking AER extended capability\0A\00", align 1
@.str.90 = private unnamed_addr constant [33 x i8] c"Disabling VIA CX700 PCI parking\0A\00", align 1
@.str.91 = private unnamed_addr constant [33 x i8] c"Disabling VIA CX700 PCI caching\0A\00", align 1
@.str.92 = private unnamed_addr constant [32 x i8] c"Enabling MCH 'Overflow' Device\0A\00", align 1
@.str.93 = private unnamed_addr constant [34 x i8] c"MSI quirk detected; MSI disabled\0A\00", align 1
@.str.94 = private unnamed_addr constant [46 x i8] c"MSI quirk detected; subordinate MSI disabled\0A\00", align 1
@.str.95 = private unnamed_addr constant [25 x i8] c"Found %s HT MSI Mapping\0A\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"enabled\00", align 1
@.str.97 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.98 = private unnamed_addr constant [25 x i8] c"Enabling HT MSI Mapping\0A\00", align 1
@.str.99 = private unnamed_addr constant [18 x i8] c"P5N32-SLI PREMIUM\00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"P5N32-E SLI\00", align 1
@.str.101 = private unnamed_addr constant [42 x i8] c"Disabling MSI for MCP55 NIC on P5N32-SLI\0A\00", align 1
@.str.102 = private unnamed_addr constant [43 x i8] c"\016Rewriting IRQ routing register on MCP55\0A\00", align 1
@.str.103 = private unnamed_addr constant [47 x i8] c"nv_msi_ht_cap_quirk didn't locate host bridge\0A\00", align 1
@.str.104 = private unnamed_addr constant [26 x i8] c"Disabling HT MSI Mapping\0A\00", align 1
@.str.105 = private unnamed_addr constant [31 x i8] c"set MSI_INTX_DISABLE_BUG flag\0A\00", align 1
@.str.106 = private unnamed_addr constant [21 x i8] c"Disabling MSI/MSI-X\0A\00", align 1
@.str.107 = private unnamed_addr constant [39 x i8] c"PCI class overridden (%#08x -> %#08x)\0A\00", align 1
@pcie_bus_config = external dso_local global i32, align 4
@.str.108 = private unnamed_addr constant [66 x i8] c"Error attempting to read the read completion coalescing register\0A\00", align 1
@.str.109 = private unnamed_addr constant [67 x i8] c"Error attempting to write the read completion coalescing register\0A\00", align 1
@quirk_intel_mc_errata.__print_once = internal global i8 0, section ".data.once", align 1, !dbg !5825
@.str.110 = private unnamed_addr constant [84 x i8] c"\016Read completion coalescing disabled due to hardware erratum relating to 256B MPS\0A\00", align 1
@.str.111 = private unnamed_addr constant [36 x i8] c"igfx quirk: Can't iomap PCI device\0A\00", align 1
@.str.112 = private unnamed_addr constant [51 x i8] c"BIOS left Intel GPU interrupts enabled; disabling\0A\00", align 1
@mellanox_broken_intx_devs = internal global [14 x i16] [i16 25408, i16 25418, i16 25428, i16 26418, i16 26428, i16 25448, i16 26448, i16 25458, i16 26458, i16 26468, i16 26438, i16 26478, i16 4099, i16 4103], align 16, !dbg !5828
@.str.113 = private unnamed_addr constant [28 x i8] c"Can't enable device memory\0A\00", align 1
@.str.114 = private unnamed_addr constant [45 x i8] c"Can't map ConnectX-4 initialization segment\0A\00", align 1
@.str.115 = private unnamed_addr constant [122 x i8] c"ConnectX-4: FW %u.%u.%u doesn't support INTx masking, disabling. Please upgrade FW to %d.14.1100 and up for INTx support\0A\00", align 1
@x86_apple_machine = external dso_local global i8, align 1
@.str.116 = private unnamed_addr constant [15 x i8] c"DSB0.NHI0.SXIO\00", align 1
@.str.117 = private unnamed_addr constant [15 x i8] c"DSB0.NHI0.SXFP\00", align 1
@.str.118 = private unnamed_addr constant [15 x i8] c"DSB0.NHI0.SXLV\00", align 1
@.str.119 = private unnamed_addr constant [51 x i8] c"quirk: cutting power to Thunderbolt controller...\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.120 = private unnamed_addr constant [22 x i8] c"timeout during reset\0A\00", align 1
@.str.121 = private unnamed_addr constant [62 x i8] c"Timeout waiting for NVMe ready status to clear after disable\0A\00", align 1
@fixed_dma_alias_tbl = internal constant [3 x %struct.pci_device_id] [%struct.pci_device_id { i32 36869, i32 645, i32 36869, i32 699, i32 0, i32 0, i64 8 }, %struct.pci_device_id { i32 36869, i32 645, i32 36869, i32 700, i32 0, i32 0, i64 8 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !5844
@.str.122 = private unnamed_addr constant [46 x i8] c"TW686x PCI class overridden (%#08x -> %#08x)\0A\00", align 1
@.str.123 = private unnamed_addr constant [70 x i8] c"Disable Relaxed Ordering Attributes to avoid PCIe Completion erratum\0A\00", align 1
@.str.124 = private unnamed_addr constant [49 x i8] c"PCIe Completion erratum may cause device errors\0A\00", align 1
@.str.125 = private unnamed_addr constant [87 x i8] c"Disabling No Snoop/Relaxed Ordering Attributes to avoid PCIe Completion erratum in %s\0A\00", align 1
@.str.126 = private unnamed_addr constant [5 x i8] c"IVRS\00", align 1
@pci_quirk_intel_pch_acs_ids = internal constant [119 x i16] [i16 15170, i16 15171, i16 15172, i16 15173, i16 15174, i16 15175, i16 15176, i16 15177, i16 15178, i16 15179, i16 15180, i16 15181, i16 15182, i16 15183, i16 15184, i16 15185, i16 7184, i16 7185, i16 7186, i16 7187, i16 7188, i16 7189, i16 7190, i16 7191, i16 7192, i16 7193, i16 7194, i16 7195, i16 7196, i16 7197, i16 7198, i16 7199, i16 7696, i16 7697, i16 7698, i16 7699, i16 7700, i16 7701, i16 7702, i16 7703, i16 7704, i16 7705, i16 7706, i16 7707, i16 7708, i16 7709, i16 7710, i16 7711, i16 -29680, i16 -29679, i16 -29678, i16 -29677, i16 -29676, i16 -29675, i16 -29674, i16 -29673, i16 -29672, i16 -29671, i16 -29670, i16 -29669, i16 -29668, i16 -29667, i16 -29666, i16 -29665, i16 -25584, i16 -25583, i16 -25582, i16 -25581, i16 -25580, i16 -25579, i16 -25578, i16 -25577, i16 -25576, i16 -25575, i16 -25574, i16 -25573, i16 -25456, i16 -25455, i16 -25454, i16 -25453, i16 -25452, i16 -25451, i16 -25450, i16 -25449, i16 -25448, i16 -25447, i16 -25446, i16 -25445, i16 7440, i16 7442, i16 7444, i16 7446, i16 7448, i16 7450, i16 7452, i16 7454, i16 -29424, i16 -29423, i16 -29422, i16 -29421, i16 -29420, i16 -29419, i16 -29418, i16 -29417, i16 -29416, i16 -29415, i16 -29414, i16 -29413, i16 -29412, i16 -29411, i16 -29410, i16 -29552, i16 -29550, i16 -29548, i16 -29546, i16 -29544, i16 -29542, i16 -29540, i16 -29538], align 16, !dbg !5861
@.str.127 = private unnamed_addr constant [38 x i8] c"Failed to enable Intel PCH ACS quirk\0A\00", align 1
@.str.128 = private unnamed_addr constant [44 x i8] c"Intel PCH root port ACS workaround enabled\0A\00", align 1
@.str.129 = private unnamed_addr constant [30 x i8] c"Disabling UPDCR peer decodes\0A\00", align 1
@.str.130 = private unnamed_addr constant [21 x i8] c"Enabling MPC IRBNCE\0A\00", align 1
@.str.131 = private unnamed_addr constant [48 x i8] c"Intel SPT PCH root port ACS workaround enabled\0A\00", align 1
@.str.132 = private unnamed_addr constant [59 x i8] c"Intel SPT PCH root port workaround: disabled ACS redirect\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.133 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.134 = private unnamed_addr constant [57 x i8] c"disabling Extended Tags (this device can't handle them)\0A\00", align 1
@.str.135 = private unnamed_addr constant [15 x i8] c"disabling ATS\0A\00", align 1
@.str.136 = private unnamed_addr constant [30 x i8] c"D0 power state depends on %s\0A\00", align 1
@.str.137 = private unnamed_addr constant [39 x i8] c"Cannot enforce power dependency on %s\0A\00", align 1
@.str.138 = private unnamed_addr constant [25 x i8] c"Enabling HDA controller\0A\00", align 1
@.str.139 = private unnamed_addr constant [32 x i8] c"Cannot enable Switchtec device\0A\00", align 1
@.str.140 = private unnamed_addr constant [31 x i8] c"Cannot iomap Switchtec device\0A\00", align 1
@.str.141 = private unnamed_addr constant [36 x i8] c"Setting Switchtec proxy ID aliases\0A\00", align 1
@.str.142 = private unnamed_addr constant [25 x i8] c"Partition %d table_sz 0\0A\00", align 1
@.str.143 = private unnamed_addr constant [44 x i8] c"Invalid Switchtec partition %d table_sz %d\0A\00", align 1
@.str.144 = private unnamed_addr constant [34 x i8] c"Setting PLX NTB proxy ID aliases\0A\00", align 1
@.str.145 = private unnamed_addr constant [22 x i8] c"Can't map MMIO space\0A\00", align 1
@.str.146 = private unnamed_addr constant [56 x i8] c"[Firmware Bug]: GPU left initialized by EFI, resetting\0A\00", align 1
@.str.147 = private unnamed_addr constant [25 x i8] c"Failed to reset GPU: %d\0A\00", align 1
@.str.148 = private unnamed_addr constant [43 x i8] c"PME# does not work under D0, disabling it\0A\00", align 1
@.str.149 = private unnamed_addr constant [34 x i8] c"PME# is unreliable, disabling it\0A\00", align 1
@llvm.used = appending global [601 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_apply_final_quirks240 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_mmio_always_on241 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_mellanox_tavor242 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_mellanox_tavor243 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_passive_release244 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_passive_release245 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_isa_dma_hangs246 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_isa_dma_hangs247 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_isa_dma_hangs248 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_isa_dma_hangs249 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_isa_dma_hangs250 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_isa_dma_hangs251 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_isa_dma_hangs252 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_tigerpoint_bm_sts253 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nopcipci254 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nopcipci255 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nopciamd256 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_triton257 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_triton258 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_triton259 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_triton260 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_vialatency261 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_vialatency262 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_vialatency263 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_vialatency264 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_vialatency265 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_vialatency266 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_viaetbf267 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_vsfx268 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_alimagik269 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_alimagik270 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_natoma271 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_natoma272 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_natoma273 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_natoma274 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_natoma275 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_natoma276 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_citrine277 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nfp6000278 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nfp6000279 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nfp6000280 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nfp6000281 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_extend_bar_to_page282 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_s3_64M283 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_s3_64M284 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_cs5536_vsa285 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ati_exploding_mce286 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_nl_class287 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_synopsys_haps288 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ali7101_acpi289 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_piix4_acpi290 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_piix4_acpi291 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi292 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi293 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi294 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi295 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi296 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi297 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi298 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi299 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi300 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi301 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich6_lpc302 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich6_lpc303 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc304 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc305 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc306 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc307 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc308 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc309 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc310 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc311 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc312 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc313 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc314 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc315 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ich7_lpc316 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_vt82c586_acpi317 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_vt82c686_acpi318 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_vt8235_acpi319 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_xio2000a322 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_ioapic323 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_ioapic324 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_vt8237_bypass_apic_deassert325 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_vt8237_bypass_apic_deassert326 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_ioapic327 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_8131_mmrbc328 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_acpi329 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_acpi330 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_bridge331 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_bridge332 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_bridge333 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_bridge334 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_bridge335 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_bridge336 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_bridge337 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_bridge338 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_vlink339 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_vt82c598_id340 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_cardbus_legacy341 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_cardbus_legacy342 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_ordering343 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_ordering344 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dunord345 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_transparent_bridge346 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_transparent_bridge347 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_mediagx_master348 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_mediagx_master349 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_pxb350 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_pxb351 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_ide_mode352 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_ide_mode353 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_ide_mode354 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_ide_mode355 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_ide_mode356 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_ide_mode357 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_ide_mode358 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_ide_mode359 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_svwks_csb5ide360 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ide_samemode361 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_ata_d3362 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_ata_d3363 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_ata_d3364 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_ata_d3365 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_eisa_bridge366 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge367 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge368 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge369 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge370 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge371 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge372 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge373 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge374 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge375 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge376 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge377 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge378 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge379 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc380 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc381 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc382 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc383 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc384 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc385 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc386 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc387 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc388 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc389 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc390 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc391 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc392 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc393 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6395 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6_suspend396 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6_resume397 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6_resume_early398 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_sis_96x_smbus399 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_sis_96x_smbus400 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_sis_96x_smbus401 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_sis_96x_smbus402 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_sis_96x_smbus403 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_sis_96x_smbus404 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_sis_96x_smbus405 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_sis_96x_smbus406 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_sis_503407 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_sis_503408 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_ac97_lpc409 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_asus_hides_ac97_lpc410 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata411 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata412 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata413 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata414 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata415 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata416 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata417 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata418 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata419 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata420 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata421 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata422 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata423 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata424 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata425 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata426 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata427 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_ata428 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_async_suspend429 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_async_suspend430 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_async_suspend431 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_jmicron_async_suspend432 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_alder_ioapic433 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pcie_mch434 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pcie_mch435 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pcie_mch436 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pcie_mch437 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pcie_pxh438 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pcie_pxh439 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pcie_pxh440 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pcie_pxh441 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pcie_pxh442 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm443 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm444 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm445 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm446 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm447 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm448 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm449 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm450 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm451 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm452 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm453 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm454 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm455 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm456 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm457 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm458 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm459 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm460 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm461 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm462 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_pcie_pm463 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_radeon_pm464 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ryzen_xhci_d3hot465 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_ryzen_xhci_d3hot466 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel467 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel468 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel469 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel470 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel471 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel472 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel473 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel474 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel475 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel476 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel477 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel478 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel479 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel480 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel481 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel482 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt483 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt484 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt485 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt486 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt487 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt488 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt489 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt490 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt491 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt492 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt493 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt494 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_broadcom_boot_interrupt495 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_broadcom_boot_interrupt496 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt497 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt498 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt499 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt500 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_amd_8111_boot_interrupt501 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_amd_8111_boot_interrupt502 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_tc86c001_ide503 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_plx_pci9050504 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_plx_pci9050505 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_plx_pci9050506 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_netmos507 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_e100_interrupt508 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s509 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s510 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s511 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s512 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s513 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s514 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s515 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s516 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s517 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s518 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s519 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s520 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s521 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s522 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_aspm_l0s_l1523 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_enable_clear_retrain_link524 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_enable_clear_retrain_link525 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_enable_clear_retrain_link526 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_fixup_rev1_53c810527 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_p64h2_1k_io528 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nvidia_ck804_pcie_aer_ext_cap529 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nvidia_ck804_pcie_aer_ext_cap530 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_via_cx700_pci_parking_caching531 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_brcm_5719_limit_mrrs532 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_unhide_mch_dev6533 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_unhide_mch_dev6534 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_all_msi535 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_all_msi536 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_all_msi537 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_all_msi538 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_all_msi539 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_all_msi540 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_all_msi541 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_all_msi542 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_msi543 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_msi544 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_disable_msi545 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_780_apc_msi546 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_780_apc_msi547 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_ht_cap548 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nvidia_ck804_msi_ht_cap549 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_ht_enable_msi_mapping550 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_ht_enable_msi_mapping551 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_nvenet_msi_disable552 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi553 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi554 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi555 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi556 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi557 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi558 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi559 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi560 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi561 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi562 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi563 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi564 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi565 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_nvbridge_check_legacy_irq_routing566 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_nvbridge_check_legacy_irq_routing567 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_all568 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_all569 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_leaf570 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_leaf571 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug572 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug573 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug574 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug575 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug576 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug577 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug578 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug579 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug580 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug581 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug582 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug583 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug584 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug585 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug586 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug587 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug588 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug589 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug590 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug591 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug592 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug593 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug594 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug595 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug596 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_al_msi_disable597 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_hotplug_bridge598 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_fixup_ti816x_class599 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_fixup_mpss_256600 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_fixup_mpss_256601 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_fixup_mpss_256602 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata603 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata604 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata605 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata606 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata607 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata608 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata609 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata610 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata611 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata612 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata613 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata614 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata615 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata616 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata617 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata618 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata619 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata620 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata621 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata622 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata623 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata624 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata625 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata626 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_mc_errata627 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_ntb628 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_ntb629 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_disable_igfx_irq630 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_disable_igfx_irq631 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_disable_igfx_irq632 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_disable_igfx_irq633 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_disable_igfx_irq634 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_disable_igfx_irq635 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_disable_igfx_irq636 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay637 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay638 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay639 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay640 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay641 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay642 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay643 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay644 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay645 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay646 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay647 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay648 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay649 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay650 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay651 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay652 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay653 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay654 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay655 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay656 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay657 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay658 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_remove_d3hot_delay659 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking660 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking661 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking662 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking663 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking664 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking665 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking666 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking667 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking668 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking669 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking670 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking671 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking672 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking673 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking674 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking675 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking676 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking677 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking678 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_broken_intx_masking679 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_mellanox_check_broken_intx_masking680 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_bus_reset681 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_bus_reset682 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_bus_reset683 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_bus_reset684 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_bus_reset685 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_bus_reset686 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_pm_reset687 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi688 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi689 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi690 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi691 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi692 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_apple_poweroff_thunderbolt694 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func0_alias695 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func0_alias696 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias697 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias698 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias699 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias700 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias701 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias702 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias703 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias704 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias705 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias706 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias707 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias708 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias709 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias710 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias711 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_dma_func1_alias712 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_fixed_dma_alias713 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias714 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias715 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias716 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias717 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias718 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_mic_x200_dma_alias719 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_mic_x200_dma_alias720 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pex_vca_alias721 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pex_vca_alias722 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pex_vca_alias723 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pex_vca_alias724 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pex_vca_alias725 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_pex_vca_alias726 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_bridge_cavm_thrx2_pcie_root727 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_bridge_cavm_thrx2_pcie_root728 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_tw686x_class729 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_tw686x_class730 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_tw686x_class731 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_tw686x_class732 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable733 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable734 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable735 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable736 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable737 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable738 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable739 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable740 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable741 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable742 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable743 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable744 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable745 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable746 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable747 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable748 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable749 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable750 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable751 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable752 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable753 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable754 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable755 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable756 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable757 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable758 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable759 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable760 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable761 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable762 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_relaxedordering_disable763 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_chelsio_T5_disable_root_port_attributes764 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_intel_qat_vf_cap765 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_flr766 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_flr767 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_flr768 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_flr769 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_flr770 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_ext_tags771 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_ext_tags772 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_ext_tags773 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_ext_tags774 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_ext_tags775 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_ext_tags776 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_no_ext_tags777 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats778 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats779 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats780 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats781 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_fsl_no_msi782 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_gpu_hda783 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_gpu_hda784 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_gpu_hda785 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_gpu_usb786 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_gpu_usb_typec_ucsi787 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nvidia_hda788 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_nvidia_hda789 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias790 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias791 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias792 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias793 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias794 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias795 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias796 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias797 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias798 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias799 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias800 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias801 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias802 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias803 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias804 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias805 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias806 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias807 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias808 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias809 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias810 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias811 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias812 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias813 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias814 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias815 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias816 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias817 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias818 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias819 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias820 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias821 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias822 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias823 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias824 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias825 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias826 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias827 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias828 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias829 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias830 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias831 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias832 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias833 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias834 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias835 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias836 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias837 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_plx_ntb_dma_alias838 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_plx_ntb_dma_alias839 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_quirk_reset_lenovo_thinkpad_p50_nvgpu840 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_fixup_no_d0_pme841 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_fixup_no_pme842 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_fixup_no_pme843 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_apex_pci_fixup_class844 to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_fixup_device(i32 %pass, %struct.pci_dev* %dev) #0 !dbg !5882 {
entry:
  %pass.addr = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %start = alloca %struct.pci_fixup*, align 8
  %end = alloca %struct.pci_fixup*, align 8
  store i32 %pass, i32* %pass.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pass.addr, metadata !5885, metadata !DIExpression()), !dbg !5886
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.declare(metadata %struct.pci_fixup** %start, metadata !5889, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.declare(metadata %struct.pci_fixup** %end, metadata !5899, metadata !DIExpression()), !dbg !5900
  %0 = load i32, i32* %pass.addr, align 4, !dbg !5901
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 6, label %sw.bb5
    i32 5, label %sw.bb6
    i32 7, label %sw.bb7
  ], !dbg !5902

sw.bb:                                            ; preds = %entry
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__start_pci_fixups_early, i64 0, i64 0), %struct.pci_fixup** %start, align 8, !dbg !5903
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__end_pci_fixups_early, i64 0, i64 0), %struct.pci_fixup** %end, align 8, !dbg !5905
  br label %sw.epilog, !dbg !5906

sw.bb1:                                           ; preds = %entry
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__start_pci_fixups_header, i64 0, i64 0), %struct.pci_fixup** %start, align 8, !dbg !5907
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__end_pci_fixups_header, i64 0, i64 0), %struct.pci_fixup** %end, align 8, !dbg !5908
  br label %sw.epilog, !dbg !5909

sw.bb2:                                           ; preds = %entry
  %1 = load i8, i8* @pci_apply_fixup_final_quirks, align 1, !dbg !5910
  %tobool = trunc i8 %1 to i1, !dbg !5910
  br i1 %tobool, label %if.end, label %if.then, !dbg !5912

if.then:                                          ; preds = %sw.bb2
  br label %return, !dbg !5913

if.end:                                           ; preds = %sw.bb2
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__start_pci_fixups_final, i64 0, i64 0), %struct.pci_fixup** %start, align 8, !dbg !5914
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__end_pci_fixups_final, i64 0, i64 0), %struct.pci_fixup** %end, align 8, !dbg !5915
  br label %sw.epilog, !dbg !5916

sw.bb3:                                           ; preds = %entry
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__start_pci_fixups_enable, i64 0, i64 0), %struct.pci_fixup** %start, align 8, !dbg !5917
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__end_pci_fixups_enable, i64 0, i64 0), %struct.pci_fixup** %end, align 8, !dbg !5918
  br label %sw.epilog, !dbg !5919

sw.bb4:                                           ; preds = %entry
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__start_pci_fixups_resume, i64 0, i64 0), %struct.pci_fixup** %start, align 8, !dbg !5920
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__end_pci_fixups_resume, i64 0, i64 0), %struct.pci_fixup** %end, align 8, !dbg !5921
  br label %sw.epilog, !dbg !5922

sw.bb5:                                           ; preds = %entry
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__start_pci_fixups_resume_early, i64 0, i64 0), %struct.pci_fixup** %start, align 8, !dbg !5923
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__end_pci_fixups_resume_early, i64 0, i64 0), %struct.pci_fixup** %end, align 8, !dbg !5924
  br label %sw.epilog, !dbg !5925

sw.bb6:                                           ; preds = %entry
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__start_pci_fixups_suspend, i64 0, i64 0), %struct.pci_fixup** %start, align 8, !dbg !5926
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__end_pci_fixups_suspend, i64 0, i64 0), %struct.pci_fixup** %end, align 8, !dbg !5927
  br label %sw.epilog, !dbg !5928

sw.bb7:                                           ; preds = %entry
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__start_pci_fixups_suspend_late, i64 0, i64 0), %struct.pci_fixup** %start, align 8, !dbg !5929
  store %struct.pci_fixup* getelementptr inbounds ([0 x %struct.pci_fixup], [0 x %struct.pci_fixup]* @__end_pci_fixups_suspend_late, i64 0, i64 0), %struct.pci_fixup** %end, align 8, !dbg !5930
  br label %sw.epilog, !dbg !5931

sw.default:                                       ; preds = %entry
  br label %return, !dbg !5932

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %if.end, %sw.bb1, %sw.bb
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5933
  %3 = load %struct.pci_fixup*, %struct.pci_fixup** %start, align 8, !dbg !5934
  %4 = load %struct.pci_fixup*, %struct.pci_fixup** %end, align 8, !dbg !5935
  call void @pci_do_fixups(%struct.pci_dev* %2, %struct.pci_fixup* %3, %struct.pci_fixup* %4) #9, !dbg !5936
  br label %return, !dbg !5937

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  ret void, !dbg !5937
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_do_fixups(%struct.pci_dev* %dev, %struct.pci_fixup* %f, %struct.pci_fixup* %end) #0 !dbg !5938 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %f.addr = alloca %struct.pci_fixup*, align 8
  %end.addr = alloca %struct.pci_fixup*, align 8
  %calltime = alloca i64, align 8
  %hook = alloca void (%struct.pci_dev*)*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5941, metadata !DIExpression()), !dbg !5942
  store %struct.pci_fixup* %f, %struct.pci_fixup** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_fixup** %f.addr, metadata !5943, metadata !DIExpression()), !dbg !5944
  store %struct.pci_fixup* %end, %struct.pci_fixup** %end.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_fixup** %end.addr, metadata !5945, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.declare(metadata i64* %calltime, metadata !5947, metadata !DIExpression()), !dbg !5948
  br label %for.cond, !dbg !5949

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.pci_fixup*, %struct.pci_fixup** %f.addr, align 8, !dbg !5950
  %1 = load %struct.pci_fixup*, %struct.pci_fixup** %end.addr, align 8, !dbg !5953
  %cmp = icmp ult %struct.pci_fixup* %0, %1, !dbg !5954
  br i1 %cmp, label %for.body, label %for.end, !dbg !5955

for.body:                                         ; preds = %for.cond
  %2 = load %struct.pci_fixup*, %struct.pci_fixup** %f.addr, align 8, !dbg !5956
  %class = getelementptr inbounds %struct.pci_fixup, %struct.pci_fixup* %2, i32 0, i32 2, !dbg !5958
  %3 = load i32, i32* %class, align 4, !dbg !5958
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5959
  %class1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 11, !dbg !5960
  %5 = load i32, i32* %class1, align 4, !dbg !5960
  %6 = load %struct.pci_fixup*, %struct.pci_fixup** %f.addr, align 8, !dbg !5961
  %class_shift = getelementptr inbounds %struct.pci_fixup, %struct.pci_fixup* %6, i32 0, i32 3, !dbg !5962
  %7 = load i32, i32* %class_shift, align 4, !dbg !5962
  %shr = lshr i32 %5, %7, !dbg !5963
  %cmp2 = icmp eq i32 %3, %shr, !dbg !5964
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false, !dbg !5965

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.pci_fixup*, %struct.pci_fixup** %f.addr, align 8, !dbg !5966
  %class3 = getelementptr inbounds %struct.pci_fixup, %struct.pci_fixup* %8, i32 0, i32 2, !dbg !5967
  %9 = load i32, i32* %class3, align 4, !dbg !5967
  %cmp4 = icmp eq i32 %9, -1, !dbg !5968
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !5969

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %10 = load %struct.pci_fixup*, %struct.pci_fixup** %f.addr, align 8, !dbg !5970
  %vendor = getelementptr inbounds %struct.pci_fixup, %struct.pci_fixup* %10, i32 0, i32 0, !dbg !5971
  %11 = load i16, i16* %vendor, align 4, !dbg !5971
  %conv = zext i16 %11 to i32, !dbg !5970
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5972
  %vendor5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 7, !dbg !5973
  %13 = load i16, i16* %vendor5, align 4, !dbg !5973
  %conv6 = zext i16 %13 to i32, !dbg !5972
  %cmp7 = icmp eq i32 %conv, %conv6, !dbg !5974
  br i1 %cmp7, label %land.lhs.true14, label %lor.lhs.false9, !dbg !5975

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %14 = load %struct.pci_fixup*, %struct.pci_fixup** %f.addr, align 8, !dbg !5976
  %vendor10 = getelementptr inbounds %struct.pci_fixup, %struct.pci_fixup* %14, i32 0, i32 0, !dbg !5977
  %15 = load i16, i16* %vendor10, align 4, !dbg !5977
  %conv11 = zext i16 %15 to i32, !dbg !5976
  %cmp12 = icmp eq i32 %conv11, 65535, !dbg !5978
  br i1 %cmp12, label %land.lhs.true14, label %if.end, !dbg !5979

land.lhs.true14:                                  ; preds = %lor.lhs.false9, %land.lhs.true
  %16 = load %struct.pci_fixup*, %struct.pci_fixup** %f.addr, align 8, !dbg !5980
  %device = getelementptr inbounds %struct.pci_fixup, %struct.pci_fixup* %16, i32 0, i32 1, !dbg !5981
  %17 = load i16, i16* %device, align 2, !dbg !5981
  %conv15 = zext i16 %17 to i32, !dbg !5980
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5982
  %device16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 8, !dbg !5983
  %19 = load i16, i16* %device16, align 2, !dbg !5983
  %conv17 = zext i16 %19 to i32, !dbg !5982
  %cmp18 = icmp eq i32 %conv15, %conv17, !dbg !5984
  br i1 %cmp18, label %if.then, label %lor.lhs.false20, !dbg !5985

lor.lhs.false20:                                  ; preds = %land.lhs.true14
  %20 = load %struct.pci_fixup*, %struct.pci_fixup** %f.addr, align 8, !dbg !5986
  %device21 = getelementptr inbounds %struct.pci_fixup, %struct.pci_fixup* %20, i32 0, i32 1, !dbg !5987
  %21 = load i16, i16* %device21, align 2, !dbg !5987
  %conv22 = zext i16 %21 to i32, !dbg !5986
  %cmp23 = icmp eq i32 %conv22, 65535, !dbg !5988
  br i1 %cmp23, label %if.then, label %if.end, !dbg !5989

if.then:                                          ; preds = %lor.lhs.false20, %land.lhs.true14
  call void @llvm.dbg.declare(metadata void (%struct.pci_dev*)** %hook, metadata !5990, metadata !DIExpression()), !dbg !5992
  %22 = load %struct.pci_fixup*, %struct.pci_fixup** %f.addr, align 8, !dbg !5993
  %hook_offset = getelementptr inbounds %struct.pci_fixup, %struct.pci_fixup* %22, i32 0, i32 4, !dbg !5994
  %call = call i8* @offset_to_ptr(i32* %hook_offset) #9, !dbg !5995
  %23 = bitcast i8* %call to void (%struct.pci_dev*)*, !dbg !5995
  store void (%struct.pci_dev*)* %23, void (%struct.pci_dev*)** %hook, align 8, !dbg !5996
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5997
  %25 = load void (%struct.pci_dev*)*, void (%struct.pci_dev*)** %hook, align 8, !dbg !5998
  %call25 = call i64 @fixup_debug_start(%struct.pci_dev* %24, void (%struct.pci_dev*)* %25) #9, !dbg !5999
  store i64 %call25, i64* %calltime, align 8, !dbg !6000
  %26 = load void (%struct.pci_dev*)*, void (%struct.pci_dev*)** %hook, align 8, !dbg !6001
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6002
  call void %26(%struct.pci_dev* %27) #9, !dbg !6001
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6003
  %29 = load i64, i64* %calltime, align 8, !dbg !6004
  %30 = load void (%struct.pci_dev*)*, void (%struct.pci_dev*)** %hook, align 8, !dbg !6005
  call void @fixup_debug_report(%struct.pci_dev* %28, i64 %29, void (%struct.pci_dev*)* %30) #9, !dbg !6006
  br label %if.end, !dbg !6007

if.end:                                           ; preds = %if.then, %lor.lhs.false20, %lor.lhs.false9, %lor.lhs.false
  br label %for.inc, !dbg !6008

for.inc:                                          ; preds = %if.end
  %31 = load %struct.pci_fixup*, %struct.pci_fixup** %f.addr, align 8, !dbg !6009
  %incdec.ptr = getelementptr %struct.pci_fixup, %struct.pci_fixup* %31, i32 1, !dbg !6009
  store %struct.pci_fixup* %incdec.ptr, %struct.pci_fixup** %f.addr, align 8, !dbg !6009
  br label %for.cond, !dbg !6010, !llvm.loop !6011

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6013
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_apply_final_quirks() #2 section ".init.text" !dbg !6014 {
entry:
  %dev = alloca %struct.pci_dev*, align 8
  %cls = alloca i8, align 1
  %tmp = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !6017, metadata !DIExpression()), !dbg !6018
  store %struct.pci_dev* null, %struct.pci_dev** %dev, align 8, !dbg !6018
  call void @llvm.dbg.declare(metadata i8* %cls, metadata !6019, metadata !DIExpression()), !dbg !6020
  store i8 0, i8* %cls, align 1, !dbg !6020
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !6021, metadata !DIExpression()), !dbg !6022
  %0 = load i8, i8* @pci_cache_line_size, align 1, !dbg !6023
  %tobool = icmp ne i8 %0, 0, !dbg !6023
  br i1 %tobool, label %if.then, label %if.end, !dbg !6025

if.then:                                          ; preds = %entry
  %1 = load i8, i8* @pci_cache_line_size, align 1, !dbg !6026
  %conv = zext i8 %1 to i32, !dbg !6026
  %shl = shl i32 %conv, 2, !dbg !6026
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i32 %shl) #10, !dbg !6026
  br label %if.end, !dbg !6026

if.end:                                           ; preds = %if.then, %entry
  store i8 1, i8* @pci_apply_fixup_final_quirks, align 1, !dbg !6027
  br label %while.cond, !dbg !6028

while.cond:                                       ; preds = %if.end23, %if.then14, %if.end
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6028
  %call1 = call %struct.pci_dev* @pci_get_device(i32 -1, i32 -1, %struct.pci_dev* %2) #9, !dbg !6028
  store %struct.pci_dev* %call1, %struct.pci_dev** %dev, align 8, !dbg !6028
  %cmp = icmp ne %struct.pci_dev* %call1, null, !dbg !6028
  br i1 %cmp, label %while.body, label %while.end, !dbg !6028

while.body:                                       ; preds = %while.cond
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6029
  call void @pci_fixup_device(i32 2, %struct.pci_dev* %3) #9, !dbg !6031
  %4 = load i8, i8* @pci_cache_line_size, align 1, !dbg !6032
  %tobool3 = icmp ne i8 %4, 0, !dbg !6032
  br i1 %tobool3, label %if.end23, label %if.then4, !dbg !6034

if.then4:                                         ; preds = %while.body
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6035
  %call5 = call i32 @pci_read_config_byte(%struct.pci_dev* %5, i32 12, i8* %tmp) #9, !dbg !6037
  %6 = load i8, i8* %cls, align 1, !dbg !6038
  %tobool6 = icmp ne i8 %6, 0, !dbg !6038
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !6040

if.then7:                                         ; preds = %if.then4
  %7 = load i8, i8* %tmp, align 1, !dbg !6041
  store i8 %7, i8* %cls, align 1, !dbg !6042
  br label %if.end8, !dbg !6043

if.end8:                                          ; preds = %if.then7, %if.then4
  %8 = load i8, i8* %tmp, align 1, !dbg !6044
  %tobool9 = icmp ne i8 %8, 0, !dbg !6044
  br i1 %tobool9, label %lor.lhs.false, label %if.then14, !dbg !6046

lor.lhs.false:                                    ; preds = %if.end8
  %9 = load i8, i8* %cls, align 1, !dbg !6047
  %conv10 = zext i8 %9 to i32, !dbg !6047
  %10 = load i8, i8* %tmp, align 1, !dbg !6048
  %conv11 = zext i8 %10 to i32, !dbg !6048
  %cmp12 = icmp eq i32 %conv10, %conv11, !dbg !6049
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !6050

if.then14:                                        ; preds = %lor.lhs.false, %if.end8
  br label %while.cond, !dbg !6051, !llvm.loop !6052

if.end15:                                         ; preds = %lor.lhs.false
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6054
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !6054
  %12 = load i8, i8* %cls, align 1, !dbg !6054
  %conv17 = zext i8 %12 to i32, !dbg !6054
  %shl18 = shl i32 %conv17, 2, !dbg !6054
  %13 = load i8, i8* %tmp, align 1, !dbg !6054
  %conv19 = zext i8 %13 to i32, !dbg !6054
  %shl20 = shl i32 %conv19, 2, !dbg !6054
  %14 = load i8, i8* @pci_dfl_cache_line_size, align 1, !dbg !6054
  %conv21 = zext i8 %14 to i32, !dbg !6054
  %shl22 = shl i32 %conv21, 2, !dbg !6054
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0), i32 %shl18, i32 %shl20, i32 %shl22) #10, !dbg !6054
  %15 = load i8, i8* @pci_dfl_cache_line_size, align 1, !dbg !6055
  store i8 %15, i8* @pci_cache_line_size, align 1, !dbg !6056
  br label %if.end23, !dbg !6057

if.end23:                                         ; preds = %if.end15, %while.body
  br label %while.cond, !dbg !6028, !llvm.loop !6052

while.end:                                        ; preds = %while.cond
  %16 = load i8, i8* @pci_cache_line_size, align 1, !dbg !6058
  %tobool24 = icmp ne i8 %16, 0, !dbg !6058
  br i1 %tobool24, label %if.end36, label %if.then25, !dbg !6060

if.then25:                                        ; preds = %while.end
  %17 = load i8, i8* %cls, align 1, !dbg !6061
  %conv26 = zext i8 %17 to i32, !dbg !6061
  %shl27 = shl i32 %conv26, 2, !dbg !6061
  %18 = load i8, i8* @pci_dfl_cache_line_size, align 1, !dbg !6061
  %conv28 = zext i8 %18 to i32, !dbg !6061
  %shl29 = shl i32 %conv28, 2, !dbg !6061
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 %shl27, i32 %shl29) #10, !dbg !6061
  %19 = load i8, i8* %cls, align 1, !dbg !6063
  %conv31 = zext i8 %19 to i32, !dbg !6063
  %tobool32 = icmp ne i32 %conv31, 0, !dbg !6063
  br i1 %tobool32, label %cond.true, label %cond.false, !dbg !6063

cond.true:                                        ; preds = %if.then25
  %20 = load i8, i8* %cls, align 1, !dbg !6064
  %conv33 = zext i8 %20 to i32, !dbg !6064
  br label %cond.end, !dbg !6063

cond.false:                                       ; preds = %if.then25
  %21 = load i8, i8* @pci_dfl_cache_line_size, align 1, !dbg !6065
  %conv34 = zext i8 %21 to i32, !dbg !6065
  br label %cond.end, !dbg !6063

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv33, %cond.true ], [ %conv34, %cond.false ], !dbg !6063
  %conv35 = trunc i32 %cond to i8, !dbg !6063
  store i8 %conv35, i8* @pci_cache_line_size, align 1, !dbg !6066
  br label %if.end36, !dbg !6067

if.end36:                                         ; preds = %cond.end, %while.end
  ret i32 0, !dbg !6068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_mmio_always_on(%struct.pci_dev* %dev) #0 !dbg !6069 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6070, metadata !DIExpression()), !dbg !6071
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6072
  %mmio_always_on = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 29, !dbg !6073
  %1 = bitcast i24* %mmio_always_on to i32*, !dbg !6073
  %bf.load = load i32, i32* %1, align 2, !dbg !6074
  %bf.clear = and i32 %bf.load, -4097, !dbg !6074
  %bf.set = or i32 %bf.clear, 4096, !dbg !6074
  store i32 %bf.set, i32* %1, align 2, !dbg !6074
  ret void, !dbg !6075
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_mellanox_tavor(%struct.pci_dev* %dev) #0 !dbg !6076 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6077, metadata !DIExpression()), !dbg !6078
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6079
  %broken_parity_status = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6080
  %1 = bitcast [5 x i8]* %broken_parity_status to i40*, !dbg !6080
  %bf.load = load i40, i40* %1, align 1, !dbg !6081
  %bf.clear = and i40 %bf.load, -513, !dbg !6081
  %bf.set = or i40 %bf.clear, 512, !dbg !6081
  store i40 %bf.set, i40* %1, align 1, !dbg !6081
  ret void, !dbg !6082
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_passive_release(%struct.pci_dev* %dev) #0 !dbg !6083 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %d = alloca %struct.pci_dev*, align 8
  %dlc = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6084, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %d, metadata !6086, metadata !DIExpression()), !dbg !6087
  store %struct.pci_dev* null, %struct.pci_dev** %d, align 8, !dbg !6087
  call void @llvm.dbg.declare(metadata i8* %dlc, metadata !6088, metadata !DIExpression()), !dbg !6089
  br label %while.cond, !dbg !6090

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.pci_dev*, %struct.pci_dev** %d, align 8, !dbg !6091
  %call = call %struct.pci_dev* @pci_get_device(i32 32902, i32 28672, %struct.pci_dev* %0) #9, !dbg !6092
  store %struct.pci_dev* %call, %struct.pci_dev** %d, align 8, !dbg !6093
  %tobool = icmp ne %struct.pci_dev* %call, null, !dbg !6090
  br i1 %tobool, label %while.body, label %while.end, !dbg !6090

while.body:                                       ; preds = %while.cond
  %1 = load %struct.pci_dev*, %struct.pci_dev** %d, align 8, !dbg !6094
  %call1 = call i32 @pci_read_config_byte(%struct.pci_dev* %1, i32 130, i8* %dlc) #9, !dbg !6096
  %2 = load i8, i8* %dlc, align 1, !dbg !6097
  %conv = zext i8 %2 to i32, !dbg !6097
  %and = and i32 %conv, 2, !dbg !6099
  %tobool2 = icmp ne i32 %and, 0, !dbg !6099
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6100

if.then:                                          ; preds = %while.body
  %3 = load %struct.pci_dev*, %struct.pci_dev** %d, align 8, !dbg !6101
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !6101
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !6101
  %4 = load i8, i8* %dlc, align 1, !dbg !6103
  %conv4 = zext i8 %4 to i32, !dbg !6103
  %or = or i32 %conv4, 2, !dbg !6103
  %conv5 = trunc i32 %or to i8, !dbg !6103
  store i8 %conv5, i8* %dlc, align 1, !dbg !6103
  %5 = load %struct.pci_dev*, %struct.pci_dev** %d, align 8, !dbg !6104
  %6 = load i8, i8* %dlc, align 1, !dbg !6105
  %call6 = call i32 @pci_write_config_byte(%struct.pci_dev* %5, i32 130, i8 zeroext %6) #9, !dbg !6106
  br label %if.end, !dbg !6107

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !6090, !llvm.loop !6108

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_isa_dma_hangs(%struct.pci_dev* %dev) #0 !dbg !6111 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6112, metadata !DIExpression()), !dbg !6113
  %0 = load i32, i32* @isa_dma_bridge_buggy, align 4, !dbg !6114
  %tobool = icmp ne i32 %0, 0, !dbg !6114
  br i1 %tobool, label %if.end, label %if.then, !dbg !6116

if.then:                                          ; preds = %entry
  store i32 1, i32* @isa_dma_bridge_buggy, align 4, !dbg !6117
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6119
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !6119
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !6119
  br label %if.end, !dbg !6120

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6121
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_tigerpoint_bm_sts(%struct.pci_dev* %dev) #0 !dbg !6122 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pmbase = alloca i32, align 4
  %pm1a = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6123, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.declare(metadata i32* %pmbase, metadata !6125, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.declare(metadata i16* %pm1a, metadata !6127, metadata !DIExpression()), !dbg !6128
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6129
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 64, i32* %pmbase) #9, !dbg !6130
  %1 = load i32, i32* %pmbase, align 4, !dbg !6131
  %and = and i32 %1, 65408, !dbg !6132
  store i32 %and, i32* %pmbase, align 4, !dbg !6133
  %2 = load i32, i32* %pmbase, align 4, !dbg !6134
  %call1 = call zeroext i16 @inw(i32 %2) #9, !dbg !6135
  store i16 %call1, i16* %pm1a, align 2, !dbg !6136
  %3 = load i16, i16* %pm1a, align 2, !dbg !6137
  %conv = zext i16 %3 to i32, !dbg !6137
  %and2 = and i32 %conv, 16, !dbg !6139
  %tobool = icmp ne i32 %and2, 0, !dbg !6139
  br i1 %tobool, label %if.then, label %if.end, !dbg !6140

if.then:                                          ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6141
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !6141
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev3, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !6141
  %5 = load i32, i32* %pmbase, align 4, !dbg !6143
  call void @outw(i16 zeroext 16, i32 %5) #9, !dbg !6144
  br label %if.end, !dbg !6145

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6146
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_nopcipci(%struct.pci_dev* %dev) #0 !dbg !6147 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6148, metadata !DIExpression()), !dbg !6149
  %0 = load i32, i32* @pci_pci_problems, align 4, !dbg !6150
  %and = and i32 %0, 1, !dbg !6152
  %cmp = icmp eq i32 %and, 0, !dbg !6153
  br i1 %cmp, label %if.then, label %if.end, !dbg !6154

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6155
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !6155
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !6155
  %2 = load i32, i32* @pci_pci_problems, align 4, !dbg !6157
  %or = or i32 %2, 1, !dbg !6157
  store i32 %or, i32* @pci_pci_problems, align 4, !dbg !6157
  br label %if.end, !dbg !6158

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_nopciamd(%struct.pci_dev* %dev) #0 !dbg !6160 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rev = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6161, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.declare(metadata i8* %rev, metadata !6163, metadata !DIExpression()), !dbg !6164
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6165
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 8, i8* %rev) #9, !dbg !6166
  %1 = load i8, i8* %rev, align 1, !dbg !6167
  %conv = zext i8 %1 to i32, !dbg !6167
  %cmp = icmp eq i32 %conv, 19, !dbg !6169
  br i1 %cmp, label %if.then, label %if.end, !dbg !6170

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6171
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !6171
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !6171
  %3 = load i32, i32* @pci_pci_problems, align 4, !dbg !6173
  %or = or i32 %3, 64, !dbg !6173
  store i32 %or, i32* @pci_pci_problems, align 4, !dbg !6173
  br label %if.end, !dbg !6174

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_triton(%struct.pci_dev* %dev) #0 !dbg !6176 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6177, metadata !DIExpression()), !dbg !6178
  %0 = load i32, i32* @pci_pci_problems, align 4, !dbg !6179
  %and = and i32 %0, 2, !dbg !6181
  %cmp = icmp eq i32 %and, 0, !dbg !6182
  br i1 %cmp, label %if.then, label %if.end, !dbg !6183

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6184
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !6184
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !6184
  %2 = load i32, i32* @pci_pci_problems, align 4, !dbg !6186
  %or = or i32 %2, 2, !dbg !6186
  store i32 %or, i32* @pci_pci_problems, align 4, !dbg !6186
  br label %if.end, !dbg !6187

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_vialatency(%struct.pci_dev* %dev) #0 !dbg !6189 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %p = alloca %struct.pci_dev*, align 8
  %busarb = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6190, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %p, metadata !6192, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.declare(metadata i8* %busarb, metadata !6194, metadata !DIExpression()), !dbg !6195
  %call = call %struct.pci_dev* @pci_get_device(i32 4358, i32 1670, %struct.pci_dev* null) #9, !dbg !6196
  store %struct.pci_dev* %call, %struct.pci_dev** %p, align 8, !dbg !6197
  %0 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !6198
  %cmp = icmp ne %struct.pci_dev* %0, null, !dbg !6200
  br i1 %cmp, label %if.then, label %if.else, !dbg !6201

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !6202
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 12, !dbg !6205
  %2 = load i8, i8* %revision, align 8, !dbg !6205
  %conv = zext i8 %2 to i32, !dbg !6202
  %cmp1 = icmp slt i32 %conv, 64, !dbg !6206
  br i1 %cmp1, label %if.then7, label %lor.lhs.false, !dbg !6207

lor.lhs.false:                                    ; preds = %if.then
  %3 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !6208
  %revision3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 12, !dbg !6209
  %4 = load i8, i8* %revision3, align 8, !dbg !6209
  %conv4 = zext i8 %4 to i32, !dbg !6208
  %cmp5 = icmp sgt i32 %conv4, 66, !dbg !6210
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !6211

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  br label %exit, !dbg !6212

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end24, !dbg !6213

if.else:                                          ; preds = %entry
  %call8 = call %struct.pci_dev* @pci_get_device(i32 4358, i32 33329, %struct.pci_dev* null) #9, !dbg !6214
  store %struct.pci_dev* %call8, %struct.pci_dev** %p, align 8, !dbg !6216
  %5 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !6217
  %cmp9 = icmp eq %struct.pci_dev* %5, null, !dbg !6219
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !6220

if.then11:                                        ; preds = %if.else
  br label %exit, !dbg !6221

if.end12:                                         ; preds = %if.else
  %6 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !6222
  %revision13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 12, !dbg !6224
  %7 = load i8, i8* %revision13, align 8, !dbg !6224
  %conv14 = zext i8 %7 to i32, !dbg !6222
  %cmp15 = icmp slt i32 %conv14, 16, !dbg !6225
  br i1 %cmp15, label %if.then22, label %lor.lhs.false17, !dbg !6226

lor.lhs.false17:                                  ; preds = %if.end12
  %8 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !6227
  %revision18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 12, !dbg !6228
  %9 = load i8, i8* %revision18, align 8, !dbg !6228
  %conv19 = zext i8 %9 to i32, !dbg !6227
  %cmp20 = icmp sgt i32 %conv19, 18, !dbg !6229
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !6230

if.then22:                                        ; preds = %lor.lhs.false17, %if.end12
  br label %exit, !dbg !6231

if.end23:                                         ; preds = %lor.lhs.false17
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6232
  %call25 = call i32 @pci_read_config_byte(%struct.pci_dev* %10, i32 118, i8* %busarb) #9, !dbg !6233
  %11 = load i8, i8* %busarb, align 1, !dbg !6234
  %conv26 = zext i8 %11 to i32, !dbg !6234
  %and = and i32 %conv26, -33, !dbg !6234
  %conv27 = trunc i32 %and to i8, !dbg !6234
  store i8 %conv27, i8* %busarb, align 1, !dbg !6234
  %12 = load i8, i8* %busarb, align 1, !dbg !6235
  %conv28 = zext i8 %12 to i32, !dbg !6235
  %or = or i32 %conv28, 16, !dbg !6235
  %conv29 = trunc i32 %or to i8, !dbg !6235
  store i8 %conv29, i8* %busarb, align 1, !dbg !6235
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6236
  %14 = load i8, i8* %busarb, align 1, !dbg !6237
  %call30 = call i32 @pci_write_config_byte(%struct.pci_dev* %13, i32 118, i8 zeroext %14) #9, !dbg !6238
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6239
  %dev31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !6239
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev31, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !6239
  br label %exit, !dbg !6239

exit:                                             ; preds = %if.end24, %if.then22, %if.then11, %if.then7
  call void @llvm.dbg.label(metadata !6240), !dbg !6241
  %16 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !6242
  call void @pci_dev_put(%struct.pci_dev* %16) #9, !dbg !6243
  ret void, !dbg !6244
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_viaetbf(%struct.pci_dev* %dev) #0 !dbg !6245 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6246, metadata !DIExpression()), !dbg !6247
  %0 = load i32, i32* @pci_pci_problems, align 4, !dbg !6248
  %and = and i32 %0, 8, !dbg !6250
  %cmp = icmp eq i32 %and, 0, !dbg !6251
  br i1 %cmp, label %if.then, label %if.end, !dbg !6252

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6253
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !6253
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !6253
  %2 = load i32, i32* @pci_pci_problems, align 4, !dbg !6255
  %or = or i32 %2, 8, !dbg !6255
  store i32 %or, i32* @pci_pci_problems, align 4, !dbg !6255
  br label %if.end, !dbg !6256

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_vsfx(%struct.pci_dev* %dev) #0 !dbg !6258 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  %0 = load i32, i32* @pci_pci_problems, align 4, !dbg !6261
  %and = and i32 %0, 16, !dbg !6263
  %cmp = icmp eq i32 %and, 0, !dbg !6264
  br i1 %cmp, label %if.then, label %if.end, !dbg !6265

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6266
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !6266
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !6266
  %2 = load i32, i32* @pci_pci_problems, align 4, !dbg !6268
  %or = or i32 %2, 16, !dbg !6268
  store i32 %or, i32* @pci_pci_problems, align 4, !dbg !6268
  br label %if.end, !dbg !6269

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_alimagik(%struct.pci_dev* %dev) #0 !dbg !6271 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6272, metadata !DIExpression()), !dbg !6273
  %0 = load i32, i32* @pci_pci_problems, align 4, !dbg !6274
  %and = and i32 %0, 32, !dbg !6276
  %cmp = icmp eq i32 %and, 0, !dbg !6277
  br i1 %cmp, label %if.then, label %if.end, !dbg !6278

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6279
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !6279
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !6279
  %2 = load i32, i32* @pci_pci_problems, align 4, !dbg !6281
  %or = or i32 %2, 34, !dbg !6281
  store i32 %or, i32* @pci_pci_problems, align 4, !dbg !6281
  br label %if.end, !dbg !6282

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_natoma(%struct.pci_dev* %dev) #0 !dbg !6284 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  %0 = load i32, i32* @pci_pci_problems, align 4, !dbg !6287
  %and = and i32 %0, 4, !dbg !6289
  %cmp = icmp eq i32 %and, 0, !dbg !6290
  br i1 %cmp, label %if.then, label %if.end, !dbg !6291

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6292
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !6292
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !6292
  %2 = load i32, i32* @pci_pci_problems, align 4, !dbg !6294
  %or = or i32 %2, 4, !dbg !6294
  store i32 %or, i32* @pci_pci_problems, align 4, !dbg !6294
  br label %if.end, !dbg !6295

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6296
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_citrine(%struct.pci_dev* %dev) #0 !dbg !6297 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6298, metadata !DIExpression()), !dbg !6299
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6300
  %cfg_size = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 42, !dbg !6301
  store i32 160, i32* %cfg_size, align 8, !dbg !6302
  ret void, !dbg !6303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_nfp6000(%struct.pci_dev* %dev) #0 !dbg !6304 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6305, metadata !DIExpression()), !dbg !6306
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6307
  %cfg_size = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 42, !dbg !6308
  store i32 1536, i32* %cfg_size, align 8, !dbg !6309
  ret void, !dbg !6310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_extend_bar_to_page(%struct.pci_dev* %dev) #0 !dbg !6311 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %r = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6312, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6314, metadata !DIExpression()), !dbg !6315
  store i32 0, i32* %i, align 4, !dbg !6316
  br label %for.cond, !dbg !6318

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6319
  %cmp = icmp slt i32 %0, 6, !dbg !6321
  br i1 %cmp, label %for.body, label %for.end, !dbg !6322

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !6323, metadata !DIExpression()), !dbg !6325
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6326
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 44, !dbg !6327
  %2 = load i32, i32* %i, align 4, !dbg !6328
  %idxprom = sext i32 %2 to i64, !dbg !6326
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !6326
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !6325
  %3 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6329
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 3, !dbg !6331
  %4 = load i64, i64* %flags, align 8, !dbg !6331
  %and = and i64 %4, 512, !dbg !6332
  %tobool = icmp ne i64 %and, 0, !dbg !6332
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6333

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6334
  %call = call i64 @resource_size(%struct.resource* %5) #9, !dbg !6335
  %cmp1 = icmp ult i64 %call, 4096, !dbg !6336
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6337

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6338
  %end = getelementptr inbounds %struct.resource, %struct.resource* %6, i32 0, i32 1, !dbg !6340
  store i64 4095, i64* %end, align 8, !dbg !6341
  %7 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6342
  %start = getelementptr inbounds %struct.resource, %struct.resource* %7, i32 0, i32 0, !dbg !6343
  store i64 0, i64* %start, align 8, !dbg !6344
  %8 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6345
  %flags2 = getelementptr inbounds %struct.resource, %struct.resource* %8, i32 0, i32 3, !dbg !6346
  %9 = load i64, i64* %flags2, align 8, !dbg !6347
  %or = or i64 %9, 536870912, !dbg !6347
  store i64 %or, i64* %flags2, align 8, !dbg !6347
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6348
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !6348
  %11 = load i32, i32* %i, align 4, !dbg !6348
  %12 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6348
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0), i32 %11, %struct.resource* %12) #10, !dbg !6348
  br label %if.end, !dbg !6349

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6350

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !6351
  %inc = add i32 %13, 1, !dbg !6351
  store i32 %inc, i32* %i, align 4, !dbg !6351
  br label %for.cond, !dbg !6352, !llvm.loop !6353

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6355
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_s3_64M(%struct.pci_dev* %dev) #0 !dbg !6356 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %r = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6357, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !6359, metadata !DIExpression()), !dbg !6360
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6361
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !6362
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !6361
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !6360
  %1 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6363
  %start = getelementptr inbounds %struct.resource, %struct.resource* %1, i32 0, i32 0, !dbg !6365
  %2 = load i64, i64* %start, align 8, !dbg !6365
  %and = and i64 %2, 67108863, !dbg !6366
  %tobool = icmp ne i64 %and, 0, !dbg !6366
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6367

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6368
  %end = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 1, !dbg !6369
  %4 = load i64, i64* %end, align 8, !dbg !6369
  %5 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6370
  %start1 = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 0, !dbg !6371
  %6 = load i64, i64* %start1, align 8, !dbg !6371
  %add = add i64 %6, 67108863, !dbg !6372
  %cmp = icmp ne i64 %4, %add, !dbg !6373
  br i1 %cmp, label %if.then, label %if.end, !dbg !6374

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6375
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %7, i32 0, i32 3, !dbg !6377
  %8 = load i64, i64* %flags, align 8, !dbg !6378
  %or = or i64 %8, 536870912, !dbg !6378
  store i64 %or, i64* %flags, align 8, !dbg !6378
  %9 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6379
  %start2 = getelementptr inbounds %struct.resource, %struct.resource* %9, i32 0, i32 0, !dbg !6380
  store i64 0, i64* %start2, align 8, !dbg !6381
  %10 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6382
  %end3 = getelementptr inbounds %struct.resource, %struct.resource* %10, i32 0, i32 1, !dbg !6383
  store i64 67108863, i64* %end3, align 8, !dbg !6384
  br label %if.end, !dbg !6385

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret void, !dbg !6386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_cs5536_vsa(%struct.pci_dev* %dev) #0 !dbg !5793 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6387, metadata !DIExpression()), !dbg !6388
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6389
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !6389
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !6389
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !6389
  %1 = load i64, i64* %start, align 8, !dbg !6389
  %cmp = icmp eq i64 %1, 0, !dbg !6389
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !6389

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6389
  %resource1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 44, !dbg !6389
  %arrayidx2 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource1, i64 0, i64 0, !dbg !6389
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx2, i32 0, i32 1, !dbg !6389
  %3 = load i64, i64* %end, align 8, !dbg !6389
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6389
  %resource3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 44, !dbg !6389
  %arrayidx4 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource3, i64 0, i64 0, !dbg !6389
  %start5 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx4, i32 0, i32 0, !dbg !6389
  %5 = load i64, i64* %start5, align 8, !dbg !6389
  %cmp6 = icmp eq i64 %3, %5, !dbg !6389
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !6389

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !6389

cond.false:                                       ; preds = %land.lhs.true, %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6389
  %resource7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !6389
  %arrayidx8 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource7, i64 0, i64 0, !dbg !6389
  %end9 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx8, i32 0, i32 1, !dbg !6389
  %7 = load i64, i64* %end9, align 8, !dbg !6389
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6389
  %resource10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 44, !dbg !6389
  %arrayidx11 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource10, i64 0, i64 0, !dbg !6389
  %start12 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx11, i32 0, i32 0, !dbg !6389
  %9 = load i64, i64* %start12, align 8, !dbg !6389
  %sub = sub i64 %7, %9, !dbg !6389
  %add = add i64 %sub, 1, !dbg !6389
  br label %cond.end, !dbg !6389

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !6389
  %cmp13 = icmp ne i64 %cond, 8, !dbg !6391
  br i1 %cmp13, label %if.then, label %if.end, !dbg !6392

if.then:                                          ; preds = %cond.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6393
  %11 = load i8*, i8** @quirk_cs5536_vsa.name, align 8, !dbg !6395
  call void @quirk_io(%struct.pci_dev* %10, i32 0, i32 8, i8* %11) #9, !dbg !6396
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6397
  %13 = load i8*, i8** @quirk_cs5536_vsa.name, align 8, !dbg !6398
  call void @quirk_io(%struct.pci_dev* %12, i32 1, i32 256, i8* %13) #9, !dbg !6399
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6400
  %15 = load i8*, i8** @quirk_cs5536_vsa.name, align 8, !dbg !6401
  call void @quirk_io(%struct.pci_dev* %14, i32 2, i32 64, i8* %15) #9, !dbg !6402
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6403
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !6403
  %17 = load i8*, i8** @quirk_cs5536_vsa.name, align 8, !dbg !6403
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev14, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i64 0, i64 0), i8* %17) #10, !dbg !6403
  br label %if.end, !dbg !6404

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !6405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_ati_exploding_mce(%struct.pci_dev* %dev) #0 !dbg !6406 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6407, metadata !DIExpression()), !dbg !6408
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6409
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !6409
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !6409
  %call = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 944, i64 12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i32 0) #9, !dbg !6410
  %call2 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 979, i64 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i32 0) #9, !dbg !6411
  ret void, !dbg !6412
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_amd_nl_class(%struct.pci_dev* %pdev) #0 !dbg !6413 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %class = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6414, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.declare(metadata i32* %class, metadata !6416, metadata !DIExpression()), !dbg !6417
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6418
  %class1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 11, !dbg !6419
  %1 = load i32, i32* %class1, align 4, !dbg !6419
  store i32 %1, i32* %class, align 4, !dbg !6417
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6420
  %class2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 11, !dbg !6421
  store i32 787454, i32* %class2, align 4, !dbg !6422
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6423
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !6423
  %4 = load i32, i32* %class, align 4, !dbg !6423
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6423
  %class3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 11, !dbg !6423
  %6 = load i32, i32* %class3, align 4, !dbg !6423
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.18, i64 0, i64 0), i32 %4, i32 %6) #10, !dbg !6423
  ret void, !dbg !6424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_synopsys_haps(%struct.pci_dev* %pdev) #0 !dbg !6425 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %class = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6426, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.declare(metadata i32* %class, metadata !6428, metadata !DIExpression()), !dbg !6429
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6430
  %class1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 11, !dbg !6431
  %1 = load i32, i32* %class1, align 4, !dbg !6431
  store i32 %1, i32* %class, align 4, !dbg !6429
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6432
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 8, !dbg !6433
  %3 = load i16, i16* %device, align 2, !dbg !6433
  %conv = zext i16 %3 to i32, !dbg !6432
  switch i32 %conv, label %sw.epilog [
    i32 43981, label %sw.bb
    i32 43982, label %sw.bb
    i32 43983, label %sw.bb
  ], !dbg !6434

sw.bb:                                            ; preds = %entry, %entry, %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6435
  %class2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 11, !dbg !6437
  store i32 787454, i32* %class2, align 4, !dbg !6438
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6439
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !6439
  %6 = load i32, i32* %class, align 4, !dbg !6439
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6439
  %class3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 11, !dbg !6439
  %8 = load i32, i32* %class3, align 4, !dbg !6439
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.18, i64 0, i64 0), i32 %6, i32 %8) #10, !dbg !6439
  br label %sw.epilog, !dbg !6440

sw.epilog:                                        ; preds = %entry, %sw.bb
  ret void, !dbg !6441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_ali7101_acpi(%struct.pci_dev* %dev) #0 !dbg !6442 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6443, metadata !DIExpression()), !dbg !6444
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6445
  call void @quirk_io_region(%struct.pci_dev* %0, i32 224, i32 64, i32 13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0)) #9, !dbg !6446
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6447
  call void @quirk_io_region(%struct.pci_dev* %1, i32 226, i32 32, i32 14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0)) #9, !dbg !6448
  ret void, !dbg !6449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_piix4_acpi(%struct.pci_dev* %dev) #0 !dbg !6450 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %res_a = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6451, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.declare(metadata i32* %res_a, metadata !6453, metadata !DIExpression()), !dbg !6454
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6455
  call void @quirk_io_region(%struct.pci_dev* %0, i32 64, i32 64, i32 13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !6456
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6457
  call void @quirk_io_region(%struct.pci_dev* %1, i32 144, i32 16, i32 14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !6458
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6459
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %2, i32 92, i32* %res_a) #9, !dbg !6460
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6461
  call void @piix4_io_quirk(%struct.pci_dev* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0), i32 96, i32 6291456) #9, !dbg !6462
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6463
  call void @piix4_io_quirk(%struct.pci_dev* %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), i32 100, i32 6291456) #9, !dbg !6464
  %5 = load i32, i32* %res_a, align 4, !dbg !6465
  %and = and i32 %5, 536870912, !dbg !6467
  %tobool = icmp ne i32 %and, 0, !dbg !6467
  br i1 %tobool, label %if.then, label %if.end, !dbg !6468

if.then:                                          ; preds = %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6469
  call void @piix4_io_quirk(%struct.pci_dev* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i32 104, i32 1048576) #9, !dbg !6471
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6472
  call void @piix4_mem_quirk(%struct.pci_dev* %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i32 108, i32 128) #9, !dbg !6473
  br label %if.end, !dbg !6474

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %res_a, align 4, !dbg !6475
  %and1 = and i32 %8, 1073741824, !dbg !6477
  %tobool2 = icmp ne i32 %and1, 0, !dbg !6477
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6478

if.then3:                                         ; preds = %if.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6479
  call void @piix4_io_quirk(%struct.pci_dev* %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), i32 112, i32 1048576) #9, !dbg !6481
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6482
  call void @piix4_mem_quirk(%struct.pci_dev* %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0), i32 116, i32 128) #9, !dbg !6483
  br label %if.end4, !dbg !6484

if.end4:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6485
  call void @piix4_io_quirk(%struct.pci_dev* %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i64 0, i64 0), i32 120, i32 1048576) #9, !dbg !6486
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6487
  call void @piix4_io_quirk(%struct.pci_dev* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0), i32 124, i32 1048576) #9, !dbg !6488
  ret void, !dbg !6489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_ich4_lpc_acpi(%struct.pci_dev* %dev) #0 !dbg !6490 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %enable = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6491, metadata !DIExpression()), !dbg !6492
  call void @llvm.dbg.declare(metadata i8* %enable, metadata !6493, metadata !DIExpression()), !dbg !6494
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6495
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 68, i8* %enable) #9, !dbg !6496
  %1 = load i8, i8* %enable, align 1, !dbg !6497
  %conv = zext i8 %1 to i32, !dbg !6497
  %and = and i32 %conv, 16, !dbg !6499
  %tobool = icmp ne i32 %and, 0, !dbg !6499
  br i1 %tobool, label %if.then, label %if.end, !dbg !6500

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6501
  call void @quirk_io_region(%struct.pci_dev* %2, i32 64, i32 128, i32 13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0)) #9, !dbg !6502
  br label %if.end, !dbg !6502

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6503
  %call1 = call i32 @pci_read_config_byte(%struct.pci_dev* %3, i32 92, i8* %enable) #9, !dbg !6504
  %4 = load i8, i8* %enable, align 1, !dbg !6505
  %conv2 = zext i8 %4 to i32, !dbg !6505
  %and3 = and i32 %conv2, 16, !dbg !6507
  %tobool4 = icmp ne i32 %and3, 0, !dbg !6507
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !6508

if.then5:                                         ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6509
  call void @quirk_io_region(%struct.pci_dev* %5, i32 88, i32 64, i32 14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0)) #9, !dbg !6510
  br label %if.end6, !dbg !6510

if.end6:                                          ; preds = %if.then5, %if.end
  ret void, !dbg !6511
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_ich6_lpc(%struct.pci_dev* %dev) #0 !dbg !6512 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6513, metadata !DIExpression()), !dbg !6514
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6515
  call void @ich6_lpc_acpi_gpio(%struct.pci_dev* %0) #9, !dbg !6516
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6517
  call void @ich6_lpc_generic_decode(%struct.pci_dev* %1, i32 132, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i64 0, i64 0), i32 0) #9, !dbg !6518
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6519
  call void @ich6_lpc_generic_decode(%struct.pci_dev* %2, i32 136, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37, i64 0, i64 0), i32 1) #9, !dbg !6520
  ret void, !dbg !6521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_ich7_lpc(%struct.pci_dev* %dev) #0 !dbg !6522 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6523, metadata !DIExpression()), !dbg !6524
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6525
  call void @ich6_lpc_acpi_gpio(%struct.pci_dev* %0) #9, !dbg !6526
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6527
  call void @ich7_lpc_generic_decode(%struct.pci_dev* %1, i32 132, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.40, i64 0, i64 0)) #9, !dbg !6528
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6529
  call void @ich7_lpc_generic_decode(%struct.pci_dev* %2, i32 136, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.41, i64 0, i64 0)) #9, !dbg !6530
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6531
  call void @ich7_lpc_generic_decode(%struct.pci_dev* %3, i32 140, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i64 0, i64 0)) #9, !dbg !6532
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6533
  call void @ich7_lpc_generic_decode(%struct.pci_dev* %4, i32 144, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i64 0, i64 0)) #9, !dbg !6534
  ret void, !dbg !6535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_vt82c586_acpi(%struct.pci_dev* %dev) #0 !dbg !6536 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6537, metadata !DIExpression()), !dbg !6538
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6539
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 12, !dbg !6541
  %1 = load i8, i8* %revision, align 8, !dbg !6541
  %conv = zext i8 %1 to i32, !dbg !6539
  %and = and i32 %conv, 16, !dbg !6542
  %tobool = icmp ne i32 %and, 0, !dbg !6542
  br i1 %tobool, label %if.then, label %if.end, !dbg !6543

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6544
  call void @quirk_io_region(%struct.pci_dev* %2, i32 72, i32 256, i32 13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i64 0, i64 0)) #9, !dbg !6545
  br label %if.end, !dbg !6545

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6546
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_vt82c686_acpi(%struct.pci_dev* %dev) #0 !dbg !6547 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6548, metadata !DIExpression()), !dbg !6549
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6550
  call void @quirk_vt82c586_acpi(%struct.pci_dev* %0) #9, !dbg !6551
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6552
  call void @quirk_io_region(%struct.pci_dev* %1, i32 112, i32 128, i32 14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i64 0, i64 0)) #9, !dbg !6553
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6554
  call void @quirk_io_region(%struct.pci_dev* %2, i32 144, i32 16, i32 15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0)) #9, !dbg !6555
  ret void, !dbg !6556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_vt8235_acpi(%struct.pci_dev* %dev) #0 !dbg !6557 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6558, metadata !DIExpression()), !dbg !6559
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6560
  call void @quirk_io_region(%struct.pci_dev* %0, i32 136, i32 128, i32 13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0)) #9, !dbg !6561
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6562
  call void @quirk_io_region(%struct.pci_dev* %1, i32 208, i32 16, i32 14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i64 0, i64 0)) #9, !dbg !6563
  ret void, !dbg !6564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_xio2000a(%struct.pci_dev* %dev) #0 !dbg !6565 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %command = alloca i16, align 2
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp13 = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6566, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !6568, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.declare(metadata i16* %command, metadata !6570, metadata !DIExpression()), !dbg !6571
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6572
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !6572
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev1, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.50, i64 0, i64 0)) #10, !dbg !6572
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6573, metadata !DIExpression()), !dbg !6576
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6576
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 2, !dbg !6576
  %2 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !6576
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 3, !dbg !6576
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !6576
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6576
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !6576
  store i8* %4, i8** %__mptr, align 8, !dbg !6576
  br label %do.body, !dbg !6576

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6577

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !6576
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !6576
  %6 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6576
  store %struct.pci_dev* %6, %struct.pci_dev** %tmp, align 8, !dbg !6577
  %7 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6576
  store %struct.pci_dev* %7, %struct.pci_dev** %pdev, align 8, !dbg !6579
  br label %for.cond, !dbg !6579

for.cond:                                         ; preds = %do.end12, %do.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6580
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 0, !dbg !6580
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6580
  %subordinate2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 2, !dbg !6580
  %10 = load %struct.pci_bus*, %struct.pci_bus** %subordinate2, align 8, !dbg !6580
  %devices3 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %10, i32 0, i32 3, !dbg !6580
  %cmp = icmp eq %struct.list_head* %bus_list, %devices3, !dbg !6580
  %lnot = xor i1 %cmp, true, !dbg !6580
  br i1 %lnot, label %for.body, label %for.end, !dbg !6579

for.body:                                         ; preds = %for.cond
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6582
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %11, i32 4, i16* %command) #9, !dbg !6584
  %12 = load i16, i16* %command, align 2, !dbg !6585
  %conv = zext i16 %12 to i32, !dbg !6585
  %and = and i32 %conv, 512, !dbg !6587
  %tobool = icmp ne i32 %and, 0, !dbg !6587
  br i1 %tobool, label %if.then, label %if.end, !dbg !6588

if.then:                                          ; preds = %for.body
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6589
  %14 = load i16, i16* %command, align 2, !dbg !6590
  %conv4 = zext i16 %14 to i32, !dbg !6590
  %and5 = and i32 %conv4, -513, !dbg !6591
  %conv6 = trunc i32 %and5 to i16, !dbg !6590
  %call7 = call i32 @pci_write_config_word(%struct.pci_dev* %13, i32 4, i16 zeroext %conv6) #9, !dbg !6592
  br label %if.end, !dbg !6592

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6593

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !6594, metadata !DIExpression()), !dbg !6596
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6596
  %bus_list9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 0, !dbg !6596
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list9, i32 0, i32 0, !dbg !6596
  %16 = load %struct.list_head*, %struct.list_head** %next10, align 8, !dbg !6596
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !6596
  store i8* %17, i8** %__mptr8, align 8, !dbg !6596
  br label %do.body11, !dbg !6596

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !6597

do.end12:                                         ; preds = %do.body11
  %18 = load i8*, i8** %__mptr8, align 8, !dbg !6596
  %add.ptr14 = getelementptr i8, i8* %18, i64 0, !dbg !6596
  %19 = bitcast i8* %add.ptr14 to %struct.pci_dev*, !dbg !6596
  store %struct.pci_dev* %19, %struct.pci_dev** %tmp13, align 8, !dbg !6597
  %20 = load %struct.pci_dev*, %struct.pci_dev** %tmp13, align 8, !dbg !6596
  store %struct.pci_dev* %20, %struct.pci_dev** %pdev, align 8, !dbg !6580
  br label %for.cond, !dbg !6580, !llvm.loop !6599

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_via_ioapic(%struct.pci_dev* %dev) #0 !dbg !6602 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %tmp = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6603, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !6605, metadata !DIExpression()), !dbg !6606
  %0 = load i32, i32* @nr_ioapics, align 4, !dbg !6607
  %cmp = icmp slt i32 %0, 1, !dbg !6609
  br i1 %cmp, label %if.then, label %if.else, !dbg !6610

if.then:                                          ; preds = %entry
  store i8 0, i8* %tmp, align 1, !dbg !6611
  br label %if.end, !dbg !6612

if.else:                                          ; preds = %entry
  store i8 31, i8* %tmp, align 1, !dbg !6613
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6614
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !6614
  %2 = load i8, i8* %tmp, align 1, !dbg !6614
  %conv = zext i8 %2 to i32, !dbg !6614
  %cmp2 = icmp eq i32 %conv, 0, !dbg !6614
  %3 = zext i1 %cmp2 to i64, !dbg !6614
  %cond = select i1 %cmp2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), !dbg !6614
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0), i8* %cond) #10, !dbg !6614
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6615
  %5 = load i8, i8* %tmp, align 1, !dbg !6616
  %call = call i32 @pci_write_config_byte(%struct.pci_dev* %4, i32 88, i8 zeroext %5) #9, !dbg !6617
  ret void, !dbg !6618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_via_vt8237_bypass_apic_deassert(%struct.pci_dev* %dev) #0 !dbg !6619 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %misc_control2 = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6620, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.declare(metadata i8* %misc_control2, metadata !6622, metadata !DIExpression()), !dbg !6623
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6624
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 91, i8* %misc_control2) #9, !dbg !6625
  %1 = load i8, i8* %misc_control2, align 1, !dbg !6626
  %conv = zext i8 %1 to i32, !dbg !6626
  %and = and i32 %conv, 8, !dbg !6628
  %tobool = icmp ne i32 %and, 0, !dbg !6628
  br i1 %tobool, label %if.end, label %if.then, !dbg !6629

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6630
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !6630
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !6630
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6632
  %4 = load i8, i8* %misc_control2, align 1, !dbg !6633
  %conv2 = zext i8 %4 to i32, !dbg !6633
  %or = or i32 %conv2, 8, !dbg !6634
  %conv3 = trunc i32 %or to i8, !dbg !6633
  %call4 = call i32 @pci_write_config_byte(%struct.pci_dev* %3, i32 91, i8 zeroext %conv3) #9, !dbg !6635
  br label %if.end, !dbg !6636

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_amd_ioapic(%struct.pci_dev* %dev) #0 !dbg !6638 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6639, metadata !DIExpression()), !dbg !6640
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6641
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 12, !dbg !6643
  %1 = load i8, i8* %revision, align 8, !dbg !6643
  %conv = zext i8 %1 to i32, !dbg !6641
  %cmp = icmp sge i32 %conv, 2, !dbg !6644
  br i1 %cmp, label %if.then, label %if.end, !dbg !6645

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6646
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !6646
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev2, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !6646
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6648
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !6648
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.56, i64 0, i64 0)) #10, !dbg !6648
  br label %if.end, !dbg !6649

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_amd_8131_mmrbc(%struct.pci_dev* %dev) #0 !dbg !6651 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6652, metadata !DIExpression()), !dbg !6653
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6654
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 2, !dbg !6656
  %1 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !6656
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !6654
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6657

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6658
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 12, !dbg !6659
  %3 = load i8, i8* %revision, align 8, !dbg !6659
  %conv = zext i8 %3 to i32, !dbg !6658
  %cmp = icmp sle i32 %conv, 18, !dbg !6660
  br i1 %cmp, label %if.then, label %if.end, !dbg !6661

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6662
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !6662
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6662
  %revision3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 12, !dbg !6662
  %6 = load i8, i8* %revision3, align 8, !dbg !6662
  %conv4 = zext i8 %6 to i32, !dbg !6662
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.57, i64 0, i64 0), i32 %conv4) #10, !dbg !6662
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6664
  %subordinate5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 2, !dbg !6665
  %8 = load %struct.pci_bus*, %struct.pci_bus** %subordinate5, align 8, !dbg !6665
  %bus_flags = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 19, !dbg !6666
  %9 = load i16, i16* %bus_flags, align 2, !dbg !6667
  %conv6 = zext i16 %9 to i32, !dbg !6667
  %or = or i32 %conv6, 2, !dbg !6667
  %conv7 = trunc i32 %or to i16, !dbg !6667
  store i16 %conv7, i16* %bus_flags, align 2, !dbg !6667
  br label %if.end, !dbg !6668

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !6669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_via_acpi(%struct.pci_dev* %d) #0 !dbg !6670 {
entry:
  %d.addr = alloca %struct.pci_dev*, align 8
  %irq = alloca i8, align 1
  store %struct.pci_dev* %d, %struct.pci_dev** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %d.addr, metadata !6671, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.declare(metadata i8* %irq, metadata !6673, metadata !DIExpression()), !dbg !6674
  %0 = load %struct.pci_dev*, %struct.pci_dev** %d.addr, align 8, !dbg !6675
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 66, i8* %irq) #9, !dbg !6676
  %1 = load i8, i8* %irq, align 1, !dbg !6677
  %conv = zext i8 %1 to i32, !dbg !6677
  %and = and i32 %conv, 15, !dbg !6677
  %conv1 = trunc i32 %and to i8, !dbg !6677
  store i8 %conv1, i8* %irq, align 1, !dbg !6677
  %2 = load i8, i8* %irq, align 1, !dbg !6678
  %conv2 = zext i8 %2 to i32, !dbg !6678
  %tobool = icmp ne i32 %conv2, 0, !dbg !6678
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6680

land.lhs.true:                                    ; preds = %entry
  %3 = load i8, i8* %irq, align 1, !dbg !6681
  %conv3 = zext i8 %3 to i32, !dbg !6681
  %cmp = icmp ne i32 %conv3, 2, !dbg !6682
  br i1 %cmp, label %if.then, label %if.end, !dbg !6683

if.then:                                          ; preds = %land.lhs.true
  %4 = load i8, i8* %irq, align 1, !dbg !6684
  %conv5 = zext i8 %4 to i32, !dbg !6684
  %5 = load %struct.pci_dev*, %struct.pci_dev** %d.addr, align 8, !dbg !6685
  %irq6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 43, !dbg !6686
  store i32 %conv5, i32* %irq6, align 4, !dbg !6687
  br label %if.end, !dbg !6685

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !6688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_via_bridge(%struct.pci_dev* %dev) #0 !dbg !6689 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6690, metadata !DIExpression()), !dbg !6691
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6692
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 8, !dbg !6693
  %1 = load i16, i16* %device, align 2, !dbg !6693
  %conv = zext i16 %1 to i32, !dbg !6692
  switch i32 %conv, label %sw.epilog [
    i32 1670, label %sw.bb
    i32 12839, label %sw.bb4
    i32 13111, label %sw.bb4
    i32 12663, label %sw.bb5
    i32 33329, label %sw.bb6
    i32 12404, label %sw.bb6
    i32 12615, label %sw.bb6
    i32 12553, label %sw.bb6
  ], !dbg !6694

sw.bb:                                            ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6695
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 6, !dbg !6695
  %3 = load i32, i32* %devfn, align 8, !dbg !6695
  %shr = lshr i32 %3, 3, !dbg !6695
  %and = and i32 %shr, 31, !dbg !6695
  store i32 %and, i32* @via_vlink_dev_lo, align 4, !dbg !6697
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6698
  %devfn1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 6, !dbg !6698
  %5 = load i32, i32* %devfn1, align 8, !dbg !6698
  %shr2 = lshr i32 %5, 3, !dbg !6698
  %and3 = and i32 %shr2, 31, !dbg !6698
  store i32 %and3, i32* @via_vlink_dev_hi, align 4, !dbg !6699
  br label %sw.epilog, !dbg !6700

sw.bb4:                                           ; preds = %entry, %entry
  store i32 15, i32* @via_vlink_dev_lo, align 4, !dbg !6701
  br label %sw.epilog, !dbg !6702

sw.bb5:                                           ; preds = %entry
  store i32 16, i32* @via_vlink_dev_lo, align 4, !dbg !6703
  br label %sw.epilog, !dbg !6704

sw.bb6:                                           ; preds = %entry, %entry, %entry, %entry
  store i32 17, i32* @via_vlink_dev_lo, align 4, !dbg !6705
  br label %sw.epilog, !dbg !6706

sw.epilog:                                        ; preds = %entry, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb
  ret void, !dbg !6707
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_via_vlink(%struct.pci_dev* %dev) #0 !dbg !6708 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %irq = alloca i8, align 1
  %new_irq = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6709, metadata !DIExpression()), !dbg !6710
  call void @llvm.dbg.declare(metadata i8* %irq, metadata !6711, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.declare(metadata i8* %new_irq, metadata !6713, metadata !DIExpression()), !dbg !6714
  %0 = load i32, i32* @via_vlink_dev_lo, align 4, !dbg !6715
  %cmp = icmp eq i32 %0, -1, !dbg !6717
  br i1 %cmp, label %if.then, label %if.end, !dbg !6718

if.then:                                          ; preds = %entry
  br label %if.end30, !dbg !6719

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6720
  %irq1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 43, !dbg !6721
  %2 = load i32, i32* %irq1, align 4, !dbg !6721
  %conv = trunc i32 %2 to i8, !dbg !6720
  store i8 %conv, i8* %new_irq, align 1, !dbg !6722
  %3 = load i8, i8* %new_irq, align 1, !dbg !6723
  %tobool = icmp ne i8 %3, 0, !dbg !6723
  br i1 %tobool, label %lor.lhs.false, label %if.then5, !dbg !6725

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i8, i8* %new_irq, align 1, !dbg !6726
  %conv2 = zext i8 %4 to i32, !dbg !6726
  %cmp3 = icmp sgt i32 %conv2, 15, !dbg !6727
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !6728

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  br label %if.end30, !dbg !6729

if.end6:                                          ; preds = %lor.lhs.false
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6730
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 1, !dbg !6732
  %6 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6732
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 13, !dbg !6733
  %7 = load i8, i8* %number, align 8, !dbg !6733
  %conv7 = zext i8 %7 to i32, !dbg !6730
  %cmp8 = icmp ne i32 %conv7, 0, !dbg !6734
  br i1 %cmp8, label %if.then19, label %lor.lhs.false10, !dbg !6735

lor.lhs.false10:                                  ; preds = %if.end6
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6736
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 6, !dbg !6736
  %9 = load i32, i32* %devfn, align 8, !dbg !6736
  %shr = lshr i32 %9, 3, !dbg !6736
  %and = and i32 %shr, 31, !dbg !6736
  %10 = load i32, i32* @via_vlink_dev_hi, align 4, !dbg !6737
  %cmp11 = icmp ugt i32 %and, %10, !dbg !6738
  br i1 %cmp11, label %if.then19, label %lor.lhs.false13, !dbg !6739

lor.lhs.false13:                                  ; preds = %lor.lhs.false10
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6740
  %devfn14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 6, !dbg !6740
  %12 = load i32, i32* %devfn14, align 8, !dbg !6740
  %shr15 = lshr i32 %12, 3, !dbg !6740
  %and16 = and i32 %shr15, 31, !dbg !6740
  %13 = load i32, i32* @via_vlink_dev_lo, align 4, !dbg !6741
  %cmp17 = icmp ult i32 %and16, %13, !dbg !6742
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !6743

if.then19:                                        ; preds = %lor.lhs.false13, %lor.lhs.false10, %if.end6
  br label %if.end30, !dbg !6744

if.end20:                                         ; preds = %lor.lhs.false13
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6745
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %14, i32 60, i8* %irq) #9, !dbg !6746
  %15 = load i8, i8* %new_irq, align 1, !dbg !6747
  %conv21 = zext i8 %15 to i32, !dbg !6747
  %16 = load i8, i8* %irq, align 1, !dbg !6749
  %conv22 = zext i8 %16 to i32, !dbg !6749
  %cmp23 = icmp ne i32 %conv21, %conv22, !dbg !6750
  br i1 %cmp23, label %if.then25, label %if.end30, !dbg !6751

if.then25:                                        ; preds = %if.end20
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6752
  %dev26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !6752
  %18 = load i8, i8* %irq, align 1, !dbg !6752
  %conv27 = zext i8 %18 to i32, !dbg !6752
  %19 = load i8, i8* %new_irq, align 1, !dbg !6752
  %conv28 = zext i8 %19 to i32, !dbg !6752
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev26, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.58, i64 0, i64 0), i32 %conv27, i32 %conv28) #10, !dbg !6752
  call void @__const_udelay(i64 64425) #9, !dbg !6754
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6759
  %21 = load i8, i8* %new_irq, align 1, !dbg !6760
  %call29 = call i32 @pci_write_config_byte(%struct.pci_dev* %20, i32 60, i8 zeroext %21) #9, !dbg !6761
  br label %if.end30, !dbg !6762

if.end30:                                         ; preds = %if.then, %if.then5, %if.then19, %if.then25, %if.end20
  ret void, !dbg !6763
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_vt82c598_id(%struct.pci_dev* %dev) #0 !dbg !6764 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6765, metadata !DIExpression()), !dbg !6766
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6767
  %call = call i32 @pci_write_config_byte(%struct.pci_dev* %0, i32 252, i8 zeroext 0) #9, !dbg !6768
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6769
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6770
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 8, !dbg !6771
  %call1 = call i32 @pci_read_config_word(%struct.pci_dev* %1, i32 2, i16* %device) #9, !dbg !6772
  ret void, !dbg !6773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_cardbus_legacy(%struct.pci_dev* %dev) #0 !dbg !6774 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6775, metadata !DIExpression()), !dbg !6776
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6777
  %call = call i32 @pci_write_config_dword(%struct.pci_dev* %0, i32 68, i32 0) #9, !dbg !6778
  ret void, !dbg !6779
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_amd_ordering(%struct.pci_dev* %dev) #0 !dbg !6780 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pcic = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6781, metadata !DIExpression()), !dbg !6782
  call void @llvm.dbg.declare(metadata i32* %pcic, metadata !6783, metadata !DIExpression()), !dbg !6784
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6785
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 76, i32* %pcic) #9, !dbg !6786
  %1 = load i32, i32* %pcic, align 4, !dbg !6787
  %and = and i32 %1, 6, !dbg !6789
  %cmp = icmp ne i32 %and, 6, !dbg !6790
  br i1 %cmp, label %if.then, label %if.end, !dbg !6791

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %pcic, align 4, !dbg !6792
  %or = or i32 %2, 6, !dbg !6792
  store i32 %or, i32* %pcic, align 4, !dbg !6792
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6794
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !6794
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev1, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.59, i64 0, i64 0)) #10, !dbg !6794
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6795
  %5 = load i32, i32* %pcic, align 4, !dbg !6796
  %call2 = call i32 @pci_write_config_dword(%struct.pci_dev* %4, i32 76, i32 %5) #9, !dbg !6797
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6798
  %call3 = call i32 @pci_read_config_dword(%struct.pci_dev* %6, i32 132, i32* %pcic) #9, !dbg !6799
  %7 = load i32, i32* %pcic, align 4, !dbg !6800
  %or4 = or i32 %7, 8388608, !dbg !6800
  store i32 %or4, i32* %pcic, align 4, !dbg !6800
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6801
  %9 = load i32, i32* %pcic, align 4, !dbg !6802
  %call5 = call i32 @pci_write_config_dword(%struct.pci_dev* %8, i32 132, i32 %9) #9, !dbg !6803
  br label %if.end, !dbg !6804

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_dunord(%struct.pci_dev* %dev) #0 !dbg !6806 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %r = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6807, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !6809, metadata !DIExpression()), !dbg !6810
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6811
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !6812
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 1, !dbg !6811
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !6810
  %1 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6813
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %1, i32 0, i32 3, !dbg !6814
  %2 = load i64, i64* %flags, align 8, !dbg !6815
  %or = or i64 %2, 536870912, !dbg !6815
  store i64 %or, i64* %flags, align 8, !dbg !6815
  %3 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6816
  %start = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 0, !dbg !6817
  store i64 0, i64* %start, align 8, !dbg !6818
  %4 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6819
  %end = getelementptr inbounds %struct.resource, %struct.resource* %4, i32 0, i32 1, !dbg !6820
  store i64 16777215, i64* %end, align 8, !dbg !6821
  ret void, !dbg !6822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_transparent_bridge(%struct.pci_dev* %dev) #0 !dbg !6823 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6824, metadata !DIExpression()), !dbg !6825
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6826
  %transparent = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6827
  %1 = bitcast [5 x i8]* %transparent to i40*, !dbg !6827
  %bf.load = load i40, i40* %1, align 1, !dbg !6828
  %bf.clear = and i40 %bf.load, -2, !dbg !6828
  %bf.set = or i40 %bf.clear, 1, !dbg !6828
  store i40 %bf.set, i40* %1, align 1, !dbg !6828
  ret void, !dbg !6829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_mediagx_master(%struct.pci_dev* %dev) #0 !dbg !6830 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %reg = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6831, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !6833, metadata !DIExpression()), !dbg !6834
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6835
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 65, i8* %reg) #9, !dbg !6836
  %1 = load i8, i8* %reg, align 1, !dbg !6837
  %conv = zext i8 %1 to i32, !dbg !6837
  %and = and i32 %conv, 2, !dbg !6839
  %tobool = icmp ne i32 %and, 0, !dbg !6839
  br i1 %tobool, label %if.then, label %if.end, !dbg !6840

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %reg, align 1, !dbg !6841
  %conv1 = zext i8 %2 to i32, !dbg !6841
  %and2 = and i32 %conv1, -3, !dbg !6841
  %conv3 = trunc i32 %and2 to i8, !dbg !6841
  store i8 %conv3, i8* %reg, align 1, !dbg !6841
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6843
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !6843
  %4 = load i8, i8* %reg, align 1, !dbg !6843
  %conv5 = zext i8 %4 to i32, !dbg !6843
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.60, i64 0, i64 0), i32 %conv5) #10, !dbg !6843
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6844
  %6 = load i8, i8* %reg, align 1, !dbg !6845
  %call6 = call i32 @pci_write_config_byte(%struct.pci_dev* %5, i32 65, i8 zeroext %6) #9, !dbg !6846
  br label %if.end, !dbg !6847

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_disable_pxb(%struct.pci_dev* %pdev) #0 !dbg !6849 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %config = alloca i16, align 2
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6850, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.declare(metadata i16* %config, metadata !6852, metadata !DIExpression()), !dbg !6853
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6854
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 12, !dbg !6856
  %1 = load i8, i8* %revision, align 8, !dbg !6856
  %conv = zext i8 %1 to i32, !dbg !6854
  %cmp = icmp ne i32 %conv, 4, !dbg !6857
  br i1 %cmp, label %if.then, label %if.end, !dbg !6858

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !6859

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6860
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 64, i16* %config) #9, !dbg !6861
  %3 = load i16, i16* %config, align 2, !dbg !6862
  %conv2 = zext i16 %3 to i32, !dbg !6862
  %and = and i32 %conv2, 64, !dbg !6864
  %tobool = icmp ne i32 %and, 0, !dbg !6864
  br i1 %tobool, label %if.then3, label %if.end8, !dbg !6865

if.then3:                                         ; preds = %if.end
  %4 = load i16, i16* %config, align 2, !dbg !6866
  %conv4 = zext i16 %4 to i32, !dbg !6866
  %and5 = and i32 %conv4, -65, !dbg !6866
  %conv6 = trunc i32 %and5 to i16, !dbg !6866
  store i16 %conv6, i16* %config, align 2, !dbg !6866
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6868
  %6 = load i16, i16* %config, align 2, !dbg !6869
  %call7 = call i32 @pci_write_config_word(%struct.pci_dev* %5, i32 64, i16 zeroext %6) #9, !dbg !6870
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6871
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !6871
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !6871
  br label %if.end8, !dbg !6872

if.end8:                                          ; preds = %if.then, %if.then3, %if.end
  ret void, !dbg !6873
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_amd_ide_mode(%struct.pci_dev* %pdev) #0 !dbg !6874 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %tmp = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6875, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !6877, metadata !DIExpression()), !dbg !6878
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6879
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 10, i8* %tmp) #9, !dbg !6880
  %1 = load i8, i8* %tmp, align 1, !dbg !6881
  %conv = zext i8 %1 to i32, !dbg !6881
  %cmp = icmp eq i32 %conv, 1, !dbg !6883
  br i1 %cmp, label %if.then, label %if.end, !dbg !6884

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6885
  %call2 = call i32 @pci_read_config_byte(%struct.pci_dev* %2, i32 64, i8* %tmp) #9, !dbg !6887
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6888
  %4 = load i8, i8* %tmp, align 1, !dbg !6889
  %conv3 = zext i8 %4 to i32, !dbg !6889
  %or = or i32 %conv3, 1, !dbg !6890
  %conv4 = trunc i32 %or to i8, !dbg !6889
  %call5 = call i32 @pci_write_config_byte(%struct.pci_dev* %3, i32 64, i8 zeroext %conv4) #9, !dbg !6891
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6892
  %call6 = call i32 @pci_write_config_byte(%struct.pci_dev* %5, i32 9, i8 zeroext 1) #9, !dbg !6893
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6894
  %call7 = call i32 @pci_write_config_byte(%struct.pci_dev* %6, i32 10, i8 zeroext 6) #9, !dbg !6895
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6896
  %8 = load i8, i8* %tmp, align 1, !dbg !6897
  %call8 = call i32 @pci_write_config_byte(%struct.pci_dev* %7, i32 64, i8 zeroext %8) #9, !dbg !6898
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6899
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 11, !dbg !6900
  store i32 67073, i32* %class, align 4, !dbg !6901
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6902
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !6902
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !6902
  br label %if.end, !dbg !6903

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_svwks_csb5ide(%struct.pci_dev* %pdev) #0 !dbg !6905 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %prog = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6906, metadata !DIExpression()), !dbg !6907
  call void @llvm.dbg.declare(metadata i8* %prog, metadata !6908, metadata !DIExpression()), !dbg !6909
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6910
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 9, i8* %prog) #9, !dbg !6911
  %1 = load i8, i8* %prog, align 1, !dbg !6912
  %conv = zext i8 %1 to i32, !dbg !6912
  %and = and i32 %conv, 5, !dbg !6914
  %tobool = icmp ne i32 %and, 0, !dbg !6914
  br i1 %tobool, label %if.then, label %if.end, !dbg !6915

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %prog, align 1, !dbg !6916
  %conv1 = zext i8 %2 to i32, !dbg !6916
  %and2 = and i32 %conv1, -6, !dbg !6916
  %conv3 = trunc i32 %and2 to i8, !dbg !6916
  store i8 %conv3, i8* %prog, align 1, !dbg !6916
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6918
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 11, !dbg !6919
  %4 = load i32, i32* %class, align 4, !dbg !6920
  %and4 = and i32 %4, -6, !dbg !6920
  store i32 %and4, i32* %class, align 4, !dbg !6920
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6921
  %6 = load i8, i8* %prog, align 1, !dbg !6922
  %call5 = call i32 @pci_write_config_byte(%struct.pci_dev* %5, i32 9, i8 zeroext %6) #9, !dbg !6923
  br label %if.end, !dbg !6924

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6925
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_ide_samemode(%struct.pci_dev* %pdev) #0 !dbg !6926 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %prog = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6927, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.declare(metadata i8* %prog, metadata !6929, metadata !DIExpression()), !dbg !6930
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6931
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 9, i8* %prog) #9, !dbg !6932
  %1 = load i8, i8* %prog, align 1, !dbg !6933
  %conv = zext i8 %1 to i32, !dbg !6933
  %and = and i32 %conv, 1, !dbg !6935
  %tobool = icmp ne i32 %and, 0, !dbg !6935
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !6936

land.lhs.true:                                    ; preds = %entry
  %2 = load i8, i8* %prog, align 1, !dbg !6937
  %conv1 = zext i8 %2 to i32, !dbg !6937
  %and2 = and i32 %conv1, 4, !dbg !6938
  %tobool3 = icmp ne i32 %and2, 0, !dbg !6938
  br i1 %tobool3, label %lor.lhs.false, label %if.then, !dbg !6939

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %3 = load i8, i8* %prog, align 1, !dbg !6940
  %conv4 = zext i8 %3 to i32, !dbg !6940
  %and5 = and i32 %conv4, 4, !dbg !6941
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6941
  br i1 %tobool6, label %land.lhs.true7, label %if.end, !dbg !6942

land.lhs.true7:                                   ; preds = %lor.lhs.false
  %4 = load i8, i8* %prog, align 1, !dbg !6943
  %conv8 = zext i8 %4 to i32, !dbg !6943
  %and9 = and i32 %conv8, 1, !dbg !6944
  %tobool10 = icmp ne i32 %and9, 0, !dbg !6944
  br i1 %tobool10, label %if.end, label %if.then, !dbg !6945

if.then:                                          ; preds = %land.lhs.true7, %land.lhs.true
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6946
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !6946
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !6946
  %6 = load i8, i8* %prog, align 1, !dbg !6948
  %conv11 = zext i8 %6 to i32, !dbg !6948
  %and12 = and i32 %conv11, -6, !dbg !6948
  %conv13 = trunc i32 %and12 to i8, !dbg !6948
  store i8 %conv13, i8* %prog, align 1, !dbg !6948
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6949
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 11, !dbg !6950
  %8 = load i32, i32* %class, align 4, !dbg !6951
  %and14 = and i32 %8, -6, !dbg !6951
  store i32 %and14, i32* %class, align 4, !dbg !6951
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6952
  %10 = load i8, i8* %prog, align 1, !dbg !6953
  %call15 = call i32 @pci_write_config_byte(%struct.pci_dev* %9, i32 9, i8 zeroext %10) #9, !dbg !6954
  br label %if.end, !dbg !6955

if.end:                                           ; preds = %if.then, %land.lhs.true7, %lor.lhs.false
  ret void, !dbg !6956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_no_ata_d3(%struct.pci_dev* %pdev) #0 !dbg !6957 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6958, metadata !DIExpression()), !dbg !6959
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6960
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 47, !dbg !6961
  %1 = load i16, i16* %dev_flags, align 2, !dbg !6962
  %conv = zext i16 %1 to i32, !dbg !6962
  %or = or i32 %conv, 2, !dbg !6962
  %conv1 = trunc i32 %or to i16, !dbg !6962
  store i16 %conv1, i16* %dev_flags, align 2, !dbg !6962
  ret void, !dbg !6963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_eisa_bridge(%struct.pci_dev* %dev) #0 !dbg !6964 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6965, metadata !DIExpression()), !dbg !6966
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6967
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 11, !dbg !6968
  store i32 393728, i32* %class, align 4, !dbg !6969
  ret void, !dbg !6970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asus_hides_smbus_hostbridge(%struct.pci_dev* %dev) #0 !dbg !6971 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6972, metadata !DIExpression()), !dbg !6973
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6974
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 9, !dbg !6974
  %1 = load i16, i16* %subsystem_vendor, align 8, !dbg !6974
  %conv = zext i16 %1 to i32, !dbg !6974
  %cmp = icmp eq i32 %conv, 4163, !dbg !6974
  %lnot = xor i1 %cmp, true, !dbg !6974
  %lnot2 = xor i1 %lnot, true, !dbg !6974
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6974
  %conv3 = sext i32 %lnot.ext to i64, !dbg !6974
  %tobool = icmp ne i64 %conv3, 0, !dbg !6974
  br i1 %tobool, label %if.then, label %if.else96, !dbg !6976

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6977
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 8, !dbg !6980
  %3 = load i16, i16* %device, align 2, !dbg !6980
  %conv4 = zext i16 %3 to i32, !dbg !6977
  %cmp5 = icmp eq i32 %conv4, 6704, !dbg !6981
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !6982

if.then7:                                         ; preds = %if.then
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6983
  %subsystem_device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 10, !dbg !6984
  %5 = load i16, i16* %subsystem_device, align 2, !dbg !6984
  %conv8 = zext i16 %5 to i32, !dbg !6983
  switch i32 %conv8, label %sw.epilog [
    i32 32805, label %sw.bb
    i32 32880, label %sw.bb
    i32 32904, label %sw.bb
    i32 5670, label %sw.bb
  ], !dbg !6985

sw.bb:                                            ; preds = %if.then7, %if.then7, %if.then7, %if.then7
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !6986
  br label %sw.epilog, !dbg !6988

sw.epilog:                                        ; preds = %sw.bb, %if.then7
  br label %if.end95, !dbg !6988

if.else:                                          ; preds = %if.then
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6989
  %device9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 8, !dbg !6991
  %7 = load i16, i16* %device9, align 2, !dbg !6991
  %conv10 = zext i16 %7 to i32, !dbg !6989
  %cmp11 = icmp eq i32 %conv10, 9568, !dbg !6992
  br i1 %cmp11, label %if.then13, label %if.else18, !dbg !6993

if.then13:                                        ; preds = %if.else
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6994
  %subsystem_device14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 10, !dbg !6995
  %9 = load i16, i16* %subsystem_device14, align 2, !dbg !6995
  %conv15 = zext i16 %9 to i32, !dbg !6994
  switch i32 %conv15, label %sw.epilog17 [
    i32 32945, label %sw.bb16
    i32 32946, label %sw.bb16
    i32 32915, label %sw.bb16
  ], !dbg !6996

sw.bb16:                                          ; preds = %if.then13, %if.then13, %if.then13
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !6997
  br label %sw.epilog17, !dbg !6999

sw.epilog17:                                      ; preds = %sw.bb16, %if.then13
  br label %if.end94, !dbg !6999

if.else18:                                        ; preds = %if.else
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7000
  %device19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 8, !dbg !7002
  %11 = load i16, i16* %device19, align 2, !dbg !7002
  %conv20 = zext i16 %11 to i32, !dbg !7000
  %cmp21 = icmp eq i32 %conv20, 9520, !dbg !7003
  br i1 %cmp21, label %if.then23, label %if.else28, !dbg !7004

if.then23:                                        ; preds = %if.else18
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7005
  %subsystem_device24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 10, !dbg !7006
  %13 = load i16, i16* %subsystem_device24, align 2, !dbg !7006
  %conv25 = zext i16 %13 to i32, !dbg !7005
  switch i32 %conv25, label %sw.epilog27 [
    i32 32816, label %sw.bb26
  ], !dbg !7007

sw.bb26:                                          ; preds = %if.then23
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7008
  br label %sw.epilog27, !dbg !7010

sw.epilog27:                                      ; preds = %sw.bb26, %if.then23
  br label %if.end93, !dbg !7010

if.else28:                                        ; preds = %if.else18
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7011
  %device29 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 8, !dbg !7013
  %15 = load i16, i16* %device29, align 2, !dbg !7013
  %conv30 = zext i16 %15 to i32, !dbg !7011
  %cmp31 = icmp eq i32 %conv30, 9565, !dbg !7014
  br i1 %cmp31, label %if.then33, label %if.else38, !dbg !7015

if.then33:                                        ; preds = %if.else28
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7016
  %subsystem_device34 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 10, !dbg !7017
  %17 = load i16, i16* %subsystem_device34, align 2, !dbg !7017
  %conv35 = zext i16 %17 to i32, !dbg !7016
  switch i32 %conv35, label %sw.epilog37 [
    i32 32880, label %sw.bb36
  ], !dbg !7018

sw.bb36:                                          ; preds = %if.then33
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7019
  br label %sw.epilog37, !dbg !7021

sw.epilog37:                                      ; preds = %sw.bb36, %if.then33
  br label %if.end92, !dbg !7021

if.else38:                                        ; preds = %if.else28
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7022
  %device39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 8, !dbg !7024
  %19 = load i16, i16* %device39, align 2, !dbg !7024
  %conv40 = zext i16 %19 to i32, !dbg !7022
  %cmp41 = icmp eq i32 %conv40, 9548, !dbg !7025
  br i1 %cmp41, label %if.then43, label %if.else48, !dbg !7026

if.then43:                                        ; preds = %if.else38
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7027
  %subsystem_device44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 10, !dbg !7028
  %21 = load i16, i16* %subsystem_device44, align 2, !dbg !7028
  %conv45 = zext i16 %21 to i32, !dbg !7027
  switch i32 %conv45, label %sw.epilog47 [
    i32 32969, label %sw.bb46
  ], !dbg !7029

sw.bb46:                                          ; preds = %if.then43
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7030
  br label %sw.epilog47, !dbg !7032

sw.epilog47:                                      ; preds = %sw.bb46, %if.then43
  br label %if.end91, !dbg !7032

if.else48:                                        ; preds = %if.else38
  %22 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7033
  %device49 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 8, !dbg !7035
  %23 = load i16, i16* %device49, align 2, !dbg !7035
  %conv50 = zext i16 %23 to i32, !dbg !7033
  %cmp51 = icmp eq i32 %conv50, 13696, !dbg !7036
  br i1 %cmp51, label %if.then53, label %if.else58, !dbg !7037

if.then53:                                        ; preds = %if.else48
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7038
  %subsystem_device54 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 10, !dbg !7039
  %25 = load i16, i16* %subsystem_device54, align 2, !dbg !7039
  %conv55 = zext i16 %25 to i32, !dbg !7038
  switch i32 %conv55, label %sw.epilog57 [
    i32 5969, label %sw.bb56
    i32 6177, label %sw.bb56
    i32 6295, label %sw.bb56
  ], !dbg !7040

sw.bb56:                                          ; preds = %if.then53, %if.then53, %if.then53
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7041
  br label %sw.epilog57, !dbg !7043

sw.epilog57:                                      ; preds = %sw.bb56, %if.then53
  br label %if.end90, !dbg !7043

if.else58:                                        ; preds = %if.else48
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7044
  %device59 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 8, !dbg !7046
  %27 = load i16, i16* %device59, align 2, !dbg !7046
  %conv60 = zext i16 %27 to i32, !dbg !7044
  %cmp61 = icmp eq i32 %conv60, 13120, !dbg !7047
  br i1 %cmp61, label %if.then63, label %if.else68, !dbg !7048

if.then63:                                        ; preds = %if.else58
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7049
  %subsystem_device64 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 10, !dbg !7050
  %29 = load i16, i16* %subsystem_device64, align 2, !dbg !7050
  %conv65 = zext i16 %29 to i32, !dbg !7049
  switch i32 %conv65, label %sw.epilog67 [
    i32 6219, label %sw.bb66
    i32 6250, label %sw.bb66
  ], !dbg !7051

sw.bb66:                                          ; preds = %if.then63, %if.then63
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7052
  br label %sw.epilog67, !dbg !7054

sw.epilog67:                                      ; preds = %sw.bb66, %if.then63
  br label %if.end89, !dbg !7054

if.else68:                                        ; preds = %if.else58
  %30 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7055
  %device69 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 8, !dbg !7057
  %31 = load i16, i16* %device69, align 2, !dbg !7057
  %conv70 = zext i16 %31 to i32, !dbg !7055
  %cmp71 = icmp eq i32 %conv70, 9584, !dbg !7058
  br i1 %cmp71, label %if.then73, label %if.else78, !dbg !7059

if.then73:                                        ; preds = %if.else68
  %32 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7060
  %subsystem_device74 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 10, !dbg !7061
  %33 = load i16, i16* %subsystem_device74, align 2, !dbg !7061
  %conv75 = zext i16 %33 to i32, !dbg !7060
  switch i32 %conv75, label %sw.epilog77 [
    i32 33010, label %sw.bb76
  ], !dbg !7062

sw.bb76:                                          ; preds = %if.then73
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7063
  br label %sw.epilog77, !dbg !7065

sw.epilog77:                                      ; preds = %sw.bb76, %if.then73
  br label %if.end88, !dbg !7065

if.else78:                                        ; preds = %if.else68
  %34 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7066
  %device79 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 8, !dbg !7068
  %35 = load i16, i16* %device79, align 2, !dbg !7068
  %conv80 = zext i16 %35 to i32, !dbg !7066
  %cmp81 = icmp eq i32 %conv80, 9616, !dbg !7069
  br i1 %cmp81, label %if.then83, label %if.end, !dbg !7070

if.then83:                                        ; preds = %if.else78
  %36 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7071
  %subsystem_device84 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 10, !dbg !7072
  %37 = load i16, i16* %subsystem_device84, align 2, !dbg !7072
  %conv85 = zext i16 %37 to i32, !dbg !7071
  switch i32 %conv85, label %sw.epilog87 [
    i32 6274, label %sw.bb86
    i32 6519, label %sw.bb86
  ], !dbg !7073

sw.bb86:                                          ; preds = %if.then83, %if.then83
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7074
  br label %sw.epilog87, !dbg !7076

sw.epilog87:                                      ; preds = %sw.bb86, %if.then83
  br label %if.end, !dbg !7076

if.end:                                           ; preds = %sw.epilog87, %if.else78
  br label %if.end88

if.end88:                                         ; preds = %if.end, %sw.epilog77
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %sw.epilog67
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %sw.epilog57
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %sw.epilog47
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %sw.epilog37
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %sw.epilog27
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %sw.epilog17
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %sw.epilog
  br label %if.end220, !dbg !7077

if.else96:                                        ; preds = %entry
  %38 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7078
  %subsystem_vendor97 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 9, !dbg !7078
  %39 = load i16, i16* %subsystem_vendor97, align 8, !dbg !7078
  %conv98 = zext i16 %39 to i32, !dbg !7078
  %cmp99 = icmp eq i32 %conv98, 4156, !dbg !7078
  %lnot101 = xor i1 %cmp99, true, !dbg !7078
  %lnot103 = xor i1 %lnot101, true, !dbg !7078
  %lnot.ext104 = zext i1 %lnot103 to i32, !dbg !7078
  %conv105 = sext i32 %lnot.ext104 to i64, !dbg !7078
  %tobool106 = icmp ne i64 %conv105, 0, !dbg !7078
  br i1 %tobool106, label %if.then107, label %if.else140, !dbg !7080

if.then107:                                       ; preds = %if.else96
  %40 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7081
  %device108 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 8, !dbg !7084
  %41 = load i16, i16* %device108, align 2, !dbg !7084
  %conv109 = zext i16 %41 to i32, !dbg !7081
  %cmp110 = icmp eq i32 %conv109, 13120, !dbg !7085
  br i1 %cmp110, label %if.then112, label %if.else117, !dbg !7086

if.then112:                                       ; preds = %if.then107
  %42 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7087
  %subsystem_device113 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 10, !dbg !7088
  %43 = load i16, i16* %subsystem_device113, align 2, !dbg !7088
  %conv114 = zext i16 %43 to i32, !dbg !7087
  switch i32 %conv114, label %sw.epilog116 [
    i32 2188, label %sw.bb115
    i32 2192, label %sw.bb115
  ], !dbg !7089

sw.bb115:                                         ; preds = %if.then112, %if.then112
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7090
  br label %sw.epilog116, !dbg !7092

sw.epilog116:                                     ; preds = %sw.bb115, %if.then112
  br label %if.end139, !dbg !7092

if.else117:                                       ; preds = %if.then107
  %44 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7093
  %device118 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %44, i32 0, i32 8, !dbg !7095
  %45 = load i16, i16* %device118, align 2, !dbg !7095
  %conv119 = zext i16 %45 to i32, !dbg !7093
  %cmp120 = icmp eq i32 %conv119, 9584, !dbg !7096
  br i1 %cmp120, label %if.then122, label %if.else127, !dbg !7097

if.then122:                                       ; preds = %if.else117
  %46 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7098
  %subsystem_device123 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 10, !dbg !7099
  %47 = load i16, i16* %subsystem_device123, align 2, !dbg !7099
  %conv124 = zext i16 %47 to i32, !dbg !7098
  switch i32 %conv124, label %sw.epilog126 [
    i32 4796, label %sw.bb125
    i32 4797, label %sw.bb125
    i32 106, label %sw.bb125
  ], !dbg !7100

sw.bb125:                                         ; preds = %if.then122, %if.then122, %if.then122
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7101
  br label %sw.epilog126, !dbg !7103

sw.epilog126:                                     ; preds = %sw.bb125, %if.then122
  br label %if.end138, !dbg !7103

if.else127:                                       ; preds = %if.else117
  %48 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7104
  %device128 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %48, i32 0, i32 8, !dbg !7106
  %49 = load i16, i16* %device128, align 2, !dbg !7106
  %conv129 = zext i16 %49 to i32, !dbg !7104
  %cmp130 = icmp eq i32 %conv129, 9592, !dbg !7107
  br i1 %cmp130, label %if.then132, label %if.end137, !dbg !7108

if.then132:                                       ; preds = %if.else127
  %50 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7109
  %subsystem_device133 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %50, i32 0, i32 10, !dbg !7110
  %51 = load i16, i16* %subsystem_device133, align 2, !dbg !7110
  %conv134 = zext i16 %51 to i32, !dbg !7109
  switch i32 %conv134, label %sw.epilog136 [
    i32 4799, label %sw.bb135
  ], !dbg !7111

sw.bb135:                                         ; preds = %if.then132
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7112
  br label %sw.epilog136, !dbg !7114

sw.epilog136:                                     ; preds = %sw.bb135, %if.then132
  br label %if.end137, !dbg !7114

if.end137:                                        ; preds = %sw.epilog136, %if.else127
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %sw.epilog126
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %sw.epilog116
  br label %if.end219, !dbg !7115

if.else140:                                       ; preds = %if.else96
  %52 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7116
  %subsystem_vendor141 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %52, i32 0, i32 9, !dbg !7116
  %53 = load i16, i16* %subsystem_vendor141, align 8, !dbg !7116
  %conv142 = zext i16 %53 to i32, !dbg !7116
  %cmp143 = icmp eq i32 %conv142, 5197, !dbg !7116
  %lnot145 = xor i1 %cmp143, true, !dbg !7116
  %lnot147 = xor i1 %lnot145, true, !dbg !7116
  %lnot.ext148 = zext i1 %lnot147 to i32, !dbg !7116
  %conv149 = sext i32 %lnot.ext148 to i64, !dbg !7116
  %tobool150 = icmp ne i64 %conv149, 0, !dbg !7116
  br i1 %tobool150, label %if.then151, label %if.else162, !dbg !7118

if.then151:                                       ; preds = %if.else140
  %54 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7119
  %device152 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 8, !dbg !7122
  %55 = load i16, i16* %device152, align 2, !dbg !7122
  %conv153 = zext i16 %55 to i32, !dbg !7119
  %cmp154 = icmp eq i32 %conv153, 13120, !dbg !7123
  br i1 %cmp154, label %if.then156, label %if.end161, !dbg !7124

if.then156:                                       ; preds = %if.then151
  %56 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7125
  %subsystem_device157 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %56, i32 0, i32 10, !dbg !7126
  %57 = load i16, i16* %subsystem_device157, align 2, !dbg !7126
  %conv158 = zext i16 %57 to i32, !dbg !7125
  switch i32 %conv158, label %sw.epilog160 [
    i32 49164, label %sw.bb159
  ], !dbg !7127

sw.bb159:                                         ; preds = %if.then156
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7128
  br label %sw.epilog160, !dbg !7130

sw.epilog160:                                     ; preds = %sw.bb159, %if.then156
  br label %if.end161, !dbg !7130

if.end161:                                        ; preds = %sw.epilog160, %if.then151
  br label %if.end218, !dbg !7131

if.else162:                                       ; preds = %if.else140
  %58 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7132
  %subsystem_vendor163 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %58, i32 0, i32 9, !dbg !7132
  %59 = load i16, i16* %subsystem_vendor163, align 8, !dbg !7132
  %conv164 = zext i16 %59 to i32, !dbg !7132
  %cmp165 = icmp eq i32 %conv164, 3601, !dbg !7132
  %lnot167 = xor i1 %cmp165, true, !dbg !7132
  %lnot169 = xor i1 %lnot167, true, !dbg !7132
  %lnot.ext170 = zext i1 %lnot169 to i32, !dbg !7132
  %conv171 = sext i32 %lnot.ext170 to i64, !dbg !7132
  %tobool172 = icmp ne i64 %conv171, 0, !dbg !7132
  br i1 %tobool172, label %if.then173, label %if.end217, !dbg !7134

if.then173:                                       ; preds = %if.else162
  %60 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7135
  %device174 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %60, i32 0, i32 8, !dbg !7138
  %61 = load i16, i16* %device174, align 2, !dbg !7138
  %conv175 = zext i16 %61 to i32, !dbg !7135
  %cmp176 = icmp eq i32 %conv175, 13120, !dbg !7139
  br i1 %cmp176, label %if.then178, label %if.else183, !dbg !7140

if.then178:                                       ; preds = %if.then173
  %62 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7141
  %subsystem_device179 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %62, i32 0, i32 10, !dbg !7142
  %63 = load i16, i16* %subsystem_device179, align 2, !dbg !7142
  %conv180 = zext i16 %63 to i32, !dbg !7141
  switch i32 %conv180, label %sw.epilog182 [
    i32 88, label %sw.bb181
  ], !dbg !7143

sw.bb181:                                         ; preds = %if.then178
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7144
  br label %sw.epilog182, !dbg !7146

sw.epilog182:                                     ; preds = %sw.bb181, %if.then178
  br label %if.end216, !dbg !7146

if.else183:                                       ; preds = %if.then173
  %64 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7147
  %device184 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %64, i32 0, i32 8, !dbg !7149
  %65 = load i16, i16* %device184, align 2, !dbg !7149
  %conv185 = zext i16 %65 to i32, !dbg !7147
  %cmp186 = icmp eq i32 %conv185, 28963, !dbg !7150
  br i1 %cmp186, label %if.then188, label %if.else193, !dbg !7151

if.then188:                                       ; preds = %if.else183
  %66 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7152
  %subsystem_device189 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %66, i32 0, i32 10, !dbg !7153
  %67 = load i16, i16* %subsystem_device189, align 2, !dbg !7153
  %conv190 = zext i16 %67 to i32, !dbg !7152
  switch i32 %conv190, label %sw.epilog192 [
    i32 45420, label %sw.bb191
  ], !dbg !7154

sw.bb191:                                         ; preds = %if.then188
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7155
  br label %sw.epilog192, !dbg !7157

sw.epilog192:                                     ; preds = %sw.bb191, %if.then188
  br label %if.end215, !dbg !7157

if.else193:                                       ; preds = %if.else183
  %68 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7158
  %device194 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %68, i32 0, i32 8, !dbg !7160
  %69 = load i16, i16* %device194, align 2, !dbg !7160
  %conv195 = zext i16 %69 to i32, !dbg !7158
  %cmp196 = icmp eq i32 %conv195, 9410, !dbg !7161
  br i1 %cmp196, label %if.then198, label %if.else203, !dbg !7162

if.then198:                                       ; preds = %if.else193
  %70 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7163
  %subsystem_device199 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %70, i32 0, i32 10, !dbg !7164
  %71 = load i16, i16* %subsystem_device199, align 2, !dbg !7164
  %conv200 = zext i16 %71 to i32, !dbg !7163
  switch i32 %conv200, label %sw.epilog202 [
    i32 184, label %sw.bb201
    i32 185, label %sw.bb201
    i32 186, label %sw.bb201
  ], !dbg !7165

sw.bb201:                                         ; preds = %if.then198, %if.then198, %if.then198
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7166
  br label %sw.epilog202, !dbg !7168

sw.epilog202:                                     ; preds = %sw.bb201, %if.then198
  br label %if.end214, !dbg !7168

if.else203:                                       ; preds = %if.else193
  %72 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7169
  %device204 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %72, i32 0, i32 8, !dbg !7171
  %73 = load i16, i16* %device204, align 2, !dbg !7171
  %conv205 = zext i16 %73 to i32, !dbg !7169
  %cmp206 = icmp eq i32 %conv205, 4402, !dbg !7172
  br i1 %cmp206, label %if.then208, label %if.end213, !dbg !7173

if.then208:                                       ; preds = %if.else203
  %74 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7174
  %subsystem_device209 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %74, i32 0, i32 10, !dbg !7175
  %75 = load i16, i16* %subsystem_device209, align 2, !dbg !7175
  %conv210 = zext i16 %75 to i32, !dbg !7174
  switch i32 %conv210, label %sw.epilog212 [
    i32 26, label %sw.bb211
  ], !dbg !7176

sw.bb211:                                         ; preds = %if.then208
  store i32 1, i32* @asus_hides_smbus, align 4, !dbg !7177
  br label %sw.epilog212, !dbg !7179

sw.epilog212:                                     ; preds = %sw.bb211, %if.then208
  br label %if.end213, !dbg !7179

if.end213:                                        ; preds = %sw.epilog212, %if.else203
  br label %if.end214

if.end214:                                        ; preds = %if.end213, %sw.epilog202
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %sw.epilog192
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %sw.epilog182
  br label %if.end217, !dbg !7180

if.end217:                                        ; preds = %if.end216, %if.else162
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.end161
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.end139
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.end95
  ret void, !dbg !7181
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asus_hides_smbus_lpc(%struct.pci_dev* %dev) #0 !dbg !7182 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %val = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7183, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.declare(metadata i16* %val, metadata !7185, metadata !DIExpression()), !dbg !7186
  %0 = load i32, i32* @asus_hides_smbus, align 4, !dbg !7187
  %tobool = icmp ne i32 %0, 0, !dbg !7187
  %lnot = xor i1 %tobool, true, !dbg !7187
  %lnot1 = xor i1 %lnot, true, !dbg !7187
  %lnot2 = xor i1 %lnot1, true, !dbg !7187
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7187
  %conv = sext i32 %lnot.ext to i64, !dbg !7187
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7187
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7189

if.then:                                          ; preds = %entry
  br label %if.end20, !dbg !7190

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7191
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %1, i32 242, i16* %val) #9, !dbg !7192
  %2 = load i16, i16* %val, align 2, !dbg !7193
  %conv4 = zext i16 %2 to i32, !dbg !7193
  %and = and i32 %conv4, 8, !dbg !7195
  %tobool5 = icmp ne i32 %and, 0, !dbg !7195
  br i1 %tobool5, label %if.then6, label %if.end20, !dbg !7196

if.then6:                                         ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7197
  %4 = load i16, i16* %val, align 2, !dbg !7199
  %conv7 = zext i16 %4 to i32, !dbg !7199
  %and8 = and i32 %conv7, -9, !dbg !7200
  %conv9 = trunc i32 %and8 to i16, !dbg !7199
  %call10 = call i32 @pci_write_config_word(%struct.pci_dev* %3, i32 242, i16 zeroext %conv9) #9, !dbg !7201
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7202
  %call11 = call i32 @pci_read_config_word(%struct.pci_dev* %5, i32 242, i16* %val) #9, !dbg !7203
  %6 = load i16, i16* %val, align 2, !dbg !7204
  %conv12 = zext i16 %6 to i32, !dbg !7204
  %and13 = and i32 %conv12, 8, !dbg !7206
  %tobool14 = icmp ne i32 %and13, 0, !dbg !7206
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !7207

if.then15:                                        ; preds = %if.then6
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7208
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !7208
  %8 = load i16, i16* %val, align 2, !dbg !7208
  %conv17 = zext i16 %8 to i32, !dbg !7208
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev16, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.64, i64 0, i64 0), i32 %conv17) #10, !dbg !7208
  br label %if.end19, !dbg !7208

if.else:                                          ; preds = %if.then6
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7209
  %dev18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !7209
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev18, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !7209
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then15
  br label %if.end20, !dbg !7210

if.end20:                                         ; preds = %if.then, %if.end19, %if.end
  ret void, !dbg !7211
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asus_hides_smbus_lpc_ich6(%struct.pci_dev* %dev) #0 !dbg !7212 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7213, metadata !DIExpression()), !dbg !7214
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7215
  call void @asus_hides_smbus_lpc_ich6_suspend(%struct.pci_dev* %0) #9, !dbg !7216
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7217
  call void @asus_hides_smbus_lpc_ich6_resume_early(%struct.pci_dev* %1) #9, !dbg !7218
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7219
  call void @asus_hides_smbus_lpc_ich6_resume(%struct.pci_dev* %2) #9, !dbg !7220
  ret void, !dbg !7221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asus_hides_smbus_lpc_ich6_suspend(%struct.pci_dev* %dev) #0 !dbg !7222 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rcba = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7223, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.declare(metadata i32* %rcba, metadata !7225, metadata !DIExpression()), !dbg !7226
  %0 = load i32, i32* @asus_hides_smbus, align 4, !dbg !7227
  %tobool = icmp ne i32 %0, 0, !dbg !7227
  %lnot = xor i1 %tobool, true, !dbg !7227
  %lnot1 = xor i1 %lnot, true, !dbg !7227
  %lnot2 = xor i1 %lnot1, true, !dbg !7227
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7227
  %conv = sext i32 %lnot.ext to i64, !dbg !7227
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7227
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7229

if.then:                                          ; preds = %entry
  br label %if.end34, !dbg !7230

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7231, metadata !DIExpression()), !dbg !7233
  %1 = load i8*, i8** @asus_rcba_base, align 8, !dbg !7233
  %tobool4 = icmp ne i8* %1, null, !dbg !7233
  %lnot5 = xor i1 %tobool4, true, !dbg !7233
  %lnot7 = xor i1 %lnot5, true, !dbg !7233
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7233
  store i32 %lnot.ext8, i32* %__ret_warn_on, align 4, !dbg !7233
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !7234
  %tobool9 = icmp ne i32 %2, 0, !dbg !7234
  %lnot10 = xor i1 %tobool9, true, !dbg !7234
  %lnot12 = xor i1 %lnot10, true, !dbg !7234
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !7234
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !7234
  %tobool15 = icmp ne i64 %conv14, 0, !dbg !7234
  br i1 %tobool15, label %if.then16, label %if.end23, !dbg !7233

if.then16:                                        ; preds = %if.end
  br label %do.body, !dbg !7234

do.body:                                          ; preds = %if.then16
  br label %do.body17, !dbg !7236

do.body17:                                        ; preds = %do.body
  br label %do.end, !dbg !7238

do.end:                                           ; preds = %do.body17
  br label %do.body18, !dbg !7236

do.body18:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.66, i64 0, i64 0), i32 1570, i32 2305, i64 12) #11, !dbg !7240, !srcloc !7242
  br label %do.end19, !dbg !7240

do.end19:                                         ; preds = %do.body18
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 394) #11, !dbg !7243, !srcloc !7245
  br label %do.body20, !dbg !7236

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !7246

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !7236

do.end22:                                         ; preds = %do.end21
  br label %if.end23, !dbg !7236

if.end23:                                         ; preds = %do.end22, %if.end
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !7233
  %tobool24 = icmp ne i32 %3, 0, !dbg !7233
  %lnot25 = xor i1 %tobool24, true, !dbg !7233
  %lnot27 = xor i1 %lnot25, true, !dbg !7233
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !7233
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !7233
  store i64 %conv29, i64* %tmp, align 8, !dbg !7234
  %4 = load i64, i64* %tmp, align 8, !dbg !7233
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7248
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %5, i32 240, i32* %rcba) #9, !dbg !7249
  %6 = load i32, i32* %rcba, align 4, !dbg !7250
  %and = and i32 %6, -16384, !dbg !7251
  %conv30 = zext i32 %and to i64, !dbg !7250
  %call31 = call i8* @ioremap(i64 %conv30, i64 16384) #9, !dbg !7252
  store i8* %call31, i8** @asus_rcba_base, align 8, !dbg !7253
  %7 = load i8*, i8** @asus_rcba_base, align 8, !dbg !7254
  %cmp = icmp eq i8* %7, null, !dbg !7256
  br i1 %cmp, label %if.then33, label %if.end34, !dbg !7257

if.then33:                                        ; preds = %if.end23
  br label %if.end34, !dbg !7258

if.end34:                                         ; preds = %if.then, %if.then33, %if.end23
  ret void, !dbg !7259
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asus_hides_smbus_lpc_ich6_resume(%struct.pci_dev* %dev) #0 !dbg !7260 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7261, metadata !DIExpression()), !dbg !7262
  %0 = load i32, i32* @asus_hides_smbus, align 4, !dbg !7263
  %tobool = icmp ne i32 %0, 0, !dbg !7263
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7263

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** @asus_rcba_base, align 8, !dbg !7263
  %tobool1 = icmp ne i8* %1, null, !dbg !7263
  %lnot = xor i1 %tobool1, true, !dbg !7263
  br label %lor.end, !dbg !7263

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %2, true, !dbg !7263
  %lnot3 = xor i1 %lnot2, true, !dbg !7263
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7263
  %conv = sext i32 %lnot.ext to i64, !dbg !7263
  %tobool4 = icmp ne i64 %conv, 0, !dbg !7263
  br i1 %tobool4, label %if.then, label %if.end, !dbg !7265

if.then:                                          ; preds = %lor.end
  br label %return, !dbg !7266

if.end:                                           ; preds = %lor.end
  %3 = load i8*, i8** @asus_rcba_base, align 8, !dbg !7267
  call void @iounmap(i8* %3) #9, !dbg !7268
  store i8* null, i8** @asus_rcba_base, align 8, !dbg !7269
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7270
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !7270
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !7270
  br label %return, !dbg !7271

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7271
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asus_hides_smbus_lpc_ich6_resume_early(%struct.pci_dev* %dev) #0 !dbg !7272 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %val = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7273, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7275, metadata !DIExpression()), !dbg !7276
  %0 = load i32, i32* @asus_hides_smbus, align 4, !dbg !7277
  %tobool = icmp ne i32 %0, 0, !dbg !7277
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7277

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** @asus_rcba_base, align 8, !dbg !7277
  %tobool1 = icmp ne i8* %1, null, !dbg !7277
  %lnot = xor i1 %tobool1, true, !dbg !7277
  br label %lor.end, !dbg !7277

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %2, true, !dbg !7277
  %lnot3 = xor i1 %lnot2, true, !dbg !7277
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7277
  %conv = sext i32 %lnot.ext to i64, !dbg !7277
  %tobool4 = icmp ne i64 %conv, 0, !dbg !7277
  br i1 %tobool4, label %if.then, label %if.end, !dbg !7279

if.then:                                          ; preds = %lor.end
  br label %return, !dbg !7280

if.end:                                           ; preds = %lor.end
  %3 = load i8*, i8** @asus_rcba_base, align 8, !dbg !7281
  %add.ptr = getelementptr i8, i8* %3, i64 13336, !dbg !7282
  %call = call i32 @readl(i8* %add.ptr) #9, !dbg !7283
  store i32 %call, i32* %val, align 4, !dbg !7284
  %4 = load i32, i32* %val, align 4, !dbg !7285
  %and = and i32 %4, -9, !dbg !7286
  %5 = load i8*, i8** @asus_rcba_base, align 8, !dbg !7287
  %add.ptr5 = getelementptr i8, i8* %5, i64 13336, !dbg !7288
  call void @writel(i32 %and, i8* %add.ptr5) #9, !dbg !7289
  br label %return, !dbg !7290

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_sis_96x_smbus(%struct.pci_dev* %dev) #0 !dbg !7291 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %val = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.declare(metadata i8* %val, metadata !7294, metadata !DIExpression()), !dbg !7295
  store i8 0, i8* %val, align 1, !dbg !7295
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7296
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 119, i8* %val) #9, !dbg !7297
  %1 = load i8, i8* %val, align 1, !dbg !7298
  %conv = zext i8 %1 to i32, !dbg !7298
  %and = and i32 %conv, 16, !dbg !7300
  %tobool = icmp ne i32 %and, 0, !dbg !7300
  br i1 %tobool, label %if.then, label %if.end, !dbg !7301

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7302
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !7302
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !7302
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7304
  %4 = load i8, i8* %val, align 1, !dbg !7305
  %conv2 = zext i8 %4 to i32, !dbg !7305
  %and3 = and i32 %conv2, -17, !dbg !7306
  %conv4 = trunc i32 %and3 to i8, !dbg !7305
  %call5 = call i32 @pci_write_config_byte(%struct.pci_dev* %3, i32 119, i8 zeroext %conv4) #9, !dbg !7307
  br label %if.end, !dbg !7308

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_sis_503(%struct.pci_dev* %dev) #0 !dbg !7310 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %reg = alloca i8, align 1
  %devid = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7311, metadata !DIExpression()), !dbg !7312
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !7313, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.declare(metadata i16* %devid, metadata !7315, metadata !DIExpression()), !dbg !7316
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7317
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 64, i8* %reg) #9, !dbg !7318
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7319
  %2 = load i8, i8* %reg, align 1, !dbg !7320
  %conv = zext i8 %2 to i32, !dbg !7320
  %or = or i32 %conv, 64, !dbg !7321
  %conv1 = trunc i32 %or to i8, !dbg !7320
  %call2 = call i32 @pci_write_config_byte(%struct.pci_dev* %1, i32 64, i8 zeroext %conv1) #9, !dbg !7322
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7323
  %call3 = call i32 @pci_read_config_word(%struct.pci_dev* %3, i32 2, i16* %devid) #9, !dbg !7324
  %4 = load i16, i16* %devid, align 2, !dbg !7325
  %conv4 = zext i16 %4 to i32, !dbg !7325
  %and = and i32 %conv4, 65520, !dbg !7327
  %cmp = icmp ne i32 %and, 2400, !dbg !7328
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7329

land.lhs.true:                                    ; preds = %entry
  %5 = load i16, i16* %devid, align 2, !dbg !7330
  %conv6 = zext i16 %5 to i32, !dbg !7330
  %cmp7 = icmp ne i32 %conv6, 24, !dbg !7331
  br i1 %cmp7, label %if.then, label %if.end, !dbg !7332

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7333
  %7 = load i8, i8* %reg, align 1, !dbg !7335
  %call9 = call i32 @pci_write_config_byte(%struct.pci_dev* %6, i32 64, i8 zeroext %7) #9, !dbg !7336
  br label %return, !dbg !7337

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load i16, i16* %devid, align 2, !dbg !7338
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7339
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 8, !dbg !7340
  store i16 %8, i16* %device, align 2, !dbg !7341
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7342
  call void @quirk_sis_96x_smbus(%struct.pci_dev* %10) #9, !dbg !7343
  br label %return, !dbg !7344

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @asus_hides_ac97_lpc(%struct.pci_dev* %dev) #0 !dbg !7345 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %val = alloca i8, align 1
  %asus_hides_ac97 = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7346, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.declare(metadata i8* %val, metadata !7348, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.declare(metadata i32* %asus_hides_ac97, metadata !7350, metadata !DIExpression()), !dbg !7351
  store i32 0, i32* %asus_hides_ac97, align 4, !dbg !7351
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7352
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 9, !dbg !7352
  %1 = load i16, i16* %subsystem_vendor, align 8, !dbg !7352
  %conv = zext i16 %1 to i32, !dbg !7352
  %cmp = icmp eq i32 %conv, 4163, !dbg !7352
  %lnot = xor i1 %cmp, true, !dbg !7352
  %lnot2 = xor i1 %lnot, true, !dbg !7352
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7352
  %conv3 = sext i32 %lnot.ext to i64, !dbg !7352
  %tobool = icmp ne i64 %conv3, 0, !dbg !7352
  br i1 %tobool, label %if.then, label %if.end8, !dbg !7354

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7355
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 8, !dbg !7358
  %3 = load i16, i16* %device, align 2, !dbg !7358
  %conv4 = zext i16 %3 to i32, !dbg !7355
  %cmp5 = icmp eq i32 %conv4, 12839, !dbg !7359
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !7360

if.then7:                                         ; preds = %if.then
  store i32 1, i32* %asus_hides_ac97, align 4, !dbg !7361
  br label %if.end, !dbg !7362

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end8, !dbg !7363

if.end8:                                          ; preds = %if.end, %entry
  %4 = load i32, i32* %asus_hides_ac97, align 4, !dbg !7364
  %tobool9 = icmp ne i32 %4, 0, !dbg !7364
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !7366

if.then10:                                        ; preds = %if.end8
  br label %if.end28, !dbg !7367

if.end11:                                         ; preds = %if.end8
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7368
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %5, i32 80, i8* %val) #9, !dbg !7369
  %6 = load i8, i8* %val, align 1, !dbg !7370
  %conv12 = zext i8 %6 to i32, !dbg !7370
  %and = and i32 %conv12, 192, !dbg !7372
  %tobool13 = icmp ne i32 %and, 0, !dbg !7372
  br i1 %tobool13, label %if.then14, label %if.end28, !dbg !7373

if.then14:                                        ; preds = %if.end11
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7374
  %8 = load i8, i8* %val, align 1, !dbg !7376
  %conv15 = zext i8 %8 to i32, !dbg !7376
  %and16 = and i32 %conv15, -193, !dbg !7377
  %conv17 = trunc i32 %and16 to i8, !dbg !7376
  %call18 = call i32 @pci_write_config_byte(%struct.pci_dev* %7, i32 80, i8 zeroext %conv17) #9, !dbg !7378
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7379
  %call19 = call i32 @pci_read_config_byte(%struct.pci_dev* %9, i32 80, i8* %val) #9, !dbg !7380
  %10 = load i8, i8* %val, align 1, !dbg !7381
  %conv20 = zext i8 %10 to i32, !dbg !7381
  %and21 = and i32 %conv20, 192, !dbg !7383
  %tobool22 = icmp ne i32 %and21, 0, !dbg !7383
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !7384

if.then23:                                        ; preds = %if.then14
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7385
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !7385
  %12 = load i8, i8* %val, align 1, !dbg !7385
  %conv25 = zext i8 %12 to i32, !dbg !7385
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev24, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.69, i64 0, i64 0), i32 %conv25) #10, !dbg !7385
  br label %if.end27, !dbg !7385

if.else:                                          ; preds = %if.then14
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7386
  %dev26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !7386
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev26, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.70, i64 0, i64 0)) #10, !dbg !7386
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then23
  br label %if.end28, !dbg !7387

if.end28:                                         ; preds = %if.then10, %if.end27, %if.end11
  ret void, !dbg !7388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_jmicron_ata(%struct.pci_dev* %pdev) #0 !dbg !7389 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %conf1 = alloca i32, align 4
  %conf5 = alloca i32, align 4
  %class = alloca i32, align 4
  %hdr = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7390, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.declare(metadata i32* %conf1, metadata !7392, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.declare(metadata i32* %conf5, metadata !7394, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.declare(metadata i32* %class, metadata !7396, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.declare(metadata i8* %hdr, metadata !7398, metadata !DIExpression()), !dbg !7399
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7400
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 6, !dbg !7400
  %1 = load i32, i32* %devfn, align 8, !dbg !7400
  %and = and i32 %1, 7, !dbg !7400
  %tobool = icmp ne i32 %and, 0, !dbg !7400
  br i1 %tobool, label %if.then, label %if.end, !dbg !7402

if.then:                                          ; preds = %entry
  br label %return, !dbg !7403

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7404
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %2, i32 64, i32* %conf1) #9, !dbg !7405
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7406
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %3, i32 128, i32* %conf5) #9, !dbg !7407
  %4 = load i32, i32* %conf1, align 4, !dbg !7408
  %and2 = and i32 %4, -13628163, !dbg !7408
  store i32 %and2, i32* %conf1, align 4, !dbg !7408
  %5 = load i32, i32* %conf5, align 4, !dbg !7409
  %and3 = and i32 %5, -16777217, !dbg !7409
  store i32 %and3, i32* %conf5, align 4, !dbg !7409
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7410
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 8, !dbg !7411
  %7 = load i16, i16* %device, align 2, !dbg !7411
  %conv = zext i16 %7 to i32, !dbg !7410
  switch i32 %conv, label %sw.epilog [
    i32 9056, label %sw.bb
    i32 9058, label %sw.bb
    i32 9060, label %sw.bb
    i32 9061, label %sw.bb4
    i32 9062, label %sw.bb4
    i32 9057, label %sw.bb6
    i32 9059, label %sw.bb6
    i32 9065, label %sw.bb6
    i32 9064, label %sw.bb8
  ], !dbg !7412

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %8 = load i32, i32* %conf1, align 4, !dbg !7413
  %or = or i32 %8, 172288, !dbg !7413
  store i32 %or, i32* %conf1, align 4, !dbg !7413
  br label %sw.epilog, !dbg !7415

sw.bb4:                                           ; preds = %if.end, %if.end
  %9 = load i32, i32* %conf5, align 4, !dbg !7416
  %or5 = or i32 %9, 16777216, !dbg !7416
  store i32 %or5, i32* %conf5, align 4, !dbg !7416
  br label %sw.bb6, !dbg !7417

sw.bb6:                                           ; preds = %if.end, %if.end, %if.end, %sw.bb4
  %10 = load i32, i32* %conf1, align 4, !dbg !7418
  %or7 = or i32 %10, 12755379, !dbg !7418
  store i32 %or7, i32* %conf1, align 4, !dbg !7418
  br label %sw.epilog, !dbg !7419

sw.bb8:                                           ; preds = %if.end
  %11 = load i32, i32* %conf1, align 4, !dbg !7420
  %or9 = or i32 %11, 12582912, !dbg !7420
  store i32 %or9, i32* %conf1, align 4, !dbg !7420
  br label %sw.epilog, !dbg !7421

sw.epilog:                                        ; preds = %if.end, %sw.bb8, %sw.bb6, %sw.bb
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7422
  %13 = load i32, i32* %conf1, align 4, !dbg !7423
  %call10 = call i32 @pci_write_config_dword(%struct.pci_dev* %12, i32 64, i32 %13) #9, !dbg !7424
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7425
  %15 = load i32, i32* %conf5, align 4, !dbg !7426
  %call11 = call i32 @pci_write_config_dword(%struct.pci_dev* %14, i32 128, i32 %15) #9, !dbg !7427
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7428
  %call12 = call i32 @pci_read_config_byte(%struct.pci_dev* %16, i32 14, i8* %hdr) #9, !dbg !7429
  %17 = load i8, i8* %hdr, align 1, !dbg !7430
  %conv13 = zext i8 %17 to i32, !dbg !7430
  %and14 = and i32 %conv13, 127, !dbg !7431
  %conv15 = trunc i32 %and14 to i8, !dbg !7430
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7432
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 13, !dbg !7433
  store i8 %conv15, i8* %hdr_type, align 1, !dbg !7434
  %19 = load i8, i8* %hdr, align 1, !dbg !7435
  %conv16 = zext i8 %19 to i32, !dbg !7435
  %and17 = and i32 %conv16, 128, !dbg !7436
  %tobool18 = icmp ne i32 %and17, 0, !dbg !7437
  %lnot = xor i1 %tobool18, true, !dbg !7437
  %lnot19 = xor i1 %lnot, true, !dbg !7438
  %lnot.ext = zext i1 %lnot19 to i32, !dbg !7438
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7439
  %multifunction = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 46, !dbg !7440
  %21 = bitcast [5 x i8]* %multifunction to i40*, !dbg !7440
  %22 = zext i32 %lnot.ext to i40, !dbg !7441
  %bf.load = load i40, i40* %21, align 1, !dbg !7441
  %bf.value = and i40 %22, 1, !dbg !7441
  %bf.shl = shl i40 %bf.value, 4, !dbg !7441
  %bf.clear = and i40 %bf.load, -17, !dbg !7441
  %bf.set = or i40 %bf.clear, %bf.shl, !dbg !7441
  store i40 %bf.set, i40* %21, align 1, !dbg !7441
  %bf.result.cast = trunc i40 %bf.value to i32, !dbg !7441
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7442
  %call20 = call i32 @pci_read_config_dword(%struct.pci_dev* %23, i32 8, i32* %class) #9, !dbg !7443
  %24 = load i32, i32* %class, align 4, !dbg !7444
  %shr = lshr i32 %24, 8, !dbg !7445
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7446
  %class21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 11, !dbg !7447
  store i32 %shr, i32* %class21, align 4, !dbg !7448
  br label %return, !dbg !7449

return:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !7449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_jmicron_async_suspend(%struct.pci_dev* %dev) #0 !dbg !7450 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7451, metadata !DIExpression()), !dbg !7452
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7453
  %multifunction = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !7455
  %1 = bitcast [5 x i8]* %multifunction to i40*, !dbg !7455
  %bf.load = load i40, i40* %1, align 1, !dbg !7455
  %bf.lshr = lshr i40 %bf.load, 4, !dbg !7455
  %bf.clear = and i40 %bf.lshr, 1, !dbg !7455
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !7455
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7453
  br i1 %tobool, label %if.then, label %if.end, !dbg !7456

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7457
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !7459
  call void @device_disable_async_suspend(%struct.device* %dev1) #9, !dbg !7460
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7461
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !7461
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !7461
  br label %if.end, !dbg !7462

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7463
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_alder_ioapic(%struct.pci_dev* %pdev) #0 !dbg !7464 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7465, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7467, metadata !DIExpression()), !dbg !7468
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7469
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 11, !dbg !7471
  %1 = load i32, i32* %class, align 4, !dbg !7471
  %shr = lshr i32 %1, 8, !dbg !7472
  %cmp = icmp ne i32 %shr, 65280, !dbg !7473
  br i1 %cmp, label %if.then, label %if.end, !dbg !7474

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !7475

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7476
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 44, !dbg !7476
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !7476
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !7476
  %3 = load i64, i64* %start, align 8, !dbg !7476
  %tobool = icmp ne i64 %3, 0, !dbg !7476
  br i1 %tobool, label %land.lhs.true, label %if.end22, !dbg !7478

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7479
  %resource1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 44, !dbg !7479
  %arrayidx2 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource1, i64 0, i64 0, !dbg !7479
  %start3 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx2, i32 0, i32 0, !dbg !7479
  %5 = load i64, i64* %start3, align 8, !dbg !7479
  %cmp4 = icmp eq i64 %5, 0, !dbg !7479
  br i1 %cmp4, label %land.lhs.true5, label %cond.false, !dbg !7479

land.lhs.true5:                                   ; preds = %land.lhs.true
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7479
  %resource6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !7479
  %arrayidx7 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource6, i64 0, i64 0, !dbg !7479
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx7, i32 0, i32 1, !dbg !7479
  %7 = load i64, i64* %end, align 8, !dbg !7479
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7479
  %resource8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 44, !dbg !7479
  %arrayidx9 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource8, i64 0, i64 0, !dbg !7479
  %start10 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx9, i32 0, i32 0, !dbg !7479
  %9 = load i64, i64* %start10, align 8, !dbg !7479
  %cmp11 = icmp eq i64 %7, %9, !dbg !7479
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !7480

cond.true:                                        ; preds = %land.lhs.true5
  br i1 false, label %if.then19, label %if.end22, !dbg !7479

cond.false:                                       ; preds = %land.lhs.true5, %land.lhs.true
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7479
  %resource12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 44, !dbg !7479
  %arrayidx13 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource12, i64 0, i64 0, !dbg !7479
  %end14 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx13, i32 0, i32 1, !dbg !7479
  %11 = load i64, i64* %end14, align 8, !dbg !7479
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7479
  %resource15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !7479
  %arrayidx16 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource15, i64 0, i64 0, !dbg !7479
  %start17 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx16, i32 0, i32 0, !dbg !7479
  %13 = load i64, i64* %start17, align 8, !dbg !7479
  %sub = sub i64 %11, %13, !dbg !7479
  %add = add i64 %sub, 1, !dbg !7479
  %tobool18 = icmp ne i64 %add, 0, !dbg !7479
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !7480

if.then19:                                        ; preds = %cond.false, %cond.true
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7481
  %resource20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 44, !dbg !7482
  %arrayidx21 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource20, i64 0, i64 0, !dbg !7481
  %call = call i32 @insert_resource(%struct.resource* @iomem_resource, %struct.resource* %arrayidx21) #9, !dbg !7483
  br label %if.end22, !dbg !7483

if.end22:                                         ; preds = %if.then19, %cond.false, %cond.true, %if.end
  store i32 1, i32* %i, align 4, !dbg !7484
  br label %for.cond, !dbg !7486

for.cond:                                         ; preds = %for.inc, %if.end22
  %15 = load i32, i32* %i, align 4, !dbg !7487
  %cmp23 = icmp slt i32 %15, 6, !dbg !7489
  br i1 %cmp23, label %for.body, label %for.end, !dbg !7490

for.body:                                         ; preds = %for.cond
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7491
  %resource24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 44, !dbg !7492
  %17 = load i32, i32* %i, align 4, !dbg !7493
  %idxprom = sext i32 %17 to i64, !dbg !7491
  %arrayidx25 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource24, i64 0, i64 %idxprom, !dbg !7491
  %18 = bitcast %struct.resource* %arrayidx25 to i8*, !dbg !7494
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 64, i1 false), !dbg !7494
  br label %for.inc, !dbg !7494

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !7495
  %inc = add i32 %19, 1, !dbg !7495
  store i32 %inc, i32* %i, align 4, !dbg !7495
  br label %for.cond, !dbg !7496, !llvm.loop !7497

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !7499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_pcie_mch(%struct.pci_dev* %pdev) #0 !dbg !7500 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7501, metadata !DIExpression()), !dbg !7502
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7503
  %no_msi = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !7504
  %1 = bitcast [5 x i8]* %no_msi to i40*, !dbg !7504
  %bf.load = load i40, i40* %1, align 1, !dbg !7505
  %bf.clear = and i40 %bf.load, -65, !dbg !7505
  %bf.set = or i40 %bf.clear, 64, !dbg !7505
  store i40 %bf.set, i40* %1, align 1, !dbg !7505
  ret void, !dbg !7506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_pcie_pxh(%struct.pci_dev* %dev) #0 !dbg !7507 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7508, metadata !DIExpression()), !dbg !7509
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7510
  %no_msi = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !7511
  %1 = bitcast [5 x i8]* %no_msi to i40*, !dbg !7511
  %bf.load = load i40, i40* %1, align 1, !dbg !7512
  %bf.clear = and i40 %bf.load, -65, !dbg !7512
  %bf.set = or i40 %bf.clear, 64, !dbg !7512
  store i40 %bf.set, i40* %1, align 1, !dbg !7512
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7513
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !7513
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.72, i64 0, i64 0)) #10, !dbg !7513
  ret void, !dbg !7514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_intel_pcie_pm(%struct.pci_dev* %dev) #0 !dbg !7515 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7516, metadata !DIExpression()), !dbg !7517
  store i32 120, i32* @pci_pm_d3hot_delay, align 4, !dbg !7518
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7519
  %no_d1d2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 29, !dbg !7520
  %1 = bitcast i24* %no_d1d2 to i32*, !dbg !7520
  %bf.load = load i32, i32* %1, align 2, !dbg !7521
  %bf.clear = and i32 %bf.load, -257, !dbg !7521
  %bf.set = or i32 %bf.clear, 256, !dbg !7521
  store i32 %bf.set, i32* %1, align 2, !dbg !7521
  ret void, !dbg !7522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_radeon_pm(%struct.pci_dev* %dev) #0 !dbg !7523 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7524, metadata !DIExpression()), !dbg !7525
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7526
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 9, !dbg !7528
  %1 = load i16, i16* %subsystem_vendor, align 8, !dbg !7528
  %conv = zext i16 %1 to i32, !dbg !7526
  %cmp = icmp eq i32 %conv, 4203, !dbg !7529
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7530

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7531
  %subsystem_device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 10, !dbg !7532
  %3 = load i16, i16* %subsystem_device, align 2, !dbg !7532
  %conv2 = zext i16 %3 to i32, !dbg !7531
  %cmp3 = icmp eq i32 %conv2, 226, !dbg !7533
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7534

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7535
  call void @quirk_d3hot_delay(%struct.pci_dev* %4, i32 20) #9, !dbg !7536
  br label %if.end, !dbg !7536

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !7537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_ryzen_xhci_d3hot(%struct.pci_dev* %dev) #0 !dbg !7538 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7539, metadata !DIExpression()), !dbg !7540
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7541
  call void @quirk_d3hot_delay(%struct.pci_dev* %0, i32 20) #9, !dbg !7542
  ret void, !dbg !7543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_reroute_to_boot_interrupts_intel(%struct.pci_dev* %dev) #0 !dbg !7544 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7545, metadata !DIExpression()), !dbg !7546
  %call = call i32 @dmi_check_system(%struct.dmi_system_id* getelementptr inbounds ([2 x %struct.dmi_system_id], [2 x %struct.dmi_system_id]* bitcast ([2 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }]* @boot_interrupt_dmi_table to [2 x %struct.dmi_system_id]*), i64 0, i64 0)) #9, !dbg !7547
  %0 = load i32, i32* @noioapicquirk, align 4, !dbg !7548
  %tobool = icmp ne i32 %0, 0, !dbg !7548
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7550

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @noioapicreroute, align 4, !dbg !7551
  %tobool1 = icmp ne i32 %1, 0, !dbg !7551
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7552

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !7553

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7554
  %irq_reroute_variant = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !7555
  %3 = bitcast [5 x i8]* %irq_reroute_variant to i40*, !dbg !7555
  %bf.load = load i40, i40* %3, align 1, !dbg !7556
  %bf.clear = and i40 %bf.load, -3073, !dbg !7556
  %bf.set = or i40 %bf.clear, 1024, !dbg !7556
  store i40 %bf.set, i40* %3, align 1, !dbg !7556
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7557
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !7557
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7557
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 7, !dbg !7557
  %6 = load i16, i16* %vendor, align 4, !dbg !7557
  %conv = zext i16 %6 to i32, !dbg !7557
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7557
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 8, !dbg !7557
  %8 = load i16, i16* %device, align 2, !dbg !7557
  %conv3 = zext i16 %8 to i32, !dbg !7557
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.74, i64 0, i64 0), i32 %conv, i32 %conv3) #10, !dbg !7557
  br label %return, !dbg !7558

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_disable_intel_boot_interrupt(%struct.pci_dev* %dev) #0 !dbg !7559 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pci_config_word = alloca i16, align 2
  %pci_config_dword = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7560, metadata !DIExpression()), !dbg !7561
  call void @llvm.dbg.declare(metadata i16* %pci_config_word, metadata !7562, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.declare(metadata i32* %pci_config_dword, metadata !7564, metadata !DIExpression()), !dbg !7565
  %0 = load i32, i32* @noioapicquirk, align 4, !dbg !7566
  %tobool = icmp ne i32 %0, 0, !dbg !7566
  br i1 %tobool, label %if.then, label %if.end, !dbg !7568

if.then:                                          ; preds = %entry
  br label %return, !dbg !7569

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7570
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 8, !dbg !7571
  %2 = load i16, i16* %device, align 2, !dbg !7571
  %conv = zext i16 %2 to i32, !dbg !7570
  switch i32 %conv, label %sw.default [
    i32 9644, label %sw.bb
    i32 15400, label %sw.bb4
    i32 3624, label %sw.bb4
    i32 12072, label %sw.bb4
    i32 28456, label %sw.bb4
    i32 8244, label %sw.bb4
  ], !dbg !7572

sw.bb:                                            ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7573
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %3, i32 64, i16* %pci_config_word) #9, !dbg !7575
  %4 = load i16, i16* %pci_config_word, align 2, !dbg !7576
  %conv1 = zext i16 %4 to i32, !dbg !7576
  %or = or i32 %conv1, 16384, !dbg !7576
  %conv2 = trunc i32 %or to i16, !dbg !7576
  store i16 %conv2, i16* %pci_config_word, align 2, !dbg !7576
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7577
  %6 = load i16, i16* %pci_config_word, align 2, !dbg !7578
  %call3 = call i32 @pci_write_config_word(%struct.pci_dev* %5, i32 64, i16 zeroext %6) #9, !dbg !7579
  br label %sw.epilog, !dbg !7580

sw.bb4:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7581
  %call5 = call i32 @pci_read_config_dword(%struct.pci_dev* %7, i32 332, i32* %pci_config_dword) #9, !dbg !7582
  %8 = load i32, i32* %pci_config_dword, align 4, !dbg !7583
  %or6 = or i32 %8, 33554432, !dbg !7583
  store i32 %or6, i32* %pci_config_dword, align 4, !dbg !7583
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7584
  %10 = load i32, i32* %pci_config_dword, align 4, !dbg !7585
  %call7 = call i32 @pci_write_config_dword(%struct.pci_dev* %9, i32 332, i32 %10) #9, !dbg !7586
  br label %sw.epilog, !dbg !7587

sw.default:                                       ; preds = %if.end
  br label %return, !dbg !7588

sw.epilog:                                        ; preds = %sw.bb4, %sw.bb
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7589
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !7589
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7589
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 7, !dbg !7589
  %13 = load i16, i16* %vendor, align 4, !dbg !7589
  %conv9 = zext i16 %13 to i32, !dbg !7589
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7589
  %device10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 8, !dbg !7589
  %15 = load i16, i16* %device10, align 2, !dbg !7589
  %conv11 = zext i16 %15 to i32, !dbg !7589
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.78, i64 0, i64 0), i32 %conv9, i32 %conv11) #10, !dbg !7589
  br label %return, !dbg !7590

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  ret void, !dbg !7590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_disable_broadcom_boot_interrupt(%struct.pci_dev* %dev) #0 !dbg !7591 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pci_config_dword = alloca i32, align 4
  %irq = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7592, metadata !DIExpression()), !dbg !7593
  call void @llvm.dbg.declare(metadata i32* %pci_config_dword, metadata !7594, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.declare(metadata i8* %irq, metadata !7596, metadata !DIExpression()), !dbg !7597
  %0 = load i32, i32* @noioapicquirk, align 4, !dbg !7598
  %tobool = icmp ne i32 %0, 0, !dbg !7598
  br i1 %tobool, label %if.then, label %if.end, !dbg !7600

if.then:                                          ; preds = %entry
  br label %return, !dbg !7601

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7602
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %1, i32 100, i32* %pci_config_dword) #9, !dbg !7603
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7604
  %3 = load i32, i32* %pci_config_dword, align 4, !dbg !7605
  %or = or i32 %3, 1, !dbg !7606
  %call1 = call i32 @pci_write_config_dword(%struct.pci_dev* %2, i32 100, i32 %or) #9, !dbg !7607
  store i8 16, i8* %irq, align 1, !dbg !7608
  br label %for.cond, !dbg !7610

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i8, i8* %irq, align 1, !dbg !7611
  %conv = zext i8 %4 to i32, !dbg !7611
  %cmp = icmp slt i32 %conv, 48, !dbg !7613
  br i1 %cmp, label %for.body, label %for.end, !dbg !7614

for.body:                                         ; preds = %for.cond
  %5 = load i8, i8* %irq, align 1, !dbg !7615
  call void @outb(i8 zeroext %5, i32 3072) #9, !dbg !7617
  call void @outb(i8 zeroext 0, i32 3073) #9, !dbg !7618
  br label %for.inc, !dbg !7619

for.inc:                                          ; preds = %for.body
  %6 = load i8, i8* %irq, align 1, !dbg !7620
  %inc = add i8 %6, 1, !dbg !7620
  store i8 %inc, i8* %irq, align 1, !dbg !7620
  br label %for.cond, !dbg !7621, !llvm.loop !7622

for.end:                                          ; preds = %for.cond
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7624
  %8 = load i32, i32* %pci_config_dword, align 4, !dbg !7625
  %call3 = call i32 @pci_write_config_dword(%struct.pci_dev* %7, i32 100, i32 %8) #9, !dbg !7626
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7627
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !7627
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7627
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 7, !dbg !7627
  %11 = load i16, i16* %vendor, align 4, !dbg !7627
  %conv5 = zext i16 %11 to i32, !dbg !7627
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7627
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 8, !dbg !7627
  %13 = load i16, i16* %device, align 2, !dbg !7627
  %conv6 = zext i16 %13 to i32, !dbg !7627
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.78, i64 0, i64 0), i32 %conv5, i32 %conv6) #10, !dbg !7627
  br label %return, !dbg !7628

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !7628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_disable_amd_813x_boot_interrupt(%struct.pci_dev* %dev) #0 !dbg !7629 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pci_config_dword = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.declare(metadata i32* %pci_config_dword, metadata !7632, metadata !DIExpression()), !dbg !7633
  %0 = load i32, i32* @noioapicquirk, align 4, !dbg !7634
  %tobool = icmp ne i32 %0, 0, !dbg !7634
  br i1 %tobool, label %if.then, label %if.end, !dbg !7636

if.then:                                          ; preds = %entry
  br label %return, !dbg !7637

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7638
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 12, !dbg !7640
  %2 = load i8, i8* %revision, align 8, !dbg !7640
  %conv = zext i8 %2 to i32, !dbg !7638
  %cmp = icmp eq i32 %conv, 18, !dbg !7641
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !7642

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7643
  %revision2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 12, !dbg !7644
  %4 = load i8, i8* %revision2, align 8, !dbg !7644
  %conv3 = zext i8 %4 to i32, !dbg !7643
  %cmp4 = icmp eq i32 %conv3, 19, !dbg !7645
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !7646

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  br label %return, !dbg !7647

if.end7:                                          ; preds = %lor.lhs.false
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7648
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %5, i32 64, i32* %pci_config_dword) #9, !dbg !7649
  %6 = load i32, i32* %pci_config_dword, align 4, !dbg !7650
  %and = and i32 %6, -2, !dbg !7650
  store i32 %and, i32* %pci_config_dword, align 4, !dbg !7650
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7651
  %8 = load i32, i32* %pci_config_dword, align 4, !dbg !7652
  %call8 = call i32 @pci_write_config_dword(%struct.pci_dev* %7, i32 64, i32 %8) #9, !dbg !7653
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7654
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !7654
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7654
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 7, !dbg !7654
  %11 = load i16, i16* %vendor, align 4, !dbg !7654
  %conv10 = zext i16 %11 to i32, !dbg !7654
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7654
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 8, !dbg !7654
  %13 = load i16, i16* %device, align 2, !dbg !7654
  %conv11 = zext i16 %13 to i32, !dbg !7654
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev9, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.78, i64 0, i64 0), i32 %conv10, i32 %conv11) #10, !dbg !7654
  br label %return, !dbg !7655

return:                                           ; preds = %if.end7, %if.then6, %if.then
  ret void, !dbg !7655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_disable_amd_8111_boot_interrupt(%struct.pci_dev* %dev) #0 !dbg !7656 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pci_config_word = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7657, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.declare(metadata i16* %pci_config_word, metadata !7659, metadata !DIExpression()), !dbg !7660
  %0 = load i32, i32* @noioapicquirk, align 4, !dbg !7661
  %tobool = icmp ne i32 %0, 0, !dbg !7661
  br i1 %tobool, label %if.then, label %if.end, !dbg !7663

if.then:                                          ; preds = %entry
  br label %return, !dbg !7664

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7665
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %1, i32 86, i16* %pci_config_word) #9, !dbg !7666
  %2 = load i16, i16* %pci_config_word, align 2, !dbg !7667
  %tobool1 = icmp ne i16 %2, 0, !dbg !7667
  br i1 %tobool1, label %if.end5, label %if.then2, !dbg !7669

if.then2:                                         ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7670
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !7670
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7670
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 7, !dbg !7670
  %5 = load i16, i16* %vendor, align 4, !dbg !7670
  %conv = zext i16 %5 to i32, !dbg !7670
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7670
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 8, !dbg !7670
  %7 = load i16, i16* %device, align 2, !dbg !7670
  %conv4 = zext i16 %7 to i32, !dbg !7670
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev3, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.79, i64 0, i64 0), i32 %conv, i32 %conv4) #10, !dbg !7670
  br label %return, !dbg !7672

if.end5:                                          ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7673
  %call6 = call i32 @pci_write_config_word(%struct.pci_dev* %8, i32 86, i16 zeroext 0) #9, !dbg !7674
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7675
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !7675
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7675
  %vendor8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 7, !dbg !7675
  %11 = load i16, i16* %vendor8, align 4, !dbg !7675
  %conv9 = zext i16 %11 to i32, !dbg !7675
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7675
  %device10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 8, !dbg !7675
  %13 = load i16, i16* %device10, align 2, !dbg !7675
  %conv11 = zext i16 %13 to i32, !dbg !7675
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev7, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.78, i64 0, i64 0), i32 %conv9, i32 %conv11) #10, !dbg !7675
  br label %return, !dbg !7676

return:                                           ; preds = %if.end5, %if.then2, %if.then
  ret void, !dbg !7676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_tc86c001_ide(%struct.pci_dev* %dev) #0 !dbg !7677 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %r = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7678, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !7680, metadata !DIExpression()), !dbg !7681
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7682
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !7683
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !7682
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !7681
  %1 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7684
  %start = getelementptr inbounds %struct.resource, %struct.resource* %1, i32 0, i32 0, !dbg !7686
  %2 = load i64, i64* %start, align 8, !dbg !7686
  %and = and i64 %2, 8, !dbg !7687
  %tobool = icmp ne i64 %and, 0, !dbg !7687
  br i1 %tobool, label %if.then, label %if.end, !dbg !7688

if.then:                                          ; preds = %entry
  %3 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7689
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 3, !dbg !7691
  %4 = load i64, i64* %flags, align 8, !dbg !7692
  %or = or i64 %4, 536870912, !dbg !7692
  store i64 %or, i64* %flags, align 8, !dbg !7692
  %5 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7693
  %start1 = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 0, !dbg !7694
  store i64 0, i64* %start1, align 8, !dbg !7695
  %6 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7696
  %end = getelementptr inbounds %struct.resource, %struct.resource* %6, i32 0, i32 1, !dbg !7697
  store i64 15, i64* %end, align 8, !dbg !7698
  br label %if.end, !dbg !7699

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7700
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_plx_pci9050(%struct.pci_dev* %dev) #0 !dbg !7701 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bar = alloca i32, align 4
  %r = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7702, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.declare(metadata i32* %bar, metadata !7704, metadata !DIExpression()), !dbg !7705
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7706
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 12, !dbg !7708
  %1 = load i8, i8* %revision, align 8, !dbg !7708
  %conv = zext i8 %1 to i32, !dbg !7706
  %cmp = icmp sge i32 %conv, 2, !dbg !7709
  br i1 %cmp, label %if.then, label %if.end, !dbg !7710

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !7711

if.end:                                           ; preds = %entry
  store i32 0, i32* %bar, align 4, !dbg !7712
  br label %for.cond, !dbg !7714

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %bar, align 4, !dbg !7715
  %cmp2 = icmp ule i32 %2, 1, !dbg !7717
  br i1 %cmp2, label %for.body, label %for.end, !dbg !7718

for.body:                                         ; preds = %for.cond
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7719
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 44, !dbg !7719
  %4 = load i32, i32* %bar, align 4, !dbg !7719
  %idxprom = zext i32 %4 to i64, !dbg !7719
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !7719
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !7719
  %5 = load i64, i64* %start, align 8, !dbg !7719
  %cmp4 = icmp eq i64 %5, 0, !dbg !7719
  br i1 %cmp4, label %land.lhs.true, label %cond.false, !dbg !7719

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7719
  %resource6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !7719
  %7 = load i32, i32* %bar, align 4, !dbg !7719
  %idxprom7 = zext i32 %7 to i64, !dbg !7719
  %arrayidx8 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource6, i64 0, i64 %idxprom7, !dbg !7719
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx8, i32 0, i32 1, !dbg !7719
  %8 = load i64, i64* %end, align 8, !dbg !7719
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7719
  %resource9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 44, !dbg !7719
  %10 = load i32, i32* %bar, align 4, !dbg !7719
  %idxprom10 = zext i32 %10 to i64, !dbg !7719
  %arrayidx11 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource9, i64 0, i64 %idxprom10, !dbg !7719
  %start12 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx11, i32 0, i32 0, !dbg !7719
  %11 = load i64, i64* %start12, align 8, !dbg !7719
  %cmp13 = icmp eq i64 %8, %11, !dbg !7719
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !7719

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !7719

cond.false:                                       ; preds = %land.lhs.true, %for.body
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7719
  %resource15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !7719
  %13 = load i32, i32* %bar, align 4, !dbg !7719
  %idxprom16 = zext i32 %13 to i64, !dbg !7719
  %arrayidx17 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource15, i64 0, i64 %idxprom16, !dbg !7719
  %end18 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx17, i32 0, i32 1, !dbg !7719
  %14 = load i64, i64* %end18, align 8, !dbg !7719
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7719
  %resource19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 44, !dbg !7719
  %16 = load i32, i32* %bar, align 4, !dbg !7719
  %idxprom20 = zext i32 %16 to i64, !dbg !7719
  %arrayidx21 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource19, i64 0, i64 %idxprom20, !dbg !7719
  %start22 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx21, i32 0, i32 0, !dbg !7719
  %17 = load i64, i64* %start22, align 8, !dbg !7719
  %sub = sub i64 %14, %17, !dbg !7719
  %add = add i64 %sub, 1, !dbg !7719
  br label %cond.end, !dbg !7719

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !7719
  %cmp23 = icmp eq i64 %cond, 128, !dbg !7721
  br i1 %cmp23, label %land.lhs.true25, label %if.end37, !dbg !7722

land.lhs.true25:                                  ; preds = %cond.end
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7723
  %resource26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 44, !dbg !7723
  %19 = load i32, i32* %bar, align 4, !dbg !7723
  %idxprom27 = zext i32 %19 to i64, !dbg !7723
  %arrayidx28 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource26, i64 0, i64 %idxprom27, !dbg !7723
  %start29 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx28, i32 0, i32 0, !dbg !7723
  %20 = load i64, i64* %start29, align 8, !dbg !7723
  %and = and i64 %20, 128, !dbg !7724
  %tobool = icmp ne i64 %and, 0, !dbg !7724
  br i1 %tobool, label %if.then30, label %if.end37, !dbg !7725

if.then30:                                        ; preds = %land.lhs.true25
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !7726, metadata !DIExpression()), !dbg !7728
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7729
  %resource31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 44, !dbg !7730
  %22 = load i32, i32* %bar, align 4, !dbg !7731
  %idxprom32 = zext i32 %22 to i64, !dbg !7729
  %arrayidx33 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource31, i64 0, i64 %idxprom32, !dbg !7729
  store %struct.resource* %arrayidx33, %struct.resource** %r, align 8, !dbg !7728
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7732
  %dev34 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !7732
  %24 = load i32, i32* %bar, align 4, !dbg !7732
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev34, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.80, i64 0, i64 0), i32 %24) #10, !dbg !7732
  %25 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7733
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %25, i32 0, i32 3, !dbg !7734
  %26 = load i64, i64* %flags, align 8, !dbg !7735
  %or = or i64 %26, 536870912, !dbg !7735
  store i64 %or, i64* %flags, align 8, !dbg !7735
  %27 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7736
  %start35 = getelementptr inbounds %struct.resource, %struct.resource* %27, i32 0, i32 0, !dbg !7737
  store i64 0, i64* %start35, align 8, !dbg !7738
  %28 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7739
  %end36 = getelementptr inbounds %struct.resource, %struct.resource* %28, i32 0, i32 1, !dbg !7740
  store i64 255, i64* %end36, align 8, !dbg !7741
  br label %if.end37, !dbg !7742

if.end37:                                         ; preds = %if.then30, %land.lhs.true25, %cond.end
  br label %for.inc, !dbg !7743

for.inc:                                          ; preds = %if.end37
  %29 = load i32, i32* %bar, align 4, !dbg !7744
  %inc = add i32 %29, 1, !dbg !7744
  store i32 %inc, i32* %bar, align 4, !dbg !7744
  br label %for.cond, !dbg !7745, !llvm.loop !7746

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !7748
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_netmos(%struct.pci_dev* %dev) #0 !dbg !7749 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %num_parallel = alloca i32, align 4
  %num_serial = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7750, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.declare(metadata i32* %num_parallel, metadata !7752, metadata !DIExpression()), !dbg !7753
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7754
  %subsystem_device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 10, !dbg !7755
  %1 = load i16, i16* %subsystem_device, align 2, !dbg !7755
  %conv = zext i16 %1 to i32, !dbg !7754
  %and = and i32 %conv, 240, !dbg !7756
  %shr = ashr i32 %and, 4, !dbg !7757
  store i32 %shr, i32* %num_parallel, align 4, !dbg !7753
  call void @llvm.dbg.declare(metadata i32* %num_serial, metadata !7758, metadata !DIExpression()), !dbg !7759
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7760
  %subsystem_device1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 10, !dbg !7761
  %3 = load i16, i16* %subsystem_device1, align 2, !dbg !7761
  %conv2 = zext i16 %3 to i32, !dbg !7760
  %and3 = and i32 %conv2, 15, !dbg !7762
  store i32 %and3, i32* %num_serial, align 4, !dbg !7759
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7763
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 8, !dbg !7764
  %5 = load i16, i16* %device, align 2, !dbg !7764
  %conv4 = zext i16 %5 to i32, !dbg !7763
  switch i32 %conv4, label %sw.epilog [
    i32 38965, label %sw.bb
    i32 38709, label %sw.bb11
    i32 38725, label %sw.bb11
    i32 38981, label %sw.bb11
    i32 38997, label %sw.bb11
  ], !dbg !7765

sw.bb:                                            ; preds = %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7766
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 9, !dbg !7769
  %7 = load i16, i16* %subsystem_vendor, align 8, !dbg !7769
  %conv5 = zext i16 %7 to i32, !dbg !7766
  %cmp = icmp eq i32 %conv5, 4116, !dbg !7770
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7771

land.lhs.true:                                    ; preds = %sw.bb
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7772
  %subsystem_device7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 10, !dbg !7773
  %9 = load i16, i16* %subsystem_device7, align 2, !dbg !7773
  %conv8 = zext i16 %9 to i32, !dbg !7772
  %cmp9 = icmp eq i32 %conv8, 665, !dbg !7774
  br i1 %cmp9, label %if.then, label %if.end, !dbg !7775

if.then:                                          ; preds = %land.lhs.true
  br label %sw.epilog, !dbg !7776

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  br label %sw.bb11, !dbg !7777

sw.bb11:                                          ; preds = %entry, %entry, %entry, %entry, %if.end
  %10 = load i32, i32* %num_parallel, align 4, !dbg !7778
  %tobool = icmp ne i32 %10, 0, !dbg !7778
  br i1 %tobool, label %if.then12, label %if.end18, !dbg !7780

if.then12:                                        ; preds = %sw.bb11
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7781
  %dev13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !7781
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7781
  %device14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 8, !dbg !7781
  %13 = load i16, i16* %device14, align 2, !dbg !7781
  %conv15 = zext i16 %13 to i32, !dbg !7781
  %14 = load i32, i32* %num_parallel, align 4, !dbg !7781
  %15 = load i32, i32* %num_serial, align 4, !dbg !7781
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev13, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.81, i64 0, i64 0), i32 %conv15, i32 %14, i32 %15) #10, !dbg !7781
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7783
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 11, !dbg !7784
  %17 = load i32, i32* %class, align 4, !dbg !7784
  %and16 = and i32 %17, 255, !dbg !7785
  %or = or i32 491520, %and16, !dbg !7786
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7787
  %class17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 11, !dbg !7788
  store i32 %or, i32* %class17, align 4, !dbg !7789
  br label %if.end18, !dbg !7790

if.end18:                                         ; preds = %if.then12, %sw.bb11
  br label %sw.epilog, !dbg !7791

sw.epilog:                                        ; preds = %if.then, %if.end18, %entry
  ret void, !dbg !7792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_e100_interrupt(%struct.pci_dev* %dev) #0 !dbg !7793 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %command = alloca i16, align 2
  %pmcsr = alloca i16, align 2
  %csr = alloca i8*, align 8
  %cmd_hi = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7794, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.declare(metadata i16* %command, metadata !7796, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.declare(metadata i16* %pmcsr, metadata !7798, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.declare(metadata i8** %csr, metadata !7800, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.declare(metadata i8* %cmd_hi, metadata !7802, metadata !DIExpression()), !dbg !7803
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7804
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 8, !dbg !7805
  %1 = load i16, i16* %device, align 2, !dbg !7805
  %conv = zext i16 %1 to i32, !dbg !7804
  switch i32 %conv, label %sw.default [
    i32 4137, label %sw.bb
    i32 4185, label %sw.bb4
    i32 4617, label %sw.bb7
    i32 4649, label %sw.bb7
    i32 9289, label %sw.bb7
    i32 9305, label %sw.bb7
    i32 9309, label %sw.bb7
    i32 10204, label %sw.bb7
    i32 4241, label %sw.bb6
    i32 4242, label %sw.bb6
    i32 4243, label %sw.bb6
    i32 4244, label %sw.bb6
    i32 4245, label %sw.bb6
    i32 4196, label %sw.bb5
    i32 4197, label %sw.bb5
    i32 4198, label %sw.bb5
    i32 4199, label %sw.bb5
    i32 4200, label %sw.bb5
    i32 4201, label %sw.bb5
    i32 4202, label %sw.bb5
    i32 4203, label %sw.bb5
    i32 4176, label %sw.bb3
    i32 4177, label %sw.bb3
    i32 4178, label %sw.bb3
    i32 4179, label %sw.bb3
    i32 4180, label %sw.bb3
    i32 4181, label %sw.bb3
    i32 4182, label %sw.bb3
    i32 4183, label %sw.bb3
    i32 4152, label %sw.bb2
    i32 4153, label %sw.bb2
    i32 4154, label %sw.bb2
    i32 4155, label %sw.bb2
    i32 4156, label %sw.bb2
    i32 4157, label %sw.bb2
    i32 4158, label %sw.bb2
    i32 4144, label %sw.bb1
    i32 4145, label %sw.bb1
    i32 4146, label %sw.bb1
    i32 4147, label %sw.bb1
    i32 4148, label %sw.bb1
  ], !dbg !7806

sw.bb:                                            ; preds = %entry
  br label %sw.bb1, !dbg !7807

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %sw.bb
  br label %sw.bb2, !dbg !7807

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb1
  br label %sw.bb3, !dbg !7807

sw.bb3:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb2
  br label %sw.bb4, !dbg !7807

sw.bb4:                                           ; preds = %entry, %sw.bb3
  br label %sw.bb5, !dbg !7807

sw.bb5:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb4
  br label %sw.bb6, !dbg !7807

sw.bb6:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %sw.bb5
  br label %sw.bb7, !dbg !7807

sw.bb7:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb6
  br label %sw.epilog, !dbg !7808

sw.default:                                       ; preds = %entry
  br label %return, !dbg !7810

sw.epilog:                                        ; preds = %sw.bb7
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7811
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 4, i16* %command) #9, !dbg !7812
  %3 = load i16, i16* %command, align 2, !dbg !7813
  %conv8 = zext i16 %3 to i32, !dbg !7813
  %and = and i32 %conv8, 2, !dbg !7815
  %tobool = icmp ne i32 %and, 0, !dbg !7815
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7816

lor.lhs.false:                                    ; preds = %sw.epilog
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7817
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 44, !dbg !7817
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !7817
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !7817
  %5 = load i64, i64* %start, align 8, !dbg !7817
  %tobool9 = icmp ne i64 %5, 0, !dbg !7817
  br i1 %tobool9, label %if.end, label %if.then, !dbg !7818

if.then:                                          ; preds = %lor.lhs.false, %sw.epilog
  br label %return, !dbg !7819

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7820
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 28, !dbg !7822
  %7 = load i8, i8* %pm_cap, align 1, !dbg !7822
  %tobool10 = icmp ne i8 %7, 0, !dbg !7820
  br i1 %tobool10, label %if.then11, label %if.end20, !dbg !7823

if.then11:                                        ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7824
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7826
  %pm_cap12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 28, !dbg !7827
  %10 = load i8, i8* %pm_cap12, align 1, !dbg !7827
  %conv13 = zext i8 %10 to i32, !dbg !7826
  %add = add i32 %conv13, 4, !dbg !7828
  %call14 = call i32 @pci_read_config_word(%struct.pci_dev* %8, i32 %add, i16* %pmcsr) #9, !dbg !7829
  %11 = load i16, i16* %pmcsr, align 2, !dbg !7830
  %conv15 = zext i16 %11 to i32, !dbg !7830
  %and16 = and i32 %conv15, 3, !dbg !7832
  %cmp = icmp ne i32 %and16, 0, !dbg !7833
  br i1 %cmp, label %if.then18, label %if.end19, !dbg !7834

if.then18:                                        ; preds = %if.then11
  br label %return, !dbg !7835

if.end19:                                         ; preds = %if.then11
  br label %if.end20, !dbg !7836

if.end20:                                         ; preds = %if.end19, %if.end
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7837
  %resource21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !7837
  %arrayidx22 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource21, i64 0, i64 0, !dbg !7837
  %start23 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx22, i32 0, i32 0, !dbg !7837
  %13 = load i64, i64* %start23, align 8, !dbg !7837
  %call24 = call i8* @ioremap(i64 %13, i64 8) #9, !dbg !7838
  store i8* %call24, i8** %csr, align 8, !dbg !7839
  %14 = load i8*, i8** %csr, align 8, !dbg !7840
  %tobool25 = icmp ne i8* %14, null, !dbg !7840
  br i1 %tobool25, label %if.end28, label %if.then26, !dbg !7842

if.then26:                                        ; preds = %if.end20
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7843
  %dev27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !7843
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev27, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.82, i64 0, i64 0)) #10, !dbg !7843
  br label %return, !dbg !7845

if.end28:                                         ; preds = %if.end20
  %16 = load i8*, i8** %csr, align 8, !dbg !7846
  %add.ptr = getelementptr i8, i8* %16, i64 3, !dbg !7847
  %call29 = call zeroext i8 @readb(i8* %add.ptr) #9, !dbg !7848
  store i8 %call29, i8* %cmd_hi, align 1, !dbg !7849
  %17 = load i8, i8* %cmd_hi, align 1, !dbg !7850
  %conv30 = zext i8 %17 to i32, !dbg !7850
  %cmp31 = icmp eq i32 %conv30, 0, !dbg !7852
  br i1 %cmp31, label %if.then33, label %if.end36, !dbg !7853

if.then33:                                        ; preds = %if.end28
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7854
  %dev34 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !7854
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev34, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.83, i64 0, i64 0)) #10, !dbg !7854
  %19 = load i8*, i8** %csr, align 8, !dbg !7856
  %add.ptr35 = getelementptr i8, i8* %19, i64 3, !dbg !7857
  call void @writeb(i8 zeroext 1, i8* %add.ptr35) #9, !dbg !7858
  br label %if.end36, !dbg !7859

if.end36:                                         ; preds = %if.then33, %if.end28
  %20 = load i8*, i8** %csr, align 8, !dbg !7860
  call void @iounmap(i8* %20) #9, !dbg !7861
  br label %return, !dbg !7862

return:                                           ; preds = %if.end36, %if.then26, %if.then18, %if.then, %sw.default
  ret void, !dbg !7862
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_disable_aspm_l0s(%struct.pci_dev* %dev) #0 !dbg !7863 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7864, metadata !DIExpression()), !dbg !7865
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7866
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !7866
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.84, i64 0, i64 0)) #10, !dbg !7866
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7867
  %call = call i32 @pci_disable_link_state(%struct.pci_dev* %1, i32 1) #9, !dbg !7868
  ret void, !dbg !7869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_disable_aspm_l0s_l1(%struct.pci_dev* %dev) #0 !dbg !7870 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7871, metadata !DIExpression()), !dbg !7872
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7873
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !7873
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.85, i64 0, i64 0)) #10, !dbg !7873
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7874
  %call = call i32 @pci_disable_link_state(%struct.pci_dev* %1, i32 3) #9, !dbg !7875
  ret void, !dbg !7876
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_enable_clear_retrain_link(%struct.pci_dev* %dev) #0 !dbg !7877 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7880
  %clear_retrain_link = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 29, !dbg !7881
  %1 = bitcast i24* %clear_retrain_link to i32*, !dbg !7881
  %bf.load = load i32, i32* %1, align 2, !dbg !7882
  %bf.clear = and i32 %bf.load, -262145, !dbg !7882
  %bf.set = or i32 %bf.clear, 262144, !dbg !7882
  store i32 %bf.set, i32* %1, align 2, !dbg !7882
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7883
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !7883
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.86, i64 0, i64 0)) #10, !dbg !7883
  ret void, !dbg !7884
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fixup_rev1_53c810(%struct.pci_dev* %dev) #0 !dbg !7885 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %class = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7886, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.declare(metadata i32* %class, metadata !7888, metadata !DIExpression()), !dbg !7889
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7890
  %class1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 11, !dbg !7891
  %1 = load i32, i32* %class1, align 4, !dbg !7891
  store i32 %1, i32* %class, align 4, !dbg !7889
  %2 = load i32, i32* %class, align 4, !dbg !7892
  %tobool = icmp ne i32 %2, 0, !dbg !7892
  br i1 %tobool, label %if.then, label %if.end, !dbg !7894

if.then:                                          ; preds = %entry
  br label %return, !dbg !7895

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7896
  %class2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 11, !dbg !7897
  store i32 65536, i32* %class2, align 4, !dbg !7898
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7899
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !7899
  %5 = load i32, i32* %class, align 4, !dbg !7899
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7899
  %class4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 11, !dbg !7899
  %7 = load i32, i32* %class4, align 4, !dbg !7899
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev3, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.87, i64 0, i64 0), i32 %5, i32 %7) #10, !dbg !7899
  br label %return, !dbg !7900

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7900
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_p64h2_1k_io(%struct.pci_dev* %dev) #0 !dbg !7901 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %en1k = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7902, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.declare(metadata i16* %en1k, metadata !7904, metadata !DIExpression()), !dbg !7905
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7906
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 64, i16* %en1k) #9, !dbg !7907
  %1 = load i16, i16* %en1k, align 2, !dbg !7908
  %conv = zext i16 %1 to i32, !dbg !7908
  %and = and i32 %conv, 512, !dbg !7910
  %tobool = icmp ne i32 %and, 0, !dbg !7910
  br i1 %tobool, label %if.then, label %if.end, !dbg !7911

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7912
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !7912
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.88, i64 0, i64 0)) #10, !dbg !7912
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7914
  %io_window_1k = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 46, !dbg !7915
  %4 = bitcast [5 x i8]* %io_window_1k to i40*, !dbg !7915
  %bf.load = load i40, i40* %4, align 1, !dbg !7916
  %bf.clear = and i40 %bf.load, -1073741825, !dbg !7916
  %bf.set = or i40 %bf.clear, 1073741824, !dbg !7916
  store i40 %bf.set, i40* %4, align 1, !dbg !7916
  br label %if.end, !dbg !7917

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_nvidia_ck804_pcie_aer_ext_cap(%struct.pci_dev* %dev) #0 !dbg !7919 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %b = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7920, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.declare(metadata i8* %b, metadata !7922, metadata !DIExpression()), !dbg !7924
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7925
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 3905, i8* %b) #9, !dbg !7927
  %cmp = icmp eq i32 %call, 0, !dbg !7928
  br i1 %cmp, label %if.then, label %if.end6, !dbg !7929

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %b, align 1, !dbg !7930
  %conv = zext i8 %1 to i32, !dbg !7930
  %and = and i32 %conv, 32, !dbg !7933
  %tobool = icmp ne i32 %and, 0, !dbg !7933
  br i1 %tobool, label %if.end, label %if.then1, !dbg !7934

if.then1:                                         ; preds = %if.then
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7935
  %3 = load i8, i8* %b, align 1, !dbg !7937
  %conv2 = zext i8 %3 to i32, !dbg !7937
  %or = or i32 %conv2, 32, !dbg !7938
  %conv3 = trunc i32 %or to i8, !dbg !7937
  %call4 = call i32 @pci_write_config_byte(%struct.pci_dev* %2, i32 3905, i8 zeroext %conv3) #9, !dbg !7939
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7940
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !7940
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.89, i64 0, i64 0)) #10, !dbg !7940
  br label %if.end, !dbg !7941

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end6, !dbg !7942

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !7943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_via_cx700_pci_parking_caching(%struct.pci_dev* %dev) #0 !dbg !7944 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %p = alloca %struct.pci_dev*, align 8
  %b = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7945, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %p, metadata !7947, metadata !DIExpression()), !dbg !7948
  %call = call %struct.pci_dev* @pci_get_device(i32 4358, i32 12548, %struct.pci_dev* null) #9, !dbg !7949
  store %struct.pci_dev* %call, %struct.pci_dev** %p, align 8, !dbg !7948
  call void @llvm.dbg.declare(metadata i8* %b, metadata !7950, metadata !DIExpression()), !dbg !7951
  %0 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !7952
  %call1 = call %struct.pci_dev* @pci_get_device(i32 4358, i32 12548, %struct.pci_dev* %0) #9, !dbg !7953
  store %struct.pci_dev* %call1, %struct.pci_dev** %p, align 8, !dbg !7954
  %1 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !7955
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !7955
  br i1 %tobool, label %if.end, label %if.then, !dbg !7957

if.then:                                          ; preds = %entry
  br label %if.end25, !dbg !7958

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !7959
  call void @pci_dev_put(%struct.pci_dev* %2) #9, !dbg !7960
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7961
  %call2 = call i32 @pci_read_config_byte(%struct.pci_dev* %3, i32 118, i8* %b) #9, !dbg !7963
  %cmp = icmp eq i32 %call2, 0, !dbg !7964
  br i1 %cmp, label %if.then3, label %if.end11, !dbg !7965

if.then3:                                         ; preds = %if.end
  %4 = load i8, i8* %b, align 1, !dbg !7966
  %conv = zext i8 %4 to i32, !dbg !7966
  %and = and i32 %conv, 64, !dbg !7969
  %tobool4 = icmp ne i32 %and, 0, !dbg !7969
  br i1 %tobool4, label %if.then5, label %if.end10, !dbg !7970

if.then5:                                         ; preds = %if.then3
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7971
  %6 = load i8, i8* %b, align 1, !dbg !7973
  %conv6 = zext i8 %6 to i32, !dbg !7973
  %xor = xor i32 %conv6, 64, !dbg !7974
  %conv7 = trunc i32 %xor to i8, !dbg !7973
  %call8 = call i32 @pci_write_config_byte(%struct.pci_dev* %5, i32 118, i8 zeroext %conv7) #9, !dbg !7975
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7976
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !7976
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev9, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.90, i64 0, i64 0)) #10, !dbg !7976
  br label %if.end10, !dbg !7977

if.end10:                                         ; preds = %if.then5, %if.then3
  br label %if.end11, !dbg !7978

if.end11:                                         ; preds = %if.end10, %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7979
  %call12 = call i32 @pci_read_config_byte(%struct.pci_dev* %8, i32 114, i8* %b) #9, !dbg !7981
  %cmp13 = icmp eq i32 %call12, 0, !dbg !7982
  br i1 %cmp13, label %if.then15, label %if.end25, !dbg !7983

if.then15:                                        ; preds = %if.end11
  %9 = load i8, i8* %b, align 1, !dbg !7984
  %conv16 = zext i8 %9 to i32, !dbg !7984
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !7987
  br i1 %cmp17, label %if.then19, label %if.end24, !dbg !7988

if.then19:                                        ; preds = %if.then15
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7989
  %call20 = call i32 @pci_write_config_byte(%struct.pci_dev* %10, i32 114, i8 zeroext 0) #9, !dbg !7991
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7992
  %call21 = call i32 @pci_write_config_byte(%struct.pci_dev* %11, i32 117, i8 zeroext 1) #9, !dbg !7993
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7994
  %call22 = call i32 @pci_write_config_byte(%struct.pci_dev* %12, i32 119, i8 zeroext 0) #9, !dbg !7995
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7996
  %dev23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !7996
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev23, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.91, i64 0, i64 0)) #10, !dbg !7996
  br label %if.end24, !dbg !7997

if.end24:                                         ; preds = %if.then19, %if.then15
  br label %if.end25, !dbg !7998

if.end25:                                         ; preds = %if.then, %if.end24, %if.end11
  ret void, !dbg !7999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_brcm_5719_limit_mrrs(%struct.pci_dev* %dev) #0 !dbg !8000 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rev = alloca i32, align 4
  %readrq = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8001, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.declare(metadata i32* %rev, metadata !8003, metadata !DIExpression()), !dbg !8004
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8005
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 244, i32* %rev) #9, !dbg !8006
  %1 = load i32, i32* %rev, align 4, !dbg !8007
  %cmp = icmp eq i32 %1, 91328512, !dbg !8009
  br i1 %cmp, label %if.then, label %if.end5, !dbg !8010

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %readrq, metadata !8011, metadata !DIExpression()), !dbg !8013
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8014
  %call1 = call i32 @pcie_get_readrq(%struct.pci_dev* %2) #9, !dbg !8015
  store i32 %call1, i32* %readrq, align 4, !dbg !8013
  %3 = load i32, i32* %readrq, align 4, !dbg !8016
  %cmp2 = icmp sgt i32 %3, 2048, !dbg !8018
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !8019

if.then3:                                         ; preds = %if.then
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8020
  %call4 = call i32 @pcie_set_readrq(%struct.pci_dev* %4, i32 2048) #9, !dbg !8021
  br label %if.end, !dbg !8021

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !8022

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !8023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_unhide_mch_dev6(%struct.pci_dev* %dev) #0 !dbg !8024 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %reg = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8025, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !8027, metadata !DIExpression()), !dbg !8028
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8029
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 244, i8* %reg) #9, !dbg !8031
  %cmp = icmp eq i32 %call, 0, !dbg !8032
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8033

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* %reg, align 1, !dbg !8034
  %conv = zext i8 %1 to i32, !dbg !8034
  %and = and i32 %conv, 2, !dbg !8035
  %tobool = icmp ne i32 %and, 0, !dbg !8035
  br i1 %tobool, label %if.end, label %if.then, !dbg !8036

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8037
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !8037
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.92, i64 0, i64 0)) #10, !dbg !8037
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8039
  %4 = load i8, i8* %reg, align 1, !dbg !8040
  %conv2 = zext i8 %4 to i32, !dbg !8040
  %or = or i32 %conv2, 2, !dbg !8041
  %conv3 = trunc i32 %or to i8, !dbg !8040
  %call4 = call i32 @pci_write_config_byte(%struct.pci_dev* %3, i32 244, i8 zeroext %conv3) #9, !dbg !8042
  br label %if.end, !dbg !8043

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !8044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_disable_all_msi(%struct.pci_dev* %dev) #0 !dbg !8045 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8046, metadata !DIExpression()), !dbg !8047
  call void @pci_no_msi() #9, !dbg !8048
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8049
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !8049
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.93, i64 0, i64 0)) #10, !dbg !8049
  ret void, !dbg !8050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_disable_msi(%struct.pci_dev* %dev) #0 !dbg !8051 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8052, metadata !DIExpression()), !dbg !8053
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8054
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 2, !dbg !8056
  %1 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !8056
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !8054
  br i1 %tobool, label %if.then, label %if.end, !dbg !8057

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8058
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !8058
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.94, i64 0, i64 0)) #10, !dbg !8058
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8060
  %subordinate2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 2, !dbg !8061
  %4 = load %struct.pci_bus*, %struct.pci_bus** %subordinate2, align 8, !dbg !8061
  %bus_flags = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 19, !dbg !8062
  %5 = load i16, i16* %bus_flags, align 2, !dbg !8063
  %conv = zext i16 %5 to i32, !dbg !8063
  %or = or i32 %conv, 1, !dbg !8063
  %conv3 = trunc i32 %or to i16, !dbg !8063
  store i16 %conv3, i16* %bus_flags, align 2, !dbg !8063
  br label %if.end, !dbg !8064

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8065
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_amd_780_apc_msi(%struct.pci_dev* %host_bridge) #0 !dbg !8066 {
entry:
  %host_bridge.addr = alloca %struct.pci_dev*, align 8
  %apc_bridge = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %host_bridge, %struct.pci_dev** %host_bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %host_bridge.addr, metadata !8067, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %apc_bridge, metadata !8069, metadata !DIExpression()), !dbg !8070
  %0 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge.addr, align 8, !dbg !8071
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !8072
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8072
  %call = call %struct.pci_dev* @pci_get_slot(%struct.pci_bus* %1, i32 8) #9, !dbg !8073
  store %struct.pci_dev* %call, %struct.pci_dev** %apc_bridge, align 8, !dbg !8074
  %2 = load %struct.pci_dev*, %struct.pci_dev** %apc_bridge, align 8, !dbg !8075
  %tobool = icmp ne %struct.pci_dev* %2, null, !dbg !8075
  br i1 %tobool, label %if.then, label %if.end3, !dbg !8077

if.then:                                          ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %apc_bridge, align 8, !dbg !8078
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 8, !dbg !8081
  %4 = load i16, i16* %device, align 2, !dbg !8081
  %conv = zext i16 %4 to i32, !dbg !8078
  %cmp = icmp eq i32 %conv, 38402, !dbg !8082
  br i1 %cmp, label %if.then2, label %if.end, !dbg !8083

if.then2:                                         ; preds = %if.then
  %5 = load %struct.pci_dev*, %struct.pci_dev** %apc_bridge, align 8, !dbg !8084
  call void @quirk_disable_msi(%struct.pci_dev* %5) #9, !dbg !8085
  br label %if.end, !dbg !8085

if.end:                                           ; preds = %if.then2, %if.then
  %6 = load %struct.pci_dev*, %struct.pci_dev** %apc_bridge, align 8, !dbg !8086
  call void @pci_dev_put(%struct.pci_dev* %6) #9, !dbg !8087
  br label %if.end3, !dbg !8088

if.end3:                                          ; preds = %if.end, %entry
  ret void, !dbg !8089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_msi_ht_cap(%struct.pci_dev* %dev) #0 !dbg !8090 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8091, metadata !DIExpression()), !dbg !8092
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8093
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 2, !dbg !8095
  %1 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !8095
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !8093
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8096

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8097
  %call = call i32 @msi_ht_cap_enabled(%struct.pci_dev* %2) #9, !dbg !8098
  %tobool1 = icmp ne i32 %call, 0, !dbg !8098
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8099

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8100
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !8100
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.94, i64 0, i64 0)) #10, !dbg !8100
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8102
  %subordinate3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 2, !dbg !8103
  %5 = load %struct.pci_bus*, %struct.pci_bus** %subordinate3, align 8, !dbg !8103
  %bus_flags = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 19, !dbg !8104
  %6 = load i16, i16* %bus_flags, align 2, !dbg !8105
  %conv = zext i16 %6 to i32, !dbg !8105
  %or = or i32 %conv, 1, !dbg !8105
  %conv4 = trunc i32 %or to i16, !dbg !8105
  store i16 %conv4, i16* %bus_flags, align 2, !dbg !8105
  br label %if.end, !dbg !8106

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !8107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_nvidia_ck804_msi_ht_cap(%struct.pci_dev* %dev) #0 !dbg !8108 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8109, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !8111, metadata !DIExpression()), !dbg !8112
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8113
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 2, !dbg !8115
  %1 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !8115
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !8113
  br i1 %tobool, label %if.end, label %if.then, !dbg !8116

if.then:                                          ; preds = %entry
  br label %return, !dbg !8117

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8118
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 1, !dbg !8119
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8119
  %call = call %struct.pci_dev* @pci_get_slot(%struct.pci_bus* %3, i32 0) #9, !dbg !8120
  store %struct.pci_dev* %call, %struct.pci_dev** %pdev, align 8, !dbg !8121
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !8122
  %tobool1 = icmp ne %struct.pci_dev* %4, null, !dbg !8122
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !8124

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !8125

if.end3:                                          ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8126
  %call4 = call i32 @msi_ht_cap_enabled(%struct.pci_dev* %5) #9, !dbg !8128
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8128
  br i1 %tobool5, label %if.end12, label %land.lhs.true, !dbg !8129

land.lhs.true:                                    ; preds = %if.end3
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !8130
  %call6 = call i32 @msi_ht_cap_enabled(%struct.pci_dev* %6) #9, !dbg !8131
  %tobool7 = icmp ne i32 %call6, 0, !dbg !8131
  br i1 %tobool7, label %if.end12, label %if.then8, !dbg !8132

if.then8:                                         ; preds = %land.lhs.true
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8133
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !8133
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev9, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.94, i64 0, i64 0)) #10, !dbg !8133
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8135
  %subordinate10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 2, !dbg !8136
  %9 = load %struct.pci_bus*, %struct.pci_bus** %subordinate10, align 8, !dbg !8136
  %bus_flags = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 19, !dbg !8137
  %10 = load i16, i16* %bus_flags, align 2, !dbg !8138
  %conv = zext i16 %10 to i32, !dbg !8138
  %or = or i32 %conv, 1, !dbg !8138
  %conv11 = trunc i32 %or to i16, !dbg !8138
  store i16 %conv11, i16* %bus_flags, align 2, !dbg !8138
  br label %if.end12, !dbg !8139

if.end12:                                         ; preds = %if.then8, %land.lhs.true, %if.end3
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !8140
  call void @pci_dev_put(%struct.pci_dev* %11) #9, !dbg !8141
  br label %return, !dbg !8142

return:                                           ; preds = %if.end12, %if.then2, %if.then
  ret void, !dbg !8142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ht_enable_msi_mapping(%struct.pci_dev* %dev) #0 !dbg !8143 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %ttl = alloca i32, align 4
  %flags = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8144, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !8146, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.declare(metadata i32* %ttl, metadata !8148, metadata !DIExpression()), !dbg !8149
  store i32 48, i32* %ttl, align 4, !dbg !8149
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8150
  %call = call i32 @pci_find_ht_capability(%struct.pci_dev* %0, i32 168) #9, !dbg !8151
  store i32 %call, i32* %pos, align 4, !dbg !8152
  br label %while.cond, !dbg !8153

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %pos, align 4, !dbg !8154
  %tobool = icmp ne i32 %1, 0, !dbg !8154
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8155

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %ttl, align 4, !dbg !8156
  %dec = add i32 %2, -1, !dbg !8156
  store i32 %dec, i32* %ttl, align 4, !dbg !8156
  %tobool1 = icmp ne i32 %2, 0, !dbg !8155
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %tobool1, %land.rhs ], !dbg !8157
  br i1 %3, label %while.body, label %while.end, !dbg !8153

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8* %flags, metadata !8158, metadata !DIExpression()), !dbg !8160
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8161
  %5 = load i32, i32* %pos, align 4, !dbg !8163
  %add = add i32 %5, 2, !dbg !8164
  %call2 = call i32 @pci_read_config_byte(%struct.pci_dev* %4, i32 %add, i8* %flags) #9, !dbg !8165
  %cmp = icmp eq i32 %call2, 0, !dbg !8166
  br i1 %cmp, label %if.then, label %if.end, !dbg !8167

if.then:                                          ; preds = %while.body
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8168
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !8168
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.98, i64 0, i64 0)) #10, !dbg !8168
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8170
  %8 = load i32, i32* %pos, align 4, !dbg !8171
  %add4 = add i32 %8, 2, !dbg !8172
  %9 = load i8, i8* %flags, align 1, !dbg !8173
  %conv = zext i8 %9 to i32, !dbg !8173
  %or = or i32 %conv, 1, !dbg !8174
  %conv5 = trunc i32 %or to i8, !dbg !8173
  %call6 = call i32 @pci_write_config_byte(%struct.pci_dev* %7, i32 %add4, i8 zeroext %conv5) #9, !dbg !8175
  br label %if.end, !dbg !8176

if.end:                                           ; preds = %if.then, %while.body
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8177
  %11 = load i32, i32* %pos, align 4, !dbg !8178
  %call7 = call i32 @pci_find_next_ht_capability(%struct.pci_dev* %10, i32 %11, i32 168) #9, !dbg !8179
  store i32 %call7, i32* %pos, align 4, !dbg !8180
  br label %while.cond, !dbg !8153, !llvm.loop !8181

while.end:                                        ; preds = %land.end
  ret void, !dbg !8183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nvenet_msi_disable(%struct.pci_dev* %dev) #0 !dbg !8184 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %board_name = alloca i8*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8185, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.declare(metadata i8** %board_name, metadata !8187, metadata !DIExpression()), !dbg !8188
  %call = call i8* @dmi_get_system_info(i32 14) #9, !dbg !8189
  store i8* %call, i8** %board_name, align 8, !dbg !8188
  %0 = load i8*, i8** %board_name, align 8, !dbg !8190
  %tobool = icmp ne i8* %0, null, !dbg !8190
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8192

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %board_name, align 8, !dbg !8193
  %call1 = call i8* @strstr(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.99, i64 0, i64 0)) #9, !dbg !8194
  %tobool2 = icmp ne i8* %call1, null, !dbg !8194
  br i1 %tobool2, label %if.then, label %lor.lhs.false, !dbg !8195

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = load i8*, i8** %board_name, align 8, !dbg !8196
  %call3 = call i8* @strstr(i8* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.100, i64 0, i64 0)) #9, !dbg !8197
  %tobool4 = icmp ne i8* %call3, null, !dbg !8197
  br i1 %tobool4, label %if.then, label %if.end, !dbg !8198

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8199
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !8199
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.101, i64 0, i64 0)) #10, !dbg !8199
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8201
  %no_msi = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 46, !dbg !8202
  %5 = bitcast [5 x i8]* %no_msi to i40*, !dbg !8202
  %bf.load = load i40, i40* %5, align 1, !dbg !8203
  %bf.clear = and i40 %bf.load, -65, !dbg !8203
  %bf.set = or i40 %bf.clear, 64, !dbg !8203
  store i40 %bf.set, i40* %5, align 1, !dbg !8203
  br label %if.end, !dbg !8204

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  ret void, !dbg !8205
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_quirk_nvidia_tegra_disable_rp_msi(%struct.pci_dev* %dev) #0 !dbg !8206 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8207, metadata !DIExpression()), !dbg !8208
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8209
  %no_msi = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !8210
  %1 = bitcast [5 x i8]* %no_msi to i40*, !dbg !8210
  %bf.load = load i40, i40* %1, align 1, !dbg !8211
  %bf.clear = and i40 %bf.load, -65, !dbg !8211
  %bf.set = or i40 %bf.clear, 64, !dbg !8211
  store i40 %bf.set, i40* %1, align 1, !dbg !8211
  ret void, !dbg !8212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nvbridge_check_legacy_irq_routing(%struct.pci_dev* %dev) #0 !dbg !8213 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cfg = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8214, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.declare(metadata i32* %cfg, metadata !8216, metadata !DIExpression()), !dbg !8217
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8218
  %call = call i32 @pci_find_capability(%struct.pci_dev* %0, i32 8) #9, !dbg !8220
  %tobool = icmp ne i32 %call, 0, !dbg !8220
  br i1 %tobool, label %if.end, label %if.then, !dbg !8221

if.then:                                          ; preds = %entry
  br label %if.end7, !dbg !8222

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8223
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %1, i32 116, i32* %cfg) #9, !dbg !8224
  %2 = load i32, i32* %cfg, align 4, !dbg !8225
  %and = and i32 %2, 32772, !dbg !8227
  %tobool2 = icmp ne i32 %and, 0, !dbg !8227
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !8228

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.102, i64 0, i64 0)) #10, !dbg !8229
  %3 = load i32, i32* %cfg, align 4, !dbg !8231
  %and5 = and i32 %3, -32773, !dbg !8231
  store i32 %and5, i32* %cfg, align 4, !dbg !8231
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8232
  %5 = load i32, i32* %cfg, align 4, !dbg !8233
  %call6 = call i32 @pci_write_config_dword(%struct.pci_dev* %4, i32 116, i32 %5) #9, !dbg !8234
  br label %if.end7, !dbg !8235

if.end7:                                          ; preds = %if.then, %if.then3, %if.end
  ret void, !dbg !8236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_msi_ht_cap_quirk_all(%struct.pci_dev* %dev) #0 !dbg !8237 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8240
  call void @__nv_msi_ht_cap_quirk(%struct.pci_dev* %0, i32 1) #9, !dbg !8241
  ret void, !dbg !8242
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_msi_ht_cap_quirk_leaf(%struct.pci_dev* %dev) #0 !dbg !8243 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8244, metadata !DIExpression()), !dbg !8245
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8246
  call void @__nv_msi_ht_cap_quirk(%struct.pci_dev* %0, i32 0) #9, !dbg !8247
  ret void, !dbg !8248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_msi_intx_disable_bug(%struct.pci_dev* %dev) #0 !dbg !8249 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8250, metadata !DIExpression()), !dbg !8251
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8252
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 47, !dbg !8253
  %1 = load i16, i16* %dev_flags, align 2, !dbg !8254
  %conv = zext i16 %1 to i32, !dbg !8254
  %or = or i32 %conv, 1, !dbg !8254
  %conv1 = trunc i32 %or to i16, !dbg !8254
  store i16 %conv1, i16* %dev_flags, align 2, !dbg !8254
  ret void, !dbg !8255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_msi_intx_disable_ati_bug(%struct.pci_dev* %dev) #0 !dbg !8256 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %p = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8257, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %p, metadata !8259, metadata !DIExpression()), !dbg !8260
  %call = call %struct.pci_dev* @pci_get_device(i32 4098, i32 17285, %struct.pci_dev* null) #9, !dbg !8261
  store %struct.pci_dev* %call, %struct.pci_dev** %p, align 8, !dbg !8262
  %0 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !8263
  %tobool = icmp ne %struct.pci_dev* %0, null, !dbg !8263
  br i1 %tobool, label %if.end, label %if.then, !dbg !8265

if.then:                                          ; preds = %entry
  br label %return, !dbg !8266

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !8267
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 12, !dbg !8269
  %2 = load i8, i8* %revision, align 8, !dbg !8269
  %conv = zext i8 %2 to i32, !dbg !8267
  %cmp = icmp slt i32 %conv, 59, !dbg !8270
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !8271

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !8272
  %revision2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 12, !dbg !8273
  %4 = load i8, i8* %revision2, align 8, !dbg !8273
  %conv3 = zext i8 %4 to i32, !dbg !8272
  %cmp4 = icmp sge i32 %conv3, 48, !dbg !8274
  br i1 %cmp4, label %if.then6, label %if.end9, !dbg !8275

if.then6:                                         ; preds = %land.lhs.true
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8276
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 47, !dbg !8277
  %6 = load i16, i16* %dev_flags, align 2, !dbg !8278
  %conv7 = zext i16 %6 to i32, !dbg !8278
  %or = or i32 %conv7, 1, !dbg !8278
  %conv8 = trunc i32 %or to i16, !dbg !8278
  store i16 %conv8, i16* %dev_flags, align 2, !dbg !8278
  br label %if.end9, !dbg !8276

if.end9:                                          ; preds = %if.then6, %land.lhs.true, %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %p, align 8, !dbg !8279
  call void @pci_dev_put(%struct.pci_dev* %7) #9, !dbg !8280
  br label %return, !dbg !8281

return:                                           ; preds = %if.end9, %if.then
  ret void, !dbg !8281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_msi_intx_disable_qca_bug(%struct.pci_dev* %dev) #0 !dbg !8282 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8285
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 12, !dbg !8287
  %1 = load i8, i8* %revision, align 8, !dbg !8287
  %conv = zext i8 %1 to i32, !dbg !8285
  %cmp = icmp slt i32 %conv, 24, !dbg !8288
  br i1 %cmp, label %if.then, label %if.end, !dbg !8289

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8290
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !8290
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.105, i64 0, i64 0)) #10, !dbg !8290
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8292
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 47, !dbg !8293
  %4 = load i16, i16* %dev_flags, align 2, !dbg !8294
  %conv3 = zext i16 %4 to i32, !dbg !8294
  %or = or i32 %conv3, 1, !dbg !8294
  %conv4 = trunc i32 %or to i16, !dbg !8294
  store i16 %conv4, i16* %dev_flags, align 2, !dbg !8294
  br label %if.end, !dbg !8295

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8296
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_al_msi_disable(%struct.pci_dev* %dev) #0 !dbg !8297 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8298, metadata !DIExpression()), !dbg !8299
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8300
  %no_msi = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !8301
  %1 = bitcast [5 x i8]* %no_msi to i40*, !dbg !8301
  %bf.load = load i40, i40* %1, align 1, !dbg !8302
  %bf.clear = and i40 %bf.load, -65, !dbg !8302
  %bf.set = or i40 %bf.clear, 64, !dbg !8302
  store i40 %bf.set, i40* %1, align 1, !dbg !8302
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8303
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !8303
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.106, i64 0, i64 0)) #10, !dbg !8303
  ret void, !dbg !8304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_hotplug_bridge(%struct.pci_dev* %dev) #0 !dbg !8305 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8306, metadata !DIExpression()), !dbg !8307
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8308
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !8309
  %1 = bitcast [5 x i8]* %is_hotplug_bridge to i40*, !dbg !8309
  %bf.load = load i40, i40* %1, align 1, !dbg !8310
  %bf.clear = and i40 %bf.load, -16777217, !dbg !8310
  %bf.set = or i40 %bf.clear, 16777216, !dbg !8310
  store i40 %bf.set, i40* %1, align 1, !dbg !8310
  ret void, !dbg !8311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fixup_ti816x_class(%struct.pci_dev* %dev) #0 !dbg !8312 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %class = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.declare(metadata i32* %class, metadata !8315, metadata !DIExpression()), !dbg !8316
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8317
  %class1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 11, !dbg !8318
  %1 = load i32, i32* %class1, align 4, !dbg !8318
  store i32 %1, i32* %class, align 4, !dbg !8316
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8319
  %class2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 11, !dbg !8320
  store i32 262144, i32* %class2, align 4, !dbg !8321
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8322
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !8322
  %4 = load i32, i32* %class, align 4, !dbg !8322
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8322
  %class4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 11, !dbg !8322
  %6 = load i32, i32* %class4, align 4, !dbg !8322
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.107, i64 0, i64 0), i32 %4, i32 %6) #10, !dbg !8322
  ret void, !dbg !8323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fixup_mpss_256(%struct.pci_dev* %dev) #0 !dbg !8324 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8325, metadata !DIExpression()), !dbg !8326
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8327
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 17, !dbg !8328
  %bf.load = load i8, i8* %pcie_mpss, align 1, !dbg !8329
  %bf.clear = and i8 %bf.load, -8, !dbg !8329
  %bf.set = or i8 %bf.clear, 1, !dbg !8329
  store i8 %bf.set, i8* %pcie_mpss, align 1, !dbg !8329
  ret void, !dbg !8330
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_intel_mc_errata(%struct.pci_dev* %dev) #0 !dbg !5827 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %err = alloca i32, align 4
  %rcc = alloca i16, align 2
  %__ret_print_once = alloca i8, align 1
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8331, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8333, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.declare(metadata i16* %rcc, metadata !8335, metadata !DIExpression()), !dbg !8336
  %0 = load i32, i32* @pcie_bus_config, align 4, !dbg !8337
  %cmp = icmp eq i32 %0, 0, !dbg !8339
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8340

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @pcie_bus_config, align 4, !dbg !8341
  %cmp1 = icmp eq i32 %1, 1, !dbg !8342
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8343

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !8344

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8345
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 72, i16* %rcc) #9, !dbg !8346
  store i32 %call, i32* %err, align 4, !dbg !8347
  %3 = load i32, i32* %err, align 4, !dbg !8348
  %tobool = icmp ne i32 %3, 0, !dbg !8348
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !8350

if.then2:                                         ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8351
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !8351
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.108, i64 0, i64 0)) #10, !dbg !8351
  br label %return, !dbg !8353

if.end4:                                          ; preds = %if.end
  %5 = load i16, i16* %rcc, align 2, !dbg !8354
  %conv = zext i16 %5 to i32, !dbg !8354
  %and = and i32 %conv, 1024, !dbg !8356
  %tobool5 = icmp ne i32 %and, 0, !dbg !8356
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8357

if.then6:                                         ; preds = %if.end4
  br label %return, !dbg !8358

if.end7:                                          ; preds = %if.end4
  %6 = load i16, i16* %rcc, align 2, !dbg !8359
  %conv8 = zext i16 %6 to i32, !dbg !8359
  %and9 = and i32 %conv8, -1025, !dbg !8359
  %conv10 = trunc i32 %and9 to i16, !dbg !8359
  store i16 %conv10, i16* %rcc, align 2, !dbg !8359
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8360
  %8 = load i16, i16* %rcc, align 2, !dbg !8361
  %call11 = call i32 @pci_write_config_word(%struct.pci_dev* %7, i32 72, i16 zeroext %8) #9, !dbg !8362
  store i32 %call11, i32* %err, align 4, !dbg !8363
  %9 = load i32, i32* %err, align 4, !dbg !8364
  %tobool12 = icmp ne i32 %9, 0, !dbg !8364
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !8366

if.then13:                                        ; preds = %if.end7
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8367
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !8367
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev14, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.109, i64 0, i64 0)) #10, !dbg !8367
  br label %return, !dbg !8369

if.end15:                                         ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8* %__ret_print_once, metadata !8370, metadata !DIExpression()), !dbg !8372
  %11 = load i8, i8* @quirk_intel_mc_errata.__print_once, align 1, !dbg !8372
  %tobool16 = trunc i8 %11 to i1, !dbg !8372
  %lnot = xor i1 %tobool16, true, !dbg !8372
  %frombool = zext i1 %lnot to i8, !dbg !8372
  store i8 %frombool, i8* %__ret_print_once, align 1, !dbg !8372
  %12 = load i8, i8* @quirk_intel_mc_errata.__print_once, align 1, !dbg !8373
  %tobool17 = trunc i8 %12 to i1, !dbg !8373
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !8372

if.then18:                                        ; preds = %if.end15
  store i8 1, i8* @quirk_intel_mc_errata.__print_once, align 1, !dbg !8375
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.110, i64 0, i64 0)) #10, !dbg !8375
  br label %if.end20, !dbg !8375

if.end20:                                         ; preds = %if.then18, %if.end15
  %13 = load i8, i8* %__ret_print_once, align 1, !dbg !8372
  %tobool21 = trunc i8 %13 to i1, !dbg !8372
  %lnot22 = xor i1 %tobool21, true, !dbg !8372
  %lnot23 = xor i1 %lnot22, true, !dbg !8372
  %lnot.ext = zext i1 %lnot23 to i32, !dbg !8372
  %conv24 = sext i32 %lnot.ext to i64, !dbg !8372
  store i64 %conv24, i64* %tmp, align 8, !dbg !8373
  %14 = load i64, i64* %tmp, align 8, !dbg !8372
  br label %return, !dbg !8377

return:                                           ; preds = %if.end20, %if.then13, %if.then6, %if.then2, %if.then
  ret void, !dbg !8377
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_intel_ntb(%struct.pci_dev* %dev) #0 !dbg !8378 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rc = alloca i32, align 4
  %val = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8379, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8381, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.declare(metadata i8* %val, metadata !8383, metadata !DIExpression()), !dbg !8384
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8385
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 208, i8* %val) #9, !dbg !8386
  store i32 %call, i32* %rc, align 4, !dbg !8387
  %1 = load i32, i32* %rc, align 4, !dbg !8388
  %tobool = icmp ne i32 %1, 0, !dbg !8388
  br i1 %tobool, label %if.then, label %if.end, !dbg !8390

if.then:                                          ; preds = %entry
  br label %return, !dbg !8391

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8392
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 44, !dbg !8393
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 2, !dbg !8392
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !8394
  %3 = load i64, i64* %start, align 8, !dbg !8394
  %4 = load i8, i8* %val, align 1, !dbg !8395
  %conv = zext i8 %4 to i32, !dbg !8395
  %sh_prom = zext i32 %conv to i64, !dbg !8396
  %shl = shl i64 1, %sh_prom, !dbg !8396
  %add = add i64 %3, %shl, !dbg !8397
  %sub = sub i64 %add, 1, !dbg !8398
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8399
  %resource1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 44, !dbg !8400
  %arrayidx2 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource1, i64 0, i64 2, !dbg !8399
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx2, i32 0, i32 1, !dbg !8401
  store i64 %sub, i64* %end, align 8, !dbg !8402
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8403
  %call3 = call i32 @pci_read_config_byte(%struct.pci_dev* %6, i32 209, i8* %val) #9, !dbg !8404
  store i32 %call3, i32* %rc, align 4, !dbg !8405
  %7 = load i32, i32* %rc, align 4, !dbg !8406
  %tobool4 = icmp ne i32 %7, 0, !dbg !8406
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !8408

if.then5:                                         ; preds = %if.end
  br label %return, !dbg !8409

if.end6:                                          ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8410
  %resource7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 44, !dbg !8411
  %arrayidx8 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource7, i64 0, i64 4, !dbg !8410
  %start9 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx8, i32 0, i32 0, !dbg !8412
  %9 = load i64, i64* %start9, align 8, !dbg !8412
  %10 = load i8, i8* %val, align 1, !dbg !8413
  %conv10 = zext i8 %10 to i32, !dbg !8413
  %sh_prom11 = zext i32 %conv10 to i64, !dbg !8414
  %shl12 = shl i64 1, %sh_prom11, !dbg !8414
  %add13 = add i64 %9, %shl12, !dbg !8415
  %sub14 = sub i64 %add13, 1, !dbg !8416
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8417
  %resource15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 44, !dbg !8418
  %arrayidx16 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource15, i64 0, i64 4, !dbg !8417
  %end17 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx16, i32 0, i32 1, !dbg !8419
  store i64 %sub14, i64* %end17, align 8, !dbg !8420
  br label %return, !dbg !8421

return:                                           ; preds = %if.end6, %if.then5, %if.then
  ret void, !dbg !8421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_igfx_irq(%struct.pci_dev* %dev) #0 !dbg !8422 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %regs = alloca i8*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8423, metadata !DIExpression()), !dbg !8424
  call void @llvm.dbg.declare(metadata i8** %regs, metadata !8425, metadata !DIExpression()), !dbg !8426
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8427
  %call = call i8* @pci_iomap(%struct.pci_dev* %0, i32 0, i64 0) #9, !dbg !8428
  store i8* %call, i8** %regs, align 8, !dbg !8426
  %1 = load i8*, i8** %regs, align 8, !dbg !8429
  %cmp = icmp eq i8* %1, null, !dbg !8431
  br i1 %cmp, label %if.then, label %if.end, !dbg !8432

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8433
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !8433
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.111, i64 0, i64 0)) #10, !dbg !8433
  br label %return, !dbg !8435

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %regs, align 8, !dbg !8436
  %add.ptr = getelementptr i8, i8* %3, i64 278540, !dbg !8438
  %call2 = call i32 @readl(i8* %add.ptr) #9, !dbg !8439
  %cmp3 = icmp ne i32 %call2, 0, !dbg !8440
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !8441

if.then4:                                         ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8442
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !8442
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev5, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.112, i64 0, i64 0)) #10, !dbg !8442
  %5 = load i8*, i8** %regs, align 8, !dbg !8444
  %add.ptr6 = getelementptr i8, i8* %5, i64 278540, !dbg !8445
  call void @writel(i32 0, i8* %add.ptr6) #9, !dbg !8446
  br label %if.end7, !dbg !8447

if.end7:                                          ; preds = %if.then4, %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8448
  %7 = load i8*, i8** %regs, align 8, !dbg !8449
  call void @pci_iounmap(%struct.pci_dev* %6, i8* %7) #9, !dbg !8450
  br label %return, !dbg !8451

return:                                           ; preds = %if.end7, %if.then
  ret void, !dbg !8451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_remove_d3hot_delay(%struct.pci_dev* %dev) #0 !dbg !8452 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8453, metadata !DIExpression()), !dbg !8454
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8455
  %d3hot_delay = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 31, !dbg !8456
  store i32 0, i32* %d3hot_delay, align 4, !dbg !8457
  ret void, !dbg !8458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_broken_intx_masking(%struct.pci_dev* %dev) #0 !dbg !8459 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8460, metadata !DIExpression()), !dbg !8461
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8462
  %broken_intx_masking = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !8463
  %1 = bitcast [5 x i8]* %broken_intx_masking to i40*, !dbg !8463
  %bf.load = load i40, i40* %1, align 1, !dbg !8464
  %bf.clear = and i40 %bf.load, -536870913, !dbg !8464
  %bf.set = or i40 %bf.clear, 536870912, !dbg !8464
  store i40 %bf.set, i40* %1, align 1, !dbg !8464
  ret void, !dbg !8465
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mellanox_check_broken_intx_masking(%struct.pci_dev* %pdev) #0 !dbg !8466 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %fw_ver = alloca i32*, align 8
  %fw_major = alloca i16, align 2
  %fw_minor = alloca i16, align 2
  %fw_subminor = alloca i16, align 2
  %fw_maj_min = alloca i32, align 4
  %fw_sub_min = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8467, metadata !DIExpression()), !dbg !8468
  call void @llvm.dbg.declare(metadata i32** %fw_ver, metadata !8469, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.declare(metadata i16* %fw_major, metadata !8473, metadata !DIExpression()), !dbg !8474
  call void @llvm.dbg.declare(metadata i16* %fw_minor, metadata !8475, metadata !DIExpression()), !dbg !8476
  call void @llvm.dbg.declare(metadata i16* %fw_subminor, metadata !8477, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.declare(metadata i32* %fw_maj_min, metadata !8479, metadata !DIExpression()), !dbg !8480
  call void @llvm.dbg.declare(metadata i32* %fw_sub_min, metadata !8481, metadata !DIExpression()), !dbg !8482
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8483, metadata !DIExpression()), !dbg !8484
  store i32 0, i32* %i, align 4, !dbg !8485
  br label %for.cond, !dbg !8487

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8488
  %conv = sext i32 %0 to i64, !dbg !8488
  %cmp = icmp ult i64 %conv, 14, !dbg !8490
  br i1 %cmp, label %for.body, label %for.end, !dbg !8491

for.body:                                         ; preds = %for.cond
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8492
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 8, !dbg !8495
  %2 = load i16, i16* %device, align 2, !dbg !8495
  %conv2 = zext i16 %2 to i32, !dbg !8492
  %3 = load i32, i32* %i, align 4, !dbg !8496
  %idxprom = sext i32 %3 to i64, !dbg !8497
  %arrayidx = getelementptr [14 x i16], [14 x i16]* @mellanox_broken_intx_devs, i64 0, i64 %idxprom, !dbg !8497
  %4 = load i16, i16* %arrayidx, align 2, !dbg !8497
  %conv3 = zext i16 %4 to i32, !dbg !8497
  %cmp4 = icmp eq i32 %conv2, %conv3, !dbg !8498
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8499

if.then:                                          ; preds = %for.body
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8500
  %broken_intx_masking = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 46, !dbg !8502
  %6 = bitcast [5 x i8]* %broken_intx_masking to i40*, !dbg !8502
  %bf.load = load i40, i40* %6, align 1, !dbg !8503
  %bf.clear = and i40 %bf.load, -536870913, !dbg !8503
  %bf.set = or i40 %bf.clear, 536870912, !dbg !8503
  store i40 %bf.set, i40* %6, align 1, !dbg !8503
  br label %return, !dbg !8504

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8505

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !8506
  %inc = add i32 %7, 1, !dbg !8506
  store i32 %inc, i32* %i, align 4, !dbg !8506
  br label %for.cond, !dbg !8507, !llvm.loop !8508

for.end:                                          ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8510
  %device6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 8, !dbg !8512
  %9 = load i16, i16* %device6, align 2, !dbg !8512
  %conv7 = zext i16 %9 to i32, !dbg !8510
  %cmp8 = icmp eq i32 %conv7, 4113, !dbg !8513
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !8514

if.then10:                                        ; preds = %for.end
  br label %return, !dbg !8515

if.end11:                                         ; preds = %for.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8516
  %device12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 8, !dbg !8518
  %11 = load i16, i16* %device12, align 2, !dbg !8518
  %conv13 = zext i16 %11 to i32, !dbg !8516
  %cmp14 = icmp ne i32 %conv13, 4115, !dbg !8519
  br i1 %cmp14, label %land.lhs.true, label %if.end21, !dbg !8520

land.lhs.true:                                    ; preds = %if.end11
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8521
  %device16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 8, !dbg !8522
  %13 = load i16, i16* %device16, align 2, !dbg !8522
  %conv17 = zext i16 %13 to i32, !dbg !8521
  %cmp18 = icmp ne i32 %conv17, 4117, !dbg !8523
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !8524

if.then20:                                        ; preds = %land.lhs.true
  br label %return, !dbg !8525

if.end21:                                         ; preds = %land.lhs.true, %if.end11
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8526
  %call = call i32 @pci_enable_device_mem(%struct.pci_dev* %14) #9, !dbg !8528
  %tobool = icmp ne i32 %call, 0, !dbg !8528
  br i1 %tobool, label %if.then22, label %if.end23, !dbg !8529

if.then22:                                        ; preds = %if.end21
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8530
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !8530
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.113, i64 0, i64 0)) #10, !dbg !8530
  br label %return, !dbg !8532

if.end23:                                         ; preds = %if.end21
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8533
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 44, !dbg !8533
  %arrayidx24 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !8533
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx24, i32 0, i32 0, !dbg !8533
  %17 = load i64, i64* %start, align 8, !dbg !8533
  %call25 = call i8* @ioremap(i64 %17, i64 4) #9, !dbg !8534
  %18 = bitcast i8* %call25 to i32*, !dbg !8534
  store i32* %18, i32** %fw_ver, align 8, !dbg !8535
  %19 = load i32*, i32** %fw_ver, align 8, !dbg !8536
  %tobool26 = icmp ne i32* %19, null, !dbg !8536
  br i1 %tobool26, label %if.end29, label %if.then27, !dbg !8538

if.then27:                                        ; preds = %if.end23
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8539
  %dev28 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !8539
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev28, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.114, i64 0, i64 0)) #10, !dbg !8539
  br label %out, !dbg !8541

if.end29:                                         ; preds = %if.end23
  %21 = load i32*, i32** %fw_ver, align 8, !dbg !8542
  %22 = bitcast i32* %21 to i8*, !dbg !8542
  %call30 = call i32 @ioread32be(i8* %22) #9, !dbg !8543
  store i32 %call30, i32* %fw_maj_min, align 4, !dbg !8544
  %23 = load i32*, i32** %fw_ver, align 8, !dbg !8545
  %add.ptr = getelementptr i32, i32* %23, i64 1, !dbg !8546
  %24 = bitcast i32* %add.ptr to i8*, !dbg !8545
  %call31 = call i32 @ioread32be(i8* %24) #9, !dbg !8547
  store i32 %call31, i32* %fw_sub_min, align 4, !dbg !8548
  %25 = load i32, i32* %fw_maj_min, align 4, !dbg !8549
  %and = and i32 %25, 65535, !dbg !8550
  %conv32 = trunc i32 %and to i16, !dbg !8549
  store i16 %conv32, i16* %fw_major, align 2, !dbg !8551
  %26 = load i32, i32* %fw_maj_min, align 4, !dbg !8552
  %shr = lshr i32 %26, 16, !dbg !8553
  %conv33 = trunc i32 %shr to i16, !dbg !8552
  store i16 %conv33, i16* %fw_minor, align 2, !dbg !8554
  %27 = load i32, i32* %fw_sub_min, align 4, !dbg !8555
  %and34 = and i32 %27, 65535, !dbg !8556
  %conv35 = trunc i32 %and34 to i16, !dbg !8555
  store i16 %conv35, i16* %fw_subminor, align 2, !dbg !8557
  %28 = load i16, i16* %fw_minor, align 2, !dbg !8558
  %conv36 = zext i16 %28 to i32, !dbg !8558
  %cmp37 = icmp sgt i32 %conv36, 99, !dbg !8560
  br i1 %cmp37, label %if.then42, label %lor.lhs.false, !dbg !8561

lor.lhs.false:                                    ; preds = %if.end29
  %29 = load i16, i16* %fw_minor, align 2, !dbg !8562
  %conv39 = zext i16 %29 to i32, !dbg !8562
  %cmp40 = icmp slt i32 %conv39, 14, !dbg !8563
  br i1 %cmp40, label %if.then42, label %if.end55, !dbg !8564

if.then42:                                        ; preds = %lor.lhs.false, %if.end29
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8565
  %dev43 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !8565
  %31 = load i16, i16* %fw_major, align 2, !dbg !8565
  %conv44 = zext i16 %31 to i32, !dbg !8565
  %32 = load i16, i16* %fw_minor, align 2, !dbg !8565
  %conv45 = zext i16 %32 to i32, !dbg !8565
  %33 = load i16, i16* %fw_subminor, align 2, !dbg !8565
  %conv46 = zext i16 %33 to i32, !dbg !8565
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8565
  %device47 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 8, !dbg !8565
  %35 = load i16, i16* %device47, align 2, !dbg !8565
  %conv48 = zext i16 %35 to i32, !dbg !8565
  %cmp49 = icmp eq i32 %conv48, 4115, !dbg !8565
  %36 = zext i1 %cmp49 to i64, !dbg !8565
  %cond = select i1 %cmp49, i32 12, i32 14, !dbg !8565
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev43, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.115, i64 0, i64 0), i32 %conv44, i32 %conv45, i32 %conv46, i32 %cond) #10, !dbg !8565
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8567
  %broken_intx_masking51 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 46, !dbg !8568
  %38 = bitcast [5 x i8]* %broken_intx_masking51 to i40*, !dbg !8568
  %bf.load52 = load i40, i40* %38, align 1, !dbg !8569
  %bf.clear53 = and i40 %bf.load52, -536870913, !dbg !8569
  %bf.set54 = or i40 %bf.clear53, 536870912, !dbg !8569
  store i40 %bf.set54, i40* %38, align 1, !dbg !8569
  br label %if.end55, !dbg !8570

if.end55:                                         ; preds = %if.then42, %lor.lhs.false
  %39 = load i32*, i32** %fw_ver, align 8, !dbg !8571
  %40 = bitcast i32* %39 to i8*, !dbg !8571
  call void @iounmap(i8* %40) #9, !dbg !8572
  br label %out, !dbg !8572

out:                                              ; preds = %if.end55, %if.then27
  call void @llvm.dbg.label(metadata !8573), !dbg !8574
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8575
  call void @pci_disable_device(%struct.pci_dev* %41) #9, !dbg !8576
  br label %return, !dbg !8577

return:                                           ; preds = %out, %if.then22, %if.then20, %if.then10, %if.then
  ret void, !dbg !8577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_no_bus_reset(%struct.pci_dev* %dev) #0 !dbg !8578 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8579, metadata !DIExpression()), !dbg !8580
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8581
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 47, !dbg !8582
  %1 = load i16, i16* %dev_flags, align 2, !dbg !8583
  %conv = zext i16 %1 to i32, !dbg !8583
  %or = or i32 %conv, 64, !dbg !8583
  %conv1 = trunc i32 %or to i16, !dbg !8583
  store i16 %conv1, i16* %dev_flags, align 2, !dbg !8583
  ret void, !dbg !8584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_no_pm_reset(%struct.pci_dev* %dev) #0 !dbg !8585 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8586, metadata !DIExpression()), !dbg !8587
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8588
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !8590
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8590
  %call = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %1) #9, !dbg !8591
  br i1 %call, label %if.end, label %if.then, !dbg !8592

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8593
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 47, !dbg !8594
  %3 = load i16, i16* %dev_flags, align 2, !dbg !8595
  %conv = zext i16 %3 to i32, !dbg !8595
  %or = or i32 %conv, 128, !dbg !8595
  %conv1 = trunc i32 %or to i16, !dbg !8595
  store i16 %conv1, i16* %dev_flags, align 2, !dbg !8595
  br label %if.end, !dbg !8593

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_thunderbolt_hotplug_msi(%struct.pci_dev* %pdev) #0 !dbg !8597 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8598, metadata !DIExpression()), !dbg !8599
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8600
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !8602
  %1 = bitcast [5 x i8]* %is_hotplug_bridge to i40*, !dbg !8602
  %bf.load = load i40, i40* %1, align 1, !dbg !8602
  %bf.lshr = lshr i40 %bf.load, 24, !dbg !8602
  %bf.clear = and i40 %bf.lshr, 1, !dbg !8602
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !8602
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8600
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8603

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8604
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 8, !dbg !8605
  %3 = load i16, i16* %device, align 2, !dbg !8605
  %conv = zext i16 %3 to i32, !dbg !8604
  %cmp = icmp ne i32 %conv, 5447, !dbg !8606
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8607

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8608
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 12, !dbg !8609
  %5 = load i8, i8* %revision, align 8, !dbg !8609
  %conv2 = zext i8 %5 to i32, !dbg !8608
  %cmp3 = icmp sle i32 %conv2, 1, !dbg !8610
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8611

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8612
  %no_msi = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 46, !dbg !8613
  %7 = bitcast [5 x i8]* %no_msi to i40*, !dbg !8613
  %bf.load5 = load i40, i40* %7, align 1, !dbg !8614
  %bf.clear6 = and i40 %bf.load5, -65, !dbg !8614
  %bf.set = or i40 %bf.clear6, 64, !dbg !8614
  store i40 %bf.set, i40* %7, align 1, !dbg !8614
  br label %if.end, !dbg !8612

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  ret void, !dbg !8615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_apple_poweroff_thunderbolt(%struct.pci_dev* %dev) #0 !dbg !8616 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bridge = alloca i8*, align 8
  %SXIO = alloca i8*, align 8
  %SXFP = alloca i8*, align 8
  %SXLV = alloca i8*, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp5 = alloca %struct.acpi_device*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8617, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.declare(metadata i8** %bridge, metadata !8619, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.declare(metadata i8** %SXIO, metadata !8621, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.declare(metadata i8** %SXFP, metadata !8623, metadata !DIExpression()), !dbg !8624
  call void @llvm.dbg.declare(metadata i8** %SXLV, metadata !8625, metadata !DIExpression()), !dbg !8626
  %0 = load i8, i8* @x86_apple_machine, align 1, !dbg !8627
  %tobool = trunc i8 %0 to i1, !dbg !8627
  br i1 %tobool, label %if.end, label %if.then, !dbg !8629

if.then:                                          ; preds = %entry
  br label %return, !dbg !8630

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8631
  %call = call i32 @pci_pcie_type(%struct.pci_dev* %1) #9, !dbg !8633
  %cmp = icmp ne i32 %call, 5, !dbg !8634
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !8635

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !8636

if.end2:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !8637, metadata !DIExpression()), !dbg !8639
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8639
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !8639
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 24, !dbg !8639
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !8639
  store %struct.fwnode_handle* %3, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !8639
  %4 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !8639
  %call4 = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %4) #9, !dbg !8639
  br i1 %call4, label %cond.true, label %cond.false, !dbg !8639

cond.true:                                        ; preds = %if.end2
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8640, metadata !DIExpression()), !dbg !8642
  %5 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !8642
  %6 = bitcast %struct.fwnode_handle* %5 to i8*, !dbg !8642
  store i8* %6, i8** %__mptr, align 8, !dbg !8642
  br label %do.body, !dbg !8642

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !8643

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !8642
  %add.ptr = getelementptr i8, i8* %7, i64 -16, !dbg !8642
  %8 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !8642
  store %struct.acpi_device* %8, %struct.acpi_device** %tmp5, align 8, !dbg !8643
  %9 = load %struct.acpi_device*, %struct.acpi_device** %tmp5, align 8, !dbg !8642
  br label %cond.end, !dbg !8639

cond.false:                                       ; preds = %if.end2
  br label %cond.end, !dbg !8639

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.acpi_device* [ %9, %do.end ], [ null, %cond.false ], !dbg !8639
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp, align 8, !dbg !8639
  %10 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !8639
  %call6 = call i8* @acpi_device_handle(%struct.acpi_device* %10) #9, !dbg !8645
  store i8* %call6, i8** %bridge, align 8, !dbg !8646
  %11 = load i8*, i8** %bridge, align 8, !dbg !8647
  %tobool7 = icmp ne i8* %11, null, !dbg !8647
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !8649

if.then8:                                         ; preds = %cond.end
  br label %return, !dbg !8650

if.end9:                                          ; preds = %cond.end
  %12 = load i8*, i8** %bridge, align 8, !dbg !8651
  %call10 = call i32 @acpi_get_handle(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116, i64 0, i64 0), i8** %SXIO) #9, !dbg !8651
  %tobool11 = icmp ne i32 %call10, 0, !dbg !8651
  br i1 %tobool11, label %if.then17, label %lor.lhs.false, !dbg !8653

lor.lhs.false:                                    ; preds = %if.end9
  %13 = load i8*, i8** %bridge, align 8, !dbg !8654
  %call12 = call i32 @acpi_get_handle(i8* %13, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.117, i64 0, i64 0), i8** %SXFP) #9, !dbg !8654
  %tobool13 = icmp ne i32 %call12, 0, !dbg !8654
  br i1 %tobool13, label %if.then17, label %lor.lhs.false14, !dbg !8655

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %14 = load i8*, i8** %bridge, align 8, !dbg !8656
  %call15 = call i32 @acpi_get_handle(i8* %14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.118, i64 0, i64 0), i8** %SXLV) #9, !dbg !8656
  %tobool16 = icmp ne i32 %call15, 0, !dbg !8656
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !8657

if.then17:                                        ; preds = %lor.lhs.false14, %lor.lhs.false, %if.end9
  br label %return, !dbg !8658

if.end18:                                         ; preds = %lor.lhs.false14
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8659
  %dev19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !8659
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev19, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.119, i64 0, i64 0)) #10, !dbg !8659
  %16 = load i8*, i8** %SXIO, align 8, !dbg !8660
  %call20 = call i32 @acpi_execute_simple_method(i8* %16, i8* null, i64 1) #9, !dbg !8661
  %17 = load i8*, i8** %SXFP, align 8, !dbg !8662
  %call21 = call i32 @acpi_execute_simple_method(i8* %17, i8* null, i64 0) #9, !dbg !8663
  call void @msleep(i32 300) #9, !dbg !8664
  %18 = load i8*, i8** %SXLV, align 8, !dbg !8665
  %call22 = call i32 @acpi_execute_simple_method(i8* %18, i8* null, i64 0) #9, !dbg !8666
  %19 = load i8*, i8** %SXIO, align 8, !dbg !8667
  %call23 = call i32 @acpi_execute_simple_method(i8* %19, i8* null, i64 0) #9, !dbg !8668
  %20 = load i8*, i8** %SXLV, align 8, !dbg !8669
  %call24 = call i32 @acpi_execute_simple_method(i8* %20, i8* null, i64 0) #9, !dbg !8670
  br label %return, !dbg !8671

return:                                           ; preds = %if.end18, %if.then17, %if.then8, %if.then1, %if.then
  ret void, !dbg !8671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_dev_specific_reset(%struct.pci_dev* %dev, i32 %probe) #0 !dbg !8672 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %probe.addr = alloca i32, align 4
  %i = alloca %struct.pci_dev_reset_methods*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8673, metadata !DIExpression()), !dbg !8674
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !8675, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.declare(metadata %struct.pci_dev_reset_methods** %i, metadata !8677, metadata !DIExpression()), !dbg !8679
  store %struct.pci_dev_reset_methods* getelementptr inbounds ([7 x %struct.pci_dev_reset_methods], [7 x %struct.pci_dev_reset_methods]* @pci_dev_reset_methods, i64 0, i64 0), %struct.pci_dev_reset_methods** %i, align 8, !dbg !8680
  br label %for.cond, !dbg !8682

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.pci_dev_reset_methods*, %struct.pci_dev_reset_methods** %i, align 8, !dbg !8683
  %reset = getelementptr inbounds %struct.pci_dev_reset_methods, %struct.pci_dev_reset_methods* %0, i32 0, i32 2, !dbg !8685
  %1 = load i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*, i32)** %reset, align 8, !dbg !8685
  %tobool = icmp ne i32 (%struct.pci_dev*, i32)* %1, null, !dbg !8686
  br i1 %tobool, label %for.body, label %for.end, !dbg !8686

for.body:                                         ; preds = %for.cond
  %2 = load %struct.pci_dev_reset_methods*, %struct.pci_dev_reset_methods** %i, align 8, !dbg !8687
  %vendor = getelementptr inbounds %struct.pci_dev_reset_methods, %struct.pci_dev_reset_methods* %2, i32 0, i32 0, !dbg !8690
  %3 = load i16, i16* %vendor, align 8, !dbg !8690
  %conv = zext i16 %3 to i32, !dbg !8687
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8691
  %vendor1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 7, !dbg !8692
  %5 = load i16, i16* %vendor1, align 4, !dbg !8692
  %conv2 = zext i16 %5 to i32, !dbg !8691
  %cmp = icmp eq i32 %conv, %conv2, !dbg !8693
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !8694

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.pci_dev_reset_methods*, %struct.pci_dev_reset_methods** %i, align 8, !dbg !8695
  %vendor4 = getelementptr inbounds %struct.pci_dev_reset_methods, %struct.pci_dev_reset_methods* %6, i32 0, i32 0, !dbg !8696
  %7 = load i16, i16* %vendor4, align 8, !dbg !8696
  %conv5 = zext i16 %7 to i32, !dbg !8695
  %cmp6 = icmp eq i32 %conv5, 65535, !dbg !8697
  br i1 %cmp6, label %land.lhs.true, label %if.end, !dbg !8698

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.pci_dev_reset_methods*, %struct.pci_dev_reset_methods** %i, align 8, !dbg !8699
  %device = getelementptr inbounds %struct.pci_dev_reset_methods, %struct.pci_dev_reset_methods* %8, i32 0, i32 1, !dbg !8700
  %9 = load i16, i16* %device, align 2, !dbg !8700
  %conv8 = zext i16 %9 to i32, !dbg !8699
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8701
  %device9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 8, !dbg !8702
  %11 = load i16, i16* %device9, align 2, !dbg !8702
  %conv10 = zext i16 %11 to i32, !dbg !8701
  %cmp11 = icmp eq i32 %conv8, %conv10, !dbg !8703
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !8704

lor.lhs.false13:                                  ; preds = %land.lhs.true
  %12 = load %struct.pci_dev_reset_methods*, %struct.pci_dev_reset_methods** %i, align 8, !dbg !8705
  %device14 = getelementptr inbounds %struct.pci_dev_reset_methods, %struct.pci_dev_reset_methods* %12, i32 0, i32 1, !dbg !8706
  %13 = load i16, i16* %device14, align 2, !dbg !8706
  %conv15 = zext i16 %13 to i32, !dbg !8705
  %cmp16 = icmp eq i32 %conv15, 65535, !dbg !8707
  br i1 %cmp16, label %if.then, label %if.end, !dbg !8708

if.then:                                          ; preds = %lor.lhs.false13, %land.lhs.true
  %14 = load %struct.pci_dev_reset_methods*, %struct.pci_dev_reset_methods** %i, align 8, !dbg !8709
  %reset18 = getelementptr inbounds %struct.pci_dev_reset_methods, %struct.pci_dev_reset_methods* %14, i32 0, i32 2, !dbg !8710
  %15 = load i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*, i32)** %reset18, align 8, !dbg !8710
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8711
  %17 = load i32, i32* %probe.addr, align 4, !dbg !8712
  %call = call i32 %15(%struct.pci_dev* %16, i32 %17) #9, !dbg !8709
  store i32 %call, i32* %retval, align 4, !dbg !8713
  br label %return, !dbg !8713

if.end:                                           ; preds = %lor.lhs.false13, %lor.lhs.false
  br label %for.inc, !dbg !8714

for.inc:                                          ; preds = %if.end
  %18 = load %struct.pci_dev_reset_methods*, %struct.pci_dev_reset_methods** %i, align 8, !dbg !8715
  %incdec.ptr = getelementptr %struct.pci_dev_reset_methods, %struct.pci_dev_reset_methods* %18, i32 1, !dbg !8715
  store %struct.pci_dev_reset_methods* %incdec.ptr, %struct.pci_dev_reset_methods** %i, align 8, !dbg !8715
  br label %for.cond, !dbg !8716, !llvm.loop !8717

for.end:                                          ; preds = %for.cond
  store i32 -25, i32* %retval, align 4, !dbg !8719
  br label %return, !dbg !8719

return:                                           ; preds = %for.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !8720
  ret i32 %19, !dbg !8720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_dma_func0_alias(%struct.pci_dev* %dev) #0 !dbg !8721 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8722, metadata !DIExpression()), !dbg !8723
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8724
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 6, !dbg !8724
  %1 = load i32, i32* %devfn, align 8, !dbg !8724
  %and = and i32 %1, 7, !dbg !8724
  %cmp = icmp ne i32 %and, 0, !dbg !8726
  br i1 %cmp, label %if.then, label %if.end, !dbg !8727

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8728
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8729
  %devfn1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 6, !dbg !8729
  %4 = load i32, i32* %devfn1, align 8, !dbg !8729
  %shr = lshr i32 %4, 3, !dbg !8729
  %and2 = and i32 %shr, 31, !dbg !8729
  %and3 = and i32 %and2, 31, !dbg !8729
  %shl = shl i32 %and3, 3, !dbg !8729
  %conv = trunc i32 %shl to i8, !dbg !8729
  call void @pci_add_dma_alias(%struct.pci_dev* %2, i8 zeroext %conv, i32 1) #9, !dbg !8730
  br label %if.end, !dbg !8730

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_dma_func1_alias(%struct.pci_dev* %dev) #0 !dbg !8732 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8733, metadata !DIExpression()), !dbg !8734
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8735
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 6, !dbg !8735
  %1 = load i32, i32* %devfn, align 8, !dbg !8735
  %and = and i32 %1, 7, !dbg !8735
  %cmp = icmp ne i32 %and, 1, !dbg !8737
  br i1 %cmp, label %if.then, label %if.end, !dbg !8738

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8739
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8740
  %devfn1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 6, !dbg !8740
  %4 = load i32, i32* %devfn1, align 8, !dbg !8740
  %shr = lshr i32 %4, 3, !dbg !8740
  %and2 = and i32 %shr, 31, !dbg !8740
  %and3 = and i32 %and2, 31, !dbg !8740
  %shl = shl i32 %and3, 3, !dbg !8740
  %or = or i32 %shl, 1, !dbg !8740
  %conv = trunc i32 %or to i8, !dbg !8740
  call void @pci_add_dma_alias(%struct.pci_dev* %2, i8 zeroext %conv, i32 1) #9, !dbg !8741
  br label %if.end, !dbg !8741

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_fixed_dma_alias(%struct.pci_dev* %dev) #0 !dbg !8743 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %id = alloca %struct.pci_device_id*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8744, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id, metadata !8746, metadata !DIExpression()), !dbg !8747
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8748
  %call = call %struct.pci_device_id* @pci_match_id(%struct.pci_device_id* getelementptr inbounds ([3 x %struct.pci_device_id], [3 x %struct.pci_device_id]* @fixed_dma_alias_tbl, i64 0, i64 0), %struct.pci_dev* %0) #9, !dbg !8749
  store %struct.pci_device_id* %call, %struct.pci_device_id** %id, align 8, !dbg !8750
  %1 = load %struct.pci_device_id*, %struct.pci_device_id** %id, align 8, !dbg !8751
  %tobool = icmp ne %struct.pci_device_id* %1, null, !dbg !8751
  br i1 %tobool, label %if.then, label %if.end, !dbg !8753

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8754
  %3 = load %struct.pci_device_id*, %struct.pci_device_id** %id, align 8, !dbg !8755
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %3, i32 0, i32 6, !dbg !8756
  %4 = load i64, i64* %driver_data, align 8, !dbg !8756
  %conv = trunc i64 %4 to i8, !dbg !8755
  call void @pci_add_dma_alias(%struct.pci_dev* %2, i8 zeroext %conv, i32 1) #9, !dbg !8757
  br label %if.end, !dbg !8757

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_use_pcie_bridge_dma_alias(%struct.pci_dev* %pdev) #0 !dbg !8759 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8760, metadata !DIExpression()), !dbg !8761
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8762
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !8764
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8764
  %call = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %1) #9, !dbg !8765
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !8766

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8767
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 13, !dbg !8768
  %3 = load i8, i8* %hdr_type, align 1, !dbg !8768
  %conv = zext i8 %3 to i32, !dbg !8767
  %cmp = icmp eq i32 %conv, 1, !dbg !8769
  br i1 %cmp, label %land.lhs.true2, label %if.end, !dbg !8770

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8771
  %call3 = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %4) #9, !dbg !8772
  br i1 %call3, label %if.end, label %land.lhs.true4, !dbg !8773

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8774
  %bus5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 1, !dbg !8775
  %6 = load %struct.pci_bus*, %struct.pci_bus** %bus5, align 8, !dbg !8775
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 4, !dbg !8776
  %7 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !8776
  %call6 = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %7) #9, !dbg !8777
  br i1 %call6, label %land.lhs.true8, label %if.end, !dbg !8778

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8779
  %bus9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 1, !dbg !8780
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus9, align 8, !dbg !8780
  %self10 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 4, !dbg !8781
  %10 = load %struct.pci_dev*, %struct.pci_dev** %self10, align 8, !dbg !8781
  %call11 = call i32 @pci_pcie_type(%struct.pci_dev* %10) #9, !dbg !8782
  %cmp12 = icmp ne i32 %call11, 7, !dbg !8783
  br i1 %cmp12, label %if.then, label %if.end, !dbg !8784

if.then:                                          ; preds = %land.lhs.true8
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8785
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 47, !dbg !8786
  %12 = load i16, i16* %dev_flags, align 2, !dbg !8787
  %conv14 = zext i16 %12 to i32, !dbg !8787
  %or = or i32 %conv14, 32, !dbg !8787
  %conv15 = trunc i32 %or to i16, !dbg !8787
  store i16 %conv15, i16* %dev_flags, align 2, !dbg !8787
  br label %if.end, !dbg !8785

if.end:                                           ; preds = %if.then, %land.lhs.true8, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !8788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_mic_x200_dma_alias(%struct.pci_dev* %pdev) #0 !dbg !8789 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8790, metadata !DIExpression()), !dbg !8791
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8792
  call void @pci_add_dma_alias(%struct.pci_dev* %0, i8 zeroext -128, i32 1) #9, !dbg !8793
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8794
  call void @pci_add_dma_alias(%struct.pci_dev* %1, i8 zeroext -120, i32 1) #9, !dbg !8795
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8796
  call void @pci_add_dma_alias(%struct.pci_dev* %2, i8 zeroext -109, i32 1) #9, !dbg !8797
  ret void, !dbg !8798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_pex_vca_alias(%struct.pci_dev* %pdev) #0 !dbg !8799 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %num_pci_slots = alloca i32, align 4
  %slot = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8800, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.declare(metadata i32* %num_pci_slots, metadata !8802, metadata !DIExpression()), !dbg !8803
  store i32 32, i32* %num_pci_slots, align 4, !dbg !8803
  call void @llvm.dbg.declare(metadata i32* %slot, metadata !8804, metadata !DIExpression()), !dbg !8805
  store i32 0, i32* %slot, align 4, !dbg !8806
  br label %for.cond, !dbg !8808

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %slot, align 4, !dbg !8809
  %cmp = icmp ult i32 %0, 32, !dbg !8811
  br i1 %cmp, label %for.body, label %for.end, !dbg !8812

for.body:                                         ; preds = %for.cond
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8813
  %2 = load i32, i32* %slot, align 4, !dbg !8814
  %and = and i32 %2, 31, !dbg !8814
  %shl = shl i32 %and, 3, !dbg !8814
  %conv = trunc i32 %shl to i8, !dbg !8814
  call void @pci_add_dma_alias(%struct.pci_dev* %1, i8 zeroext %conv, i32 5) #9, !dbg !8815
  br label %for.inc, !dbg !8815

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %slot, align 4, !dbg !8816
  %inc = add i32 %3, 1, !dbg !8816
  store i32 %inc, i32* %slot, align 4, !dbg !8816
  br label %for.cond, !dbg !8817, !llvm.loop !8818

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_bridge_cavm_thrx2_pcie_root(%struct.pci_dev* %pdev) #0 !dbg !8821 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8822, metadata !DIExpression()), !dbg !8823
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8824
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 47, !dbg !8825
  %1 = load i16, i16* %dev_flags, align 2, !dbg !8826
  %conv = zext i16 %1 to i32, !dbg !8826
  %or = or i32 %conv, 512, !dbg !8826
  %conv1 = trunc i32 %or to i16, !dbg !8826
  store i16 %conv1, i16* %dev_flags, align 2, !dbg !8826
  ret void, !dbg !8827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_tw686x_class(%struct.pci_dev* %pdev) #0 !dbg !8828 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %class = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8829, metadata !DIExpression()), !dbg !8830
  call void @llvm.dbg.declare(metadata i32* %class, metadata !8831, metadata !DIExpression()), !dbg !8832
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8833
  %class1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 11, !dbg !8834
  %1 = load i32, i32* %class1, align 4, !dbg !8834
  store i32 %1, i32* %class, align 4, !dbg !8832
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8835
  %class2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 11, !dbg !8836
  store i32 294913, i32* %class2, align 4, !dbg !8837
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8838
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !8838
  %4 = load i32, i32* %class, align 4, !dbg !8838
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8838
  %class3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 11, !dbg !8838
  %6 = load i32, i32* %class3, align 4, !dbg !8838
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.122, i64 0, i64 0), i32 %4, i32 %6) #10, !dbg !8838
  ret void, !dbg !8839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_relaxedordering_disable(%struct.pci_dev* %dev) #0 !dbg !8840 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8841, metadata !DIExpression()), !dbg !8842
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8843
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 47, !dbg !8844
  %1 = load i16, i16* %dev_flags, align 2, !dbg !8845
  %conv = zext i16 %1 to i32, !dbg !8845
  %or = or i32 %conv, 2048, !dbg !8845
  %conv1 = trunc i32 %or to i16, !dbg !8845
  store i16 %conv1, i16* %dev_flags, align 2, !dbg !8845
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8846
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !8846
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.123, i64 0, i64 0)) #10, !dbg !8846
  ret void, !dbg !8847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_chelsio_T5_disable_root_port_attributes(%struct.pci_dev* %pdev) #0 !dbg !8848 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8849, metadata !DIExpression()), !dbg !8850
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8851
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 8, !dbg !8853
  %1 = load i16, i16* %device, align 2, !dbg !8853
  %conv = zext i16 %1 to i32, !dbg !8851
  %and = and i32 %conv, 65280, !dbg !8854
  %cmp = icmp eq i32 %and, 21504, !dbg !8855
  br i1 %cmp, label %if.then, label %if.end, !dbg !8856

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8857
  call void @quirk_disable_root_port_attributes(%struct.pci_dev* %2) #9, !dbg !8858
  br label %if.end, !dbg !8858

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8859
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_dev_specific_acs_enabled(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !8860 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  %i = alloca %struct.pci_dev_acs_enabled*, align 8
  %ret = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8861, metadata !DIExpression()), !dbg !8862
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !8863, metadata !DIExpression()), !dbg !8864
  call void @llvm.dbg.declare(metadata %struct.pci_dev_acs_enabled** %i, metadata !8865, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8868, metadata !DIExpression()), !dbg !8869
  store %struct.pci_dev_acs_enabled* getelementptr inbounds ([84 x %struct.pci_dev_acs_enabled], [84 x %struct.pci_dev_acs_enabled]* @pci_dev_acs_enabled, i64 0, i64 0), %struct.pci_dev_acs_enabled** %i, align 8, !dbg !8870
  br label %for.cond, !dbg !8872

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.pci_dev_acs_enabled*, %struct.pci_dev_acs_enabled** %i, align 8, !dbg !8873
  %acs_enabled = getelementptr inbounds %struct.pci_dev_acs_enabled, %struct.pci_dev_acs_enabled* %0, i32 0, i32 2, !dbg !8875
  %1 = load i32 (%struct.pci_dev*, i16)*, i32 (%struct.pci_dev*, i16)** %acs_enabled, align 8, !dbg !8875
  %tobool = icmp ne i32 (%struct.pci_dev*, i16)* %1, null, !dbg !8876
  br i1 %tobool, label %for.body, label %for.end, !dbg !8876

for.body:                                         ; preds = %for.cond
  %2 = load %struct.pci_dev_acs_enabled*, %struct.pci_dev_acs_enabled** %i, align 8, !dbg !8877
  %vendor = getelementptr inbounds %struct.pci_dev_acs_enabled, %struct.pci_dev_acs_enabled* %2, i32 0, i32 0, !dbg !8880
  %3 = load i16, i16* %vendor, align 8, !dbg !8880
  %conv = zext i16 %3 to i32, !dbg !8877
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8881
  %vendor1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 7, !dbg !8882
  %5 = load i16, i16* %vendor1, align 4, !dbg !8882
  %conv2 = zext i16 %5 to i32, !dbg !8881
  %cmp = icmp eq i32 %conv, %conv2, !dbg !8883
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !8884

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.pci_dev_acs_enabled*, %struct.pci_dev_acs_enabled** %i, align 8, !dbg !8885
  %vendor4 = getelementptr inbounds %struct.pci_dev_acs_enabled, %struct.pci_dev_acs_enabled* %6, i32 0, i32 0, !dbg !8886
  %7 = load i16, i16* %vendor4, align 8, !dbg !8886
  %conv5 = zext i16 %7 to i32, !dbg !8885
  %cmp6 = icmp eq i32 %conv5, 65535, !dbg !8887
  br i1 %cmp6, label %land.lhs.true, label %if.end22, !dbg !8888

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.pci_dev_acs_enabled*, %struct.pci_dev_acs_enabled** %i, align 8, !dbg !8889
  %device = getelementptr inbounds %struct.pci_dev_acs_enabled, %struct.pci_dev_acs_enabled* %8, i32 0, i32 1, !dbg !8890
  %9 = load i16, i16* %device, align 2, !dbg !8890
  %conv8 = zext i16 %9 to i32, !dbg !8889
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8891
  %device9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 8, !dbg !8892
  %11 = load i16, i16* %device9, align 2, !dbg !8892
  %conv10 = zext i16 %11 to i32, !dbg !8891
  %cmp11 = icmp eq i32 %conv8, %conv10, !dbg !8893
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !8894

lor.lhs.false13:                                  ; preds = %land.lhs.true
  %12 = load %struct.pci_dev_acs_enabled*, %struct.pci_dev_acs_enabled** %i, align 8, !dbg !8895
  %device14 = getelementptr inbounds %struct.pci_dev_acs_enabled, %struct.pci_dev_acs_enabled* %12, i32 0, i32 1, !dbg !8896
  %13 = load i16, i16* %device14, align 2, !dbg !8896
  %conv15 = zext i16 %13 to i32, !dbg !8895
  %cmp16 = icmp eq i32 %conv15, 65535, !dbg !8897
  br i1 %cmp16, label %if.then, label %if.end22, !dbg !8898

if.then:                                          ; preds = %lor.lhs.false13, %land.lhs.true
  %14 = load %struct.pci_dev_acs_enabled*, %struct.pci_dev_acs_enabled** %i, align 8, !dbg !8899
  %acs_enabled18 = getelementptr inbounds %struct.pci_dev_acs_enabled, %struct.pci_dev_acs_enabled* %14, i32 0, i32 2, !dbg !8901
  %15 = load i32 (%struct.pci_dev*, i16)*, i32 (%struct.pci_dev*, i16)** %acs_enabled18, align 8, !dbg !8901
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8902
  %17 = load i16, i16* %acs_flags.addr, align 2, !dbg !8903
  %call = call i32 %15(%struct.pci_dev* %16, i16 zeroext %17) #9, !dbg !8899
  store i32 %call, i32* %ret, align 4, !dbg !8904
  %18 = load i32, i32* %ret, align 4, !dbg !8905
  %cmp19 = icmp sge i32 %18, 0, !dbg !8907
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !8908

if.then21:                                        ; preds = %if.then
  %19 = load i32, i32* %ret, align 4, !dbg !8909
  store i32 %19, i32* %retval, align 4, !dbg !8910
  br label %return, !dbg !8910

if.end:                                           ; preds = %if.then
  br label %if.end22, !dbg !8911

if.end22:                                         ; preds = %if.end, %lor.lhs.false13, %lor.lhs.false
  br label %for.inc, !dbg !8912

for.inc:                                          ; preds = %if.end22
  %20 = load %struct.pci_dev_acs_enabled*, %struct.pci_dev_acs_enabled** %i, align 8, !dbg !8913
  %incdec.ptr = getelementptr %struct.pci_dev_acs_enabled, %struct.pci_dev_acs_enabled* %20, i32 1, !dbg !8913
  store %struct.pci_dev_acs_enabled* %incdec.ptr, %struct.pci_dev_acs_enabled** %i, align 8, !dbg !8913
  br label %for.cond, !dbg !8914, !llvm.loop !8915

for.end:                                          ; preds = %for.cond
  store i32 -25, i32* %retval, align 4, !dbg !8917
  br label %return, !dbg !8917

return:                                           ; preds = %for.end, %if.then21
  %21 = load i32, i32* %retval, align 4, !dbg !8918
  ret i32 %21, !dbg !8918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_dev_specific_enable_acs(%struct.pci_dev* %dev) #0 !dbg !8919 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %p = alloca %struct.pci_dev_acs_ops*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8920, metadata !DIExpression()), !dbg !8921
  call void @llvm.dbg.declare(metadata %struct.pci_dev_acs_ops** %p, metadata !8922, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8925, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8927, metadata !DIExpression()), !dbg !8928
  store i32 0, i32* %i, align 4, !dbg !8929
  br label %for.cond, !dbg !8931

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8932
  %conv = sext i32 %0 to i64, !dbg !8932
  %cmp = icmp ult i64 %conv, 2, !dbg !8934
  br i1 %cmp, label %for.body, label %for.end, !dbg !8935

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !8936
  %idxprom = sext i32 %1 to i64, !dbg !8938
  %arrayidx = getelementptr [2 x %struct.pci_dev_acs_ops], [2 x %struct.pci_dev_acs_ops]* @pci_dev_acs_ops, i64 0, i64 %idxprom, !dbg !8938
  store %struct.pci_dev_acs_ops* %arrayidx, %struct.pci_dev_acs_ops** %p, align 8, !dbg !8939
  %2 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !8940
  %vendor = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %2, i32 0, i32 0, !dbg !8942
  %3 = load i16, i16* %vendor, align 8, !dbg !8942
  %conv2 = zext i16 %3 to i32, !dbg !8940
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8943
  %vendor3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 7, !dbg !8944
  %5 = load i16, i16* %vendor3, align 4, !dbg !8944
  %conv4 = zext i16 %5 to i32, !dbg !8943
  %cmp5 = icmp eq i32 %conv2, %conv4, !dbg !8945
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false, !dbg !8946

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !8947
  %vendor7 = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %6, i32 0, i32 0, !dbg !8948
  %7 = load i16, i16* %vendor7, align 8, !dbg !8948
  %conv8 = zext i16 %7 to i32, !dbg !8947
  %cmp9 = icmp eq i32 %conv8, 65535, !dbg !8949
  br i1 %cmp9, label %land.lhs.true, label %if.end26, !dbg !8950

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !8951
  %device = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %8, i32 0, i32 1, !dbg !8952
  %9 = load i16, i16* %device, align 2, !dbg !8952
  %conv11 = zext i16 %9 to i32, !dbg !8951
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8953
  %device12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 8, !dbg !8954
  %11 = load i16, i16* %device12, align 2, !dbg !8954
  %conv13 = zext i16 %11 to i32, !dbg !8953
  %cmp14 = icmp eq i32 %conv11, %conv13, !dbg !8955
  br i1 %cmp14, label %land.lhs.true21, label %lor.lhs.false16, !dbg !8956

lor.lhs.false16:                                  ; preds = %land.lhs.true
  %12 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !8957
  %device17 = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %12, i32 0, i32 1, !dbg !8958
  %13 = load i16, i16* %device17, align 2, !dbg !8958
  %conv18 = zext i16 %13 to i32, !dbg !8957
  %cmp19 = icmp eq i32 %conv18, 65535, !dbg !8959
  br i1 %cmp19, label %land.lhs.true21, label %if.end26, !dbg !8960

land.lhs.true21:                                  ; preds = %lor.lhs.false16, %land.lhs.true
  %14 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !8961
  %enable_acs = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %14, i32 0, i32 2, !dbg !8962
  %15 = load i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)** %enable_acs, align 8, !dbg !8962
  %tobool = icmp ne i32 (%struct.pci_dev*)* %15, null, !dbg !8961
  br i1 %tobool, label %if.then, label %if.end26, !dbg !8963

if.then:                                          ; preds = %land.lhs.true21
  %16 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !8964
  %enable_acs22 = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %16, i32 0, i32 2, !dbg !8966
  %17 = load i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)** %enable_acs22, align 8, !dbg !8966
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8967
  %call = call i32 %17(%struct.pci_dev* %18) #9, !dbg !8964
  store i32 %call, i32* %ret, align 4, !dbg !8968
  %19 = load i32, i32* %ret, align 4, !dbg !8969
  %cmp23 = icmp sge i32 %19, 0, !dbg !8971
  br i1 %cmp23, label %if.then25, label %if.end, !dbg !8972

if.then25:                                        ; preds = %if.then
  %20 = load i32, i32* %ret, align 4, !dbg !8973
  store i32 %20, i32* %retval, align 4, !dbg !8974
  br label %return, !dbg !8974

if.end:                                           ; preds = %if.then
  br label %if.end26, !dbg !8975

if.end26:                                         ; preds = %if.end, %land.lhs.true21, %lor.lhs.false16, %lor.lhs.false
  br label %for.inc, !dbg !8976

for.inc:                                          ; preds = %if.end26
  %21 = load i32, i32* %i, align 4, !dbg !8977
  %inc = add i32 %21, 1, !dbg !8977
  store i32 %inc, i32* %i, align 4, !dbg !8977
  br label %for.cond, !dbg !8978, !llvm.loop !8979

for.end:                                          ; preds = %for.cond
  store i32 -25, i32* %retval, align 4, !dbg !8981
  br label %return, !dbg !8981

return:                                           ; preds = %for.end, %if.then25
  %22 = load i32, i32* %retval, align 4, !dbg !8982
  ret i32 %22, !dbg !8982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_dev_specific_disable_acs_redir(%struct.pci_dev* %dev) #0 !dbg !8983 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %p = alloca %struct.pci_dev_acs_ops*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8984, metadata !DIExpression()), !dbg !8985
  call void @llvm.dbg.declare(metadata %struct.pci_dev_acs_ops** %p, metadata !8986, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8988, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8990, metadata !DIExpression()), !dbg !8991
  store i32 0, i32* %i, align 4, !dbg !8992
  br label %for.cond, !dbg !8994

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8995
  %conv = sext i32 %0 to i64, !dbg !8995
  %cmp = icmp ult i64 %conv, 2, !dbg !8997
  br i1 %cmp, label %for.body, label %for.end, !dbg !8998

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !8999
  %idxprom = sext i32 %1 to i64, !dbg !9001
  %arrayidx = getelementptr [2 x %struct.pci_dev_acs_ops], [2 x %struct.pci_dev_acs_ops]* @pci_dev_acs_ops, i64 0, i64 %idxprom, !dbg !9001
  store %struct.pci_dev_acs_ops* %arrayidx, %struct.pci_dev_acs_ops** %p, align 8, !dbg !9002
  %2 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !9003
  %vendor = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %2, i32 0, i32 0, !dbg !9005
  %3 = load i16, i16* %vendor, align 8, !dbg !9005
  %conv2 = zext i16 %3 to i32, !dbg !9003
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9006
  %vendor3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 7, !dbg !9007
  %5 = load i16, i16* %vendor3, align 4, !dbg !9007
  %conv4 = zext i16 %5 to i32, !dbg !9006
  %cmp5 = icmp eq i32 %conv2, %conv4, !dbg !9008
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false, !dbg !9009

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !9010
  %vendor7 = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %6, i32 0, i32 0, !dbg !9011
  %7 = load i16, i16* %vendor7, align 8, !dbg !9011
  %conv8 = zext i16 %7 to i32, !dbg !9010
  %cmp9 = icmp eq i32 %conv8, 65535, !dbg !9012
  br i1 %cmp9, label %land.lhs.true, label %if.end26, !dbg !9013

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %8 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !9014
  %device = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %8, i32 0, i32 1, !dbg !9015
  %9 = load i16, i16* %device, align 2, !dbg !9015
  %conv11 = zext i16 %9 to i32, !dbg !9014
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9016
  %device12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 8, !dbg !9017
  %11 = load i16, i16* %device12, align 2, !dbg !9017
  %conv13 = zext i16 %11 to i32, !dbg !9016
  %cmp14 = icmp eq i32 %conv11, %conv13, !dbg !9018
  br i1 %cmp14, label %land.lhs.true21, label %lor.lhs.false16, !dbg !9019

lor.lhs.false16:                                  ; preds = %land.lhs.true
  %12 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !9020
  %device17 = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %12, i32 0, i32 1, !dbg !9021
  %13 = load i16, i16* %device17, align 2, !dbg !9021
  %conv18 = zext i16 %13 to i32, !dbg !9020
  %cmp19 = icmp eq i32 %conv18, 65535, !dbg !9022
  br i1 %cmp19, label %land.lhs.true21, label %if.end26, !dbg !9023

land.lhs.true21:                                  ; preds = %lor.lhs.false16, %land.lhs.true
  %14 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !9024
  %disable_acs_redir = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %14, i32 0, i32 3, !dbg !9025
  %15 = load i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)** %disable_acs_redir, align 8, !dbg !9025
  %tobool = icmp ne i32 (%struct.pci_dev*)* %15, null, !dbg !9024
  br i1 %tobool, label %if.then, label %if.end26, !dbg !9026

if.then:                                          ; preds = %land.lhs.true21
  %16 = load %struct.pci_dev_acs_ops*, %struct.pci_dev_acs_ops** %p, align 8, !dbg !9027
  %disable_acs_redir22 = getelementptr inbounds %struct.pci_dev_acs_ops, %struct.pci_dev_acs_ops* %16, i32 0, i32 3, !dbg !9029
  %17 = load i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)** %disable_acs_redir22, align 8, !dbg !9029
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9030
  %call = call i32 %17(%struct.pci_dev* %18) #9, !dbg !9027
  store i32 %call, i32* %ret, align 4, !dbg !9031
  %19 = load i32, i32* %ret, align 4, !dbg !9032
  %cmp23 = icmp sge i32 %19, 0, !dbg !9034
  br i1 %cmp23, label %if.then25, label %if.end, !dbg !9035

if.then25:                                        ; preds = %if.then
  %20 = load i32, i32* %ret, align 4, !dbg !9036
  store i32 %20, i32* %retval, align 4, !dbg !9037
  br label %return, !dbg !9037

if.end:                                           ; preds = %if.then
  br label %if.end26, !dbg !9038

if.end26:                                         ; preds = %if.end, %land.lhs.true21, %lor.lhs.false16, %lor.lhs.false
  br label %for.inc, !dbg !9039

for.inc:                                          ; preds = %if.end26
  %21 = load i32, i32* %i, align 4, !dbg !9040
  %inc = add i32 %21, 1, !dbg !9040
  store i32 %inc, i32* %i, align 4, !dbg !9040
  br label %for.cond, !dbg !9041, !llvm.loop !9042

for.end:                                          ; preds = %for.cond
  store i32 -25, i32* %retval, align 4, !dbg !9044
  br label %return, !dbg !9044

return:                                           ; preds = %for.end, %if.then25
  %22 = load i32, i32* %retval, align 4, !dbg !9045
  ret i32 %22, !dbg !9045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_intel_qat_vf_cap(%struct.pci_dev* %pdev) #0 !dbg !9046 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %next_cap = alloca i8, align 1
  %reg16 = alloca i16, align 2
  %cap = alloca i16*, align 8
  %state = alloca %struct.pci_cap_saved_state*, align 8
  %status = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9047, metadata !DIExpression()), !dbg !9048
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9049, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9051, metadata !DIExpression()), !dbg !9052
  store i32 0, i32* %i, align 4, !dbg !9052
  call void @llvm.dbg.declare(metadata i8* %next_cap, metadata !9053, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.declare(metadata i16* %reg16, metadata !9055, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.declare(metadata i16** %cap, metadata !9057, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %state, metadata !9059, metadata !DIExpression()), !dbg !9072
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9073
  %pcie_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 14, !dbg !9075
  %1 = load i8, i8* %pcie_cap, align 2, !dbg !9075
  %conv = zext i8 %1 to i32, !dbg !9073
  %tobool = icmp ne i32 %conv, 0, !dbg !9073
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9076

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9077
  %call = call i32 @pci_find_capability(%struct.pci_dev* %2, i32 16) #9, !dbg !9078
  %tobool1 = icmp ne i32 %call, 0, !dbg !9078
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9079

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end72, !dbg !9080

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9081
  %call2 = call i32 @pci_find_capability(%struct.pci_dev* %3, i32 5) #9, !dbg !9082
  store i32 %call2, i32* %pos, align 4, !dbg !9083
  %4 = load i32, i32* %pos, align 4, !dbg !9084
  %tobool3 = icmp ne i32 %4, 0, !dbg !9084
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9086

if.then4:                                         ; preds = %if.end
  br label %if.end72, !dbg !9087

if.end5:                                          ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9088
  %6 = load i32, i32* %pos, align 4, !dbg !9089
  %add = add i32 %6, 1, !dbg !9090
  %call6 = call i32 @pci_read_config_byte(%struct.pci_dev* %5, i32 %add, i8* %next_cap) #9, !dbg !9091
  %7 = load i8, i8* %next_cap, align 1, !dbg !9092
  %tobool7 = icmp ne i8 %7, 0, !dbg !9092
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !9094

if.then8:                                         ; preds = %if.end5
  br label %if.end72, !dbg !9095

if.end9:                                          ; preds = %if.end5
  store i32 80, i32* %pos, align 4, !dbg !9096
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9097
  %9 = load i32, i32* %pos, align 4, !dbg !9098
  %call10 = call i32 @pci_read_config_word(%struct.pci_dev* %8, i32 %9, i16* %reg16) #9, !dbg !9099
  %10 = load i16, i16* %reg16, align 2, !dbg !9100
  %conv11 = zext i16 %10 to i32, !dbg !9100
  %cmp = icmp eq i32 %conv11, 16, !dbg !9102
  br i1 %cmp, label %if.then13, label %if.end72, !dbg !9103

if.then13:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9104, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.declare(metadata i32* %size, metadata !9107, metadata !DIExpression()), !dbg !9108
  store i32 14, i32* %size, align 4, !dbg !9108
  %11 = load i32, i32* %pos, align 4, !dbg !9109
  %conv14 = trunc i32 %11 to i8, !dbg !9109
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9110
  %pcie_cap15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 14, !dbg !9111
  store i8 %conv14, i8* %pcie_cap15, align 2, !dbg !9112
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9113
  %14 = load i32, i32* %pos, align 4, !dbg !9114
  %add16 = add i32 %14, 2, !dbg !9115
  %call17 = call i32 @pci_read_config_word(%struct.pci_dev* %13, i32 %add16, i16* %reg16) #9, !dbg !9116
  %15 = load i16, i16* %reg16, align 2, !dbg !9117
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9118
  %pcie_flags_reg = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 20, !dbg !9119
  store i16 %15, i16* %pcie_flags_reg, align 8, !dbg !9120
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9121
  %18 = load i32, i32* %pos, align 4, !dbg !9122
  %add18 = add i32 %18, 4, !dbg !9123
  %call19 = call i32 @pci_read_config_word(%struct.pci_dev* %17, i32 %add18, i16* %reg16) #9, !dbg !9124
  %19 = load i16, i16* %reg16, align 2, !dbg !9125
  %conv20 = zext i16 %19 to i32, !dbg !9125
  %and = and i32 %conv20, 7, !dbg !9126
  %conv21 = trunc i32 %and to i8, !dbg !9125
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9127
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 17, !dbg !9128
  %bf.load = load i8, i8* %pcie_mpss, align 1, !dbg !9129
  %bf.value = and i8 %conv21, 7, !dbg !9129
  %bf.clear = and i8 %bf.load, -8, !dbg !9129
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !9129
  store i8 %bf.set, i8* %pcie_mpss, align 1, !dbg !9129
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9130
  %cfg_size = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 42, !dbg !9131
  store i32 4096, i32* %cfg_size, align 8, !dbg !9132
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9133
  %call22 = call i32 @pci_read_config_dword(%struct.pci_dev* %22, i32 256, i32* %status) #9, !dbg !9135
  %cmp23 = icmp ne i32 %call22, 0, !dbg !9136
  br i1 %cmp23, label %if.then28, label %lor.lhs.false25, !dbg !9137

lor.lhs.false25:                                  ; preds = %if.then13
  %23 = load i32, i32* %status, align 4, !dbg !9138
  %cmp26 = icmp eq i32 %23, -1, !dbg !9139
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !9140

if.then28:                                        ; preds = %lor.lhs.false25, %if.then13
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9141
  %cfg_size29 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 42, !dbg !9142
  store i32 256, i32* %cfg_size29, align 8, !dbg !9143
  br label %if.end30, !dbg !9141

if.end30:                                         ; preds = %if.then28, %lor.lhs.false25
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9144
  %call31 = call %struct.pci_cap_saved_state* @pci_find_saved_cap(%struct.pci_dev* %25, i8 signext 16) #9, !dbg !9146
  %tobool32 = icmp ne %struct.pci_cap_saved_state* %call31, null, !dbg !9146
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !9147

if.then33:                                        ; preds = %if.end30
  br label %if.end72, !dbg !9148

if.end34:                                         ; preds = %if.end30
  %26 = load i32, i32* %size, align 4, !dbg !9149
  %conv35 = sext i32 %26 to i64, !dbg !9149
  %add36 = add i64 24, %conv35, !dbg !9150
  %call37 = call i8* @kzalloc(i64 %add36, i32 3264) #9, !dbg !9151
  %27 = bitcast i8* %call37 to %struct.pci_cap_saved_state*, !dbg !9151
  store %struct.pci_cap_saved_state* %27, %struct.pci_cap_saved_state** %state, align 8, !dbg !9152
  %28 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %state, align 8, !dbg !9153
  %tobool38 = icmp ne %struct.pci_cap_saved_state* %28, null, !dbg !9153
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !9155

if.then39:                                        ; preds = %if.end34
  br label %if.end72, !dbg !9156

if.end40:                                         ; preds = %if.end34
  %29 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %state, align 8, !dbg !9157
  %cap41 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %29, i32 0, i32 1, !dbg !9158
  %cap_nr = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap41, i32 0, i32 0, !dbg !9159
  store i16 16, i16* %cap_nr, align 8, !dbg !9160
  %30 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %state, align 8, !dbg !9161
  %cap42 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %30, i32 0, i32 1, !dbg !9162
  %cap_extended = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap42, i32 0, i32 1, !dbg !9163
  store i8 0, i8* %cap_extended, align 2, !dbg !9164
  %31 = load i32, i32* %size, align 4, !dbg !9165
  %32 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %state, align 8, !dbg !9166
  %cap43 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %32, i32 0, i32 1, !dbg !9167
  %size44 = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap43, i32 0, i32 2, !dbg !9168
  store i32 %31, i32* %size44, align 4, !dbg !9169
  %33 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %state, align 8, !dbg !9170
  %cap45 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %33, i32 0, i32 1, !dbg !9171
  %data = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap45, i32 0, i32 3, !dbg !9172
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %data, i64 0, i64 0, !dbg !9170
  %34 = bitcast i32* %arrayidx to i16*, !dbg !9173
  store i16* %34, i16** %cap, align 8, !dbg !9174
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9175
  %36 = load i16*, i16** %cap, align 8, !dbg !9176
  %37 = load i32, i32* %i, align 4, !dbg !9177
  %inc = add i32 %37, 1, !dbg !9177
  store i32 %inc, i32* %i, align 4, !dbg !9177
  %idxprom = sext i32 %37 to i64, !dbg !9176
  %arrayidx46 = getelementptr i16, i16* %36, i64 %idxprom, !dbg !9176
  %call47 = call i32 @pcie_capability_read_word(%struct.pci_dev* %35, i32 8, i16* %arrayidx46) #9, !dbg !9178
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9179
  %39 = load i16*, i16** %cap, align 8, !dbg !9180
  %40 = load i32, i32* %i, align 4, !dbg !9181
  %inc48 = add i32 %40, 1, !dbg !9181
  store i32 %inc48, i32* %i, align 4, !dbg !9181
  %idxprom49 = sext i32 %40 to i64, !dbg !9180
  %arrayidx50 = getelementptr i16, i16* %39, i64 %idxprom49, !dbg !9180
  %call51 = call i32 @pcie_capability_read_word(%struct.pci_dev* %38, i32 16, i16* %arrayidx50) #9, !dbg !9182
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9183
  %42 = load i16*, i16** %cap, align 8, !dbg !9184
  %43 = load i32, i32* %i, align 4, !dbg !9185
  %inc52 = add i32 %43, 1, !dbg !9185
  store i32 %inc52, i32* %i, align 4, !dbg !9185
  %idxprom53 = sext i32 %43 to i64, !dbg !9184
  %arrayidx54 = getelementptr i16, i16* %42, i64 %idxprom53, !dbg !9184
  %call55 = call i32 @pcie_capability_read_word(%struct.pci_dev* %41, i32 24, i16* %arrayidx54) #9, !dbg !9186
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9187
  %45 = load i16*, i16** %cap, align 8, !dbg !9188
  %46 = load i32, i32* %i, align 4, !dbg !9189
  %inc56 = add i32 %46, 1, !dbg !9189
  store i32 %inc56, i32* %i, align 4, !dbg !9189
  %idxprom57 = sext i32 %46 to i64, !dbg !9188
  %arrayidx58 = getelementptr i16, i16* %45, i64 %idxprom57, !dbg !9188
  %call59 = call i32 @pcie_capability_read_word(%struct.pci_dev* %44, i32 28, i16* %arrayidx58) #9, !dbg !9190
  %47 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9191
  %48 = load i16*, i16** %cap, align 8, !dbg !9192
  %49 = load i32, i32* %i, align 4, !dbg !9193
  %inc60 = add i32 %49, 1, !dbg !9193
  store i32 %inc60, i32* %i, align 4, !dbg !9193
  %idxprom61 = sext i32 %49 to i64, !dbg !9192
  %arrayidx62 = getelementptr i16, i16* %48, i64 %idxprom61, !dbg !9192
  %call63 = call i32 @pcie_capability_read_word(%struct.pci_dev* %47, i32 40, i16* %arrayidx62) #9, !dbg !9194
  %50 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9195
  %51 = load i16*, i16** %cap, align 8, !dbg !9196
  %52 = load i32, i32* %i, align 4, !dbg !9197
  %inc64 = add i32 %52, 1, !dbg !9197
  store i32 %inc64, i32* %i, align 4, !dbg !9197
  %idxprom65 = sext i32 %52 to i64, !dbg !9196
  %arrayidx66 = getelementptr i16, i16* %51, i64 %idxprom65, !dbg !9196
  %call67 = call i32 @pcie_capability_read_word(%struct.pci_dev* %50, i32 48, i16* %arrayidx66) #9, !dbg !9198
  %53 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9199
  %54 = load i16*, i16** %cap, align 8, !dbg !9200
  %55 = load i32, i32* %i, align 4, !dbg !9201
  %inc68 = add i32 %55, 1, !dbg !9201
  store i32 %inc68, i32* %i, align 4, !dbg !9201
  %idxprom69 = sext i32 %55 to i64, !dbg !9200
  %arrayidx70 = getelementptr i16, i16* %54, i64 %idxprom69, !dbg !9200
  %call71 = call i32 @pcie_capability_read_word(%struct.pci_dev* %53, i32 56, i16* %arrayidx70) #9, !dbg !9202
  %56 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %state, align 8, !dbg !9203
  %next = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %56, i32 0, i32 0, !dbg !9204
  %57 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9205
  %saved_cap_space = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %57, i32 0, i32 51, !dbg !9206
  call void @hlist_add_head(%struct.hlist_node* %next, %struct.hlist_head* %saved_cap_space) #9, !dbg !9207
  br label %if.end72, !dbg !9208

if.end72:                                         ; preds = %if.then, %if.then4, %if.then8, %if.then33, %if.then39, %if.end40, %if.end9
  ret void, !dbg !9209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_no_flr(%struct.pci_dev* %dev) #0 !dbg !9210 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9211, metadata !DIExpression()), !dbg !9212
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9213
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 47, !dbg !9214
  %1 = load i16, i16* %dev_flags, align 2, !dbg !9215
  %conv = zext i16 %1 to i32, !dbg !9215
  %or = or i32 %conv, 1024, !dbg !9215
  %conv1 = trunc i32 %or to i16, !dbg !9215
  store i16 %conv1, i16* %dev_flags, align 2, !dbg !9215
  ret void, !dbg !9216
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_no_ext_tags(%struct.pci_dev* %pdev) #0 !dbg !9217 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bridge = alloca %struct.pci_host_bridge*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9218, metadata !DIExpression()), !dbg !9219
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %bridge, metadata !9220, metadata !DIExpression()), !dbg !9265
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9266
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !9267
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9267
  %call = call %struct.pci_host_bridge* @pci_find_host_bridge(%struct.pci_bus* %1) #9, !dbg !9268
  store %struct.pci_host_bridge* %call, %struct.pci_host_bridge** %bridge, align 8, !dbg !9265
  %2 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !9269
  %tobool = icmp ne %struct.pci_host_bridge* %2, null, !dbg !9269
  br i1 %tobool, label %if.end, label %if.then, !dbg !9271

if.then:                                          ; preds = %entry
  br label %return, !dbg !9272

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !9273
  %no_ext_tags = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %3, i32 0, i32 13, !dbg !9274
  %bf.load = load i16, i16* %no_ext_tags, align 8, !dbg !9275
  %bf.clear = and i16 %bf.load, -3, !dbg !9275
  %bf.set = or i16 %bf.clear, 2, !dbg !9275
  store i16 %bf.set, i16* %no_ext_tags, align 8, !dbg !9275
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9276
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !9276
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.134, i64 0, i64 0)) #10, !dbg !9276
  %5 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %bridge, align 8, !dbg !9277
  %bus1 = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %5, i32 0, i32 1, !dbg !9278
  %6 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !9278
  call void @pci_walk_bus(%struct.pci_bus* %6, i32 (%struct.pci_dev*, i8*)* @pci_configure_extended_tags, i8* null) #9, !dbg !9279
  br label %return, !dbg !9280

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_amd_harvest_no_ats(%struct.pci_dev* %pdev) #0 !dbg !9281 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9282, metadata !DIExpression()), !dbg !9283
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9284
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 8, !dbg !9286
  %1 = load i16, i16* %device, align 2, !dbg !9286
  %conv = zext i16 %1 to i32, !dbg !9284
  %cmp = icmp eq i32 %conv, 29458, !dbg !9287
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !9288

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9289
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 12, !dbg !9290
  %3 = load i8, i8* %revision, align 8, !dbg !9290
  %conv2 = zext i8 %3 to i32, !dbg !9289
  %cmp3 = icmp ne i32 %conv2, 0, !dbg !9291
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !9292

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9293
  %device5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 8, !dbg !9294
  %5 = load i16, i16* %device5, align 2, !dbg !9294
  %conv6 = zext i16 %5 to i32, !dbg !9293
  %cmp7 = icmp eq i32 %conv6, 29504, !dbg !9295
  br i1 %cmp7, label %land.lhs.true9, label %if.end, !dbg !9296

land.lhs.true9:                                   ; preds = %lor.lhs.false
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9297
  %revision10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 12, !dbg !9298
  %7 = load i8, i8* %revision10, align 8, !dbg !9298
  %conv11 = zext i8 %7 to i32, !dbg !9297
  %cmp12 = icmp ne i32 %conv11, 197, !dbg !9299
  br i1 %cmp12, label %if.then, label %if.end, !dbg !9300

if.then:                                          ; preds = %land.lhs.true9, %land.lhs.true
  br label %return, !dbg !9301

if.end:                                           ; preds = %land.lhs.true9, %lor.lhs.false
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9302
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !9302
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.135, i64 0, i64 0)) #10, !dbg !9302
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9303
  %ats_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 60, !dbg !9304
  store i16 0, i16* %ats_cap, align 8, !dbg !9305
  br label %return, !dbg !9306

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_fsl_no_msi(%struct.pci_dev* %pdev) #0 !dbg !9307 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9308, metadata !DIExpression()), !dbg !9309
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9310
  %call = call i32 @pci_pcie_type(%struct.pci_dev* %0) #9, !dbg !9312
  %cmp = icmp eq i32 %call, 4, !dbg !9313
  br i1 %cmp, label %if.then, label %if.end, !dbg !9314

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9315
  %no_msi = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 46, !dbg !9316
  %2 = bitcast [5 x i8]* %no_msi to i40*, !dbg !9316
  %bf.load = load i40, i40* %2, align 1, !dbg !9317
  %bf.clear = and i40 %bf.load, -65, !dbg !9317
  %bf.set = or i40 %bf.clear, 64, !dbg !9317
  store i40 %bf.set, i40* %2, align 1, !dbg !9317
  br label %if.end, !dbg !9315

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9318
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_gpu_hda(%struct.pci_dev* %hda) #0 !dbg !9319 {
entry:
  %hda.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %hda, %struct.pci_dev** %hda.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %hda.addr, metadata !9320, metadata !DIExpression()), !dbg !9321
  %0 = load %struct.pci_dev*, %struct.pci_dev** %hda.addr, align 8, !dbg !9322
  call void @pci_create_device_link(%struct.pci_dev* %0, i32 1, i32 0, i32 3, i32 16) #9, !dbg !9323
  ret void, !dbg !9324
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_gpu_usb(%struct.pci_dev* %usb) #0 !dbg !9325 {
entry:
  %usb.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %usb, %struct.pci_dev** %usb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %usb.addr, metadata !9326, metadata !DIExpression()), !dbg !9327
  %0 = load %struct.pci_dev*, %struct.pci_dev** %usb.addr, align 8, !dbg !9328
  call void @pci_create_device_link(%struct.pci_dev* %0, i32 2, i32 0, i32 3, i32 16) #9, !dbg !9329
  ret void, !dbg !9330
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_gpu_usb_typec_ucsi(%struct.pci_dev* %ucsi) #0 !dbg !9331 {
entry:
  %ucsi.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %ucsi, %struct.pci_dev** %ucsi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %ucsi.addr, metadata !9332, metadata !DIExpression()), !dbg !9333
  %0 = load %struct.pci_dev*, %struct.pci_dev** %ucsi.addr, align 8, !dbg !9334
  call void @pci_create_device_link(%struct.pci_dev* %0, i32 3, i32 0, i32 3, i32 16) #9, !dbg !9335
  ret void, !dbg !9336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_nvidia_hda(%struct.pci_dev* %gpu) #0 !dbg !9337 {
entry:
  %gpu.addr = alloca %struct.pci_dev*, align 8
  %hdr_type = alloca i8, align 1
  %val = alloca i32, align 4
  store %struct.pci_dev* %gpu, %struct.pci_dev** %gpu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %gpu.addr, metadata !9338, metadata !DIExpression()), !dbg !9339
  call void @llvm.dbg.declare(metadata i8* %hdr_type, metadata !9340, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9342, metadata !DIExpression()), !dbg !9343
  %0 = load %struct.pci_dev*, %struct.pci_dev** %gpu.addr, align 8, !dbg !9344
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 8, !dbg !9346
  %1 = load i16, i16* %device, align 2, !dbg !9346
  %conv = zext i16 %1 to i32, !dbg !9344
  %cmp = icmp slt i32 %conv, 2208, !dbg !9347
  br i1 %cmp, label %if.then, label %if.end, !dbg !9348

if.then:                                          ; preds = %entry
  br label %return, !dbg !9349

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %gpu.addr, align 8, !dbg !9350
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %2, i32 1160, i32* %val) #9, !dbg !9351
  %3 = load i32, i32* %val, align 4, !dbg !9352
  %conv2 = zext i32 %3 to i64, !dbg !9352
  %and = and i64 %conv2, 33554432, !dbg !9354
  %tobool = icmp ne i64 %and, 0, !dbg !9354
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !9355

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !9356

if.end4:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %gpu.addr, align 8, !dbg !9357
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !9357
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.138, i64 0, i64 0)) #10, !dbg !9357
  %5 = load %struct.pci_dev*, %struct.pci_dev** %gpu.addr, align 8, !dbg !9358
  %6 = load i32, i32* %val, align 4, !dbg !9359
  %conv5 = zext i32 %6 to i64, !dbg !9359
  %or = or i64 %conv5, 33554432, !dbg !9360
  %conv6 = trunc i64 %or to i32, !dbg !9359
  %call7 = call i32 @pci_write_config_dword(%struct.pci_dev* %5, i32 1160, i32 %conv6) #9, !dbg !9361
  %7 = load %struct.pci_dev*, %struct.pci_dev** %gpu.addr, align 8, !dbg !9362
  %call8 = call i32 @pci_read_config_byte(%struct.pci_dev* %7, i32 14, i8* %hdr_type) #9, !dbg !9363
  %8 = load i8, i8* %hdr_type, align 1, !dbg !9364
  %conv9 = zext i8 %8 to i32, !dbg !9364
  %and10 = and i32 %conv9, 128, !dbg !9365
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9366
  %lnot = xor i1 %tobool11, true, !dbg !9366
  %lnot12 = xor i1 %lnot, true, !dbg !9367
  %lnot.ext = zext i1 %lnot12 to i32, !dbg !9367
  %9 = load %struct.pci_dev*, %struct.pci_dev** %gpu.addr, align 8, !dbg !9368
  %multifunction = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 46, !dbg !9369
  %10 = bitcast [5 x i8]* %multifunction to i40*, !dbg !9369
  %11 = zext i32 %lnot.ext to i40, !dbg !9370
  %bf.load = load i40, i40* %10, align 1, !dbg !9370
  %bf.value = and i40 %11, 1, !dbg !9370
  %bf.shl = shl i40 %bf.value, 4, !dbg !9370
  %bf.clear = and i40 %bf.load, -17, !dbg !9370
  %bf.set = or i40 %bf.clear, %bf.shl, !dbg !9370
  store i40 %bf.set, i40* %10, align 1, !dbg !9370
  %bf.result.cast = trunc i40 %bf.value to i32, !dbg !9370
  br label %return, !dbg !9371

return:                                           ; preds = %if.end4, %if.then3, %if.then
  ret void, !dbg !9371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_idt_bus_quirk(%struct.pci_bus* %bus, i32 %devfn, i32* %l, i32 %timeout) #0 !dbg !9372 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %devfn.addr = alloca i32, align 4
  %l.addr = alloca i32*, align 8
  %timeout.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %ctrl = alloca i16, align 2
  %found = alloca i8, align 1
  %bridge = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !9375, metadata !DIExpression()), !dbg !9376
  store i32 %devfn, i32* %devfn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devfn.addr, metadata !9377, metadata !DIExpression()), !dbg !9378
  store i32* %l, i32** %l.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %l.addr, metadata !9379, metadata !DIExpression()), !dbg !9380
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !9381, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9383, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !9385, metadata !DIExpression()), !dbg !9386
  store i16 0, i16* %ctrl, align 2, !dbg !9386
  call void @llvm.dbg.declare(metadata i8* %found, metadata !9387, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !9389, metadata !DIExpression()), !dbg !9390
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9391
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !9392
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !9392
  store %struct.pci_dev* %1, %struct.pci_dev** %bridge, align 8, !dbg !9390
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9393
  %acs_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 63, !dbg !9394
  %3 = load i16, i16* %acs_cap, align 4, !dbg !9394
  %conv = zext i16 %3 to i32, !dbg !9393
  store i32 %conv, i32* %pos, align 4, !dbg !9395
  %4 = load i32, i32* %pos, align 4, !dbg !9396
  %tobool = icmp ne i32 %4, 0, !dbg !9396
  br i1 %tobool, label %if.then, label %if.end9, !dbg !9398

if.then:                                          ; preds = %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9399
  %6 = load i32, i32* %pos, align 4, !dbg !9401
  %add = add i32 %6, 6, !dbg !9402
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %5, i32 %add, i16* %ctrl) #9, !dbg !9403
  %7 = load i16, i16* %ctrl, align 2, !dbg !9404
  %conv1 = zext i16 %7 to i32, !dbg !9404
  %and = and i32 %conv1, 1, !dbg !9406
  %tobool2 = icmp ne i32 %and, 0, !dbg !9406
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !9407

if.then3:                                         ; preds = %if.then
  %8 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9408
  %9 = load i32, i32* %pos, align 4, !dbg !9409
  %add4 = add i32 %9, 6, !dbg !9410
  %10 = load i16, i16* %ctrl, align 2, !dbg !9411
  %conv5 = zext i16 %10 to i32, !dbg !9411
  %and6 = and i32 %conv5, -2, !dbg !9412
  %conv7 = trunc i32 %and6 to i16, !dbg !9411
  %call8 = call i32 @pci_write_config_word(%struct.pci_dev* %8, i32 %add4, i16 zeroext %conv7) #9, !dbg !9413
  br label %if.end, !dbg !9413

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end9, !dbg !9414

if.end9:                                          ; preds = %if.end, %entry
  %11 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9415
  %12 = load i32, i32* %devfn.addr, align 4, !dbg !9416
  %13 = load i32*, i32** %l.addr, align 8, !dbg !9417
  %14 = load i32, i32* %timeout.addr, align 4, !dbg !9418
  %call10 = call zeroext i1 @pci_bus_generic_read_dev_vendor_id(%struct.pci_bus* %11, i32 %12, i32* %13, i32 %14) #9, !dbg !9419
  %frombool = zext i1 %call10 to i8, !dbg !9420
  store i8 %frombool, i8* %found, align 1, !dbg !9420
  %15 = load i8, i8* %found, align 1, !dbg !9421
  %tobool11 = trunc i8 %15 to i1, !dbg !9421
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !9423

if.then12:                                        ; preds = %if.end9
  %16 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9424
  %17 = load i32, i32* %devfn.addr, align 4, !dbg !9425
  %call13 = call i32 @pci_bus_write_config_word(%struct.pci_bus* %16, i32 %17, i32 0, i16 zeroext 0) #9, !dbg !9426
  br label %if.end14, !dbg !9426

if.end14:                                         ; preds = %if.then12, %if.end9
  %18 = load i16, i16* %ctrl, align 2, !dbg !9427
  %conv15 = zext i16 %18 to i32, !dbg !9427
  %and16 = and i32 %conv15, 1, !dbg !9429
  %tobool17 = icmp ne i32 %and16, 0, !dbg !9429
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !9430

if.then18:                                        ; preds = %if.end14
  %19 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9431
  %20 = load i32, i32* %pos, align 4, !dbg !9432
  %add19 = add i32 %20, 6, !dbg !9433
  %21 = load i16, i16* %ctrl, align 2, !dbg !9434
  %call20 = call i32 @pci_write_config_word(%struct.pci_dev* %19, i32 %add19, i16 zeroext %21) #9, !dbg !9435
  br label %if.end21, !dbg !9435

if.end21:                                         ; preds = %if.then18, %if.end14
  %22 = load i8, i8* %found, align 1, !dbg !9436
  %tobool22 = trunc i8 %22 to i1, !dbg !9436
  %conv23 = zext i1 %tobool22 to i32, !dbg !9436
  ret i32 %conv23, !dbg !9437
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_word(%struct.pci_dev*, i32, i16 zeroext) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @pci_bus_generic_read_dev_vendor_id(%struct.pci_bus*, i32, i32*, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_bus_write_config_word(%struct.pci_bus*, i32, i32, i16 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_switchtec_ntb_dma_alias(%struct.pci_dev* %pdev) #0 !dbg !9438 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %mmio = alloca i8*, align 8
  %mmio_ntb = alloca %struct.ntb_info_regs*, align 8
  %mmio_ctrl = alloca %struct.ntb_ctrl_regs*, align 8
  %partition_map = alloca i64, align 8
  %partition = alloca i8, align 1
  %pp = alloca i32, align 4
  %mmio_peer_ctrl = alloca %struct.ntb_ctrl_regs*, align 8
  %table_sz = alloca i32, align 4
  %te = alloca i32, align 4
  %rid_entry = alloca i32, align 4
  %devfn = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9439, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !9441, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.declare(metadata %struct.ntb_info_regs** %mmio_ntb, metadata !9443, metadata !DIExpression()), !dbg !9463
  call void @llvm.dbg.declare(metadata %struct.ntb_ctrl_regs** %mmio_ctrl, metadata !9464, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.declare(metadata i64* %partition_map, metadata !9510, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.declare(metadata i8* %partition, metadata !9512, metadata !DIExpression()), !dbg !9513
  call void @llvm.dbg.declare(metadata i32* %pp, metadata !9514, metadata !DIExpression()), !dbg !9515
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9516
  %call = call i32 @pci_enable_device(%struct.pci_dev* %0) #9, !dbg !9518
  %tobool = icmp ne i32 %call, 0, !dbg !9518
  br i1 %tobool, label %if.then, label %if.end, !dbg !9519

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9520
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !9520
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.139, i64 0, i64 0)) #10, !dbg !9520
  br label %return, !dbg !9522

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9523
  %call1 = call i8* @pci_iomap(%struct.pci_dev* %2, i32 0, i64 0) #9, !dbg !9524
  store i8* %call1, i8** %mmio, align 8, !dbg !9525
  %3 = load i8*, i8** %mmio, align 8, !dbg !9526
  %cmp = icmp eq i8* %3, null, !dbg !9528
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !9529

if.then2:                                         ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9530
  call void @pci_disable_device(%struct.pci_dev* %4) #9, !dbg !9532
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9533
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !9533
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.140, i64 0, i64 0)) #10, !dbg !9533
  br label %return, !dbg !9534

if.end4:                                          ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9535
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !9535
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.141, i64 0, i64 0)) #10, !dbg !9535
  %7 = load i8*, i8** %mmio, align 8, !dbg !9536
  %add.ptr = getelementptr i8, i8* %7, i64 65536, !dbg !9537
  %8 = bitcast i8* %add.ptr to %struct.ntb_info_regs*, !dbg !9536
  store %struct.ntb_info_regs* %8, %struct.ntb_info_regs** %mmio_ntb, align 8, !dbg !9538
  %9 = load %struct.ntb_info_regs*, %struct.ntb_info_regs** %mmio_ntb, align 8, !dbg !9539
  %10 = bitcast %struct.ntb_info_regs* %9 to i8*, !dbg !9540
  %add.ptr6 = getelementptr i8, i8* %10, i64 16384, !dbg !9541
  %11 = bitcast i8* %add.ptr6 to %struct.ntb_ctrl_regs*, !dbg !9540
  store %struct.ntb_ctrl_regs* %11, %struct.ntb_ctrl_regs** %mmio_ctrl, align 8, !dbg !9542
  %12 = load %struct.ntb_info_regs*, %struct.ntb_info_regs** %mmio_ntb, align 8, !dbg !9543
  %partition_id = getelementptr inbounds %struct.ntb_info_regs, %struct.ntb_info_regs* %12, i32 0, i32 1, !dbg !9544
  %call7 = call i32 @ioread8(i8* %partition_id) #9, !dbg !9545
  %conv = trunc i32 %call7 to i8, !dbg !9545
  store i8 %conv, i8* %partition, align 1, !dbg !9546
  %13 = load %struct.ntb_info_regs*, %struct.ntb_info_regs** %mmio_ntb, align 8, !dbg !9547
  %ep_map = getelementptr inbounds %struct.ntb_info_regs, %struct.ntb_info_regs* %13, i32 0, i32 3, !dbg !9548
  %14 = bitcast i64* %ep_map to i8*, !dbg !9549
  %call8 = call i32 @ioread32(i8* %14) #9, !dbg !9550
  %conv9 = zext i32 %call8 to i64, !dbg !9550
  store i64 %conv9, i64* %partition_map, align 8, !dbg !9551
  %15 = load %struct.ntb_info_regs*, %struct.ntb_info_regs** %mmio_ntb, align 8, !dbg !9552
  %ep_map10 = getelementptr inbounds %struct.ntb_info_regs, %struct.ntb_info_regs* %15, i32 0, i32 3, !dbg !9553
  %add.ptr11 = getelementptr i64, i64* %ep_map10, i64 4, !dbg !9554
  %16 = bitcast i64* %add.ptr11 to i8*, !dbg !9555
  %call12 = call i32 @ioread32(i8* %16) #9, !dbg !9556
  %conv13 = zext i32 %call12 to i64, !dbg !9557
  %shl = shl i64 %conv13, 32, !dbg !9558
  %17 = load i64, i64* %partition_map, align 8, !dbg !9559
  %or = or i64 %17, %shl, !dbg !9559
  store i64 %or, i64* %partition_map, align 8, !dbg !9559
  %18 = load i8, i8* %partition, align 1, !dbg !9560
  %conv14 = zext i8 %18 to i32, !dbg !9560
  %sh_prom = zext i32 %conv14 to i64, !dbg !9561
  %shl15 = shl i64 1, %sh_prom, !dbg !9561
  %neg = xor i64 %shl15, -1, !dbg !9562
  %19 = load i64, i64* %partition_map, align 8, !dbg !9563
  %and = and i64 %19, %neg, !dbg !9563
  store i64 %and, i64* %partition_map, align 8, !dbg !9563
  store i32 0, i32* %pp, align 4, !dbg !9564
  br label %for.cond, !dbg !9566

for.cond:                                         ; preds = %for.inc44, %if.end4
  %20 = load i32, i32* %pp, align 4, !dbg !9567
  %conv16 = sext i32 %20 to i64, !dbg !9567
  %cmp17 = icmp ult i64 %conv16, 64, !dbg !9569
  br i1 %cmp17, label %for.body, label %for.end46, !dbg !9570

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ntb_ctrl_regs** %mmio_peer_ctrl, metadata !9571, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.declare(metadata i32* %table_sz, metadata !9574, metadata !DIExpression()), !dbg !9575
  store i32 0, i32* %table_sz, align 4, !dbg !9575
  call void @llvm.dbg.declare(metadata i32* %te, metadata !9576, metadata !DIExpression()), !dbg !9577
  %21 = load i64, i64* %partition_map, align 8, !dbg !9578
  %22 = load i32, i32* %pp, align 4, !dbg !9580
  %sh_prom19 = zext i32 %22 to i64, !dbg !9581
  %shl20 = shl i64 1, %sh_prom19, !dbg !9581
  %and21 = and i64 %21, %shl20, !dbg !9582
  %tobool22 = icmp ne i64 %and21, 0, !dbg !9582
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !9583

if.then23:                                        ; preds = %for.body
  br label %for.inc44, !dbg !9584

if.end24:                                         ; preds = %for.body
  %23 = load %struct.ntb_ctrl_regs*, %struct.ntb_ctrl_regs** %mmio_ctrl, align 8, !dbg !9585
  %24 = load i32, i32* %pp, align 4, !dbg !9586
  %idxprom = sext i32 %24 to i64, !dbg !9585
  %arrayidx = getelementptr %struct.ntb_ctrl_regs, %struct.ntb_ctrl_regs* %23, i64 %idxprom, !dbg !9585
  store %struct.ntb_ctrl_regs* %arrayidx, %struct.ntb_ctrl_regs** %mmio_peer_ctrl, align 8, !dbg !9587
  %25 = load %struct.ntb_ctrl_regs*, %struct.ntb_ctrl_regs** %mmio_peer_ctrl, align 8, !dbg !9588
  %req_id_table_size = getelementptr inbounds %struct.ntb_ctrl_regs, %struct.ntb_ctrl_regs* %25, i32 0, i32 8, !dbg !9589
  %26 = bitcast i16* %req_id_table_size to i8*, !dbg !9590
  %call25 = call i32 @ioread16(i8* %26) #9, !dbg !9591
  store i32 %call25, i32* %table_sz, align 4, !dbg !9592
  %27 = load i32, i32* %table_sz, align 4, !dbg !9593
  %tobool26 = icmp ne i32 %27, 0, !dbg !9593
  br i1 %tobool26, label %if.end29, label %if.then27, !dbg !9595

if.then27:                                        ; preds = %if.end24
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9596
  %dev28 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 41, !dbg !9596
  %29 = load i32, i32* %pp, align 4, !dbg !9596
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev28, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.142, i64 0, i64 0), i32 %29) #10, !dbg !9596
  br label %for.inc44, !dbg !9598

if.end29:                                         ; preds = %if.end24
  %30 = load i32, i32* %table_sz, align 4, !dbg !9599
  %cmp30 = icmp ugt i32 %30, 512, !dbg !9601
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !9602

if.then32:                                        ; preds = %if.end29
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9603
  %dev33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 41, !dbg !9603
  %32 = load i32, i32* %pp, align 4, !dbg !9603
  %33 = load i32, i32* %table_sz, align 4, !dbg !9603
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev33, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.143, i64 0, i64 0), i32 %32, i32 %33) #10, !dbg !9603
  br label %for.inc44, !dbg !9605

if.end34:                                         ; preds = %if.end29
  store i32 0, i32* %te, align 4, !dbg !9606
  br label %for.cond35, !dbg !9608

for.cond35:                                       ; preds = %for.inc, %if.end34
  %34 = load i32, i32* %te, align 4, !dbg !9609
  %35 = load i32, i32* %table_sz, align 4, !dbg !9611
  %cmp36 = icmp ult i32 %34, %35, !dbg !9612
  br i1 %cmp36, label %for.body38, label %for.end, !dbg !9613

for.body38:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata i32* %rid_entry, metadata !9614, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.declare(metadata i8* %devfn, metadata !9617, metadata !DIExpression()), !dbg !9618
  %36 = load %struct.ntb_ctrl_regs*, %struct.ntb_ctrl_regs** %mmio_peer_ctrl, align 8, !dbg !9619
  %req_id_table = getelementptr inbounds %struct.ntb_ctrl_regs, %struct.ntb_ctrl_regs* %36, i32 0, i32 15, !dbg !9620
  %37 = load i32, i32* %te, align 4, !dbg !9621
  %idxprom39 = sext i32 %37 to i64, !dbg !9619
  %arrayidx40 = getelementptr [512 x i32], [512 x i32]* %req_id_table, i64 0, i64 %idxprom39, !dbg !9619
  %38 = bitcast i32* %arrayidx40 to i8*, !dbg !9622
  %call41 = call i32 @ioread32(i8* %38) #9, !dbg !9623
  store i32 %call41, i32* %rid_entry, align 4, !dbg !9624
  %39 = load i32, i32* %rid_entry, align 4, !dbg !9625
  %shr = lshr i32 %39, 1, !dbg !9626
  %and42 = and i32 %shr, 255, !dbg !9627
  %conv43 = trunc i32 %and42 to i8, !dbg !9628
  store i8 %conv43, i8* %devfn, align 1, !dbg !9629
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9630
  %41 = load i8, i8* %devfn, align 1, !dbg !9631
  call void @pci_add_dma_alias(%struct.pci_dev* %40, i8 zeroext %41, i32 1) #9, !dbg !9632
  br label %for.inc, !dbg !9633

for.inc:                                          ; preds = %for.body38
  %42 = load i32, i32* %te, align 4, !dbg !9634
  %inc = add i32 %42, 1, !dbg !9634
  store i32 %inc, i32* %te, align 4, !dbg !9634
  br label %for.cond35, !dbg !9635, !llvm.loop !9636

for.end:                                          ; preds = %for.cond35
  br label %for.inc44, !dbg !9638

for.inc44:                                        ; preds = %for.end, %if.then32, %if.then27, %if.then23
  %43 = load i32, i32* %pp, align 4, !dbg !9639
  %inc45 = add i32 %43, 1, !dbg !9639
  store i32 %inc45, i32* %pp, align 4, !dbg !9639
  br label %for.cond, !dbg !9640, !llvm.loop !9641

for.end46:                                        ; preds = %for.cond
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9643
  %45 = load i8*, i8** %mmio, align 8, !dbg !9644
  call void @pci_iounmap(%struct.pci_dev* %44, i8* %45) #9, !dbg !9645
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9646
  call void @pci_disable_device(%struct.pci_dev* %46) #9, !dbg !9647
  br label %return, !dbg !9648

return:                                           ; preds = %for.end46, %if.then2, %if.then
  ret void, !dbg !9648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_plx_ntb_dma_alias(%struct.pci_dev* %pdev) #0 !dbg !9649 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9650, metadata !DIExpression()), !dbg !9651
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9652
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9652
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.144, i64 0, i64 0)) #10, !dbg !9652
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9653
  call void @pci_add_dma_alias(%struct.pci_dev* %1, i8 zeroext 0, i32 256) #9, !dbg !9654
  ret void, !dbg !9655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_reset_lenovo_thinkpad_p50_nvgpu(%struct.pci_dev* %pdev) #0 !dbg !9656 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %map = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9657, metadata !DIExpression()), !dbg !9658
  call void @llvm.dbg.declare(metadata i8** %map, metadata !9659, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9661, metadata !DIExpression()), !dbg !9662
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9663
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 9, !dbg !9665
  %1 = load i16, i16* %subsystem_vendor, align 8, !dbg !9665
  %conv = zext i16 %1 to i32, !dbg !9663
  %cmp = icmp ne i32 %conv, 6058, !dbg !9666
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9667

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9668
  %subsystem_device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 10, !dbg !9669
  %3 = load i16, i16* %subsystem_device, align 2, !dbg !9669
  %conv2 = zext i16 %3 to i32, !dbg !9668
  %cmp3 = icmp ne i32 %conv2, 8750, !dbg !9670
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !9671

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9672
  %reset_fn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 46, !dbg !9673
  %5 = bitcast [5 x i8]* %reset_fn to i40*, !dbg !9673
  %bf.load = load i40, i40* %5, align 1, !dbg !9673
  %bf.lshr = lshr i40 %bf.load, 23, !dbg !9673
  %bf.clear = and i40 %bf.lshr, 1, !dbg !9673
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !9673
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9672
  br i1 %tobool, label %if.end, label %if.then, !dbg !9674

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %entry
  br label %return, !dbg !9675

if.end:                                           ; preds = %lor.lhs.false5
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9676
  %call = call i32 @pci_enable_device_mem(%struct.pci_dev* %6) #9, !dbg !9678
  %tobool6 = icmp ne i32 %call, 0, !dbg !9678
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !9679

if.then7:                                         ; preds = %if.end
  br label %return, !dbg !9680

if.end8:                                          ; preds = %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9681
  %call9 = call i8* @pci_iomap(%struct.pci_dev* %7, i32 0, i64 143360) #9, !dbg !9682
  store i8* %call9, i8** %map, align 8, !dbg !9683
  %8 = load i8*, i8** %map, align 8, !dbg !9684
  %tobool10 = icmp ne i8* %8, null, !dbg !9684
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !9686

if.then11:                                        ; preds = %if.end8
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9687
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !9687
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.145, i64 0, i64 0)) #10, !dbg !9687
  br label %out_disable, !dbg !9689

if.end12:                                         ; preds = %if.end8
  %10 = load i8*, i8** %map, align 8, !dbg !9690
  %add.ptr = getelementptr i8, i8* %10, i64 140300, !dbg !9692
  %call13 = call i32 @ioread32(i8* %add.ptr) #9, !dbg !9693
  %and = and i32 %call13, 2, !dbg !9694
  %tobool14 = icmp ne i32 %and, 0, !dbg !9694
  br i1 %tobool14, label %if.then15, label %if.end23, !dbg !9695

if.then15:                                        ; preds = %if.end12
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9696
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !9696
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.146, i64 0, i64 0)) #10, !dbg !9696
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9698
  %call17 = call i32 @pci_reset_bus(%struct.pci_dev* %12) #9, !dbg !9699
  store i32 %call17, i32* %ret, align 4, !dbg !9700
  %13 = load i32, i32* %ret, align 4, !dbg !9701
  %cmp18 = icmp slt i32 %13, 0, !dbg !9703
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !9704

if.then20:                                        ; preds = %if.then15
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9705
  %dev21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !9705
  %15 = load i32, i32* %ret, align 4, !dbg !9705
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.147, i64 0, i64 0), i32 %15) #10, !dbg !9705
  br label %if.end22, !dbg !9705

if.end22:                                         ; preds = %if.then20, %if.then15
  br label %if.end23, !dbg !9706

if.end23:                                         ; preds = %if.end22, %if.end12
  %16 = load i8*, i8** %map, align 8, !dbg !9707
  call void @iounmap(i8* %16) #9, !dbg !9708
  br label %out_disable, !dbg !9708

out_disable:                                      ; preds = %if.end23, %if.then11
  call void @llvm.dbg.label(metadata !9709), !dbg !9710
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9711
  call void @pci_disable_device(%struct.pci_dev* %17) #9, !dbg !9712
  br label %return, !dbg !9713

return:                                           ; preds = %out_disable, %if.then7, %if.then
  ret void, !dbg !9713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_fixup_no_d0_pme(%struct.pci_dev* %dev) #0 !dbg !9714 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9715, metadata !DIExpression()), !dbg !9716
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9717
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9717
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.148, i64 0, i64 0)) #10, !dbg !9717
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9718
  %pme_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 29, !dbg !9719
  %2 = bitcast i24* %pme_support to i32*, !dbg !9719
  %bf.load = load i32, i32* %2, align 2, !dbg !9720
  %bf.clear = and i32 %bf.load, 31, !dbg !9720
  %and = and i32 %bf.clear, -2, !dbg !9720
  %bf.load2 = load i32, i32* %2, align 2, !dbg !9720
  %bf.value = and i32 %and, 31, !dbg !9720
  %bf.clear3 = and i32 %bf.load2, -32, !dbg !9720
  %bf.set = or i32 %bf.clear3, %bf.value, !dbg !9720
  store i32 %bf.set, i32* %2, align 2, !dbg !9720
  ret void, !dbg !9721
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_fixup_no_pme(%struct.pci_dev* %dev) #0 !dbg !9722 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9723, metadata !DIExpression()), !dbg !9724
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9725
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9725
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.149, i64 0, i64 0)) #10, !dbg !9725
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9726
  %pme_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 29, !dbg !9727
  %2 = bitcast i24* %pme_support to i32*, !dbg !9727
  %bf.load = load i32, i32* %2, align 2, !dbg !9728
  %bf.clear = and i32 %bf.load, -32, !dbg !9728
  store i32 %bf.clear, i32* %2, align 2, !dbg !9728
  ret void, !dbg !9729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @apex_pci_fixup_class(%struct.pci_dev* %pdev) #0 !dbg !9730 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9731, metadata !DIExpression()), !dbg !9732
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9733
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 11, !dbg !9734
  %1 = load i32, i32* %class, align 4, !dbg !9734
  %or = or i32 557056, %1, !dbg !9735
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9736
  %class1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 11, !dbg !9737
  store i32 %or, i32* %class1, align 4, !dbg !9738
  ret void, !dbg !9739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @offset_to_ptr(i32* %off) #0 !dbg !9740 {
entry:
  %off.addr = alloca i32*, align 8
  store i32* %off, i32** %off.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %off.addr, metadata !9746, metadata !DIExpression()), !dbg !9747
  %0 = load i32*, i32** %off.addr, align 8, !dbg !9748
  %1 = ptrtoint i32* %0 to i64, !dbg !9749
  %2 = load i32*, i32** %off.addr, align 8, !dbg !9750
  %3 = load i32, i32* %2, align 4, !dbg !9751
  %conv = sext i32 %3 to i64, !dbg !9751
  %add = add i64 %1, %conv, !dbg !9752
  %4 = inttoptr i64 %add to i8*, !dbg !9753
  ret i8* %4, !dbg !9754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @fixup_debug_start(%struct.pci_dev* %dev, void (%struct.pci_dev*)* %fn) #0 !dbg !9755 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !9758, metadata !DIExpression()), !dbg !9764
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !9767, metadata !DIExpression()), !dbg !9769
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !9770, metadata !DIExpression()), !dbg !9772
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %fn.addr = alloca void (%struct.pci_dev*)*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9773, metadata !DIExpression()), !dbg !9774
  store void (%struct.pci_dev*)* %fn, void (%struct.pci_dev*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.pci_dev*)** %fn.addr, metadata !9775, metadata !DIExpression()), !dbg !9776
  %0 = load i8, i8* @initcall_debug, align 1, !dbg !9777
  %tobool = trunc i8 %0 to i1, !dbg !9777
  br i1 %tobool, label %if.then, label %if.end, !dbg !9778

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9779
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !9779
  %2 = load void (%struct.pci_dev*)*, void (%struct.pci_dev*)** %fn.addr, align 8, !dbg !9779
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !9769
  %3 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !9769
  %4 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !9772, !srcloc !9780
  store i64 %4, i64* %pfo_val__.i, align 8, !dbg !9772
  %5 = load i64, i64* %pfo_val__.i, align 8, !dbg !9772
  %6 = inttoptr i64 %5 to %struct.task_struct*, !dbg !9772
  store %struct.task_struct* %6, %struct.task_struct** %tmp.i, align 8, !dbg !9772
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !9772
  store %struct.task_struct* %7, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9764
  %8 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9764
  store %struct.task_struct* %8, %struct.task_struct** %tmp1.i, align 8, !dbg !9764
  %9 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !9764
  %call2 = call i32 @task_pid_nr(%struct.task_struct* %9) #9, !dbg !9779
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), void (%struct.pci_dev*)* %2, i32 %call2) #10, !dbg !9779
  br label %if.end, !dbg !9779

if.end:                                           ; preds = %if.then, %entry
  %call3 = call i64 @ktime_get() #9, !dbg !9781
  ret i64 %call3, !dbg !9782
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fixup_debug_report(%struct.pci_dev* %dev, i64 %calltime, void (%struct.pci_dev*)* %fn) #0 !dbg !9783 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %calltime.addr = alloca i64, align 8
  %fn.addr = alloca void (%struct.pci_dev*)*, align 8
  %delta = alloca i64, align 8
  %rettime = alloca i64, align 8
  %duration = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9786, metadata !DIExpression()), !dbg !9787
  store i64 %calltime, i64* %calltime.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %calltime.addr, metadata !9788, metadata !DIExpression()), !dbg !9789
  store void (%struct.pci_dev*)* %fn, void (%struct.pci_dev*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.pci_dev*)** %fn.addr, metadata !9790, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.declare(metadata i64* %delta, metadata !9792, metadata !DIExpression()), !dbg !9793
  call void @llvm.dbg.declare(metadata i64* %rettime, metadata !9794, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.declare(metadata i64* %duration, metadata !9796, metadata !DIExpression()), !dbg !9797
  %call = call i64 @ktime_get() #9, !dbg !9798
  store i64 %call, i64* %rettime, align 8, !dbg !9799
  %0 = load i64, i64* %rettime, align 8, !dbg !9800
  %1 = load i64, i64* %calltime.addr, align 8, !dbg !9800
  %sub = sub i64 %0, %1, !dbg !9800
  store i64 %sub, i64* %delta, align 8, !dbg !9801
  %2 = load i64, i64* %delta, align 8, !dbg !9802
  %call1 = call i64 @ktime_to_ns(i64 %2) #9, !dbg !9803
  %shr = lshr i64 %call1, 10, !dbg !9804
  store i64 %shr, i64* %duration, align 8, !dbg !9805
  %3 = load i8, i8* @initcall_debug, align 1, !dbg !9806
  %tobool = trunc i8 %3 to i1, !dbg !9806
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9808

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64, i64* %duration, align 8, !dbg !9809
  %cmp = icmp ugt i64 %4, 10000, !dbg !9810
  br i1 %cmp, label %if.then, label %if.end, !dbg !9811

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9812
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !9812
  %6 = load void (%struct.pci_dev*)*, void (%struct.pci_dev*)** %fn.addr, align 8, !dbg !9812
  %7 = load i64, i64* %duration, align 8, !dbg !9812
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), void (%struct.pci_dev*)* %6, i64 %7) #10, !dbg !9812
  br label %if.end, !dbg !9812

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret void, !dbg !9813
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @task_pid_nr(%struct.task_struct* %tsk) #0 !dbg !9814 {
entry:
  %tsk.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %tsk, %struct.task_struct** %tsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %tsk.addr, metadata !9817, metadata !DIExpression()), !dbg !9818
  %0 = load %struct.task_struct*, %struct.task_struct** %tsk.addr, align 8, !dbg !9819
  %pid = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 35, !dbg !9820
  %1 = load i32, i32* %pid, align 64, !dbg !9820
  ret i32 %1, !dbg !9821
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_to_ns(i64 %kt) #0 !dbg !9822 {
entry:
  %kt.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !9826, metadata !DIExpression()), !dbg !9827
  %0 = load i64, i64* %kt.addr, align 8, !dbg !9828
  ret i64 %0, !dbg !9829
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @pci_get_device(i32, i32, %struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_byte(%struct.pci_dev*, i32, i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_byte(%struct.pci_dev*, i32, i8 zeroext) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_dword(%struct.pci_dev*, i32, i32*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @inw(i32 %port) #0 !dbg !9830 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i16, align 2
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9834, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.declare(metadata i16* %value, metadata !9836, metadata !DIExpression()), !dbg !9835
  %0 = load i32, i32* %port.addr, align 4, !dbg !9835
  %1 = call i16 asm sideeffect "inw ${1:w}, ${0:w}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #11, !dbg !9835, !srcloc !9837
  store i16 %1, i16* %value, align 2, !dbg !9835
  %2 = load i16, i16* %value, align 2, !dbg !9835
  ret i16 %2, !dbg !9835
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outw(i16 zeroext %value, i32 %port) #0 !dbg !9838 {
entry:
  %value.addr = alloca i16, align 2
  %port.addr = alloca i32, align 4
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !9841, metadata !DIExpression()), !dbg !9842
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9843, metadata !DIExpression()), !dbg !9842
  %0 = load i16, i16* %value.addr, align 2, !dbg !9842
  %1 = load i32, i32* %port.addr, align 4, !dbg !9842
  call void asm sideeffect "outw ${0:w}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 %1) #11, !dbg !9842, !srcloc !9844
  ret void, !dbg !9842
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @pci_dev_put(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @resource_size(%struct.resource* %res) #0 !dbg !9845 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !9848, metadata !DIExpression()), !dbg !9849
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !9850
  %end = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 1, !dbg !9851
  %1 = load i64, i64* %end, align 8, !dbg !9851
  %2 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !9852
  %start = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 0, !dbg !9853
  %3 = load i64, i64* %start, align 8, !dbg !9853
  %sub = sub i64 %1, %3, !dbg !9854
  %add = add i64 %sub, 1, !dbg !9855
  ret i64 %add, !dbg !9856
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_io(%struct.pci_dev* %dev, i32 %pos, i32 %size, i8* %name) #0 !dbg !9857 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %region = alloca i32, align 4
  %bus_region = alloca %struct.pci_bus_region, align 8
  %res = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9860, metadata !DIExpression()), !dbg !9861
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !9862, metadata !DIExpression()), !dbg !9863
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9864, metadata !DIExpression()), !dbg !9865
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9866, metadata !DIExpression()), !dbg !9867
  call void @llvm.dbg.declare(metadata i32* %region, metadata !9868, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %bus_region, metadata !9870, metadata !DIExpression()), !dbg !9876
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !9877, metadata !DIExpression()), !dbg !9878
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9879
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !9880
  %arraydecay = getelementptr inbounds [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !9879
  %1 = load i32, i32* %pos.addr, align 4, !dbg !9881
  %idx.ext = sext i32 %1 to i64, !dbg !9882
  %add.ptr = getelementptr %struct.resource, %struct.resource* %arraydecay, i64 %idx.ext, !dbg !9882
  store %struct.resource* %add.ptr, %struct.resource** %res, align 8, !dbg !9878
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9883
  %3 = load i32, i32* %pos.addr, align 4, !dbg !9884
  %shl = shl i32 %3, 2, !dbg !9885
  %add = add i32 16, %shl, !dbg !9886
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %2, i32 %add, i32* %region) #9, !dbg !9887
  %4 = load i32, i32* %region, align 4, !dbg !9888
  %tobool = icmp ne i32 %4, 0, !dbg !9888
  br i1 %tobool, label %if.end, label %if.then, !dbg !9890

if.then:                                          ; preds = %entry
  br label %return, !dbg !9891

if.end:                                           ; preds = %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9892
  %call1 = call i8* @pci_name(%struct.pci_dev* %5) #9, !dbg !9893
  %6 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9894
  %name2 = getelementptr inbounds %struct.resource, %struct.resource* %6, i32 0, i32 2, !dbg !9895
  store i8* %call1, i8** %name2, align 8, !dbg !9896
  %7 = load i32, i32* %region, align 4, !dbg !9897
  %conv = zext i32 %7 to i64, !dbg !9897
  %and = and i64 %conv, 3, !dbg !9898
  %8 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9899
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %8, i32 0, i32 3, !dbg !9900
  store i64 %and, i64* %flags, align 8, !dbg !9901
  %9 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9902
  %flags3 = getelementptr inbounds %struct.resource, %struct.resource* %9, i32 0, i32 3, !dbg !9903
  %10 = load i64, i64* %flags3, align 8, !dbg !9904
  %or = or i64 %10, 262416, !dbg !9904
  store i64 %or, i64* %flags3, align 8, !dbg !9904
  %11 = load i32, i32* %size.addr, align 4, !dbg !9905
  %sub = sub i32 %11, 1, !dbg !9906
  %neg = xor i32 %sub, -1, !dbg !9907
  %12 = load i32, i32* %region, align 4, !dbg !9908
  %and4 = and i32 %12, %neg, !dbg !9908
  store i32 %and4, i32* %region, align 4, !dbg !9908
  %13 = load i32, i32* %region, align 4, !dbg !9909
  %conv5 = zext i32 %13 to i64, !dbg !9909
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %bus_region, i32 0, i32 0, !dbg !9910
  store i64 %conv5, i64* %start, align 8, !dbg !9911
  %14 = load i32, i32* %region, align 4, !dbg !9912
  %15 = load i32, i32* %size.addr, align 4, !dbg !9913
  %add6 = add i32 %14, %15, !dbg !9914
  %sub7 = sub i32 %add6, 1, !dbg !9915
  %conv8 = zext i32 %sub7 to i64, !dbg !9912
  %end = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %bus_region, i32 0, i32 1, !dbg !9916
  store i64 %conv8, i64* %end, align 8, !dbg !9917
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9918
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 1, !dbg !9919
  %17 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9919
  %18 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9920
  call void @pcibios_bus_to_resource(%struct.pci_bus* %17, %struct.resource* %18, %struct.pci_bus_region* %bus_region) #9, !dbg !9921
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9922
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !9922
  %20 = load i8*, i8** %name.addr, align 8, !dbg !9922
  %21 = load i32, i32* %pos.addr, align 4, !dbg !9922
  %shl10 = shl i32 %21, 2, !dbg !9922
  %add11 = add i32 16, %shl10, !dbg !9922
  %22 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9922
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev9, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0), i8* %20, i32 %add11, %struct.resource* %22) #10, !dbg !9922
  br label %return, !dbg !9923

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9923
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #0 !dbg !9924 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9927, metadata !DIExpression()), !dbg !9928
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9929
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9930
  %call = call i8* @dev_name(%struct.device* %dev) #9, !dbg !9931
  ret i8* %call, !dbg !9932
}

; Function Attrs: noredzone
declare dso_local void @pcibios_bus_to_resource(%struct.pci_bus*, %struct.resource*, %struct.pci_bus_region*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !9933 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9938
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9940
  %1 = load i8*, i8** %init_name, align 8, !dbg !9940
  %tobool = icmp ne i8* %1, null, !dbg !9938
  br i1 %tobool, label %if.then, label %if.end, !dbg !9941

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9942
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !9943
  %3 = load i8*, i8** %init_name1, align 8, !dbg !9943
  store i8* %3, i8** %retval, align 8, !dbg !9944
  br label %return, !dbg !9944

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9945
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !9946
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #9, !dbg !9947
  store i8* %call, i8** %retval, align 8, !dbg !9948
  br label %return, !dbg !9948

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !9949
  ret i8* %5, !dbg !9949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !9950 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !9955, metadata !DIExpression()), !dbg !9956
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !9957
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !9958
  %1 = load i8*, i8** %name, align 8, !dbg !9958
  ret i8* %1, !dbg !9959
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_io_region(%struct.pci_dev* %dev, i32 %port, i32 %size, i32 %nr, i8* %name) #0 !dbg !9960 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %port.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %region = alloca i16, align 2
  %bus_region = alloca %struct.pci_bus_region, align 8
  %res = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9963, metadata !DIExpression()), !dbg !9964
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9965, metadata !DIExpression()), !dbg !9966
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9967, metadata !DIExpression()), !dbg !9968
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !9969, metadata !DIExpression()), !dbg !9970
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9971, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.declare(metadata i16* %region, metadata !9973, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %bus_region, metadata !9975, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !9977, metadata !DIExpression()), !dbg !9978
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9979
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !9980
  %arraydecay = getelementptr inbounds [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !9979
  %1 = load i32, i32* %nr.addr, align 4, !dbg !9981
  %idx.ext = sext i32 %1 to i64, !dbg !9982
  %add.ptr = getelementptr %struct.resource, %struct.resource* %arraydecay, i64 %idx.ext, !dbg !9982
  store %struct.resource* %add.ptr, %struct.resource** %res, align 8, !dbg !9978
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9983
  %3 = load i32, i32* %port.addr, align 4, !dbg !9984
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 %3, i16* %region) #9, !dbg !9985
  %4 = load i32, i32* %size.addr, align 4, !dbg !9986
  %sub = sub i32 %4, 1, !dbg !9987
  %neg = xor i32 %sub, -1, !dbg !9988
  %5 = load i16, i16* %region, align 2, !dbg !9989
  %conv = zext i16 %5 to i32, !dbg !9989
  %and = and i32 %conv, %neg, !dbg !9989
  %conv1 = trunc i32 %and to i16, !dbg !9989
  store i16 %conv1, i16* %region, align 2, !dbg !9989
  %6 = load i16, i16* %region, align 2, !dbg !9990
  %tobool = icmp ne i16 %6, 0, !dbg !9990
  br i1 %tobool, label %if.end, label %if.then, !dbg !9992

if.then:                                          ; preds = %entry
  br label %if.end12, !dbg !9993

if.end:                                           ; preds = %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9994
  %call2 = call i8* @pci_name(%struct.pci_dev* %7) #9, !dbg !9995
  %8 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9996
  %name3 = getelementptr inbounds %struct.resource, %struct.resource* %8, i32 0, i32 2, !dbg !9997
  store i8* %call2, i8** %name3, align 8, !dbg !9998
  %9 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9999
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %9, i32 0, i32 3, !dbg !10000
  store i64 256, i64* %flags, align 8, !dbg !10001
  %10 = load i16, i16* %region, align 2, !dbg !10002
  %conv4 = zext i16 %10 to i64, !dbg !10002
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %bus_region, i32 0, i32 0, !dbg !10003
  store i64 %conv4, i64* %start, align 8, !dbg !10004
  %11 = load i16, i16* %region, align 2, !dbg !10005
  %conv5 = zext i16 %11 to i32, !dbg !10005
  %12 = load i32, i32* %size.addr, align 4, !dbg !10006
  %add = add i32 %conv5, %12, !dbg !10007
  %sub6 = sub i32 %add, 1, !dbg !10008
  %conv7 = zext i32 %sub6 to i64, !dbg !10005
  %end = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %bus_region, i32 0, i32 1, !dbg !10009
  store i64 %conv7, i64* %end, align 8, !dbg !10010
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10011
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 1, !dbg !10012
  %14 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !10012
  %15 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !10013
  call void @pcibios_bus_to_resource(%struct.pci_bus* %14, %struct.resource* %15, %struct.pci_bus_region* %bus_region) #9, !dbg !10014
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10015
  %17 = load i32, i32* %nr.addr, align 4, !dbg !10017
  %call8 = call i32 @pci_claim_resource(%struct.pci_dev* %16, i32 %17) #9, !dbg !10018
  %tobool9 = icmp ne i32 %call8, 0, !dbg !10018
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !10019

if.then10:                                        ; preds = %if.end
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10020
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !10020
  %19 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !10020
  %20 = load i8*, i8** %name.addr, align 8, !dbg !10020
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev11, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0), %struct.resource* %19, i8* %20) #10, !dbg !10020
  br label %if.end12, !dbg !10020

if.end12:                                         ; preds = %if.then, %if.then10, %if.end
  ret void, !dbg !10021
}

; Function Attrs: noredzone
declare dso_local i32 @pci_claim_resource(%struct.pci_dev*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @piix4_io_quirk(%struct.pci_dev* %dev, i8* %name, i32 %port, i32 %enable) #0 !dbg !10022 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %name.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %enable.addr = alloca i32, align 4
  %devres = alloca i32, align 4
  %mask = alloca i32, align 4
  %size = alloca i32, align 4
  %base = alloca i32, align 4
  %bit = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10025, metadata !DIExpression()), !dbg !10026
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10027, metadata !DIExpression()), !dbg !10028
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10029, metadata !DIExpression()), !dbg !10030
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !10031, metadata !DIExpression()), !dbg !10032
  call void @llvm.dbg.declare(metadata i32* %devres, metadata !10033, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !10035, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.declare(metadata i32* %size, metadata !10037, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.declare(metadata i32* %base, metadata !10039, metadata !DIExpression()), !dbg !10040
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10041
  %1 = load i32, i32* %port.addr, align 4, !dbg !10042
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 %1, i32* %devres) #9, !dbg !10043
  %2 = load i32, i32* %devres, align 4, !dbg !10044
  %3 = load i32, i32* %enable.addr, align 4, !dbg !10046
  %and = and i32 %2, %3, !dbg !10047
  %4 = load i32, i32* %enable.addr, align 4, !dbg !10048
  %cmp = icmp ne i32 %and, %4, !dbg !10049
  br i1 %cmp, label %if.then, label %if.end, !dbg !10050

if.then:                                          ; preds = %entry
  br label %return, !dbg !10051

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %devres, align 4, !dbg !10052
  %shr = lshr i32 %5, 16, !dbg !10053
  %and1 = and i32 %shr, 15, !dbg !10054
  store i32 %and1, i32* %mask, align 4, !dbg !10055
  %6 = load i32, i32* %devres, align 4, !dbg !10056
  %and2 = and i32 %6, 65535, !dbg !10057
  store i32 %and2, i32* %base, align 4, !dbg !10058
  store i32 16, i32* %size, align 4, !dbg !10059
  br label %for.cond, !dbg !10060

for.cond:                                         ; preds = %if.end7, %if.end
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !10061, metadata !DIExpression()), !dbg !10065
  %7 = load i32, i32* %size, align 4, !dbg !10066
  %shr3 = lshr i32 %7, 1, !dbg !10067
  store i32 %shr3, i32* %bit, align 4, !dbg !10065
  %8 = load i32, i32* %bit, align 4, !dbg !10068
  %9 = load i32, i32* %mask, align 4, !dbg !10070
  %and4 = and i32 %8, %9, !dbg !10071
  %10 = load i32, i32* %bit, align 4, !dbg !10072
  %cmp5 = icmp eq i32 %and4, %10, !dbg !10073
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10074

if.then6:                                         ; preds = %for.cond
  br label %for.end, !dbg !10075

if.end7:                                          ; preds = %for.cond
  %11 = load i32, i32* %bit, align 4, !dbg !10076
  store i32 %11, i32* %size, align 4, !dbg !10077
  br label %for.cond, !dbg !10078, !llvm.loop !10079

for.end:                                          ; preds = %if.then6
  %12 = load i32, i32* %size, align 4, !dbg !10082
  %sub = sub i32 0, %12, !dbg !10083
  %13 = load i32, i32* %base, align 4, !dbg !10084
  %and8 = and i32 %13, %sub, !dbg !10084
  store i32 %and8, i32* %base, align 4, !dbg !10084
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10085
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !10085
  %15 = load i8*, i8** %name.addr, align 8, !dbg !10085
  %16 = load i32, i32* %base, align 4, !dbg !10085
  %17 = load i32, i32* %base, align 4, !dbg !10085
  %18 = load i32, i32* %size, align 4, !dbg !10085
  %add = add i32 %17, %18, !dbg !10085
  %sub10 = sub i32 %add, 1, !dbg !10085
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i64 0, i64 0), i8* %15, i32 %16, i32 %sub10) #10, !dbg !10085
  br label %return, !dbg !10086

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !10086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @piix4_mem_quirk(%struct.pci_dev* %dev, i8* %name, i32 %port, i32 %enable) #0 !dbg !10087 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %name.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %enable.addr = alloca i32, align 4
  %devres = alloca i32, align 4
  %mask = alloca i32, align 4
  %size = alloca i32, align 4
  %base = alloca i32, align 4
  %bit = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10088, metadata !DIExpression()), !dbg !10089
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10090, metadata !DIExpression()), !dbg !10091
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10092, metadata !DIExpression()), !dbg !10093
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !10094, metadata !DIExpression()), !dbg !10095
  call void @llvm.dbg.declare(metadata i32* %devres, metadata !10096, metadata !DIExpression()), !dbg !10097
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !10098, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.declare(metadata i32* %size, metadata !10100, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.declare(metadata i32* %base, metadata !10102, metadata !DIExpression()), !dbg !10103
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10104
  %1 = load i32, i32* %port.addr, align 4, !dbg !10105
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 %1, i32* %devres) #9, !dbg !10106
  %2 = load i32, i32* %devres, align 4, !dbg !10107
  %3 = load i32, i32* %enable.addr, align 4, !dbg !10109
  %and = and i32 %2, %3, !dbg !10110
  %4 = load i32, i32* %enable.addr, align 4, !dbg !10111
  %cmp = icmp ne i32 %and, %4, !dbg !10112
  br i1 %cmp, label %if.then, label %if.end, !dbg !10113

if.then:                                          ; preds = %entry
  br label %return, !dbg !10114

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %devres, align 4, !dbg !10115
  %and1 = and i32 %5, -65536, !dbg !10116
  store i32 %and1, i32* %base, align 4, !dbg !10117
  %6 = load i32, i32* %devres, align 4, !dbg !10118
  %and2 = and i32 %6, 63, !dbg !10119
  %shl = shl i32 %and2, 16, !dbg !10120
  store i32 %shl, i32* %mask, align 4, !dbg !10121
  store i32 8388608, i32* %size, align 4, !dbg !10122
  br label %for.cond, !dbg !10123

for.cond:                                         ; preds = %if.end6, %if.end
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !10124, metadata !DIExpression()), !dbg !10128
  %7 = load i32, i32* %size, align 4, !dbg !10129
  %shr = lshr i32 %7, 1, !dbg !10130
  store i32 %shr, i32* %bit, align 4, !dbg !10128
  %8 = load i32, i32* %bit, align 4, !dbg !10131
  %9 = load i32, i32* %mask, align 4, !dbg !10133
  %and3 = and i32 %8, %9, !dbg !10134
  %10 = load i32, i32* %bit, align 4, !dbg !10135
  %cmp4 = icmp eq i32 %and3, %10, !dbg !10136
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !10137

if.then5:                                         ; preds = %for.cond
  br label %for.end, !dbg !10138

if.end6:                                          ; preds = %for.cond
  %11 = load i32, i32* %bit, align 4, !dbg !10139
  store i32 %11, i32* %size, align 4, !dbg !10140
  br label %for.cond, !dbg !10141, !llvm.loop !10142

for.end:                                          ; preds = %if.then5
  %12 = load i32, i32* %size, align 4, !dbg !10145
  %sub = sub i32 0, %12, !dbg !10146
  %13 = load i32, i32* %base, align 4, !dbg !10147
  %and7 = and i32 %13, %sub, !dbg !10147
  store i32 %and7, i32* %base, align 4, !dbg !10147
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10148
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !10148
  %15 = load i8*, i8** %name.addr, align 8, !dbg !10148
  %16 = load i32, i32* %base, align 4, !dbg !10148
  %17 = load i32, i32* %base, align 4, !dbg !10148
  %18 = load i32, i32* %size, align 4, !dbg !10148
  %add = add i32 %17, %18, !dbg !10148
  %sub9 = sub i32 %add, 1, !dbg !10148
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i64 0, i64 0), i8* %15, i32 %16, i32 %sub9) #10, !dbg !10148
  br label %return, !dbg !10149

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !10149
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ich6_lpc_acpi_gpio(%struct.pci_dev* %dev) #0 !dbg !10150 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %enable = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10151, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.declare(metadata i8* %enable, metadata !10153, metadata !DIExpression()), !dbg !10154
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10155
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %0, i32 68, i8* %enable) #9, !dbg !10156
  %1 = load i8, i8* %enable, align 1, !dbg !10157
  %conv = zext i8 %1 to i32, !dbg !10157
  %and = and i32 %conv, 128, !dbg !10159
  %tobool = icmp ne i32 %and, 0, !dbg !10159
  br i1 %tobool, label %if.then, label %if.end, !dbg !10160

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10161
  call void @quirk_io_region(%struct.pci_dev* %2, i32 64, i32 128, i32 13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0)) #9, !dbg !10162
  br label %if.end, !dbg !10162

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10163
  %call1 = call i32 @pci_read_config_byte(%struct.pci_dev* %3, i32 76, i8* %enable) #9, !dbg !10164
  %4 = load i8, i8* %enable, align 1, !dbg !10165
  %conv2 = zext i8 %4 to i32, !dbg !10165
  %and3 = and i32 %conv2, 16, !dbg !10167
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10167
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10168

if.then5:                                         ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10169
  call void @quirk_io_region(%struct.pci_dev* %5, i32 72, i32 64, i32 14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0)) #9, !dbg !10170
  br label %if.end6, !dbg !10170

if.end6:                                          ; preds = %if.then5, %if.end
  ret void, !dbg !10171
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ich6_lpc_generic_decode(%struct.pci_dev* %dev, i32 %reg, i8* %name, i32 %dynsize) #0 !dbg !10172 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %reg.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %dynsize.addr = alloca i32, align 4
  %val = alloca i32, align 4
  %size = alloca i32, align 4
  %base = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10175, metadata !DIExpression()), !dbg !10176
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !10177, metadata !DIExpression()), !dbg !10178
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10179, metadata !DIExpression()), !dbg !10180
  store i32 %dynsize, i32* %dynsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dynsize.addr, metadata !10181, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.declare(metadata i32* %val, metadata !10183, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.declare(metadata i32* %size, metadata !10185, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.declare(metadata i32* %base, metadata !10187, metadata !DIExpression()), !dbg !10188
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10189
  %1 = load i32, i32* %reg.addr, align 4, !dbg !10190
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 %1, i32* %val) #9, !dbg !10191
  %2 = load i32, i32* %val, align 4, !dbg !10192
  %and = and i32 %2, 1, !dbg !10194
  %tobool = icmp ne i32 %and, 0, !dbg !10194
  br i1 %tobool, label %if.end, label %if.then, !dbg !10195

if.then:                                          ; preds = %entry
  br label %return, !dbg !10196

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %val, align 4, !dbg !10197
  %and1 = and i32 %3, 65532, !dbg !10198
  store i32 %and1, i32* %base, align 4, !dbg !10199
  %4 = load i32, i32* %dynsize.addr, align 4, !dbg !10200
  %tobool2 = icmp ne i32 %4, 0, !dbg !10200
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !10202

if.then3:                                         ; preds = %if.end
  store i32 16, i32* %size, align 4, !dbg !10203
  br label %if.end4, !dbg !10205

if.else:                                          ; preds = %if.end
  store i32 128, i32* %size, align 4, !dbg !10206
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  %5 = load i32, i32* %size, align 4, !dbg !10208
  %sub = sub i32 %5, 1, !dbg !10209
  %neg = xor i32 %sub, -1, !dbg !10210
  %6 = load i32, i32* %base, align 4, !dbg !10211
  %and5 = and i32 %6, %neg, !dbg !10211
  store i32 %and5, i32* %base, align 4, !dbg !10211
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10212
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !10212
  %8 = load i8*, i8** %name.addr, align 8, !dbg !10212
  %9 = load i32, i32* %base, align 4, !dbg !10212
  %10 = load i32, i32* %base, align 4, !dbg !10212
  %11 = load i32, i32* %size, align 4, !dbg !10212
  %add = add i32 %10, %11, !dbg !10212
  %sub7 = sub i32 %add, 1, !dbg !10212
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i64 0, i64 0), i8* %8, i32 %9, i32 %sub7) #10, !dbg !10212
  br label %return, !dbg !10213

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !10213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ich7_lpc_generic_decode(%struct.pci_dev* %dev, i32 %reg, i8* %name) #0 !dbg !10214 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %reg.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %val = alloca i32, align 4
  %mask = alloca i32, align 4
  %base = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10217, metadata !DIExpression()), !dbg !10218
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !10219, metadata !DIExpression()), !dbg !10220
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10221, metadata !DIExpression()), !dbg !10222
  call void @llvm.dbg.declare(metadata i32* %val, metadata !10223, metadata !DIExpression()), !dbg !10224
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !10225, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.declare(metadata i32* %base, metadata !10227, metadata !DIExpression()), !dbg !10228
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10229
  %1 = load i32, i32* %reg.addr, align 4, !dbg !10230
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 %1, i32* %val) #9, !dbg !10231
  %2 = load i32, i32* %val, align 4, !dbg !10232
  %and = and i32 %2, 1, !dbg !10234
  %tobool = icmp ne i32 %and, 0, !dbg !10234
  br i1 %tobool, label %if.end, label %if.then, !dbg !10235

if.then:                                          ; preds = %entry
  br label %return, !dbg !10236

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %val, align 4, !dbg !10237
  %and1 = and i32 %3, 65532, !dbg !10238
  store i32 %and1, i32* %base, align 4, !dbg !10239
  %4 = load i32, i32* %val, align 4, !dbg !10240
  %shr = lshr i32 %4, 16, !dbg !10241
  %and2 = and i32 %shr, 252, !dbg !10242
  store i32 %and2, i32* %mask, align 4, !dbg !10243
  %5 = load i32, i32* %mask, align 4, !dbg !10244
  %or = or i32 %5, 3, !dbg !10244
  store i32 %or, i32* %mask, align 4, !dbg !10244
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10245
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !10245
  %7 = load i8*, i8** %name.addr, align 8, !dbg !10245
  %8 = load i32, i32* %base, align 4, !dbg !10245
  %9 = load i32, i32* %mask, align 4, !dbg !10245
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.44, i64 0, i64 0), i8* %7, i32 %8, i32 %9) #10, !dbg !10245
  br label %return, !dbg !10246

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10246
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_dword(%struct.pci_dev*, i32, i32) #3

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #3

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !10247 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10253, metadata !DIExpression()), !dbg !10254
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10255, metadata !DIExpression()), !dbg !10254
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !10254
  %1 = bitcast i8* %0 to i32*, !dbg !10254
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #11, !dbg !10254, !srcloc !10256
  store i32 %2, i32* %ret, align 4, !dbg !10254
  %3 = load i32, i32* %ret, align 4, !dbg !10254
  ret i32 %3, !dbg !10254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #0 !dbg !10257 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10261, metadata !DIExpression()), !dbg !10262
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10263, metadata !DIExpression()), !dbg !10262
  %0 = load i32, i32* %val.addr, align 4, !dbg !10262
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10262
  %2 = bitcast i8* %1 to i32*, !dbg !10262
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #11, !dbg !10262, !srcloc !10264
  ret void, !dbg !10262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_disable_async_suspend(%struct.device* %dev) #0 !dbg !10265 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10266, metadata !DIExpression()), !dbg !10267
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10268
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !10270
  %is_prepared = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !10271
  %bf.load = load i16, i16* %is_prepared, align 4, !dbg !10271
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !10271
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10271
  %bf.cast = trunc i16 %bf.clear to i1, !dbg !10271
  br i1 %bf.cast, label %if.end, label %if.then, !dbg !10272

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10273
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !10274
  %async_suspend = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 1, !dbg !10275
  %bf.load2 = load i16, i16* %async_suspend, align 4, !dbg !10276
  %bf.clear3 = and i16 %bf.load2, -3, !dbg !10276
  store i16 %bf.clear3, i16* %async_suspend, align 4, !dbg !10276
  br label %if.end, !dbg !10273

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10277
}

; Function Attrs: noredzone
declare dso_local i32 @insert_resource(%struct.resource*, %struct.resource*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_d3hot_delay(%struct.pci_dev* %dev, i32 %delay) #0 !dbg !10278 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %delay.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10281, metadata !DIExpression()), !dbg !10282
  store i32 %delay, i32* %delay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delay.addr, metadata !10283, metadata !DIExpression()), !dbg !10284
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10285
  %d3hot_delay = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 31, !dbg !10287
  %1 = load i32, i32* %d3hot_delay, align 4, !dbg !10287
  %2 = load i32, i32* %delay.addr, align 4, !dbg !10288
  %cmp = icmp uge i32 %1, %2, !dbg !10289
  br i1 %cmp, label %if.then, label %if.end, !dbg !10290

if.then:                                          ; preds = %entry
  br label %return, !dbg !10291

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %delay.addr, align 4, !dbg !10292
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10293
  %d3hot_delay1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 31, !dbg !10294
  store i32 %3, i32* %d3hot_delay1, align 4, !dbg !10295
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10296
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !10296
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10296
  %d3hot_delay3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 31, !dbg !10296
  %7 = load i32, i32* %d3hot_delay3, align 4, !dbg !10296
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.73, i64 0, i64 0), i32 %7) #10, !dbg !10296
  br label %return, !dbg !10297

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10297
}

; Function Attrs: noredzone
declare dso_local i32 @dmi_check_system(%struct.dmi_system_id*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dmi_disable_ioapicreroute(%struct.dmi_system_id* %d) #0 !dbg !10298 {
entry:
  %d.addr = alloca %struct.dmi_system_id*, align 8
  store %struct.dmi_system_id* %d, %struct.dmi_system_id** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dmi_system_id** %d.addr, metadata !10299, metadata !DIExpression()), !dbg !10300
  store i32 1, i32* @noioapicreroute, align 4, !dbg !10301
  %0 = load %struct.dmi_system_id*, %struct.dmi_system_id** %d.addr, align 8, !dbg !10302
  %ident = getelementptr inbounds %struct.dmi_system_id, %struct.dmi_system_id* %0, i32 0, i32 1, !dbg !10302
  %1 = load i8*, i8** %ident, align 8, !dbg !10302
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.77, i64 0, i64 0), i8* %1) #10, !dbg !10302
  ret i32 0, !dbg !10303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #0 !dbg !10304 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10307, metadata !DIExpression()), !dbg !10308
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10309, metadata !DIExpression()), !dbg !10308
  %0 = load i8, i8* %value.addr, align 1, !dbg !10308
  %1 = load i32, i32* %port.addr, align 4, !dbg !10308
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #11, !dbg !10308, !srcloc !10310
  ret void, !dbg !10308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #0 !dbg !10311 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10314, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !10316, metadata !DIExpression()), !dbg !10315
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !10315
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #11, !dbg !10315, !srcloc !10317
  store i8 %1, i8* %ret, align 1, !dbg !10315
  %2 = load i8, i8* %ret, align 1, !dbg !10315
  ret i8 %2, !dbg !10315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #0 !dbg !10318 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !10321, metadata !DIExpression()), !dbg !10322
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10323, metadata !DIExpression()), !dbg !10322
  %0 = load i8, i8* %val.addr, align 1, !dbg !10322
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10322
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #11, !dbg !10322, !srcloc !10324
  ret void, !dbg !10322
}

; Function Attrs: noredzone
declare dso_local i32 @pci_disable_link_state(%struct.pci_dev*, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @pcie_get_readrq(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local i32 @pcie_set_readrq(%struct.pci_dev*, i32) #3

; Function Attrs: noredzone
declare dso_local void @pci_no_msi() #3

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @pci_get_slot(%struct.pci_bus*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @msi_ht_cap_enabled(%struct.pci_dev* %dev) #0 !dbg !10325 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %ttl = alloca i32, align 4
  %flags = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10326, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10328, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.declare(metadata i32* %ttl, metadata !10330, metadata !DIExpression()), !dbg !10331
  store i32 48, i32* %ttl, align 4, !dbg !10331
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10332
  %call = call i32 @pci_find_ht_capability(%struct.pci_dev* %0, i32 168) #9, !dbg !10333
  store i32 %call, i32* %pos, align 4, !dbg !10334
  br label %while.cond, !dbg !10335

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %pos, align 4, !dbg !10336
  %tobool = icmp ne i32 %1, 0, !dbg !10336
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10337

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %ttl, align 4, !dbg !10338
  %dec = add i32 %2, -1, !dbg !10338
  store i32 %dec, i32* %ttl, align 4, !dbg !10338
  %tobool1 = icmp ne i32 %2, 0, !dbg !10337
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %tobool1, %land.rhs ], !dbg !10339
  br i1 %3, label %while.body, label %while.end, !dbg !10335

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8* %flags, metadata !10340, metadata !DIExpression()), !dbg !10342
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10343
  %5 = load i32, i32* %pos, align 4, !dbg !10345
  %add = add i32 %5, 2, !dbg !10346
  %call2 = call i32 @pci_read_config_byte(%struct.pci_dev* %4, i32 %add, i8* %flags) #9, !dbg !10347
  %cmp = icmp eq i32 %call2, 0, !dbg !10348
  br i1 %cmp, label %if.then, label %if.end, !dbg !10349

if.then:                                          ; preds = %while.body
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10350
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !10350
  %7 = load i8, i8* %flags, align 1, !dbg !10350
  %conv = zext i8 %7 to i32, !dbg !10350
  %and = and i32 %conv, 1, !dbg !10350
  %tobool4 = icmp ne i32 %and, 0, !dbg !10350
  %8 = zext i1 %tobool4 to i64, !dbg !10350
  %cond = select i1 %tobool4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.97, i64 0, i64 0), !dbg !10350
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.95, i64 0, i64 0), i8* %cond) #10, !dbg !10350
  %9 = load i8, i8* %flags, align 1, !dbg !10352
  %conv5 = zext i8 %9 to i32, !dbg !10352
  %and6 = and i32 %conv5, 1, !dbg !10353
  %cmp7 = icmp ne i32 %and6, 0, !dbg !10354
  %conv8 = zext i1 %cmp7 to i32, !dbg !10354
  store i32 %conv8, i32* %retval, align 4, !dbg !10355
  br label %return, !dbg !10355

if.end:                                           ; preds = %while.body
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10356
  %11 = load i32, i32* %pos, align 4, !dbg !10357
  %call9 = call i32 @pci_find_next_ht_capability(%struct.pci_dev* %10, i32 %11, i32 168) #9, !dbg !10358
  store i32 %call9, i32* %pos, align 4, !dbg !10359
  br label %while.cond, !dbg !10335, !llvm.loop !10360

while.end:                                        ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !10362
  br label %return, !dbg !10362

return:                                           ; preds = %while.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !10363
  ret i32 %12, !dbg !10363
}

; Function Attrs: noredzone
declare dso_local i32 @pci_find_ht_capability(%struct.pci_dev*, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_find_next_ht_capability(%struct.pci_dev*, i32, i32) #3

; Function Attrs: noredzone
declare dso_local i8* @dmi_get_system_info(i32) #3

; Function Attrs: noredzone
declare dso_local i8* @strstr(i8*, i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_find_capability(%struct.pci_dev*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__nv_msi_ht_cap_quirk(%struct.pci_dev* %dev, i32 %all) #0 !dbg !10364 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %all.addr = alloca i32, align 4
  %host_bridge = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %found = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10367, metadata !DIExpression()), !dbg !10368
  store i32 %all, i32* %all.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %all.addr, metadata !10369, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %host_bridge, metadata !10371, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10373, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.declare(metadata i32* %found, metadata !10375, metadata !DIExpression()), !dbg !10376
  %call = call i32 @pci_msi_enabled() #9, !dbg !10377
  %tobool = icmp ne i32 %call, 0, !dbg !10377
  br i1 %tobool, label %if.end, label %if.then, !dbg !10379

if.then:                                          ; preds = %entry
  br label %return, !dbg !10380

if.end:                                           ; preds = %entry
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10381
  %call1 = call i32 @ht_check_msi_mapping(%struct.pci_dev* %0) #9, !dbg !10382
  store i32 %call1, i32* %found, align 4, !dbg !10383
  %1 = load i32, i32* %found, align 4, !dbg !10384
  %cmp = icmp eq i32 %1, 0, !dbg !10386
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10387

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !10388

if.end3:                                          ; preds = %if.end
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10389
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 1, !dbg !10390
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !10390
  %call4 = call i32 @pci_domain_nr(%struct.pci_bus* %3) #9, !dbg !10391
  %call5 = call %struct.pci_dev* @pci_get_domain_bus_and_slot(i32 %call4, i32 0, i32 0) #9, !dbg !10392
  store %struct.pci_dev* %call5, %struct.pci_dev** %host_bridge, align 8, !dbg !10393
  %4 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge, align 8, !dbg !10394
  %cmp6 = icmp eq %struct.pci_dev* %4, null, !dbg !10396
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !10397

if.then7:                                         ; preds = %if.end3
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10398
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !10398
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.103, i64 0, i64 0)) #10, !dbg !10398
  br label %return, !dbg !10400

if.end9:                                          ; preds = %if.end3
  %6 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge, align 8, !dbg !10401
  %call10 = call i32 @pci_find_ht_capability(%struct.pci_dev* %6, i32 0) #9, !dbg !10402
  store i32 %call10, i32* %pos, align 4, !dbg !10403
  %7 = load i32, i32* %pos, align 4, !dbg !10404
  %cmp11 = icmp ne i32 %7, 0, !dbg !10406
  br i1 %cmp11, label %if.then12, label %if.end19, !dbg !10407

if.then12:                                        ; preds = %if.end9
  %8 = load i32, i32* %found, align 4, !dbg !10408
  %cmp13 = icmp eq i32 %8, 1, !dbg !10411
  br i1 %cmp13, label %if.then14, label %if.end18, !dbg !10412

if.then14:                                        ; preds = %if.then12
  %9 = load i32, i32* %all.addr, align 4, !dbg !10413
  %tobool15 = icmp ne i32 %9, 0, !dbg !10413
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !10416

if.then16:                                        ; preds = %if.then14
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10417
  call void @ht_enable_msi_mapping(%struct.pci_dev* %10) #9, !dbg !10418
  br label %if.end17, !dbg !10418

if.else:                                          ; preds = %if.then14
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10419
  call void @nv_ht_enable_msi_mapping(%struct.pci_dev* %11) #9, !dbg !10420
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then16
  br label %if.end18, !dbg !10421

if.end18:                                         ; preds = %if.end17, %if.then12
  br label %out, !dbg !10422

if.end19:                                         ; preds = %if.end9
  %12 = load i32, i32* %found, align 4, !dbg !10423
  %cmp20 = icmp eq i32 %12, 1, !dbg !10425
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !10426

if.then21:                                        ; preds = %if.end19
  br label %out, !dbg !10427

if.end22:                                         ; preds = %if.end19
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10428
  call void @ht_disable_msi_mapping(%struct.pci_dev* %13) #9, !dbg !10429
  br label %out, !dbg !10429

out:                                              ; preds = %if.end22, %if.then21, %if.end18
  call void @llvm.dbg.label(metadata !10430), !dbg !10431
  %14 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge, align 8, !dbg !10432
  call void @pci_dev_put(%struct.pci_dev* %14) #9, !dbg !10433
  br label %return, !dbg !10434

return:                                           ; preds = %out, %if.then7, %if.then2, %if.then
  ret void, !dbg !10434
}

; Function Attrs: noredzone
declare dso_local i32 @pci_msi_enabled() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ht_check_msi_mapping(%struct.pci_dev* %dev) #0 !dbg !10435 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %ttl = alloca i32, align 4
  %found = alloca i32, align 4
  %flags = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10436, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10438, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.declare(metadata i32* %ttl, metadata !10440, metadata !DIExpression()), !dbg !10441
  store i32 48, i32* %ttl, align 4, !dbg !10441
  call void @llvm.dbg.declare(metadata i32* %found, metadata !10442, metadata !DIExpression()), !dbg !10443
  store i32 0, i32* %found, align 4, !dbg !10443
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10444
  %call = call i32 @pci_find_ht_capability(%struct.pci_dev* %0, i32 168) #9, !dbg !10445
  store i32 %call, i32* %pos, align 4, !dbg !10446
  br label %while.cond, !dbg !10447

while.cond:                                       ; preds = %if.end12, %entry
  %1 = load i32, i32* %pos, align 4, !dbg !10448
  %tobool = icmp ne i32 %1, 0, !dbg !10448
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10449

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %ttl, align 4, !dbg !10450
  %dec = add i32 %2, -1, !dbg !10450
  store i32 %dec, i32* %ttl, align 4, !dbg !10450
  %tobool1 = icmp ne i32 %2, 0, !dbg !10449
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %tobool1, %land.rhs ], !dbg !10451
  br i1 %3, label %while.body, label %while.end, !dbg !10447

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8* %flags, metadata !10452, metadata !DIExpression()), !dbg !10454
  %4 = load i32, i32* %found, align 4, !dbg !10455
  %cmp = icmp slt i32 %4, 1, !dbg !10457
  br i1 %cmp, label %if.then, label %if.end, !dbg !10458

if.then:                                          ; preds = %while.body
  store i32 1, i32* %found, align 4, !dbg !10459
  br label %if.end, !dbg !10460

if.end:                                           ; preds = %if.then, %while.body
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10461
  %6 = load i32, i32* %pos, align 4, !dbg !10463
  %add = add i32 %6, 2, !dbg !10464
  %call2 = call i32 @pci_read_config_byte(%struct.pci_dev* %5, i32 %add, i8* %flags) #9, !dbg !10465
  %cmp3 = icmp eq i32 %call2, 0, !dbg !10466
  br i1 %cmp3, label %if.then4, label %if.end12, !dbg !10467

if.then4:                                         ; preds = %if.end
  %7 = load i8, i8* %flags, align 1, !dbg !10468
  %conv = zext i8 %7 to i32, !dbg !10468
  %and = and i32 %conv, 1, !dbg !10471
  %tobool5 = icmp ne i32 %and, 0, !dbg !10471
  br i1 %tobool5, label %if.then6, label %if.end11, !dbg !10472

if.then6:                                         ; preds = %if.then4
  %8 = load i32, i32* %found, align 4, !dbg !10473
  %cmp7 = icmp slt i32 %8, 2, !dbg !10476
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !10477

if.then9:                                         ; preds = %if.then6
  store i32 2, i32* %found, align 4, !dbg !10478
  br label %while.end, !dbg !10480

if.end10:                                         ; preds = %if.then6
  br label %if.end11, !dbg !10481

if.end11:                                         ; preds = %if.end10, %if.then4
  br label %if.end12, !dbg !10482

if.end12:                                         ; preds = %if.end11, %if.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10483
  %10 = load i32, i32* %pos, align 4, !dbg !10484
  %call13 = call i32 @pci_find_next_ht_capability(%struct.pci_dev* %9, i32 %10, i32 168) #9, !dbg !10485
  store i32 %call13, i32* %pos, align 4, !dbg !10486
  br label %while.cond, !dbg !10447, !llvm.loop !10487

while.end:                                        ; preds = %if.then9, %land.end
  %11 = load i32, i32* %found, align 4, !dbg !10489
  ret i32 %11, !dbg !10490
}

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @pci_get_domain_bus_and_slot(i32, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_domain_nr(%struct.pci_bus* %bus) #0 !dbg !10491 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !10493, metadata !DIExpression()), !dbg !10494
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !10495
  %call = call %struct.pci_sysdata* @to_pci_sysdata(%struct.pci_bus* %0) #9, !dbg !10496
  %domain = getelementptr inbounds %struct.pci_sysdata, %struct.pci_sysdata* %call, i32 0, i32 0, !dbg !10497
  %1 = load i32, i32* %domain, align 8, !dbg !10497
  ret i32 %1, !dbg !10498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nv_ht_enable_msi_mapping(%struct.pci_dev* %dev) #0 !dbg !10499 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %host_bridge = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %dev_no = alloca i32, align 4
  %found = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10500, metadata !DIExpression()), !dbg !10501
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %host_bridge, metadata !10502, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10504, metadata !DIExpression()), !dbg !10505
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10506, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.declare(metadata i32* %dev_no, metadata !10508, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.declare(metadata i32* %found, metadata !10510, metadata !DIExpression()), !dbg !10511
  store i32 0, i32* %found, align 4, !dbg !10511
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10512
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 6, !dbg !10513
  %1 = load i32, i32* %devfn, align 8, !dbg !10513
  %shr = lshr i32 %1, 3, !dbg !10514
  store i32 %shr, i32* %dev_no, align 4, !dbg !10515
  %2 = load i32, i32* %dev_no, align 4, !dbg !10516
  store i32 %2, i32* %i, align 4, !dbg !10518
  br label %for.cond, !dbg !10519

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !10520
  %cmp = icmp sge i32 %3, 0, !dbg !10522
  br i1 %cmp, label %for.body, label %for.end, !dbg !10523

for.body:                                         ; preds = %for.cond
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10524
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 1, !dbg !10526
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !10526
  %6 = load i32, i32* %i, align 4, !dbg !10527
  %and = and i32 %6, 31, !dbg !10527
  %shl = shl i32 %and, 3, !dbg !10527
  %call = call %struct.pci_dev* @pci_get_slot(%struct.pci_bus* %5, i32 %shl) #9, !dbg !10528
  store %struct.pci_dev* %call, %struct.pci_dev** %host_bridge, align 8, !dbg !10529
  %7 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge, align 8, !dbg !10530
  %tobool = icmp ne %struct.pci_dev* %7, null, !dbg !10530
  br i1 %tobool, label %if.end, label %if.then, !dbg !10532

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !10533

if.end:                                           ; preds = %for.body
  %8 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge, align 8, !dbg !10534
  %call1 = call i32 @pci_find_ht_capability(%struct.pci_dev* %8, i32 0) #9, !dbg !10535
  store i32 %call1, i32* %pos, align 4, !dbg !10536
  %9 = load i32, i32* %pos, align 4, !dbg !10537
  %cmp2 = icmp ne i32 %9, 0, !dbg !10539
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10540

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %found, align 4, !dbg !10541
  br label %for.end, !dbg !10543

if.end4:                                          ; preds = %if.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge, align 8, !dbg !10544
  call void @pci_dev_put(%struct.pci_dev* %10) #9, !dbg !10545
  br label %for.inc, !dbg !10546

for.inc:                                          ; preds = %if.end4, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !10547
  %dec = add i32 %11, -1, !dbg !10547
  store i32 %dec, i32* %i, align 4, !dbg !10547
  br label %for.cond, !dbg !10548, !llvm.loop !10549

for.end:                                          ; preds = %if.then3, %for.cond
  %12 = load i32, i32* %found, align 4, !dbg !10551
  %tobool5 = icmp ne i32 %12, 0, !dbg !10551
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !10553

if.then6:                                         ; preds = %for.end
  br label %return, !dbg !10554

if.end7:                                          ; preds = %for.end
  %13 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge, align 8, !dbg !10555
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10557
  %cmp8 = icmp eq %struct.pci_dev* %13, %14, !dbg !10558
  br i1 %cmp8, label %land.lhs.true, label %if.end15, !dbg !10559

land.lhs.true:                                    ; preds = %if.end7
  %15 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge, align 8, !dbg !10560
  %call9 = call i32 @is_end_of_ht_chain(%struct.pci_dev* %15) #9, !dbg !10561
  %tobool10 = icmp ne i32 %call9, 0, !dbg !10561
  br i1 %tobool10, label %land.lhs.true11, label %if.end15, !dbg !10562

land.lhs.true11:                                  ; preds = %land.lhs.true
  %16 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge, align 8, !dbg !10563
  %call12 = call i32 @host_bridge_with_leaf(%struct.pci_dev* %16) #9, !dbg !10564
  %tobool13 = icmp ne i32 %call12, 0, !dbg !10564
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !10565

if.then14:                                        ; preds = %land.lhs.true11
  br label %out, !dbg !10566

if.end15:                                         ; preds = %land.lhs.true11, %land.lhs.true, %if.end7
  %17 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge, align 8, !dbg !10567
  %call16 = call i32 @msi_ht_cap_enabled(%struct.pci_dev* %17) #9, !dbg !10569
  %tobool17 = icmp ne i32 %call16, 0, !dbg !10569
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !10570

if.then18:                                        ; preds = %if.end15
  br label %out, !dbg !10571

if.end19:                                         ; preds = %if.end15
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10572
  call void @ht_enable_msi_mapping(%struct.pci_dev* %18) #9, !dbg !10573
  br label %out, !dbg !10573

out:                                              ; preds = %if.end19, %if.then18, %if.then14
  call void @llvm.dbg.label(metadata !10574), !dbg !10575
  %19 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge, align 8, !dbg !10576
  call void @pci_dev_put(%struct.pci_dev* %19) #9, !dbg !10577
  br label %return, !dbg !10578

return:                                           ; preds = %out, %if.then6
  ret void, !dbg !10578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ht_disable_msi_mapping(%struct.pci_dev* %dev) #0 !dbg !10579 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %ttl = alloca i32, align 4
  %flags = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10580, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10582, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.declare(metadata i32* %ttl, metadata !10584, metadata !DIExpression()), !dbg !10585
  store i32 48, i32* %ttl, align 4, !dbg !10585
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10586
  %call = call i32 @pci_find_ht_capability(%struct.pci_dev* %0, i32 168) #9, !dbg !10587
  store i32 %call, i32* %pos, align 4, !dbg !10588
  br label %while.cond, !dbg !10589

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %pos, align 4, !dbg !10590
  %tobool = icmp ne i32 %1, 0, !dbg !10590
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10591

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %ttl, align 4, !dbg !10592
  %dec = add i32 %2, -1, !dbg !10592
  store i32 %dec, i32* %ttl, align 4, !dbg !10592
  %tobool1 = icmp ne i32 %2, 0, !dbg !10591
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %tobool1, %land.rhs ], !dbg !10593
  br i1 %3, label %while.body, label %while.end, !dbg !10589

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8* %flags, metadata !10594, metadata !DIExpression()), !dbg !10596
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10597
  %5 = load i32, i32* %pos, align 4, !dbg !10599
  %add = add i32 %5, 2, !dbg !10600
  %call2 = call i32 @pci_read_config_byte(%struct.pci_dev* %4, i32 %add, i8* %flags) #9, !dbg !10601
  %cmp = icmp eq i32 %call2, 0, !dbg !10602
  br i1 %cmp, label %if.then, label %if.end, !dbg !10603

if.then:                                          ; preds = %while.body
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10604
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !10604
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.104, i64 0, i64 0)) #10, !dbg !10604
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10606
  %8 = load i32, i32* %pos, align 4, !dbg !10607
  %add4 = add i32 %8, 2, !dbg !10608
  %9 = load i8, i8* %flags, align 1, !dbg !10609
  %conv = zext i8 %9 to i32, !dbg !10609
  %and = and i32 %conv, -2, !dbg !10610
  %conv5 = trunc i32 %and to i8, !dbg !10609
  %call6 = call i32 @pci_write_config_byte(%struct.pci_dev* %7, i32 %add4, i8 zeroext %conv5) #9, !dbg !10611
  br label %if.end, !dbg !10612

if.end:                                           ; preds = %if.then, %while.body
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10613
  %11 = load i32, i32* %pos, align 4, !dbg !10614
  %call7 = call i32 @pci_find_next_ht_capability(%struct.pci_dev* %10, i32 %11, i32 168) #9, !dbg !10615
  store i32 %call7, i32* %pos, align 4, !dbg !10616
  br label %while.cond, !dbg !10589, !llvm.loop !10617

while.end:                                        ; preds = %land.end
  ret void, !dbg !10619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_sysdata* @to_pci_sysdata(%struct.pci_bus* %bus) #0 !dbg !10620 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !10634, metadata !DIExpression()), !dbg !10635
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !10636
  %sysdata = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 11, !dbg !10637
  %1 = load i8*, i8** %sysdata, align 8, !dbg !10637
  %2 = bitcast i8* %1 to %struct.pci_sysdata*, !dbg !10636
  ret %struct.pci_sysdata* %2, !dbg !10638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_end_of_ht_chain(%struct.pci_dev* %dev) #0 !dbg !10639 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %ctrl_off = alloca i32, align 4
  %end = alloca i32, align 4
  %flags = alloca i16, align 2
  %ctrl = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10642, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.declare(metadata i32* %ctrl_off, metadata !10644, metadata !DIExpression()), !dbg !10645
  call void @llvm.dbg.declare(metadata i32* %end, metadata !10646, metadata !DIExpression()), !dbg !10647
  store i32 0, i32* %end, align 4, !dbg !10647
  call void @llvm.dbg.declare(metadata i16* %flags, metadata !10648, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !10650, metadata !DIExpression()), !dbg !10651
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10652
  %call = call i32 @pci_find_ht_capability(%struct.pci_dev* %0, i32 0) #9, !dbg !10653
  store i32 %call, i32* %pos, align 4, !dbg !10654
  %1 = load i32, i32* %pos, align 4, !dbg !10655
  %tobool = icmp ne i32 %1, 0, !dbg !10655
  br i1 %tobool, label %if.end, label %if.then, !dbg !10657

if.then:                                          ; preds = %entry
  br label %out, !dbg !10658

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10659
  %3 = load i32, i32* %pos, align 4, !dbg !10660
  %add = add i32 %3, 2, !dbg !10661
  %call1 = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 %add, i16* %flags) #9, !dbg !10662
  %4 = load i16, i16* %flags, align 2, !dbg !10663
  %conv = zext i16 %4 to i32, !dbg !10663
  %shr = ashr i32 %conv, 10, !dbg !10664
  %and = and i32 %shr, 1, !dbg !10665
  %tobool2 = icmp ne i32 %and, 0, !dbg !10666
  %5 = zext i1 %tobool2 to i64, !dbg !10666
  %cond = select i1 %tobool2, i32 4, i32 8, !dbg !10666
  store i32 %cond, i32* %ctrl_off, align 4, !dbg !10667
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10668
  %7 = load i32, i32* %pos, align 4, !dbg !10669
  %8 = load i32, i32* %ctrl_off, align 4, !dbg !10670
  %add3 = add i32 %7, %8, !dbg !10671
  %call4 = call i32 @pci_read_config_word(%struct.pci_dev* %6, i32 %add3, i16* %ctrl) #9, !dbg !10672
  %9 = load i16, i16* %ctrl, align 2, !dbg !10673
  %conv5 = zext i16 %9 to i32, !dbg !10673
  %and6 = and i32 %conv5, 64, !dbg !10675
  %tobool7 = icmp ne i32 %and6, 0, !dbg !10675
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !10676

if.then8:                                         ; preds = %if.end
  store i32 1, i32* %end, align 4, !dbg !10677
  br label %if.end9, !dbg !10678

if.end9:                                          ; preds = %if.then8, %if.end
  br label %out, !dbg !10679

out:                                              ; preds = %if.end9, %if.then
  call void @llvm.dbg.label(metadata !10680), !dbg !10681
  %10 = load i32, i32* %end, align 4, !dbg !10682
  ret i32 %10, !dbg !10683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @host_bridge_with_leaf(%struct.pci_dev* %host_bridge) #0 !dbg !10684 {
entry:
  %host_bridge.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %dev_no = alloca i32, align 4
  %found = alloca i32, align 4
  store %struct.pci_dev* %host_bridge, %struct.pci_dev** %host_bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %host_bridge.addr, metadata !10685, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !10687, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10689, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10691, metadata !DIExpression()), !dbg !10692
  call void @llvm.dbg.declare(metadata i32* %dev_no, metadata !10693, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.declare(metadata i32* %found, metadata !10695, metadata !DIExpression()), !dbg !10696
  store i32 0, i32* %found, align 4, !dbg !10696
  %0 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge.addr, align 8, !dbg !10697
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 6, !dbg !10698
  %1 = load i32, i32* %devfn, align 8, !dbg !10698
  %shr = lshr i32 %1, 3, !dbg !10699
  store i32 %shr, i32* %dev_no, align 4, !dbg !10700
  %2 = load i32, i32* %dev_no, align 4, !dbg !10701
  %add = add i32 %2, 1, !dbg !10703
  store i32 %add, i32* %i, align 4, !dbg !10704
  br label %for.cond, !dbg !10705

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !10706
  %cmp = icmp slt i32 %3, 32, !dbg !10708
  br i1 %cmp, label %for.body, label %for.end, !dbg !10709

for.body:                                         ; preds = %for.cond
  %4 = load %struct.pci_dev*, %struct.pci_dev** %host_bridge.addr, align 8, !dbg !10710
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 1, !dbg !10712
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !10712
  %6 = load i32, i32* %i, align 4, !dbg !10713
  %and = and i32 %6, 31, !dbg !10713
  %shl = shl i32 %and, 3, !dbg !10713
  %call = call %struct.pci_dev* @pci_get_slot(%struct.pci_bus* %5, i32 %shl) #9, !dbg !10714
  store %struct.pci_dev* %call, %struct.pci_dev** %dev, align 8, !dbg !10715
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !10716
  %tobool = icmp ne %struct.pci_dev* %7, null, !dbg !10716
  br i1 %tobool, label %if.end, label %if.then, !dbg !10718

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !10719

if.end:                                           ; preds = %for.body
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !10720
  %call1 = call i32 @pci_find_ht_capability(%struct.pci_dev* %8, i32 0) #9, !dbg !10721
  store i32 %call1, i32* %pos, align 4, !dbg !10722
  %9 = load i32, i32* %pos, align 4, !dbg !10723
  %cmp2 = icmp ne i32 %9, 0, !dbg !10725
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10726

if.then3:                                         ; preds = %if.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !10727
  call void @pci_dev_put(%struct.pci_dev* %10) #9, !dbg !10729
  br label %for.end, !dbg !10730

if.end4:                                          ; preds = %if.end
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !10731
  %call5 = call i32 @ht_check_msi_mapping(%struct.pci_dev* %11) #9, !dbg !10733
  %tobool6 = icmp ne i32 %call5, 0, !dbg !10733
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !10734

if.then7:                                         ; preds = %if.end4
  store i32 1, i32* %found, align 4, !dbg !10735
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !10737
  call void @pci_dev_put(%struct.pci_dev* %12) #9, !dbg !10738
  br label %for.end, !dbg !10739

if.end8:                                          ; preds = %if.end4
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !10740
  call void @pci_dev_put(%struct.pci_dev* %13) #9, !dbg !10741
  br label %for.inc, !dbg !10742

for.inc:                                          ; preds = %if.end8, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !10743
  %inc = add i32 %14, 1, !dbg !10743
  store i32 %inc, i32* %i, align 4, !dbg !10743
  br label %for.cond, !dbg !10744, !llvm.loop !10745

for.end:                                          ; preds = %if.then7, %if.then3, %for.cond
  %15 = load i32, i32* %found, align 4, !dbg !10747
  ret i32 %15, !dbg !10748
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i8* @pci_iomap(%struct.pci_dev*, i32, i64) #3

; Function Attrs: noredzone
declare dso_local void @pci_iounmap(%struct.pci_dev*, i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device_mem(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local i32 @ioread32be(i8*) #3

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_root_bus(%struct.pci_bus* %pbus) #0 !dbg !10749 {
entry:
  %pbus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %pbus, %struct.pci_bus** %pbus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %pbus.addr, metadata !10752, metadata !DIExpression()), !dbg !10753
  %0 = load %struct.pci_bus*, %struct.pci_bus** %pbus.addr, align 8, !dbg !10754
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 1, !dbg !10755
  %1 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !10755
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !10756
  %lnot = xor i1 %tobool, true, !dbg !10756
  ret i1 %lnot, !dbg !10757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_pcie_type(%struct.pci_dev* %dev) #0 !dbg !10758 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10761, metadata !DIExpression()), !dbg !10762
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10763
  %call = call zeroext i16 @pcie_caps_reg(%struct.pci_dev* %0) #9, !dbg !10764
  %conv = zext i16 %call to i32, !dbg !10764
  %and = and i32 %conv, 240, !dbg !10765
  %shr = ashr i32 %and, 4, !dbg !10766
  ret i32 %shr, !dbg !10767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @acpi_device_handle(%struct.acpi_device* %adev) #0 !dbg !10768 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !10772, metadata !DIExpression()), !dbg !10773
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !10774
  %tobool = icmp ne %struct.acpi_device* %0, null, !dbg !10774
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10774

cond.true:                                        ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !10775
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 1, !dbg !10776
  %2 = load i8*, i8** %handle, align 8, !dbg !10776
  br label %cond.end, !dbg !10774

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10774

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ null, %cond.false ], !dbg !10774
  ret i8* %cond, !dbg !10777
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_acpi_device_node(%struct.fwnode_handle*) #3

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_handle(i8*, i8*, i8**) #3

; Function Attrs: noredzone
declare dso_local i32 @acpi_execute_simple_method(i8*, i8*, i64) #3

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pcie_caps_reg(%struct.pci_dev* %dev) #0 !dbg !10778 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10781, metadata !DIExpression()), !dbg !10782
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10783
  %pcie_flags_reg = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 20, !dbg !10784
  %1 = load i16, i16* %pcie_flags_reg, align 8, !dbg !10784
  ret i16 %1, !dbg !10785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @reset_intel_82599_sfp_virtfn(%struct.pci_dev* %dev, i32 %probe) #0 !dbg !10786 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %probe.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10787, metadata !DIExpression()), !dbg !10788
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !10789, metadata !DIExpression()), !dbg !10790
  %0 = load i32, i32* %probe.addr, align 4, !dbg !10791
  %tobool = icmp ne i32 %0, 0, !dbg !10791
  br i1 %tobool, label %if.end, label %if.then, !dbg !10793

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10794
  %call = call i32 @pcie_flr(%struct.pci_dev* %1) #9, !dbg !10795
  br label %if.end, !dbg !10795

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !10796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @reset_ivb_igd(%struct.pci_dev* %dev, i32 %probe) #0 !dbg !10797 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !10798, metadata !DIExpression()), !dbg !10803
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %probe.addr = alloca i32, align 4
  %mmio_base = alloca i8*, align 8
  %timeout = alloca i64, align 8
  %val = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10805, metadata !DIExpression()), !dbg !10806
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !10807, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.declare(metadata i8** %mmio_base, metadata !10809, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !10811, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.declare(metadata i32* %val, metadata !10813, metadata !DIExpression()), !dbg !10814
  %0 = load i32, i32* %probe.addr, align 4, !dbg !10815
  %tobool = icmp ne i32 %0, 0, !dbg !10815
  br i1 %tobool, label %if.then, label %if.end, !dbg !10817

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10818
  br label %return, !dbg !10818

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10819
  %call = call i8* @pci_iomap(%struct.pci_dev* %1, i32 0, i64 0) #9, !dbg !10820
  store i8* %call, i8** %mmio_base, align 8, !dbg !10821
  %2 = load i8*, i8** %mmio_base, align 8, !dbg !10822
  %tobool1 = icmp ne i8* %2, null, !dbg !10822
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !10824

if.then2:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !10825
  br label %return, !dbg !10825

if.end3:                                          ; preds = %if.end
  %3 = load i8*, i8** %mmio_base, align 8, !dbg !10826
  %add.ptr = getelementptr i8, i8* %3, i64 282640, !dbg !10827
  call void @iowrite32(i32 2, i8* %add.ptr) #9, !dbg !10828
  %4 = load i8*, i8** %mmio_base, align 8, !dbg !10829
  %add.ptr4 = getelementptr i8, i8* %4, i64 794628, !dbg !10830
  call void @iowrite32(i32 5, i8* %add.ptr4) #9, !dbg !10831
  %5 = load i8*, i8** %mmio_base, align 8, !dbg !10832
  %add.ptr5 = getelementptr i8, i8* %5, i64 815620, !dbg !10833
  %call6 = call i32 @ioread32(i8* %add.ptr5) #9, !dbg !10834
  %and = and i32 %call6, -2, !dbg !10835
  store i32 %and, i32* %val, align 4, !dbg !10836
  %6 = load i32, i32* %val, align 4, !dbg !10837
  %7 = load i8*, i8** %mmio_base, align 8, !dbg !10838
  %add.ptr7 = getelementptr i8, i8* %7, i64 815620, !dbg !10839
  call void @iowrite32(i32 %6, i8* %add.ptr7) #9, !dbg !10840
  %8 = load volatile i64, i64* @jiffies, align 8, !dbg !10841
  store i32 10000, i32* %m.addr.i, align 4
  %9 = load i32, i32* %m.addr.i, align 4, !dbg !10842
  %10 = call i1 @llvm.is.constant.i32(i32 %9) #11, !dbg !10844
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !10845

if.then.i:                                        ; preds = %if.end3
  %11 = load i32, i32* %m.addr.i, align 4, !dbg !10846
  %cmp.i = icmp slt i32 %11, 0, !dbg !10849
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10850

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !10851
  br label %msecs_to_jiffies.exit, !dbg !10851

if.end.i:                                         ; preds = %if.then.i
  %12 = load i32, i32* %m.addr.i, align 4, !dbg !10852
  %call.i = call i64 @_msecs_to_jiffies(i32 %12) #13, !dbg !10853
  store i64 %call.i, i64* %retval.i, align 8, !dbg !10854
  br label %msecs_to_jiffies.exit, !dbg !10854

if.else.i:                                        ; preds = %if.end3
  %13 = load i32, i32* %m.addr.i, align 4, !dbg !10855
  %call2.i = call i64 @__msecs_to_jiffies(i32 %13) #13, !dbg !10857
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !10858
  br label %msecs_to_jiffies.exit, !dbg !10858

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %14 = load i64, i64* %retval.i, align 8, !dbg !10859
  %add = add i64 %8, %14, !dbg !10860
  store i64 %add, i64* %timeout, align 8, !dbg !10861
  br label %do.body, !dbg !10862

do.body:                                          ; preds = %do.cond, %msecs_to_jiffies.exit
  %15 = load i8*, i8** %mmio_base, align 8, !dbg !10863
  %add.ptr9 = getelementptr i8, i8* %15, i64 815616, !dbg !10865
  %call10 = call i32 @ioread32(i8* %add.ptr9) #9, !dbg !10866
  store i32 %call10, i32* %val, align 4, !dbg !10867
  %16 = load i32, i32* %val, align 4, !dbg !10868
  %and11 = and i32 %16, -1342177280, !dbg !10870
  %cmp = icmp eq i32 %and11, 0, !dbg !10871
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !10872

if.then12:                                        ; preds = %do.body
  br label %reset_complete, !dbg !10873

if.end13:                                         ; preds = %do.body
  call void @msleep(i32 10) #9, !dbg !10874
  br label %do.cond, !dbg !10875

do.cond:                                          ; preds = %if.end13
  %17 = load volatile i64, i64* @jiffies, align 8, !dbg !10876
  %18 = load i64, i64* %timeout, align 8, !dbg !10876
  %sub = sub i64 %17, %18, !dbg !10876
  %cmp14 = icmp slt i64 %sub, 0, !dbg !10876
  br i1 %cmp14, label %do.body, label %do.end, !dbg !10875, !llvm.loop !10877

do.end:                                           ; preds = %do.cond
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10879
  %dev15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !10879
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.120, i64 0, i64 0)) #10, !dbg !10879
  br label %reset_complete, !dbg !10879

reset_complete:                                   ; preds = %do.end, %if.then12
  call void @llvm.dbg.label(metadata !10880), !dbg !10881
  %20 = load i8*, i8** %mmio_base, align 8, !dbg !10882
  %add.ptr16 = getelementptr i8, i8* %20, i64 852224, !dbg !10883
  call void @iowrite32(i32 2, i8* %add.ptr16) #9, !dbg !10884
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10885
  %22 = load i8*, i8** %mmio_base, align 8, !dbg !10886
  call void @pci_iounmap(%struct.pci_dev* %21, i8* %22) #9, !dbg !10887
  store i32 0, i32* %retval, align 4, !dbg !10888
  br label %return, !dbg !10888

return:                                           ; preds = %reset_complete, %if.then2, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !10889
  ret i32 %23, !dbg !10889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nvme_disable_and_flr(%struct.pci_dev* %dev, i32 %probe) #0 !dbg !10890 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %probe.addr = alloca i32, align 4
  %bar = alloca i8*, align 8
  %cmd = alloca i16, align 2
  %cfg = alloca i32, align 4
  %cap = alloca i32, align 4
  %timeout = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10891, metadata !DIExpression()), !dbg !10892
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !10893, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.declare(metadata i8** %bar, metadata !10895, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !10897, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.declare(metadata i32* %cfg, metadata !10899, metadata !DIExpression()), !dbg !10900
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10901
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 11, !dbg !10903
  %1 = load i32, i32* %class, align 4, !dbg !10903
  %cmp = icmp ne i32 %1, 67586, !dbg !10904
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10905

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10906
  %call = call zeroext i1 @pcie_has_flr(%struct.pci_dev* %2) #9, !dbg !10907
  br i1 %call, label %lor.lhs.false1, label %if.then, !dbg !10908

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10909
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 44, !dbg !10909
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !10909
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !10909
  %4 = load i64, i64* %start, align 8, !dbg !10909
  %tobool = icmp ne i64 %4, 0, !dbg !10909
  br i1 %tobool, label %if.end, label %if.then, !dbg !10910

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %entry
  store i32 -25, i32* %retval, align 4, !dbg !10911
  br label %return, !dbg !10911

if.end:                                           ; preds = %lor.lhs.false1
  %5 = load i32, i32* %probe.addr, align 4, !dbg !10912
  %tobool2 = icmp ne i32 %5, 0, !dbg !10912
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10914

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10915
  br label %return, !dbg !10915

if.end4:                                          ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10916
  %call5 = call i8* @pci_iomap(%struct.pci_dev* %6, i32 0, i64 24) #9, !dbg !10917
  store i8* %call5, i8** %bar, align 8, !dbg !10918
  %7 = load i8*, i8** %bar, align 8, !dbg !10919
  %tobool6 = icmp ne i8* %7, null, !dbg !10919
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !10921

if.then7:                                         ; preds = %if.end4
  store i32 -25, i32* %retval, align 4, !dbg !10922
  br label %return, !dbg !10922

if.end8:                                          ; preds = %if.end4
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10923
  %call9 = call i32 @pci_read_config_word(%struct.pci_dev* %8, i32 4, i16* %cmd) #9, !dbg !10924
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10925
  %10 = load i16, i16* %cmd, align 2, !dbg !10926
  %conv = zext i16 %10 to i32, !dbg !10926
  %or = or i32 %conv, 2, !dbg !10927
  %conv10 = trunc i32 %or to i16, !dbg !10926
  %call11 = call i32 @pci_write_config_word(%struct.pci_dev* %9, i32 4, i16 zeroext %conv10) #9, !dbg !10928
  %11 = load i8*, i8** %bar, align 8, !dbg !10929
  %add.ptr = getelementptr i8, i8* %11, i64 20, !dbg !10930
  %call12 = call i32 @readl(i8* %add.ptr) #9, !dbg !10931
  store i32 %call12, i32* %cfg, align 4, !dbg !10932
  %12 = load i32, i32* %cfg, align 4, !dbg !10933
  %and = and i32 %12, 1, !dbg !10935
  %tobool13 = icmp ne i32 %and, 0, !dbg !10935
  br i1 %tobool13, label %if.then14, label %if.end33, !dbg !10936

if.then14:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !10937, metadata !DIExpression()), !dbg !10939
  %13 = load i8*, i8** %bar, align 8, !dbg !10940
  %add.ptr15 = getelementptr i8, i8* %13, i64 0, !dbg !10941
  %call16 = call i32 @readl(i8* %add.ptr15) #9, !dbg !10942
  store i32 %call16, i32* %cap, align 4, !dbg !10939
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !10943, metadata !DIExpression()), !dbg !10944
  %14 = load i32, i32* %cfg, align 4, !dbg !10945
  %and17 = and i32 %14, -49154, !dbg !10945
  store i32 %and17, i32* %cfg, align 4, !dbg !10945
  %15 = load i32, i32* %cfg, align 4, !dbg !10946
  %16 = load i8*, i8** %bar, align 8, !dbg !10947
  %add.ptr18 = getelementptr i8, i8* %16, i64 20, !dbg !10948
  call void @writel(i32 %15, i8* %add.ptr18) #9, !dbg !10949
  %17 = load i32, i32* %cap, align 4, !dbg !10950
  %shr = lshr i32 %17, 24, !dbg !10950
  %and19 = and i32 %shr, 255, !dbg !10950
  %add = add i32 %and19, 1, !dbg !10951
  %mul = mul i32 %add, 250, !dbg !10952
  %div = udiv i32 %mul, 2, !dbg !10953
  %conv20 = zext i32 %div to i64, !dbg !10954
  %18 = load volatile i64, i64* @jiffies, align 8, !dbg !10955
  %add21 = add i64 %conv20, %18, !dbg !10956
  store i64 %add21, i64* %timeout, align 8, !dbg !10957
  br label %for.cond, !dbg !10958

for.cond:                                         ; preds = %if.end32, %if.then14
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10959, metadata !DIExpression()), !dbg !10963
  %19 = load i8*, i8** %bar, align 8, !dbg !10964
  %add.ptr22 = getelementptr i8, i8* %19, i64 28, !dbg !10965
  %call23 = call i32 @readl(i8* %add.ptr22) #9, !dbg !10966
  store i32 %call23, i32* %status, align 4, !dbg !10963
  %20 = load i32, i32* %status, align 4, !dbg !10967
  %and24 = and i32 %20, 1, !dbg !10969
  %tobool25 = icmp ne i32 %and24, 0, !dbg !10969
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !10970

if.then26:                                        ; preds = %for.cond
  br label %for.end, !dbg !10971

if.end27:                                         ; preds = %for.cond
  call void @msleep(i32 100) #9, !dbg !10972
  %21 = load i64, i64* %timeout, align 8, !dbg !10973
  %22 = load volatile i64, i64* @jiffies, align 8, !dbg !10973
  %sub = sub i64 %21, %22, !dbg !10973
  %cmp28 = icmp slt i64 %sub, 0, !dbg !10973
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !10975

if.then30:                                        ; preds = %if.end27
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10976
  %dev31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !10976
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev31, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.121, i64 0, i64 0)) #10, !dbg !10976
  br label %for.end, !dbg !10978

if.end32:                                         ; preds = %if.end27
  br label %for.cond, !dbg !10979, !llvm.loop !10980

for.end:                                          ; preds = %if.then30, %if.then26
  br label %if.end33, !dbg !10983

if.end33:                                         ; preds = %for.end, %if.end8
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10984
  %25 = load i8*, i8** %bar, align 8, !dbg !10985
  call void @pci_iounmap(%struct.pci_dev* %24, i8* %25) #9, !dbg !10986
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10987
  %call34 = call i32 @pcie_flr(%struct.pci_dev* %26) #9, !dbg !10988
  store i32 0, i32* %retval, align 4, !dbg !10989
  br label %return, !dbg !10989

return:                                           ; preds = %if.end33, %if.then7, %if.then3, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !10990
  ret i32 %27, !dbg !10990
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @delay_250ms_after_flr(%struct.pci_dev* %dev, i32 %probe) #0 !dbg !10991 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %probe.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10992, metadata !DIExpression()), !dbg !10993
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !10994, metadata !DIExpression()), !dbg !10995
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10996
  %call = call zeroext i1 @pcie_has_flr(%struct.pci_dev* %0) #9, !dbg !10998
  br i1 %call, label %if.end, label %if.then, !dbg !10999

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11000
  br label %return, !dbg !11000

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %probe.addr, align 4, !dbg !11001
  %tobool = icmp ne i32 %1, 0, !dbg !11001
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !11003

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11004
  br label %return, !dbg !11004

if.end2:                                          ; preds = %if.end
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11005
  %call3 = call i32 @pcie_flr(%struct.pci_dev* %2) #9, !dbg !11006
  call void @msleep(i32 250) #9, !dbg !11007
  store i32 0, i32* %retval, align 4, !dbg !11008
  br label %return, !dbg !11008

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !11009
  ret i32 %3, !dbg !11009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @reset_chelsio_generic_dev(%struct.pci_dev* %dev, i32 %probe) #0 !dbg !11010 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %probe.addr = alloca i32, align 4
  %old_command = alloca i16, align 2
  %msix_flags = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11011, metadata !DIExpression()), !dbg !11012
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !11013, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.declare(metadata i16* %old_command, metadata !11015, metadata !DIExpression()), !dbg !11016
  call void @llvm.dbg.declare(metadata i16* %msix_flags, metadata !11017, metadata !DIExpression()), !dbg !11018
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11019
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 8, !dbg !11021
  %1 = load i16, i16* %device, align 2, !dbg !11021
  %conv = zext i16 %1 to i32, !dbg !11019
  %and = and i32 %conv, 61440, !dbg !11022
  %cmp = icmp ne i32 %and, 16384, !dbg !11023
  br i1 %cmp, label %if.then, label %if.end, !dbg !11024

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11025
  br label %return, !dbg !11025

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %probe.addr, align 4, !dbg !11026
  %tobool = icmp ne i32 %2, 0, !dbg !11026
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !11028

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11029
  br label %return, !dbg !11029

if.end3:                                          ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11030
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %3, i32 4, i16* %old_command) #9, !dbg !11031
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11032
  %5 = load i16, i16* %old_command, align 2, !dbg !11033
  %conv4 = zext i16 %5 to i32, !dbg !11033
  %or = or i32 %conv4, 4, !dbg !11034
  %conv5 = trunc i32 %or to i16, !dbg !11033
  %call6 = call i32 @pci_write_config_word(%struct.pci_dev* %4, i32 4, i16 zeroext %conv5) #9, !dbg !11035
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11036
  %call7 = call i32 @pci_save_state(%struct.pci_dev* %6) #9, !dbg !11037
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11038
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11039
  %msix_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 16, !dbg !11040
  %9 = load i8, i8* %msix_cap, align 4, !dbg !11040
  %conv8 = zext i8 %9 to i32, !dbg !11039
  %add = add i32 %conv8, 2, !dbg !11041
  %call9 = call i32 @pci_read_config_word(%struct.pci_dev* %7, i32 %add, i16* %msix_flags) #9, !dbg !11042
  %10 = load i16, i16* %msix_flags, align 2, !dbg !11043
  %conv10 = zext i16 %10 to i32, !dbg !11043
  %and11 = and i32 %conv10, 32768, !dbg !11045
  %cmp12 = icmp eq i32 %and11, 0, !dbg !11046
  br i1 %cmp12, label %if.then14, label %if.end23, !dbg !11047

if.then14:                                        ; preds = %if.end3
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11048
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11049
  %msix_cap15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 16, !dbg !11050
  %13 = load i8, i8* %msix_cap15, align 4, !dbg !11050
  %conv16 = zext i8 %13 to i32, !dbg !11049
  %add17 = add i32 %conv16, 2, !dbg !11051
  %14 = load i16, i16* %msix_flags, align 2, !dbg !11052
  %conv18 = zext i16 %14 to i32, !dbg !11052
  %or19 = or i32 %conv18, 32768, !dbg !11053
  %or20 = or i32 %or19, 16384, !dbg !11054
  %conv21 = trunc i32 %or20 to i16, !dbg !11052
  %call22 = call i32 @pci_write_config_word(%struct.pci_dev* %11, i32 %add17, i16 zeroext %conv21) #9, !dbg !11055
  br label %if.end23, !dbg !11055

if.end23:                                         ; preds = %if.then14, %if.end3
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11056
  %call24 = call i32 @pcie_flr(%struct.pci_dev* %15) #9, !dbg !11057
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11058
  call void @pci_restore_state(%struct.pci_dev* %16) #9, !dbg !11059
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11060
  %18 = load i16, i16* %old_command, align 2, !dbg !11061
  %call25 = call i32 @pci_write_config_word(%struct.pci_dev* %17, i32 4, i16 zeroext %18) #9, !dbg !11062
  store i32 0, i32* %retval, align 4, !dbg !11063
  br label %return, !dbg !11063

return:                                           ; preds = %if.end23, %if.then2, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !11064
  ret i32 %19, !dbg !11064
}

; Function Attrs: noredzone
declare dso_local i32 @pcie_flr(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local void @iowrite32(i32, i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @ioread32(i8*) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !11065 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !11066, metadata !DIExpression()), !dbg !11067
  %0 = load i32, i32* %m.addr, align 4, !dbg !11068
  %conv = zext i32 %0 to i64, !dbg !11068
  %add = add i64 %conv, 4, !dbg !11069
  %sub = sub i64 %add, 1, !dbg !11070
  %div = sdiv i64 %sub, 4, !dbg !11071
  ret i64 %div, !dbg !11072
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @pcie_has_flr(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_save_state(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local void @pci_restore_state(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local void @pci_add_dma_alias(%struct.pci_dev*, i8 zeroext, i32) #3

; Function Attrs: noredzone
declare dso_local %struct.pci_device_id* @pci_match_id(%struct.pci_device_id*, %struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_pcie(%struct.pci_dev* %dev) #0 !dbg !11073 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11076, metadata !DIExpression()), !dbg !11077
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11078
  %call = call i32 @pci_pcie_cap(%struct.pci_dev* %0) #9, !dbg !11079
  %tobool = icmp ne i32 %call, 0, !dbg !11079
  ret i1 %tobool, !dbg !11080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_pcie_cap(%struct.pci_dev* %dev) #0 !dbg !11081 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11082, metadata !DIExpression()), !dbg !11083
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11084
  %pcie_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 14, !dbg !11085
  %1 = load i8, i8* %pcie_cap, align 2, !dbg !11085
  %conv = zext i8 %1 to i32, !dbg !11084
  ret i32 %conv, !dbg !11086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @quirk_disable_root_port_attributes(%struct.pci_dev* %pdev) #0 !dbg !11087 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %root_port = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !11088, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %root_port, metadata !11090, metadata !DIExpression()), !dbg !11091
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11092
  %call = call %struct.pci_dev* @pcie_find_root_port(%struct.pci_dev* %0) #9, !dbg !11093
  store %struct.pci_dev* %call, %struct.pci_dev** %root_port, align 8, !dbg !11091
  %1 = load %struct.pci_dev*, %struct.pci_dev** %root_port, align 8, !dbg !11094
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !11094
  br i1 %tobool, label %if.end, label %if.then, !dbg !11096

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11097
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !11097
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.124, i64 0, i64 0)) #10, !dbg !11097
  br label %return, !dbg !11099

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %root_port, align 8, !dbg !11100
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !11100
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11100
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !11100
  %call3 = call i8* @dev_name(%struct.device* %dev2) #9, !dbg !11100
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.125, i64 0, i64 0), i8* %call3) #10, !dbg !11100
  %5 = load %struct.pci_dev*, %struct.pci_dev** %root_port, align 8, !dbg !11101
  %call4 = call i32 @pcie_capability_clear_and_set_word(%struct.pci_dev* %5, i32 8, i16 zeroext 2064, i16 zeroext 0) #9, !dbg !11102
  br label %return, !dbg !11103

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_dev* @pcie_find_root_port(%struct.pci_dev* %dev) #0 !dbg !11104 {
entry:
  %retval = alloca %struct.pci_dev*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11107, metadata !DIExpression()), !dbg !11108
  br label %while.cond, !dbg !11109

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11110
  %tobool = icmp ne %struct.pci_dev* %0, null, !dbg !11109
  br i1 %tobool, label %while.body, label %while.end, !dbg !11109

while.body:                                       ; preds = %while.cond
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11111
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %1) #9, !dbg !11114
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !11115

land.lhs.true:                                    ; preds = %while.body
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11116
  %call1 = call i32 @pci_pcie_type(%struct.pci_dev* %2) #9, !dbg !11117
  %cmp = icmp eq i32 %call1, 4, !dbg !11118
  br i1 %cmp, label %if.then, label %if.end, !dbg !11119

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11120
  store %struct.pci_dev* %3, %struct.pci_dev** %retval, align 8, !dbg !11121
  br label %return, !dbg !11121

if.end:                                           ; preds = %land.lhs.true, %while.body
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11122
  %call2 = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %4) #9, !dbg !11123
  store %struct.pci_dev* %call2, %struct.pci_dev** %dev.addr, align 8, !dbg !11124
  br label %while.cond, !dbg !11109, !llvm.loop !11125

while.end:                                        ; preds = %while.cond
  store %struct.pci_dev* null, %struct.pci_dev** %retval, align 8, !dbg !11127
  br label %return, !dbg !11127

return:                                           ; preds = %while.end, %if.then
  %5 = load %struct.pci_dev*, %struct.pci_dev** %retval, align 8, !dbg !11128
  ret %struct.pci_dev* %5, !dbg !11128
}

; Function Attrs: noredzone
declare dso_local i32 @pcie_capability_clear_and_set_word(%struct.pci_dev*, i32, i16 zeroext, i16 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %dev) #0 !dbg !11129 {
entry:
  %retval = alloca %struct.pci_dev*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11130, metadata !DIExpression()), !dbg !11131
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11132
  %call = call %struct.pci_dev* @pci_physfn(%struct.pci_dev* %0) #9, !dbg !11133
  store %struct.pci_dev* %call, %struct.pci_dev** %dev.addr, align 8, !dbg !11134
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11135
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 1, !dbg !11137
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !11137
  %call1 = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %2) #9, !dbg !11138
  br i1 %call1, label %if.then, label %if.end, !dbg !11139

if.then:                                          ; preds = %entry
  store %struct.pci_dev* null, %struct.pci_dev** %retval, align 8, !dbg !11140
  br label %return, !dbg !11140

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11141
  %bus2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 1, !dbg !11142
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus2, align 8, !dbg !11142
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 4, !dbg !11143
  %5 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !11143
  store %struct.pci_dev* %5, %struct.pci_dev** %retval, align 8, !dbg !11144
  br label %return, !dbg !11144

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.pci_dev*, %struct.pci_dev** %retval, align 8, !dbg !11145
  ret %struct.pci_dev* %6, !dbg !11145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_dev* @pci_physfn(%struct.pci_dev* %dev) #0 !dbg !11146 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11147, metadata !DIExpression()), !dbg !11148
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11149
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !11151
  %1 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !11151
  %bf.load = load i40, i40* %1, align 1, !dbg !11151
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !11151
  %bf.clear = and i40 %bf.lshr, 1, !dbg !11151
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !11151
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !11149
  br i1 %tobool, label %if.then, label %if.end, !dbg !11152

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11153
  %3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 59, !dbg !11154
  %physfn = bitcast %union.anon.65* %3 to %struct.pci_dev**, !dbg !11154
  %4 = load %struct.pci_dev*, %struct.pci_dev** %physfn, align 8, !dbg !11154
  store %struct.pci_dev* %4, %struct.pci_dev** %dev.addr, align 8, !dbg !11155
  br label %if.end, !dbg !11156

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11157
  ret %struct.pci_dev* %5, !dbg !11158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_amd_sb_acs(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !11159 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  %header = alloca %struct.acpi_table_header*, align 8
  %status = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11160, metadata !DIExpression()), !dbg !11161
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !11162, metadata !DIExpression()), !dbg !11163
  call void @llvm.dbg.declare(metadata %struct.acpi_table_header** %header, metadata !11164, metadata !DIExpression()), !dbg !11179
  store %struct.acpi_table_header* null, %struct.acpi_table_header** %header, align 8, !dbg !11179
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11180, metadata !DIExpression()), !dbg !11182
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11183
  %multifunction = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !11185
  %1 = bitcast [5 x i8]* %multifunction to i40*, !dbg !11185
  %bf.load = load i40, i40* %1, align 1, !dbg !11185
  %bf.lshr = lshr i40 %bf.load, 4, !dbg !11185
  %bf.clear = and i40 %bf.lshr, 1, !dbg !11185
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !11185
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !11183
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11186

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11187
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 1, !dbg !11188
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !11188
  %call = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %3) #9, !dbg !11189
  br i1 %call, label %if.end, label %if.then, !dbg !11190

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -19, i32* %retval, align 4, !dbg !11191
  br label %return, !dbg !11191

if.end:                                           ; preds = %lor.lhs.false
  %call1 = call i32 @acpi_get_table(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.126, i64 0, i64 0), i32 0, %struct.acpi_table_header** %header) #9, !dbg !11192
  store i32 %call1, i32* %status, align 4, !dbg !11193
  %4 = load i32, i32* %status, align 4, !dbg !11194
  %tobool2 = icmp ne i32 %4, 0, !dbg !11194
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !11196

if.then3:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !11197
  br label %return, !dbg !11197

if.end4:                                          ; preds = %if.end
  %5 = load %struct.acpi_table_header*, %struct.acpi_table_header** %header, align 8, !dbg !11198
  call void @acpi_put_table(%struct.acpi_table_header* %5) #9, !dbg !11199
  %6 = load i16, i16* %acs_flags.addr, align 2, !dbg !11200
  %conv = zext i16 %6 to i32, !dbg !11200
  %and = and i32 %conv, 108, !dbg !11200
  %conv5 = trunc i32 %and to i16, !dbg !11200
  store i16 %conv5, i16* %acs_flags.addr, align 2, !dbg !11200
  %7 = load i16, i16* %acs_flags.addr, align 2, !dbg !11201
  %call6 = call i32 @pci_acs_ctrl_enabled(i16 zeroext %7, i16 zeroext 12) #9, !dbg !11202
  store i32 %call6, i32* %retval, align 4, !dbg !11203
  br label %return, !dbg !11203

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !11204
  ret i32 %8, !dbg !11204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_mf_endpoint_acs(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !11205 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11206, metadata !DIExpression()), !dbg !11207
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !11208, metadata !DIExpression()), !dbg !11209
  %0 = load i16, i16* %acs_flags.addr, align 2, !dbg !11210
  %call = call i32 @pci_acs_ctrl_enabled(i16 zeroext %0, i16 zeroext 95) #9, !dbg !11211
  ret i32 %call, !dbg !11212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_rciep_acs(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !11213 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11214, metadata !DIExpression()), !dbg !11215
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !11216, metadata !DIExpression()), !dbg !11217
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11218
  %call = call i32 @pci_pcie_type(%struct.pci_dev* %0) #9, !dbg !11220
  %cmp = icmp ne i32 %call, 9, !dbg !11221
  br i1 %cmp, label %if.then, label %if.end, !dbg !11222

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11223
  br label %return, !dbg !11223

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %acs_flags.addr, align 2, !dbg !11224
  %call1 = call i32 @pci_acs_ctrl_enabled(i16 zeroext %1, i16 zeroext 29) #9, !dbg !11225
  store i32 %call1, i32* %retval, align 4, !dbg !11226
  br label %return, !dbg !11226

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !11227
  ret i32 %2, !dbg !11227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_qcom_rp_acs(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !11228 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11229, metadata !DIExpression()), !dbg !11230
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !11231, metadata !DIExpression()), !dbg !11232
  %0 = load i16, i16* %acs_flags.addr, align 2, !dbg !11233
  %call = call i32 @pci_acs_ctrl_enabled(i16 zeroext %0, i16 zeroext 29) #9, !dbg !11234
  ret i32 %call, !dbg !11235
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_intel_pch_acs(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !11236 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11237, metadata !DIExpression()), !dbg !11238
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !11239, metadata !DIExpression()), !dbg !11240
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11241
  %call = call zeroext i1 @pci_quirk_intel_pch_acs_match(%struct.pci_dev* %0) #9, !dbg !11243
  br i1 %call, label %if.end, label %if.then, !dbg !11244

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11245
  br label %return, !dbg !11245

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11246
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 47, !dbg !11248
  %2 = load i16, i16* %dev_flags, align 2, !dbg !11248
  %conv = zext i16 %2 to i32, !dbg !11246
  %and = and i32 %conv, 8, !dbg !11249
  %tobool = icmp ne i32 %and, 0, !dbg !11249
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !11250

if.then1:                                         ; preds = %if.end
  %3 = load i16, i16* %acs_flags.addr, align 2, !dbg !11251
  %call2 = call i32 @pci_acs_ctrl_enabled(i16 zeroext %3, i16 zeroext 29) #9, !dbg !11252
  store i32 %call2, i32* %retval, align 4, !dbg !11253
  br label %return, !dbg !11253

if.end3:                                          ; preds = %if.end
  %4 = load i16, i16* %acs_flags.addr, align 2, !dbg !11254
  %call4 = call i32 @pci_acs_ctrl_enabled(i16 zeroext %4, i16 zeroext 0) #9, !dbg !11255
  store i32 %call4, i32* %retval, align 4, !dbg !11256
  br label %return, !dbg !11256

return:                                           ; preds = %if.end3, %if.then1, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11257
  ret i32 %5, !dbg !11257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_intel_spt_pch_acs(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !11258 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  %pos = alloca i32, align 4
  %cap = alloca i32, align 4
  %ctrl = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11259, metadata !DIExpression()), !dbg !11260
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !11261, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !11263, metadata !DIExpression()), !dbg !11264
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !11265, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !11267, metadata !DIExpression()), !dbg !11268
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11269
  %call = call zeroext i1 @pci_quirk_intel_spt_pch_acs_match(%struct.pci_dev* %0) #9, !dbg !11271
  br i1 %call, label %if.end, label %if.then, !dbg !11272

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11273
  br label %return, !dbg !11273

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11274
  %acs_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 63, !dbg !11275
  %2 = load i16, i16* %acs_cap, align 4, !dbg !11275
  %conv = zext i16 %2 to i32, !dbg !11274
  store i32 %conv, i32* %pos, align 4, !dbg !11276
  %3 = load i32, i32* %pos, align 4, !dbg !11277
  %tobool = icmp ne i32 %3, 0, !dbg !11277
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !11279

if.then1:                                         ; preds = %if.end
  store i32 -25, i32* %retval, align 4, !dbg !11280
  br label %return, !dbg !11280

if.end2:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11281
  %5 = load i32, i32* %pos, align 4, !dbg !11282
  %add = add i32 %5, 4, !dbg !11283
  %call3 = call i32 @pci_read_config_dword(%struct.pci_dev* %4, i32 %add, i32* %cap) #9, !dbg !11284
  %6 = load i32, i32* %cap, align 4, !dbg !11285
  %or = or i32 %6, 32, !dbg !11286
  %7 = load i16, i16* %acs_flags.addr, align 2, !dbg !11287
  %conv4 = zext i16 %7 to i32, !dbg !11287
  %and = and i32 %conv4, %or, !dbg !11287
  %conv5 = trunc i32 %and to i16, !dbg !11287
  store i16 %conv5, i16* %acs_flags.addr, align 2, !dbg !11287
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11288
  %9 = load i32, i32* %pos, align 4, !dbg !11289
  %add6 = add i32 %9, 8, !dbg !11290
  %call7 = call i32 @pci_read_config_dword(%struct.pci_dev* %8, i32 %add6, i32* %ctrl) #9, !dbg !11291
  %10 = load i16, i16* %acs_flags.addr, align 2, !dbg !11292
  %11 = load i32, i32* %ctrl, align 4, !dbg !11293
  %conv8 = trunc i32 %11 to i16, !dbg !11293
  %call9 = call i32 @pci_acs_ctrl_enabled(i16 zeroext %10, i16 zeroext %conv8) #9, !dbg !11294
  store i32 %call9, i32* %retval, align 4, !dbg !11295
  br label %return, !dbg !11295

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !11296
  ret i32 %12, !dbg !11296
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_cavium_acs(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !11297 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11298, metadata !DIExpression()), !dbg !11299
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !11300, metadata !DIExpression()), !dbg !11301
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11302
  %call = call zeroext i1 @pci_quirk_cavium_acs_match(%struct.pci_dev* %0) #9, !dbg !11304
  br i1 %call, label %if.end, label %if.then, !dbg !11305

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11306
  br label %return, !dbg !11306

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %acs_flags.addr, align 2, !dbg !11307
  %call1 = call i32 @pci_acs_ctrl_enabled(i16 zeroext %1, i16 zeroext 29) #9, !dbg !11308
  store i32 %call1, i32* %retval, align 4, !dbg !11309
  br label %return, !dbg !11309

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !11310
  ret i32 %2, !dbg !11310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_xgene_acs(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !11311 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11312, metadata !DIExpression()), !dbg !11313
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !11314, metadata !DIExpression()), !dbg !11315
  %0 = load i16, i16* %acs_flags.addr, align 2, !dbg !11316
  %call = call i32 @pci_acs_ctrl_enabled(i16 zeroext %0, i16 zeroext 29) #9, !dbg !11317
  ret i32 %call, !dbg !11318
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_brcm_acs(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !11319 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11320, metadata !DIExpression()), !dbg !11321
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !11322, metadata !DIExpression()), !dbg !11323
  %0 = load i16, i16* %acs_flags.addr, align 2, !dbg !11324
  %call = call i32 @pci_acs_ctrl_enabled(i16 zeroext %0, i16 zeroext 29) #9, !dbg !11325
  ret i32 %call, !dbg !11326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_al_acs(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !11327 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11328, metadata !DIExpression()), !dbg !11329
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !11330, metadata !DIExpression()), !dbg !11331
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11332
  %call = call i32 @pci_pcie_type(%struct.pci_dev* %0) #9, !dbg !11334
  %cmp = icmp ne i32 %call, 4, !dbg !11335
  br i1 %cmp, label %if.then, label %if.end, !dbg !11336

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11337
  br label %return, !dbg !11337

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %acs_flags.addr, align 2, !dbg !11338
  %conv = zext i16 %1 to i32, !dbg !11338
  %and = and i32 %conv, -30, !dbg !11338
  %conv1 = trunc i32 %and to i16, !dbg !11338
  store i16 %conv1, i16* %acs_flags.addr, align 2, !dbg !11338
  %2 = load i16, i16* %acs_flags.addr, align 2, !dbg !11339
  %conv2 = zext i16 %2 to i32, !dbg !11339
  %tobool = icmp ne i32 %conv2, 0, !dbg !11339
  %3 = zext i1 %tobool to i64, !dbg !11339
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !11339
  store i32 %cond, i32* %retval, align 4, !dbg !11340
  br label %return, !dbg !11340

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !11341
  ret i32 %4, !dbg !11341
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_zhaoxin_pcie_ports_acs(%struct.pci_dev* %dev, i16 zeroext %acs_flags) #0 !dbg !11342 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11343, metadata !DIExpression()), !dbg !11344
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !11345, metadata !DIExpression()), !dbg !11346
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11347
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #9, !dbg !11349
  br i1 %call, label %lor.lhs.false, label %if.then, !dbg !11350

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11351
  %call1 = call i32 @pci_pcie_type(%struct.pci_dev* %1) #9, !dbg !11352
  %cmp = icmp ne i32 %call1, 4, !dbg !11353
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11354

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11355
  %call2 = call i32 @pci_pcie_type(%struct.pci_dev* %2) #9, !dbg !11356
  %cmp3 = icmp ne i32 %call2, 6, !dbg !11357
  br i1 %cmp3, label %if.then, label %if.end, !dbg !11358

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 -25, i32* %retval, align 4, !dbg !11359
  br label %return, !dbg !11359

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11360
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 8, !dbg !11361
  %4 = load i16, i16* %device, align 2, !dbg !11361
  %conv = zext i16 %4 to i32, !dbg !11360
  switch i32 %conv, label %sw.epilog [
    i32 1825, label %sw.bb4
    i32 1827, label %sw.bb5
    i32 1828, label %sw.bb5
    i32 1829, label %sw.bb5
    i32 1830, label %sw.bb5
    i32 1831, label %sw.bb5
    i32 1832, label %sw.bb5
    i32 1833, label %sw.bb5
    i32 1834, label %sw.bb5
    i32 1835, label %sw.bb5
    i32 1836, label %sw.bb5
    i32 1837, label %sw.bb5
    i32 1838, label %sw.bb5
    i32 1839, label %sw.bb5
    i32 1840, label %sw.bb5
    i32 1841, label %sw.bb5
    i32 1842, label %sw.bb5
    i32 1808, label %sw.bb
    i32 1809, label %sw.bb
    i32 1810, label %sw.bb
    i32 1811, label %sw.bb
    i32 1812, label %sw.bb
    i32 1813, label %sw.bb
    i32 1814, label %sw.bb
    i32 1815, label %sw.bb
    i32 1816, label %sw.bb
    i32 1817, label %sw.bb
    i32 1818, label %sw.bb
    i32 1819, label %sw.bb
    i32 1820, label %sw.bb
    i32 1821, label %sw.bb
    i32 1822, label %sw.bb
  ], !dbg !11362

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  br label %sw.bb4, !dbg !11363

sw.bb4:                                           ; preds = %if.end, %sw.bb
  br label %sw.bb5, !dbg !11363

sw.bb5:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb4
  %5 = load i16, i16* %acs_flags.addr, align 2, !dbg !11364
  %call6 = call i32 @pci_acs_ctrl_enabled(i16 zeroext %5, i16 zeroext 29) #9, !dbg !11366
  store i32 %call6, i32* %retval, align 4, !dbg !11367
  br label %return, !dbg !11367

sw.epilog:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11368
  br label %return, !dbg !11368

return:                                           ; preds = %sw.epilog, %sw.bb5, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !11369
  ret i32 %6, !dbg !11369
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_table(i8*, i32, %struct.acpi_table_header**) #3

; Function Attrs: noredzone
declare dso_local void @acpi_put_table(%struct.acpi_table_header*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_acs_ctrl_enabled(i16 zeroext %acs_ctrl_req, i16 zeroext %acs_ctrl_ena) #0 !dbg !11370 {
entry:
  %retval = alloca i32, align 4
  %acs_ctrl_req.addr = alloca i16, align 2
  %acs_ctrl_ena.addr = alloca i16, align 2
  store i16 %acs_ctrl_req, i16* %acs_ctrl_req.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_ctrl_req.addr, metadata !11373, metadata !DIExpression()), !dbg !11374
  store i16 %acs_ctrl_ena, i16* %acs_ctrl_ena.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_ctrl_ena.addr, metadata !11375, metadata !DIExpression()), !dbg !11376
  %0 = load i16, i16* %acs_ctrl_req.addr, align 2, !dbg !11377
  %conv = zext i16 %0 to i32, !dbg !11377
  %1 = load i16, i16* %acs_ctrl_ena.addr, align 2, !dbg !11379
  %conv1 = zext i16 %1 to i32, !dbg !11379
  %and = and i32 %conv, %conv1, !dbg !11380
  %2 = load i16, i16* %acs_ctrl_req.addr, align 2, !dbg !11381
  %conv2 = zext i16 %2 to i32, !dbg !11381
  %cmp = icmp eq i32 %and, %conv2, !dbg !11382
  br i1 %cmp, label %if.then, label %if.end, !dbg !11383

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !11384
  br label %return, !dbg !11384

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11385
  br label %return, !dbg !11385

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !11386
  ret i32 %3, !dbg !11386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_quirk_intel_pch_acs_match(%struct.pci_dev* %dev) #0 !dbg !11387 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11388, metadata !DIExpression()), !dbg !11389
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11390, metadata !DIExpression()), !dbg !11391
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11392
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #9, !dbg !11394
  br i1 %call, label %lor.lhs.false, label %if.then, !dbg !11395

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11396
  %call1 = call i32 @pci_pcie_type(%struct.pci_dev* %1) #9, !dbg !11397
  %cmp = icmp ne i32 %call1, 4, !dbg !11398
  br i1 %cmp, label %if.then, label %if.end, !dbg !11399

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !11400
  br label %return, !dbg !11400

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !11401
  br label %for.cond, !dbg !11403

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !11404
  %conv = sext i32 %2 to i64, !dbg !11404
  %cmp2 = icmp ult i64 %conv, 119, !dbg !11406
  br i1 %cmp2, label %for.body, label %for.end, !dbg !11407

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !11408
  %idxprom = sext i32 %3 to i64, !dbg !11410
  %arrayidx = getelementptr [119 x i16], [119 x i16]* @pci_quirk_intel_pch_acs_ids, i64 0, i64 %idxprom, !dbg !11410
  %4 = load i16, i16* %arrayidx, align 2, !dbg !11410
  %conv4 = zext i16 %4 to i32, !dbg !11410
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11411
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 8, !dbg !11412
  %6 = load i16, i16* %device, align 2, !dbg !11412
  %conv5 = zext i16 %6 to i32, !dbg !11411
  %cmp6 = icmp eq i32 %conv4, %conv5, !dbg !11413
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !11414

if.then8:                                         ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !11415
  br label %return, !dbg !11415

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !11412

for.inc:                                          ; preds = %if.end9
  %7 = load i32, i32* %i, align 4, !dbg !11416
  %inc = add i32 %7, 1, !dbg !11416
  store i32 %inc, i32* %i, align 4, !dbg !11416
  br label %for.cond, !dbg !11417, !llvm.loop !11418

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !11420
  br label %return, !dbg !11420

return:                                           ; preds = %for.end, %if.then8, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !11421
  ret i1 %8, !dbg !11421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_quirk_intel_spt_pch_acs_match(%struct.pci_dev* %dev) #0 !dbg !11422 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11423, metadata !DIExpression()), !dbg !11424
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11425
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #9, !dbg !11427
  br i1 %call, label %lor.lhs.false, label %if.then, !dbg !11428

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11429
  %call1 = call i32 @pci_pcie_type(%struct.pci_dev* %1) #9, !dbg !11430
  %cmp = icmp ne i32 %call1, 4, !dbg !11431
  br i1 %cmp, label %if.then, label %if.end, !dbg !11432

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !11433
  br label %return, !dbg !11433

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11434
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 8, !dbg !11435
  %3 = load i16, i16* %device, align 2, !dbg !11435
  %conv = zext i16 %3 to i32, !dbg !11434
  switch i32 %conv, label %sw.epilog [
    i32 40208, label %sw.bb5
    i32 40209, label %sw.bb5
    i32 40210, label %sw.bb5
    i32 40211, label %sw.bb5
    i32 40212, label %sw.bb5
    i32 40213, label %sw.bb5
    i32 40214, label %sw.bb5
    i32 40215, label %sw.bb5
    i32 40216, label %sw.bb5
    i32 40217, label %sw.bb5
    i32 40218, label %sw.bb5
    i32 40219, label %sw.bb5
    i32 41703, label %sw.bb4
    i32 41704, label %sw.bb4
    i32 41705, label %sw.bb4
    i32 41706, label %sw.bb4
    i32 41707, label %sw.bb4
    i32 41708, label %sw.bb4
    i32 41709, label %sw.bb4
    i32 41710, label %sw.bb4
    i32 41616, label %sw.bb3
    i32 41617, label %sw.bb3
    i32 41618, label %sw.bb3
    i32 41619, label %sw.bb3
    i32 41620, label %sw.bb3
    i32 41621, label %sw.bb3
    i32 41622, label %sw.bb3
    i32 41623, label %sw.bb3
    i32 41624, label %sw.bb3
    i32 41625, label %sw.bb3
    i32 41626, label %sw.bb3
    i32 41627, label %sw.bb3
    i32 41628, label %sw.bb3
    i32 41629, label %sw.bb3
    i32 41630, label %sw.bb3
    i32 41631, label %sw.bb3
    i32 41319, label %sw.bb2
    i32 41320, label %sw.bb2
    i32 41321, label %sw.bb2
    i32 41322, label %sw.bb2
    i32 41232, label %sw.bb
    i32 41233, label %sw.bb
    i32 41234, label %sw.bb
    i32 41235, label %sw.bb
    i32 41236, label %sw.bb
    i32 41237, label %sw.bb
    i32 41238, label %sw.bb
    i32 41239, label %sw.bb
    i32 41240, label %sw.bb
    i32 41241, label %sw.bb
    i32 41242, label %sw.bb
    i32 41243, label %sw.bb
    i32 41244, label %sw.bb
    i32 41245, label %sw.bb
    i32 41246, label %sw.bb
    i32 41247, label %sw.bb
  ], !dbg !11436

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  br label %sw.bb2, !dbg !11437

sw.bb2:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %sw.bb
  br label %sw.bb3, !dbg !11437

sw.bb3:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb2
  br label %sw.bb4, !dbg !11437

sw.bb4:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb3
  br label %sw.bb5, !dbg !11437

sw.bb5:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb4
  store i1 true, i1* %retval, align 1, !dbg !11438
  br label %return, !dbg !11438

sw.epilog:                                        ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !11440
  br label %return, !dbg !11440

return:                                           ; preds = %sw.epilog, %sw.bb5, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !11441
  ret i1 %4, !dbg !11441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_quirk_cavium_acs_match(%struct.pci_dev* %dev) #0 !dbg !11442 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11443, metadata !DIExpression()), !dbg !11444
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11445
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #9, !dbg !11447
  br i1 %call, label %lor.lhs.false, label %if.then, !dbg !11448

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11449
  %call1 = call i32 @pci_pcie_type(%struct.pci_dev* %1) #9, !dbg !11450
  %cmp = icmp ne i32 %call1, 4, !dbg !11451
  br i1 %cmp, label %if.then, label %if.end, !dbg !11452

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !11453
  br label %return, !dbg !11453

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11454
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 8, !dbg !11455
  %3 = load i16, i16* %device, align 2, !dbg !11455
  %conv = zext i16 %3 to i32, !dbg !11454
  switch i32 %conv, label %sw.caserange [
    i32 44932, label %sw.bb2
    i32 47236, label %sw.bb2
  ], !dbg !11456

sw.bb:                                            ; preds = %sw.caserange
  br label %sw.bb2, !dbg !11457

sw.bb2:                                           ; preds = %if.end, %if.end, %sw.bb
  store i1 true, i1* %retval, align 1, !dbg !11458
  br label %return, !dbg !11458

sw.caserange:                                     ; preds = %if.end
  %4 = sub i32 %conv, 40960, !dbg !11458
  %inbounds = icmp ule i32 %4, 2047, !dbg !11458
  br i1 %inbounds, label %sw.bb, label %sw.default, !dbg !11458

sw.default:                                       ; preds = %sw.caserange
  store i1 false, i1* %retval, align 1, !dbg !11460
  br label %return, !dbg !11460

return:                                           ; preds = %sw.default, %sw.bb2, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !11461
  ret i1 %5, !dbg !11461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_enable_intel_pch_acs(%struct.pci_dev* %dev) #0 !dbg !11462 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11463, metadata !DIExpression()), !dbg !11464
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11465
  %call = call zeroext i1 @pci_quirk_intel_pch_acs_match(%struct.pci_dev* %0) #9, !dbg !11467
  br i1 %call, label %if.end, label %if.then, !dbg !11468

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11469
  br label %return, !dbg !11469

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11470
  %call1 = call i32 @pci_quirk_enable_intel_lpc_acs(%struct.pci_dev* %1) #9, !dbg !11472
  %tobool = icmp ne i32 %call1, 0, !dbg !11472
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !11473

if.then2:                                         ; preds = %if.end
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11474
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !11474
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.127, i64 0, i64 0)) #10, !dbg !11474
  store i32 0, i32* %retval, align 4, !dbg !11476
  br label %return, !dbg !11476

if.end4:                                          ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11477
  call void @pci_quirk_enable_intel_rp_mpc_acs(%struct.pci_dev* %3) #9, !dbg !11478
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11479
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 47, !dbg !11480
  %5 = load i16, i16* %dev_flags, align 2, !dbg !11481
  %conv = zext i16 %5 to i32, !dbg !11481
  %or = or i32 %conv, 8, !dbg !11481
  %conv5 = trunc i32 %or to i16, !dbg !11481
  store i16 %conv5, i16* %dev_flags, align 2, !dbg !11481
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11482
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !11482
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev6, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.128, i64 0, i64 0)) #10, !dbg !11482
  store i32 0, i32* %retval, align 4, !dbg !11483
  br label %return, !dbg !11483

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !11484
  ret i32 %7, !dbg !11484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_enable_intel_spt_pch_acs(%struct.pci_dev* %dev) #0 !dbg !11485 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %cap = alloca i32, align 4
  %ctrl = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11486, metadata !DIExpression()), !dbg !11487
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !11488, metadata !DIExpression()), !dbg !11489
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !11490, metadata !DIExpression()), !dbg !11491
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !11492, metadata !DIExpression()), !dbg !11493
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11494
  %call = call zeroext i1 @pci_quirk_intel_spt_pch_acs_match(%struct.pci_dev* %0) #9, !dbg !11496
  br i1 %call, label %if.end, label %if.then, !dbg !11497

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11498
  br label %return, !dbg !11498

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11499
  %acs_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 63, !dbg !11500
  %2 = load i16, i16* %acs_cap, align 4, !dbg !11500
  %conv = zext i16 %2 to i32, !dbg !11499
  store i32 %conv, i32* %pos, align 4, !dbg !11501
  %3 = load i32, i32* %pos, align 4, !dbg !11502
  %tobool = icmp ne i32 %3, 0, !dbg !11502
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !11504

if.then1:                                         ; preds = %if.end
  store i32 -25, i32* %retval, align 4, !dbg !11505
  br label %return, !dbg !11505

if.end2:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11506
  %5 = load i32, i32* %pos, align 4, !dbg !11507
  %add = add i32 %5, 4, !dbg !11508
  %call3 = call i32 @pci_read_config_dword(%struct.pci_dev* %4, i32 %add, i32* %cap) #9, !dbg !11509
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11510
  %7 = load i32, i32* %pos, align 4, !dbg !11511
  %add4 = add i32 %7, 8, !dbg !11512
  %call5 = call i32 @pci_read_config_dword(%struct.pci_dev* %6, i32 %add4, i32* %ctrl) #9, !dbg !11513
  %8 = load i32, i32* %cap, align 4, !dbg !11514
  %and = and i32 %8, 1, !dbg !11515
  %9 = load i32, i32* %ctrl, align 4, !dbg !11516
  %or = or i32 %9, %and, !dbg !11516
  store i32 %or, i32* %ctrl, align 4, !dbg !11516
  %10 = load i32, i32* %cap, align 4, !dbg !11517
  %and6 = and i32 %10, 4, !dbg !11518
  %11 = load i32, i32* %ctrl, align 4, !dbg !11519
  %or7 = or i32 %11, %and6, !dbg !11519
  store i32 %or7, i32* %ctrl, align 4, !dbg !11519
  %12 = load i32, i32* %cap, align 4, !dbg !11520
  %and8 = and i32 %12, 8, !dbg !11521
  %13 = load i32, i32* %ctrl, align 4, !dbg !11522
  %or9 = or i32 %13, %and8, !dbg !11522
  store i32 %or9, i32* %ctrl, align 4, !dbg !11522
  %14 = load i32, i32* %cap, align 4, !dbg !11523
  %and10 = and i32 %14, 16, !dbg !11524
  %15 = load i32, i32* %ctrl, align 4, !dbg !11525
  %or11 = or i32 %15, %and10, !dbg !11525
  store i32 %or11, i32* %ctrl, align 4, !dbg !11525
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11526
  %external_facing = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 46, !dbg !11528
  %17 = bitcast [5 x i8]* %external_facing to i40*, !dbg !11528
  %bf.load = load i40, i40* %17, align 1, !dbg !11528
  %bf.lshr = lshr i40 %bf.load, 28, !dbg !11528
  %bf.clear = and i40 %bf.lshr, 1, !dbg !11528
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !11528
  %tobool12 = icmp ne i32 %bf.cast, 0, !dbg !11526
  br i1 %tobool12, label %if.then18, label %lor.lhs.false, !dbg !11529

lor.lhs.false:                                    ; preds = %if.end2
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11530
  %untrusted = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 46, !dbg !11531
  %19 = bitcast [5 x i8]* %untrusted to i40*, !dbg !11531
  %bf.load13 = load i40, i40* %19, align 1, !dbg !11531
  %bf.lshr14 = lshr i40 %bf.load13, 27, !dbg !11531
  %bf.clear15 = and i40 %bf.lshr14, 1, !dbg !11531
  %bf.cast16 = trunc i40 %bf.clear15 to i32, !dbg !11531
  %tobool17 = icmp ne i32 %bf.cast16, 0, !dbg !11530
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !11532

if.then18:                                        ; preds = %lor.lhs.false, %if.end2
  %20 = load i32, i32* %cap, align 4, !dbg !11533
  %and19 = and i32 %20, 2, !dbg !11534
  %21 = load i32, i32* %ctrl, align 4, !dbg !11535
  %or20 = or i32 %21, %and19, !dbg !11535
  store i32 %or20, i32* %ctrl, align 4, !dbg !11535
  br label %if.end21, !dbg !11536

if.end21:                                         ; preds = %if.then18, %lor.lhs.false
  %22 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11537
  %23 = load i32, i32* %pos, align 4, !dbg !11538
  %add22 = add i32 %23, 8, !dbg !11539
  %24 = load i32, i32* %ctrl, align 4, !dbg !11540
  %call23 = call i32 @pci_write_config_dword(%struct.pci_dev* %22, i32 %add22, i32 %24) #9, !dbg !11541
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11542
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !11542
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.131, i64 0, i64 0)) #10, !dbg !11542
  store i32 0, i32* %retval, align 4, !dbg !11543
  br label %return, !dbg !11543

return:                                           ; preds = %if.end21, %if.then1, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !11544
  ret i32 %26, !dbg !11544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_disable_intel_spt_pch_acs_redir(%struct.pci_dev* %dev) #0 !dbg !11545 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %cap = alloca i32, align 4
  %ctrl = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11546, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !11548, metadata !DIExpression()), !dbg !11549
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !11550, metadata !DIExpression()), !dbg !11551
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !11552, metadata !DIExpression()), !dbg !11553
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11554
  %call = call zeroext i1 @pci_quirk_intel_spt_pch_acs_match(%struct.pci_dev* %0) #9, !dbg !11556
  br i1 %call, label %if.end, label %if.then, !dbg !11557

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11558
  br label %return, !dbg !11558

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11559
  %acs_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 63, !dbg !11560
  %2 = load i16, i16* %acs_cap, align 4, !dbg !11560
  %conv = zext i16 %2 to i32, !dbg !11559
  store i32 %conv, i32* %pos, align 4, !dbg !11561
  %3 = load i32, i32* %pos, align 4, !dbg !11562
  %tobool = icmp ne i32 %3, 0, !dbg !11562
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !11564

if.then1:                                         ; preds = %if.end
  store i32 -25, i32* %retval, align 4, !dbg !11565
  br label %return, !dbg !11565

if.end2:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11566
  %5 = load i32, i32* %pos, align 4, !dbg !11567
  %add = add i32 %5, 4, !dbg !11568
  %call3 = call i32 @pci_read_config_dword(%struct.pci_dev* %4, i32 %add, i32* %cap) #9, !dbg !11569
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11570
  %7 = load i32, i32* %pos, align 4, !dbg !11571
  %add4 = add i32 %7, 8, !dbg !11572
  %call5 = call i32 @pci_read_config_dword(%struct.pci_dev* %6, i32 %add4, i32* %ctrl) #9, !dbg !11573
  %8 = load i32, i32* %ctrl, align 4, !dbg !11574
  %and = and i32 %8, -45, !dbg !11574
  store i32 %and, i32* %ctrl, align 4, !dbg !11574
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11575
  %10 = load i32, i32* %pos, align 4, !dbg !11576
  %add6 = add i32 %10, 8, !dbg !11577
  %11 = load i32, i32* %ctrl, align 4, !dbg !11578
  %call7 = call i32 @pci_write_config_dword(%struct.pci_dev* %9, i32 %add6, i32 %11) #9, !dbg !11579
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11580
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !11580
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.132, i64 0, i64 0)) #10, !dbg !11580
  store i32 0, i32* %retval, align 4, !dbg !11581
  br label %return, !dbg !11581

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !11582
  ret i32 %13, !dbg !11582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_quirk_enable_intel_lpc_acs(%struct.pci_dev* %dev) #0 !dbg !11583 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rcba = alloca i32, align 4
  %bspr = alloca i32, align 4
  %updcr = alloca i32, align 4
  %rcba_mem = alloca i8*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11584, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.declare(metadata i32* %rcba, metadata !11586, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.declare(metadata i32* %bspr, metadata !11588, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.declare(metadata i32* %updcr, metadata !11590, metadata !DIExpression()), !dbg !11591
  call void @llvm.dbg.declare(metadata i8** %rcba_mem, metadata !11592, metadata !DIExpression()), !dbg !11593
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11594
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !11595
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !11595
  %call = call i32 @pci_bus_read_config_dword(%struct.pci_bus* %1, i32 248, i32 240, i32* %rcba) #9, !dbg !11596
  %2 = load i32, i32* %rcba, align 4, !dbg !11597
  %and = and i32 %2, 1, !dbg !11599
  %tobool = icmp ne i32 %and, 0, !dbg !11599
  br i1 %tobool, label %if.end, label %if.then, !dbg !11600

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11601
  br label %return, !dbg !11601

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %rcba, align 4, !dbg !11602
  %and1 = and i32 %3, -16384, !dbg !11603
  %conv = zext i32 %and1 to i64, !dbg !11602
  %call2 = call i8* @ioremap(i64 %conv, i64 8192) #9, !dbg !11604
  store i8* %call2, i8** %rcba_mem, align 8, !dbg !11605
  %4 = load i8*, i8** %rcba_mem, align 8, !dbg !11606
  %tobool3 = icmp ne i8* %4, null, !dbg !11606
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !11608

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !11609
  br label %return, !dbg !11609

if.end5:                                          ; preds = %if.end
  %5 = load i8*, i8** %rcba_mem, align 8, !dbg !11610
  %add.ptr = getelementptr i8, i8* %5, i64 4356, !dbg !11611
  %call6 = call i32 @readl(i8* %add.ptr) #9, !dbg !11612
  store i32 %call6, i32* %bspr, align 4, !dbg !11613
  %6 = load i32, i32* %bspr, align 4, !dbg !11614
  %and7 = and i32 %6, 768, !dbg !11614
  store i32 %and7, i32* %bspr, align 4, !dbg !11614
  %7 = load i32, i32* %bspr, align 4, !dbg !11615
  %cmp = icmp ne i32 %7, 768, !dbg !11617
  br i1 %cmp, label %if.then9, label %if.end19, !dbg !11618

if.then9:                                         ; preds = %if.end5
  %8 = load i8*, i8** %rcba_mem, align 8, !dbg !11619
  %add.ptr10 = getelementptr i8, i8* %8, i64 4116, !dbg !11621
  %call11 = call i32 @readl(i8* %add.ptr10) #9, !dbg !11622
  store i32 %call11, i32* %updcr, align 4, !dbg !11623
  %9 = load i32, i32* %updcr, align 4, !dbg !11624
  %and12 = and i32 %9, 63, !dbg !11626
  %tobool13 = icmp ne i32 %and12, 0, !dbg !11626
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !11627

if.then14:                                        ; preds = %if.then9
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11628
  %dev15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !11628
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev15, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.129, i64 0, i64 0)) #10, !dbg !11628
  %11 = load i32, i32* %updcr, align 4, !dbg !11630
  %and16 = and i32 %11, -64, !dbg !11630
  store i32 %and16, i32* %updcr, align 4, !dbg !11630
  %12 = load i32, i32* %updcr, align 4, !dbg !11631
  %13 = load i8*, i8** %rcba_mem, align 8, !dbg !11632
  %add.ptr17 = getelementptr i8, i8* %13, i64 4116, !dbg !11633
  call void @writel(i32 %12, i8* %add.ptr17) #9, !dbg !11634
  br label %if.end18, !dbg !11635

if.end18:                                         ; preds = %if.then14, %if.then9
  br label %if.end19, !dbg !11636

if.end19:                                         ; preds = %if.end18, %if.end5
  %14 = load i8*, i8** %rcba_mem, align 8, !dbg !11637
  call void @iounmap(i8* %14) #9, !dbg !11638
  store i32 0, i32* %retval, align 4, !dbg !11639
  br label %return, !dbg !11639

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !11640
  ret i32 %15, !dbg !11640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_quirk_enable_intel_rp_mpc_acs(%struct.pci_dev* %dev) #0 !dbg !11641 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %mpc = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11642, metadata !DIExpression()), !dbg !11643
  call void @llvm.dbg.declare(metadata i32* %mpc, metadata !11644, metadata !DIExpression()), !dbg !11645
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11646
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 216, i32* %mpc) #9, !dbg !11647
  %1 = load i32, i32* %mpc, align 4, !dbg !11648
  %and = and i32 %1, 67108864, !dbg !11650
  %tobool = icmp ne i32 %and, 0, !dbg !11650
  br i1 %tobool, label %if.end, label %if.then, !dbg !11651

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11652
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !11652
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.130, i64 0, i64 0)) #10, !dbg !11652
  %3 = load i32, i32* %mpc, align 4, !dbg !11654
  %or = or i32 %3, 67108864, !dbg !11654
  store i32 %or, i32* %mpc, align 4, !dbg !11654
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11655
  %5 = load i32, i32* %mpc, align 4, !dbg !11656
  %conv = trunc i32 %5 to i16, !dbg !11656
  %call2 = call i32 @pci_write_config_word(%struct.pci_dev* %4, i32 216, i16 zeroext %conv) #9, !dbg !11657
  br label %if.end, !dbg !11658

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11659
}

; Function Attrs: noredzone
declare dso_local i32 @pci_bus_read_config_dword(%struct.pci_bus*, i32, i32, i32*) #3

; Function Attrs: noredzone
declare dso_local %struct.pci_cap_saved_state* @pci_find_saved_cap(%struct.pci_dev*, i8 signext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !11660 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11663, metadata !DIExpression()), !dbg !11667
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !11673, metadata !DIExpression()), !dbg !11674
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !11675, metadata !DIExpression()), !dbg !11676
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !11677, metadata !DIExpression()), !dbg !11678
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !11679, metadata !DIExpression()), !dbg !11683
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !11685, metadata !DIExpression()), !dbg !11689
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !11691, metadata !DIExpression()), !dbg !11695
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !11700, metadata !DIExpression()), !dbg !11701
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !11702, metadata !DIExpression()), !dbg !11703
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11704, metadata !DIExpression()), !dbg !11705
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11706, metadata !DIExpression()), !dbg !11707
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !11708, metadata !DIExpression()), !dbg !11709
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11710, metadata !DIExpression()), !dbg !11711
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !11712, metadata !DIExpression()), !dbg !11713
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !11714, metadata !DIExpression()), !dbg !11715
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11716, metadata !DIExpression()), !dbg !11717
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11718, metadata !DIExpression()), !dbg !11719
  %0 = load i64, i64* %size.addr, align 8, !dbg !11720
  %1 = load i32, i32* %flags.addr, align 4, !dbg !11721
  %or = or i32 %1, 256, !dbg !11722
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !11723
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #11, !dbg !11724
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !11725

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11726
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !11727
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11728

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !11729
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !11730
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !11731
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !11732
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11709
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !11733
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11734
  %10 = load i32, i32* %order.i.i, align 4, !dbg !11735
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11736
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11737
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11738
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !11739
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11739
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11739
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11739
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !11739
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11740
  br label %kmalloc.exit, !dbg !11740

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !11741
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11742
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !11742
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11744

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11745
  br label %kmalloc_index.exit.i, !dbg !11745

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11746
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !11748
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11749

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11750
  br label %kmalloc_index.exit.i, !dbg !11750

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11751
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !11753
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11754

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11755
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !11756
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11757

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11758
  br label %kmalloc_index.exit.i, !dbg !11758

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11759
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !11761
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11762

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11763
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !11764
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11765

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11766
  br label %kmalloc_index.exit.i, !dbg !11766

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11767
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !11769
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11770

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11771
  br label %kmalloc_index.exit.i, !dbg !11771

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11772
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !11774
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11775

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11776
  br label %kmalloc_index.exit.i, !dbg !11776

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11777
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !11779
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11780

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11781
  br label %kmalloc_index.exit.i, !dbg !11781

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11782
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !11784
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11785

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11786
  br label %kmalloc_index.exit.i, !dbg !11786

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11787
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !11789
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11790

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11791
  br label %kmalloc_index.exit.i, !dbg !11791

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11792
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !11794
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11795

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11796
  br label %kmalloc_index.exit.i, !dbg !11796

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11797
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !11799
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11800

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11801
  br label %kmalloc_index.exit.i, !dbg !11801

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11802
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !11804
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11805

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11806
  br label %kmalloc_index.exit.i, !dbg !11806

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11807
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !11809
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11810

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11811
  br label %kmalloc_index.exit.i, !dbg !11811

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11812
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !11814
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11815

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11816
  br label %kmalloc_index.exit.i, !dbg !11816

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11817
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !11819
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11820

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11821
  br label %kmalloc_index.exit.i, !dbg !11821

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11822
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !11824
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11825

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11826
  br label %kmalloc_index.exit.i, !dbg !11826

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11827
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !11829
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11830

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11831
  br label %kmalloc_index.exit.i, !dbg !11831

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11832
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !11834
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11835

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11836
  br label %kmalloc_index.exit.i, !dbg !11836

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11837
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !11839
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11840

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11841
  br label %kmalloc_index.exit.i, !dbg !11841

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11842
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !11844
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11845

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11846
  br label %kmalloc_index.exit.i, !dbg !11846

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11847
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !11849
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11850

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11851
  br label %kmalloc_index.exit.i, !dbg !11851

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11852
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !11854
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11855

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11856
  br label %kmalloc_index.exit.i, !dbg !11856

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11857
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !11859
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11860

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11861
  br label %kmalloc_index.exit.i, !dbg !11861

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11862
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !11864
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11865

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11866
  br label %kmalloc_index.exit.i, !dbg !11866

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11867
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !11869
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11870

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11871
  br label %kmalloc_index.exit.i, !dbg !11871

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11872
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !11874
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11875

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11876
  br label %kmalloc_index.exit.i, !dbg !11876

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11877
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !11879
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11880

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11881
  br label %kmalloc_index.exit.i, !dbg !11881

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11882
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !11884
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11885

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11886
  br label %kmalloc_index.exit.i, !dbg !11886

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.133, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !11887, !srcloc !11890
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 156) #11, !dbg !11891, !srcloc !11894
  unreachable, !dbg !11895

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !11896
  store i32 %45, i32* %index.i, align 4, !dbg !11897
  %46 = load i32, i32* %index.i, align 4, !dbg !11898
  %tobool.i = icmp ne i32 %46, 0, !dbg !11898
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11900

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11901
  br label %kmalloc.exit, !dbg !11901

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !11902
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11903
  %and.i.i = and i32 %48, 17, !dbg !11903
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11903
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11903
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11903
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11903
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11905

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11906
  br label %kmalloc_type.exit.i, !dbg !11906

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11907
  %and2.i.i = and i32 %49, 1, !dbg !11908
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11907
  %50 = zext i1 %tobool3.i.i to i64, !dbg !11907
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11907
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11909
  br label %kmalloc_type.exit.i, !dbg !11909

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !11910
  %idxprom.i = zext i32 %51 to i64, !dbg !11911
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11911
  %52 = load i32, i32* %index.i, align 4, !dbg !11912
  %idxprom6.i = zext i32 %52 to i64, !dbg !11911
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11911
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11911
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !11913
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !11914
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11915
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11916
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !11917
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11917
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11917
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11917
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !11917
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11678
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11918
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !11919
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11920
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11921
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !11922
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11923
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !11924
  store i8* %62, i8** %retval.i, align 8, !dbg !11925
  br label %kmalloc.exit, !dbg !11925

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !11926
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !11927
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !11928
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11928
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11928
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11928
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !11928
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11929
  br label %kmalloc.exit, !dbg !11929

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !11930
  ret i8* %65, !dbg !11931
}

; Function Attrs: noredzone
declare dso_local i32 @pcie_capability_read_word(%struct.pci_dev*, i32, i16*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hlist_add_head(%struct.hlist_node* %n, %struct.hlist_head* %h) #0 !dbg !11932 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  %h.addr = alloca %struct.hlist_head*, align 8
  %first = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !11937, metadata !DIExpression()), !dbg !11938
  store %struct.hlist_head* %h, %struct.hlist_head** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %h.addr, metadata !11939, metadata !DIExpression()), !dbg !11940
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %first, metadata !11941, metadata !DIExpression()), !dbg !11942
  %0 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !11943
  %first1 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %0, i32 0, i32 0, !dbg !11944
  %1 = load %struct.hlist_node*, %struct.hlist_node** %first1, align 8, !dbg !11944
  store %struct.hlist_node* %1, %struct.hlist_node** %first, align 8, !dbg !11942
  br label %do.body, !dbg !11945

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !11946

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !11948

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !11946

do.body3:                                         ; preds = %do.end
  %2 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !11950
  %3 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !11950
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %3, i32 0, i32 0, !dbg !11950
  store volatile %struct.hlist_node* %2, %struct.hlist_node** %next, align 8, !dbg !11950
  br label %do.end4, !dbg !11950

do.end4:                                          ; preds = %do.body3
  br label %do.end5, !dbg !11946

do.end5:                                          ; preds = %do.end4
  %4 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !11952
  %tobool = icmp ne %struct.hlist_node* %4, null, !dbg !11952
  br i1 %tobool, label %if.then, label %if.end, !dbg !11954

if.then:                                          ; preds = %do.end5
  br label %do.body6, !dbg !11955

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !11956

do.body7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !11958

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !11956

do.body9:                                         ; preds = %do.end8
  %5 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !11960
  %next10 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %5, i32 0, i32 0, !dbg !11960
  %6 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !11960
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %6, i32 0, i32 1, !dbg !11960
  store volatile %struct.hlist_node** %next10, %struct.hlist_node*** %pprev, align 8, !dbg !11960
  br label %do.end11, !dbg !11960

do.end11:                                         ; preds = %do.body9
  br label %do.end12, !dbg !11956

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !11956

if.end:                                           ; preds = %do.end12, %do.end5
  br label %do.body13, !dbg !11962

do.body13:                                        ; preds = %if.end
  br label %do.body14, !dbg !11963

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !11965

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !11963

do.body16:                                        ; preds = %do.end15
  %7 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !11967
  %8 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !11967
  %first17 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %8, i32 0, i32 0, !dbg !11967
  store volatile %struct.hlist_node* %7, %struct.hlist_node** %first17, align 8, !dbg !11967
  br label %do.end18, !dbg !11967

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !11963

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !11969

do.body20:                                        ; preds = %do.end19
  br label %do.body21, !dbg !11970

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !11972

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !11970

do.body23:                                        ; preds = %do.end22
  %9 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !11974
  %first24 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %9, i32 0, i32 0, !dbg !11974
  %10 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !11974
  %pprev25 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %10, i32 0, i32 1, !dbg !11974
  store volatile %struct.hlist_node** %first24, %struct.hlist_node*** %pprev25, align 8, !dbg !11974
  br label %do.end26, !dbg !11974

do.end26:                                         ; preds = %do.body23
  br label %do.end27, !dbg !11970

do.end27:                                         ; preds = %do.end26
  ret void, !dbg !11976
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !11977 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11981, metadata !DIExpression()), !dbg !11986
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11988, metadata !DIExpression()), !dbg !11989
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11990, metadata !DIExpression()), !dbg !11991
  %0 = load i64, i64* %size.addr, align 8, !dbg !11992
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11994
  br i1 %1, label %if.then, label %if.end447, !dbg !11995

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11996
  %tobool = icmp ne i64 %2, 0, !dbg !11996
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11999

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !12000
  br label %return, !dbg !12000

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !12001
  %cmp = icmp ult i64 %3, 4096, !dbg !12003
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12004

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12005
  br label %return, !dbg !12005

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub = sub i64 %4, 1, !dbg !12006
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !12006
  br i1 %5, label %cond.true, label %cond.false442, !dbg !12006

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub4 = sub i64 %6, 1, !dbg !12006
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !12006
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !12006

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub6 = sub i64 %8, 1, !dbg !12006
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !12006
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !12006

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !12006

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub9 = sub i64 %9, 1, !dbg !12006
  %and = and i64 %sub9, -9223372036854775808, !dbg !12006
  %tobool10 = icmp ne i64 %and, 0, !dbg !12006
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !12006

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !12006

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub13 = sub i64 %10, 1, !dbg !12006
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !12006
  %tobool15 = icmp ne i64 %and14, 0, !dbg !12006
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !12006

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !12006

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub18 = sub i64 %11, 1, !dbg !12006
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !12006
  %tobool20 = icmp ne i64 %and19, 0, !dbg !12006
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !12006

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !12006

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub23 = sub i64 %12, 1, !dbg !12006
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !12006
  %tobool25 = icmp ne i64 %and24, 0, !dbg !12006
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !12006

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !12006

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub28 = sub i64 %13, 1, !dbg !12006
  %and29 = and i64 %sub28, 576460752303423488, !dbg !12006
  %tobool30 = icmp ne i64 %and29, 0, !dbg !12006
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !12006

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !12006

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub33 = sub i64 %14, 1, !dbg !12006
  %and34 = and i64 %sub33, 288230376151711744, !dbg !12006
  %tobool35 = icmp ne i64 %and34, 0, !dbg !12006
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !12006

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !12006

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub38 = sub i64 %15, 1, !dbg !12006
  %and39 = and i64 %sub38, 144115188075855872, !dbg !12006
  %tobool40 = icmp ne i64 %and39, 0, !dbg !12006
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !12006

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !12006

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub43 = sub i64 %16, 1, !dbg !12006
  %and44 = and i64 %sub43, 72057594037927936, !dbg !12006
  %tobool45 = icmp ne i64 %and44, 0, !dbg !12006
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !12006

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !12006

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub48 = sub i64 %17, 1, !dbg !12006
  %and49 = and i64 %sub48, 36028797018963968, !dbg !12006
  %tobool50 = icmp ne i64 %and49, 0, !dbg !12006
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !12006

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !12006

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub53 = sub i64 %18, 1, !dbg !12006
  %and54 = and i64 %sub53, 18014398509481984, !dbg !12006
  %tobool55 = icmp ne i64 %and54, 0, !dbg !12006
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !12006

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !12006

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub58 = sub i64 %19, 1, !dbg !12006
  %and59 = and i64 %sub58, 9007199254740992, !dbg !12006
  %tobool60 = icmp ne i64 %and59, 0, !dbg !12006
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !12006

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !12006

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub63 = sub i64 %20, 1, !dbg !12006
  %and64 = and i64 %sub63, 4503599627370496, !dbg !12006
  %tobool65 = icmp ne i64 %and64, 0, !dbg !12006
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !12006

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !12006

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub68 = sub i64 %21, 1, !dbg !12006
  %and69 = and i64 %sub68, 2251799813685248, !dbg !12006
  %tobool70 = icmp ne i64 %and69, 0, !dbg !12006
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !12006

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !12006

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub73 = sub i64 %22, 1, !dbg !12006
  %and74 = and i64 %sub73, 1125899906842624, !dbg !12006
  %tobool75 = icmp ne i64 %and74, 0, !dbg !12006
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !12006

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !12006

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub78 = sub i64 %23, 1, !dbg !12006
  %and79 = and i64 %sub78, 562949953421312, !dbg !12006
  %tobool80 = icmp ne i64 %and79, 0, !dbg !12006
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !12006

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !12006

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub83 = sub i64 %24, 1, !dbg !12006
  %and84 = and i64 %sub83, 281474976710656, !dbg !12006
  %tobool85 = icmp ne i64 %and84, 0, !dbg !12006
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !12006

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !12006

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub88 = sub i64 %25, 1, !dbg !12006
  %and89 = and i64 %sub88, 140737488355328, !dbg !12006
  %tobool90 = icmp ne i64 %and89, 0, !dbg !12006
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !12006

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !12006

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub93 = sub i64 %26, 1, !dbg !12006
  %and94 = and i64 %sub93, 70368744177664, !dbg !12006
  %tobool95 = icmp ne i64 %and94, 0, !dbg !12006
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !12006

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !12006

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub98 = sub i64 %27, 1, !dbg !12006
  %and99 = and i64 %sub98, 35184372088832, !dbg !12006
  %tobool100 = icmp ne i64 %and99, 0, !dbg !12006
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !12006

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !12006

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub103 = sub i64 %28, 1, !dbg !12006
  %and104 = and i64 %sub103, 17592186044416, !dbg !12006
  %tobool105 = icmp ne i64 %and104, 0, !dbg !12006
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !12006

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !12006

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub108 = sub i64 %29, 1, !dbg !12006
  %and109 = and i64 %sub108, 8796093022208, !dbg !12006
  %tobool110 = icmp ne i64 %and109, 0, !dbg !12006
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !12006

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !12006

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub113 = sub i64 %30, 1, !dbg !12006
  %and114 = and i64 %sub113, 4398046511104, !dbg !12006
  %tobool115 = icmp ne i64 %and114, 0, !dbg !12006
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !12006

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !12006

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub118 = sub i64 %31, 1, !dbg !12006
  %and119 = and i64 %sub118, 2199023255552, !dbg !12006
  %tobool120 = icmp ne i64 %and119, 0, !dbg !12006
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !12006

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !12006

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub123 = sub i64 %32, 1, !dbg !12006
  %and124 = and i64 %sub123, 1099511627776, !dbg !12006
  %tobool125 = icmp ne i64 %and124, 0, !dbg !12006
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !12006

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !12006

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub128 = sub i64 %33, 1, !dbg !12006
  %and129 = and i64 %sub128, 549755813888, !dbg !12006
  %tobool130 = icmp ne i64 %and129, 0, !dbg !12006
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !12006

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !12006

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub133 = sub i64 %34, 1, !dbg !12006
  %and134 = and i64 %sub133, 274877906944, !dbg !12006
  %tobool135 = icmp ne i64 %and134, 0, !dbg !12006
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !12006

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !12006

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub138 = sub i64 %35, 1, !dbg !12006
  %and139 = and i64 %sub138, 137438953472, !dbg !12006
  %tobool140 = icmp ne i64 %and139, 0, !dbg !12006
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !12006

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !12006

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub143 = sub i64 %36, 1, !dbg !12006
  %and144 = and i64 %sub143, 68719476736, !dbg !12006
  %tobool145 = icmp ne i64 %and144, 0, !dbg !12006
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !12006

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !12006

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub148 = sub i64 %37, 1, !dbg !12006
  %and149 = and i64 %sub148, 34359738368, !dbg !12006
  %tobool150 = icmp ne i64 %and149, 0, !dbg !12006
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !12006

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !12006

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub153 = sub i64 %38, 1, !dbg !12006
  %and154 = and i64 %sub153, 17179869184, !dbg !12006
  %tobool155 = icmp ne i64 %and154, 0, !dbg !12006
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !12006

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !12006

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub158 = sub i64 %39, 1, !dbg !12006
  %and159 = and i64 %sub158, 8589934592, !dbg !12006
  %tobool160 = icmp ne i64 %and159, 0, !dbg !12006
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !12006

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !12006

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub163 = sub i64 %40, 1, !dbg !12006
  %and164 = and i64 %sub163, 4294967296, !dbg !12006
  %tobool165 = icmp ne i64 %and164, 0, !dbg !12006
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !12006

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !12006

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub168 = sub i64 %41, 1, !dbg !12006
  %and169 = and i64 %sub168, 2147483648, !dbg !12006
  %tobool170 = icmp ne i64 %and169, 0, !dbg !12006
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !12006

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !12006

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub173 = sub i64 %42, 1, !dbg !12006
  %and174 = and i64 %sub173, 1073741824, !dbg !12006
  %tobool175 = icmp ne i64 %and174, 0, !dbg !12006
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !12006

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !12006

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub178 = sub i64 %43, 1, !dbg !12006
  %and179 = and i64 %sub178, 536870912, !dbg !12006
  %tobool180 = icmp ne i64 %and179, 0, !dbg !12006
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !12006

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !12006

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub183 = sub i64 %44, 1, !dbg !12006
  %and184 = and i64 %sub183, 268435456, !dbg !12006
  %tobool185 = icmp ne i64 %and184, 0, !dbg !12006
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !12006

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !12006

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub188 = sub i64 %45, 1, !dbg !12006
  %and189 = and i64 %sub188, 134217728, !dbg !12006
  %tobool190 = icmp ne i64 %and189, 0, !dbg !12006
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !12006

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !12006

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub193 = sub i64 %46, 1, !dbg !12006
  %and194 = and i64 %sub193, 67108864, !dbg !12006
  %tobool195 = icmp ne i64 %and194, 0, !dbg !12006
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !12006

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !12006

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub198 = sub i64 %47, 1, !dbg !12006
  %and199 = and i64 %sub198, 33554432, !dbg !12006
  %tobool200 = icmp ne i64 %and199, 0, !dbg !12006
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !12006

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !12006

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub203 = sub i64 %48, 1, !dbg !12006
  %and204 = and i64 %sub203, 16777216, !dbg !12006
  %tobool205 = icmp ne i64 %and204, 0, !dbg !12006
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !12006

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !12006

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub208 = sub i64 %49, 1, !dbg !12006
  %and209 = and i64 %sub208, 8388608, !dbg !12006
  %tobool210 = icmp ne i64 %and209, 0, !dbg !12006
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !12006

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !12006

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub213 = sub i64 %50, 1, !dbg !12006
  %and214 = and i64 %sub213, 4194304, !dbg !12006
  %tobool215 = icmp ne i64 %and214, 0, !dbg !12006
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !12006

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !12006

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub218 = sub i64 %51, 1, !dbg !12006
  %and219 = and i64 %sub218, 2097152, !dbg !12006
  %tobool220 = icmp ne i64 %and219, 0, !dbg !12006
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !12006

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !12006

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub223 = sub i64 %52, 1, !dbg !12006
  %and224 = and i64 %sub223, 1048576, !dbg !12006
  %tobool225 = icmp ne i64 %and224, 0, !dbg !12006
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !12006

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !12006

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub228 = sub i64 %53, 1, !dbg !12006
  %and229 = and i64 %sub228, 524288, !dbg !12006
  %tobool230 = icmp ne i64 %and229, 0, !dbg !12006
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !12006

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !12006

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub233 = sub i64 %54, 1, !dbg !12006
  %and234 = and i64 %sub233, 262144, !dbg !12006
  %tobool235 = icmp ne i64 %and234, 0, !dbg !12006
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !12006

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !12006

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub238 = sub i64 %55, 1, !dbg !12006
  %and239 = and i64 %sub238, 131072, !dbg !12006
  %tobool240 = icmp ne i64 %and239, 0, !dbg !12006
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !12006

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !12006

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub243 = sub i64 %56, 1, !dbg !12006
  %and244 = and i64 %sub243, 65536, !dbg !12006
  %tobool245 = icmp ne i64 %and244, 0, !dbg !12006
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !12006

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !12006

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub248 = sub i64 %57, 1, !dbg !12006
  %and249 = and i64 %sub248, 32768, !dbg !12006
  %tobool250 = icmp ne i64 %and249, 0, !dbg !12006
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !12006

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !12006

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub253 = sub i64 %58, 1, !dbg !12006
  %and254 = and i64 %sub253, 16384, !dbg !12006
  %tobool255 = icmp ne i64 %and254, 0, !dbg !12006
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !12006

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !12006

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub258 = sub i64 %59, 1, !dbg !12006
  %and259 = and i64 %sub258, 8192, !dbg !12006
  %tobool260 = icmp ne i64 %and259, 0, !dbg !12006
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !12006

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !12006

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub263 = sub i64 %60, 1, !dbg !12006
  %and264 = and i64 %sub263, 4096, !dbg !12006
  %tobool265 = icmp ne i64 %and264, 0, !dbg !12006
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !12006

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !12006

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub268 = sub i64 %61, 1, !dbg !12006
  %and269 = and i64 %sub268, 2048, !dbg !12006
  %tobool270 = icmp ne i64 %and269, 0, !dbg !12006
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !12006

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !12006

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub273 = sub i64 %62, 1, !dbg !12006
  %and274 = and i64 %sub273, 1024, !dbg !12006
  %tobool275 = icmp ne i64 %and274, 0, !dbg !12006
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !12006

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !12006

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub278 = sub i64 %63, 1, !dbg !12006
  %and279 = and i64 %sub278, 512, !dbg !12006
  %tobool280 = icmp ne i64 %and279, 0, !dbg !12006
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !12006

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !12006

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub283 = sub i64 %64, 1, !dbg !12006
  %and284 = and i64 %sub283, 256, !dbg !12006
  %tobool285 = icmp ne i64 %and284, 0, !dbg !12006
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !12006

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !12006

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub288 = sub i64 %65, 1, !dbg !12006
  %and289 = and i64 %sub288, 128, !dbg !12006
  %tobool290 = icmp ne i64 %and289, 0, !dbg !12006
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !12006

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !12006

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub293 = sub i64 %66, 1, !dbg !12006
  %and294 = and i64 %sub293, 64, !dbg !12006
  %tobool295 = icmp ne i64 %and294, 0, !dbg !12006
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !12006

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !12006

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub298 = sub i64 %67, 1, !dbg !12006
  %and299 = and i64 %sub298, 32, !dbg !12006
  %tobool300 = icmp ne i64 %and299, 0, !dbg !12006
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !12006

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !12006

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub303 = sub i64 %68, 1, !dbg !12006
  %and304 = and i64 %sub303, 16, !dbg !12006
  %tobool305 = icmp ne i64 %and304, 0, !dbg !12006
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !12006

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !12006

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub308 = sub i64 %69, 1, !dbg !12006
  %and309 = and i64 %sub308, 8, !dbg !12006
  %tobool310 = icmp ne i64 %and309, 0, !dbg !12006
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !12006

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !12006

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub313 = sub i64 %70, 1, !dbg !12006
  %and314 = and i64 %sub313, 4, !dbg !12006
  %tobool315 = icmp ne i64 %and314, 0, !dbg !12006
  %71 = zext i1 %tobool315 to i64, !dbg !12006
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !12006
  br label %cond.end, !dbg !12006

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !12006
  br label %cond.end317, !dbg !12006

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !12006
  br label %cond.end319, !dbg !12006

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !12006
  br label %cond.end321, !dbg !12006

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !12006
  br label %cond.end323, !dbg !12006

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !12006
  br label %cond.end325, !dbg !12006

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !12006
  br label %cond.end327, !dbg !12006

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !12006
  br label %cond.end329, !dbg !12006

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !12006
  br label %cond.end331, !dbg !12006

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !12006
  br label %cond.end333, !dbg !12006

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !12006
  br label %cond.end335, !dbg !12006

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !12006
  br label %cond.end337, !dbg !12006

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !12006
  br label %cond.end339, !dbg !12006

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !12006
  br label %cond.end341, !dbg !12006

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !12006
  br label %cond.end343, !dbg !12006

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !12006
  br label %cond.end345, !dbg !12006

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !12006
  br label %cond.end347, !dbg !12006

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !12006
  br label %cond.end349, !dbg !12006

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !12006
  br label %cond.end351, !dbg !12006

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !12006
  br label %cond.end353, !dbg !12006

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !12006
  br label %cond.end355, !dbg !12006

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !12006
  br label %cond.end357, !dbg !12006

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !12006
  br label %cond.end359, !dbg !12006

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !12006
  br label %cond.end361, !dbg !12006

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !12006
  br label %cond.end363, !dbg !12006

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !12006
  br label %cond.end365, !dbg !12006

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !12006
  br label %cond.end367, !dbg !12006

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !12006
  br label %cond.end369, !dbg !12006

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !12006
  br label %cond.end371, !dbg !12006

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !12006
  br label %cond.end373, !dbg !12006

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !12006
  br label %cond.end375, !dbg !12006

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !12006
  br label %cond.end377, !dbg !12006

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !12006
  br label %cond.end379, !dbg !12006

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !12006
  br label %cond.end381, !dbg !12006

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !12006
  br label %cond.end383, !dbg !12006

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !12006
  br label %cond.end385, !dbg !12006

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !12006
  br label %cond.end387, !dbg !12006

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !12006
  br label %cond.end389, !dbg !12006

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !12006
  br label %cond.end391, !dbg !12006

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !12006
  br label %cond.end393, !dbg !12006

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !12006
  br label %cond.end395, !dbg !12006

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !12006
  br label %cond.end397, !dbg !12006

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !12006
  br label %cond.end399, !dbg !12006

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !12006
  br label %cond.end401, !dbg !12006

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !12006
  br label %cond.end403, !dbg !12006

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !12006
  br label %cond.end405, !dbg !12006

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !12006
  br label %cond.end407, !dbg !12006

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !12006
  br label %cond.end409, !dbg !12006

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !12006
  br label %cond.end411, !dbg !12006

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !12006
  br label %cond.end413, !dbg !12006

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !12006
  br label %cond.end415, !dbg !12006

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !12006
  br label %cond.end417, !dbg !12006

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !12006
  br label %cond.end419, !dbg !12006

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !12006
  br label %cond.end421, !dbg !12006

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !12006
  br label %cond.end423, !dbg !12006

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !12006
  br label %cond.end425, !dbg !12006

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !12006
  br label %cond.end427, !dbg !12006

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !12006
  br label %cond.end429, !dbg !12006

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !12006
  br label %cond.end431, !dbg !12006

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !12006
  br label %cond.end433, !dbg !12006

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !12006
  br label %cond.end435, !dbg !12006

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !12006
  br label %cond.end437, !dbg !12006

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !12006
  br label %cond.end440, !dbg !12006

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !12006

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !12006
  br label %cond.end444, !dbg !12006

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub443 = sub i64 %72, 1, !dbg !12006
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !12006
  br label %cond.end444, !dbg !12006

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !12006
  %sub446 = sub i32 %cond445, 12, !dbg !12007
  %add = add i32 %sub446, 1, !dbg !12008
  store i32 %add, i32* %retval, align 4, !dbg !12009
  br label %return, !dbg !12009

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !12010
  %dec = add i64 %73, -1, !dbg !12010
  store i64 %dec, i64* %size.addr, align 8, !dbg !12010
  %74 = load i64, i64* %size.addr, align 8, !dbg !12011
  %shr = lshr i64 %74, 12, !dbg !12011
  store i64 %shr, i64* %size.addr, align 8, !dbg !12011
  %75 = load i64, i64* %size.addr, align 8, !dbg !12012
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11989
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !12013
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !12014
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #15, !dbg !12013, !srcloc !12015
  store i32 %78, i32* %bitpos.i, align 4, !dbg !12013
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !12016
  %add.i = add i32 %79, 1, !dbg !12017
  store i32 %add.i, i32* %retval, align 4, !dbg !12018
  br label %return, !dbg !12018

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !12019
  ret i32 %80, !dbg !12019
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !12020 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11981, metadata !DIExpression()), !dbg !12024
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11988, metadata !DIExpression()), !dbg !12026
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12027, metadata !DIExpression()), !dbg !12028
  %0 = load i64, i64* %n.addr, align 8, !dbg !12029
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !12026
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !12030
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !12031
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #15, !dbg !12030, !srcloc !12015
  store i32 %3, i32* %bitpos.i, align 4, !dbg !12030
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !12032
  %add.i = add i32 %4, 1, !dbg !12033
  %sub = sub i32 %add.i, 1, !dbg !12034
  ret i32 %sub, !dbg !12035
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !12036 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !12040, metadata !DIExpression()), !dbg !12041
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !12042, metadata !DIExpression()), !dbg !12043
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12044, metadata !DIExpression()), !dbg !12045
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12046, metadata !DIExpression()), !dbg !12047
  %0 = load i8*, i8** %object.addr, align 8, !dbg !12048
  ret i8* %0, !dbg !12049
}

; Function Attrs: noredzone
declare dso_local %struct.pci_host_bridge* @pci_find_host_bridge(%struct.pci_bus*) #3

; Function Attrs: noredzone
declare dso_local void @pci_walk_bus(%struct.pci_bus*, i32 (%struct.pci_dev*, i8*)*, i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_configure_extended_tags(%struct.pci_dev*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_create_device_link(%struct.pci_dev* %pdev, i32 %consumer, i32 %supplier, i32 %class, i32 %class_shift) #0 !dbg !12050 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %consumer.addr = alloca i32, align 4
  %supplier.addr = alloca i32, align 4
  %class.addr = alloca i32, align 4
  %class_shift.addr = alloca i32, align 4
  %supplier_pdev = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12053, metadata !DIExpression()), !dbg !12054
  store i32 %consumer, i32* %consumer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %consumer.addr, metadata !12055, metadata !DIExpression()), !dbg !12056
  store i32 %supplier, i32* %supplier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %supplier.addr, metadata !12057, metadata !DIExpression()), !dbg !12058
  store i32 %class, i32* %class.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %class.addr, metadata !12059, metadata !DIExpression()), !dbg !12060
  store i32 %class_shift, i32* %class_shift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %class_shift.addr, metadata !12061, metadata !DIExpression()), !dbg !12062
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %supplier_pdev, metadata !12063, metadata !DIExpression()), !dbg !12064
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12065
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 6, !dbg !12065
  %1 = load i32, i32* %devfn, align 8, !dbg !12065
  %and = and i32 %1, 7, !dbg !12065
  %2 = load i32, i32* %consumer.addr, align 4, !dbg !12067
  %cmp = icmp ne i32 %and, %2, !dbg !12068
  br i1 %cmp, label %if.then, label %if.end, !dbg !12069

if.then:                                          ; preds = %entry
  br label %return, !dbg !12070

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12071
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 1, !dbg !12072
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !12072
  %call = call i32 @pci_domain_nr(%struct.pci_bus* %4) #9, !dbg !12073
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12074
  %bus1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 1, !dbg !12075
  %6 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !12075
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 13, !dbg !12076
  %7 = load i8, i8* %number, align 8, !dbg !12076
  %conv = zext i8 %7 to i32, !dbg !12074
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12077
  %devfn2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 6, !dbg !12077
  %9 = load i32, i32* %devfn2, align 8, !dbg !12077
  %shr = lshr i32 %9, 3, !dbg !12077
  %and3 = and i32 %shr, 31, !dbg !12077
  %and4 = and i32 %and3, 31, !dbg !12077
  %shl = shl i32 %and4, 3, !dbg !12077
  %10 = load i32, i32* %supplier.addr, align 4, !dbg !12077
  %and5 = and i32 %10, 7, !dbg !12077
  %or = or i32 %shl, %and5, !dbg !12077
  %call6 = call %struct.pci_dev* @pci_get_domain_bus_and_slot(i32 %call, i32 %conv, i32 %or) #9, !dbg !12078
  store %struct.pci_dev* %call6, %struct.pci_dev** %supplier_pdev, align 8, !dbg !12079
  %11 = load %struct.pci_dev*, %struct.pci_dev** %supplier_pdev, align 8, !dbg !12080
  %tobool = icmp ne %struct.pci_dev* %11, null, !dbg !12080
  br i1 %tobool, label %lor.lhs.false, label %if.then11, !dbg !12082

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.pci_dev*, %struct.pci_dev** %supplier_pdev, align 8, !dbg !12083
  %class7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 11, !dbg !12084
  %13 = load i32, i32* %class7, align 4, !dbg !12084
  %14 = load i32, i32* %class_shift.addr, align 4, !dbg !12085
  %shr8 = lshr i32 %13, %14, !dbg !12086
  %15 = load i32, i32* %class.addr, align 4, !dbg !12087
  %cmp9 = icmp ne i32 %shr8, %15, !dbg !12088
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !12089

if.then11:                                        ; preds = %lor.lhs.false, %if.end
  %16 = load %struct.pci_dev*, %struct.pci_dev** %supplier_pdev, align 8, !dbg !12090
  call void @pci_dev_put(%struct.pci_dev* %16) #9, !dbg !12092
  br label %return, !dbg !12093

if.end12:                                         ; preds = %lor.lhs.false
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12094
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !12096
  %18 = load %struct.pci_dev*, %struct.pci_dev** %supplier_pdev, align 8, !dbg !12097
  %dev13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !12098
  %call14 = call %struct.device_link* @device_link_add(%struct.device* %dev, %struct.device* %dev13, i32 5) #9, !dbg !12099
  %tobool15 = icmp ne %struct.device_link* %call14, null, !dbg !12099
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !12100

if.then16:                                        ; preds = %if.end12
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12101
  %dev17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !12101
  %20 = load %struct.pci_dev*, %struct.pci_dev** %supplier_pdev, align 8, !dbg !12101
  %call18 = call i8* @pci_name(%struct.pci_dev* %20) #9, !dbg !12101
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev17, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.136, i64 0, i64 0), i8* %call18) #10, !dbg !12101
  br label %if.end21, !dbg !12101

if.else:                                          ; preds = %if.end12
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12102
  %dev19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 41, !dbg !12102
  %22 = load %struct.pci_dev*, %struct.pci_dev** %supplier_pdev, align 8, !dbg !12102
  %call20 = call i8* @pci_name(%struct.pci_dev* %22) #9, !dbg !12102
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev19, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.137, i64 0, i64 0), i8* %call20) #10, !dbg !12102
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then16
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12103
  %dev22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !12104
  call void @pm_runtime_allow(%struct.device* %dev22) #9, !dbg !12105
  %24 = load %struct.pci_dev*, %struct.pci_dev** %supplier_pdev, align 8, !dbg !12106
  call void @pci_dev_put(%struct.pci_dev* %24) #9, !dbg !12107
  br label %return, !dbg !12108

return:                                           ; preds = %if.end21, %if.then11, %if.then
  ret void, !dbg !12108
}

; Function Attrs: noredzone
declare dso_local %struct.device_link* @device_link_add(%struct.device*, %struct.device*, i32) #3

; Function Attrs: noredzone
declare dso_local void @pm_runtime_allow(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local i32 @ioread8(i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @ioread16(i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_reset_bus(%struct.pci_dev*) #3

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone }
attributes #10 = { cold noredzone }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!5877, !5878, !5879, !5880}
!llvm.ident = !{!5881}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pci_apply_fixup_final_quirks", scope: !2, file: !3, line: 97, type: !752, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !271, globals: !4588, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/pci/quirks.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !17, !24, !30, !35, !41, !48, !54, !63, !71, !77, !83, !90, !98, !104, !118, !123, !134, !140, !153, !157, !185, !192, !216, !248, !255, !266}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_fixup_pass", file: !6, line: 1903, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "pci_fixup_early", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "pci_fixup_header", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "pci_fixup_final", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "pci_fixup_enable", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "pci_fixup_resume", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "pci_fixup_suspend", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "pci_fixup_resume_early", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "pci_fixup_suspend_late", value: 7, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !18, line: 15, baseType: !7, size: 32, elements: !19)
!18 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!19 = !{!20, !21, !22, !23}
!20 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!23 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !25, line: 546, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !31, line: 65, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34}
!33 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !36, line: 16, baseType: !7, size: 32, elements: !37)
!36 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!37 = !{!38, !39, !40}
!38 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!41 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !42, line: 59, baseType: !7, size: 32, elements: !43)
!42 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!43 = !{!44, !45, !46, !47}
!44 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!46 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!47 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !49, line: 54, baseType: !7, size: 32, elements: !50)
!49 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!50 = !{!51, !52, !53}
!51 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!52 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !55, line: 296, baseType: !7, size: 32, elements: !56)
!55 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!56 = !{!57, !58, !59, !60, !61, !62}
!57 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!59 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!60 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!61 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!62 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !64, line: 9, baseType: !7, size: 32, elements: !65)
!64 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!65 = !{!66, !67, !68, !69, !70}
!66 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!67 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!68 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!69 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!70 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !72, line: 26, baseType: !7, size: 32, elements: !73)
!72 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!73 = !{!74, !75, !76}
!74 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!75 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !78, line: 44, baseType: !7, size: 32, elements: !79)
!78 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!79 = !{!80, !81, !82}
!80 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!82 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !84, line: 343, baseType: !7, size: 32, elements: !85)
!84 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!85 = !{!86, !87, !88, !89}
!86 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!88 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!89 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!90 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !91, line: 524, baseType: !7, size: 32, elements: !92)
!91 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!92 = !{!93, !94, !95, !96, !97}
!93 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!94 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!95 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!96 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!97 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !91, line: 502, baseType: !7, size: 32, elements: !99)
!99 = !{!100, !101, !102, !103}
!100 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!101 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!102 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!103 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !105, line: 76, baseType: !7, size: 32, elements: !106)
!105 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117}
!107 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!111 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!112 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!113 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!114 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!115 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!116 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!117 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !119, line: 10, baseType: !7, size: 32, elements: !120)
!119 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!120 = !{!121, !122}
!121 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 89, baseType: !7, size: 32, elements: !124)
!124 = !{!125, !126, !127, !128, !129, !130, !131, !132, !133}
!125 = !DIEnumerator(name: "PCI_STD_RESOURCES", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "PCI_STD_RESOURCE_END", value: 5, isUnsigned: true)
!127 = !DIEnumerator(name: "PCI_ROM_RESOURCE", value: 6, isUnsigned: true)
!128 = !DIEnumerator(name: "PCI_IOV_RESOURCES", value: 7, isUnsigned: true)
!129 = !DIEnumerator(name: "PCI_IOV_RESOURCE_END", value: 12, isUnsigned: true)
!130 = !DIEnumerator(name: "PCI_BRIDGE_RESOURCES", value: 13, isUnsigned: true)
!131 = !DIEnumerator(name: "PCI_BRIDGE_RESOURCE_END", value: 16, isUnsigned: true)
!132 = !DIEnumerator(name: "PCI_NUM_RESOURCES", value: 17, isUnsigned: true)
!133 = !DIEnumerator(name: "DEVICE_COUNT_RESOURCE", value: 17, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_bus_flags", file: !6, line: 238, baseType: !7, size: 32, elements: !135)
!135 = !{!136, !137, !138, !139}
!136 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_MSI", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_MMRBC", value: 2, isUnsigned: true)
!138 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_AERSID", value: 4, isUnsigned: true)
!139 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_EXTCFG", value: 8, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_dev_flags", file: !6, line: 207, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152}
!142 = !DIEnumerator(name: "PCI_DEV_FLAGS_MSI_INTX_DISABLE_BUG", value: 1, isUnsigned: true)
!143 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_D3", value: 2, isUnsigned: true)
!144 = !DIEnumerator(name: "PCI_DEV_FLAGS_ASSIGNED", value: 4, isUnsigned: true)
!145 = !DIEnumerator(name: "PCI_DEV_FLAGS_ACS_ENABLED_QUIRK", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "PCI_DEV_FLAG_PCIE_BRIDGE_ALIAS", value: 32, isUnsigned: true)
!147 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_BUS_RESET", value: 64, isUnsigned: true)
!148 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_PM_RESET", value: 128, isUnsigned: true)
!149 = !DIEnumerator(name: "PCI_DEV_FLAGS_VPD_REF_F0", value: 256, isUnsigned: true)
!150 = !DIEnumerator(name: "PCI_DEV_FLAGS_BRIDGE_XLATE_ROOT", value: 512, isUnsigned: true)
!151 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_FLR_RESET", value: 1024, isUnsigned: true)
!152 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_RELAXED_ORDERING", value: 2048, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_irq_reroute_variant", file: !6, line: 232, baseType: !7, size: 32, elements: !154)
!154 = !{!155, !156}
!155 = !DIEnumerator(name: "INTEL_IRQ_REROUTE_VARIANT", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "MAX_IRQ_REROUTE_VARIANTS", value: 3, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmi_field", file: !158, line: 532, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184}
!160 = !DIEnumerator(name: "DMI_NONE", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "DMI_BIOS_VENDOR", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "DMI_BIOS_VERSION", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "DMI_BIOS_DATE", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "DMI_BIOS_RELEASE", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "DMI_EC_FIRMWARE_RELEASE", value: 5, isUnsigned: true)
!166 = !DIEnumerator(name: "DMI_SYS_VENDOR", value: 6, isUnsigned: true)
!167 = !DIEnumerator(name: "DMI_PRODUCT_NAME", value: 7, isUnsigned: true)
!168 = !DIEnumerator(name: "DMI_PRODUCT_VERSION", value: 8, isUnsigned: true)
!169 = !DIEnumerator(name: "DMI_PRODUCT_SERIAL", value: 9, isUnsigned: true)
!170 = !DIEnumerator(name: "DMI_PRODUCT_UUID", value: 10, isUnsigned: true)
!171 = !DIEnumerator(name: "DMI_PRODUCT_SKU", value: 11, isUnsigned: true)
!172 = !DIEnumerator(name: "DMI_PRODUCT_FAMILY", value: 12, isUnsigned: true)
!173 = !DIEnumerator(name: "DMI_BOARD_VENDOR", value: 13, isUnsigned: true)
!174 = !DIEnumerator(name: "DMI_BOARD_NAME", value: 14, isUnsigned: true)
!175 = !DIEnumerator(name: "DMI_BOARD_VERSION", value: 15, isUnsigned: true)
!176 = !DIEnumerator(name: "DMI_BOARD_SERIAL", value: 16, isUnsigned: true)
!177 = !DIEnumerator(name: "DMI_BOARD_ASSET_TAG", value: 17, isUnsigned: true)
!178 = !DIEnumerator(name: "DMI_CHASSIS_VENDOR", value: 18, isUnsigned: true)
!179 = !DIEnumerator(name: "DMI_CHASSIS_TYPE", value: 19, isUnsigned: true)
!180 = !DIEnumerator(name: "DMI_CHASSIS_VERSION", value: 20, isUnsigned: true)
!181 = !DIEnumerator(name: "DMI_CHASSIS_SERIAL", value: 21, isUnsigned: true)
!182 = !DIEnumerator(name: "DMI_CHASSIS_ASSET_TAG", value: 22, isUnsigned: true)
!183 = !DIEnumerator(name: "DMI_STRING_MAX", value: 23, isUnsigned: true)
!184 = !DIEnumerator(name: "DMI_OEM_STRING", value: 24, isUnsigned: true)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pcie_bus_config_types", file: !6, line: 973, baseType: !7, size: 32, elements: !186)
!186 = !{!187, !188, !189, !190, !191}
!187 = !DIEnumerator(name: "PCIE_BUS_TUNE_OFF", value: 0, isUnsigned: true)
!188 = !DIEnumerator(name: "PCIE_BUS_DEFAULT", value: 1, isUnsigned: true)
!189 = !DIEnumerator(name: "PCIE_BUS_SAFE", value: 2, isUnsigned: true)
!190 = !DIEnumerator(name: "PCIE_BUS_PERFORMANCE", value: 3, isUnsigned: true)
!191 = !DIEnumerator(name: "PCIE_BUS_PEER2PEER", value: 4, isUnsigned: true)
!192 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !193, line: 101, baseType: !7, size: 32, elements: !194)
!193 = !DIFile(filename: "./include/linux/nvme.h", directory: "/home/lizy2001/genbc/linux")
!194 = !{!195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215}
!195 = !DIEnumerator(name: "NVME_REG_CAP", value: 0, isUnsigned: true)
!196 = !DIEnumerator(name: "NVME_REG_VS", value: 8, isUnsigned: true)
!197 = !DIEnumerator(name: "NVME_REG_INTMS", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "NVME_REG_INTMC", value: 16, isUnsigned: true)
!199 = !DIEnumerator(name: "NVME_REG_CC", value: 20, isUnsigned: true)
!200 = !DIEnumerator(name: "NVME_REG_CSTS", value: 28, isUnsigned: true)
!201 = !DIEnumerator(name: "NVME_REG_NSSR", value: 32, isUnsigned: true)
!202 = !DIEnumerator(name: "NVME_REG_AQA", value: 36, isUnsigned: true)
!203 = !DIEnumerator(name: "NVME_REG_ASQ", value: 40, isUnsigned: true)
!204 = !DIEnumerator(name: "NVME_REG_ACQ", value: 48, isUnsigned: true)
!205 = !DIEnumerator(name: "NVME_REG_CMBLOC", value: 56, isUnsigned: true)
!206 = !DIEnumerator(name: "NVME_REG_CMBSZ", value: 60, isUnsigned: true)
!207 = !DIEnumerator(name: "NVME_REG_BPINFO", value: 64, isUnsigned: true)
!208 = !DIEnumerator(name: "NVME_REG_BPRSEL", value: 68, isUnsigned: true)
!209 = !DIEnumerator(name: "NVME_REG_BPMBL", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "NVME_REG_PMRCAP", value: 3584, isUnsigned: true)
!211 = !DIEnumerator(name: "NVME_REG_PMRCTL", value: 3588, isUnsigned: true)
!212 = !DIEnumerator(name: "NVME_REG_PMRSTS", value: 3592, isUnsigned: true)
!213 = !DIEnumerator(name: "NVME_REG_PMREBS", value: 3596, isUnsigned: true)
!214 = !DIEnumerator(name: "NVME_REG_PMRSWTP", value: 3600, isUnsigned: true)
!215 = !DIEnumerator(name: "NVME_REG_DBS", value: 4096, isUnsigned: true)
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !193, line: 164, baseType: !7, size: 32, elements: !217)
!217 = !{!218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247}
!218 = !DIEnumerator(name: "NVME_CC_ENABLE", value: 1, isUnsigned: true)
!219 = !DIEnumerator(name: "NVME_CC_EN_SHIFT", value: 0, isUnsigned: true)
!220 = !DIEnumerator(name: "NVME_CC_CSS_SHIFT", value: 4, isUnsigned: true)
!221 = !DIEnumerator(name: "NVME_CC_MPS_SHIFT", value: 7, isUnsigned: true)
!222 = !DIEnumerator(name: "NVME_CC_AMS_SHIFT", value: 11, isUnsigned: true)
!223 = !DIEnumerator(name: "NVME_CC_SHN_SHIFT", value: 14, isUnsigned: true)
!224 = !DIEnumerator(name: "NVME_CC_IOSQES_SHIFT", value: 16, isUnsigned: true)
!225 = !DIEnumerator(name: "NVME_CC_IOCQES_SHIFT", value: 20, isUnsigned: true)
!226 = !DIEnumerator(name: "NVME_CC_CSS_NVM", value: 0, isUnsigned: true)
!227 = !DIEnumerator(name: "NVME_CC_CSS_CSI", value: 96, isUnsigned: true)
!228 = !DIEnumerator(name: "NVME_CC_CSS_MASK", value: 112, isUnsigned: true)
!229 = !DIEnumerator(name: "NVME_CC_AMS_RR", value: 0, isUnsigned: true)
!230 = !DIEnumerator(name: "NVME_CC_AMS_WRRU", value: 2048, isUnsigned: true)
!231 = !DIEnumerator(name: "NVME_CC_AMS_VS", value: 14336, isUnsigned: true)
!232 = !DIEnumerator(name: "NVME_CC_SHN_NONE", value: 0, isUnsigned: true)
!233 = !DIEnumerator(name: "NVME_CC_SHN_NORMAL", value: 16384, isUnsigned: true)
!234 = !DIEnumerator(name: "NVME_CC_SHN_ABRUPT", value: 32768, isUnsigned: true)
!235 = !DIEnumerator(name: "NVME_CC_SHN_MASK", value: 49152, isUnsigned: true)
!236 = !DIEnumerator(name: "NVME_CC_IOSQES", value: 393216, isUnsigned: true)
!237 = !DIEnumerator(name: "NVME_CC_IOCQES", value: 4194304, isUnsigned: true)
!238 = !DIEnumerator(name: "NVME_CAP_CSS_NVM", value: 1, isUnsigned: true)
!239 = !DIEnumerator(name: "NVME_CAP_CSS_CSI", value: 64, isUnsigned: true)
!240 = !DIEnumerator(name: "NVME_CSTS_RDY", value: 1, isUnsigned: true)
!241 = !DIEnumerator(name: "NVME_CSTS_CFS", value: 2, isUnsigned: true)
!242 = !DIEnumerator(name: "NVME_CSTS_NSSRO", value: 16, isUnsigned: true)
!243 = !DIEnumerator(name: "NVME_CSTS_PP", value: 32, isUnsigned: true)
!244 = !DIEnumerator(name: "NVME_CSTS_SHST_NORMAL", value: 0, isUnsigned: true)
!245 = !DIEnumerator(name: "NVME_CSTS_SHST_OCCUR", value: 4, isUnsigned: true)
!246 = !DIEnumerator(name: "NVME_CSTS_SHST_CMPLT", value: 8, isUnsigned: true)
!247 = !DIEnumerator(name: "NVME_CSTS_SHST_MASK", value: 12, isUnsigned: true)
!248 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !249, line: 305, baseType: !7, size: 32, elements: !250)
!249 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!250 = !{!251, !252, !253, !254}
!251 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!252 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!253 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!254 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!255 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !256, line: 29, baseType: !7, size: 32, elements: !257)
!256 = !DIFile(filename: "./include/linux/switchtec.h", directory: "/home/lizy2001/genbc/linux")
!257 = !{!258, !259, !260, !261, !262, !263, !264, !265}
!258 = !DIEnumerator(name: "SWITCHTEC_GAS_MRPC_OFFSET", value: 0, isUnsigned: true)
!259 = !DIEnumerator(name: "SWITCHTEC_GAS_TOP_CFG_OFFSET", value: 4096, isUnsigned: true)
!260 = !DIEnumerator(name: "SWITCHTEC_GAS_SW_EVENT_OFFSET", value: 6144, isUnsigned: true)
!261 = !DIEnumerator(name: "SWITCHTEC_GAS_SYS_INFO_OFFSET", value: 8192, isUnsigned: true)
!262 = !DIEnumerator(name: "SWITCHTEC_GAS_FLASH_INFO_OFFSET", value: 8704, isUnsigned: true)
!263 = !DIEnumerator(name: "SWITCHTEC_GAS_PART_CFG_OFFSET", value: 16384, isUnsigned: true)
!264 = !DIEnumerator(name: "SWITCHTEC_GAS_NTB_OFFSET", value: 65536, isUnsigned: true)
!265 = !DIEnumerator(name: "SWITCHTEC_GAS_PFF_CSR_OFFSET", value: 1261568, isUnsigned: true)
!266 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !256, line: 271, baseType: !7, size: 32, elements: !267)
!267 = !{!268, !269, !270}
!268 = !DIEnumerator(name: "SWITCHTEC_NTB_REG_INFO_OFFSET", value: 0, isUnsigned: true)
!269 = !DIEnumerator(name: "SWITCHTEC_NTB_REG_CTRL_OFFSET", value: 16384, isUnsigned: true)
!270 = !DIEnumerator(name: "SWITCHTEC_NTB_REG_DBMSG_OFFSET", value: 409600, isUnsigned: true)
!271 = !{!272, !277, !278, !280, !281, !282, !283, !345, !3449, !4299, !4175, !4301, !343, !4303, !295, !557, !4583, !4584, !4586}
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !273, line: 19, baseType: !274)
!273 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !275, line: 24, baseType: !276)
!275 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!276 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!277 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !273, line: 21, baseType: !279)
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !275, line: 27, baseType: !7)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!281 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !285, line: 640, size: 48640, elements: !286)
!285 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!286 = !{!287, !293, !296, !297, !308, !309, !310, !311, !312, !313, !314, !315, !319, !353, !364, !474, !475, !476, !487, !488, !490, !491, !2757, !2758, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2835, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2850, !2851, !2852, !2854, !2855, !2856, !2857, !2858, !2859, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2883, !2888, !2889, !2890, !2891, !2892, !2894, !2897, !2900, !2903, !2906, !2909, !3010, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3056, !3057, !3058, !3059, !3060, !3065, !3066, !3067, !3070, !3071, !3074, !3077, !3080, !3081, !3113, !3116, !3117, !3196, !3197, !3200, !3201, !3204, !3205, !3206, !3210, !3211, !3212, !3225, !3226, !3227, !3237, !3242, !3243, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !284, file: !285, line: 646, baseType: !288, size: 128)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !289, line: 56, size: 128, elements: !290)
!289 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!290 = !{!291, !292}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !288, file: !289, line: 57, baseType: !281, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !288, file: !289, line: 58, baseType: !278, size: 32, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !284, file: !285, line: 649, baseType: !294, size: 64, offset: 128)
!294 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !295)
!295 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !284, file: !285, line: 657, baseType: !280, size: 64, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !284, file: !285, line: 658, baseType: !298, size: 32, offset: 256)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !299, line: 113, baseType: !300)
!299 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !299, line: 111, size: 32, elements: !301)
!301 = !{!302}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !300, file: !299, line: 112, baseType: !303, size: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !304, line: 168, baseType: !305)
!304 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 166, size: 32, elements: !306)
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !305, file: !304, line: 167, baseType: !277, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !284, file: !285, line: 660, baseType: !7, size: 32, offset: 288)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !284, file: !285, line: 661, baseType: !7, size: 32, offset: 320)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !284, file: !285, line: 684, baseType: !277, size: 32, offset: 352)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !284, file: !285, line: 686, baseType: !277, size: 32, offset: 384)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !284, file: !285, line: 687, baseType: !277, size: 32, offset: 416)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !284, file: !285, line: 688, baseType: !277, size: 32, offset: 448)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !284, file: !285, line: 689, baseType: !7, size: 32, offset: 480)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !284, file: !285, line: 691, baseType: !316, size: 64, offset: 512)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !318)
!318 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !285, line: 691, flags: DIFlagFwdDecl)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !284, file: !285, line: 692, baseType: !320, size: 832, offset: 576)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !285, line: 451, size: 832, elements: !321)
!321 = !{!322, !327, !335, !341, !342, !346, !347, !348, !349, !350}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !320, file: !285, line: 453, baseType: !323, size: 128)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !285, line: 325, size: 128, elements: !324)
!324 = !{!325, !326}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !323, file: !285, line: 326, baseType: !281, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !323, file: !285, line: 327, baseType: !278, size: 32, offset: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !320, file: !285, line: 454, baseType: !328, size: 192, align: 64, offset: 128)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !329, line: 24, size: 192, align: 64, elements: !330)
!329 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!330 = !{!331, !332, !334}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !328, file: !329, line: 25, baseType: !281, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !328, file: !329, line: 26, baseType: !333, size: 64, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !328, file: !329, line: 27, baseType: !333, size: 64, offset: 128)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !320, file: !285, line: 455, baseType: !336, size: 128, offset: 320)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !304, line: 178, size: 128, elements: !337)
!337 = !{!338, !340}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !336, file: !304, line: 179, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !336, file: !304, line: 179, baseType: !339, size: 64, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !320, file: !285, line: 456, baseType: !7, size: 32, offset: 448)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !320, file: !285, line: 458, baseType: !343, size: 64, offset: 512)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !273, line: 23, baseType: !344)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !275, line: 31, baseType: !345)
!345 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !320, file: !285, line: 459, baseType: !343, size: 64, offset: 576)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !320, file: !285, line: 460, baseType: !343, size: 64, offset: 640)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !320, file: !285, line: 461, baseType: !343, size: 64, offset: 704)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !320, file: !285, line: 463, baseType: !343, size: 64, offset: 768)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !320, file: !285, line: 465, baseType: !351, offset: 832)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !285, line: 415, elements: !352)
!352 = !{}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !284, file: !285, line: 693, baseType: !354, size: 384, offset: 1408)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !285, line: 489, size: 384, elements: !355)
!355 = !{!356, !357, !358, !359, !360, !361, !362}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !354, file: !285, line: 490, baseType: !336, size: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !354, file: !285, line: 491, baseType: !281, size: 64, offset: 128)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !354, file: !285, line: 492, baseType: !281, size: 64, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !354, file: !285, line: 493, baseType: !7, size: 32, offset: 256)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !354, file: !285, line: 494, baseType: !276, size: 16, offset: 288)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !354, file: !285, line: 495, baseType: !276, size: 16, offset: 304)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !354, file: !285, line: 497, baseType: !363, size: 64, offset: 320)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !284, file: !285, line: 697, baseType: !365, size: 1792, offset: 1792)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !285, line: 507, size: 1792, elements: !366)
!366 = !{!367, !368, !369, !370, !371, !372, !373, !377, !378, !379, !380, !381, !382, !383, !471, !472}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !365, file: !285, line: 508, baseType: !328, size: 192, align: 64)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !365, file: !285, line: 515, baseType: !343, size: 64, offset: 192)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !365, file: !285, line: 516, baseType: !343, size: 64, offset: 256)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !365, file: !285, line: 517, baseType: !343, size: 64, offset: 320)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !365, file: !285, line: 518, baseType: !343, size: 64, offset: 384)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !365, file: !285, line: 519, baseType: !343, size: 64, offset: 448)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !365, file: !285, line: 526, baseType: !374, size: 64, offset: 512)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !273, line: 22, baseType: !375)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !275, line: 30, baseType: !376)
!376 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !365, file: !285, line: 527, baseType: !343, size: 64, offset: 576)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !365, file: !285, line: 528, baseType: !7, size: 32, offset: 640)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !365, file: !285, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !365, file: !285, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !365, file: !285, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !365, file: !285, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !365, file: !285, line: 563, baseType: !384, size: 512, offset: 704)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !31, line: 118, size: 512, elements: !385)
!385 = !{!386, !394, !395, !400, !464, !468, !469, !470}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !384, file: !31, line: 119, baseType: !387, size: 256)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !388, line: 9, size: 256, elements: !389)
!388 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!389 = !{!390, !391}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !387, file: !388, line: 10, baseType: !328, size: 192, align: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !387, file: !388, line: 11, baseType: !392, size: 64, offset: 192)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !393, line: 29, baseType: !374)
!393 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!394 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !384, file: !31, line: 120, baseType: !392, size: 64, offset: 256)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !384, file: !31, line: 121, baseType: !396, size: 64, offset: 320)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DISubroutineType(types: !398)
!398 = !{!30, !399}
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !384, file: !31, line: 122, baseType: !401, size: 64, offset: 384)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !31, line: 159, size: 512, align: 512, elements: !403)
!403 = !{!404, !432, !433, !437, !447, !448, !459, !463}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !402, file: !31, line: 160, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !31, line: 214, size: 4608, align: 512, elements: !407)
!407 = !{!408, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !406, file: !31, line: 215, baseType: !409)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !410, line: 29, baseType: !411)
!410 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !410, line: 20, elements: !412)
!412 = !{!413}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !411, file: !410, line: 21, baseType: !414)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !415, line: 25, baseType: !416)
!415 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 25, elements: !352)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !406, file: !31, line: 216, baseType: !7, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !406, file: !31, line: 217, baseType: !7, size: 32, offset: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !406, file: !31, line: 218, baseType: !7, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !406, file: !31, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !406, file: !31, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !406, file: !31, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !406, file: !31, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !406, file: !31, line: 233, baseType: !392, size: 64, offset: 128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !406, file: !31, line: 234, baseType: !399, size: 64, offset: 192)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !406, file: !31, line: 235, baseType: !392, size: 64, offset: 256)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !406, file: !31, line: 236, baseType: !399, size: 64, offset: 320)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !406, file: !31, line: 237, baseType: !429, size: 4096, offset: 512)
!429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 4096, elements: !430)
!430 = !{!431}
!431 = !DISubrange(count: 8)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !402, file: !31, line: 161, baseType: !7, size: 32, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !402, file: !31, line: 162, baseType: !434, size: 32, offset: 96)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !304, line: 27, baseType: !435)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !436, line: 96, baseType: !277)
!436 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!437 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !402, file: !31, line: 163, baseType: !438, size: 32, offset: 128)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !439, line: 276, baseType: !440)
!439 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !439, line: 276, size: 32, elements: !441)
!441 = !{!442}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !440, file: !439, line: 276, baseType: !443, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !439, line: 70, baseType: !444)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !439, line: 65, size: 32, elements: !445)
!445 = !{!446}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !444, file: !439, line: 66, baseType: !7, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !402, file: !31, line: 164, baseType: !399, size: 64, offset: 192)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !402, file: !31, line: 165, baseType: !449, size: 128, offset: 256)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !388, line: 14, size: 128, elements: !450)
!450 = !{!451}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !449, file: !388, line: 15, baseType: !452, size: 128)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !329, line: 125, size: 128, elements: !453)
!453 = !{!454, !458}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !452, file: !329, line: 126, baseType: !455, size: 64)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !329, line: 31, size: 64, elements: !456)
!456 = !{!457}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !455, file: !329, line: 32, baseType: !333, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !452, file: !329, line: 127, baseType: !333, size: 64, offset: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !402, file: !31, line: 166, baseType: !460, size: 64, offset: 384)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DISubroutineType(types: !462)
!462 = !{!392}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !402, file: !31, line: 167, baseType: !392, size: 64, offset: 448)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !384, file: !31, line: 123, baseType: !465, size: 8, offset: 448)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !273, line: 17, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !275, line: 21, baseType: !467)
!467 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !384, file: !31, line: 124, baseType: !465, size: 8, offset: 456)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !384, file: !31, line: 125, baseType: !465, size: 8, offset: 464)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !384, file: !31, line: 126, baseType: !465, size: 8, offset: 472)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !365, file: !285, line: 572, baseType: !384, size: 512, offset: 1216)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !365, file: !285, line: 580, baseType: !473, size: 64, offset: 1728)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !284, file: !285, line: 721, baseType: !7, size: 32, offset: 3584)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !284, file: !285, line: 722, baseType: !277, size: 32, offset: 3616)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !284, file: !285, line: 723, baseType: !477, size: 64, offset: 3648)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !479)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !480, line: 17, baseType: !481)
!480 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !480, line: 17, size: 64, elements: !482)
!482 = !{!483}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !481, file: !480, line: 17, baseType: !484, size: 64)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 64, elements: !485)
!485 = !{!486}
!486 = !DISubrange(count: 1)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !284, file: !285, line: 724, baseType: !479, size: 64, offset: 3712)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !284, file: !285, line: 749, baseType: !489, offset: 3776)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !285, line: 290, elements: !352)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !284, file: !285, line: 751, baseType: !336, size: 128, offset: 3776)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !284, file: !285, line: 757, baseType: !492, size: 64, offset: 3904)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !494, line: 388, size: 7296, elements: !495)
!494 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!495 = !{!496, !2753}
!496 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !494, line: 389, baseType: !497, size: 7296)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !493, file: !494, line: 389, size: 7296, elements: !498)
!498 = !{!499, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2676, !2682, !2685, !2724, !2725, !2737, !2738, !2741, !2742, !2743, !2746, !2747, !2748, !2751, !2752}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !497, file: !494, line: 390, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !494, line: 305, size: 1472, elements: !502)
!502 = !{!503, !504, !505, !506, !507, !508, !509, !510, !518, !519, !524, !525, !528, !2622, !2623, !2624, !2625, !2626}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !501, file: !494, line: 308, baseType: !281, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !501, file: !494, line: 309, baseType: !281, size: 64, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !501, file: !494, line: 313, baseType: !500, size: 64, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !501, file: !494, line: 313, baseType: !500, size: 64, offset: 192)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !501, file: !494, line: 315, baseType: !328, size: 192, align: 64, offset: 256)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !501, file: !494, line: 323, baseType: !281, size: 64, offset: 448)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !501, file: !494, line: 327, baseType: !492, size: 64, offset: 512)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !501, file: !494, line: 333, baseType: !511, size: 64, offset: 576)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !512, line: 284, baseType: !513)
!512 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !512, line: 284, size: 64, elements: !514)
!514 = !{!515}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !513, file: !512, line: 284, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !517, line: 19, baseType: !281)
!517 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!518 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !501, file: !494, line: 334, baseType: !281, size: 64, offset: 640)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !501, file: !494, line: 343, baseType: !520, size: 256, offset: 704)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !501, file: !494, line: 340, size: 256, elements: !521)
!521 = !{!522, !523}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !520, file: !494, line: 341, baseType: !328, size: 192, align: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !520, file: !494, line: 342, baseType: !281, size: 64, offset: 192)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !501, file: !494, line: 351, baseType: !336, size: 128, offset: 960)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !501, file: !494, line: 353, baseType: !526, size: 64, offset: 1088)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !494, line: 353, flags: DIFlagFwdDecl)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !501, file: !494, line: 356, baseType: !529, size: 64, offset: 1152)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !531)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !25, line: 557, size: 832, elements: !532)
!532 = !{!533, !537, !538, !542, !546, !2596, !2600, !2604, !2608, !2609, !2610, !2614, !2618}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !531, file: !25, line: 558, baseType: !534, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DISubroutineType(types: !536)
!536 = !{null, !500}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !531, file: !25, line: 559, baseType: !534, size: 64, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !531, file: !25, line: 560, baseType: !539, size: 64, offset: 128)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DISubroutineType(types: !541)
!541 = !{!277, !500, !281}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !531, file: !25, line: 561, baseType: !543, size: 64, offset: 192)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DISubroutineType(types: !545)
!545 = !{!277, !500}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !531, file: !25, line: 562, baseType: !547, size: 64, offset: 256)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !494, line: 682, baseType: !7)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !25, line: 508, size: 768, elements: !553)
!553 = !{!554, !555, !556, !558, !559, !560, !567, !574, !580, !2590, !2591, !2593, !2595}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !552, file: !25, line: 509, baseType: !500, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !552, file: !25, line: 510, baseType: !7, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !552, file: !25, line: 511, baseType: !557, size: 32, offset: 96)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !304, line: 148, baseType: !7)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !552, file: !25, line: 512, baseType: !281, size: 64, offset: 128)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !552, file: !25, line: 513, baseType: !281, size: 64, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !552, file: !25, line: 514, baseType: !561, size: 64, offset: 256)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !512, line: 385, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 385, size: 64, elements: !564)
!564 = !{!565}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !563, file: !512, line: 385, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !517, line: 15, baseType: !281)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !552, file: !25, line: 516, baseType: !568, size: 64, offset: 320)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !512, line: 359, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 359, size: 64, elements: !571)
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !570, file: !512, line: 359, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !517, line: 16, baseType: !281)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !552, file: !25, line: 519, baseType: !575, size: 64, offset: 384)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !517, line: 21, baseType: !576)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !517, line: 21, size: 64, elements: !577)
!577 = !{!578}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !576, file: !517, line: 21, baseType: !579, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !517, line: 14, baseType: !281)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !552, file: !25, line: 521, baseType: !581, size: 64, offset: 448)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !494, line: 68, size: 512, align: 128, elements: !583)
!583 = !{!584, !585, !2582, !2589}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !582, file: !494, line: 69, baseType: !281, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, scope: !582, file: !494, line: 77, baseType: !586, size: 320, offset: 64)
!586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !582, file: !494, line: 77, size: 320, elements: !587)
!587 = !{!588, !2443, !2448, !2476, !2484, !2490, !2503, !2581}
!588 = !DIDerivedType(tag: DW_TAG_member, scope: !586, file: !494, line: 78, baseType: !589, size: 320)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !586, file: !494, line: 78, size: 320, elements: !590)
!590 = !{!591, !592, !2441, !2442}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !589, file: !494, line: 84, baseType: !336, size: 128)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !589, file: !494, line: 86, baseType: !593, size: 64, offset: 128)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !55, line: 451, size: 1216, align: 64, elements: !595)
!595 = !{!596, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2436, !2437, !2438, !2439, !2440}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !594, file: !55, line: 452, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !55, line: 610, size: 4224, elements: !599)
!599 = !{!600, !602, !603, !611, !618, !619, !1952, !1953, !1954, !1955, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1996, !2004, !2005, !2006, !2330, !2331, !2332, !2333}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !598, file: !55, line: 611, baseType: !601, size: 16)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !304, line: 19, baseType: !276)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !598, file: !55, line: 612, baseType: !276, size: 16, offset: 16)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !598, file: !55, line: 613, baseType: !604, size: 32, offset: 32)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !605, line: 23, baseType: !606)
!605 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !605, line: 21, size: 32, elements: !607)
!607 = !{!608}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !606, file: !605, line: 22, baseType: !609, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !304, line: 32, baseType: !610)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !436, line: 49, baseType: !7)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !598, file: !55, line: 614, baseType: !612, size: 32, offset: 64)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !605, line: 28, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !605, line: 26, size: 32, elements: !614)
!614 = !{!615}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !613, file: !605, line: 27, baseType: !616, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !304, line: 33, baseType: !617)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !436, line: 50, baseType: !7)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !598, file: !55, line: 615, baseType: !7, size: 32, offset: 96)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !598, file: !55, line: 622, baseType: !620, size: 64, offset: 128)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !55, line: 1864, size: 1536, align: 512, elements: !623)
!623 = !{!624, !1312, !1325, !1329, !1335, !1339, !1343, !1347, !1351, !1355, !1359, !1360, !1364, !1368, !1902, !1928, !1932, !1938, !1943, !1947, !1948}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !622, file: !55, line: 1865, baseType: !625, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DISubroutineType(types: !627)
!627 = !{!628, !597, !628, !7}
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !630, line: 89, size: 1536, elements: !631)
!630 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!631 = !{!632, !633, !638, !646, !647, !662, !663, !667, !686, !760, !1296, !1297, !1298, !1304, !1305, !1306}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !629, file: !630, line: 91, baseType: !7, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !629, file: !630, line: 92, baseType: !634, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !439, line: 277, baseType: !635)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !439, line: 277, size: 32, elements: !636)
!636 = !{!637}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !635, file: !439, line: 277, baseType: !443, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !629, file: !630, line: 93, baseType: !639, size: 128, offset: 64)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !640, line: 38, size: 128, elements: !641)
!640 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!641 = !{!642, !644}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !639, file: !640, line: 39, baseType: !643, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !639, file: !640, line: 39, baseType: !645, size: 64, offset: 64)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !629, file: !630, line: 94, baseType: !628, size: 64, offset: 192)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !629, file: !630, line: 95, baseType: !648, size: 128, offset: 256)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !630, line: 47, size: 128, elements: !649)
!649 = !{!650, !659}
!650 = !DIDerivedType(tag: DW_TAG_member, scope: !648, file: !630, line: 48, baseType: !651, size: 64)
!651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !648, file: !630, line: 48, size: 64, elements: !652)
!652 = !{!653, !658}
!653 = !DIDerivedType(tag: DW_TAG_member, scope: !651, file: !630, line: 49, baseType: !654, size: 64)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !651, file: !630, line: 49, size: 64, elements: !655)
!655 = !{!656, !657}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !654, file: !630, line: 50, baseType: !278, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !654, file: !630, line: 50, baseType: !278, size: 32, offset: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !651, file: !630, line: 52, baseType: !343, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !648, file: !630, line: 54, baseType: !660, size: 64, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !467)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !629, file: !630, line: 96, baseType: !597, size: 64, offset: 384)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !629, file: !630, line: 98, baseType: !664, size: 256, offset: 448)
!664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 256, elements: !665)
!665 = !{!666}
!666 = !DISubrange(count: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !629, file: !630, line: 101, baseType: !668, size: 32, offset: 704)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !669, line: 25, size: 32, elements: !670)
!669 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!670 = !{!671}
!671 = !DIDerivedType(tag: DW_TAG_member, scope: !668, file: !669, line: 26, baseType: !672, size: 32)
!672 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !668, file: !669, line: 26, size: 32, elements: !673)
!673 = !{!674}
!674 = !DIDerivedType(tag: DW_TAG_member, scope: !672, file: !669, line: 30, baseType: !675, size: 32)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !672, file: !669, line: 30, size: 32, elements: !676)
!676 = !{!677, !685}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !675, file: !669, line: 31, baseType: !678)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !410, line: 83, baseType: !679)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !410, line: 71, elements: !680)
!680 = !{!681}
!681 = !DIDerivedType(tag: DW_TAG_member, scope: !679, file: !410, line: 72, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !679, file: !410, line: 72, elements: !683)
!683 = !{!684}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !682, file: !410, line: 73, baseType: !411)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !675, file: !669, line: 32, baseType: !277, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !629, file: !630, line: 102, baseType: !687, size: 64, offset: 768)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !689)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !630, line: 135, size: 1024, align: 512, elements: !690)
!690 = !{!691, !695, !696, !703, !712, !716, !720, !724, !725, !729, !734, !746, !754}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !689, file: !630, line: 136, baseType: !692, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{!277, !628, !7}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !689, file: !630, line: 137, baseType: !692, size: 64, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !689, file: !630, line: 138, baseType: !697, size: 64, offset: 128)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DISubroutineType(types: !699)
!699 = !{!277, !700, !702}
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !629)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !689, file: !630, line: 139, baseType: !704, size: 64, offset: 192)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!277, !700, !7, !707, !710}
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !709)
!709 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !648)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !689, file: !630, line: 141, baseType: !713, size: 64, offset: 256)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DISubroutineType(types: !715)
!715 = !{!277, !700}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !689, file: !630, line: 142, baseType: !717, size: 64, offset: 320)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!277, !628}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !689, file: !630, line: 143, baseType: !721, size: 64, offset: 384)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DISubroutineType(types: !723)
!723 = !{null, !628}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !689, file: !630, line: 144, baseType: !721, size: 64, offset: 448)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !689, file: !630, line: 145, baseType: !726, size: 64, offset: 512)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{null, !628, !597}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !689, file: !630, line: 146, baseType: !730, size: 64, offset: 576)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{!733, !628, !733, !277}
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !689, file: !630, line: 147, baseType: !735, size: 64, offset: 640)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DISubroutineType(types: !737)
!737 = !{!738, !740}
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !630, line: 18, flags: DIFlagFwdDecl)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !742, line: 8, size: 128, elements: !743)
!742 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!743 = !{!744, !745}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !741, file: !742, line: 9, baseType: !738, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !741, file: !742, line: 10, baseType: !628, size: 64, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !689, file: !630, line: 148, baseType: !747, size: 64, offset: 704)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{!277, !750, !752}
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !741)
!752 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !304, line: 30, baseType: !753)
!753 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !689, file: !630, line: 149, baseType: !755, size: 64, offset: 768)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DISubroutineType(types: !757)
!757 = !{!628, !628, !758}
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !598)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !629, file: !630, line: 103, baseType: !761, size: 64, offset: 832)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !55, line: 1416, size: 9472, elements: !763)
!763 = !{!764, !765, !768, !769, !770, !773, !825, !907, !1003, !1086, !1090, !1091, !1092, !1093, !1094, !1102, !1103, !1104, !1109, !1113, !1114, !1117, !1120, !1123, !1124, !1125, !1166, !1207, !1208, !1209, !1210, !1211, !1212, !1215, !1217, !1226, !1227, !1229, !1230, !1231, !1232, !1233, !1248, !1249, !1250, !1251, !1254, !1258, !1259, !1262, !1277, !1278, !1279, !1290, !1291, !1292, !1293, !1294, !1295}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !762, file: !55, line: 1417, baseType: !336, size: 128)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !762, file: !55, line: 1418, baseType: !766, size: 32, offset: 128)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !304, line: 16, baseType: !767)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !304, line: 13, baseType: !278)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !762, file: !55, line: 1419, baseType: !467, size: 8, offset: 160)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !762, file: !55, line: 1420, baseType: !281, size: 64, offset: 192)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !762, file: !55, line: 1421, baseType: !771, size: 64, offset: 256)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !304, line: 46, baseType: !772)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !436, line: 88, baseType: !376)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !762, file: !55, line: 1422, baseType: !774, size: 64, offset: 320)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !55, line: 2228, size: 576, elements: !776)
!776 = !{!777, !778, !779, !786, !790, !794, !798, !802, !803, !813, !816, !817, !818, !822, !823, !824}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !775, file: !55, line: 2229, baseType: !707, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !775, file: !55, line: 2230, baseType: !277, size: 32, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !775, file: !55, line: 2238, baseType: !780, size: 64, offset: 128)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!277, !783}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !785, line: 28, flags: DIFlagFwdDecl)
!785 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!786 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !775, file: !55, line: 2239, baseType: !787, size: 64, offset: 192)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !789)
!789 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !55, line: 70, flags: DIFlagFwdDecl)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !775, file: !55, line: 2240, baseType: !791, size: 64, offset: 256)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DISubroutineType(types: !793)
!793 = !{!628, !774, !277, !707, !280}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !775, file: !55, line: 2242, baseType: !795, size: 64, offset: 320)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DISubroutineType(types: !797)
!797 = !{null, !761}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !775, file: !55, line: 2243, baseType: !799, size: 64, offset: 384)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !801, line: 76, flags: DIFlagFwdDecl)
!801 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!802 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !775, file: !55, line: 2244, baseType: !774, size: 64, offset: 448)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !775, file: !55, line: 2245, baseType: !804, size: 64, offset: 512)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !304, line: 182, size: 64, elements: !805)
!805 = !{!806}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !804, file: !304, line: 183, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !304, line: 186, size: 128, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !808, file: !304, line: 187, baseType: !807, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !808, file: !304, line: 187, baseType: !812, size: 64, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !775, file: !55, line: 2247, baseType: !814, offset: 576)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !815, line: 187, elements: !352)
!815 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!816 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !775, file: !55, line: 2248, baseType: !814, offset: 576)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !775, file: !55, line: 2249, baseType: !814, offset: 576)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !775, file: !55, line: 2250, baseType: !819, offset: 576)
!819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !814, elements: !820)
!820 = !{!821}
!821 = !DISubrange(count: 3)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !775, file: !55, line: 2252, baseType: !814, offset: 576)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !775, file: !55, line: 2253, baseType: !814, offset: 576)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !775, file: !55, line: 2254, baseType: !814, offset: 576)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !762, file: !55, line: 1423, baseType: !826, size: 64, offset: 384)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !55, line: 1935, size: 1472, elements: !829)
!829 = !{!830, !834, !838, !839, !843, !849, !853, !854, !855, !859, !863, !864, !865, !866, !872, !877, !878, !884, !885, !886, !887, !891, !906}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !828, file: !55, line: 1936, baseType: !831, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!597, !761}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !828, file: !55, line: 1937, baseType: !835, size: 64, offset: 64)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{null, !597}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !828, file: !55, line: 1938, baseType: !835, size: 64, offset: 128)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !828, file: !55, line: 1940, baseType: !840, size: 64, offset: 192)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{null, !597, !277}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !828, file: !55, line: 1941, baseType: !844, size: 64, offset: 256)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!277, !597, !847}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !25, line: 40, flags: DIFlagFwdDecl)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !828, file: !55, line: 1942, baseType: !850, size: 64, offset: 320)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!277, !597}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !828, file: !55, line: 1943, baseType: !835, size: 64, offset: 384)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !828, file: !55, line: 1944, baseType: !795, size: 64, offset: 448)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !828, file: !55, line: 1945, baseType: !856, size: 64, offset: 512)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DISubroutineType(types: !858)
!858 = !{!277, !761, !277}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !828, file: !55, line: 1946, baseType: !860, size: 64, offset: 576)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DISubroutineType(types: !862)
!862 = !{!277, !761}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !828, file: !55, line: 1947, baseType: !860, size: 64, offset: 640)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !828, file: !55, line: 1948, baseType: !860, size: 64, offset: 704)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !828, file: !55, line: 1949, baseType: !860, size: 64, offset: 768)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !828, file: !55, line: 1950, baseType: !867, size: 64, offset: 832)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!277, !628, !870}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !55, line: 57, flags: DIFlagFwdDecl)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !828, file: !55, line: 1951, baseType: !873, size: 64, offset: 896)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DISubroutineType(types: !875)
!875 = !{!277, !761, !876, !733}
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !828, file: !55, line: 1952, baseType: !795, size: 64, offset: 960)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !828, file: !55, line: 1954, baseType: !879, size: 64, offset: 1024)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!277, !882, !628}
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !512, line: 539, flags: DIFlagFwdDecl)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !828, file: !55, line: 1955, baseType: !879, size: 64, offset: 1088)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !828, file: !55, line: 1956, baseType: !879, size: 64, offset: 1152)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !828, file: !55, line: 1957, baseType: !879, size: 64, offset: 1216)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !828, file: !55, line: 1963, baseType: !888, size: 64, offset: 1280)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{!277, !761, !581, !557}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !828, file: !55, line: 1964, baseType: !892, size: 64, offset: 1344)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!295, !761, !895}
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !897, line: 12, size: 256, elements: !898)
!897 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!898 = !{!899, !900, !901, !902, !903}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !896, file: !897, line: 13, baseType: !557, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !896, file: !897, line: 16, baseType: !277, size: 32, offset: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !896, file: !897, line: 23, baseType: !281, size: 64, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !896, file: !897, line: 30, baseType: !281, size: 64, offset: 128)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !896, file: !897, line: 33, baseType: !904, size: 64, offset: 192)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !494, line: 27, flags: DIFlagFwdDecl)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !828, file: !55, line: 1966, baseType: !892, size: 64, offset: 1408)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !762, file: !55, line: 1424, baseType: !908, size: 64, offset: 448)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !49, line: 322, size: 704, elements: !911)
!911 = !{!912, !972, !976, !980, !981, !982, !983, !984, !989, !994, !998}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !910, file: !49, line: 323, baseType: !913, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!277, !916}
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !49, line: 294, size: 1600, elements: !918)
!918 = !{!919, !920, !921, !922, !923, !936, !937, !938, !939, !955, !956, !957}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !917, file: !49, line: 295, baseType: !808, size: 128)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !917, file: !49, line: 296, baseType: !336, size: 128, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !917, file: !49, line: 297, baseType: !336, size: 128, offset: 256)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !917, file: !49, line: 298, baseType: !336, size: 128, offset: 384)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !917, file: !49, line: 299, baseType: !924, size: 192, offset: 512)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !925, line: 53, size: 192, elements: !926)
!925 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!926 = !{!927, !934, !935}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !924, file: !925, line: 54, baseType: !928, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !929, line: 13, baseType: !930)
!929 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !304, line: 175, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 173, size: 64, elements: !932)
!932 = !{!933}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !931, file: !304, line: 174, baseType: !374, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !924, file: !925, line: 55, baseType: !678, offset: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !924, file: !925, line: 59, baseType: !336, size: 128, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !917, file: !49, line: 300, baseType: !678, offset: 704)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !917, file: !49, line: 301, baseType: !303, size: 32, offset: 704)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !917, file: !49, line: 302, baseType: !761, size: 64, offset: 768)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !917, file: !49, line: 303, baseType: !940, size: 64, offset: 832)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !49, line: 68, size: 64, elements: !941)
!941 = !{!942, !954}
!942 = !DIDerivedType(tag: DW_TAG_member, scope: !940, file: !49, line: 69, baseType: !943, size: 32)
!943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !940, file: !49, line: 69, size: 32, elements: !944)
!944 = !{!945, !946, !947}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !943, file: !49, line: 70, baseType: !604, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !943, file: !49, line: 71, baseType: !612, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !943, file: !49, line: 72, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !949, line: 24, baseType: !950)
!949 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !949, line: 22, size: 32, elements: !951)
!951 = !{!952}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !950, file: !949, line: 23, baseType: !953, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !949, line: 20, baseType: !610)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !940, file: !49, line: 74, baseType: !48, size: 32, offset: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !917, file: !49, line: 304, baseType: !771, size: 64, offset: 896)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !917, file: !49, line: 305, baseType: !281, size: 64, offset: 960)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !917, file: !49, line: 306, baseType: !958, size: 576, offset: 1024)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !49, line: 205, size: 576, elements: !959)
!959 = !{!960, !962, !963, !964, !965, !966, !967, !968, !971}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !958, file: !49, line: 206, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !49, line: 66, baseType: !376)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !958, file: !49, line: 207, baseType: !961, size: 64, offset: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !958, file: !49, line: 208, baseType: !961, size: 64, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !958, file: !49, line: 209, baseType: !961, size: 64, offset: 192)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !958, file: !49, line: 210, baseType: !961, size: 64, offset: 256)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !958, file: !49, line: 211, baseType: !961, size: 64, offset: 320)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !958, file: !49, line: 212, baseType: !961, size: 64, offset: 384)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !958, file: !49, line: 213, baseType: !969, size: 64, offset: 448)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !970, line: 8, baseType: !375)
!970 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!971 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !958, file: !49, line: 214, baseType: !969, size: 64, offset: 512)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !910, file: !49, line: 324, baseType: !973, size: 64, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{!916, !761, !277}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !910, file: !49, line: 325, baseType: !977, size: 64, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !916}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !910, file: !49, line: 326, baseType: !913, size: 64, offset: 192)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !910, file: !49, line: 327, baseType: !913, size: 64, offset: 256)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !910, file: !49, line: 328, baseType: !913, size: 64, offset: 320)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !910, file: !49, line: 329, baseType: !856, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !910, file: !49, line: 332, baseType: !985, size: 64, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{!988, !597}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !910, file: !49, line: 333, baseType: !990, size: 64, offset: 512)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DISubroutineType(types: !992)
!992 = !{!277, !597, !993}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !910, file: !49, line: 335, baseType: !995, size: 64, offset: 576)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!277, !597, !988}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !910, file: !49, line: 337, baseType: !999, size: 64, offset: 640)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!277, !761, !1002}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !762, file: !55, line: 1425, baseType: !1004, size: 64, offset: 512)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !49, line: 428, size: 704, elements: !1007)
!1007 = !{!1008, !1012, !1013, !1017, !1018, !1019, !1034, !1057, !1061, !1062, !1085}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !1006, file: !49, line: 429, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!277, !761, !277, !277, !750}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !1006, file: !49, line: 430, baseType: !856, size: 64, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !1006, file: !49, line: 431, baseType: !1014, size: 64, offset: 128)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!277, !761, !7}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !1006, file: !49, line: 432, baseType: !1014, size: 64, offset: 192)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !1006, file: !49, line: 433, baseType: !856, size: 64, offset: 256)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !1006, file: !49, line: 434, baseType: !1020, size: 64, offset: 320)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!277, !761, !277, !1023}
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !49, line: 415, size: 256, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !1024, file: !49, line: 416, baseType: !277, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1024, file: !49, line: 417, baseType: !7, size: 32, offset: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !1024, file: !49, line: 418, baseType: !7, size: 32, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !1024, file: !49, line: 420, baseType: !7, size: 32, offset: 96)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !1024, file: !49, line: 421, baseType: !7, size: 32, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !1024, file: !49, line: 422, baseType: !7, size: 32, offset: 160)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !1024, file: !49, line: 423, baseType: !7, size: 32, offset: 192)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !1024, file: !49, line: 424, baseType: !7, size: 32, offset: 224)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !1006, file: !49, line: 435, baseType: !1035, size: 64, offset: 384)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!277, !761, !940, !1038}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !49, line: 343, size: 960, elements: !1040)
!1040 = !{!1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !1039, file: !49, line: 344, baseType: !277, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !1039, file: !49, line: 345, baseType: !343, size: 64, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !1039, file: !49, line: 346, baseType: !343, size: 64, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !1039, file: !49, line: 347, baseType: !343, size: 64, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !1039, file: !49, line: 348, baseType: !343, size: 64, offset: 256)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !1039, file: !49, line: 349, baseType: !343, size: 64, offset: 320)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !1039, file: !49, line: 350, baseType: !343, size: 64, offset: 384)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !1039, file: !49, line: 351, baseType: !374, size: 64, offset: 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !1039, file: !49, line: 353, baseType: !374, size: 64, offset: 512)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !1039, file: !49, line: 354, baseType: !277, size: 32, offset: 576)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !1039, file: !49, line: 355, baseType: !277, size: 32, offset: 608)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !1039, file: !49, line: 356, baseType: !343, size: 64, offset: 640)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !1039, file: !49, line: 357, baseType: !343, size: 64, offset: 704)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !1039, file: !49, line: 358, baseType: !343, size: 64, offset: 768)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !1039, file: !49, line: 359, baseType: !374, size: 64, offset: 832)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !1039, file: !49, line: 360, baseType: !277, size: 32, offset: 896)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !1006, file: !49, line: 436, baseType: !1058, size: 64, offset: 448)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!277, !761, !1002, !1038}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !1006, file: !49, line: 438, baseType: !1035, size: 64, offset: 512)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !1006, file: !49, line: 439, baseType: !1063, size: 64, offset: 576)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!277, !761, !1066}
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !49, line: 409, size: 1408, elements: !1068)
!1068 = !{!1069, !1070}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !1067, file: !49, line: 410, baseType: !7, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !1067, file: !49, line: 411, baseType: !1071, size: 1344, offset: 64)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, size: 1344, elements: !820)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !49, line: 395, size: 448, elements: !1073)
!1073 = !{!1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1084}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1072, file: !49, line: 396, baseType: !7, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !1072, file: !49, line: 397, baseType: !7, size: 32, offset: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !1072, file: !49, line: 399, baseType: !7, size: 32, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !1072, file: !49, line: 400, baseType: !7, size: 32, offset: 96)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !1072, file: !49, line: 401, baseType: !7, size: 32, offset: 128)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !1072, file: !49, line: 402, baseType: !7, size: 32, offset: 160)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !1072, file: !49, line: 403, baseType: !7, size: 32, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1072, file: !49, line: 404, baseType: !345, size: 64, offset: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1072, file: !49, line: 405, baseType: !1083, size: 64, offset: 320)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !304, line: 126, baseType: !343)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !1072, file: !49, line: 406, baseType: !1083, size: 64, offset: 384)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !1006, file: !49, line: 440, baseType: !1014, size: 64, offset: 640)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !762, file: !55, line: 1426, baseType: !1087, size: 64, offset: 576)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !55, line: 49, flags: DIFlagFwdDecl)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !762, file: !55, line: 1427, baseType: !281, size: 64, offset: 640)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !762, file: !55, line: 1428, baseType: !281, size: 64, offset: 704)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !762, file: !55, line: 1429, baseType: !281, size: 64, offset: 768)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !762, file: !55, line: 1430, baseType: !628, size: 64, offset: 832)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !762, file: !55, line: 1431, baseType: !1095, size: 256, offset: 896)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1096, line: 35, size: 256, elements: !1097)
!1096 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1097 = !{!1098, !1099, !1100, !1101}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1095, file: !1096, line: 36, baseType: !928, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1095, file: !1096, line: 42, baseType: !928, size: 64, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1095, file: !1096, line: 46, baseType: !409, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1095, file: !1096, line: 47, baseType: !336, size: 128, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !762, file: !55, line: 1432, baseType: !277, size: 32, offset: 1152)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !762, file: !55, line: 1433, baseType: !303, size: 32, offset: 1184)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !762, file: !55, line: 1437, baseType: !1105, size: 64, offset: 1216)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !55, line: 1437, flags: DIFlagFwdDecl)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !762, file: !55, line: 1449, baseType: !1110, size: 64, offset: 1280)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !640, line: 34, size: 64, elements: !1111)
!1111 = !{!1112}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1110, file: !640, line: 35, baseType: !643, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !762, file: !55, line: 1450, baseType: !336, size: 128, offset: 1344)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !762, file: !55, line: 1451, baseType: !1115, size: 64, offset: 1472)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !55, line: 699, flags: DIFlagFwdDecl)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !762, file: !55, line: 1452, baseType: !1118, size: 64, offset: 1536)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !285, line: 40, flags: DIFlagFwdDecl)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !762, file: !55, line: 1453, baseType: !1121, size: 64, offset: 1600)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !55, line: 1453, flags: DIFlagFwdDecl)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !762, file: !55, line: 1454, baseType: !808, size: 128, offset: 1664)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !762, file: !55, line: 1455, baseType: !7, size: 32, offset: 1792)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !762, file: !55, line: 1456, baseType: !1126, size: 2432, offset: 1856)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !49, line: 518, size: 2432, elements: !1127)
!1127 = !{!1128, !1129, !1130, !1132, !1164}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1126, file: !49, line: 519, baseType: !7, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !1126, file: !49, line: 520, baseType: !1095, size: 256, offset: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1126, file: !49, line: 521, baseType: !1131, size: 192, offset: 320)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !597, size: 192, elements: !820)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1126, file: !49, line: 522, baseType: !1133, size: 1728, offset: 512)
!1133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 1728, elements: !820)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !49, line: 222, size: 576, elements: !1135)
!1135 = !{!1136, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !1134, file: !49, line: 223, baseType: !1137, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !49, line: 443, size: 256, elements: !1139)
!1139 = !{!1140, !1141, !1154, !1155}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !1138, file: !49, line: 444, baseType: !277, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !1138, file: !49, line: 445, baseType: !1142, size: 64, offset: 64)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1144)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !49, line: 310, size: 512, elements: !1145)
!1145 = !{!1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !1144, file: !49, line: 311, baseType: !856, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !1144, file: !49, line: 312, baseType: !856, size: 64, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !1144, file: !49, line: 313, baseType: !856, size: 64, offset: 128)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !1144, file: !49, line: 314, baseType: !856, size: 64, offset: 192)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !1144, file: !49, line: 315, baseType: !913, size: 64, offset: 256)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !1144, file: !49, line: 316, baseType: !913, size: 64, offset: 320)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !1144, file: !49, line: 317, baseType: !913, size: 64, offset: 384)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1144, file: !49, line: 318, baseType: !999, size: 64, offset: 448)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !1138, file: !49, line: 446, baseType: !799, size: 64, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !1138, file: !49, line: 447, baseType: !1137, size: 64, offset: 192)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !1134, file: !49, line: 224, baseType: !277, size: 32, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !1134, file: !49, line: 226, baseType: !336, size: 128, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !1134, file: !49, line: 227, baseType: !281, size: 64, offset: 256)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !1134, file: !49, line: 228, baseType: !7, size: 32, offset: 320)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !1134, file: !49, line: 229, baseType: !7, size: 32, offset: 352)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !1134, file: !49, line: 230, baseType: !961, size: 64, offset: 384)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !1134, file: !49, line: 231, baseType: !961, size: 64, offset: 448)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !1134, file: !49, line: 232, baseType: !280, size: 64, offset: 512)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1126, file: !49, line: 523, baseType: !1165, size: 192, offset: 2240)
!1165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1142, size: 192, elements: !820)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !762, file: !55, line: 1458, baseType: !1167, size: 2112, offset: 4288)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !55, line: 1410, size: 2112, elements: !1168)
!1168 = !{!1169, !1170, !1177}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1167, file: !55, line: 1411, baseType: !277, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !1167, file: !55, line: 1412, baseType: !1171, size: 128, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1172, line: 40, baseType: !1173)
!1172 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1172, line: 36, size: 128, elements: !1174)
!1174 = !{!1175, !1176}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1173, file: !1172, line: 37, baseType: !678)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1173, file: !1172, line: 38, baseType: !336, size: 128)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !1167, file: !55, line: 1413, baseType: !1178, size: 1920, offset: 192)
!1178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1179, size: 1920, elements: !820)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !1180, line: 12, size: 640, elements: !1181)
!1180 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1181 = !{!1182, !1198, !1200, !1205, !1206}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !1179, file: !1180, line: 13, baseType: !1183, size: 320)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !1184, line: 17, size: 320, elements: !1185)
!1184 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!1185 = !{!1186, !1187, !1188, !1189}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !1183, file: !1184, line: 18, baseType: !277, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !1183, file: !1184, line: 19, baseType: !277, size: 32, offset: 32)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !1183, file: !1184, line: 20, baseType: !1171, size: 128, offset: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !1183, file: !1184, line: 22, baseType: !1190, size: 128, align: 64, offset: 192)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !304, line: 216, size: 128, align: 64, elements: !1191)
!1191 = !{!1192, !1194}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1190, file: !304, line: 217, baseType: !1193, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1190, file: !304, line: 218, baseType: !1195, size: 64, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{null, !1193}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !1179, file: !1180, line: 14, baseType: !1199, size: 64, offset: 320)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !1179, file: !1180, line: 15, baseType: !1201, size: 64, offset: 384)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !1202, line: 16, size: 64, elements: !1203)
!1202 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!1203 = !{!1204}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1201, file: !1202, line: 17, baseType: !283, size: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !1179, file: !1180, line: 16, baseType: !1171, size: 128, offset: 448)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1179, file: !1180, line: 17, baseType: !303, size: 32, offset: 576)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !762, file: !55, line: 1465, baseType: !280, size: 64, offset: 6400)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !762, file: !55, line: 1468, baseType: !278, size: 32, offset: 6464)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !762, file: !55, line: 1470, baseType: !969, size: 64, offset: 6528)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !762, file: !55, line: 1471, baseType: !969, size: 64, offset: 6592)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !762, file: !55, line: 1473, baseType: !279, size: 32, offset: 6656)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !762, file: !55, line: 1474, baseType: !1213, size: 64, offset: 6720)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !55, line: 603, flags: DIFlagFwdDecl)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !762, file: !55, line: 1477, baseType: !1216, size: 256, offset: 6784)
!1216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 256, elements: !665)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !762, file: !55, line: 1478, baseType: !1218, size: 128, offset: 7040)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !1219, line: 18, baseType: !1220)
!1219 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1219, line: 16, size: 128, elements: !1221)
!1221 = !{!1222}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1220, file: !1219, line: 17, baseType: !1223, size: 128)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 128, elements: !1224)
!1224 = !{!1225}
!1225 = !DISubrange(count: 16)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !762, file: !55, line: 1480, baseType: !7, size: 32, offset: 7168)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !762, file: !55, line: 1481, baseType: !1228, size: 32, offset: 7200)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !304, line: 150, baseType: !7)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !762, file: !55, line: 1487, baseType: !924, size: 192, offset: 7232)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !762, file: !55, line: 1493, baseType: !707, size: 64, offset: 7424)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !762, file: !55, line: 1495, baseType: !687, size: 64, offset: 7488)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !762, file: !55, line: 1500, baseType: !277, size: 32, offset: 7552)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !762, file: !55, line: 1502, baseType: !1234, size: 448, offset: 7616)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !897, line: 60, size: 448, elements: !1235)
!1235 = !{!1236, !1241, !1242, !1243, !1244, !1245, !1246}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !1234, file: !897, line: 61, baseType: !1237, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!281, !1240, !895}
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !1234, file: !897, line: 63, baseType: !1237, size: 64, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1234, file: !897, line: 66, baseType: !295, size: 64, offset: 128)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !1234, file: !897, line: 67, baseType: !277, size: 32, offset: 192)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1234, file: !897, line: 68, baseType: !7, size: 32, offset: 224)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1234, file: !897, line: 71, baseType: !336, size: 128, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !1234, file: !897, line: 77, baseType: !1247, size: 64, offset: 384)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !762, file: !55, line: 1505, baseType: !928, size: 64, offset: 8064)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !762, file: !55, line: 1508, baseType: !928, size: 64, offset: 8128)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !762, file: !55, line: 1511, baseType: !277, size: 32, offset: 8192)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !762, file: !55, line: 1514, baseType: !1252, size: 32, offset: 8224)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1253, line: 8, baseType: !278)
!1253 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !762, file: !55, line: 1517, baseType: !1255, size: 64, offset: 8256)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1257, line: 18, flags: DIFlagFwdDecl)
!1257 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !762, file: !55, line: 1518, baseType: !804, size: 64, offset: 8320)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !762, file: !55, line: 1525, baseType: !1260, size: 64, offset: 8384)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !494, line: 516, flags: DIFlagFwdDecl)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !762, file: !55, line: 1532, baseType: !1263, size: 64, offset: 8448)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !1264, line: 52, size: 64, elements: !1265)
!1264 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!1265 = !{!1266}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1263, file: !1264, line: 53, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !1264, line: 40, size: 256, elements: !1269)
!1269 = !{!1270, !1271, !1276}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1268, file: !1264, line: 42, baseType: !678)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1268, file: !1264, line: 44, baseType: !1272, size: 192)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !1264, line: 28, size: 192, elements: !1273)
!1273 = !{!1274, !1275}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1272, file: !1264, line: 29, baseType: !336, size: 128)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !1272, file: !1264, line: 31, baseType: !295, size: 64, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !1268, file: !1264, line: 49, baseType: !295, size: 64, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !762, file: !55, line: 1533, baseType: !1263, size: 64, offset: 8512)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !762, file: !55, line: 1534, baseType: !1190, size: 128, align: 64, offset: 8576)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !762, file: !55, line: 1535, baseType: !1280, size: 256, offset: 8704)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1257, line: 102, size: 256, elements: !1281)
!1281 = !{!1282, !1283, !1284}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1280, file: !1257, line: 103, baseType: !928, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1280, file: !1257, line: 104, baseType: !336, size: 128, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1280, file: !1257, line: 105, baseType: !1285, size: 64, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1257, line: 21, baseType: !1286)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{null, !1289}
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !762, file: !55, line: 1537, baseType: !924, size: 192, offset: 8960)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !762, file: !55, line: 1542, baseType: !277, size: 32, offset: 9152)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !762, file: !55, line: 1545, baseType: !678, offset: 9184)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !762, file: !55, line: 1546, baseType: !336, size: 128, offset: 9216)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !762, file: !55, line: 1548, baseType: !678, offset: 9344)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !762, file: !55, line: 1549, baseType: !336, size: 128, offset: 9344)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !629, file: !630, line: 104, baseType: !281, size: 64, offset: 896)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !629, file: !630, line: 105, baseType: !280, size: 64, offset: 960)
!1298 = !DIDerivedType(tag: DW_TAG_member, scope: !629, file: !630, line: 107, baseType: !1299, size: 128, offset: 1024)
!1299 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !629, file: !630, line: 107, size: 128, elements: !1300)
!1300 = !{!1301, !1302}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !1299, file: !630, line: 108, baseType: !336, size: 128)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !1299, file: !630, line: 109, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !629, file: !630, line: 111, baseType: !336, size: 128, offset: 1152)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !629, file: !630, line: 112, baseType: !336, size: 128, offset: 1280)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !629, file: !630, line: 120, baseType: !1307, size: 128, offset: 1408)
!1307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !629, file: !630, line: 116, size: 128, elements: !1308)
!1308 = !{!1309, !1310, !1311}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !1307, file: !630, line: 117, baseType: !808, size: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !1307, file: !630, line: 118, baseType: !639, size: 128)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !1307, file: !630, line: 119, baseType: !1190, size: 128, align: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !622, file: !55, line: 1866, baseType: !1313, size: 64, offset: 64)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!707, !628, !597, !1316}
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1318, line: 10, size: 128, elements: !1319)
!1318 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1319 = !{!1320, !1324}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1317, file: !1318, line: 11, baseType: !1321, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{null, !280}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1317, file: !1318, line: 12, baseType: !280, size: 64, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !622, file: !55, line: 1867, baseType: !1326, size: 64, offset: 128)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!277, !597, !277}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !622, file: !55, line: 1868, baseType: !1330, size: 64, offset: 192)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!1333, !597, !277}
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !55, line: 581, flags: DIFlagFwdDecl)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !622, file: !55, line: 1870, baseType: !1336, size: 64, offset: 256)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!277, !628, !733, !277}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !622, file: !55, line: 1872, baseType: !1340, size: 64, offset: 320)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!277, !597, !628, !601, !752}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !622, file: !55, line: 1873, baseType: !1344, size: 64, offset: 384)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!277, !628, !597, !628}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !622, file: !55, line: 1874, baseType: !1348, size: 64, offset: 448)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!277, !597, !628}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !622, file: !55, line: 1875, baseType: !1352, size: 64, offset: 512)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!277, !597, !628, !707}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !622, file: !55, line: 1876, baseType: !1356, size: 64, offset: 576)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!277, !597, !628, !601}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !622, file: !55, line: 1877, baseType: !1348, size: 64, offset: 640)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !622, file: !55, line: 1878, baseType: !1361, size: 64, offset: 704)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{!277, !597, !628, !601, !766}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !622, file: !55, line: 1879, baseType: !1365, size: 64, offset: 768)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!277, !597, !628, !597, !628, !7}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !622, file: !55, line: 1881, baseType: !1369, size: 64, offset: 832)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!277, !628, !1372}
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !55, line: 219, size: 640, elements: !1374)
!1374 = !{!1375, !1376, !1377, !1378, !1379, !1380, !1385, !1386, !1387}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1373, file: !55, line: 220, baseType: !7, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1373, file: !55, line: 221, baseType: !601, size: 16, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1373, file: !55, line: 222, baseType: !604, size: 32, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1373, file: !55, line: 223, baseType: !612, size: 32, offset: 96)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1373, file: !55, line: 224, baseType: !771, size: 64, offset: 128)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1373, file: !55, line: 225, baseType: !1381, size: 128, offset: 192)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !970, line: 13, size: 128, elements: !1382)
!1382 = !{!1383, !1384}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1381, file: !970, line: 14, baseType: !969, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1381, file: !970, line: 15, baseType: !295, size: 64, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1373, file: !55, line: 226, baseType: !1381, size: 128, offset: 320)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1373, file: !55, line: 227, baseType: !1381, size: 128, offset: 448)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1373, file: !55, line: 234, baseType: !1388, size: 64, offset: 576)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !55, line: 916, size: 1856, align: 32, elements: !1390)
!1390 = !{!1391, !1401, !1402, !1403, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1700, !1886, !1895, !1896, !1897, !1898, !1899, !1900, !1901}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1389, file: !55, line: 920, baseType: !1392, size: 128)
!1392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1389, file: !55, line: 917, size: 128, elements: !1393)
!1393 = !{!1394, !1400}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1392, file: !55, line: 918, baseType: !1395, size: 64)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1396, line: 58, size: 64, elements: !1397)
!1396 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1397 = !{!1398}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1395, file: !1396, line: 59, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1392, file: !55, line: 919, baseType: !1190, size: 128, align: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1389, file: !55, line: 921, baseType: !741, size: 128, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1389, file: !55, line: 922, baseType: !597, size: 64, offset: 256)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1389, file: !55, line: 923, baseType: !1404, size: 64, offset: 320)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1406)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !55, line: 1822, size: 2048, elements: !1407)
!1407 = !{!1408, !1409, !1413, !1424, !1428, !1454, !1455, !1459, !1472, !1473, !1481, !1485, !1486, !1490, !1491, !1495, !1500, !1501, !1505, !1509, !1618, !1622, !1626, !1630, !1631, !1637, !1641, !1646, !1650, !1654, !1658, !1662}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1406, file: !55, line: 1823, baseType: !799, size: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1406, file: !55, line: 1824, baseType: !1410, size: 64, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!771, !1388, !771, !277}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1406, file: !55, line: 1825, baseType: !1414, size: 64, offset: 128)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!1417, !1388, !733, !1420, !1423}
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !304, line: 60, baseType: !1418)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !436, line: 73, baseType: !1419)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !436, line: 15, baseType: !295)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !304, line: 55, baseType: !1421)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !436, line: 72, baseType: !1422)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !436, line: 16, baseType: !281)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1406, file: !55, line: 1826, baseType: !1425, size: 64, offset: 192)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!1417, !1388, !707, !1420, !1423}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1406, file: !55, line: 1827, baseType: !1429, size: 64, offset: 256)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!1417, !1432, !1452}
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !55, line: 320, size: 384, elements: !1434)
!1434 = !{!1435, !1436, !1437, !1441, !1442, !1443, !1444, !1445}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1433, file: !55, line: 321, baseType: !1388, size: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1433, file: !55, line: 326, baseType: !771, size: 64, offset: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1433, file: !55, line: 327, baseType: !1438, size: 64, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{null, !1432, !295, !295}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1433, file: !55, line: 328, baseType: !280, size: 64, offset: 192)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1433, file: !55, line: 329, baseType: !277, size: 32, offset: 256)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1433, file: !55, line: 330, baseType: !272, size: 16, offset: 288)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1433, file: !55, line: 331, baseType: !272, size: 16, offset: 304)
!1445 = !DIDerivedType(tag: DW_TAG_member, scope: !1433, file: !55, line: 332, baseType: !1446, size: 64, offset: 320)
!1446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1433, file: !55, line: 332, size: 64, elements: !1447)
!1447 = !{!1448, !1449}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1446, file: !55, line: 333, baseType: !7, size: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1446, file: !55, line: 334, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !55, line: 334, flags: DIFlagFwdDecl)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !55, line: 64, flags: DIFlagFwdDecl)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1406, file: !55, line: 1828, baseType: !1429, size: 64, offset: 320)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1406, file: !55, line: 1829, baseType: !1456, size: 64, offset: 384)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!277, !1432, !752}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1406, file: !55, line: 1830, baseType: !1460, size: 64, offset: 448)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!277, !1388, !1463}
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !55, line: 1776, size: 128, elements: !1465)
!1465 = !{!1466, !1471}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1464, file: !55, line: 1777, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !55, line: 1773, baseType: !1468)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!277, !1463, !707, !277, !771, !343, !7}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1464, file: !55, line: 1778, baseType: !771, size: 64, offset: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1406, file: !55, line: 1831, baseType: !1460, size: 64, offset: 512)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1406, file: !55, line: 1832, baseType: !1474, size: 64, offset: 576)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{!1477, !1388, !1479}
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1478, line: 52, baseType: !7)
!1478 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !785, line: 27, flags: DIFlagFwdDecl)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1406, file: !55, line: 1833, baseType: !1482, size: 64, offset: 640)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!295, !1388, !7, !281}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1406, file: !55, line: 1834, baseType: !1482, size: 64, offset: 704)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1406, file: !55, line: 1835, baseType: !1487, size: 64, offset: 768)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!277, !1388, !500}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1406, file: !55, line: 1836, baseType: !281, size: 64, offset: 832)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1406, file: !55, line: 1837, baseType: !1492, size: 64, offset: 896)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!277, !597, !1388}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1406, file: !55, line: 1838, baseType: !1496, size: 64, offset: 960)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!277, !1388, !1499}
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !55, line: 1007, baseType: !280)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1406, file: !55, line: 1839, baseType: !1492, size: 64, offset: 1024)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1406, file: !55, line: 1840, baseType: !1502, size: 64, offset: 1088)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = !DISubroutineType(types: !1504)
!1504 = !{!277, !1388, !771, !771, !277}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1406, file: !55, line: 1841, baseType: !1506, size: 64, offset: 1152)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!277, !277, !1388, !277}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1406, file: !55, line: 1842, baseType: !1510, size: 64, offset: 1216)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!277, !1388, !277, !1513}
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !55, line: 1062, size: 1664, elements: !1515)
!1515 = !{!1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1547, !1548, !1549, !1562, !1594}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1514, file: !55, line: 1063, baseType: !1513, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1514, file: !55, line: 1064, baseType: !336, size: 128, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1514, file: !55, line: 1065, baseType: !808, size: 128, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1514, file: !55, line: 1066, baseType: !336, size: 128, offset: 320)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1514, file: !55, line: 1069, baseType: !336, size: 128, offset: 448)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1514, file: !55, line: 1072, baseType: !1499, size: 64, offset: 576)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1514, file: !55, line: 1073, baseType: !7, size: 32, offset: 640)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1514, file: !55, line: 1074, baseType: !467, size: 8, offset: 672)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1514, file: !55, line: 1075, baseType: !7, size: 32, offset: 704)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1514, file: !55, line: 1076, baseType: !277, size: 32, offset: 736)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1514, file: !55, line: 1077, baseType: !1171, size: 128, offset: 768)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1514, file: !55, line: 1078, baseType: !1388, size: 64, offset: 896)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1514, file: !55, line: 1079, baseType: !771, size: 64, offset: 960)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1514, file: !55, line: 1080, baseType: !771, size: 64, offset: 1024)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1514, file: !55, line: 1082, baseType: !1531, size: 64, offset: 1088)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !55, line: 1314, size: 320, elements: !1533)
!1533 = !{!1534, !1542, !1543, !1544, !1545, !1546}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1532, file: !55, line: 1315, baseType: !1535)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1536, line: 20, baseType: !1537)
!1536 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1536, line: 11, elements: !1538)
!1538 = !{!1539}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1537, file: !1536, line: 12, baseType: !1540)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !415, line: 33, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 31, elements: !352)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1532, file: !55, line: 1316, baseType: !277, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1532, file: !55, line: 1317, baseType: !277, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1532, file: !55, line: 1318, baseType: !1531, size: 64, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1532, file: !55, line: 1319, baseType: !1388, size: 64, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1532, file: !55, line: 1320, baseType: !1190, size: 128, align: 64, offset: 192)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1514, file: !55, line: 1084, baseType: !281, size: 64, offset: 1152)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1514, file: !55, line: 1085, baseType: !281, size: 64, offset: 1216)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1514, file: !55, line: 1087, baseType: !1550, size: 64, offset: 1280)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !55, line: 1011, size: 128, elements: !1553)
!1553 = !{!1554, !1558}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1552, file: !55, line: 1012, baseType: !1555, size: 64)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !1513, !1513}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1552, file: !55, line: 1013, baseType: !1559, size: 64, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{null, !1513}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1514, file: !55, line: 1088, baseType: !1563, size: 64, offset: 1344)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !55, line: 1016, size: 512, elements: !1566)
!1566 = !{!1567, !1571, !1575, !1576, !1580, !1584, !1588, !1593}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1565, file: !55, line: 1017, baseType: !1568, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!1499, !1499}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1565, file: !55, line: 1018, baseType: !1572, size: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{null, !1499}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1565, file: !55, line: 1019, baseType: !1559, size: 64, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1565, file: !55, line: 1020, baseType: !1577, size: 64, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!277, !1513, !277}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1565, file: !55, line: 1021, baseType: !1581, size: 64, offset: 256)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!752, !1513}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1565, file: !55, line: 1022, baseType: !1585, size: 64, offset: 320)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{!277, !1513, !277, !339}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1565, file: !55, line: 1023, baseType: !1589, size: 64, offset: 384)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{null, !1513, !1592}
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1565, file: !55, line: 1024, baseType: !1581, size: 64, offset: 448)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1514, file: !55, line: 1097, baseType: !1595, size: 256, offset: 1408)
!1595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1514, file: !55, line: 1089, size: 256, elements: !1596)
!1596 = !{!1597, !1606, !1612}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1595, file: !55, line: 1090, baseType: !1598, size: 256)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1599, line: 10, size: 256, elements: !1600)
!1599 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1600 = !{!1601, !1602, !1605}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1598, file: !1599, line: 11, baseType: !278, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1598, file: !1599, line: 12, baseType: !1603, size: 64, offset: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1599, line: 5, flags: DIFlagFwdDecl)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1598, file: !1599, line: 13, baseType: !336, size: 128, offset: 128)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1595, file: !55, line: 1091, baseType: !1607, size: 64)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1599, line: 17, size: 64, elements: !1608)
!1608 = !{!1609}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1607, file: !1599, line: 18, baseType: !1610, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1599, line: 16, flags: DIFlagFwdDecl)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1595, file: !55, line: 1096, baseType: !1613, size: 192)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1595, file: !55, line: 1092, size: 192, elements: !1614)
!1614 = !{!1615, !1616, !1617}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1613, file: !55, line: 1093, baseType: !336, size: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1613, file: !55, line: 1094, baseType: !277, size: 32, offset: 128)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1613, file: !55, line: 1095, baseType: !7, size: 32, offset: 160)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1406, file: !55, line: 1843, baseType: !1619, size: 64, offset: 1280)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!1417, !1388, !581, !277, !1420, !1423, !277}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1406, file: !55, line: 1844, baseType: !1623, size: 64, offset: 1344)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!281, !1388, !281, !281, !281, !281}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1406, file: !55, line: 1845, baseType: !1627, size: 64, offset: 1408)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!277, !277}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1406, file: !55, line: 1846, baseType: !1510, size: 64, offset: 1472)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1406, file: !55, line: 1847, baseType: !1632, size: 64, offset: 1536)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!1417, !1635, !1388, !1423, !1420, !7}
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !285, line: 53, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1406, file: !55, line: 1848, baseType: !1638, size: 64, offset: 1600)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = !DISubroutineType(types: !1640)
!1640 = !{!1417, !1388, !1423, !1635, !1420, !7}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1406, file: !55, line: 1849, baseType: !1642, size: 64, offset: 1664)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{!277, !1388, !295, !1645, !1592}
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1406, file: !55, line: 1850, baseType: !1647, size: 64, offset: 1728)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{!295, !1388, !277, !771, !771}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1406, file: !55, line: 1852, baseType: !1651, size: 64, offset: 1792)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{null, !882, !1388}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1406, file: !55, line: 1856, baseType: !1655, size: 64, offset: 1856)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!1417, !1388, !771, !1388, !771, !1420, !7}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1406, file: !55, line: 1858, baseType: !1659, size: 64, offset: 1920)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DISubroutineType(types: !1661)
!1661 = !{!771, !1388, !771, !1388, !771, !771, !7}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1406, file: !55, line: 1861, baseType: !1502, size: 64, offset: 1984)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1389, file: !55, line: 929, baseType: !678, offset: 384)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1389, file: !55, line: 930, baseType: !54, size: 32, offset: 384)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1389, file: !55, line: 931, baseType: !928, size: 64, offset: 448)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1389, file: !55, line: 932, baseType: !7, size: 32, offset: 512)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1389, file: !55, line: 933, baseType: !1228, size: 32, offset: 544)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1389, file: !55, line: 934, baseType: !924, size: 192, offset: 576)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1389, file: !55, line: 935, baseType: !771, size: 64, offset: 768)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1389, file: !55, line: 936, baseType: !1671, size: 192, offset: 832)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !55, line: 885, size: 192, elements: !1672)
!1672 = !{!1673, !1674, !1696, !1697, !1698, !1699}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1671, file: !55, line: 886, baseType: !1535)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1671, file: !55, line: 887, baseType: !1675, size: 64)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !64, line: 59, size: 768, elements: !1677)
!1677 = !{!1678, !1679, !1680, !1681, !1685, !1686, !1687, !1688}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1676, file: !64, line: 61, baseType: !298, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1676, file: !64, line: 62, baseType: !7, size: 32, offset: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1676, file: !64, line: 63, baseType: !678, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1676, file: !64, line: 65, baseType: !1682, size: 256, offset: 64)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !804, size: 256, elements: !1683)
!1683 = !{!1684}
!1684 = !DISubrange(count: 4)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1676, file: !64, line: 66, baseType: !804, size: 64, offset: 320)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1676, file: !64, line: 68, baseType: !1171, size: 128, offset: 384)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1676, file: !64, line: 69, baseType: !1190, size: 128, align: 64, offset: 512)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1676, file: !64, line: 70, baseType: !1689, size: 128, offset: 640)
!1689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1690, size: 128, elements: !485)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !64, line: 54, size: 128, elements: !1691)
!1691 = !{!1692, !1693}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1690, file: !64, line: 55, baseType: !277, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1690, file: !64, line: 56, baseType: !1694, size: 64, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !64, line: 56, flags: DIFlagFwdDecl)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1671, file: !55, line: 888, baseType: !63, size: 32, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1671, file: !55, line: 889, baseType: !604, size: 32, offset: 96)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1671, file: !55, line: 889, baseType: !604, size: 32, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1671, file: !55, line: 890, baseType: !277, size: 32, offset: 160)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1389, file: !55, line: 937, baseType: !1701, size: 64, offset: 1024)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1704, line: 111, size: 1280, elements: !1705)
!1704 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1725, !1726, !1727, !1728, !1729, !1730, !1841, !1842, !1843, !1844, !1870, !1871, !1881}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1703, file: !1704, line: 112, baseType: !303, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1703, file: !1704, line: 120, baseType: !604, size: 32, offset: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1703, file: !1704, line: 121, baseType: !612, size: 32, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1703, file: !1704, line: 122, baseType: !604, size: 32, offset: 96)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1703, file: !1704, line: 123, baseType: !612, size: 32, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1703, file: !1704, line: 124, baseType: !604, size: 32, offset: 160)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1703, file: !1704, line: 125, baseType: !612, size: 32, offset: 192)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1703, file: !1704, line: 126, baseType: !604, size: 32, offset: 224)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1703, file: !1704, line: 127, baseType: !612, size: 32, offset: 256)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1703, file: !1704, line: 128, baseType: !7, size: 32, offset: 288)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1703, file: !1704, line: 129, baseType: !1717, size: 64, offset: 320)
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1718, line: 26, baseType: !1719)
!1718 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1718, line: 24, size: 64, elements: !1720)
!1720 = !{!1721}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1719, file: !1718, line: 25, baseType: !1722, size: 64)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 64, elements: !1723)
!1723 = !{!1724}
!1724 = !DISubrange(count: 2)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1703, file: !1704, line: 130, baseType: !1717, size: 64, offset: 384)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1703, file: !1704, line: 131, baseType: !1717, size: 64, offset: 448)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1703, file: !1704, line: 132, baseType: !1717, size: 64, offset: 512)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1703, file: !1704, line: 133, baseType: !1717, size: 64, offset: 576)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1703, file: !1704, line: 135, baseType: !467, size: 8, offset: 640)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1703, file: !1704, line: 137, baseType: !1731, size: 64, offset: 704)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1733, line: 189, size: 1664, elements: !1734)
!1733 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1734 = !{!1735, !1736, !1741, !1746, !1747, !1750, !1751, !1756, !1757, !1758, !1759, !1762, !1763, !1764, !1766, !1767, !1805, !1826}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1732, file: !1733, line: 190, baseType: !298, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1732, file: !1733, line: 191, baseType: !1737, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1733, line: 28, baseType: !1738)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !304, line: 98, baseType: !1739)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !273, line: 20, baseType: !1740)
!1740 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !275, line: 26, baseType: !277)
!1741 = !DIDerivedType(tag: DW_TAG_member, scope: !1732, file: !1733, line: 192, baseType: !1742, size: 192, offset: 64)
!1742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1732, file: !1733, line: 192, size: 192, elements: !1743)
!1743 = !{!1744, !1745}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1742, file: !1733, line: 193, baseType: !336, size: 128)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1742, file: !1733, line: 194, baseType: !328, size: 192, align: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1732, file: !1733, line: 199, baseType: !1095, size: 256, offset: 256)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1732, file: !1733, line: 200, baseType: !1748, size: 64, offset: 512)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1733, line: 200, flags: DIFlagFwdDecl)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1732, file: !1733, line: 201, baseType: !280, size: 64, offset: 576)
!1751 = !DIDerivedType(tag: DW_TAG_member, scope: !1732, file: !1733, line: 202, baseType: !1752, size: 64, offset: 640)
!1752 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1732, file: !1733, line: 202, size: 64, elements: !1753)
!1753 = !{!1754, !1755}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1752, file: !1733, line: 203, baseType: !969, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1752, file: !1733, line: 204, baseType: !969, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1732, file: !1733, line: 206, baseType: !969, size: 64, offset: 704)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1732, file: !1733, line: 207, baseType: !604, size: 32, offset: 768)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1732, file: !1733, line: 208, baseType: !612, size: 32, offset: 800)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1732, file: !1733, line: 209, baseType: !1760, size: 32, offset: 832)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1733, line: 31, baseType: !1761)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !304, line: 104, baseType: !278)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1732, file: !1733, line: 210, baseType: !276, size: 16, offset: 864)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1732, file: !1733, line: 211, baseType: !276, size: 16, offset: 880)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1732, file: !1733, line: 215, baseType: !1765, size: 16, offset: 896)
!1765 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1732, file: !1733, line: 222, baseType: !281, size: 64, offset: 960)
!1767 = !DIDerivedType(tag: DW_TAG_member, scope: !1732, file: !1733, line: 239, baseType: !1768, size: 320, offset: 1024)
!1768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1732, file: !1733, line: 239, size: 320, elements: !1769)
!1769 = !{!1770, !1797}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1768, file: !1733, line: 240, baseType: !1771, size: 320)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1733, line: 108, size: 320, elements: !1772)
!1772 = !{!1773, !1774, !1786, !1789, !1796}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1771, file: !1733, line: 110, baseType: !281, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, scope: !1771, file: !1733, line: 111, baseType: !1775, size: 64, offset: 64)
!1775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1771, file: !1733, line: 111, size: 64, elements: !1776)
!1776 = !{!1777, !1785}
!1777 = !DIDerivedType(tag: DW_TAG_member, scope: !1775, file: !1733, line: 112, baseType: !1778, size: 64)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1775, file: !1733, line: 112, size: 64, elements: !1779)
!1779 = !{!1780, !1781}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1778, file: !1733, line: 114, baseType: !272, size: 16)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1778, file: !1733, line: 115, baseType: !1782, size: 48, offset: 16)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 48, elements: !1783)
!1783 = !{!1784}
!1784 = !DISubrange(count: 6)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1775, file: !1733, line: 121, baseType: !281, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1771, file: !1733, line: 123, baseType: !1787, size: 64, offset: 128)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1733, line: 96, flags: DIFlagFwdDecl)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1771, file: !1733, line: 124, baseType: !1790, size: 64, offset: 192)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1733, line: 102, size: 192, elements: !1792)
!1792 = !{!1793, !1794, !1795}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1791, file: !1733, line: 103, baseType: !1190, size: 128, align: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1791, file: !1733, line: 104, baseType: !298, size: 32, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1791, file: !1733, line: 105, baseType: !752, size: 8, offset: 160)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1771, file: !1733, line: 125, baseType: !707, size: 64, offset: 256)
!1797 = !DIDerivedType(tag: DW_TAG_member, scope: !1768, file: !1733, line: 241, baseType: !1798, size: 320)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1768, file: !1733, line: 241, size: 320, elements: !1799)
!1799 = !{!1800, !1801, !1802, !1803, !1804}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1798, file: !1733, line: 242, baseType: !281, size: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1798, file: !1733, line: 243, baseType: !281, size: 64, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1798, file: !1733, line: 244, baseType: !1787, size: 64, offset: 128)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1798, file: !1733, line: 245, baseType: !1790, size: 64, offset: 192)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1798, file: !1733, line: 246, baseType: !733, size: 64, offset: 256)
!1805 = !DIDerivedType(tag: DW_TAG_member, scope: !1732, file: !1733, line: 254, baseType: !1806, size: 256, offset: 1344)
!1806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1732, file: !1733, line: 254, size: 256, elements: !1807)
!1807 = !{!1808, !1814}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1806, file: !1733, line: 255, baseType: !1809, size: 256)
!1809 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1733, line: 128, size: 256, elements: !1810)
!1810 = !{!1811, !1812}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1809, file: !1733, line: 129, baseType: !280, size: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1809, file: !1733, line: 130, baseType: !1813, size: 256)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !280, size: 256, elements: !1683)
!1814 = !DIDerivedType(tag: DW_TAG_member, scope: !1806, file: !1733, line: 256, baseType: !1815, size: 256)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1806, file: !1733, line: 256, size: 256, elements: !1816)
!1816 = !{!1817, !1818}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1815, file: !1733, line: 258, baseType: !336, size: 128)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1815, file: !1733, line: 259, baseType: !1819, size: 128, offset: 128)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1820, line: 22, size: 128, elements: !1821)
!1820 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1821 = !{!1822, !1825}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1819, file: !1820, line: 23, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1820, line: 23, flags: DIFlagFwdDecl)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1819, file: !1820, line: 24, baseType: !281, size: 64, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1732, file: !1733, line: 274, baseType: !1827, size: 64, offset: 1600)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1733, line: 170, size: 192, elements: !1829)
!1829 = !{!1830, !1839, !1840}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1828, file: !1733, line: 171, baseType: !1831, size: 64)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1733, line: 165, baseType: !1832)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!277, !1731, !1835, !1837, !1731}
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1788)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1828, file: !1733, line: 172, baseType: !1731, size: 64, offset: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1828, file: !1733, line: 173, baseType: !1787, size: 64, offset: 128)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1703, file: !1704, line: 138, baseType: !1731, size: 64, offset: 768)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1703, file: !1704, line: 139, baseType: !1731, size: 64, offset: 832)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1703, file: !1704, line: 140, baseType: !1731, size: 64, offset: 896)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1703, file: !1704, line: 145, baseType: !1845, size: 64, offset: 960)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1847, line: 13, size: 896, elements: !1848)
!1847 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1848 = !{!1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1846, file: !1847, line: 14, baseType: !298, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1846, file: !1847, line: 15, baseType: !303, size: 32, offset: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1846, file: !1847, line: 16, baseType: !303, size: 32, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1846, file: !1847, line: 21, baseType: !928, size: 64, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1846, file: !1847, line: 27, baseType: !281, size: 64, offset: 192)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1846, file: !1847, line: 28, baseType: !281, size: 64, offset: 256)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1846, file: !1847, line: 29, baseType: !928, size: 64, offset: 320)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1846, file: !1847, line: 32, baseType: !808, size: 128, offset: 384)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1846, file: !1847, line: 33, baseType: !604, size: 32, offset: 512)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1846, file: !1847, line: 37, baseType: !928, size: 64, offset: 576)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1846, file: !1847, line: 44, baseType: !1860, size: 256, offset: 640)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1861, line: 15, size: 256, elements: !1862)
!1861 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1862 = !{!1863, !1864, !1865, !1866, !1867, !1868, !1869}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1860, file: !1861, line: 16, baseType: !409)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1860, file: !1861, line: 18, baseType: !277, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1860, file: !1861, line: 19, baseType: !277, size: 32, offset: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1860, file: !1861, line: 20, baseType: !277, size: 32, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1860, file: !1861, line: 21, baseType: !277, size: 32, offset: 96)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1860, file: !1861, line: 22, baseType: !281, size: 64, offset: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1860, file: !1861, line: 23, baseType: !281, size: 64, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1703, file: !1704, line: 146, baseType: !1260, size: 64, offset: 1024)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1703, file: !1704, line: 147, baseType: !1872, size: 64, offset: 1088)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1704, line: 25, size: 64, elements: !1874)
!1874 = !{!1875, !1876, !1877}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1873, file: !1704, line: 26, baseType: !303, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1873, file: !1704, line: 27, baseType: !277, size: 32, offset: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1873, file: !1704, line: 28, baseType: !1878, offset: 64)
!1878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, elements: !1879)
!1879 = !{!1880}
!1880 = !DISubrange(count: 0)
!1881 = !DIDerivedType(tag: DW_TAG_member, scope: !1703, file: !1704, line: 149, baseType: !1882, size: 128, offset: 1152)
!1882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1703, file: !1704, line: 149, size: 128, elements: !1883)
!1883 = !{!1884, !1885}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1882, file: !1704, line: 150, baseType: !277, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1882, file: !1704, line: 151, baseType: !1190, size: 128, align: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1389, file: !55, line: 938, baseType: !1887, size: 256, offset: 1088)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !55, line: 896, size: 256, elements: !1888)
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1887, file: !55, line: 897, baseType: !281, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1887, file: !55, line: 898, baseType: !7, size: 32, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !1887, file: !55, line: 899, baseType: !7, size: 32, offset: 96)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1887, file: !55, line: 902, baseType: !7, size: 32, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !1887, file: !55, line: 903, baseType: !7, size: 32, offset: 160)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !1887, file: !55, line: 904, baseType: !771, size: 64, offset: 192)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1389, file: !55, line: 940, baseType: !343, size: 64, offset: 1344)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1389, file: !55, line: 945, baseType: !280, size: 64, offset: 1408)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1389, file: !55, line: 949, baseType: !336, size: 128, offset: 1472)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1389, file: !55, line: 950, baseType: !336, size: 128, offset: 1600)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1389, file: !55, line: 952, baseType: !593, size: 64, offset: 1728)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1389, file: !55, line: 953, baseType: !1252, size: 32, offset: 1792)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1389, file: !55, line: 954, baseType: !1252, size: 32, offset: 1824)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !622, file: !55, line: 1882, baseType: !1903, size: 64, offset: 896)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DISubroutineType(types: !1905)
!1905 = !{!277, !750, !1906, !278, !7}
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1908, line: 22, size: 1152, elements: !1909)
!1908 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1909 = !{!1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1907, file: !1908, line: 23, baseType: !278, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1907, file: !1908, line: 24, baseType: !601, size: 16, offset: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1907, file: !1908, line: 25, baseType: !7, size: 32, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1907, file: !1908, line: 26, baseType: !1761, size: 32, offset: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1907, file: !1908, line: 27, baseType: !343, size: 64, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1907, file: !1908, line: 28, baseType: !343, size: 64, offset: 192)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1907, file: !1908, line: 37, baseType: !343, size: 64, offset: 256)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1907, file: !1908, line: 38, baseType: !766, size: 32, offset: 320)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1907, file: !1908, line: 39, baseType: !766, size: 32, offset: 352)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1907, file: !1908, line: 40, baseType: !604, size: 32, offset: 384)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1907, file: !1908, line: 41, baseType: !612, size: 32, offset: 416)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1907, file: !1908, line: 42, baseType: !771, size: 64, offset: 448)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1907, file: !1908, line: 43, baseType: !1381, size: 128, offset: 512)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1907, file: !1908, line: 44, baseType: !1381, size: 128, offset: 640)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1907, file: !1908, line: 45, baseType: !1381, size: 128, offset: 768)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1907, file: !1908, line: 46, baseType: !1381, size: 128, offset: 896)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1907, file: !1908, line: 47, baseType: !343, size: 64, offset: 1024)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1907, file: !1908, line: 48, baseType: !343, size: 64, offset: 1088)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !622, file: !55, line: 1883, baseType: !1929, size: 64, offset: 960)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{!1417, !628, !733, !1420}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !622, file: !55, line: 1884, baseType: !1933, size: 64, offset: 1024)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!277, !597, !1936, !343, !343}
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !55, line: 50, flags: DIFlagFwdDecl)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !622, file: !55, line: 1886, baseType: !1939, size: 64, offset: 1088)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{!277, !597, !1942, !277}
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !622, file: !55, line: 1887, baseType: !1944, size: 64, offset: 1152)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = !DISubroutineType(types: !1946)
!1946 = !{!277, !597, !628, !1388, !7, !601}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !622, file: !55, line: 1890, baseType: !1356, size: 64, offset: 1216)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !622, file: !55, line: 1891, baseType: !1949, size: 64, offset: 1280)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{!277, !597, !1333, !277}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !598, file: !55, line: 623, baseType: !761, size: 64, offset: 192)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !598, file: !55, line: 624, baseType: !593, size: 64, offset: 256)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !598, file: !55, line: 631, baseType: !281, size: 64, offset: 320)
!1955 = !DIDerivedType(tag: DW_TAG_member, scope: !598, file: !55, line: 639, baseType: !1956, size: 32, offset: 384)
!1956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !55, line: 639, size: 32, elements: !1957)
!1957 = !{!1958, !1960}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !1956, file: !55, line: 640, baseType: !1959, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !1956, file: !55, line: 641, baseType: !7, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !598, file: !55, line: 643, baseType: !766, size: 32, offset: 416)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !598, file: !55, line: 644, baseType: !771, size: 64, offset: 448)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !598, file: !55, line: 645, baseType: !1381, size: 128, offset: 512)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !598, file: !55, line: 646, baseType: !1381, size: 128, offset: 640)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !598, file: !55, line: 647, baseType: !1381, size: 128, offset: 768)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !598, file: !55, line: 648, baseType: !678, offset: 896)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !598, file: !55, line: 649, baseType: !276, size: 16, offset: 896)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !598, file: !55, line: 650, baseType: !465, size: 8, offset: 912)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !598, file: !55, line: 651, baseType: !465, size: 8, offset: 920)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !598, file: !55, line: 652, baseType: !1083, size: 64, offset: 960)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !598, file: !55, line: 659, baseType: !281, size: 64, offset: 1024)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !598, file: !55, line: 660, baseType: !1095, size: 256, offset: 1088)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !598, file: !55, line: 662, baseType: !281, size: 64, offset: 1344)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !598, file: !55, line: 663, baseType: !281, size: 64, offset: 1408)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !598, file: !55, line: 665, baseType: !808, size: 128, offset: 1472)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !598, file: !55, line: 666, baseType: !336, size: 128, offset: 1600)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !598, file: !55, line: 675, baseType: !336, size: 128, offset: 1728)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !598, file: !55, line: 676, baseType: !336, size: 128, offset: 1856)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !598, file: !55, line: 677, baseType: !336, size: 128, offset: 1984)
!1980 = !DIDerivedType(tag: DW_TAG_member, scope: !598, file: !55, line: 678, baseType: !1981, size: 128, offset: 2112)
!1981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !55, line: 678, size: 128, elements: !1982)
!1982 = !{!1983, !1984}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !1981, file: !55, line: 679, baseType: !804, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !1981, file: !55, line: 680, baseType: !1190, size: 128, align: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !598, file: !55, line: 682, baseType: !930, size: 64, offset: 2240)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !598, file: !55, line: 683, baseType: !930, size: 64, offset: 2304)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !598, file: !55, line: 684, baseType: !303, size: 32, offset: 2368)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !598, file: !55, line: 685, baseType: !303, size: 32, offset: 2400)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !598, file: !55, line: 686, baseType: !303, size: 32, offset: 2432)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !598, file: !55, line: 688, baseType: !303, size: 32, offset: 2464)
!1991 = !DIDerivedType(tag: DW_TAG_member, scope: !598, file: !55, line: 690, baseType: !1992, size: 64, offset: 2496)
!1992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !55, line: 690, size: 64, elements: !1993)
!1993 = !{!1994, !1995}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !1992, file: !55, line: 691, baseType: !1404, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1992, file: !55, line: 692, baseType: !835, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !598, file: !55, line: 694, baseType: !1997, size: 64, offset: 2560)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !55, line: 1100, size: 384, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !1998, file: !55, line: 1101, baseType: !678)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !1998, file: !55, line: 1102, baseType: !336, size: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !1998, file: !55, line: 1103, baseType: !336, size: 128, offset: 128)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !1998, file: !55, line: 1104, baseType: !336, size: 128, offset: 256)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !598, file: !55, line: 695, baseType: !594, size: 1216, align: 64, offset: 2624)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !598, file: !55, line: 696, baseType: !336, size: 128, offset: 3840)
!2006 = !DIDerivedType(tag: DW_TAG_member, scope: !598, file: !55, line: 697, baseType: !2007, size: 64, offset: 3968)
!2007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !55, line: 697, size: 64, elements: !2008)
!2008 = !{!2009, !2010, !2011, !2328, !2329}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2007, file: !55, line: 698, baseType: !1635, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2007, file: !55, line: 699, baseType: !1115, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2007, file: !55, line: 700, baseType: !2012, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !2014, line: 14, size: 832, elements: !2015)
!2014 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!2015 = !{!2016, !2323, !2324, !2325, !2326, !2327}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2013, file: !2014, line: 15, baseType: !2017, size: 512)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !2018, line: 64, size: 512, elements: !2019)
!2018 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!2019 = !{!2020, !2021, !2022, !2024, !2066, !2168, !2313, !2318, !2319, !2320, !2321, !2322}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2017, file: !2018, line: 65, baseType: !707, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2017, file: !2018, line: 66, baseType: !336, size: 128, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2017, file: !2018, line: 67, baseType: !2023, size: 64, offset: 192)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !2017, file: !2018, line: 68, baseType: !2025, size: 64, offset: 256)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !2018, line: 192, size: 704, elements: !2027)
!2027 = !{!2028, !2029, !2030, !2031}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2026, file: !2018, line: 193, baseType: !336, size: 128)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2026, file: !2018, line: 194, baseType: !678, offset: 128)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2026, file: !2018, line: 195, baseType: !2017, size: 512, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !2026, file: !2018, line: 196, baseType: !2032, size: 64, offset: 640)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2034)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !2018, line: 156, size: 192, elements: !2035)
!2035 = !{!2036, !2041, !2046}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2034, file: !2018, line: 157, baseType: !2037, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2038)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{!277, !2025, !2023}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2034, file: !2018, line: 158, baseType: !2042, size: 64, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2043)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{!707, !2025, !2023}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2034, file: !2018, line: 159, baseType: !2047, size: 64, offset: 128)
!2047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2048)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{!277, !2025, !2023, !2051}
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !2018, line: 148, size: 20736, elements: !2053)
!2053 = !{!2054, !2056, !2060, !2061, !2065}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !2052, file: !2018, line: 149, baseType: !2055, size: 192)
!2055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 192, elements: !820)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !2052, file: !2018, line: 150, baseType: !2057, size: 4096, offset: 192)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 4096, elements: !2058)
!2058 = !{!2059}
!2059 = !DISubrange(count: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !2052, file: !2018, line: 151, baseType: !277, size: 32, offset: 4288)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2052, file: !2018, line: 152, baseType: !2062, size: 16384, offset: 4320)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 16384, elements: !2063)
!2063 = !{!2064}
!2064 = !DISubrange(count: 2048)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !2052, file: !2018, line: 153, baseType: !277, size: 32, offset: 20704)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !2017, file: !2018, line: 69, baseType: !2067, size: 64, offset: 320)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !2018, line: 138, size: 448, elements: !2069)
!2069 = !{!2070, !2074, !2093, !2095, !2128, !2158, !2162}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2068, file: !2018, line: 139, baseType: !2071, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{null, !2023}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !2068, file: !2018, line: 140, baseType: !2075, size: 64, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !2078, line: 230, size: 128, elements: !2079)
!2078 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!2079 = !{!2080, !2089}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2077, file: !2078, line: 231, baseType: !2081, size: 64)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{!1417, !2023, !2084, !733}
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !2078, line: 30, size: 128, elements: !2086)
!2086 = !{!2087, !2088}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2085, file: !2078, line: 31, baseType: !707, size: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2085, file: !2078, line: 32, baseType: !601, size: 16, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2077, file: !2078, line: 232, baseType: !2090, size: 64, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!1417, !2023, !2084, !707, !1420}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !2068, file: !2018, line: 141, baseType: !2094, size: 64, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !2068, file: !2018, line: 142, baseType: !2096, size: 64, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !2078, line: 84, size: 320, elements: !2100)
!2100 = !{!2101, !2102, !2106, !2125, !2126}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2099, file: !2078, line: 85, baseType: !707, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !2099, file: !2078, line: 86, baseType: !2103, size: 64, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!601, !2023, !2084, !277}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !2099, file: !2078, line: 88, baseType: !2107, size: 64, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DISubroutineType(types: !2109)
!2109 = !{!601, !2023, !2110, !277}
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !2078, line: 168, size: 448, elements: !2112)
!2112 = !{!2113, !2114, !2115, !2116, !2120, !2121}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2111, file: !2078, line: 169, baseType: !2085, size: 128)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2111, file: !2078, line: 170, baseType: !1420, size: 64, offset: 128)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2111, file: !2078, line: 171, baseType: !280, size: 64, offset: 192)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2111, file: !2078, line: 172, baseType: !2117, size: 64, offset: 256)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!1417, !1388, !2023, !2110, !733, !771, !1420}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2111, file: !2078, line: 174, baseType: !2117, size: 64, offset: 320)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2111, file: !2078, line: 176, baseType: !2122, size: 64, offset: 384)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{!277, !1388, !2023, !2110, !500}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2099, file: !2078, line: 90, baseType: !2094, size: 64, offset: 192)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !2099, file: !2078, line: 91, baseType: !2127, size: 64, offset: 256)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !2068, file: !2018, line: 143, baseType: !2129, size: 64, offset: 256)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{!2132, !2023}
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2134)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !72, line: 39, size: 384, elements: !2135)
!2135 = !{!2136, !2137, !2141, !2145, !2153, !2157}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2134, file: !72, line: 40, baseType: !71, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !2134, file: !72, line: 41, baseType: !2138, size: 64, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!752}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !2134, file: !72, line: 42, baseType: !2142, size: 64, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{!280}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !2134, file: !72, line: 43, baseType: !2146, size: 64, offset: 192)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!2149, !2151}
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !72, line: 19, flags: DIFlagFwdDecl)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !2134, file: !72, line: 44, baseType: !2154, size: 64, offset: 256)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{!2149}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !2134, file: !72, line: 45, baseType: !1321, size: 64, offset: 320)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2068, file: !2018, line: 144, baseType: !2159, size: 64, offset: 320)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!2149, !2023}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2068, file: !2018, line: 145, baseType: !2163, size: 64, offset: 384)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{null, !2023, !2166, !2167}
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !2017, file: !2018, line: 70, baseType: !2169, size: 64, offset: 384)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !785, line: 123, size: 1024, elements: !2171)
!2171 = !{!2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2306, !2307, !2308, !2309, !2310}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2170, file: !785, line: 124, baseType: !303, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2170, file: !785, line: 125, baseType: !303, size: 32, offset: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2170, file: !785, line: 135, baseType: !2169, size: 64, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2170, file: !785, line: 136, baseType: !707, size: 64, offset: 128)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2170, file: !785, line: 138, baseType: !328, size: 192, align: 64, offset: 192)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2170, file: !785, line: 140, baseType: !2149, size: 64, offset: 384)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2170, file: !785, line: 141, baseType: !7, size: 32, offset: 448)
!2179 = !DIDerivedType(tag: DW_TAG_member, scope: !2170, file: !785, line: 142, baseType: !2180, size: 256, offset: 512)
!2180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2170, file: !785, line: 142, size: 256, elements: !2181)
!2181 = !{!2182, !2234, !2238}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2180, file: !785, line: 143, baseType: !2183, size: 192)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !785, line: 91, size: 192, elements: !2184)
!2184 = !{!2185, !2186, !2187}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !2183, file: !785, line: 92, baseType: !281, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2183, file: !785, line: 94, baseType: !455, size: 64, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2183, file: !785, line: 100, baseType: !2188, size: 64, offset: 128)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !785, line: 180, size: 704, elements: !2190)
!2190 = !{!2191, !2192, !2193, !2206, !2207, !2208, !2232, !2233}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2189, file: !785, line: 182, baseType: !2169, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2189, file: !785, line: 183, baseType: !7, size: 32, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !2189, file: !785, line: 186, baseType: !2194, size: 192, offset: 128)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2195, line: 19, size: 192, elements: !2196)
!2195 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2196 = !{!2197, !2204, !2205}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2194, file: !2195, line: 20, baseType: !2198, size: 128)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2199, line: 292, size: 128, elements: !2200)
!2199 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2200 = !{!2201, !2202, !2203}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2198, file: !2199, line: 293, baseType: !678)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2198, file: !2199, line: 295, baseType: !557, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2198, file: !2199, line: 296, baseType: !280, size: 64, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2194, file: !2195, line: 21, baseType: !7, size: 32, offset: 128)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2194, file: !2195, line: 22, baseType: !7, size: 32, offset: 160)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !2189, file: !785, line: 187, baseType: !278, size: 32, offset: 320)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !2189, file: !785, line: 188, baseType: !278, size: 32, offset: 352)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !2189, file: !785, line: 189, baseType: !2209, size: 64, offset: 384)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !785, line: 168, size: 320, elements: !2211)
!2211 = !{!2212, !2216, !2220, !2224, !2228}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !2210, file: !785, line: 169, baseType: !2213, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2214 = !DISubroutineType(types: !2215)
!2215 = !{!277, !882, !2188}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !2210, file: !785, line: 171, baseType: !2217, size: 64, offset: 64)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!277, !2169, !707, !601}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !2210, file: !785, line: 173, baseType: !2221, size: 64, offset: 128)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{!277, !2169}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !2210, file: !785, line: 174, baseType: !2225, size: 64, offset: 192)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = !DISubroutineType(types: !2227)
!2227 = !{!277, !2169, !2169, !707}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !2210, file: !785, line: 176, baseType: !2229, size: 64, offset: 256)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!2230 = !DISubroutineType(types: !2231)
!2231 = !{!277, !882, !2169, !2188}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !2189, file: !785, line: 192, baseType: !336, size: 128, offset: 448)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !2189, file: !785, line: 194, baseType: !1171, size: 128, offset: 576)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !2180, file: !785, line: 144, baseType: !2235, size: 64)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !785, line: 103, size: 64, elements: !2236)
!2236 = !{!2237}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !2235, file: !785, line: 104, baseType: !2169, size: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2180, file: !785, line: 145, baseType: !2239, size: 256)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !785, line: 107, size: 256, elements: !2240)
!2240 = !{!2241, !2301, !2304, !2305}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2239, file: !785, line: 108, baseType: !2242, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2244)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !785, line: 217, size: 768, elements: !2245)
!2245 = !{!2246, !2266, !2270, !2274, !2278, !2282, !2286, !2290, !2291, !2292, !2293, !2297}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2244, file: !785, line: 222, baseType: !2247, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!277, !2250}
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !785, line: 197, size: 1088, elements: !2252)
!2252 = !{!2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2251, file: !785, line: 199, baseType: !2169, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2251, file: !785, line: 200, baseType: !1388, size: 64, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !2251, file: !785, line: 201, baseType: !882, size: 64, offset: 128)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2251, file: !785, line: 202, baseType: !280, size: 64, offset: 192)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2251, file: !785, line: 205, baseType: !924, size: 192, offset: 256)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !2251, file: !785, line: 206, baseType: !924, size: 192, offset: 448)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2251, file: !785, line: 207, baseType: !277, size: 32, offset: 640)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2251, file: !785, line: 208, baseType: !336, size: 128, offset: 704)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !2251, file: !785, line: 209, baseType: !733, size: 64, offset: 832)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2251, file: !785, line: 211, baseType: !1420, size: 64, offset: 896)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !2251, file: !785, line: 212, baseType: !752, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !2251, file: !785, line: 213, baseType: !752, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2251, file: !785, line: 214, baseType: !529, size: 64, offset: 1024)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2244, file: !785, line: 223, baseType: !2267, size: 64, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{null, !2250}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !2244, file: !785, line: 236, baseType: !2271, size: 64, offset: 128)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{!277, !882, !280}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !2244, file: !785, line: 238, baseType: !2275, size: 64, offset: 192)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DISubroutineType(types: !2277)
!2277 = !{!280, !882, !1423}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !2244, file: !785, line: 239, baseType: !2279, size: 64, offset: 256)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DISubroutineType(types: !2281)
!2281 = !{!280, !882, !280, !1423}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !2244, file: !785, line: 240, baseType: !2283, size: 64, offset: 320)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2284 = !DISubroutineType(types: !2285)
!2285 = !{null, !882, !280}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2244, file: !785, line: 242, baseType: !2287, size: 64, offset: 384)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{!1417, !2250, !733, !1420, !771}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2244, file: !785, line: 252, baseType: !1420, size: 64, offset: 448)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !2244, file: !785, line: 259, baseType: !752, size: 8, offset: 512)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2244, file: !785, line: 260, baseType: !2287, size: 64, offset: 576)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2244, file: !785, line: 263, baseType: !2294, size: 64, offset: 640)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 64)
!2295 = !DISubroutineType(types: !2296)
!2296 = !{!1477, !2250, !1479}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2244, file: !785, line: 266, baseType: !2298, size: 64, offset: 704)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!277, !2250, !500}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2239, file: !785, line: 109, baseType: !2302, size: 64, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !785, line: 31, flags: DIFlagFwdDecl)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2239, file: !785, line: 110, baseType: !771, size: 64, offset: 128)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !2239, file: !785, line: 111, baseType: !2169, size: 64, offset: 192)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2170, file: !785, line: 148, baseType: !280, size: 64, offset: 768)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2170, file: !785, line: 154, baseType: !343, size: 64, offset: 832)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2170, file: !785, line: 156, baseType: !276, size: 16, offset: 896)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2170, file: !785, line: 157, baseType: !601, size: 16, offset: 912)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !2170, file: !785, line: 158, baseType: !2311, size: 64, offset: 960)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !785, line: 32, flags: DIFlagFwdDecl)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2017, file: !2018, line: 71, baseType: !2314, size: 32, offset: 448)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2315, line: 19, size: 32, elements: !2316)
!2315 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2316 = !{!2317}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2314, file: !2315, line: 20, baseType: !298, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !2017, file: !2018, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !2017, file: !2018, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !2017, file: !2018, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !2017, file: !2018, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !2017, file: !2018, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2013, file: !2014, line: 16, baseType: !799, size: 64, offset: 512)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2013, file: !2014, line: 17, baseType: !1404, size: 64, offset: 576)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2013, file: !2014, line: 18, baseType: !336, size: 128, offset: 640)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2013, file: !2014, line: 19, baseType: !766, size: 32, offset: 768)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2013, file: !2014, line: 20, baseType: !7, size: 32, offset: 800)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2007, file: !55, line: 701, baseType: !733, size: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2007, file: !55, line: 702, baseType: !7, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !598, file: !55, line: 705, baseType: !279, size: 32, offset: 4032)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !598, file: !55, line: 708, baseType: !279, size: 32, offset: 4064)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !598, file: !55, line: 709, baseType: !1213, size: 64, offset: 4096)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !598, file: !55, line: 720, baseType: !280, size: 64, offset: 4160)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !594, file: !55, line: 453, baseType: !2198, size: 128, offset: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !594, file: !55, line: 454, baseType: !557, size: 32, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !594, file: !55, line: 455, baseType: !303, size: 32, offset: 224)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !594, file: !55, line: 460, baseType: !452, size: 128, offset: 256)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !594, file: !55, line: 461, baseType: !1095, size: 256, offset: 384)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !594, file: !55, line: 462, baseType: !281, size: 64, offset: 640)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !594, file: !55, line: 463, baseType: !281, size: 64, offset: 704)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !594, file: !55, line: 464, baseType: !281, size: 64, offset: 768)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !594, file: !55, line: 465, baseType: !2343, size: 64, offset: 832)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2345)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !55, line: 367, size: 1408, elements: !2346)
!2346 = !{!2347, !2351, !2355, !2359, !2363, !2367, !2373, !2378, !2382, !2387, !2391, !2395, !2399, !2400, !2404, !2410, !2411, !2412, !2416, !2421, !2425, !2432}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !2345, file: !55, line: 368, baseType: !2348, size: 64)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{!277, !581, !847}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !2345, file: !55, line: 369, baseType: !2352, size: 64, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{!277, !1388, !581}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !2345, file: !55, line: 372, baseType: !2356, size: 64, offset: 128)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64)
!2357 = !DISubroutineType(types: !2358)
!2358 = !{!277, !593, !847}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !2345, file: !55, line: 375, baseType: !2360, size: 64, offset: 192)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!2361 = !DISubroutineType(types: !2362)
!2362 = !{!277, !581}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !2345, file: !55, line: 381, baseType: !2364, size: 64, offset: 256)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{!277, !1388, !593, !339, !7}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !2345, file: !55, line: 383, baseType: !2368, size: 64, offset: 320)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = !DISubroutineType(types: !2370)
!2370 = !{null, !2371}
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !55, line: 290, flags: DIFlagFwdDecl)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !2345, file: !55, line: 385, baseType: !2374, size: 64, offset: 384)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = !DISubroutineType(types: !2376)
!2376 = !{!277, !1388, !593, !771, !7, !7, !2377, !1592}
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !2345, file: !55, line: 388, baseType: !2379, size: 64, offset: 448)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!277, !1388, !593, !771, !7, !7, !581, !280}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !2345, file: !55, line: 393, baseType: !2383, size: 64, offset: 512)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!2384 = !DISubroutineType(types: !2385)
!2385 = !{!2386, !593, !2386}
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !304, line: 125, baseType: !343)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !2345, file: !55, line: 394, baseType: !2388, size: 64, offset: 576)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{null, !581, !7, !7}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !2345, file: !55, line: 395, baseType: !2392, size: 64, offset: 640)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2393 = !DISubroutineType(types: !2394)
!2394 = !{!277, !581, !557}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !2345, file: !55, line: 396, baseType: !2396, size: 64, offset: 704)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = !DISubroutineType(types: !2398)
!2398 = !{null, !581}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !2345, file: !55, line: 397, baseType: !1429, size: 64, offset: 768)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !2345, file: !55, line: 402, baseType: !2401, size: 64, offset: 832)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DISubroutineType(types: !2403)
!2403 = !{!277, !593, !581, !581, !17}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !2345, file: !55, line: 404, baseType: !2405, size: 64, offset: 896)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!752, !581, !2408}
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !2409, line: 305, baseType: !7)
!2409 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !2345, file: !55, line: 405, baseType: !2396, size: 64, offset: 960)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !2345, file: !55, line: 406, baseType: !2360, size: 64, offset: 1024)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !2345, file: !55, line: 407, baseType: !2413, size: 64, offset: 1088)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!277, !581, !281, !281}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !2345, file: !55, line: 409, baseType: !2417, size: 64, offset: 1152)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{null, !581, !2420, !2420}
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !2345, file: !55, line: 410, baseType: !2422, size: 64, offset: 1216)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{!277, !593, !581}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !2345, file: !55, line: 413, baseType: !2426, size: 64, offset: 1280)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DISubroutineType(types: !2428)
!2428 = !{!277, !2429, !1388, !2431}
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !55, line: 61, flags: DIFlagFwdDecl)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !2345, file: !55, line: 415, baseType: !2433, size: 64, offset: 1344)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{null, !1388}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !594, file: !55, line: 466, baseType: !281, size: 64, offset: 896)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !594, file: !55, line: 467, baseType: !1252, size: 32, offset: 960)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !594, file: !55, line: 468, baseType: !678, offset: 992)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !594, file: !55, line: 469, baseType: !336, size: 128, offset: 1024)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !594, file: !55, line: 470, baseType: !280, size: 64, offset: 1152)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !589, file: !494, line: 87, baseType: !281, size: 64, offset: 192)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !589, file: !494, line: 94, baseType: !281, size: 64, offset: 256)
!2443 = !DIDerivedType(tag: DW_TAG_member, scope: !586, file: !494, line: 96, baseType: !2444, size: 64)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !586, file: !494, line: 96, size: 64, elements: !2445)
!2445 = !{!2446}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2444, file: !494, line: 101, baseType: !2447, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !304, line: 143, baseType: !343)
!2448 = !DIDerivedType(tag: DW_TAG_member, scope: !586, file: !494, line: 103, baseType: !2449, size: 320)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !586, file: !494, line: 103, size: 320, elements: !2450)
!2450 = !{!2451, !2461, !2464, !2465}
!2451 = !DIDerivedType(tag: DW_TAG_member, scope: !2449, file: !494, line: 104, baseType: !2452, size: 128)
!2452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2449, file: !494, line: 104, size: 128, elements: !2453)
!2453 = !{!2454, !2455}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2452, file: !494, line: 105, baseType: !336, size: 128)
!2455 = !DIDerivedType(tag: DW_TAG_member, scope: !2452, file: !494, line: 106, baseType: !2456, size: 128)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2452, file: !494, line: 106, size: 128, elements: !2457)
!2457 = !{!2458, !2459, !2460}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2456, file: !494, line: 107, baseType: !581, size: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2456, file: !494, line: 109, baseType: !277, size: 32, offset: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2456, file: !494, line: 110, baseType: !277, size: 32, offset: 96)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2449, file: !494, line: 117, baseType: !2462, size: 64, offset: 128)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !494, line: 117, flags: DIFlagFwdDecl)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2449, file: !494, line: 119, baseType: !280, size: 64, offset: 192)
!2465 = !DIDerivedType(tag: DW_TAG_member, scope: !2449, file: !494, line: 120, baseType: !2466, size: 64, offset: 256)
!2466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2449, file: !494, line: 120, size: 64, elements: !2467)
!2467 = !{!2468, !2469, !2470}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2466, file: !494, line: 121, baseType: !280, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2466, file: !494, line: 122, baseType: !281, size: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, scope: !2466, file: !494, line: 123, baseType: !2471, size: 32)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2466, file: !494, line: 123, size: 32, elements: !2472)
!2472 = !{!2473, !2474, !2475}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2471, file: !494, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2471, file: !494, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2471, file: !494, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2476 = !DIDerivedType(tag: DW_TAG_member, scope: !586, file: !494, line: 130, baseType: !2477, size: 192)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !586, file: !494, line: 130, size: 192, elements: !2478)
!2478 = !{!2479, !2480, !2481, !2482, !2483}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2477, file: !494, line: 131, baseType: !281, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2477, file: !494, line: 134, baseType: !467, size: 8, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2477, file: !494, line: 135, baseType: !467, size: 8, offset: 72)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2477, file: !494, line: 136, baseType: !303, size: 32, offset: 96)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2477, file: !494, line: 137, baseType: !7, size: 32, offset: 128)
!2484 = !DIDerivedType(tag: DW_TAG_member, scope: !586, file: !494, line: 139, baseType: !2485, size: 256)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !586, file: !494, line: 139, size: 256, elements: !2486)
!2486 = !{!2487, !2488, !2489}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2485, file: !494, line: 140, baseType: !281, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2485, file: !494, line: 141, baseType: !303, size: 32, offset: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2485, file: !494, line: 143, baseType: !336, size: 128, offset: 128)
!2490 = !DIDerivedType(tag: DW_TAG_member, scope: !586, file: !494, line: 145, baseType: !2491, size: 256)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !586, file: !494, line: 145, size: 256, elements: !2492)
!2492 = !{!2493, !2494, !2496, !2497, !2502}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2491, file: !494, line: 146, baseType: !281, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2491, file: !494, line: 147, baseType: !2495, size: 64, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !512, line: 509, baseType: !581)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2491, file: !494, line: 148, baseType: !281, size: 64, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !494, line: 149, baseType: !2498, size: 64, offset: 192)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !494, line: 149, size: 64, elements: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2498, file: !494, line: 150, baseType: !492, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2498, file: !494, line: 151, baseType: !303, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2491, file: !494, line: 156, baseType: !678, offset: 256)
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !586, file: !494, line: 159, baseType: !2504, size: 128)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !586, file: !494, line: 159, size: 128, elements: !2505)
!2505 = !{!2506, !2580}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2504, file: !494, line: 161, baseType: !2507, size: 64)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !42, line: 110, size: 1152, elements: !2509)
!2509 = !{!2510, !2520, !2541, !2542, !2553, !2554, !2555, !2567, !2568, !2569}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2508, file: !42, line: 111, baseType: !2511, size: 384)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !42, line: 19, size: 384, elements: !2512)
!2512 = !{!2513, !2515, !2516, !2517, !2518, !2519}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2511, file: !42, line: 20, baseType: !2514, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2511, file: !42, line: 21, baseType: !2514, size: 64, offset: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2511, file: !42, line: 22, baseType: !2514, size: 64, offset: 128)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2511, file: !42, line: 23, baseType: !281, size: 64, offset: 192)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2511, file: !42, line: 24, baseType: !281, size: 64, offset: 256)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2511, file: !42, line: 25, baseType: !281, size: 64, offset: 320)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2508, file: !42, line: 112, baseType: !2521, size: 64, offset: 384)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2523, line: 105, size: 128, elements: !2524)
!2523 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2524 = !{!2525, !2526}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2522, file: !2523, line: 110, baseType: !281, size: 64)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2522, file: !2523, line: 118, baseType: !2527, size: 64, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2523, line: 95, size: 448, elements: !2529)
!2529 = !{!2530, !2531, !2536, !2537, !2538, !2539, !2540}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2528, file: !2523, line: 96, baseType: !928, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2528, file: !2523, line: 97, baseType: !2532, size: 64, offset: 64)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2523, line: 60, baseType: !2534)
!2534 = !DISubroutineType(types: !2535)
!2535 = !{null, !2521}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2528, file: !2523, line: 98, baseType: !2532, size: 64, offset: 128)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2528, file: !2523, line: 99, baseType: !752, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2528, file: !2523, line: 100, baseType: !752, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2528, file: !2523, line: 101, baseType: !1190, size: 128, align: 64, offset: 256)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2528, file: !2523, line: 102, baseType: !2521, size: 64, offset: 384)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2508, file: !42, line: 113, baseType: !2522, size: 128, offset: 448)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2508, file: !42, line: 114, baseType: !2543, size: 192, offset: 576)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2544, line: 26, size: 192, elements: !2545)
!2544 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2545 = !{!2546, !2547}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2543, file: !2544, line: 27, baseType: !7, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2543, file: !2544, line: 28, baseType: !2548, size: 128, offset: 64)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2549, line: 43, size: 128, elements: !2550)
!2549 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2550 = !{!2551, !2552}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2548, file: !2549, line: 44, baseType: !409)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2548, file: !2549, line: 45, baseType: !336, size: 128)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2508, file: !42, line: 115, baseType: !41, size: 32, offset: 768)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2508, file: !42, line: 116, baseType: !7, size: 32, offset: 800)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2508, file: !42, line: 117, baseType: !2556, size: 64, offset: 832)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2558)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !42, line: 67, size: 256, elements: !2559)
!2559 = !{!2560, !2561, !2565, !2566}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2558, file: !42, line: 73, baseType: !2396, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2558, file: !42, line: 78, baseType: !2562, size: 64, offset: 64)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{null, !2507}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2558, file: !42, line: 83, baseType: !2562, size: 64, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2558, file: !42, line: 89, baseType: !547, size: 64, offset: 192)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2508, file: !42, line: 118, baseType: !280, size: 64, offset: 896)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2508, file: !42, line: 119, baseType: !277, size: 32, offset: 960)
!2569 = !DIDerivedType(tag: DW_TAG_member, scope: !2508, file: !42, line: 120, baseType: !2570, size: 128, offset: 1024)
!2570 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2508, file: !42, line: 120, size: 128, elements: !2571)
!2571 = !{!2572, !2578}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2570, file: !42, line: 121, baseType: !2573, size: 128)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2574, line: 6, size: 128, elements: !2575)
!2574 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2575 = !{!2576, !2577}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2573, file: !2574, line: 7, baseType: !343, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2573, file: !2574, line: 8, baseType: !343, size: 64, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2570, file: !42, line: 122, baseType: !2579)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2573, elements: !1879)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2504, file: !494, line: 162, baseType: !280, size: 64, offset: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !586, file: !494, line: 176, baseType: !1190, size: 128, align: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, scope: !582, file: !494, line: 179, baseType: !2583, size: 32, offset: 384)
!2583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !582, file: !494, line: 179, size: 32, elements: !2584)
!2584 = !{!2585, !2586, !2587, !2588}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2583, file: !494, line: 184, baseType: !303, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2583, file: !494, line: 192, baseType: !7, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2583, file: !494, line: 194, baseType: !7, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2583, file: !494, line: 195, baseType: !277, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !582, file: !494, line: 199, baseType: !303, size: 32, offset: 416)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !552, file: !25, line: 522, baseType: !581, size: 64, offset: 512)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !552, file: !25, line: 528, baseType: !2592, size: 64, offset: 576)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !552, file: !25, line: 532, baseType: !2594, size: 64, offset: 640)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !552, file: !25, line: 536, baseType: !2495, size: 64, offset: 704)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !531, file: !25, line: 563, baseType: !2597, size: 64, offset: 320)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DISubroutineType(types: !2599)
!2599 = !{!550, !551, !24}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !531, file: !25, line: 565, baseType: !2601, size: 64, offset: 384)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = !DISubroutineType(types: !2603)
!2603 = !{null, !551, !281, !281}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !531, file: !25, line: 567, baseType: !2605, size: 64, offset: 448)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = !DISubroutineType(types: !2607)
!2607 = !{!281, !500}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !531, file: !25, line: 571, baseType: !547, size: 64, offset: 512)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !531, file: !25, line: 574, baseType: !547, size: 64, offset: 576)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !531, file: !25, line: 579, baseType: !2611, size: 64, offset: 640)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!277, !500, !281, !280, !277, !277}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !531, file: !25, line: 585, baseType: !2615, size: 64, offset: 704)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{!707, !500}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !531, file: !25, line: 615, baseType: !2619, size: 64, offset: 768)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{!581, !500, !281}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !501, file: !494, line: 359, baseType: !281, size: 64, offset: 1216)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !501, file: !494, line: 361, baseType: !1388, size: 64, offset: 1280)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !501, file: !494, line: 362, baseType: !280, size: 64, offset: 1344)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !501, file: !494, line: 365, baseType: !928, size: 64, offset: 1408)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !501, file: !494, line: 373, baseType: !2627, offset: 1472)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !494, line: 296, elements: !352)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !497, file: !494, line: 391, baseType: !455, size: 64, offset: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !497, file: !494, line: 392, baseType: !343, size: 64, offset: 128)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !497, file: !494, line: 394, baseType: !1623, size: 64, offset: 192)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !497, file: !494, line: 398, baseType: !281, size: 64, offset: 256)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !497, file: !494, line: 399, baseType: !281, size: 64, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !497, file: !494, line: 405, baseType: !281, size: 64, offset: 384)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !497, file: !494, line: 406, baseType: !281, size: 64, offset: 448)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !497, file: !494, line: 407, baseType: !2636, size: 64, offset: 512)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !512, line: 286, baseType: !2638)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 286, size: 64, elements: !2639)
!2639 = !{!2640}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2638, file: !512, line: 286, baseType: !2641, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !517, line: 18, baseType: !281)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !497, file: !494, line: 416, baseType: !303, size: 32, offset: 576)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !497, file: !494, line: 428, baseType: !303, size: 32, offset: 608)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !497, file: !494, line: 437, baseType: !303, size: 32, offset: 640)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !497, file: !494, line: 447, baseType: !303, size: 32, offset: 672)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !497, file: !494, line: 450, baseType: !928, size: 64, offset: 704)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !497, file: !494, line: 452, baseType: !277, size: 32, offset: 768)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !497, file: !494, line: 454, baseType: !678, offset: 800)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !497, file: !494, line: 457, baseType: !1095, size: 256, offset: 832)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !497, file: !494, line: 459, baseType: !336, size: 128, offset: 1088)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !497, file: !494, line: 466, baseType: !281, size: 64, offset: 1216)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !497, file: !494, line: 467, baseType: !281, size: 64, offset: 1280)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !497, file: !494, line: 469, baseType: !281, size: 64, offset: 1344)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !497, file: !494, line: 470, baseType: !281, size: 64, offset: 1408)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !497, file: !494, line: 471, baseType: !930, size: 64, offset: 1472)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !497, file: !494, line: 472, baseType: !281, size: 64, offset: 1536)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !497, file: !494, line: 473, baseType: !281, size: 64, offset: 1600)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !497, file: !494, line: 474, baseType: !281, size: 64, offset: 1664)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !497, file: !494, line: 475, baseType: !281, size: 64, offset: 1728)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !497, file: !494, line: 477, baseType: !678, offset: 1792)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !497, file: !494, line: 478, baseType: !281, size: 64, offset: 1792)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !497, file: !494, line: 478, baseType: !281, size: 64, offset: 1856)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !497, file: !494, line: 478, baseType: !281, size: 64, offset: 1920)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !497, file: !494, line: 478, baseType: !281, size: 64, offset: 1984)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !497, file: !494, line: 479, baseType: !281, size: 64, offset: 2048)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !497, file: !494, line: 479, baseType: !281, size: 64, offset: 2112)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !497, file: !494, line: 479, baseType: !281, size: 64, offset: 2176)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !497, file: !494, line: 480, baseType: !281, size: 64, offset: 2240)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !497, file: !494, line: 480, baseType: !281, size: 64, offset: 2304)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !497, file: !494, line: 480, baseType: !281, size: 64, offset: 2368)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !497, file: !494, line: 480, baseType: !281, size: 64, offset: 2432)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !497, file: !494, line: 482, baseType: !2673, size: 2816, offset: 2496)
!2673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 2816, elements: !2674)
!2674 = !{!2675}
!2675 = !DISubrange(count: 44)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !497, file: !494, line: 488, baseType: !2677, size: 256, offset: 5312)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2678, line: 60, size: 256, elements: !2679)
!2678 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2679 = !{!2680}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2677, file: !2678, line: 61, baseType: !2681, size: 256)
!2681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !928, size: 256, elements: !1683)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !497, file: !494, line: 490, baseType: !2683, size: 64, offset: 5568)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64)
!2684 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !494, line: 490, flags: DIFlagFwdDecl)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !497, file: !494, line: 493, baseType: !2686, size: 896, offset: 5632)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2687, line: 53, baseType: !2688)
!2687 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2688 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2687, line: 13, size: 896, elements: !2689)
!2689 = !{!2690, !2691, !2692, !2693, !2696, !2697, !2698, !2699, !2719, !2720, !2721}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2688, file: !2687, line: 18, baseType: !343, size: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2688, file: !2687, line: 28, baseType: !930, size: 64, offset: 64)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2688, file: !2687, line: 31, baseType: !1095, size: 256, offset: 128)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2688, file: !2687, line: 32, baseType: !2694, size: 64, offset: 384)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2687, line: 32, flags: DIFlagFwdDecl)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2688, file: !2687, line: 37, baseType: !276, size: 16, offset: 448)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2688, file: !2687, line: 40, baseType: !924, size: 192, offset: 512)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2688, file: !2687, line: 41, baseType: !280, size: 64, offset: 704)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2688, file: !2687, line: 42, baseType: !2700, size: 64, offset: 768)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2702)
!2702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2703, line: 13, size: 896, elements: !2704)
!2703 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2704 = !{!2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2702, file: !2703, line: 14, baseType: !280, size: 64)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2702, file: !2703, line: 15, baseType: !281, size: 64, offset: 64)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2702, file: !2703, line: 17, baseType: !281, size: 64, offset: 128)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2702, file: !2703, line: 17, baseType: !281, size: 64, offset: 192)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2702, file: !2703, line: 19, baseType: !295, size: 64, offset: 256)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2702, file: !2703, line: 21, baseType: !295, size: 64, offset: 320)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2702, file: !2703, line: 22, baseType: !295, size: 64, offset: 384)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2702, file: !2703, line: 23, baseType: !295, size: 64, offset: 448)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2702, file: !2703, line: 24, baseType: !295, size: 64, offset: 512)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2702, file: !2703, line: 25, baseType: !295, size: 64, offset: 576)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2702, file: !2703, line: 26, baseType: !295, size: 64, offset: 640)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2702, file: !2703, line: 27, baseType: !295, size: 64, offset: 704)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2702, file: !2703, line: 28, baseType: !295, size: 64, offset: 768)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2702, file: !2703, line: 29, baseType: !295, size: 64, offset: 832)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2688, file: !2687, line: 44, baseType: !303, size: 32, offset: 832)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2688, file: !2687, line: 50, baseType: !272, size: 16, offset: 864)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2688, file: !2687, line: 51, baseType: !2722, size: 16, offset: 880)
!2722 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !273, line: 18, baseType: !2723)
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !275, line: 23, baseType: !1765)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !497, file: !494, line: 495, baseType: !281, size: 64, offset: 6528)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !497, file: !494, line: 497, baseType: !2726, size: 64, offset: 6592)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !494, line: 381, size: 384, elements: !2728)
!2728 = !{!2729, !2730, !2736}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2727, file: !494, line: 382, baseType: !303, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2727, file: !494, line: 383, baseType: !2731, size: 128, offset: 64)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !494, line: 376, size: 128, elements: !2732)
!2732 = !{!2733, !2734}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2731, file: !494, line: 377, baseType: !283, size: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2731, file: !494, line: 378, baseType: !2735, size: 64, offset: 64)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2727, file: !494, line: 384, baseType: !2543, size: 192, offset: 192)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !497, file: !494, line: 500, baseType: !678, offset: 6656)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !497, file: !494, line: 501, baseType: !2739, size: 64, offset: 6656)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !494, line: 387, flags: DIFlagFwdDecl)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !497, file: !494, line: 516, baseType: !1260, size: 64, offset: 6720)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !497, file: !494, line: 519, baseType: !1388, size: 64, offset: 6784)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !497, file: !494, line: 521, baseType: !2744, size: 64, offset: 6848)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !494, line: 521, flags: DIFlagFwdDecl)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !497, file: !494, line: 545, baseType: !303, size: 32, offset: 6912)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !497, file: !494, line: 548, baseType: !752, size: 8, offset: 6944)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !497, file: !494, line: 550, baseType: !2749, offset: 6952)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2750, line: 142, elements: !352)
!2750 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !497, file: !494, line: 554, baseType: !1280, size: 256, offset: 6976)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !497, file: !494, line: 557, baseType: !278, size: 32, offset: 7232)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !493, file: !494, line: 565, baseType: !2754, offset: 7296)
!2754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, elements: !2755)
!2755 = !{!2756}
!2756 = !DISubrange(count: -1)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !284, file: !285, line: 758, baseType: !492, size: 64, offset: 3968)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !284, file: !285, line: 761, baseType: !2759, size: 320, offset: 4032)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2678, line: 34, size: 320, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2759, file: !2678, line: 35, baseType: !343, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2759, file: !2678, line: 36, baseType: !2763, size: 256, offset: 64)
!2763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !500, size: 256, elements: !1683)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !284, file: !285, line: 766, baseType: !277, size: 32, offset: 4352)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !284, file: !285, line: 767, baseType: !277, size: 32, offset: 4384)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !284, file: !285, line: 768, baseType: !277, size: 32, offset: 4416)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !284, file: !285, line: 770, baseType: !277, size: 32, offset: 4448)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !284, file: !285, line: 772, baseType: !281, size: 64, offset: 4480)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !284, file: !285, line: 775, baseType: !7, size: 32, offset: 4544)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !284, file: !285, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !284, file: !285, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !284, file: !285, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !284, file: !285, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !284, file: !285, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !284, file: !285, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !284, file: !285, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !284, file: !285, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !284, file: !285, line: 831, baseType: !281, size: 64, offset: 4672)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !284, file: !285, line: 833, baseType: !2780, size: 384, offset: 4736)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !36, line: 25, size: 384, elements: !2781)
!2781 = !{!2782, !2787}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2780, file: !36, line: 26, baseType: !2783, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DISubroutineType(types: !2785)
!2785 = !{!295, !2786}
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2787 = !DIDerivedType(tag: DW_TAG_member, scope: !2780, file: !36, line: 27, baseType: !2788, size: 320, offset: 64)
!2788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2780, file: !36, line: 27, size: 320, elements: !2789)
!2789 = !{!2790, !2800, !2825}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2788, file: !36, line: 36, baseType: !2791, size: 320)
!2791 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2788, file: !36, line: 29, size: 320, elements: !2792)
!2792 = !{!2793, !2795, !2796, !2797, !2798, !2799}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2791, file: !36, line: 30, baseType: !2794, size: 64)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2791, file: !36, line: 31, baseType: !278, size: 32, offset: 64)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2791, file: !36, line: 32, baseType: !278, size: 32, offset: 96)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2791, file: !36, line: 33, baseType: !278, size: 32, offset: 128)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2791, file: !36, line: 34, baseType: !343, size: 64, offset: 192)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2791, file: !36, line: 35, baseType: !2794, size: 64, offset: 256)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2788, file: !36, line: 46, baseType: !2801, size: 192)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2788, file: !36, line: 38, size: 192, elements: !2802)
!2802 = !{!2803, !2804, !2805, !2824}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2801, file: !36, line: 39, baseType: !434, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2801, file: !36, line: 40, baseType: !35, size: 32, offset: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, scope: !2801, file: !36, line: 41, baseType: !2806, size: 64, offset: 64)
!2806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2801, file: !36, line: 41, size: 64, elements: !2807)
!2807 = !{!2808, !2816}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2806, file: !36, line: 42, baseType: !2809, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2811, line: 7, size: 128, elements: !2812)
!2811 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2812 = !{!2813, !2815}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2810, file: !2811, line: 8, baseType: !2814, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !436, line: 93, baseType: !376)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2810, file: !2811, line: 9, baseType: !376, size: 64, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2806, file: !36, line: 43, baseType: !2817, size: 64)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 64)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2819, line: 7, size: 64, elements: !2820)
!2819 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2820 = !{!2821, !2823}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2818, file: !2819, line: 8, baseType: !2822, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2819, line: 5, baseType: !1739)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2818, file: !2819, line: 9, baseType: !1739, size: 32, offset: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2801, file: !36, line: 45, baseType: !343, size: 64, offset: 128)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2788, file: !36, line: 54, baseType: !2826, size: 256)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2788, file: !36, line: 48, size: 256, elements: !2827)
!2827 = !{!2828, !2831, !2832, !2833, !2834}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2826, file: !36, line: 49, baseType: !2829, size: 64)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !36, line: 14, flags: DIFlagFwdDecl)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2826, file: !36, line: 50, baseType: !277, size: 32, offset: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2826, file: !36, line: 51, baseType: !277, size: 32, offset: 96)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2826, file: !36, line: 52, baseType: !281, size: 64, offset: 128)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2826, file: !36, line: 53, baseType: !281, size: 64, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !284, file: !285, line: 835, baseType: !2836, size: 32, offset: 5120)
!2836 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !304, line: 22, baseType: !2837)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !436, line: 28, baseType: !277)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !284, file: !285, line: 836, baseType: !2836, size: 32, offset: 5152)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !284, file: !285, line: 840, baseType: !281, size: 64, offset: 5184)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !284, file: !285, line: 849, baseType: !283, size: 64, offset: 5248)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !284, file: !285, line: 852, baseType: !283, size: 64, offset: 5312)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !284, file: !285, line: 857, baseType: !336, size: 128, offset: 5376)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !284, file: !285, line: 858, baseType: !336, size: 128, offset: 5504)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !284, file: !285, line: 859, baseType: !283, size: 64, offset: 5632)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !284, file: !285, line: 867, baseType: !336, size: 128, offset: 5696)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !284, file: !285, line: 868, baseType: !336, size: 128, offset: 5824)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !284, file: !285, line: 871, baseType: !1675, size: 64, offset: 5952)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !284, file: !285, line: 872, baseType: !2849, size: 512, offset: 6016)
!2849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !808, size: 512, elements: !1683)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !284, file: !285, line: 873, baseType: !336, size: 128, offset: 6528)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !284, file: !285, line: 874, baseType: !336, size: 128, offset: 6656)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !284, file: !285, line: 876, baseType: !2853, size: 64, offset: 6784)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !284, file: !285, line: 879, baseType: !876, size: 64, offset: 6848)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !284, file: !285, line: 882, baseType: !876, size: 64, offset: 6912)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !284, file: !285, line: 884, baseType: !343, size: 64, offset: 6976)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !284, file: !285, line: 885, baseType: !343, size: 64, offset: 7040)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !284, file: !285, line: 890, baseType: !343, size: 64, offset: 7104)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !284, file: !285, line: 891, baseType: !2860, size: 128, offset: 7168)
!2860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !285, line: 242, size: 128, elements: !2861)
!2861 = !{!2862, !2863, !2864}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2860, file: !285, line: 244, baseType: !343, size: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2860, file: !285, line: 245, baseType: !343, size: 64, offset: 64)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2860, file: !285, line: 246, baseType: !409, offset: 128)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !284, file: !285, line: 900, baseType: !281, size: 64, offset: 7296)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !284, file: !285, line: 901, baseType: !281, size: 64, offset: 7360)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !284, file: !285, line: 904, baseType: !343, size: 64, offset: 7424)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !284, file: !285, line: 907, baseType: !343, size: 64, offset: 7488)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !284, file: !285, line: 910, baseType: !281, size: 64, offset: 7552)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !284, file: !285, line: 911, baseType: !281, size: 64, offset: 7616)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !284, file: !285, line: 914, baseType: !2872, size: 640, offset: 7680)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2873, line: 123, size: 640, elements: !2874)
!2873 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2874 = !{!2875, !2881, !2882}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2872, file: !2873, line: 124, baseType: !2876, size: 576)
!2876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2877, size: 576, elements: !820)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2873, line: 108, size: 192, elements: !2878)
!2878 = !{!2879, !2880}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2877, file: !2873, line: 109, baseType: !343, size: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2877, file: !2873, line: 110, baseType: !449, size: 128, offset: 64)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2872, file: !2873, line: 125, baseType: !7, size: 32, offset: 576)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2872, file: !2873, line: 126, baseType: !7, size: 32, offset: 608)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !284, file: !285, line: 917, baseType: !2884, size: 192, offset: 8320)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2873, line: 134, size: 192, elements: !2885)
!2885 = !{!2886, !2887}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2884, file: !2873, line: 135, baseType: !1190, size: 128, align: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2884, file: !2873, line: 136, baseType: !7, size: 32, offset: 128)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !284, file: !285, line: 923, baseType: !1701, size: 64, offset: 8512)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !284, file: !285, line: 926, baseType: !1701, size: 64, offset: 8576)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !284, file: !285, line: 929, baseType: !1701, size: 64, offset: 8640)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !284, file: !285, line: 933, baseType: !1731, size: 64, offset: 8704)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !284, file: !285, line: 943, baseType: !2893, size: 128, offset: 8768)
!2893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 128, elements: !1224)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !284, file: !285, line: 945, baseType: !2895, size: 64, offset: 8896)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !285, line: 49, flags: DIFlagFwdDecl)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !284, file: !285, line: 956, baseType: !2898, size: 64, offset: 8960)
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 64)
!2899 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !285, line: 45, flags: DIFlagFwdDecl)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !284, file: !285, line: 959, baseType: !2901, size: 64, offset: 9024)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !285, line: 959, flags: DIFlagFwdDecl)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !284, file: !285, line: 962, baseType: !2904, size: 64, offset: 9088)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !285, line: 66, flags: DIFlagFwdDecl)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !284, file: !285, line: 966, baseType: !2907, size: 64, offset: 9152)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !285, line: 50, flags: DIFlagFwdDecl)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !284, file: !285, line: 969, baseType: !2910, size: 64, offset: 9216)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2912, line: 82, size: 7296, elements: !2913)
!2912 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2913 = !{!2914, !2915, !2916, !2917, !2918, !2919, !2920, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2949, !2958, !2959, !2961, !2962, !2963, !2966, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2996, !2997, !3004, !3005, !3006, !3007, !3008, !3009}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2911, file: !2912, line: 83, baseType: !298, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2911, file: !2912, line: 84, baseType: !303, size: 32, offset: 32)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2911, file: !2912, line: 85, baseType: !277, size: 32, offset: 64)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2911, file: !2912, line: 86, baseType: !336, size: 128, offset: 128)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2911, file: !2912, line: 88, baseType: !1171, size: 128, offset: 256)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2911, file: !2912, line: 91, baseType: !283, size: 64, offset: 384)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2911, file: !2912, line: 94, baseType: !2921, size: 192, offset: 448)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2922, line: 30, size: 192, elements: !2923)
!2922 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2923 = !{!2924, !2925}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2921, file: !2922, line: 31, baseType: !336, size: 128)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2921, file: !2922, line: 32, baseType: !2926, size: 64, offset: 128)
!2926 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2927, line: 25, baseType: !2928)
!2927 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2927, line: 23, size: 64, elements: !2929)
!2929 = !{!2930}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2928, file: !2927, line: 24, baseType: !484, size: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2911, file: !2912, line: 97, baseType: !804, size: 64, offset: 640)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2911, file: !2912, line: 100, baseType: !277, size: 32, offset: 704)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2911, file: !2912, line: 106, baseType: !277, size: 32, offset: 736)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2911, file: !2912, line: 107, baseType: !283, size: 64, offset: 768)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2911, file: !2912, line: 110, baseType: !277, size: 32, offset: 832)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2911, file: !2912, line: 111, baseType: !7, size: 32, offset: 864)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2911, file: !2912, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2911, file: !2912, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2911, file: !2912, line: 128, baseType: !277, size: 32, offset: 928)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2911, file: !2912, line: 129, baseType: !336, size: 128, offset: 960)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2911, file: !2912, line: 132, baseType: !384, size: 512, offset: 1088)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2911, file: !2912, line: 133, baseType: !392, size: 64, offset: 1600)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2911, file: !2912, line: 140, baseType: !2944, size: 256, offset: 1664)
!2944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2945, size: 256, elements: !1723)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2912, line: 38, size: 128, elements: !2946)
!2946 = !{!2947, !2948}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2945, file: !2912, line: 39, baseType: !343, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2945, file: !2912, line: 40, baseType: !343, size: 64, offset: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2911, file: !2912, line: 146, baseType: !2950, size: 192, offset: 1920)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2912, line: 66, size: 192, elements: !2951)
!2951 = !{!2952}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2950, file: !2912, line: 67, baseType: !2953, size: 192)
!2953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2912, line: 47, size: 192, elements: !2954)
!2954 = !{!2955, !2956, !2957}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2953, file: !2912, line: 48, baseType: !930, size: 64)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2953, file: !2912, line: 49, baseType: !930, size: 64, offset: 64)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2953, file: !2912, line: 50, baseType: !930, size: 64, offset: 128)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2911, file: !2912, line: 150, baseType: !2872, size: 640, offset: 2112)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2911, file: !2912, line: 153, baseType: !2960, size: 256, offset: 2752)
!2960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1675, size: 256, elements: !1683)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2911, file: !2912, line: 159, baseType: !1675, size: 64, offset: 3008)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2911, file: !2912, line: 162, baseType: !277, size: 32, offset: 3072)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2911, file: !2912, line: 164, baseType: !2964, size: 64, offset: 3136)
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 64)
!2965 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2912, line: 164, flags: DIFlagFwdDecl)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2911, file: !2912, line: 175, baseType: !2967, size: 32, offset: 3200)
!2967 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !439, line: 805, baseType: !2968)
!2968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !439, line: 798, size: 32, elements: !2969)
!2969 = !{!2970, !2971}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2968, file: !439, line: 803, baseType: !634, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2968, file: !439, line: 804, baseType: !678, offset: 32)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2911, file: !2912, line: 176, baseType: !343, size: 64, offset: 3264)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2911, file: !2912, line: 176, baseType: !343, size: 64, offset: 3328)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2911, file: !2912, line: 176, baseType: !343, size: 64, offset: 3392)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2911, file: !2912, line: 176, baseType: !343, size: 64, offset: 3456)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2911, file: !2912, line: 177, baseType: !343, size: 64, offset: 3520)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2911, file: !2912, line: 178, baseType: !343, size: 64, offset: 3584)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2911, file: !2912, line: 179, baseType: !2860, size: 128, offset: 3648)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2911, file: !2912, line: 180, baseType: !281, size: 64, offset: 3776)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2911, file: !2912, line: 180, baseType: !281, size: 64, offset: 3840)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2911, file: !2912, line: 180, baseType: !281, size: 64, offset: 3904)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2911, file: !2912, line: 180, baseType: !281, size: 64, offset: 3968)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2911, file: !2912, line: 181, baseType: !281, size: 64, offset: 4032)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2911, file: !2912, line: 181, baseType: !281, size: 64, offset: 4096)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2911, file: !2912, line: 181, baseType: !281, size: 64, offset: 4160)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2911, file: !2912, line: 181, baseType: !281, size: 64, offset: 4224)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2911, file: !2912, line: 182, baseType: !281, size: 64, offset: 4288)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2911, file: !2912, line: 182, baseType: !281, size: 64, offset: 4352)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2911, file: !2912, line: 182, baseType: !281, size: 64, offset: 4416)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2911, file: !2912, line: 182, baseType: !281, size: 64, offset: 4480)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2911, file: !2912, line: 183, baseType: !281, size: 64, offset: 4544)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2911, file: !2912, line: 183, baseType: !281, size: 64, offset: 4608)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2911, file: !2912, line: 184, baseType: !2994, offset: 4672)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2995, line: 12, elements: !352)
!2995 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2911, file: !2912, line: 192, baseType: !345, size: 64, offset: 4672)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2911, file: !2912, line: 203, baseType: !2998, size: 2048, offset: 4736)
!2998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2999, size: 2048, elements: !1224)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3000, line: 43, size: 128, elements: !3001)
!3000 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3001 = !{!3002, !3003}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2999, file: !3000, line: 44, baseType: !1422, size: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2999, file: !3000, line: 45, baseType: !1422, size: 64, offset: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2911, file: !2912, line: 220, baseType: !752, size: 8, offset: 6784)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2911, file: !2912, line: 221, baseType: !1765, size: 16, offset: 6800)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2911, file: !2912, line: 222, baseType: !1765, size: 16, offset: 6816)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2911, file: !2912, line: 224, baseType: !492, size: 64, offset: 6848)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2911, file: !2912, line: 227, baseType: !924, size: 192, offset: 6912)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2911, file: !2912, line: 233, baseType: !924, size: 192, offset: 7104)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !284, file: !285, line: 970, baseType: !3011, size: 64, offset: 9280)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2912, line: 20, size: 16576, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3012, file: !2912, line: 21, baseType: !678)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3012, file: !2912, line: 22, baseType: !298, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3012, file: !2912, line: 23, baseType: !1171, size: 128, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3012, file: !2912, line: 24, baseType: !3018, size: 16384, offset: 192)
!3018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3019, size: 16384, elements: !2058)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2922, line: 49, size: 256, elements: !3020)
!3020 = !{!3021}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3019, file: !2922, line: 50, baseType: !3022, size: 256)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2922, line: 35, size: 256, elements: !3023)
!3023 = !{!3024, !3031, !3032, !3038}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3022, file: !2922, line: 37, baseType: !3025, size: 64)
!3025 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3026, line: 19, baseType: !3027)
!3026 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3026, line: 18, baseType: !3029)
!3029 = !DISubroutineType(types: !3030)
!3030 = !{null, !277}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3022, file: !2922, line: 38, baseType: !281, size: 64, offset: 64)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3022, file: !2922, line: 44, baseType: !3033, size: 64, offset: 128)
!3033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3026, line: 22, baseType: !3034)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3026, line: 21, baseType: !3036)
!3036 = !DISubroutineType(types: !3037)
!3037 = !{null}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3022, file: !2922, line: 46, baseType: !2926, size: 64, offset: 192)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !284, file: !285, line: 971, baseType: !2926, size: 64, offset: 9344)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !284, file: !285, line: 972, baseType: !2926, size: 64, offset: 9408)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !284, file: !285, line: 974, baseType: !2926, size: 64, offset: 9472)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !284, file: !285, line: 975, baseType: !2921, size: 192, offset: 9536)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !284, file: !285, line: 976, baseType: !281, size: 64, offset: 9728)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !284, file: !285, line: 977, baseType: !1420, size: 64, offset: 9792)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !284, file: !285, line: 978, baseType: !7, size: 32, offset: 9856)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !284, file: !285, line: 980, baseType: !1193, size: 64, offset: 9920)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !284, file: !285, line: 989, baseType: !3048, size: 128, offset: 9984)
!3048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3049, line: 35, size: 128, elements: !3050)
!3049 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3050 = !{!3051, !3052, !3053}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3048, file: !3049, line: 36, baseType: !277, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3048, file: !3049, line: 37, baseType: !303, size: 32, offset: 32)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3048, file: !3049, line: 38, baseType: !3054, size: 64, offset: 64)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3049, line: 23, flags: DIFlagFwdDecl)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !284, file: !285, line: 992, baseType: !343, size: 64, offset: 10112)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !284, file: !285, line: 993, baseType: !343, size: 64, offset: 10176)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !284, file: !285, line: 996, baseType: !678, offset: 10240)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !284, file: !285, line: 999, baseType: !409, offset: 10240)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !284, file: !285, line: 1001, baseType: !3061, size: 64, offset: 10240)
!3061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !285, line: 636, size: 64, elements: !3062)
!3062 = !{!3063}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3061, file: !285, line: 637, baseType: !3064, size: 64)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !284, file: !285, line: 1005, baseType: !452, size: 128, offset: 10304)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !284, file: !285, line: 1007, baseType: !283, size: 64, offset: 10432)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !284, file: !285, line: 1009, baseType: !3068, size: 64, offset: 10496)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3069 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !285, line: 1009, flags: DIFlagFwdDecl)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !284, file: !285, line: 1043, baseType: !280, size: 64, offset: 10560)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !284, file: !285, line: 1046, baseType: !3072, size: 64, offset: 10624)
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3073, size: 64)
!3073 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !285, line: 41, flags: DIFlagFwdDecl)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !284, file: !285, line: 1050, baseType: !3075, size: 64, offset: 10688)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 64)
!3076 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !285, line: 42, flags: DIFlagFwdDecl)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !284, file: !285, line: 1054, baseType: !3078, size: 64, offset: 10752)
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3079 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !285, line: 55, flags: DIFlagFwdDecl)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !284, file: !285, line: 1056, baseType: !1118, size: 64, offset: 10816)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !284, file: !285, line: 1058, baseType: !3082, size: 64, offset: 10880)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3084, line: 99, size: 704, elements: !3085)
!3084 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3085 = !{!3086, !3087, !3088, !3089, !3090, !3091, !3092, !3111, !3112}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3083, file: !3084, line: 100, baseType: !928, size: 64)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3083, file: !3084, line: 101, baseType: !303, size: 32, offset: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3083, file: !3084, line: 102, baseType: !303, size: 32, offset: 96)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3083, file: !3084, line: 105, baseType: !678, offset: 128)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3083, file: !3084, line: 107, baseType: !276, size: 16, offset: 128)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3083, file: !3084, line: 109, baseType: !2198, size: 128, offset: 192)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3083, file: !3084, line: 110, baseType: !3093, size: 64, offset: 320)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3084, line: 73, size: 448, elements: !3095)
!3095 = !{!3096, !3099, !3100, !3105, !3110}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3094, file: !3084, line: 74, baseType: !3097, size: 64)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3098 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3084, line: 74, flags: DIFlagFwdDecl)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3094, file: !3084, line: 75, baseType: !3082, size: 64, offset: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, scope: !3094, file: !3084, line: 83, baseType: !3101, size: 128, offset: 128)
!3101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3094, file: !3084, line: 83, size: 128, elements: !3102)
!3102 = !{!3103, !3104}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3101, file: !3084, line: 84, baseType: !336, size: 128)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3101, file: !3084, line: 85, baseType: !2462, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_member, scope: !3094, file: !3084, line: 87, baseType: !3106, size: 128, offset: 256)
!3106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3094, file: !3084, line: 87, size: 128, elements: !3107)
!3107 = !{!3108, !3109}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3106, file: !3084, line: 88, baseType: !808, size: 128)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3106, file: !3084, line: 89, baseType: !1190, size: 128, align: 64)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3094, file: !3084, line: 92, baseType: !7, size: 32, offset: 384)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3083, file: !3084, line: 111, baseType: !804, size: 64, offset: 384)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3083, file: !3084, line: 113, baseType: !1280, size: 256, offset: 448)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !284, file: !285, line: 1061, baseType: !3114, size: 64, offset: 10944)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !285, line: 43, flags: DIFlagFwdDecl)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !284, file: !285, line: 1064, baseType: !281, size: 64, offset: 11008)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !284, file: !285, line: 1065, baseType: !3118, size: 64, offset: 11072)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2922, line: 14, baseType: !3120)
!3120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2922, line: 12, size: 384, elements: !3121)
!3121 = !{!3122}
!3122 = !DIDerivedType(tag: DW_TAG_member, scope: !3120, file: !2922, line: 13, baseType: !3123, size: 384)
!3123 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3120, file: !2922, line: 13, size: 384, elements: !3124)
!3124 = !{!3125, !3126, !3127, !3128}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3123, file: !2922, line: 13, baseType: !277, size: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3123, file: !2922, line: 13, baseType: !277, size: 32, offset: 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3123, file: !2922, line: 13, baseType: !277, size: 32, offset: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3123, file: !2922, line: 13, baseType: !3129, size: 256, offset: 128)
!3129 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3130, line: 32, size: 256, elements: !3131)
!3130 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3131 = !{!3132, !3137, !3150, !3156, !3165, !3185, !3190}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3129, file: !3130, line: 37, baseType: !3133, size: 64)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3129, file: !3130, line: 34, size: 64, elements: !3134)
!3134 = !{!3135, !3136}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3133, file: !3130, line: 35, baseType: !2837, size: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3133, file: !3130, line: 36, baseType: !610, size: 32, offset: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3129, file: !3130, line: 45, baseType: !3138, size: 192)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3129, file: !3130, line: 40, size: 192, elements: !3139)
!3139 = !{!3140, !3142, !3143, !3149}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3138, file: !3130, line: 41, baseType: !3141, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !436, line: 95, baseType: !277)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3138, file: !3130, line: 42, baseType: !277, size: 32, offset: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3138, file: !3130, line: 43, baseType: !3144, size: 64, offset: 64)
!3144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3130, line: 11, baseType: !3145)
!3145 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3130, line: 8, size: 64, elements: !3146)
!3146 = !{!3147, !3148}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3145, file: !3130, line: 9, baseType: !277, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3145, file: !3130, line: 10, baseType: !280, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3138, file: !3130, line: 44, baseType: !277, size: 32, offset: 128)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3129, file: !3130, line: 52, baseType: !3151, size: 128)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3129, file: !3130, line: 48, size: 128, elements: !3152)
!3152 = !{!3153, !3154, !3155}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3151, file: !3130, line: 49, baseType: !2837, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3151, file: !3130, line: 50, baseType: !610, size: 32, offset: 32)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3151, file: !3130, line: 51, baseType: !3144, size: 64, offset: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3129, file: !3130, line: 61, baseType: !3157, size: 256)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3129, file: !3130, line: 55, size: 256, elements: !3158)
!3158 = !{!3159, !3160, !3161, !3162, !3164}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3157, file: !3130, line: 56, baseType: !2837, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3157, file: !3130, line: 57, baseType: !610, size: 32, offset: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3157, file: !3130, line: 58, baseType: !277, size: 32, offset: 64)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3157, file: !3130, line: 59, baseType: !3163, size: 64, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !436, line: 94, baseType: !1419)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3157, file: !3130, line: 60, baseType: !3163, size: 64, offset: 192)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3129, file: !3130, line: 95, baseType: !3166, size: 256)
!3166 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3129, file: !3130, line: 64, size: 256, elements: !3167)
!3167 = !{!3168, !3169}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3166, file: !3130, line: 65, baseType: !280, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, scope: !3166, file: !3130, line: 77, baseType: !3170, size: 192, offset: 64)
!3170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3166, file: !3130, line: 77, size: 192, elements: !3171)
!3171 = !{!3172, !3173, !3180}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3170, file: !3130, line: 82, baseType: !1765, size: 16)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3170, file: !3130, line: 88, baseType: !3174, size: 192)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3170, file: !3130, line: 84, size: 192, elements: !3175)
!3175 = !{!3176, !3178, !3179}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3174, file: !3130, line: 85, baseType: !3177, size: 64)
!3177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 64, elements: !430)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3174, file: !3130, line: 86, baseType: !280, size: 64, offset: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3174, file: !3130, line: 87, baseType: !280, size: 64, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3170, file: !3130, line: 93, baseType: !3181, size: 96)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3170, file: !3130, line: 90, size: 96, elements: !3182)
!3182 = !{!3183, !3184}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3181, file: !3130, line: 91, baseType: !3177, size: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3181, file: !3130, line: 92, baseType: !279, size: 32, offset: 64)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3129, file: !3130, line: 101, baseType: !3186, size: 128)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3129, file: !3130, line: 98, size: 128, elements: !3187)
!3187 = !{!3188, !3189}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3186, file: !3130, line: 99, baseType: !295, size: 64)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3186, file: !3130, line: 100, baseType: !277, size: 32, offset: 64)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3129, file: !3130, line: 108, baseType: !3191, size: 128)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3129, file: !3130, line: 104, size: 128, elements: !3192)
!3192 = !{!3193, !3194, !3195}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3191, file: !3130, line: 105, baseType: !280, size: 64)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3191, file: !3130, line: 106, baseType: !277, size: 32, offset: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3191, file: !3130, line: 107, baseType: !7, size: 32, offset: 96)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !284, file: !285, line: 1067, baseType: !2994, offset: 11136)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !284, file: !285, line: 1099, baseType: !3198, size: 64, offset: 11136)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !285, line: 56, flags: DIFlagFwdDecl)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !284, file: !285, line: 1103, baseType: !336, size: 128, offset: 11200)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !284, file: !285, line: 1104, baseType: !3202, size: 64, offset: 11328)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 64)
!3203 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !285, line: 46, flags: DIFlagFwdDecl)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !284, file: !285, line: 1105, baseType: !924, size: 192, offset: 11392)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !284, file: !285, line: 1106, baseType: !7, size: 32, offset: 11584)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !284, file: !285, line: 1109, baseType: !3207, size: 128, offset: 11648)
!3207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3208, size: 128, elements: !1723)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 64)
!3209 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !285, line: 51, flags: DIFlagFwdDecl)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !284, file: !285, line: 1110, baseType: !924, size: 192, offset: 11776)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !284, file: !285, line: 1111, baseType: !336, size: 128, offset: 11968)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !284, file: !285, line: 1173, baseType: !3213, size: 64, offset: 12096)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3215, line: 62, size: 256, align: 256, elements: !3216)
!3215 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3216 = !{!3217, !3218, !3219, !3224}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3214, file: !3215, line: 75, baseType: !279, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3214, file: !3215, line: 90, baseType: !279, size: 32, offset: 32)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3214, file: !3215, line: 124, baseType: !3220, size: 64, offset: 64)
!3220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3214, file: !3215, line: 109, size: 64, elements: !3221)
!3221 = !{!3222, !3223}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3220, file: !3215, line: 110, baseType: !344, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3220, file: !3215, line: 112, baseType: !344, size: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3214, file: !3215, line: 144, baseType: !279, size: 32, offset: 128)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !284, file: !285, line: 1174, baseType: !278, size: 32, offset: 12160)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !284, file: !285, line: 1179, baseType: !281, size: 64, offset: 12224)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !284, file: !285, line: 1182, baseType: !3228, size: 128, offset: 12288)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2678, line: 76, size: 128, elements: !3229)
!3229 = !{!3230, !3235, !3236}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3228, file: !2678, line: 85, baseType: !3231, size: 64)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3232, line: 7, size: 64, elements: !3233)
!3232 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3233 = !{!3234}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3231, file: !3232, line: 12, baseType: !481, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3228, file: !2678, line: 88, baseType: !752, size: 8, offset: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3228, file: !2678, line: 95, baseType: !752, size: 8, offset: 72)
!3237 = !DIDerivedType(tag: DW_TAG_member, scope: !284, file: !285, line: 1184, baseType: !3238, size: 128, offset: 12416)
!3238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !284, file: !285, line: 1184, size: 128, elements: !3239)
!3239 = !{!3240, !3241}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3238, file: !285, line: 1185, baseType: !298, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3238, file: !285, line: 1186, baseType: !1190, size: 128, align: 64)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !284, file: !285, line: 1190, baseType: !1635, size: 64, offset: 12544)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !284, file: !285, line: 1192, baseType: !3244, size: 128, offset: 12608)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2678, line: 64, size: 128, elements: !3245)
!3245 = !{!3246, !3247, !3248}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3244, file: !2678, line: 65, baseType: !581, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3244, file: !2678, line: 67, baseType: !279, size: 32, offset: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3244, file: !2678, line: 68, baseType: !279, size: 32, offset: 96)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !284, file: !285, line: 1206, baseType: !277, size: 32, offset: 12736)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !284, file: !285, line: 1207, baseType: !277, size: 32, offset: 12768)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !284, file: !285, line: 1209, baseType: !281, size: 64, offset: 12800)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !284, file: !285, line: 1219, baseType: !343, size: 64, offset: 12864)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !284, file: !285, line: 1220, baseType: !343, size: 64, offset: 12928)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !284, file: !285, line: 1317, baseType: !277, size: 32, offset: 12992)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !284, file: !285, line: 1319, baseType: !283, size: 64, offset: 13056)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !284, file: !285, line: 1322, baseType: !3257, size: 64, offset: 13120)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3259, line: 56, size: 512, elements: !3260)
!3259 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3260 = !{!3261, !3262, !3263, !3264, !3265, !3266, !3267, !3269}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3258, file: !3259, line: 57, baseType: !3257, size: 64)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3258, file: !3259, line: 58, baseType: !280, size: 64, offset: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3258, file: !3259, line: 59, baseType: !281, size: 64, offset: 128)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3258, file: !3259, line: 60, baseType: !281, size: 64, offset: 192)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3258, file: !3259, line: 61, baseType: !2377, size: 64, offset: 256)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3258, file: !3259, line: 62, baseType: !7, size: 32, offset: 320)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3258, file: !3259, line: 63, baseType: !3268, size: 64, offset: 384)
!3268 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !304, line: 153, baseType: !343)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3258, file: !3259, line: 64, baseType: !2149, size: 64, offset: 448)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !284, file: !285, line: 1326, baseType: !298, size: 32, offset: 13184)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !284, file: !285, line: 1342, baseType: !280, size: 64, offset: 13248)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !284, file: !285, line: 1343, baseType: !344, size: 64, offset: 13312)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !284, file: !285, line: 1344, baseType: !343, size: 64, offset: 13376)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !284, file: !285, line: 1345, baseType: !344, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !284, file: !285, line: 1346, baseType: !344, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !284, file: !285, line: 1347, baseType: !344, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !284, file: !285, line: 1348, baseType: !1190, size: 128, align: 64, offset: 13504)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !284, file: !285, line: 1358, baseType: !3279, size: 34816, offset: 13824)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3280, line: 485, size: 34816, elements: !3281)
!3280 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3281 = !{!3282, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3311, !3312, !3313, !3314, !3315, !3316, !3319, !3320, !3321}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3279, file: !3280, line: 487, baseType: !3283, size: 192)
!3283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3284, size: 192, elements: !820)
!3284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3285, line: 16, size: 64, elements: !3286)
!3285 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3286 = !{!3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3284, file: !3285, line: 17, baseType: !272, size: 16)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3284, file: !3285, line: 18, baseType: !272, size: 16, offset: 16)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3284, file: !3285, line: 19, baseType: !272, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3284, file: !3285, line: 19, baseType: !272, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3284, file: !3285, line: 19, baseType: !272, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3284, file: !3285, line: 19, baseType: !272, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3284, file: !3285, line: 19, baseType: !272, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3284, file: !3285, line: 20, baseType: !272, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3284, file: !3285, line: 20, baseType: !272, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3284, file: !3285, line: 20, baseType: !272, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3284, file: !3285, line: 20, baseType: !272, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3284, file: !3285, line: 20, baseType: !272, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3284, file: !3285, line: 20, baseType: !272, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3279, file: !3280, line: 491, baseType: !281, size: 64, offset: 192)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3279, file: !3280, line: 495, baseType: !276, size: 16, offset: 256)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3279, file: !3280, line: 496, baseType: !276, size: 16, offset: 272)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3279, file: !3280, line: 497, baseType: !276, size: 16, offset: 288)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3279, file: !3280, line: 498, baseType: !276, size: 16, offset: 304)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3279, file: !3280, line: 502, baseType: !281, size: 64, offset: 320)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3279, file: !3280, line: 503, baseType: !281, size: 64, offset: 384)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3279, file: !3280, line: 514, baseType: !3308, size: 256, offset: 448)
!3308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3309, size: 256, elements: !1683)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3280, line: 483, flags: DIFlagFwdDecl)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3279, file: !3280, line: 516, baseType: !281, size: 64, offset: 704)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3279, file: !3280, line: 518, baseType: !281, size: 64, offset: 768)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3279, file: !3280, line: 520, baseType: !281, size: 64, offset: 832)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3279, file: !3280, line: 521, baseType: !281, size: 64, offset: 896)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3279, file: !3280, line: 522, baseType: !281, size: 64, offset: 960)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3279, file: !3280, line: 528, baseType: !3317, size: 64, offset: 1024)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3280, line: 10, flags: DIFlagFwdDecl)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3279, file: !3280, line: 535, baseType: !281, size: 64, offset: 1088)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3279, file: !3280, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3279, file: !3280, line: 540, baseType: !3322, size: 33280, offset: 1536)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3323, line: 317, size: 33280, elements: !3324)
!3323 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3324 = !{!3325, !3326, !3327}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3322, file: !3323, line: 330, baseType: !7, size: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3322, file: !3323, line: 337, baseType: !281, size: 64, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3322, file: !3323, line: 348, baseType: !3328, size: 32768, offset: 512)
!3328 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3323, line: 304, size: 32768, elements: !3329)
!3329 = !{!3330, !3345, !3382, !3432, !3445}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3328, file: !3323, line: 305, baseType: !3331, size: 896)
!3331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3323, line: 12, size: 896, elements: !3332)
!3332 = !{!3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3344}
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3331, file: !3323, line: 13, baseType: !278, size: 32)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3331, file: !3323, line: 14, baseType: !278, size: 32, offset: 32)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3331, file: !3323, line: 15, baseType: !278, size: 32, offset: 64)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3331, file: !3323, line: 16, baseType: !278, size: 32, offset: 96)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3331, file: !3323, line: 17, baseType: !278, size: 32, offset: 128)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3331, file: !3323, line: 18, baseType: !278, size: 32, offset: 160)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3331, file: !3323, line: 19, baseType: !278, size: 32, offset: 192)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3331, file: !3323, line: 22, baseType: !3341, size: 640, offset: 224)
!3341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 640, elements: !3342)
!3342 = !{!3343}
!3343 = !DISubrange(count: 20)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3331, file: !3323, line: 25, baseType: !278, size: 32, offset: 864)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3328, file: !3323, line: 306, baseType: !3346, size: 4096, align: 128)
!3346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3323, line: 34, size: 4096, align: 128, elements: !3347)
!3347 = !{!3348, !3349, !3350, !3351, !3352, !3367, !3368, !3369, !3371, !3373, !3377}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3346, file: !3323, line: 35, baseType: !272, size: 16)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3346, file: !3323, line: 36, baseType: !272, size: 16, offset: 16)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3346, file: !3323, line: 37, baseType: !272, size: 16, offset: 32)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3346, file: !3323, line: 38, baseType: !272, size: 16, offset: 48)
!3352 = !DIDerivedType(tag: DW_TAG_member, scope: !3346, file: !3323, line: 39, baseType: !3353, size: 128, offset: 64)
!3353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3346, file: !3323, line: 39, size: 128, elements: !3354)
!3354 = !{!3355, !3360}
!3355 = !DIDerivedType(tag: DW_TAG_member, scope: !3353, file: !3323, line: 40, baseType: !3356, size: 128)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3353, file: !3323, line: 40, size: 128, elements: !3357)
!3357 = !{!3358, !3359}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3356, file: !3323, line: 41, baseType: !343, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3356, file: !3323, line: 42, baseType: !343, size: 64, offset: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, scope: !3353, file: !3323, line: 44, baseType: !3361, size: 128)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3353, file: !3323, line: 44, size: 128, elements: !3362)
!3362 = !{!3363, !3364, !3365, !3366}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3361, file: !3323, line: 45, baseType: !278, size: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3361, file: !3323, line: 46, baseType: !278, size: 32, offset: 32)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3361, file: !3323, line: 47, baseType: !278, size: 32, offset: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3361, file: !3323, line: 48, baseType: !278, size: 32, offset: 96)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3346, file: !3323, line: 51, baseType: !278, size: 32, offset: 192)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3346, file: !3323, line: 52, baseType: !278, size: 32, offset: 224)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3346, file: !3323, line: 55, baseType: !3370, size: 1024, offset: 256)
!3370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 1024, elements: !665)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3346, file: !3323, line: 58, baseType: !3372, size: 2048, offset: 1280)
!3372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 2048, elements: !2058)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3346, file: !3323, line: 60, baseType: !3374, size: 384, offset: 3328)
!3374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 384, elements: !3375)
!3375 = !{!3376}
!3376 = !DISubrange(count: 12)
!3377 = !DIDerivedType(tag: DW_TAG_member, scope: !3346, file: !3323, line: 62, baseType: !3378, size: 384, offset: 3712)
!3378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3346, file: !3323, line: 62, size: 384, elements: !3379)
!3379 = !{!3380, !3381}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3378, file: !3323, line: 63, baseType: !3374, size: 384)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3378, file: !3323, line: 64, baseType: !3374, size: 384)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3328, file: !3323, line: 307, baseType: !3383, size: 1088)
!3383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3323, line: 79, size: 1088, elements: !3384)
!3384 = !{!3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3431}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3383, file: !3323, line: 80, baseType: !278, size: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3383, file: !3323, line: 81, baseType: !278, size: 32, offset: 32)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3383, file: !3323, line: 82, baseType: !278, size: 32, offset: 64)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3383, file: !3323, line: 83, baseType: !278, size: 32, offset: 96)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3383, file: !3323, line: 84, baseType: !278, size: 32, offset: 128)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3383, file: !3323, line: 85, baseType: !278, size: 32, offset: 160)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3383, file: !3323, line: 86, baseType: !278, size: 32, offset: 192)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3383, file: !3323, line: 88, baseType: !3341, size: 640, offset: 224)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3383, file: !3323, line: 89, baseType: !465, size: 8, offset: 864)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3383, file: !3323, line: 90, baseType: !465, size: 8, offset: 872)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3383, file: !3323, line: 91, baseType: !465, size: 8, offset: 880)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3383, file: !3323, line: 92, baseType: !465, size: 8, offset: 888)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3383, file: !3323, line: 93, baseType: !465, size: 8, offset: 896)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3383, file: !3323, line: 94, baseType: !465, size: 8, offset: 904)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3383, file: !3323, line: 95, baseType: !3400, size: 64, offset: 960)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3402, line: 11, size: 128, elements: !3403)
!3402 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3403 = !{!3404, !3405}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3401, file: !3402, line: 12, baseType: !295, size: 64)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3401, file: !3402, line: 13, baseType: !3406, size: 64, offset: 64)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3408, line: 56, size: 1344, elements: !3409)
!3408 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3409 = !{!3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3407, file: !3408, line: 61, baseType: !281, size: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3407, file: !3408, line: 62, baseType: !281, size: 64, offset: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3407, file: !3408, line: 63, baseType: !281, size: 64, offset: 128)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3407, file: !3408, line: 64, baseType: !281, size: 64, offset: 192)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3407, file: !3408, line: 65, baseType: !281, size: 64, offset: 256)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3407, file: !3408, line: 66, baseType: !281, size: 64, offset: 320)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3407, file: !3408, line: 68, baseType: !281, size: 64, offset: 384)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3407, file: !3408, line: 69, baseType: !281, size: 64, offset: 448)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3407, file: !3408, line: 70, baseType: !281, size: 64, offset: 512)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3407, file: !3408, line: 71, baseType: !281, size: 64, offset: 576)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3407, file: !3408, line: 72, baseType: !281, size: 64, offset: 640)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3407, file: !3408, line: 73, baseType: !281, size: 64, offset: 704)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3407, file: !3408, line: 74, baseType: !281, size: 64, offset: 768)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3407, file: !3408, line: 75, baseType: !281, size: 64, offset: 832)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3407, file: !3408, line: 76, baseType: !281, size: 64, offset: 896)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3407, file: !3408, line: 81, baseType: !281, size: 64, offset: 960)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3407, file: !3408, line: 83, baseType: !281, size: 64, offset: 1024)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3407, file: !3408, line: 84, baseType: !281, size: 64, offset: 1088)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3407, file: !3408, line: 85, baseType: !281, size: 64, offset: 1152)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3407, file: !3408, line: 86, baseType: !281, size: 64, offset: 1216)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3407, file: !3408, line: 87, baseType: !281, size: 64, offset: 1280)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3383, file: !3323, line: 96, baseType: !278, size: 32, offset: 1024)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3328, file: !3323, line: 308, baseType: !3433, size: 4608, align: 512)
!3433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3323, line: 289, size: 4608, align: 512, elements: !3434)
!3434 = !{!3435, !3436, !3443}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3433, file: !3323, line: 290, baseType: !3346, size: 4096, align: 128)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3433, file: !3323, line: 291, baseType: !3437, size: 512, offset: 4096)
!3437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3323, line: 268, size: 512, elements: !3438)
!3438 = !{!3439, !3440, !3441}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3437, file: !3323, line: 269, baseType: !343, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3437, file: !3323, line: 270, baseType: !343, size: 64, offset: 64)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3437, file: !3323, line: 271, baseType: !3442, size: 384, offset: 128)
!3442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !343, size: 384, elements: !1783)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3433, file: !3323, line: 292, baseType: !3444, offset: 4608)
!3444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, elements: !1879)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3328, file: !3323, line: 309, baseType: !3446, size: 32768)
!3446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 32768, elements: !3447)
!3447 = !{!3448}
!3448 = !DISubrange(count: 4096)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !6, line: 309, size: 19264, elements: !3451)
!3451 = !{!3452, !3453, !4077, !4078, !4079, !4080, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4172, !4173, !4174, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4248, !4249, !4250, !4251, !4252, !4253, !4255, !4256, !4257, !4260, !4292, !4293, !4294, !4295, !4296, !4297, !4298}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !3450, file: !6, line: 310, baseType: !336, size: 128)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3450, file: !6, line: 311, baseType: !3454, size: 64, offset: 128)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !6, line: 605, size: 8064, elements: !3456)
!3456 = !{!3457, !3458, !3459, !3460, !3461, !3462, !3463, !3478, !3479, !3480, !3504, !3507, !3508, !3512, !3513, !3514, !3515, !3516, !3520, !3521, !3523, !4073, !4074, !4075, !4076}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3455, file: !6, line: 606, baseType: !336, size: 128)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3455, file: !6, line: 607, baseType: !3454, size: 64, offset: 128)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3455, file: !6, line: 608, baseType: !336, size: 128, offset: 192)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !3455, file: !6, line: 609, baseType: !336, size: 128, offset: 320)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !3455, file: !6, line: 610, baseType: !3449, size: 64, offset: 448)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !3455, file: !6, line: 611, baseType: !336, size: 128, offset: 512)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !3455, file: !6, line: 613, baseType: !3464, size: 256, offset: 640)
!3464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3465, size: 256, elements: !1683)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !3467, line: 20, size: 512, elements: !3468)
!3467 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!3468 = !{!3469, !3471, !3472, !3473, !3474, !3475, !3476, !3477}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3466, file: !3467, line: 21, baseType: !3470, size: 64)
!3470 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !304, line: 158, baseType: !3268)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3466, file: !3467, line: 22, baseType: !3470, size: 64, offset: 64)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3466, file: !3467, line: 23, baseType: !707, size: 64, offset: 128)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3466, file: !3467, line: 24, baseType: !281, size: 64, offset: 192)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3466, file: !3467, line: 25, baseType: !281, size: 64, offset: 256)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3466, file: !3467, line: 26, baseType: !3465, size: 64, offset: 320)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3466, file: !3467, line: 26, baseType: !3465, size: 64, offset: 384)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3466, file: !3467, line: 26, baseType: !3465, size: 64, offset: 448)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !3455, file: !6, line: 614, baseType: !336, size: 128, offset: 896)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !3455, file: !6, line: 615, baseType: !3466, size: 512, offset: 1024)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3455, file: !6, line: 617, baseType: !3481, size: 64, offset: 1536)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !6, line: 731, size: 320, elements: !3483)
!3483 = !{!3484, !3488, !3492, !3496, !3500}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !3482, file: !6, line: 732, baseType: !3485, size: 64)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 64)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!277, !3454}
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !3482, file: !6, line: 733, baseType: !3489, size: 64, offset: 64)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{null, !3454}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !3482, file: !6, line: 734, baseType: !3493, size: 64, offset: 128)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!280, !3454, !7, !277}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3482, file: !6, line: 735, baseType: !3497, size: 64, offset: 192)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!277, !3454, !7, !277, !277, !2794}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3482, file: !6, line: 736, baseType: !3501, size: 64, offset: 256)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!3502 = !DISubroutineType(types: !3503)
!3503 = !{!277, !3454, !7, !277, !277, !278}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !3455, file: !6, line: 618, baseType: !3505, size: 64, offset: 1600)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !6, line: 537, flags: DIFlagFwdDecl)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !3455, file: !6, line: 619, baseType: !280, size: 64, offset: 1664)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !3455, file: !6, line: 620, baseType: !3509, size: 64, offset: 1728)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3511, line: 123, flags: DIFlagFwdDecl)
!3511 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !3455, file: !6, line: 622, baseType: !467, size: 8, offset: 1792)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !3455, file: !6, line: 623, baseType: !467, size: 8, offset: 1800)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !3455, file: !6, line: 624, baseType: !467, size: 8, offset: 1808)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !3455, file: !6, line: 625, baseType: !467, size: 8, offset: 1816)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3455, file: !6, line: 630, baseType: !3517, size: 384, offset: 1824)
!3517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 384, elements: !3518)
!3518 = !{!3519}
!3519 = !DISubrange(count: 48)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !3455, file: !6, line: 632, baseType: !276, size: 16, offset: 2208)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !3455, file: !6, line: 633, baseType: !3522, size: 16, offset: 2224)
!3522 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !6, line: 237, baseType: !276)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !3455, file: !6, line: 634, baseType: !3524, size: 64, offset: 2240)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !84, line: 461, size: 5568, elements: !3526)
!3526 = !{!3527, !3528, !3529, !3532, !3533, !3584, !3674, !3675, !3676, !3677, !3678, !3687, !3792, !3805, !4000, !4001, !4005, !4007, !4008, !4009, !4013, !4019, !4020, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4061, !4062, !4063, !4066, !4069, !4070, !4071, !4072}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3525, file: !84, line: 462, baseType: !2017, size: 512)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3525, file: !84, line: 463, baseType: !3524, size: 64, offset: 512)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3525, file: !84, line: 465, baseType: !3530, size: 64, offset: 576)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !84, line: 36, flags: DIFlagFwdDecl)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3525, file: !84, line: 467, baseType: !707, size: 64, offset: 640)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3525, file: !84, line: 468, baseType: !3534, size: 64, offset: 704)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3536)
!3536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !84, line: 87, size: 384, elements: !3537)
!3537 = !{!3538, !3539, !3540, !3544, !3549, !3553}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3536, file: !84, line: 88, baseType: !707, size: 64)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3536, file: !84, line: 89, baseType: !2096, size: 64, offset: 64)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3536, file: !84, line: 90, baseType: !3541, size: 64, offset: 128)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = !DISubroutineType(types: !3543)
!3543 = !{!277, !3524, !2051}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3536, file: !84, line: 91, baseType: !3545, size: 64, offset: 192)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!733, !3524, !3548, !2166, !2167}
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3536, file: !84, line: 93, baseType: !3550, size: 64, offset: 256)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null, !3524}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3536, file: !84, line: 95, baseType: !3554, size: 64, offset: 320)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3556)
!3556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !91, line: 278, size: 1472, elements: !3557)
!3557 = !{!3558, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583}
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3556, file: !91, line: 279, baseType: !3559, size: 64)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{!277, !3524}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3556, file: !91, line: 280, baseType: !3550, size: 64, offset: 64)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3556, file: !91, line: 281, baseType: !3559, size: 64, offset: 128)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3556, file: !91, line: 282, baseType: !3559, size: 64, offset: 192)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3556, file: !91, line: 283, baseType: !3559, size: 64, offset: 256)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3556, file: !91, line: 284, baseType: !3559, size: 64, offset: 320)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3556, file: !91, line: 285, baseType: !3559, size: 64, offset: 384)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3556, file: !91, line: 286, baseType: !3559, size: 64, offset: 448)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3556, file: !91, line: 287, baseType: !3559, size: 64, offset: 512)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3556, file: !91, line: 288, baseType: !3559, size: 64, offset: 576)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3556, file: !91, line: 289, baseType: !3559, size: 64, offset: 640)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3556, file: !91, line: 290, baseType: !3559, size: 64, offset: 704)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3556, file: !91, line: 291, baseType: !3559, size: 64, offset: 768)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3556, file: !91, line: 292, baseType: !3559, size: 64, offset: 832)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3556, file: !91, line: 293, baseType: !3559, size: 64, offset: 896)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3556, file: !91, line: 294, baseType: !3559, size: 64, offset: 960)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3556, file: !91, line: 295, baseType: !3559, size: 64, offset: 1024)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3556, file: !91, line: 296, baseType: !3559, size: 64, offset: 1088)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3556, file: !91, line: 297, baseType: !3559, size: 64, offset: 1152)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3556, file: !91, line: 298, baseType: !3559, size: 64, offset: 1216)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3556, file: !91, line: 299, baseType: !3559, size: 64, offset: 1280)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3556, file: !91, line: 300, baseType: !3559, size: 64, offset: 1344)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3556, file: !91, line: 301, baseType: !3559, size: 64, offset: 1408)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3525, file: !84, line: 470, baseType: !3585, size: 64, offset: 768)
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3587, line: 82, size: 1408, elements: !3588)
!3587 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3588 = !{!3589, !3590, !3591, !3592, !3593, !3594, !3595, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3669, !3672, !3673}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3586, file: !3587, line: 83, baseType: !707, size: 64)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3586, file: !3587, line: 84, baseType: !707, size: 64, offset: 64)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3586, file: !3587, line: 85, baseType: !3524, size: 64, offset: 128)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3586, file: !3587, line: 86, baseType: !2096, size: 64, offset: 192)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3586, file: !3587, line: 87, baseType: !2096, size: 64, offset: 256)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3586, file: !3587, line: 88, baseType: !2096, size: 64, offset: 320)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3586, file: !3587, line: 90, baseType: !3596, size: 64, offset: 384)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{!277, !3524, !3599}
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !78, line: 95, size: 1152, elements: !3601)
!3601 = !{!3602, !3603, !3604, !3605, !3606, !3607, !3608, !3620, !3633, !3634, !3635, !3636, !3637, !3645, !3646, !3647, !3648, !3649, !3650}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3600, file: !78, line: 96, baseType: !707, size: 64)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3600, file: !78, line: 97, baseType: !3585, size: 64, offset: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3600, file: !78, line: 99, baseType: !799, size: 64, offset: 128)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3600, file: !78, line: 100, baseType: !707, size: 64, offset: 192)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3600, file: !78, line: 102, baseType: !752, size: 8, offset: 256)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3600, file: !78, line: 103, baseType: !77, size: 32, offset: 288)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3600, file: !78, line: 105, baseType: !3609, size: 64, offset: 320)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3611)
!3611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !158, line: 262, size: 1600, elements: !3612)
!3612 = !{!3613, !3614, !3615, !3619}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3611, file: !158, line: 263, baseType: !1216, size: 256)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3611, file: !158, line: 264, baseType: !1216, size: 256, offset: 256)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3611, file: !158, line: 265, baseType: !3616, size: 1024, offset: 512)
!3616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 1024, elements: !3617)
!3617 = !{!3618}
!3618 = !DISubrange(count: 128)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3611, file: !158, line: 266, baseType: !2149, size: 64, offset: 1536)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3600, file: !78, line: 106, baseType: !3621, size: 64, offset: 384)
!3621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3622, size: 64)
!3622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3623)
!3623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !158, line: 210, size: 256, elements: !3624)
!3624 = !{!3625, !3629, !3631, !3632}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3623, file: !158, line: 211, baseType: !3626, size: 72)
!3626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 72, elements: !3627)
!3627 = !{!3628}
!3628 = !DISubrange(count: 9)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3623, file: !158, line: 212, baseType: !3630, size: 64, offset: 128)
!3630 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !158, line: 14, baseType: !281)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3623, file: !158, line: 213, baseType: !279, size: 32, offset: 192)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3623, file: !158, line: 214, baseType: !279, size: 32, offset: 224)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3600, file: !78, line: 108, baseType: !3559, size: 64, offset: 448)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3600, file: !78, line: 109, baseType: !3550, size: 64, offset: 512)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3600, file: !78, line: 110, baseType: !3559, size: 64, offset: 576)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3600, file: !78, line: 111, baseType: !3550, size: 64, offset: 640)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3600, file: !78, line: 112, baseType: !3638, size: 64, offset: 704)
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 64)
!3639 = !DISubroutineType(types: !3640)
!3640 = !{!277, !3524, !3641}
!3641 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !91, line: 52, baseType: !3642)
!3642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !91, line: 50, size: 32, elements: !3643)
!3643 = !{!3644}
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3642, file: !91, line: 51, baseType: !277, size: 32)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3600, file: !78, line: 113, baseType: !3559, size: 64, offset: 768)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3600, file: !78, line: 114, baseType: !2096, size: 64, offset: 832)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3600, file: !78, line: 115, baseType: !2096, size: 64, offset: 896)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3600, file: !78, line: 117, baseType: !3554, size: 64, offset: 960)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3600, file: !78, line: 118, baseType: !3550, size: 64, offset: 1024)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3600, file: !78, line: 120, baseType: !3651, size: 64, offset: 1088)
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 64)
!3652 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !78, line: 120, flags: DIFlagFwdDecl)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3586, file: !3587, line: 91, baseType: !3541, size: 64, offset: 448)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3586, file: !3587, line: 92, baseType: !3559, size: 64, offset: 512)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3586, file: !3587, line: 93, baseType: !3550, size: 64, offset: 576)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3586, file: !3587, line: 94, baseType: !3559, size: 64, offset: 640)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3586, file: !3587, line: 95, baseType: !3550, size: 64, offset: 704)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3586, file: !3587, line: 97, baseType: !3559, size: 64, offset: 768)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3586, file: !3587, line: 98, baseType: !3559, size: 64, offset: 832)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3586, file: !3587, line: 100, baseType: !3638, size: 64, offset: 896)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3586, file: !3587, line: 101, baseType: !3559, size: 64, offset: 960)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3586, file: !3587, line: 103, baseType: !3559, size: 64, offset: 1024)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3586, file: !3587, line: 105, baseType: !3559, size: 64, offset: 1088)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3586, file: !3587, line: 107, baseType: !3554, size: 64, offset: 1152)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3586, file: !3587, line: 109, baseType: !3666, size: 64, offset: 1216)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3668)
!3668 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3587, line: 109, flags: DIFlagFwdDecl)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3586, file: !3587, line: 111, baseType: !3670, size: 64, offset: 1280)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3587, line: 111, flags: DIFlagFwdDecl)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3586, file: !3587, line: 112, baseType: !814, offset: 1344)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3586, file: !3587, line: 114, baseType: !752, size: 8, offset: 1344)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3525, file: !84, line: 471, baseType: !3599, size: 64, offset: 832)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3525, file: !84, line: 473, baseType: !280, size: 64, offset: 896)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3525, file: !84, line: 475, baseType: !280, size: 64, offset: 960)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3525, file: !84, line: 480, baseType: !924, size: 192, offset: 1024)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3525, file: !84, line: 484, baseType: !3679, size: 576, offset: 1216)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !84, line: 361, size: 576, elements: !3680)
!3680 = !{!3681, !3682, !3683, !3684, !3685, !3686}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3679, file: !84, line: 362, baseType: !336, size: 128)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3679, file: !84, line: 363, baseType: !336, size: 128, offset: 128)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3679, file: !84, line: 364, baseType: !336, size: 128, offset: 256)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3679, file: !84, line: 365, baseType: !336, size: 128, offset: 384)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3679, file: !84, line: 366, baseType: !752, size: 8, offset: 512)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3679, file: !84, line: 367, baseType: !83, size: 32, offset: 544)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3525, file: !84, line: 485, baseType: !3688, size: 2304, offset: 1792)
!3688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !91, line: 565, size: 2304, elements: !3689)
!3689 = !{!3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3785, !3789}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3688, file: !91, line: 566, baseType: !3641, size: 32)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3688, file: !91, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3688, file: !91, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3688, file: !91, line: 569, baseType: !752, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3688, file: !91, line: 570, baseType: !752, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3688, file: !91, line: 571, baseType: !752, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3688, file: !91, line: 572, baseType: !752, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3688, file: !91, line: 573, baseType: !752, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3688, file: !91, line: 574, baseType: !752, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3688, file: !91, line: 575, baseType: !752, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3688, file: !91, line: 576, baseType: !752, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3688, file: !91, line: 577, baseType: !278, size: 32, offset: 64)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3688, file: !91, line: 578, baseType: !678, offset: 96)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3688, file: !91, line: 580, baseType: !336, size: 128, offset: 128)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3688, file: !91, line: 581, baseType: !2543, size: 192, offset: 256)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3688, file: !91, line: 582, baseType: !3706, size: 64, offset: 448)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3708, line: 43, size: 1472, elements: !3709)
!3708 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3709 = !{!3710, !3711, !3712, !3713, !3714, !3717, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3707, file: !3708, line: 44, baseType: !707, size: 64)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3707, file: !3708, line: 45, baseType: !277, size: 32, offset: 64)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3707, file: !3708, line: 46, baseType: !336, size: 128, offset: 128)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3707, file: !3708, line: 47, baseType: !678, offset: 256)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3707, file: !3708, line: 48, baseType: !3715, size: 64, offset: 256)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !91, line: 533, flags: DIFlagFwdDecl)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3707, file: !3708, line: 49, baseType: !3718, size: 320, offset: 320)
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3719, line: 11, size: 320, elements: !3720)
!3719 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3720 = !{!3721, !3722, !3723, !3728}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3718, file: !3719, line: 16, baseType: !808, size: 128)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3718, file: !3719, line: 17, baseType: !281, size: 64, offset: 128)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3718, file: !3719, line: 18, baseType: !3724, size: 64, offset: 192)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DISubroutineType(types: !3726)
!3726 = !{null, !3727}
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3718, file: !3719, line: 19, baseType: !278, size: 32, offset: 256)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3707, file: !3708, line: 50, baseType: !281, size: 64, offset: 640)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3707, file: !3708, line: 51, baseType: !392, size: 64, offset: 704)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3707, file: !3708, line: 52, baseType: !392, size: 64, offset: 768)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3707, file: !3708, line: 53, baseType: !392, size: 64, offset: 832)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3707, file: !3708, line: 54, baseType: !392, size: 64, offset: 896)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3707, file: !3708, line: 55, baseType: !392, size: 64, offset: 960)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3707, file: !3708, line: 56, baseType: !281, size: 64, offset: 1024)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3707, file: !3708, line: 57, baseType: !281, size: 64, offset: 1088)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3707, file: !3708, line: 58, baseType: !281, size: 64, offset: 1152)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3707, file: !3708, line: 59, baseType: !281, size: 64, offset: 1216)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3707, file: !3708, line: 60, baseType: !281, size: 64, offset: 1280)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3707, file: !3708, line: 61, baseType: !3524, size: 64, offset: 1344)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3707, file: !3708, line: 62, baseType: !752, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3707, file: !3708, line: 63, baseType: !752, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3688, file: !91, line: 583, baseType: !752, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3688, file: !91, line: 584, baseType: !752, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3688, file: !91, line: 585, baseType: !752, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3688, file: !91, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3688, file: !91, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3688, file: !91, line: 592, baseType: !384, size: 512, offset: 576)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3688, file: !91, line: 593, baseType: !343, size: 64, offset: 1088)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3688, file: !91, line: 594, baseType: !1280, size: 256, offset: 1152)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3688, file: !91, line: 595, baseType: !1171, size: 128, offset: 1408)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3688, file: !91, line: 596, baseType: !3715, size: 64, offset: 1536)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3688, file: !91, line: 597, baseType: !303, size: 32, offset: 1600)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3688, file: !91, line: 598, baseType: !303, size: 32, offset: 1632)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3688, file: !91, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3688, file: !91, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3688, file: !91, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3688, file: !91, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3688, file: !91, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3688, file: !91, line: 604, baseType: !752, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3688, file: !91, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3688, file: !91, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3688, file: !91, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3688, file: !91, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3688, file: !91, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3688, file: !91, line: 610, baseType: !7, size: 32, offset: 1696)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3688, file: !91, line: 611, baseType: !90, size: 32, offset: 1728)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3688, file: !91, line: 612, baseType: !98, size: 32, offset: 1760)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3688, file: !91, line: 613, baseType: !277, size: 32, offset: 1792)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3688, file: !91, line: 614, baseType: !277, size: 32, offset: 1824)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3688, file: !91, line: 615, baseType: !343, size: 64, offset: 1856)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3688, file: !91, line: 616, baseType: !343, size: 64, offset: 1920)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3688, file: !91, line: 617, baseType: !343, size: 64, offset: 1984)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3688, file: !91, line: 618, baseType: !343, size: 64, offset: 2048)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3688, file: !91, line: 620, baseType: !3776, size: 64, offset: 2112)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !91, line: 536, size: 256, elements: !3778)
!3778 = !{!3779, !3780, !3781, !3782}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3777, file: !91, line: 537, baseType: !678)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3777, file: !91, line: 538, baseType: !7, size: 32)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3777, file: !91, line: 540, baseType: !336, size: 128, offset: 64)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3777, file: !91, line: 543, baseType: !3783, size: 64, offset: 192)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !91, line: 534, flags: DIFlagFwdDecl)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3688, file: !91, line: 621, baseType: !3786, size: 64, offset: 2176)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3787 = !DISubroutineType(types: !3788)
!3788 = !{null, !3524, !1739}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3688, file: !91, line: 622, baseType: !3790, size: 64, offset: 2240)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !91, line: 622, flags: DIFlagFwdDecl)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3525, file: !84, line: 486, baseType: !3793, size: 64, offset: 4096)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64)
!3794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !91, line: 642, size: 1792, elements: !3795)
!3795 = !{!3796, !3797, !3798, !3802, !3803, !3804}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3794, file: !91, line: 643, baseType: !3556, size: 1472)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3794, file: !91, line: 644, baseType: !3559, size: 64, offset: 1472)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3794, file: !91, line: 645, baseType: !3799, size: 64, offset: 1536)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{null, !3524, !752}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3794, file: !91, line: 646, baseType: !3559, size: 64, offset: 1600)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3794, file: !91, line: 647, baseType: !3550, size: 64, offset: 1664)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3794, file: !91, line: 648, baseType: !3550, size: 64, offset: 1728)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3525, file: !84, line: 493, baseType: !3806, size: 64, offset: 4160)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !105, line: 162, size: 1088, elements: !3808)
!3808 = !{!3809, !3810, !3811, !3984, !3985, !3986, !3987, !3988, !3989, !3992, !3993, !3994, !3995, !3996, !3997, !3998}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3807, file: !105, line: 163, baseType: !336, size: 128)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3807, file: !105, line: 164, baseType: !707, size: 64, offset: 128)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3807, file: !105, line: 165, baseType: !3812, size: 64, offset: 192)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3814)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !105, line: 105, size: 640, elements: !3815)
!3815 = !{!3816, !3934, !3945, !3950, !3954, !3961, !3965, !3969, !3976, !3980}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3814, file: !105, line: 106, baseType: !3817, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!277, !3806, !3820, !104}
!3820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3821, size: 64)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3822, line: 51, size: 1344, elements: !3823)
!3822 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3823 = !{!3824, !3825, !3827, !3828, !3918, !3927, !3928, !3929, !3930, !3931, !3932, !3933}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3821, file: !3822, line: 52, baseType: !707, size: 64)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3821, file: !3822, line: 53, baseType: !3826, size: 32, offset: 64)
!3826 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3822, line: 28, baseType: !278)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3821, file: !3822, line: 54, baseType: !707, size: 64, offset: 128)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3821, file: !3822, line: 55, baseType: !3829, size: 192, offset: 192)
!3829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3830, line: 17, size: 192, elements: !3831)
!3830 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3831 = !{!3832, !3834, !3917}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3829, file: !3830, line: 18, baseType: !3833, size: 64)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3829, file: !3830, line: 19, baseType: !3835, size: 64, offset: 64)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3837)
!3837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3830, line: 110, size: 1152, elements: !3838)
!3838 = !{!3839, !3843, !3847, !3853, !3859, !3863, !3867, !3872, !3876, !3877, !3881, !3885, !3889, !3900, !3901, !3902, !3903, !3913}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3837, file: !3830, line: 111, baseType: !3840, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!3833, !3833}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3837, file: !3830, line: 112, baseType: !3844, size: 64, offset: 64)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DISubroutineType(types: !3846)
!3846 = !{null, !3833}
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3837, file: !3830, line: 113, baseType: !3848, size: 64, offset: 128)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!752, !3851}
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3829)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3837, file: !3830, line: 114, baseType: !3854, size: 64, offset: 192)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{!2149, !3851, !3857}
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3525)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3837, file: !3830, line: 116, baseType: !3860, size: 64, offset: 256)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{!752, !3851, !707}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3837, file: !3830, line: 118, baseType: !3864, size: 64, offset: 320)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{!277, !3851, !707, !7, !280, !1420}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3837, file: !3830, line: 123, baseType: !3868, size: 64, offset: 384)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{!277, !3851, !707, !3871, !1420}
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3837, file: !3830, line: 126, baseType: !3873, size: 64, offset: 448)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{!707, !3851}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3837, file: !3830, line: 127, baseType: !3873, size: 64, offset: 512)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3837, file: !3830, line: 128, baseType: !3878, size: 64, offset: 576)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{!3833, !3851}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3837, file: !3830, line: 130, baseType: !3882, size: 64, offset: 640)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{!3833, !3851, !3833}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3837, file: !3830, line: 133, baseType: !3886, size: 64, offset: 704)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{!3833, !3851, !707}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3837, file: !3830, line: 135, baseType: !3890, size: 64, offset: 768)
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 64)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{!277, !3851, !707, !707, !7, !7, !3893}
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3830, line: 43, size: 640, elements: !3895)
!3895 = !{!3896, !3897, !3898}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3894, file: !3830, line: 44, baseType: !3833, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3894, file: !3830, line: 45, baseType: !7, size: 32, offset: 64)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3894, file: !3830, line: 46, baseType: !3899, size: 512, offset: 128)
!3899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !343, size: 512, elements: !430)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3837, file: !3830, line: 140, baseType: !3882, size: 64, offset: 832)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3837, file: !3830, line: 143, baseType: !3878, size: 64, offset: 896)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3837, file: !3830, line: 145, baseType: !3840, size: 64, offset: 960)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3837, file: !3830, line: 146, baseType: !3904, size: 64, offset: 1024)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!277, !3851, !3907}
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3830, line: 29, size: 128, elements: !3909)
!3909 = !{!3910, !3911, !3912}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3908, file: !3830, line: 30, baseType: !7, size: 32)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3908, file: !3830, line: 31, baseType: !7, size: 32, offset: 32)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3908, file: !3830, line: 32, baseType: !3851, size: 64, offset: 64)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3837, file: !3830, line: 148, baseType: !3914, size: 64, offset: 1088)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DISubroutineType(types: !3916)
!3916 = !{!277, !3851, !3524}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3829, file: !3830, line: 20, baseType: !3524, size: 64, offset: 128)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3821, file: !3822, line: 57, baseType: !3919, size: 64, offset: 384)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3822, line: 31, size: 704, elements: !3921)
!3921 = !{!3922, !3923, !3924, !3925, !3926}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3920, file: !3822, line: 32, baseType: !733, size: 64)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3920, file: !3822, line: 33, baseType: !277, size: 32, offset: 64)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3920, file: !3822, line: 34, baseType: !280, size: 64, offset: 128)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3920, file: !3822, line: 35, baseType: !3919, size: 64, offset: 192)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3920, file: !3822, line: 43, baseType: !2111, size: 448, offset: 256)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3821, file: !3822, line: 58, baseType: !3919, size: 64, offset: 448)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3821, file: !3822, line: 59, baseType: !3820, size: 64, offset: 512)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3821, file: !3822, line: 60, baseType: !3820, size: 64, offset: 576)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3821, file: !3822, line: 61, baseType: !3820, size: 64, offset: 640)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3821, file: !3822, line: 63, baseType: !2017, size: 512, offset: 704)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3821, file: !3822, line: 65, baseType: !281, size: 64, offset: 1216)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3821, file: !3822, line: 66, baseType: !280, size: 64, offset: 1280)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3814, file: !105, line: 108, baseType: !3935, size: 64, offset: 64)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!277, !3806, !3938, !104}
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !105, line: 63, size: 640, elements: !3940)
!3940 = !{!3941, !3942, !3943}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3939, file: !105, line: 64, baseType: !3833, size: 64)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3939, file: !105, line: 65, baseType: !277, size: 32, offset: 64)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3939, file: !105, line: 66, baseType: !3944, size: 512, offset: 96)
!3944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 512, elements: !1224)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3814, file: !105, line: 110, baseType: !3946, size: 64, offset: 128)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!277, !3806, !7, !3949}
!3949 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !304, line: 164, baseType: !281)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3814, file: !105, line: 111, baseType: !3951, size: 64, offset: 192)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{null, !3806, !7}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3814, file: !105, line: 112, baseType: !3955, size: 64, offset: 256)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{!277, !3806, !3820, !3958, !7, !3960, !1199}
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3814, file: !105, line: 117, baseType: !3962, size: 64, offset: 320)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!277, !3806, !7, !7, !280}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3814, file: !105, line: 119, baseType: !3966, size: 64, offset: 384)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{null, !3806, !7, !7}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3814, file: !105, line: 121, baseType: !3970, size: 64, offset: 448)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!277, !3806, !3973, !752}
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 64)
!3974 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3975, line: 11, flags: DIFlagFwdDecl)
!3975 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3814, file: !105, line: 122, baseType: !3977, size: 64, offset: 512)
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3978, size: 64)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{null, !3806, !3973}
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3814, file: !105, line: 123, baseType: !3981, size: 64, offset: 576)
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3982, size: 64)
!3982 = !DISubroutineType(types: !3983)
!3983 = !{!277, !3806, !3938, !3960, !1199}
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3807, file: !105, line: 166, baseType: !280, size: 64, offset: 256)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3807, file: !105, line: 167, baseType: !7, size: 32, offset: 320)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3807, file: !105, line: 168, baseType: !7, size: 32, offset: 352)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3807, file: !105, line: 171, baseType: !3833, size: 64, offset: 384)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3807, file: !105, line: 172, baseType: !104, size: 32, offset: 448)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3807, file: !105, line: 173, baseType: !3990, size: 64, offset: 512)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !105, line: 134, flags: DIFlagFwdDecl)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3807, file: !105, line: 175, baseType: !3806, size: 64, offset: 576)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3807, file: !105, line: 182, baseType: !3949, size: 64, offset: 640)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3807, file: !105, line: 183, baseType: !7, size: 32, offset: 704)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3807, file: !105, line: 184, baseType: !7, size: 32, offset: 736)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3807, file: !105, line: 185, baseType: !2198, size: 128, offset: 768)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3807, file: !105, line: 186, baseType: !924, size: 192, offset: 896)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3807, file: !105, line: 187, baseType: !3999, offset: 1088)
!3999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2755)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3525, file: !84, line: 499, baseType: !336, size: 128, offset: 4224)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3525, file: !84, line: 502, baseType: !4002, size: 64, offset: 4352)
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4004)
!4004 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !84, line: 502, flags: DIFlagFwdDecl)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3525, file: !84, line: 504, baseType: !4006, size: 64, offset: 4416)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3525, file: !84, line: 505, baseType: !343, size: 64, offset: 4480)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3525, file: !84, line: 510, baseType: !343, size: 64, offset: 4544)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3525, file: !84, line: 511, baseType: !4010, size: 64, offset: 4608)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4012)
!4012 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !84, line: 511, flags: DIFlagFwdDecl)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3525, file: !84, line: 513, baseType: !4014, size: 64, offset: 4672)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !84, line: 288, size: 128, elements: !4016)
!4016 = !{!4017, !4018}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4015, file: !84, line: 293, baseType: !7, size: 32)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4015, file: !84, line: 294, baseType: !281, size: 64, offset: 64)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3525, file: !84, line: 515, baseType: !336, size: 128, offset: 4736)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3525, file: !84, line: 526, baseType: !4021, offset: 4864)
!4021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4022, line: 5, elements: !352)
!4022 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3525, file: !84, line: 528, baseType: !3820, size: 64, offset: 4864)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3525, file: !84, line: 529, baseType: !3833, size: 64, offset: 4928)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3525, file: !84, line: 534, baseType: !766, size: 32, offset: 4992)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3525, file: !84, line: 535, baseType: !278, size: 32, offset: 5024)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3525, file: !84, line: 537, baseType: !678, offset: 5056)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3525, file: !84, line: 538, baseType: !336, size: 128, offset: 5056)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3525, file: !84, line: 540, baseType: !4030, size: 64, offset: 5184)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4032, line: 54, size: 960, elements: !4033)
!4032 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4033 = !{!4034, !4035, !4036, !4037, !4038, !4039, !4040, !4044, !4048, !4049, !4050, !4051, !4055, !4059, !4060}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4031, file: !4032, line: 55, baseType: !707, size: 64)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4031, file: !4032, line: 56, baseType: !799, size: 64, offset: 64)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4031, file: !4032, line: 58, baseType: !2096, size: 64, offset: 128)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4031, file: !4032, line: 59, baseType: !2096, size: 64, offset: 192)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4031, file: !4032, line: 60, baseType: !2023, size: 64, offset: 256)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4031, file: !4032, line: 62, baseType: !3541, size: 64, offset: 320)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4031, file: !4032, line: 63, baseType: !4041, size: 64, offset: 384)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{!733, !3524, !3548}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4031, file: !4032, line: 65, baseType: !4045, size: 64, offset: 448)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = !DISubroutineType(types: !4047)
!4047 = !{null, !4030}
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4031, file: !4032, line: 66, baseType: !3550, size: 64, offset: 512)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4031, file: !4032, line: 68, baseType: !3559, size: 64, offset: 576)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4031, file: !4032, line: 70, baseType: !2132, size: 64, offset: 640)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4031, file: !4032, line: 71, baseType: !4052, size: 64, offset: 704)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!2149, !3524}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4031, file: !4032, line: 73, baseType: !4056, size: 64, offset: 768)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{null, !3524, !2166, !2167}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4031, file: !4032, line: 75, baseType: !3554, size: 64, offset: 832)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4031, file: !4032, line: 77, baseType: !3670, size: 64, offset: 896)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3525, file: !84, line: 541, baseType: !2096, size: 64, offset: 5248)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3525, file: !84, line: 543, baseType: !3550, size: 64, offset: 5312)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3525, file: !84, line: 544, baseType: !4064, size: 64, offset: 5376)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !84, line: 45, flags: DIFlagFwdDecl)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3525, file: !84, line: 545, baseType: !4067, size: 64, offset: 5440)
!4067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4068, size: 64)
!4068 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !84, line: 47, flags: DIFlagFwdDecl)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3525, file: !84, line: 547, baseType: !752, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3525, file: !84, line: 548, baseType: !752, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3525, file: !84, line: 549, baseType: !752, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3525, file: !84, line: 550, baseType: !752, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3455, file: !6, line: 635, baseType: !3525, size: 5568, offset: 2304)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !3455, file: !6, line: 636, baseType: !2110, size: 64, offset: 7872)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !3455, file: !6, line: 637, baseType: !2110, size: 64, offset: 7936)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !3455, file: !6, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !3450, file: !6, line: 312, baseType: !3454, size: 64, offset: 192)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !3450, file: !6, line: 314, baseType: !280, size: 64, offset: 256)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !3450, file: !6, line: 315, baseType: !3509, size: 64, offset: 320)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !3450, file: !6, line: 316, baseType: !4081, size: 64, offset: 384)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !6, line: 69, size: 832, elements: !4083)
!4083 = !{!4084, !4085, !4086, !4089, !4090}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4082, file: !6, line: 70, baseType: !3454, size: 64)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4082, file: !6, line: 71, baseType: !336, size: 128, offset: 64)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4082, file: !6, line: 72, baseType: !4087, size: 64, offset: 192)
!4087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4088, size: 64)
!4088 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !6, line: 72, flags: DIFlagFwdDecl)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4082, file: !6, line: 73, baseType: !467, size: 8, offset: 256)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4082, file: !6, line: 74, baseType: !2017, size: 512, offset: 320)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !3450, file: !6, line: 318, baseType: !7, size: 32, offset: 448)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3450, file: !6, line: 319, baseType: !276, size: 16, offset: 480)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !3450, file: !6, line: 320, baseType: !276, size: 16, offset: 496)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !3450, file: !6, line: 321, baseType: !276, size: 16, offset: 512)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !3450, file: !6, line: 322, baseType: !276, size: 16, offset: 528)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3450, file: !6, line: 323, baseType: !7, size: 32, offset: 544)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !3450, file: !6, line: 324, baseType: !465, size: 8, offset: 576)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !3450, file: !6, line: 325, baseType: !465, size: 8, offset: 584)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !3450, file: !6, line: 330, baseType: !465, size: 8, offset: 592)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !3450, file: !6, line: 331, baseType: !465, size: 8, offset: 600)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !3450, file: !6, line: 332, baseType: !465, size: 8, offset: 608)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !3450, file: !6, line: 333, baseType: !465, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !3450, file: !6, line: 334, baseType: !465, size: 8, offset: 624)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !3450, file: !6, line: 335, baseType: !465, size: 8, offset: 632)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !3450, file: !6, line: 336, baseType: !272, size: 16, offset: 640)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !3450, file: !6, line: 337, baseType: !3960, size: 64, offset: 704)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3450, file: !6, line: 339, baseType: !4108, size: 64, offset: 768)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !6, line: 858, size: 2048, elements: !4110)
!4110 = !{!4111, !4112, !4113, !4125, !4129, !4133, !4137, !4141, !4142, !4146, !4165, !4166, !4167}
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4109, file: !6, line: 859, baseType: !336, size: 128)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4109, file: !6, line: 860, baseType: !707, size: 64, offset: 128)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4109, file: !6, line: 861, baseType: !4114, size: 64, offset: 192)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4116)
!4116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !158, line: 38, size: 256, elements: !4117)
!4117 = !{!4118, !4119, !4120, !4121, !4122, !4123, !4124}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4116, file: !158, line: 39, baseType: !279, size: 32)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4116, file: !158, line: 39, baseType: !279, size: 32, offset: 32)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4116, file: !158, line: 40, baseType: !279, size: 32, offset: 64)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4116, file: !158, line: 40, baseType: !279, size: 32, offset: 96)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4116, file: !158, line: 41, baseType: !279, size: 32, offset: 128)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4116, file: !158, line: 41, baseType: !279, size: 32, offset: 160)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4116, file: !158, line: 42, baseType: !3630, size: 64, offset: 192)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4109, file: !6, line: 862, baseType: !4126, size: 64, offset: 256)
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64)
!4127 = !DISubroutineType(types: !4128)
!4128 = !{!277, !3449, !4114}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4109, file: !6, line: 863, baseType: !4130, size: 64, offset: 320)
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4131 = !DISubroutineType(types: !4132)
!4132 = !{null, !3449}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4109, file: !6, line: 864, baseType: !4134, size: 64, offset: 384)
!4134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4135, size: 64)
!4135 = !DISubroutineType(types: !4136)
!4136 = !{!277, !3449, !3641}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4109, file: !6, line: 865, baseType: !4138, size: 64, offset: 448)
!4138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4139, size: 64)
!4139 = !DISubroutineType(types: !4140)
!4140 = !{!277, !3449}
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4109, file: !6, line: 866, baseType: !4130, size: 64, offset: 512)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4109, file: !6, line: 867, baseType: !4143, size: 64, offset: 576)
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 64)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!277, !3449, !277}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4109, file: !6, line: 868, baseType: !4147, size: 64, offset: 640)
!4147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4148, size: 64)
!4148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4149)
!4149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !6, line: 795, size: 384, elements: !4150)
!4150 = !{!4151, !4157, !4161, !4162, !4163, !4164}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4149, file: !6, line: 797, baseType: !4152, size: 64)
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4153, size: 64)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{!4155, !3449, !4156}
!4155 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !6, line: 772, baseType: !7)
!4156 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !6, line: 180, baseType: !7)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4149, file: !6, line: 801, baseType: !4158, size: 64, offset: 64)
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 64)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!4155, !3449}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4149, file: !6, line: 804, baseType: !4158, size: 64, offset: 128)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4149, file: !6, line: 807, baseType: !4130, size: 64, offset: 192)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4149, file: !6, line: 808, baseType: !4130, size: 64, offset: 256)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4149, file: !6, line: 811, baseType: !4130, size: 64, offset: 320)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4109, file: !6, line: 869, baseType: !2096, size: 64, offset: 704)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4109, file: !6, line: 870, baseType: !3600, size: 1152, offset: 768)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4109, file: !6, line: 871, baseType: !4168, size: 128, offset: 1920)
!4168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !6, line: 759, size: 128, elements: !4169)
!4169 = !{!4170, !4171}
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4168, file: !6, line: 760, baseType: !678)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4168, file: !6, line: 761, baseType: !336, size: 128)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3450, file: !6, line: 340, baseType: !343, size: 64, offset: 832)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3450, file: !6, line: 346, baseType: !4015, size: 128, offset: 896)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !3450, file: !6, line: 348, baseType: !4175, size: 32, offset: 1024)
!4175 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !6, line: 155, baseType: !277)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !3450, file: !6, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !3450, file: !6, line: 352, baseType: !465, size: 8, offset: 1064)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !3450, file: !6, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !3450, file: !6, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !3450, file: !6, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !3450, file: !6, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !3450, file: !6, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !3450, file: !6, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !3450, file: !6, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !3450, file: !6, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !3450, file: !6, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !3450, file: !6, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !3450, file: !6, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !3450, file: !6, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !3450, file: !6, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !3450, file: !6, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !3450, file: !6, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !3450, file: !6, line: 376, baseType: !7, size: 32, offset: 1120)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !3450, file: !6, line: 377, baseType: !7, size: 32, offset: 1152)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !3450, file: !6, line: 380, baseType: !4196, size: 64, offset: 1216)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !6, line: 303, flags: DIFlagFwdDecl)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !3450, file: !6, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !3450, file: !6, line: 383, baseType: !277, size: 32, offset: 1312)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !3450, file: !6, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !3450, file: !6, line: 387, baseType: !4156, size: 32, offset: 1376)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3450, file: !6, line: 388, baseType: !3525, size: 5568, offset: 1408)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !3450, file: !6, line: 390, baseType: !277, size: 32, offset: 6976)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3450, file: !6, line: 396, baseType: !7, size: 32, offset: 7008)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !3450, file: !6, line: 397, baseType: !4206, size: 8704, offset: 7040)
!4206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3466, size: 8704, elements: !4207)
!4207 = !{!4208}
!4208 = !DISubrange(count: 17)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !3450, file: !6, line: 399, baseType: !752, size: 8, offset: 15744)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !3450, file: !6, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !3450, file: !6, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !3450, file: !6, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !3450, file: !6, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !3450, file: !6, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !3450, file: !6, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !3450, file: !6, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !3450, file: !6, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !3450, file: !6, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !3450, file: !6, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !3450, file: !6, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !3450, file: !6, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !3450, file: !6, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !3450, file: !6, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !3450, file: !6, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !3450, file: !6, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !3450, file: !6, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !3450, file: !6, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !3450, file: !6, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !3450, file: !6, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !3450, file: !6, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !3450, file: !6, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !3450, file: !6, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !3450, file: !6, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !3450, file: !6, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !3450, file: !6, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !3450, file: !6, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !3450, file: !6, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !3450, file: !6, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !3450, file: !6, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !3450, file: !6, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !3450, file: !6, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !3450, file: !6, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !3450, file: !6, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !3450, file: !6, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !3450, file: !6, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !3450, file: !6, line: 450, baseType: !4247, size: 16, offset: 15792)
!4247 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !6, line: 206, baseType: !276)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !3450, file: !6, line: 451, baseType: !303, size: 32, offset: 15808)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !3450, file: !6, line: 453, baseType: !3944, size: 512, offset: 15840)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !3450, file: !6, line: 454, baseType: !804, size: 64, offset: 16384)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !3450, file: !6, line: 455, baseType: !2110, size: 64, offset: 16448)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !3450, file: !6, line: 456, baseType: !277, size: 32, offset: 16512)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !3450, file: !6, line: 457, baseType: !4254, size: 1088, offset: 16576)
!4254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 1088, elements: !4207)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !3450, file: !6, line: 458, baseType: !4254, size: 1088, offset: 17664)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !3450, file: !6, line: 469, baseType: !2096, size: 64, offset: 18752)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !3450, file: !6, line: 471, baseType: !4258, size: 64, offset: 18816)
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4259, size: 64)
!4259 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !6, line: 304, flags: DIFlagFwdDecl)
!4260 = !DIDerivedType(tag: DW_TAG_member, scope: !3450, file: !6, line: 478, baseType: !4261, size: 64, offset: 18880)
!4261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3450, file: !6, line: 478, size: 64, elements: !4262)
!4262 = !{!4263, !4291}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4261, file: !6, line: 479, baseType: !4264, size: 64)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4266, line: 323, size: 1024, elements: !4267)
!4266 = !DIFile(filename: "drivers/pci/pci.h", directory: "/home/lizy2001/genbc/linux")
!4267 = !{!4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4290}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4265, file: !4266, line: 324, baseType: !277, size: 32)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "nres", scope: !4265, file: !4266, line: 325, baseType: !277, size: 32, offset: 32)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !4265, file: !4266, line: 326, baseType: !278, size: 32, offset: 64)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !4265, file: !4266, line: 327, baseType: !272, size: 16, offset: 96)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "total_VFs", scope: !4265, file: !4266, line: 328, baseType: !272, size: 16, offset: 112)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "initial_VFs", scope: !4265, file: !4266, line: 329, baseType: !272, size: 16, offset: 128)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "num_VFs", scope: !4265, file: !4266, line: 330, baseType: !272, size: 16, offset: 144)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4265, file: !4266, line: 331, baseType: !272, size: 16, offset: 160)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !4265, file: !4266, line: 332, baseType: !272, size: 16, offset: 176)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "vf_device", scope: !4265, file: !4266, line: 333, baseType: !272, size: 16, offset: 192)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "pgsz", scope: !4265, file: !4266, line: 334, baseType: !278, size: 32, offset: 224)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4265, file: !4266, line: 335, baseType: !465, size: 8, offset: 256)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "max_VF_buses", scope: !4265, file: !4266, line: 336, baseType: !465, size: 8, offset: 264)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "driver_max_VFs", scope: !4265, file: !4266, line: 337, baseType: !272, size: 16, offset: 272)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4265, file: !4266, line: 338, baseType: !3449, size: 64, offset: 320)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4265, file: !4266, line: 339, baseType: !3449, size: 64, offset: 384)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4265, file: !4266, line: 340, baseType: !278, size: 32, offset: 448)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4265, file: !4266, line: 341, baseType: !465, size: 8, offset: 480)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4265, file: !4266, line: 342, baseType: !272, size: 16, offset: 496)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4265, file: !4266, line: 343, baseType: !272, size: 16, offset: 512)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "barsz", scope: !4265, file: !4266, line: 344, baseType: !4289, size: 384, offset: 576)
!4289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3470, size: 384, elements: !1783)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_autoprobe", scope: !4265, file: !4266, line: 345, baseType: !752, size: 8, offset: 960)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4261, file: !6, line: 480, baseType: !3449, size: 64)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !3450, file: !6, line: 482, baseType: !272, size: 16, offset: 18944)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !3450, file: !6, line: 483, baseType: !465, size: 8, offset: 18960)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !3450, file: !6, line: 497, baseType: !272, size: 16, offset: 18976)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !3450, file: !6, line: 498, baseType: !3268, size: 64, offset: 19008)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !3450, file: !6, line: 499, baseType: !1420, size: 64, offset: 19072)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !3450, file: !6, line: 500, baseType: !733, size: 64, offset: 19136)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !3450, file: !6, line: 502, baseType: !281, size: 64, offset: 19200)
!4299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4300, size: 64)
!4300 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !467)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device", file: !4305, line: 351, size: 10880, elements: !4306)
!4305 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!4306 = !{!4307, !4308, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4326, !4343, !4417, !4446, !4470, !4491, !4495, !4504, !4536, !4550, !4572, !4576, !4577, !4578, !4579, !4580, !4581, !4582}
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !4304, file: !4305, line: 352, baseType: !277, size: 32)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4304, file: !4305, line: 353, baseType: !4309, size: 64, offset: 64)
!4309 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !4310, line: 424, baseType: !280)
!4310 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4304, file: !4305, line: 354, baseType: !3829, size: 192, offset: 128)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4304, file: !4305, line: 355, baseType: !4303, size: 64, offset: 320)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4304, file: !4305, line: 356, baseType: !336, size: 128, offset: 384)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4304, file: !4305, line: 357, baseType: !336, size: 128, offset: 512)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_list", scope: !4304, file: !4305, line: 358, baseType: !336, size: 128, offset: 640)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "del_list", scope: !4304, file: !4305, line: 359, baseType: !336, size: 128, offset: 768)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4304, file: !4305, line: 360, baseType: !4318, size: 32, offset: 896)
!4318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_status", file: !4305, line: 179, size: 32, elements: !4319)
!4319 = !{!4320, !4321, !4322, !4323, !4324, !4325}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !4318, file: !4305, line: 180, baseType: !278, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4318, file: !4305, line: 181, baseType: !278, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "show_in_ui", scope: !4318, file: !4305, line: 182, baseType: !278, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "functional", scope: !4318, file: !4305, line: 183, baseType: !278, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "battery_present", scope: !4318, file: !4305, line: 184, baseType: !278, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4318, file: !4305, line: 185, baseType: !278, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4304, file: !4305, line: 361, baseType: !4327, size: 32, offset: 928)
!4327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_flags", file: !4305, line: 190, size: 32, elements: !4328)
!4328 = !{!4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_status", scope: !4327, file: !4305, line: 191, baseType: !278, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !4327, file: !4305, line: 192, baseType: !278, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "ejectable", scope: !4327, file: !4305, line: 193, baseType: !278, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "power_manageable", scope: !4327, file: !4305, line: 194, baseType: !278, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4327, file: !4305, line: 195, baseType: !278, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !4327, file: !4305, line: 196, baseType: !278, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !4327, file: !4305, line: 197, baseType: !278, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_notify", scope: !4327, file: !4305, line: 198, baseType: !278, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "is_dock_station", scope: !4327, file: !4305, line: 199, baseType: !278, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible_ok", scope: !4327, file: !4305, line: 200, baseType: !278, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma", scope: !4327, file: !4305, line: 201, baseType: !278, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "cca_seen", scope: !4327, file: !4305, line: 202, baseType: !278, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "enumeration_by_parent", scope: !4327, file: !4305, line: 203, baseType: !278, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4327, file: !4305, line: 204, baseType: !278, size: 19, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "pnp", scope: !4304, file: !4305, line: 362, baseType: !4344, size: 960, offset: 960)
!4344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_pnp", file: !4305, line: 234, size: 960, elements: !4345)
!4345 = !{!4346, !4348, !4355, !4357, !4358, !4359, !4364, !4367}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !4344, file: !4305, line: 235, baseType: !4347, size: 64)
!4347 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_id", file: !4305, line: 217, baseType: !3177)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4344, file: !4305, line: 236, baseType: !4349, size: 32, offset: 64)
!4349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_type", file: !4305, line: 227, size: 32, elements: !4350)
!4350 = !{!4351, !4352, !4353, !4354}
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !4349, file: !4305, line: 228, baseType: !278, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4349, file: !4305, line: 229, baseType: !278, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !4349, file: !4305, line: 230, baseType: !278, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4349, file: !4305, line: 231, baseType: !278, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4344, file: !4305, line: 237, baseType: !4356, size: 64, offset: 128)
!4356 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_address", file: !4305, line: 218, baseType: !343)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !4344, file: !4305, line: 238, baseType: !733, size: 64, offset: 192)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4344, file: !4305, line: 239, baseType: !336, size: 128, offset: 256)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !4344, file: !4305, line: 240, baseType: !4360, size: 320, offset: 384)
!4360 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_name", file: !4305, line: 219, baseType: !4361)
!4361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 320, elements: !4362)
!4362 = !{!4363}
!4363 = !DISubrange(count: 40)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "device_class", scope: !4344, file: !4305, line: 241, baseType: !4365, size: 160, offset: 704)
!4365 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_class", file: !4305, line: 220, baseType: !4366)
!4366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 160, elements: !3342)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "str_obj", scope: !4344, file: !4305, line: 242, baseType: !4368, size: 64, offset: 896)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !4310, line: 899, size: 192, elements: !4370)
!4370 = !{!4371, !4373, !4378, !4384, !4391, !4397, !4403, !4411}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4369, file: !4310, line: 900, baseType: !4372, size: 32)
!4372 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !4310, line: 635, baseType: !278)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !4369, file: !4310, line: 904, baseType: !4374, size: 128)
!4374 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4369, file: !4310, line: 901, size: 128, elements: !4375)
!4375 = !{!4376, !4377}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4374, file: !4310, line: 902, baseType: !4372, size: 32)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4374, file: !4310, line: 903, baseType: !343, size: 64, offset: 64)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4369, file: !4310, line: 910, baseType: !4379, size: 128)
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4369, file: !4310, line: 906, size: 128, elements: !4380)
!4380 = !{!4381, !4382, !4383}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4379, file: !4310, line: 907, baseType: !4372, size: 32)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4379, file: !4310, line: 908, baseType: !278, size: 32, offset: 32)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4379, file: !4310, line: 909, baseType: !733, size: 64, offset: 64)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4369, file: !4310, line: 916, baseType: !4385, size: 128)
!4385 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4369, file: !4310, line: 912, size: 128, elements: !4386)
!4386 = !{!4387, !4388, !4389}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4385, file: !4310, line: 913, baseType: !4372, size: 32)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4385, file: !4310, line: 914, baseType: !278, size: 32, offset: 32)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4385, file: !4310, line: 915, baseType: !4390, size: 64, offset: 64)
!4390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !4369, file: !4310, line: 922, baseType: !4392, size: 128)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4369, file: !4310, line: 918, size: 128, elements: !4393)
!4393 = !{!4394, !4395, !4396}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4392, file: !4310, line: 919, baseType: !4372, size: 32)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4392, file: !4310, line: 920, baseType: !278, size: 32, offset: 32)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !4392, file: !4310, line: 921, baseType: !4368, size: 64, offset: 64)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !4369, file: !4310, line: 928, baseType: !4398, size: 128)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4369, file: !4310, line: 924, size: 128, elements: !4399)
!4399 = !{!4400, !4401, !4402}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4398, file: !4310, line: 925, baseType: !4372, size: 32)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !4398, file: !4310, line: 926, baseType: !4372, size: 32, offset: 32)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4398, file: !4310, line: 927, baseType: !4309, size: 64, offset: 64)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !4369, file: !4310, line: 935, baseType: !4404, size: 192)
!4404 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4369, file: !4310, line: 930, size: 192, elements: !4405)
!4405 = !{!4406, !4407, !4408, !4410}
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4404, file: !4310, line: 931, baseType: !4372, size: 32)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !4404, file: !4310, line: 932, baseType: !278, size: 32, offset: 32)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !4404, file: !4310, line: 933, baseType: !4409, size: 64, offset: 64)
!4409 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !4310, line: 128, baseType: !343)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !4404, file: !4310, line: 934, baseType: !278, size: 32, offset: 128)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !4369, file: !4310, line: 941, baseType: !4412, size: 96)
!4412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4369, file: !4310, line: 937, size: 96, elements: !4413)
!4413 = !{!4414, !4415, !4416}
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4412, file: !4310, line: 938, baseType: !4372, size: 32)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !4412, file: !4310, line: 939, baseType: !278, size: 32, offset: 32)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !4412, file: !4310, line: 940, baseType: !278, size: 32, offset: 64)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4304, file: !4305, line: 363, baseType: !4418, size: 1344, offset: 1920)
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power", file: !4305, line: 275, size: 1344, elements: !4419)
!4419 = !{!4420, !4421, !4431}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4418, file: !4305, line: 276, baseType: !277, size: 32)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4418, file: !4305, line: 277, baseType: !4422, size: 32, offset: 32)
!4422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_flags", file: !4305, line: 254, size: 32, elements: !4423)
!4423 = !{!4424, !4425, !4426, !4427, !4428, !4429, !4430}
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_get", scope: !4422, file: !4305, line: 255, baseType: !278, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "power_resources", scope: !4422, file: !4305, line: 256, baseType: !278, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "inrush_current", scope: !4422, file: !4305, line: 257, baseType: !278, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "power_removed", scope: !4422, file: !4305, line: 258, baseType: !278, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parent", scope: !4422, file: !4305, line: 259, baseType: !278, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "dsw_present", scope: !4422, file: !4305, line: 260, baseType: !278, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4422, file: !4305, line: 261, baseType: !278, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4418, file: !4305, line: 278, baseType: !4432, size: 1280, offset: 64)
!4432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4433, size: 1280, elements: !4444)
!4433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_state", file: !4305, line: 264, size: 256, elements: !4434)
!4434 = !{!4435, !4441, !4442, !4443}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4433, file: !4305, line: 269, baseType: !4436, size: 8)
!4436 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4433, file: !4305, line: 265, size: 8, elements: !4437)
!4437 = !{!4438, !4439, !4440}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4436, file: !4305, line: 266, baseType: !465, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_set", scope: !4436, file: !4305, line: 267, baseType: !465, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4436, file: !4305, line: 268, baseType: !465, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4433, file: !4305, line: 270, baseType: !277, size: 32, offset: 32)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4433, file: !4305, line: 271, baseType: !277, size: 32, offset: 64)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4433, file: !4305, line: 272, baseType: !336, size: 128, offset: 128)
!4444 = !{!4445}
!4445 = !DISubrange(count: 5)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4304, file: !4305, line: 364, baseType: !4447, size: 640, offset: 3264)
!4447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup", file: !4305, line: 315, size: 640, elements: !4448)
!4448 = !{!4449, !4450, !4451, !4452, !4453, !4458, !4467, !4468, !4469}
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_device", scope: !4447, file: !4305, line: 316, baseType: !4309, size: 64)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_number", scope: !4447, file: !4305, line: 317, baseType: !343, size: 64, offset: 64)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "sleep_state", scope: !4447, file: !4305, line: 318, baseType: !343, size: 64, offset: 128)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4447, file: !4305, line: 319, baseType: !336, size: 128, offset: 192)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4447, file: !4305, line: 320, baseType: !4454, size: 8, offset: 320)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_flags", file: !4305, line: 305, size: 8, elements: !4455)
!4455 = !{!4456, !4457}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4454, file: !4305, line: 306, baseType: !465, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_present", scope: !4454, file: !4305, line: 307, baseType: !465, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4447, file: !4305, line: 321, baseType: !4459, size: 128, offset: 384)
!4459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_context", file: !4305, line: 310, size: 128, elements: !4460)
!4460 = !{!4461, !4466}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4459, file: !4305, line: 311, baseType: !4462, size: 64)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{null, !4465}
!4465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 64)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4459, file: !4305, line: 312, baseType: !3524, size: 64, offset: 64)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !4447, file: !4305, line: 322, baseType: !3706, size: 64, offset: 512)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !4447, file: !4305, line: 323, baseType: !277, size: 32, offset: 576)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !4447, file: !4305, line: 324, baseType: !277, size: 32, offset: 608)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4304, file: !4305, line: 365, baseType: !4471, size: 192, offset: 3904)
!4471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf", file: !4305, line: 297, size: 192, elements: !4472)
!4472 = !{!4473, !4474, !4478, !4479}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4471, file: !4305, line: 298, baseType: !277, size: 32)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4471, file: !4305, line: 299, baseType: !4475, size: 8, offset: 32)
!4475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_flags", file: !4305, line: 283, size: 8, elements: !4476)
!4476 = !{!4477}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4475, file: !4305, line: 284, baseType: !465, size: 8, flags: DIFlagBitField, extraData: i64 0)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !4471, file: !4305, line: 300, baseType: !277, size: 32, offset: 64)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4471, file: !4305, line: 301, baseType: !4480, size: 64, offset: 128)
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4481, size: 64)
!4481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_state", file: !4305, line: 287, size: 64, elements: !4482)
!4482 = !{!4483, !4488, !4489, !4490}
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4481, file: !4305, line: 291, baseType: !4484, size: 8)
!4484 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4481, file: !4305, line: 288, size: 8, elements: !4485)
!4485 = !{!4486, !4487}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4484, file: !4305, line: 289, baseType: !465, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4484, file: !4305, line: 290, baseType: !465, size: 7, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4481, file: !4305, line: 292, baseType: !465, size: 8, offset: 8)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4481, file: !4305, line: 293, baseType: !465, size: 8, offset: 16)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4481, file: !4305, line: 294, baseType: !277, size: 32, offset: 32)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4304, file: !4305, line: 366, baseType: !4492, size: 64, offset: 4096)
!4492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_dir", file: !4305, line: 209, size: 64, elements: !4493)
!4493 = !{!4494}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4492, file: !4305, line: 210, baseType: !3509, size: 64)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4304, file: !4305, line: 367, baseType: !4496, size: 384, offset: 4160)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_data", file: !4305, line: 341, size: 384, elements: !4497)
!4497 = !{!4498, !4501, !4502, !4503}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4496, file: !4305, line: 342, baseType: !4499, size: 64)
!4499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4500, size: 64)
!4500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4369)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4496, file: !4305, line: 343, baseType: !336, size: 128, offset: 64)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible", scope: !4496, file: !4305, line: 344, baseType: !4499, size: 64, offset: 192)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "subnodes", scope: !4496, file: !4305, line: 345, baseType: !336, size: 128, offset: 256)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4304, file: !4305, line: 368, baseType: !4505, size: 64, offset: 4544)
!4505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4506, size: 64)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_scan_handler", file: !4305, line: 122, size: 1216, elements: !4507)
!4507 = !{!4508, !4509, !4510, !4515, !4519, !4523, !4524, !4525}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4506, file: !4305, line: 123, baseType: !3621, size: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !4506, file: !4305, line: 124, baseType: !336, size: 128, offset: 64)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4506, file: !4305, line: 125, baseType: !4511, size: 64, offset: 192)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!752, !707, !4514}
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3621, size: 64)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4506, file: !4305, line: 126, baseType: !4516, size: 64, offset: 256)
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!277, !4303, !3621}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4506, file: !4305, line: 127, baseType: !4520, size: 64, offset: 320)
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4521, size: 64)
!4521 = !DISubroutineType(types: !4522)
!4522 = !{null, !4303}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !4506, file: !4305, line: 128, baseType: !3550, size: 64, offset: 384)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !4506, file: !4305, line: 129, baseType: !3550, size: 64, offset: 448)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4506, file: !4305, line: 130, baseType: !4526, size: 704, offset: 512)
!4526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_profile", file: !4305, line: 108, size: 704, elements: !4527)
!4527 = !{!4528, !4529, !4533, !4534, !4535}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4526, file: !4305, line: 109, baseType: !2017, size: 512)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "scan_dependent", scope: !4526, file: !4305, line: 110, baseType: !4530, size: 64, offset: 512)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DISubroutineType(types: !4532)
!4532 = !{!277, !4303}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "notify_online", scope: !4526, file: !4305, line: 111, baseType: !4520, size: 64, offset: 576)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4526, file: !4305, line: 112, baseType: !752, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "demand_offline", scope: !4526, file: !4305, line: 113, baseType: !752, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !4304, file: !4305, line: 369, baseType: !4537, size: 64, offset: 4608)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_context", file: !4305, line: 138, size: 256, elements: !4539)
!4539 = !{!4540, !4541, !4545, !4549}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4538, file: !4305, line: 139, baseType: !4303, size: 64)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4538, file: !4305, line: 140, baseType: !4542, size: 64, offset: 64)
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4543, size: 64)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{!277, !4303, !278}
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4538, file: !4305, line: 141, baseType: !4546, size: 64, offset: 128)
!4546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4547, size: 64)
!4547 = !DISubroutineType(types: !4548)
!4548 = !{null, !4303, !278}
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !4538, file: !4305, line: 142, baseType: !4520, size: 64, offset: 192)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4304, file: !4305, line: 370, baseType: !4551, size: 64, offset: 4672)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 64)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_driver", file: !4305, line: 162, size: 2816, elements: !4553)
!4553 = !{!4554, !4558, !4559, !4560, !4561, !4570, !4571}
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4552, file: !4305, line: 163, baseType: !4555, size: 640)
!4555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 640, elements: !4556)
!4556 = !{!4557}
!4557 = !DISubrange(count: 80)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4552, file: !4305, line: 164, baseType: !4555, size: 640, offset: 640)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4552, file: !4305, line: 165, baseType: !3621, size: 64, offset: 1280)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4552, file: !4305, line: 166, baseType: !7, size: 32, offset: 1344)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4552, file: !4305, line: 167, baseType: !4562, size: 192, offset: 1408)
!4562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_ops", file: !4305, line: 154, size: 192, elements: !4563)
!4563 = !{!4564, !4566, !4568}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !4562, file: !4305, line: 155, baseType: !4565, size: 64)
!4565 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_add", file: !4305, line: 150, baseType: !4530)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4562, file: !4305, line: 156, baseType: !4567, size: 64, offset: 64)
!4567 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_remove", file: !4305, line: 151, baseType: !4530)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4562, file: !4305, line: 157, baseType: !4569, size: 64, offset: 128)
!4569 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_notify", file: !4305, line: 152, baseType: !4546)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !4552, file: !4305, line: 168, baseType: !3600, size: 1152, offset: 1600)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4552, file: !4305, line: 169, baseType: !799, size: 64, offset: 2752)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "driver_gpios", scope: !4304, file: !4305, line: 371, baseType: !4573, size: 64, offset: 4736)
!4573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4574, size: 64)
!4574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4575)
!4575 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_mapping", file: !4305, line: 348, flags: DIFlagFwdDecl)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4304, file: !4305, line: 372, baseType: !280, size: 64, offset: 4800)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4304, file: !4305, line: 373, baseType: !3525, size: 5568, offset: 4864)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_count", scope: !4304, file: !4305, line: 374, baseType: !7, size: 32, offset: 10432)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "dep_unmet", scope: !4304, file: !4305, line: 375, baseType: !7, size: 32, offset: 10464)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_list", scope: !4304, file: !4305, line: 376, baseType: !336, size: 128, offset: 10496)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_lock", scope: !4304, file: !4305, line: 377, baseType: !924, size: 192, offset: 10624)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4304, file: !4305, line: 378, baseType: !4520, size: 64, offset: 10816)
!4583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!4584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4585, size: 64)
!4585 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !807)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 64)
!4587 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !812)
!4588 = !{!4589, !4591, !4593, !4595, !4597, !4599, !4601, !4603, !4605, !4607, !4609, !4611, !4613, !4615, !4617, !4619, !4621, !4623, !4625, !4627, !4629, !4631, !4633, !4635, !4637, !4639, !4641, !4643, !4645, !4647, !4649, !4651, !4653, !4655, !4657, !4659, !4661, !4663, !4665, !4667, !4669, !4671, !4673, !4675, !4677, !4679, !4681, !4683, !4685, !4687, !4689, !4691, !4693, !4695, !4697, !4699, !4701, !4703, !4705, !4707, !4709, !4711, !4713, !4715, !4717, !4719, !4721, !4723, !4725, !4727, !4729, !4731, !4733, !4735, !4737, !4739, !4741, !4743, !4745, !4747, !4749, !4751, !4753, !4755, !4757, !4759, !4761, !4763, !4765, !4767, !4769, !4771, !4773, !4775, !4777, !4779, !4781, !4783, !4785, !4787, !4789, !4791, !4793, !4795, !4797, !4799, !4801, !4803, !4805, !4807, !4809, !4811, !4813, !4815, !4817, !4819, !4821, !4823, !4825, !4827, !4829, !4831, !4833, !4835, !4837, !4839, !4841, !4843, !4845, !4847, !4849, !4851, !4853, !4855, !4857, !4859, !4861, !4863, !4865, !4867, !4869, !4871, !4873, !4875, !4877, !4879, !4881, !4883, !4885, !4887, !4889, !4891, !4893, !4895, !4897, !4899, !4901, !4903, !4905, !4907, !4909, !4911, !4913, !4915, !4917, !4919, !4921, !4923, !4925, !4927, !4929, !4931, !4933, !4935, !4937, !4939, !4941, !4943, !4945, !4947, !4949, !4951, !4953, !4955, !4957, !4959, !4961, !4963, !4965, !4967, !4969, !4971, !4973, !4975, !4977, !4979, !4981, !4983, !4985, !4987, !4989, !4991, !4993, !4995, !4997, !4999, !5001, !5003, !5005, !5007, !5009, !5011, !5013, !5015, !5017, !5019, !5021, !5023, !5025, !5027, !5029, !5031, !5033, !5035, !5037, !5039, !5041, !5043, !5045, !5047, !5049, !5051, !5053, !5055, !5057, !5059, !5061, !5063, !5065, !5067, !5069, !5071, !5073, !5075, !5077, !5079, !5081, !5083, !5085, !5087, !5089, !5091, !5093, !5095, !5097, !5099, !5101, !5103, !5105, !5107, !5109, !5111, !5113, !5115, !5117, !5119, !5121, !5123, !5125, !5127, !5129, !5131, !5133, !5135, !5137, !5139, !5141, !5143, !5145, !5147, !5149, !5151, !5153, !5155, !5157, !5159, !5161, !5163, !5165, !5167, !5169, !5171, !5173, !5175, !5177, !5179, !5181, !5183, !5185, !5187, !5189, !5191, !5193, !5195, !5197, !5199, !5201, !5203, !5205, !5207, !5209, !5211, !5213, !5215, !5217, !5219, !5221, !5223, !5225, !5227, !5229, !5231, !5233, !5235, !5237, !5239, !5241, !5243, !5245, !5247, !5249, !5251, !5253, !5255, !5257, !5259, !5261, !5263, !5265, !5267, !5269, !5271, !5273, !5275, !5277, !5279, !5281, !5283, !5285, !5287, !5289, !5291, !5293, !5295, !5297, !5299, !5301, !5303, !5305, !5307, !5309, !5311, !5313, !5315, !5317, !5319, !5321, !5323, !5325, !5327, !5329, !5331, !5333, !5335, !5337, !5339, !5341, !5343, !5345, !5347, !5349, !5351, !5353, !5355, !5357, !5359, !5361, !5363, !5365, !5367, !5369, !5371, !5373, !5375, !5377, !5379, !5381, !5383, !5385, !5387, !5389, !5391, !5393, !5395, !5397, !5399, !5401, !5403, !5405, !5407, !5409, !5411, !5413, !5415, !5417, !5419, !5421, !5423, !5425, !5427, !5429, !5431, !5433, !5435, !5437, !5439, !5441, !5443, !5445, !5447, !5449, !5451, !5453, !5455, !5457, !5459, !5461, !5463, !5465, !5467, !5469, !5471, !5473, !5475, !5477, !5479, !5481, !5483, !5485, !5487, !5489, !5491, !5493, !5495, !5497, !5499, !5501, !5503, !5505, !5507, !5509, !5511, !5513, !5515, !5517, !5519, !5521, !5523, !5525, !5527, !5529, !5531, !5533, !5535, !5537, !5539, !5541, !5543, !5545, !5547, !5549, !5551, !5553, !5555, !5557, !5559, !5561, !5563, !5565, !5567, !5569, !5571, !5573, !5575, !5577, !5579, !5581, !5583, !5585, !5587, !5589, !5591, !5593, !5595, !5597, !5599, !5601, !5603, !5605, !5607, !5609, !5611, !5613, !5615, !5617, !5619, !5621, !5623, !5625, !5627, !5629, !5631, !5633, !5635, !5637, !5639, !5641, !5643, !5645, !5647, !5649, !5651, !5653, !5655, !5657, !5659, !5661, !5663, !5665, !5667, !5669, !5671, !5673, !5675, !5677, !5679, !5681, !5683, !5685, !5687, !5689, !5691, !5693, !5695, !5697, !5699, !5701, !5703, !5705, !5707, !5709, !5711, !5713, !5715, !5717, !5719, !5721, !5723, !5725, !5727, !5729, !5731, !5733, !5735, !5737, !5739, !5741, !5743, !5745, !5747, !5749, !5751, !5753, !5755, !5757, !5759, !5761, !5763, !5765, !5767, !5769, !5771, !5773, !5775, !5777, !5779, !5781, !5783, !5785, !5787, !5789, !0, !5791, !5794, !5796, !5798, !5800, !5802, !5825, !5828, !5833, !5844, !5847, !5861, !5867}
!4589 = !DIGlobalVariableExpression(var: !4590, expr: !DIExpression())
!4590 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_apply_final_quirks240", scope: !2, file: !3, line: 193, type: !280, isLocal: true, isDefinition: true)
!4591 = !DIGlobalVariableExpression(var: !4592, expr: !DIExpression())
!4592 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_mmio_always_on241", scope: !2, file: !3, line: 205, type: !280, isLocal: true, isDefinition: true)
!4593 = !DIGlobalVariableExpression(var: !4594, expr: !DIExpression())
!4594 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_mellanox_tavor242", scope: !2, file: !3, line: 217, type: !280, isLocal: true, isDefinition: true)
!4595 = !DIGlobalVariableExpression(var: !4596, expr: !DIExpression())
!4596 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_mellanox_tavor243", scope: !2, file: !3, line: 218, type: !280, isLocal: true, isDefinition: true)
!4597 = !DIGlobalVariableExpression(var: !4598, expr: !DIExpression())
!4598 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_passive_release244", scope: !2, file: !3, line: 242, type: !280, isLocal: true, isDefinition: true)
!4599 = !DIGlobalVariableExpression(var: !4600, expr: !DIExpression())
!4600 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_passive_release245", scope: !2, file: !3, line: 243, type: !280, isLocal: true, isDefinition: true)
!4601 = !DIGlobalVariableExpression(var: !4602, expr: !DIExpression())
!4602 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_isa_dma_hangs246", scope: !2, file: !3, line: 264, type: !280, isLocal: true, isDefinition: true)
!4603 = !DIGlobalVariableExpression(var: !4604, expr: !DIExpression())
!4604 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_isa_dma_hangs247", scope: !2, file: !3, line: 265, type: !280, isLocal: true, isDefinition: true)
!4605 = !DIGlobalVariableExpression(var: !4606, expr: !DIExpression())
!4606 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_isa_dma_hangs248", scope: !2, file: !3, line: 266, type: !280, isLocal: true, isDefinition: true)
!4607 = !DIGlobalVariableExpression(var: !4608, expr: !DIExpression())
!4608 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_isa_dma_hangs249", scope: !2, file: !3, line: 267, type: !280, isLocal: true, isDefinition: true)
!4609 = !DIGlobalVariableExpression(var: !4610, expr: !DIExpression())
!4610 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_isa_dma_hangs250", scope: !2, file: !3, line: 268, type: !280, isLocal: true, isDefinition: true)
!4611 = !DIGlobalVariableExpression(var: !4612, expr: !DIExpression())
!4612 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_isa_dma_hangs251", scope: !2, file: !3, line: 269, type: !280, isLocal: true, isDefinition: true)
!4613 = !DIGlobalVariableExpression(var: !4614, expr: !DIExpression())
!4614 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_isa_dma_hangs252", scope: !2, file: !3, line: 270, type: !280, isLocal: true, isDefinition: true)
!4615 = !DIGlobalVariableExpression(var: !4616, expr: !DIExpression())
!4616 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_tigerpoint_bm_sts253", scope: !2, file: !3, line: 290, type: !280, isLocal: true, isDefinition: true)
!4617 = !DIGlobalVariableExpression(var: !4618, expr: !DIExpression())
!4618 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nopcipci254", scope: !2, file: !3, line: 300, type: !280, isLocal: true, isDefinition: true)
!4619 = !DIGlobalVariableExpression(var: !4620, expr: !DIExpression())
!4620 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nopcipci255", scope: !2, file: !3, line: 301, type: !280, isLocal: true, isDefinition: true)
!4621 = !DIGlobalVariableExpression(var: !4622, expr: !DIExpression())
!4622 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nopciamd256", scope: !2, file: !3, line: 313, type: !280, isLocal: true, isDefinition: true)
!4623 = !DIGlobalVariableExpression(var: !4624, expr: !DIExpression())
!4624 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_triton257", scope: !2, file: !3, line: 323, type: !280, isLocal: true, isDefinition: true)
!4625 = !DIGlobalVariableExpression(var: !4626, expr: !DIExpression())
!4626 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_triton258", scope: !2, file: !3, line: 324, type: !280, isLocal: true, isDefinition: true)
!4627 = !DIGlobalVariableExpression(var: !4628, expr: !DIExpression())
!4628 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_triton259", scope: !2, file: !3, line: 325, type: !280, isLocal: true, isDefinition: true)
!4629 = !DIGlobalVariableExpression(var: !4630, expr: !DIExpression())
!4630 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_triton260", scope: !2, file: !3, line: 326, type: !280, isLocal: true, isDefinition: true)
!4631 = !DIGlobalVariableExpression(var: !4632, expr: !DIExpression())
!4632 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_vialatency261", scope: !2, file: !3, line: 392, type: !280, isLocal: true, isDefinition: true)
!4633 = !DIGlobalVariableExpression(var: !4634, expr: !DIExpression())
!4634 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_vialatency262", scope: !2, file: !3, line: 393, type: !280, isLocal: true, isDefinition: true)
!4635 = !DIGlobalVariableExpression(var: !4636, expr: !DIExpression())
!4636 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_vialatency263", scope: !2, file: !3, line: 394, type: !280, isLocal: true, isDefinition: true)
!4637 = !DIGlobalVariableExpression(var: !4638, expr: !DIExpression())
!4638 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_vialatency264", scope: !2, file: !3, line: 396, type: !280, isLocal: true, isDefinition: true)
!4639 = !DIGlobalVariableExpression(var: !4640, expr: !DIExpression())
!4640 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_vialatency265", scope: !2, file: !3, line: 397, type: !280, isLocal: true, isDefinition: true)
!4641 = !DIGlobalVariableExpression(var: !4642, expr: !DIExpression())
!4642 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_vialatency266", scope: !2, file: !3, line: 398, type: !280, isLocal: true, isDefinition: true)
!4643 = !DIGlobalVariableExpression(var: !4644, expr: !DIExpression())
!4644 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_viaetbf267", scope: !2, file: !3, line: 408, type: !280, isLocal: true, isDefinition: true)
!4645 = !DIGlobalVariableExpression(var: !4646, expr: !DIExpression())
!4646 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_vsfx268", scope: !2, file: !3, line: 417, type: !280, isLocal: true, isDefinition: true)
!4647 = !DIGlobalVariableExpression(var: !4648, expr: !DIExpression())
!4648 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_alimagik269", scope: !2, file: !3, line: 431, type: !280, isLocal: true, isDefinition: true)
!4649 = !DIGlobalVariableExpression(var: !4650, expr: !DIExpression())
!4650 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_alimagik270", scope: !2, file: !3, line: 432, type: !280, isLocal: true, isDefinition: true)
!4651 = !DIGlobalVariableExpression(var: !4652, expr: !DIExpression())
!4652 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_natoma271", scope: !2, file: !3, line: 442, type: !280, isLocal: true, isDefinition: true)
!4653 = !DIGlobalVariableExpression(var: !4654, expr: !DIExpression())
!4654 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_natoma272", scope: !2, file: !3, line: 443, type: !280, isLocal: true, isDefinition: true)
!4655 = !DIGlobalVariableExpression(var: !4656, expr: !DIExpression())
!4656 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_natoma273", scope: !2, file: !3, line: 444, type: !280, isLocal: true, isDefinition: true)
!4657 = !DIGlobalVariableExpression(var: !4658, expr: !DIExpression())
!4658 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_natoma274", scope: !2, file: !3, line: 445, type: !280, isLocal: true, isDefinition: true)
!4659 = !DIGlobalVariableExpression(var: !4660, expr: !DIExpression())
!4660 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_natoma275", scope: !2, file: !3, line: 446, type: !280, isLocal: true, isDefinition: true)
!4661 = !DIGlobalVariableExpression(var: !4662, expr: !DIExpression())
!4662 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_natoma276", scope: !2, file: !3, line: 447, type: !280, isLocal: true, isDefinition: true)
!4663 = !DIGlobalVariableExpression(var: !4664, expr: !DIExpression())
!4664 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_citrine277", scope: !2, file: !3, line: 457, type: !280, isLocal: true, isDefinition: true)
!4665 = !DIGlobalVariableExpression(var: !4666, expr: !DIExpression())
!4666 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nfp6000278", scope: !2, file: !3, line: 467, type: !280, isLocal: true, isDefinition: true)
!4667 = !DIGlobalVariableExpression(var: !4668, expr: !DIExpression())
!4668 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nfp6000279", scope: !2, file: !3, line: 468, type: !280, isLocal: true, isDefinition: true)
!4669 = !DIGlobalVariableExpression(var: !4670, expr: !DIExpression())
!4670 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nfp6000280", scope: !2, file: !3, line: 469, type: !280, isLocal: true, isDefinition: true)
!4671 = !DIGlobalVariableExpression(var: !4672, expr: !DIExpression())
!4672 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nfp6000281", scope: !2, file: !3, line: 470, type: !280, isLocal: true, isDefinition: true)
!4673 = !DIGlobalVariableExpression(var: !4674, expr: !DIExpression())
!4674 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_extend_bar_to_page282", scope: !2, file: !3, line: 489, type: !280, isLocal: true, isDefinition: true)
!4675 = !DIGlobalVariableExpression(var: !4676, expr: !DIExpression())
!4676 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_s3_64M283", scope: !2, file: !3, line: 505, type: !280, isLocal: true, isDefinition: true)
!4677 = !DIGlobalVariableExpression(var: !4678, expr: !DIExpression())
!4678 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_s3_64M284", scope: !2, file: !3, line: 506, type: !280, isLocal: true, isDefinition: true)
!4679 = !DIGlobalVariableExpression(var: !4680, expr: !DIExpression())
!4680 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_cs5536_vsa285", scope: !2, file: !3, line: 556, type: !280, isLocal: true, isDefinition: true)
!4681 = !DIGlobalVariableExpression(var: !4682, expr: !DIExpression())
!4682 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ati_exploding_mce286", scope: !2, file: !3, line: 594, type: !280, isLocal: true, isDefinition: true)
!4683 = !DIGlobalVariableExpression(var: !4684, expr: !DIExpression())
!4684 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_nl_class287", scope: !2, file: !3, line: 616, type: !280, isLocal: true, isDefinition: true)
!4685 = !DIGlobalVariableExpression(var: !4686, expr: !DIExpression())
!4686 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_synopsys_haps288", scope: !2, file: !3, line: 640, type: !280, isLocal: true, isDefinition: true)
!4687 = !DIGlobalVariableExpression(var: !4688, expr: !DIExpression())
!4688 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ali7101_acpi289", scope: !2, file: !3, line: 659, type: !280, isLocal: true, isDefinition: true)
!4689 = !DIGlobalVariableExpression(var: !4690, expr: !DIExpression())
!4690 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_piix4_acpi290", scope: !2, file: !3, line: 747, type: !280, isLocal: true, isDefinition: true)
!4691 = !DIGlobalVariableExpression(var: !4692, expr: !DIExpression())
!4692 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_piix4_acpi291", scope: !2, file: !3, line: 748, type: !280, isLocal: true, isDefinition: true)
!4693 = !DIGlobalVariableExpression(var: !4694, expr: !DIExpression())
!4694 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi292", scope: !2, file: !3, line: 787, type: !280, isLocal: true, isDefinition: true)
!4695 = !DIGlobalVariableExpression(var: !4696, expr: !DIExpression())
!4696 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi293", scope: !2, file: !3, line: 788, type: !280, isLocal: true, isDefinition: true)
!4697 = !DIGlobalVariableExpression(var: !4698, expr: !DIExpression())
!4698 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi294", scope: !2, file: !3, line: 789, type: !280, isLocal: true, isDefinition: true)
!4699 = !DIGlobalVariableExpression(var: !4700, expr: !DIExpression())
!4700 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi295", scope: !2, file: !3, line: 790, type: !280, isLocal: true, isDefinition: true)
!4701 = !DIGlobalVariableExpression(var: !4702, expr: !DIExpression())
!4702 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi296", scope: !2, file: !3, line: 791, type: !280, isLocal: true, isDefinition: true)
!4703 = !DIGlobalVariableExpression(var: !4704, expr: !DIExpression())
!4704 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi297", scope: !2, file: !3, line: 792, type: !280, isLocal: true, isDefinition: true)
!4705 = !DIGlobalVariableExpression(var: !4706, expr: !DIExpression())
!4706 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi298", scope: !2, file: !3, line: 793, type: !280, isLocal: true, isDefinition: true)
!4707 = !DIGlobalVariableExpression(var: !4708, expr: !DIExpression())
!4708 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi299", scope: !2, file: !3, line: 794, type: !280, isLocal: true, isDefinition: true)
!4709 = !DIGlobalVariableExpression(var: !4710, expr: !DIExpression())
!4710 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi300", scope: !2, file: !3, line: 795, type: !280, isLocal: true, isDefinition: true)
!4711 = !DIGlobalVariableExpression(var: !4712, expr: !DIExpression())
!4712 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich4_lpc_acpi301", scope: !2, file: !3, line: 796, type: !280, isLocal: true, isDefinition: true)
!4713 = !DIGlobalVariableExpression(var: !4714, expr: !DIExpression())
!4714 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich6_lpc302", scope: !2, file: !3, line: 854, type: !280, isLocal: true, isDefinition: true)
!4715 = !DIGlobalVariableExpression(var: !4716, expr: !DIExpression())
!4716 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich6_lpc303", scope: !2, file: !3, line: 855, type: !280, isLocal: true, isDefinition: true)
!4717 = !DIGlobalVariableExpression(var: !4718, expr: !DIExpression())
!4718 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc304", scope: !2, file: !3, line: 893, type: !280, isLocal: true, isDefinition: true)
!4719 = !DIGlobalVariableExpression(var: !4720, expr: !DIExpression())
!4720 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc305", scope: !2, file: !3, line: 894, type: !280, isLocal: true, isDefinition: true)
!4721 = !DIGlobalVariableExpression(var: !4722, expr: !DIExpression())
!4722 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc306", scope: !2, file: !3, line: 895, type: !280, isLocal: true, isDefinition: true)
!4723 = !DIGlobalVariableExpression(var: !4724, expr: !DIExpression())
!4724 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc307", scope: !2, file: !3, line: 896, type: !280, isLocal: true, isDefinition: true)
!4725 = !DIGlobalVariableExpression(var: !4726, expr: !DIExpression())
!4726 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc308", scope: !2, file: !3, line: 897, type: !280, isLocal: true, isDefinition: true)
!4727 = !DIGlobalVariableExpression(var: !4728, expr: !DIExpression())
!4728 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc309", scope: !2, file: !3, line: 898, type: !280, isLocal: true, isDefinition: true)
!4729 = !DIGlobalVariableExpression(var: !4730, expr: !DIExpression())
!4730 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc310", scope: !2, file: !3, line: 899, type: !280, isLocal: true, isDefinition: true)
!4731 = !DIGlobalVariableExpression(var: !4732, expr: !DIExpression())
!4732 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc311", scope: !2, file: !3, line: 900, type: !280, isLocal: true, isDefinition: true)
!4733 = !DIGlobalVariableExpression(var: !4734, expr: !DIExpression())
!4734 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc312", scope: !2, file: !3, line: 901, type: !280, isLocal: true, isDefinition: true)
!4735 = !DIGlobalVariableExpression(var: !4736, expr: !DIExpression())
!4736 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc313", scope: !2, file: !3, line: 902, type: !280, isLocal: true, isDefinition: true)
!4737 = !DIGlobalVariableExpression(var: !4738, expr: !DIExpression())
!4738 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc314", scope: !2, file: !3, line: 903, type: !280, isLocal: true, isDefinition: true)
!4739 = !DIGlobalVariableExpression(var: !4740, expr: !DIExpression())
!4740 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc315", scope: !2, file: !3, line: 904, type: !280, isLocal: true, isDefinition: true)
!4741 = !DIGlobalVariableExpression(var: !4742, expr: !DIExpression())
!4742 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ich7_lpc316", scope: !2, file: !3, line: 905, type: !280, isLocal: true, isDefinition: true)
!4743 = !DIGlobalVariableExpression(var: !4744, expr: !DIExpression())
!4744 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_vt82c586_acpi317", scope: !2, file: !3, line: 917, type: !280, isLocal: true, isDefinition: true)
!4745 = !DIGlobalVariableExpression(var: !4746, expr: !DIExpression())
!4746 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_vt82c686_acpi318", scope: !2, file: !3, line: 934, type: !280, isLocal: true, isDefinition: true)
!4747 = !DIGlobalVariableExpression(var: !4748, expr: !DIExpression())
!4748 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_vt8235_acpi319", scope: !2, file: !3, line: 946, type: !280, isLocal: true, isDefinition: true)
!4749 = !DIGlobalVariableExpression(var: !4750, expr: !DIExpression())
!4750 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_xio2000a322", scope: !2, file: !3, line: 964, type: !280, isLocal: true, isDefinition: true)
!4751 = !DIGlobalVariableExpression(var: !4752, expr: !DIExpression())
!4752 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_ioapic323", scope: !2, file: !3, line: 993, type: !280, isLocal: true, isDefinition: true)
!4753 = !DIGlobalVariableExpression(var: !4754, expr: !DIExpression())
!4754 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_ioapic324", scope: !2, file: !3, line: 994, type: !280, isLocal: true, isDefinition: true)
!4755 = !DIGlobalVariableExpression(var: !4756, expr: !DIExpression())
!4756 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_vt8237_bypass_apic_deassert325", scope: !2, file: !3, line: 1013, type: !280, isLocal: true, isDefinition: true)
!4757 = !DIGlobalVariableExpression(var: !4758, expr: !DIExpression())
!4758 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_vt8237_bypass_apic_deassert326", scope: !2, file: !3, line: 1014, type: !280, isLocal: true, isDefinition: true)
!4759 = !DIGlobalVariableExpression(var: !4760, expr: !DIExpression())
!4760 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_ioapic327", scope: !2, file: !3, line: 1032, type: !280, isLocal: true, isDefinition: true)
!4761 = !DIGlobalVariableExpression(var: !4762, expr: !DIExpression())
!4762 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_8131_mmrbc328", scope: !2, file: !3, line: 1058, type: !280, isLocal: true, isDefinition: true)
!4763 = !DIGlobalVariableExpression(var: !4764, expr: !DIExpression())
!4764 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_acpi329", scope: !2, file: !3, line: 1077, type: !280, isLocal: true, isDefinition: true)
!4765 = !DIGlobalVariableExpression(var: !4766, expr: !DIExpression())
!4766 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_acpi330", scope: !2, file: !3, line: 1078, type: !280, isLocal: true, isDefinition: true)
!4767 = !DIGlobalVariableExpression(var: !4768, expr: !DIExpression())
!4768 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_bridge331", scope: !2, file: !3, line: 1111, type: !280, isLocal: true, isDefinition: true)
!4769 = !DIGlobalVariableExpression(var: !4770, expr: !DIExpression())
!4770 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_bridge332", scope: !2, file: !3, line: 1112, type: !280, isLocal: true, isDefinition: true)
!4771 = !DIGlobalVariableExpression(var: !4772, expr: !DIExpression())
!4772 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_bridge333", scope: !2, file: !3, line: 1113, type: !280, isLocal: true, isDefinition: true)
!4773 = !DIGlobalVariableExpression(var: !4774, expr: !DIExpression())
!4774 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_bridge334", scope: !2, file: !3, line: 1114, type: !280, isLocal: true, isDefinition: true)
!4775 = !DIGlobalVariableExpression(var: !4776, expr: !DIExpression())
!4776 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_bridge335", scope: !2, file: !3, line: 1115, type: !280, isLocal: true, isDefinition: true)
!4777 = !DIGlobalVariableExpression(var: !4778, expr: !DIExpression())
!4778 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_bridge336", scope: !2, file: !3, line: 1116, type: !280, isLocal: true, isDefinition: true)
!4779 = !DIGlobalVariableExpression(var: !4780, expr: !DIExpression())
!4780 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_bridge337", scope: !2, file: !3, line: 1117, type: !280, isLocal: true, isDefinition: true)
!4781 = !DIGlobalVariableExpression(var: !4782, expr: !DIExpression())
!4782 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_bridge338", scope: !2, file: !3, line: 1118, type: !280, isLocal: true, isDefinition: true)
!4783 = !DIGlobalVariableExpression(var: !4784, expr: !DIExpression())
!4784 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_vlink339", scope: !2, file: !3, line: 1162, type: !280, isLocal: true, isDefinition: true)
!4785 = !DIGlobalVariableExpression(var: !4786, expr: !DIExpression())
!4786 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_vt82c598_id340", scope: !2, file: !3, line: 1174, type: !280, isLocal: true, isDefinition: true)
!4787 = !DIGlobalVariableExpression(var: !4788, expr: !DIExpression())
!4788 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_cardbus_legacy341", scope: !2, file: !3, line: 1186, type: !280, isLocal: true, isDefinition: true)
!4789 = !DIGlobalVariableExpression(var: !4790, expr: !DIExpression())
!4790 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_cardbus_legacy342", scope: !2, file: !3, line: 1188, type: !280, isLocal: true, isDefinition: true)
!4791 = !DIGlobalVariableExpression(var: !4792, expr: !DIExpression())
!4792 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_ordering343", scope: !2, file: !3, line: 1211, type: !280, isLocal: true, isDefinition: true)
!4793 = !DIGlobalVariableExpression(var: !4794, expr: !DIExpression())
!4794 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_ordering344", scope: !2, file: !3, line: 1212, type: !280, isLocal: true, isDefinition: true)
!4795 = !DIGlobalVariableExpression(var: !4796, expr: !DIExpression())
!4796 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dunord345", scope: !2, file: !3, line: 1229, type: !280, isLocal: true, isDefinition: true)
!4797 = !DIGlobalVariableExpression(var: !4798, expr: !DIExpression())
!4798 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_transparent_bridge346", scope: !2, file: !3, line: 1240, type: !280, isLocal: true, isDefinition: true)
!4799 = !DIGlobalVariableExpression(var: !4800, expr: !DIExpression())
!4800 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_transparent_bridge347", scope: !2, file: !3, line: 1241, type: !280, isLocal: true, isDefinition: true)
!4801 = !DIGlobalVariableExpression(var: !4802, expr: !DIExpression())
!4802 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_mediagx_master348", scope: !2, file: !3, line: 1261, type: !280, isLocal: true, isDefinition: true)
!4803 = !DIGlobalVariableExpression(var: !4804, expr: !DIExpression())
!4804 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_mediagx_master349", scope: !2, file: !3, line: 1262, type: !280, isLocal: true, isDefinition: true)
!4805 = !DIGlobalVariableExpression(var: !4806, expr: !DIExpression())
!4806 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_pxb350", scope: !2, file: !3, line: 1282, type: !280, isLocal: true, isDefinition: true)
!4807 = !DIGlobalVariableExpression(var: !4808, expr: !DIExpression())
!4808 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_pxb351", scope: !2, file: !3, line: 1283, type: !280, isLocal: true, isDefinition: true)
!4809 = !DIGlobalVariableExpression(var: !4810, expr: !DIExpression())
!4810 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_ide_mode352", scope: !2, file: !3, line: 1302, type: !280, isLocal: true, isDefinition: true)
!4811 = !DIGlobalVariableExpression(var: !4812, expr: !DIExpression())
!4812 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_ide_mode353", scope: !2, file: !3, line: 1303, type: !280, isLocal: true, isDefinition: true)
!4813 = !DIGlobalVariableExpression(var: !4814, expr: !DIExpression())
!4814 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_ide_mode354", scope: !2, file: !3, line: 1304, type: !280, isLocal: true, isDefinition: true)
!4815 = !DIGlobalVariableExpression(var: !4816, expr: !DIExpression())
!4816 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_ide_mode355", scope: !2, file: !3, line: 1305, type: !280, isLocal: true, isDefinition: true)
!4817 = !DIGlobalVariableExpression(var: !4818, expr: !DIExpression())
!4818 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_ide_mode356", scope: !2, file: !3, line: 1306, type: !280, isLocal: true, isDefinition: true)
!4819 = !DIGlobalVariableExpression(var: !4820, expr: !DIExpression())
!4820 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_ide_mode357", scope: !2, file: !3, line: 1307, type: !280, isLocal: true, isDefinition: true)
!4821 = !DIGlobalVariableExpression(var: !4822, expr: !DIExpression())
!4822 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_ide_mode358", scope: !2, file: !3, line: 1308, type: !280, isLocal: true, isDefinition: true)
!4823 = !DIGlobalVariableExpression(var: !4824, expr: !DIExpression())
!4824 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_ide_mode359", scope: !2, file: !3, line: 1309, type: !280, isLocal: true, isDefinition: true)
!4825 = !DIGlobalVariableExpression(var: !4826, expr: !DIExpression())
!4826 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_svwks_csb5ide360", scope: !2, file: !3, line: 1323, type: !280, isLocal: true, isDefinition: true)
!4827 = !DIGlobalVariableExpression(var: !4828, expr: !DIExpression())
!4828 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ide_samemode361", scope: !2, file: !3, line: 1339, type: !280, isLocal: true, isDefinition: true)
!4829 = !DIGlobalVariableExpression(var: !4830, expr: !DIExpression())
!4830 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_ata_d3362", scope: !2, file: !3, line: 1347, type: !280, isLocal: true, isDefinition: true)
!4831 = !DIGlobalVariableExpression(var: !4832, expr: !DIExpression())
!4832 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_ata_d3363", scope: !2, file: !3, line: 1349, type: !280, isLocal: true, isDefinition: true)
!4833 = !DIGlobalVariableExpression(var: !4834, expr: !DIExpression())
!4834 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_ata_d3364", scope: !2, file: !3, line: 1352, type: !280, isLocal: true, isDefinition: true)
!4835 = !DIGlobalVariableExpression(var: !4836, expr: !DIExpression())
!4836 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_ata_d3365", scope: !2, file: !3, line: 1356, type: !280, isLocal: true, isDefinition: true)
!4837 = !DIGlobalVariableExpression(var: !4838, expr: !DIExpression())
!4838 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_eisa_bridge366", scope: !2, file: !3, line: 1367, type: !280, isLocal: true, isDefinition: true)
!4839 = !DIGlobalVariableExpression(var: !4840, expr: !DIExpression())
!4840 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge367", scope: !2, file: !3, line: 1514, type: !280, isLocal: true, isDefinition: true)
!4841 = !DIGlobalVariableExpression(var: !4842, expr: !DIExpression())
!4842 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge368", scope: !2, file: !3, line: 1515, type: !280, isLocal: true, isDefinition: true)
!4843 = !DIGlobalVariableExpression(var: !4844, expr: !DIExpression())
!4844 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge369", scope: !2, file: !3, line: 1516, type: !280, isLocal: true, isDefinition: true)
!4845 = !DIGlobalVariableExpression(var: !4846, expr: !DIExpression())
!4846 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge370", scope: !2, file: !3, line: 1517, type: !280, isLocal: true, isDefinition: true)
!4847 = !DIGlobalVariableExpression(var: !4848, expr: !DIExpression())
!4848 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge371", scope: !2, file: !3, line: 1518, type: !280, isLocal: true, isDefinition: true)
!4849 = !DIGlobalVariableExpression(var: !4850, expr: !DIExpression())
!4850 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge372", scope: !2, file: !3, line: 1519, type: !280, isLocal: true, isDefinition: true)
!4851 = !DIGlobalVariableExpression(var: !4852, expr: !DIExpression())
!4852 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge373", scope: !2, file: !3, line: 1520, type: !280, isLocal: true, isDefinition: true)
!4853 = !DIGlobalVariableExpression(var: !4854, expr: !DIExpression())
!4854 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge374", scope: !2, file: !3, line: 1521, type: !280, isLocal: true, isDefinition: true)
!4855 = !DIGlobalVariableExpression(var: !4856, expr: !DIExpression())
!4856 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge375", scope: !2, file: !3, line: 1522, type: !280, isLocal: true, isDefinition: true)
!4857 = !DIGlobalVariableExpression(var: !4858, expr: !DIExpression())
!4858 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge376", scope: !2, file: !3, line: 1523, type: !280, isLocal: true, isDefinition: true)
!4859 = !DIGlobalVariableExpression(var: !4860, expr: !DIExpression())
!4860 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge377", scope: !2, file: !3, line: 1525, type: !280, isLocal: true, isDefinition: true)
!4861 = !DIGlobalVariableExpression(var: !4862, expr: !DIExpression())
!4862 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge378", scope: !2, file: !3, line: 1526, type: !280, isLocal: true, isDefinition: true)
!4863 = !DIGlobalVariableExpression(var: !4864, expr: !DIExpression())
!4864 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_hostbridge379", scope: !2, file: !3, line: 1527, type: !280, isLocal: true, isDefinition: true)
!4865 = !DIGlobalVariableExpression(var: !4866, expr: !DIExpression())
!4866 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc380", scope: !2, file: !3, line: 1547, type: !280, isLocal: true, isDefinition: true)
!4867 = !DIGlobalVariableExpression(var: !4868, expr: !DIExpression())
!4868 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc381", scope: !2, file: !3, line: 1548, type: !280, isLocal: true, isDefinition: true)
!4869 = !DIGlobalVariableExpression(var: !4870, expr: !DIExpression())
!4870 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc382", scope: !2, file: !3, line: 1549, type: !280, isLocal: true, isDefinition: true)
!4871 = !DIGlobalVariableExpression(var: !4872, expr: !DIExpression())
!4872 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc383", scope: !2, file: !3, line: 1550, type: !280, isLocal: true, isDefinition: true)
!4873 = !DIGlobalVariableExpression(var: !4874, expr: !DIExpression())
!4874 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc384", scope: !2, file: !3, line: 1551, type: !280, isLocal: true, isDefinition: true)
!4875 = !DIGlobalVariableExpression(var: !4876, expr: !DIExpression())
!4876 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc385", scope: !2, file: !3, line: 1552, type: !280, isLocal: true, isDefinition: true)
!4877 = !DIGlobalVariableExpression(var: !4878, expr: !DIExpression())
!4878 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc386", scope: !2, file: !3, line: 1553, type: !280, isLocal: true, isDefinition: true)
!4879 = !DIGlobalVariableExpression(var: !4880, expr: !DIExpression())
!4880 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc387", scope: !2, file: !3, line: 1554, type: !280, isLocal: true, isDefinition: true)
!4881 = !DIGlobalVariableExpression(var: !4882, expr: !DIExpression())
!4882 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc388", scope: !2, file: !3, line: 1555, type: !280, isLocal: true, isDefinition: true)
!4883 = !DIGlobalVariableExpression(var: !4884, expr: !DIExpression())
!4884 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc389", scope: !2, file: !3, line: 1556, type: !280, isLocal: true, isDefinition: true)
!4885 = !DIGlobalVariableExpression(var: !4886, expr: !DIExpression())
!4886 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc390", scope: !2, file: !3, line: 1557, type: !280, isLocal: true, isDefinition: true)
!4887 = !DIGlobalVariableExpression(var: !4888, expr: !DIExpression())
!4888 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc391", scope: !2, file: !3, line: 1558, type: !280, isLocal: true, isDefinition: true)
!4889 = !DIGlobalVariableExpression(var: !4890, expr: !DIExpression())
!4890 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc392", scope: !2, file: !3, line: 1559, type: !280, isLocal: true, isDefinition: true)
!4891 = !DIGlobalVariableExpression(var: !4892, expr: !DIExpression())
!4892 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc393", scope: !2, file: !3, line: 1560, type: !280, isLocal: true, isDefinition: true)
!4893 = !DIGlobalVariableExpression(var: !4894, expr: !DIExpression())
!4894 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6395", scope: !2, file: !3, line: 1609, type: !280, isLocal: true, isDefinition: true)
!4895 = !DIGlobalVariableExpression(var: !4896, expr: !DIExpression())
!4896 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6_suspend396", scope: !2, file: !3, line: 1610, type: !280, isLocal: true, isDefinition: true)
!4897 = !DIGlobalVariableExpression(var: !4898, expr: !DIExpression())
!4898 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6_resume397", scope: !2, file: !3, line: 1611, type: !280, isLocal: true, isDefinition: true)
!4899 = !DIGlobalVariableExpression(var: !4900, expr: !DIExpression())
!4900 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_smbus_lpc_ich6_resume_early398", scope: !2, file: !3, line: 1612, type: !280, isLocal: true, isDefinition: true)
!4901 = !DIGlobalVariableExpression(var: !4902, expr: !DIExpression())
!4902 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_sis_96x_smbus399", scope: !2, file: !3, line: 1624, type: !280, isLocal: true, isDefinition: true)
!4903 = !DIGlobalVariableExpression(var: !4904, expr: !DIExpression())
!4904 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_sis_96x_smbus400", scope: !2, file: !3, line: 1625, type: !280, isLocal: true, isDefinition: true)
!4905 = !DIGlobalVariableExpression(var: !4906, expr: !DIExpression())
!4906 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_sis_96x_smbus401", scope: !2, file: !3, line: 1626, type: !280, isLocal: true, isDefinition: true)
!4907 = !DIGlobalVariableExpression(var: !4908, expr: !DIExpression())
!4908 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_sis_96x_smbus402", scope: !2, file: !3, line: 1627, type: !280, isLocal: true, isDefinition: true)
!4909 = !DIGlobalVariableExpression(var: !4910, expr: !DIExpression())
!4910 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_sis_96x_smbus403", scope: !2, file: !3, line: 1628, type: !280, isLocal: true, isDefinition: true)
!4911 = !DIGlobalVariableExpression(var: !4912, expr: !DIExpression())
!4912 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_sis_96x_smbus404", scope: !2, file: !3, line: 1629, type: !280, isLocal: true, isDefinition: true)
!4913 = !DIGlobalVariableExpression(var: !4914, expr: !DIExpression())
!4914 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_sis_96x_smbus405", scope: !2, file: !3, line: 1630, type: !280, isLocal: true, isDefinition: true)
!4915 = !DIGlobalVariableExpression(var: !4916, expr: !DIExpression())
!4916 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_sis_96x_smbus406", scope: !2, file: !3, line: 1631, type: !280, isLocal: true, isDefinition: true)
!4917 = !DIGlobalVariableExpression(var: !4918, expr: !DIExpression())
!4918 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_sis_503407", scope: !2, file: !3, line: 1664, type: !280, isLocal: true, isDefinition: true)
!4919 = !DIGlobalVariableExpression(var: !4920, expr: !DIExpression())
!4920 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_sis_503408", scope: !2, file: !3, line: 1665, type: !280, isLocal: true, isDefinition: true)
!4921 = !DIGlobalVariableExpression(var: !4922, expr: !DIExpression())
!4922 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_ac97_lpc409", scope: !2, file: !3, line: 1697, type: !280, isLocal: true, isDefinition: true)
!4923 = !DIGlobalVariableExpression(var: !4924, expr: !DIExpression())
!4924 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_asus_hides_ac97_lpc410", scope: !2, file: !3, line: 1698, type: !280, isLocal: true, isDefinition: true)
!4925 = !DIGlobalVariableExpression(var: !4926, expr: !DIExpression())
!4926 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata411", scope: !2, file: !3, line: 1759, type: !280, isLocal: true, isDefinition: true)
!4927 = !DIGlobalVariableExpression(var: !4928, expr: !DIExpression())
!4928 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata412", scope: !2, file: !3, line: 1760, type: !280, isLocal: true, isDefinition: true)
!4929 = !DIGlobalVariableExpression(var: !4930, expr: !DIExpression())
!4930 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata413", scope: !2, file: !3, line: 1761, type: !280, isLocal: true, isDefinition: true)
!4931 = !DIGlobalVariableExpression(var: !4932, expr: !DIExpression())
!4932 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata414", scope: !2, file: !3, line: 1762, type: !280, isLocal: true, isDefinition: true)
!4933 = !DIGlobalVariableExpression(var: !4934, expr: !DIExpression())
!4934 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata415", scope: !2, file: !3, line: 1763, type: !280, isLocal: true, isDefinition: true)
!4935 = !DIGlobalVariableExpression(var: !4936, expr: !DIExpression())
!4936 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata416", scope: !2, file: !3, line: 1764, type: !280, isLocal: true, isDefinition: true)
!4937 = !DIGlobalVariableExpression(var: !4938, expr: !DIExpression())
!4938 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata417", scope: !2, file: !3, line: 1765, type: !280, isLocal: true, isDefinition: true)
!4939 = !DIGlobalVariableExpression(var: !4940, expr: !DIExpression())
!4940 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata418", scope: !2, file: !3, line: 1766, type: !280, isLocal: true, isDefinition: true)
!4941 = !DIGlobalVariableExpression(var: !4942, expr: !DIExpression())
!4942 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata419", scope: !2, file: !3, line: 1767, type: !280, isLocal: true, isDefinition: true)
!4943 = !DIGlobalVariableExpression(var: !4944, expr: !DIExpression())
!4944 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata420", scope: !2, file: !3, line: 1768, type: !280, isLocal: true, isDefinition: true)
!4945 = !DIGlobalVariableExpression(var: !4946, expr: !DIExpression())
!4946 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata421", scope: !2, file: !3, line: 1769, type: !280, isLocal: true, isDefinition: true)
!4947 = !DIGlobalVariableExpression(var: !4948, expr: !DIExpression())
!4948 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata422", scope: !2, file: !3, line: 1770, type: !280, isLocal: true, isDefinition: true)
!4949 = !DIGlobalVariableExpression(var: !4950, expr: !DIExpression())
!4950 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata423", scope: !2, file: !3, line: 1771, type: !280, isLocal: true, isDefinition: true)
!4951 = !DIGlobalVariableExpression(var: !4952, expr: !DIExpression())
!4952 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata424", scope: !2, file: !3, line: 1772, type: !280, isLocal: true, isDefinition: true)
!4953 = !DIGlobalVariableExpression(var: !4954, expr: !DIExpression())
!4954 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata425", scope: !2, file: !3, line: 1773, type: !280, isLocal: true, isDefinition: true)
!4955 = !DIGlobalVariableExpression(var: !4956, expr: !DIExpression())
!4956 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata426", scope: !2, file: !3, line: 1774, type: !280, isLocal: true, isDefinition: true)
!4957 = !DIGlobalVariableExpression(var: !4958, expr: !DIExpression())
!4958 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata427", scope: !2, file: !3, line: 1775, type: !280, isLocal: true, isDefinition: true)
!4959 = !DIGlobalVariableExpression(var: !4960, expr: !DIExpression())
!4960 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_ata428", scope: !2, file: !3, line: 1776, type: !280, isLocal: true, isDefinition: true)
!4961 = !DIGlobalVariableExpression(var: !4962, expr: !DIExpression())
!4962 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_async_suspend429", scope: !2, file: !3, line: 1787, type: !280, isLocal: true, isDefinition: true)
!4963 = !DIGlobalVariableExpression(var: !4964, expr: !DIExpression())
!4964 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_async_suspend430", scope: !2, file: !3, line: 1788, type: !280, isLocal: true, isDefinition: true)
!4965 = !DIGlobalVariableExpression(var: !4966, expr: !DIExpression())
!4966 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_async_suspend431", scope: !2, file: !3, line: 1789, type: !280, isLocal: true, isDefinition: true)
!4967 = !DIGlobalVariableExpression(var: !4968, expr: !DIExpression())
!4968 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_jmicron_async_suspend432", scope: !2, file: !3, line: 1790, type: !280, isLocal: true, isDefinition: true)
!4969 = !DIGlobalVariableExpression(var: !4970, expr: !DIExpression())
!4970 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_alder_ioapic433", scope: !2, file: !3, line: 1815, type: !280, isLocal: true, isDefinition: true)
!4971 = !DIGlobalVariableExpression(var: !4972, expr: !DIExpression())
!4972 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pcie_mch434", scope: !2, file: !3, line: 1822, type: !280, isLocal: true, isDefinition: true)
!4973 = !DIGlobalVariableExpression(var: !4974, expr: !DIExpression())
!4974 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pcie_mch435", scope: !2, file: !3, line: 1823, type: !280, isLocal: true, isDefinition: true)
!4975 = !DIGlobalVariableExpression(var: !4976, expr: !DIExpression())
!4976 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pcie_mch436", scope: !2, file: !3, line: 1824, type: !280, isLocal: true, isDefinition: true)
!4977 = !DIGlobalVariableExpression(var: !4978, expr: !DIExpression())
!4978 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pcie_mch437", scope: !2, file: !3, line: 1826, type: !280, isLocal: true, isDefinition: true)
!4979 = !DIGlobalVariableExpression(var: !4980, expr: !DIExpression())
!4980 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pcie_pxh438", scope: !2, file: !3, line: 1837, type: !280, isLocal: true, isDefinition: true)
!4981 = !DIGlobalVariableExpression(var: !4982, expr: !DIExpression())
!4982 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pcie_pxh439", scope: !2, file: !3, line: 1838, type: !280, isLocal: true, isDefinition: true)
!4983 = !DIGlobalVariableExpression(var: !4984, expr: !DIExpression())
!4984 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pcie_pxh440", scope: !2, file: !3, line: 1839, type: !280, isLocal: true, isDefinition: true)
!4985 = !DIGlobalVariableExpression(var: !4986, expr: !DIExpression())
!4986 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pcie_pxh441", scope: !2, file: !3, line: 1840, type: !280, isLocal: true, isDefinition: true)
!4987 = !DIGlobalVariableExpression(var: !4988, expr: !DIExpression())
!4988 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pcie_pxh442", scope: !2, file: !3, line: 1841, type: !280, isLocal: true, isDefinition: true)
!4989 = !DIGlobalVariableExpression(var: !4990, expr: !DIExpression())
!4990 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm443", scope: !2, file: !3, line: 1852, type: !280, isLocal: true, isDefinition: true)
!4991 = !DIGlobalVariableExpression(var: !4992, expr: !DIExpression())
!4992 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm444", scope: !2, file: !3, line: 1853, type: !280, isLocal: true, isDefinition: true)
!4993 = !DIGlobalVariableExpression(var: !4994, expr: !DIExpression())
!4994 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm445", scope: !2, file: !3, line: 1854, type: !280, isLocal: true, isDefinition: true)
!4995 = !DIGlobalVariableExpression(var: !4996, expr: !DIExpression())
!4996 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm446", scope: !2, file: !3, line: 1855, type: !280, isLocal: true, isDefinition: true)
!4997 = !DIGlobalVariableExpression(var: !4998, expr: !DIExpression())
!4998 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm447", scope: !2, file: !3, line: 1856, type: !280, isLocal: true, isDefinition: true)
!4999 = !DIGlobalVariableExpression(var: !5000, expr: !DIExpression())
!5000 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm448", scope: !2, file: !3, line: 1857, type: !280, isLocal: true, isDefinition: true)
!5001 = !DIGlobalVariableExpression(var: !5002, expr: !DIExpression())
!5002 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm449", scope: !2, file: !3, line: 1858, type: !280, isLocal: true, isDefinition: true)
!5003 = !DIGlobalVariableExpression(var: !5004, expr: !DIExpression())
!5004 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm450", scope: !2, file: !3, line: 1859, type: !280, isLocal: true, isDefinition: true)
!5005 = !DIGlobalVariableExpression(var: !5006, expr: !DIExpression())
!5006 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm451", scope: !2, file: !3, line: 1860, type: !280, isLocal: true, isDefinition: true)
!5007 = !DIGlobalVariableExpression(var: !5008, expr: !DIExpression())
!5008 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm452", scope: !2, file: !3, line: 1861, type: !280, isLocal: true, isDefinition: true)
!5009 = !DIGlobalVariableExpression(var: !5010, expr: !DIExpression())
!5010 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm453", scope: !2, file: !3, line: 1862, type: !280, isLocal: true, isDefinition: true)
!5011 = !DIGlobalVariableExpression(var: !5012, expr: !DIExpression())
!5012 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm454", scope: !2, file: !3, line: 1863, type: !280, isLocal: true, isDefinition: true)
!5013 = !DIGlobalVariableExpression(var: !5014, expr: !DIExpression())
!5014 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm455", scope: !2, file: !3, line: 1864, type: !280, isLocal: true, isDefinition: true)
!5015 = !DIGlobalVariableExpression(var: !5016, expr: !DIExpression())
!5016 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm456", scope: !2, file: !3, line: 1865, type: !280, isLocal: true, isDefinition: true)
!5017 = !DIGlobalVariableExpression(var: !5018, expr: !DIExpression())
!5018 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm457", scope: !2, file: !3, line: 1866, type: !280, isLocal: true, isDefinition: true)
!5019 = !DIGlobalVariableExpression(var: !5020, expr: !DIExpression())
!5020 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm458", scope: !2, file: !3, line: 1867, type: !280, isLocal: true, isDefinition: true)
!5021 = !DIGlobalVariableExpression(var: !5022, expr: !DIExpression())
!5022 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm459", scope: !2, file: !3, line: 1868, type: !280, isLocal: true, isDefinition: true)
!5023 = !DIGlobalVariableExpression(var: !5024, expr: !DIExpression())
!5024 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm460", scope: !2, file: !3, line: 1869, type: !280, isLocal: true, isDefinition: true)
!5025 = !DIGlobalVariableExpression(var: !5026, expr: !DIExpression())
!5026 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm461", scope: !2, file: !3, line: 1870, type: !280, isLocal: true, isDefinition: true)
!5027 = !DIGlobalVariableExpression(var: !5028, expr: !DIExpression())
!5028 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm462", scope: !2, file: !3, line: 1871, type: !280, isLocal: true, isDefinition: true)
!5029 = !DIGlobalVariableExpression(var: !5030, expr: !DIExpression())
!5030 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_pcie_pm463", scope: !2, file: !3, line: 1872, type: !280, isLocal: true, isDefinition: true)
!5031 = !DIGlobalVariableExpression(var: !5032, expr: !DIExpression())
!5032 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_radeon_pm464", scope: !2, file: !3, line: 1890, type: !280, isLocal: true, isDefinition: true)
!5033 = !DIGlobalVariableExpression(var: !5034, expr: !DIExpression())
!5034 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ryzen_xhci_d3hot465", scope: !2, file: !3, line: 1905, type: !280, isLocal: true, isDefinition: true)
!5035 = !DIGlobalVariableExpression(var: !5036, expr: !DIExpression())
!5036 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_ryzen_xhci_d3hot466", scope: !2, file: !3, line: 1906, type: !280, isLocal: true, isDefinition: true)
!5037 = !DIGlobalVariableExpression(var: !5038, expr: !DIExpression())
!5038 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel467", scope: !2, file: !3, line: 1948, type: !280, isLocal: true, isDefinition: true)
!5039 = !DIGlobalVariableExpression(var: !5040, expr: !DIExpression())
!5040 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel468", scope: !2, file: !3, line: 1949, type: !280, isLocal: true, isDefinition: true)
!5041 = !DIGlobalVariableExpression(var: !5042, expr: !DIExpression())
!5042 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel469", scope: !2, file: !3, line: 1950, type: !280, isLocal: true, isDefinition: true)
!5043 = !DIGlobalVariableExpression(var: !5044, expr: !DIExpression())
!5044 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel470", scope: !2, file: !3, line: 1951, type: !280, isLocal: true, isDefinition: true)
!5045 = !DIGlobalVariableExpression(var: !5046, expr: !DIExpression())
!5046 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel471", scope: !2, file: !3, line: 1952, type: !280, isLocal: true, isDefinition: true)
!5047 = !DIGlobalVariableExpression(var: !5048, expr: !DIExpression())
!5048 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel472", scope: !2, file: !3, line: 1953, type: !280, isLocal: true, isDefinition: true)
!5049 = !DIGlobalVariableExpression(var: !5050, expr: !DIExpression())
!5050 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel473", scope: !2, file: !3, line: 1954, type: !280, isLocal: true, isDefinition: true)
!5051 = !DIGlobalVariableExpression(var: !5052, expr: !DIExpression())
!5052 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel474", scope: !2, file: !3, line: 1955, type: !280, isLocal: true, isDefinition: true)
!5053 = !DIGlobalVariableExpression(var: !5054, expr: !DIExpression())
!5054 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel475", scope: !2, file: !3, line: 1956, type: !280, isLocal: true, isDefinition: true)
!5055 = !DIGlobalVariableExpression(var: !5056, expr: !DIExpression())
!5056 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel476", scope: !2, file: !3, line: 1957, type: !280, isLocal: true, isDefinition: true)
!5057 = !DIGlobalVariableExpression(var: !5058, expr: !DIExpression())
!5058 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel477", scope: !2, file: !3, line: 1958, type: !280, isLocal: true, isDefinition: true)
!5059 = !DIGlobalVariableExpression(var: !5060, expr: !DIExpression())
!5060 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel478", scope: !2, file: !3, line: 1959, type: !280, isLocal: true, isDefinition: true)
!5061 = !DIGlobalVariableExpression(var: !5062, expr: !DIExpression())
!5062 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel479", scope: !2, file: !3, line: 1960, type: !280, isLocal: true, isDefinition: true)
!5063 = !DIGlobalVariableExpression(var: !5064, expr: !DIExpression())
!5064 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel480", scope: !2, file: !3, line: 1961, type: !280, isLocal: true, isDefinition: true)
!5065 = !DIGlobalVariableExpression(var: !5066, expr: !DIExpression())
!5066 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel481", scope: !2, file: !3, line: 1962, type: !280, isLocal: true, isDefinition: true)
!5067 = !DIGlobalVariableExpression(var: !5068, expr: !DIExpression())
!5068 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reroute_to_boot_interrupts_intel482", scope: !2, file: !3, line: 1963, type: !280, isLocal: true, isDefinition: true)
!5069 = !DIGlobalVariableExpression(var: !5070, expr: !DIExpression())
!5070 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt483", scope: !2, file: !3, line: 2027, type: !280, isLocal: true, isDefinition: true)
!5071 = !DIGlobalVariableExpression(var: !5072, expr: !DIExpression())
!5072 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt484", scope: !2, file: !3, line: 2029, type: !280, isLocal: true, isDefinition: true)
!5073 = !DIGlobalVariableExpression(var: !5074, expr: !DIExpression())
!5074 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt485", scope: !2, file: !3, line: 2039, type: !280, isLocal: true, isDefinition: true)
!5075 = !DIGlobalVariableExpression(var: !5076, expr: !DIExpression())
!5076 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt486", scope: !2, file: !3, line: 2041, type: !280, isLocal: true, isDefinition: true)
!5077 = !DIGlobalVariableExpression(var: !5078, expr: !DIExpression())
!5078 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt487", scope: !2, file: !3, line: 2043, type: !280, isLocal: true, isDefinition: true)
!5079 = !DIGlobalVariableExpression(var: !5080, expr: !DIExpression())
!5080 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt488", scope: !2, file: !3, line: 2045, type: !280, isLocal: true, isDefinition: true)
!5081 = !DIGlobalVariableExpression(var: !5082, expr: !DIExpression())
!5082 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt489", scope: !2, file: !3, line: 2047, type: !280, isLocal: true, isDefinition: true)
!5083 = !DIGlobalVariableExpression(var: !5084, expr: !DIExpression())
!5084 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt490", scope: !2, file: !3, line: 2049, type: !280, isLocal: true, isDefinition: true)
!5085 = !DIGlobalVariableExpression(var: !5086, expr: !DIExpression())
!5086 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt491", scope: !2, file: !3, line: 2051, type: !280, isLocal: true, isDefinition: true)
!5087 = !DIGlobalVariableExpression(var: !5088, expr: !DIExpression())
!5088 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt492", scope: !2, file: !3, line: 2053, type: !280, isLocal: true, isDefinition: true)
!5089 = !DIGlobalVariableExpression(var: !5090, expr: !DIExpression())
!5090 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt493", scope: !2, file: !3, line: 2055, type: !280, isLocal: true, isDefinition: true)
!5091 = !DIGlobalVariableExpression(var: !5092, expr: !DIExpression())
!5092 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_intel_boot_interrupt494", scope: !2, file: !3, line: 2057, type: !280, isLocal: true, isDefinition: true)
!5093 = !DIGlobalVariableExpression(var: !5094, expr: !DIExpression())
!5094 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_broadcom_boot_interrupt495", scope: !2, file: !3, line: 2088, type: !280, isLocal: true, isDefinition: true)
!5095 = !DIGlobalVariableExpression(var: !5096, expr: !DIExpression())
!5096 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_broadcom_boot_interrupt496", scope: !2, file: !3, line: 2089, type: !280, isLocal: true, isDefinition: true)
!5097 = !DIGlobalVariableExpression(var: !5098, expr: !DIExpression())
!5098 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt497", scope: !2, file: !3, line: 2120, type: !280, isLocal: true, isDefinition: true)
!5099 = !DIGlobalVariableExpression(var: !5100, expr: !DIExpression())
!5100 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt498", scope: !2, file: !3, line: 2121, type: !280, isLocal: true, isDefinition: true)
!5101 = !DIGlobalVariableExpression(var: !5102, expr: !DIExpression())
!5102 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt499", scope: !2, file: !3, line: 2122, type: !280, isLocal: true, isDefinition: true)
!5103 = !DIGlobalVariableExpression(var: !5104, expr: !DIExpression())
!5104 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_amd_813x_boot_interrupt500", scope: !2, file: !3, line: 2123, type: !280, isLocal: true, isDefinition: true)
!5105 = !DIGlobalVariableExpression(var: !5106, expr: !DIExpression())
!5106 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_amd_8111_boot_interrupt501", scope: !2, file: !3, line: 2144, type: !280, isLocal: true, isDefinition: true)
!5107 = !DIGlobalVariableExpression(var: !5108, expr: !DIExpression())
!5108 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_amd_8111_boot_interrupt502", scope: !2, file: !3, line: 2145, type: !280, isLocal: true, isDefinition: true)
!5109 = !DIGlobalVariableExpression(var: !5110, expr: !DIExpression())
!5110 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_tc86c001_ide503", scope: !2, file: !3, line: 2163, type: !280, isLocal: true, isDefinition: true)
!5111 = !DIGlobalVariableExpression(var: !5112, expr: !DIExpression())
!5112 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_plx_pci9050504", scope: !2, file: !3, line: 2192, type: !280, isLocal: true, isDefinition: true)
!5113 = !DIGlobalVariableExpression(var: !5114, expr: !DIExpression())
!5114 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_plx_pci9050505", scope: !2, file: !3, line: 2203, type: !280, isLocal: true, isDefinition: true)
!5115 = !DIGlobalVariableExpression(var: !5116, expr: !DIExpression())
!5116 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_plx_pci9050506", scope: !2, file: !3, line: 2204, type: !280, isLocal: true, isDefinition: true)
!5117 = !DIGlobalVariableExpression(var: !5118, expr: !DIExpression())
!5118 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_netmos507", scope: !2, file: !3, line: 2240, type: !280, isLocal: true, isDefinition: true)
!5119 = !DIGlobalVariableExpression(var: !5120, expr: !DIExpression())
!5120 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_e100_interrupt508", scope: !2, file: !3, line: 2306, type: !280, isLocal: true, isDefinition: true)
!5121 = !DIGlobalVariableExpression(var: !5122, expr: !DIExpression())
!5122 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s509", scope: !2, file: !3, line: 2318, type: !280, isLocal: true, isDefinition: true)
!5123 = !DIGlobalVariableExpression(var: !5124, expr: !DIExpression())
!5124 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s510", scope: !2, file: !3, line: 2319, type: !280, isLocal: true, isDefinition: true)
!5125 = !DIGlobalVariableExpression(var: !5126, expr: !DIExpression())
!5126 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s511", scope: !2, file: !3, line: 2320, type: !280, isLocal: true, isDefinition: true)
!5127 = !DIGlobalVariableExpression(var: !5128, expr: !DIExpression())
!5128 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s512", scope: !2, file: !3, line: 2321, type: !280, isLocal: true, isDefinition: true)
!5129 = !DIGlobalVariableExpression(var: !5130, expr: !DIExpression())
!5130 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s513", scope: !2, file: !3, line: 2322, type: !280, isLocal: true, isDefinition: true)
!5131 = !DIGlobalVariableExpression(var: !5132, expr: !DIExpression())
!5132 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s514", scope: !2, file: !3, line: 2323, type: !280, isLocal: true, isDefinition: true)
!5133 = !DIGlobalVariableExpression(var: !5134, expr: !DIExpression())
!5134 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s515", scope: !2, file: !3, line: 2324, type: !280, isLocal: true, isDefinition: true)
!5135 = !DIGlobalVariableExpression(var: !5136, expr: !DIExpression())
!5136 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s516", scope: !2, file: !3, line: 2325, type: !280, isLocal: true, isDefinition: true)
!5137 = !DIGlobalVariableExpression(var: !5138, expr: !DIExpression())
!5138 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s517", scope: !2, file: !3, line: 2326, type: !280, isLocal: true, isDefinition: true)
!5139 = !DIGlobalVariableExpression(var: !5140, expr: !DIExpression())
!5140 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s518", scope: !2, file: !3, line: 2327, type: !280, isLocal: true, isDefinition: true)
!5141 = !DIGlobalVariableExpression(var: !5142, expr: !DIExpression())
!5142 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s519", scope: !2, file: !3, line: 2328, type: !280, isLocal: true, isDefinition: true)
!5143 = !DIGlobalVariableExpression(var: !5144, expr: !DIExpression())
!5144 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s520", scope: !2, file: !3, line: 2329, type: !280, isLocal: true, isDefinition: true)
!5145 = !DIGlobalVariableExpression(var: !5146, expr: !DIExpression())
!5146 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s521", scope: !2, file: !3, line: 2330, type: !280, isLocal: true, isDefinition: true)
!5147 = !DIGlobalVariableExpression(var: !5148, expr: !DIExpression())
!5148 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s522", scope: !2, file: !3, line: 2331, type: !280, isLocal: true, isDefinition: true)
!5149 = !DIGlobalVariableExpression(var: !5150, expr: !DIExpression())
!5150 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_aspm_l0s_l1523", scope: !2, file: !3, line: 2344, type: !280, isLocal: true, isDefinition: true)
!5151 = !DIGlobalVariableExpression(var: !5152, expr: !DIExpression())
!5152 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_enable_clear_retrain_link524", scope: !2, file: !3, line: 2359, type: !280, isLocal: true, isDefinition: true)
!5153 = !DIGlobalVariableExpression(var: !5154, expr: !DIExpression())
!5154 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_enable_clear_retrain_link525", scope: !2, file: !3, line: 2360, type: !280, isLocal: true, isDefinition: true)
!5155 = !DIGlobalVariableExpression(var: !5156, expr: !DIExpression())
!5156 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_enable_clear_retrain_link526", scope: !2, file: !3, line: 2361, type: !280, isLocal: true, isDefinition: true)
!5157 = !DIGlobalVariableExpression(var: !5158, expr: !DIExpression())
!5158 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_fixup_rev1_53c810527", scope: !2, file: !3, line: 2378, type: !280, isLocal: true, isDefinition: true)
!5159 = !DIGlobalVariableExpression(var: !5160, expr: !DIExpression())
!5160 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_p64h2_1k_io528", scope: !2, file: !3, line: 2392, type: !280, isLocal: true, isDefinition: true)
!5161 = !DIGlobalVariableExpression(var: !5162, expr: !DIExpression())
!5162 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nvidia_ck804_pcie_aer_ext_cap529", scope: !2, file: !3, line: 2410, type: !280, isLocal: true, isDefinition: true)
!5163 = !DIGlobalVariableExpression(var: !5164, expr: !DIExpression())
!5164 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nvidia_ck804_pcie_aer_ext_cap530", scope: !2, file: !3, line: 2412, type: !280, isLocal: true, isDefinition: true)
!5165 = !DIGlobalVariableExpression(var: !5166, expr: !DIExpression())
!5166 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_via_cx700_pci_parking_caching531", scope: !2, file: !3, line: 2465, type: !280, isLocal: true, isDefinition: true)
!5167 = !DIGlobalVariableExpression(var: !5168, expr: !DIExpression())
!5168 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_brcm_5719_limit_mrrs532", scope: !2, file: !3, line: 2480, type: !280, isLocal: true, isDefinition: true)
!5169 = !DIGlobalVariableExpression(var: !5170, expr: !DIExpression())
!5170 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_unhide_mch_dev6533", scope: !2, file: !3, line: 2499, type: !280, isLocal: true, isDefinition: true)
!5171 = !DIGlobalVariableExpression(var: !5172, expr: !DIExpression())
!5172 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_unhide_mch_dev6534", scope: !2, file: !3, line: 2501, type: !280, isLocal: true, isDefinition: true)
!5173 = !DIGlobalVariableExpression(var: !5174, expr: !DIExpression())
!5174 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_all_msi535", scope: !2, file: !3, line: 2517, type: !280, isLocal: true, isDefinition: true)
!5175 = !DIGlobalVariableExpression(var: !5176, expr: !DIExpression())
!5176 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_all_msi536", scope: !2, file: !3, line: 2518, type: !280, isLocal: true, isDefinition: true)
!5177 = !DIGlobalVariableExpression(var: !5178, expr: !DIExpression())
!5178 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_all_msi537", scope: !2, file: !3, line: 2519, type: !280, isLocal: true, isDefinition: true)
!5179 = !DIGlobalVariableExpression(var: !5180, expr: !DIExpression())
!5180 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_all_msi538", scope: !2, file: !3, line: 2520, type: !280, isLocal: true, isDefinition: true)
!5181 = !DIGlobalVariableExpression(var: !5182, expr: !DIExpression())
!5182 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_all_msi539", scope: !2, file: !3, line: 2521, type: !280, isLocal: true, isDefinition: true)
!5183 = !DIGlobalVariableExpression(var: !5184, expr: !DIExpression())
!5184 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_all_msi540", scope: !2, file: !3, line: 2522, type: !280, isLocal: true, isDefinition: true)
!5185 = !DIGlobalVariableExpression(var: !5186, expr: !DIExpression())
!5186 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_all_msi541", scope: !2, file: !3, line: 2523, type: !280, isLocal: true, isDefinition: true)
!5187 = !DIGlobalVariableExpression(var: !5188, expr: !DIExpression())
!5188 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_all_msi542", scope: !2, file: !3, line: 2524, type: !280, isLocal: true, isDefinition: true)
!5189 = !DIGlobalVariableExpression(var: !5190, expr: !DIExpression())
!5190 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_msi543", scope: !2, file: !3, line: 2534, type: !280, isLocal: true, isDefinition: true)
!5191 = !DIGlobalVariableExpression(var: !5192, expr: !DIExpression())
!5192 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_msi544", scope: !2, file: !3, line: 2535, type: !280, isLocal: true, isDefinition: true)
!5193 = !DIGlobalVariableExpression(var: !5194, expr: !DIExpression())
!5194 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_disable_msi545", scope: !2, file: !3, line: 2536, type: !280, isLocal: true, isDefinition: true)
!5195 = !DIGlobalVariableExpression(var: !5196, expr: !DIExpression())
!5196 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_780_apc_msi546", scope: !2, file: !3, line: 2555, type: !280, isLocal: true, isDefinition: true)
!5197 = !DIGlobalVariableExpression(var: !5198, expr: !DIExpression())
!5198 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_780_apc_msi547", scope: !2, file: !3, line: 2556, type: !280, isLocal: true, isDefinition: true)
!5199 = !DIGlobalVariableExpression(var: !5200, expr: !DIExpression())
!5200 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_ht_cap548", scope: !2, file: !3, line: 2592, type: !280, isLocal: true, isDefinition: true)
!5201 = !DIGlobalVariableExpression(var: !5202, expr: !DIExpression())
!5202 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nvidia_ck804_msi_ht_cap549", scope: !2, file: !3, line: 2619, type: !280, isLocal: true, isDefinition: true)
!5203 = !DIGlobalVariableExpression(var: !5204, expr: !DIExpression())
!5204 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_ht_enable_msi_mapping550", scope: !2, file: !3, line: 2642, type: !280, isLocal: true, isDefinition: true)
!5205 = !DIGlobalVariableExpression(var: !5206, expr: !DIExpression())
!5206 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_ht_enable_msi_mapping551", scope: !2, file: !3, line: 2645, type: !280, isLocal: true, isDefinition: true)
!5207 = !DIGlobalVariableExpression(var: !5208, expr: !DIExpression())
!5208 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_nvenet_msi_disable552", scope: !2, file: !3, line: 2664, type: !280, isLocal: true, isDefinition: true)
!5209 = !DIGlobalVariableExpression(var: !5210, expr: !DIExpression())
!5210 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi553", scope: !2, file: !3, line: 2681, type: !280, isLocal: true, isDefinition: true)
!5211 = !DIGlobalVariableExpression(var: !5212, expr: !DIExpression())
!5212 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi554", scope: !2, file: !3, line: 2684, type: !280, isLocal: true, isDefinition: true)
!5213 = !DIGlobalVariableExpression(var: !5214, expr: !DIExpression())
!5214 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi555", scope: !2, file: !3, line: 2687, type: !280, isLocal: true, isDefinition: true)
!5215 = !DIGlobalVariableExpression(var: !5216, expr: !DIExpression())
!5216 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi556", scope: !2, file: !3, line: 2690, type: !280, isLocal: true, isDefinition: true)
!5217 = !DIGlobalVariableExpression(var: !5218, expr: !DIExpression())
!5218 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi557", scope: !2, file: !3, line: 2693, type: !280, isLocal: true, isDefinition: true)
!5219 = !DIGlobalVariableExpression(var: !5220, expr: !DIExpression())
!5220 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi558", scope: !2, file: !3, line: 2696, type: !280, isLocal: true, isDefinition: true)
!5221 = !DIGlobalVariableExpression(var: !5222, expr: !DIExpression())
!5222 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi559", scope: !2, file: !3, line: 2699, type: !280, isLocal: true, isDefinition: true)
!5223 = !DIGlobalVariableExpression(var: !5224, expr: !DIExpression())
!5224 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi560", scope: !2, file: !3, line: 2702, type: !280, isLocal: true, isDefinition: true)
!5225 = !DIGlobalVariableExpression(var: !5226, expr: !DIExpression())
!5226 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi561", scope: !2, file: !3, line: 2705, type: !280, isLocal: true, isDefinition: true)
!5227 = !DIGlobalVariableExpression(var: !5228, expr: !DIExpression())
!5228 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi562", scope: !2, file: !3, line: 2708, type: !280, isLocal: true, isDefinition: true)
!5229 = !DIGlobalVariableExpression(var: !5230, expr: !DIExpression())
!5230 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi563", scope: !2, file: !3, line: 2711, type: !280, isLocal: true, isDefinition: true)
!5231 = !DIGlobalVariableExpression(var: !5232, expr: !DIExpression())
!5232 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi564", scope: !2, file: !3, line: 2714, type: !280, isLocal: true, isDefinition: true)
!5233 = !DIGlobalVariableExpression(var: !5234, expr: !DIExpression())
!5234 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_quirk_nvidia_tegra_disable_rp_msi565", scope: !2, file: !3, line: 2717, type: !280, isLocal: true, isDefinition: true)
!5235 = !DIGlobalVariableExpression(var: !5236, expr: !DIExpression())
!5236 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_nvbridge_check_legacy_irq_routing566", scope: !2, file: !3, line: 2746, type: !280, isLocal: true, isDefinition: true)
!5237 = !DIGlobalVariableExpression(var: !5238, expr: !DIExpression())
!5238 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_nvbridge_check_legacy_irq_routing567", scope: !2, file: !3, line: 2749, type: !280, isLocal: true, isDefinition: true)
!5239 = !DIGlobalVariableExpression(var: !5240, expr: !DIExpression())
!5240 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_all568", scope: !2, file: !3, line: 2953, type: !280, isLocal: true, isDefinition: true)
!5241 = !DIGlobalVariableExpression(var: !5242, expr: !DIExpression())
!5242 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_all569", scope: !2, file: !3, line: 2954, type: !280, isLocal: true, isDefinition: true)
!5243 = !DIGlobalVariableExpression(var: !5244, expr: !DIExpression())
!5244 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_leaf570", scope: !2, file: !3, line: 2960, type: !280, isLocal: true, isDefinition: true)
!5245 = !DIGlobalVariableExpression(var: !5246, expr: !DIExpression())
!5246 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_nv_msi_ht_cap_quirk_leaf571", scope: !2, file: !3, line: 2961, type: !280, isLocal: true, isDefinition: true)
!5247 = !DIGlobalVariableExpression(var: !5248, expr: !DIExpression())
!5248 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug572", scope: !2, file: !3, line: 2995, type: !280, isLocal: true, isDefinition: true)
!5249 = !DIGlobalVariableExpression(var: !5250, expr: !DIExpression())
!5250 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug573", scope: !2, file: !3, line: 2998, type: !280, isLocal: true, isDefinition: true)
!5251 = !DIGlobalVariableExpression(var: !5252, expr: !DIExpression())
!5252 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug574", scope: !2, file: !3, line: 3001, type: !280, isLocal: true, isDefinition: true)
!5253 = !DIGlobalVariableExpression(var: !5254, expr: !DIExpression())
!5254 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug575", scope: !2, file: !3, line: 3004, type: !280, isLocal: true, isDefinition: true)
!5255 = !DIGlobalVariableExpression(var: !5256, expr: !DIExpression())
!5256 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug576", scope: !2, file: !3, line: 3007, type: !280, isLocal: true, isDefinition: true)
!5257 = !DIGlobalVariableExpression(var: !5258, expr: !DIExpression())
!5258 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug577", scope: !2, file: !3, line: 3010, type: !280, isLocal: true, isDefinition: true)
!5259 = !DIGlobalVariableExpression(var: !5260, expr: !DIExpression())
!5260 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug578", scope: !2, file: !3, line: 3014, type: !280, isLocal: true, isDefinition: true)
!5261 = !DIGlobalVariableExpression(var: !5262, expr: !DIExpression())
!5262 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug579", scope: !2, file: !3, line: 3016, type: !280, isLocal: true, isDefinition: true)
!5263 = !DIGlobalVariableExpression(var: !5264, expr: !DIExpression())
!5264 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug580", scope: !2, file: !3, line: 3018, type: !280, isLocal: true, isDefinition: true)
!5265 = !DIGlobalVariableExpression(var: !5266, expr: !DIExpression())
!5266 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug581", scope: !2, file: !3, line: 3020, type: !280, isLocal: true, isDefinition: true)
!5267 = !DIGlobalVariableExpression(var: !5268, expr: !DIExpression())
!5268 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_ati_bug582", scope: !2, file: !3, line: 3022, type: !280, isLocal: true, isDefinition: true)
!5269 = !DIGlobalVariableExpression(var: !5270, expr: !DIExpression())
!5270 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug583", scope: !2, file: !3, line: 3025, type: !280, isLocal: true, isDefinition: true)
!5271 = !DIGlobalVariableExpression(var: !5272, expr: !DIExpression())
!5272 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug584", scope: !2, file: !3, line: 3027, type: !280, isLocal: true, isDefinition: true)
!5273 = !DIGlobalVariableExpression(var: !5274, expr: !DIExpression())
!5274 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug585", scope: !2, file: !3, line: 3029, type: !280, isLocal: true, isDefinition: true)
!5275 = !DIGlobalVariableExpression(var: !5276, expr: !DIExpression())
!5276 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug586", scope: !2, file: !3, line: 3032, type: !280, isLocal: true, isDefinition: true)
!5277 = !DIGlobalVariableExpression(var: !5278, expr: !DIExpression())
!5278 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug587", scope: !2, file: !3, line: 3034, type: !280, isLocal: true, isDefinition: true)
!5279 = !DIGlobalVariableExpression(var: !5280, expr: !DIExpression())
!5280 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug588", scope: !2, file: !3, line: 3036, type: !280, isLocal: true, isDefinition: true)
!5281 = !DIGlobalVariableExpression(var: !5282, expr: !DIExpression())
!5282 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug589", scope: !2, file: !3, line: 3038, type: !280, isLocal: true, isDefinition: true)
!5283 = !DIGlobalVariableExpression(var: !5284, expr: !DIExpression())
!5284 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug590", scope: !2, file: !3, line: 3040, type: !280, isLocal: true, isDefinition: true)
!5285 = !DIGlobalVariableExpression(var: !5286, expr: !DIExpression())
!5286 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_bug591", scope: !2, file: !3, line: 3042, type: !280, isLocal: true, isDefinition: true)
!5287 = !DIGlobalVariableExpression(var: !5288, expr: !DIExpression())
!5288 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug592", scope: !2, file: !3, line: 3044, type: !280, isLocal: true, isDefinition: true)
!5289 = !DIGlobalVariableExpression(var: !5290, expr: !DIExpression())
!5290 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug593", scope: !2, file: !3, line: 3046, type: !280, isLocal: true, isDefinition: true)
!5291 = !DIGlobalVariableExpression(var: !5292, expr: !DIExpression())
!5292 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug594", scope: !2, file: !3, line: 3048, type: !280, isLocal: true, isDefinition: true)
!5293 = !DIGlobalVariableExpression(var: !5294, expr: !DIExpression())
!5294 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug595", scope: !2, file: !3, line: 3050, type: !280, isLocal: true, isDefinition: true)
!5295 = !DIGlobalVariableExpression(var: !5296, expr: !DIExpression())
!5296 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_msi_intx_disable_qca_bug596", scope: !2, file: !3, line: 3052, type: !280, isLocal: true, isDefinition: true)
!5297 = !DIGlobalVariableExpression(var: !5298, expr: !DIExpression())
!5298 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_al_msi_disable597", scope: !2, file: !3, line: 3070, type: !280, isLocal: true, isDefinition: true)
!5299 = !DIGlobalVariableExpression(var: !5300, expr: !DIExpression())
!5300 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_hotplug_bridge598", scope: !2, file: !3, line: 3085, type: !280, isLocal: true, isDefinition: true)
!5301 = !DIGlobalVariableExpression(var: !5302, expr: !DIExpression())
!5302 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_fixup_ti816x_class599", scope: !2, file: !3, line: 3236, type: !280, isLocal: true, isDefinition: true)
!5303 = !DIGlobalVariableExpression(var: !5304, expr: !DIExpression())
!5304 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_fixup_mpss_256600", scope: !2, file: !3, line: 3247, type: !280, isLocal: true, isDefinition: true)
!5305 = !DIGlobalVariableExpression(var: !5306, expr: !DIExpression())
!5306 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_fixup_mpss_256601", scope: !2, file: !3, line: 3249, type: !280, isLocal: true, isDefinition: true)
!5307 = !DIGlobalVariableExpression(var: !5308, expr: !DIExpression())
!5308 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_fixup_mpss_256602", scope: !2, file: !3, line: 3251, type: !280, isLocal: true, isDefinition: true)
!5309 = !DIGlobalVariableExpression(var: !5310, expr: !DIExpression())
!5310 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata603", scope: !2, file: !3, line: 3296, type: !280, isLocal: true, isDefinition: true)
!5311 = !DIGlobalVariableExpression(var: !5312, expr: !DIExpression())
!5312 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata604", scope: !2, file: !3, line: 3297, type: !280, isLocal: true, isDefinition: true)
!5313 = !DIGlobalVariableExpression(var: !5314, expr: !DIExpression())
!5314 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata605", scope: !2, file: !3, line: 3298, type: !280, isLocal: true, isDefinition: true)
!5315 = !DIGlobalVariableExpression(var: !5316, expr: !DIExpression())
!5316 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata606", scope: !2, file: !3, line: 3299, type: !280, isLocal: true, isDefinition: true)
!5317 = !DIGlobalVariableExpression(var: !5318, expr: !DIExpression())
!5318 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata607", scope: !2, file: !3, line: 3300, type: !280, isLocal: true, isDefinition: true)
!5319 = !DIGlobalVariableExpression(var: !5320, expr: !DIExpression())
!5320 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata608", scope: !2, file: !3, line: 3301, type: !280, isLocal: true, isDefinition: true)
!5321 = !DIGlobalVariableExpression(var: !5322, expr: !DIExpression())
!5322 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata609", scope: !2, file: !3, line: 3302, type: !280, isLocal: true, isDefinition: true)
!5323 = !DIGlobalVariableExpression(var: !5324, expr: !DIExpression())
!5324 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata610", scope: !2, file: !3, line: 3303, type: !280, isLocal: true, isDefinition: true)
!5325 = !DIGlobalVariableExpression(var: !5326, expr: !DIExpression())
!5326 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata611", scope: !2, file: !3, line: 3304, type: !280, isLocal: true, isDefinition: true)
!5327 = !DIGlobalVariableExpression(var: !5328, expr: !DIExpression())
!5328 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata612", scope: !2, file: !3, line: 3305, type: !280, isLocal: true, isDefinition: true)
!5329 = !DIGlobalVariableExpression(var: !5330, expr: !DIExpression())
!5330 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata613", scope: !2, file: !3, line: 3306, type: !280, isLocal: true, isDefinition: true)
!5331 = !DIGlobalVariableExpression(var: !5332, expr: !DIExpression())
!5332 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata614", scope: !2, file: !3, line: 3307, type: !280, isLocal: true, isDefinition: true)
!5333 = !DIGlobalVariableExpression(var: !5334, expr: !DIExpression())
!5334 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata615", scope: !2, file: !3, line: 3308, type: !280, isLocal: true, isDefinition: true)
!5335 = !DIGlobalVariableExpression(var: !5336, expr: !DIExpression())
!5336 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata616", scope: !2, file: !3, line: 3309, type: !280, isLocal: true, isDefinition: true)
!5337 = !DIGlobalVariableExpression(var: !5338, expr: !DIExpression())
!5338 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata617", scope: !2, file: !3, line: 3311, type: !280, isLocal: true, isDefinition: true)
!5339 = !DIGlobalVariableExpression(var: !5340, expr: !DIExpression())
!5340 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata618", scope: !2, file: !3, line: 3312, type: !280, isLocal: true, isDefinition: true)
!5341 = !DIGlobalVariableExpression(var: !5342, expr: !DIExpression())
!5342 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata619", scope: !2, file: !3, line: 3313, type: !280, isLocal: true, isDefinition: true)
!5343 = !DIGlobalVariableExpression(var: !5344, expr: !DIExpression())
!5344 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata620", scope: !2, file: !3, line: 3314, type: !280, isLocal: true, isDefinition: true)
!5345 = !DIGlobalVariableExpression(var: !5346, expr: !DIExpression())
!5346 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata621", scope: !2, file: !3, line: 3315, type: !280, isLocal: true, isDefinition: true)
!5347 = !DIGlobalVariableExpression(var: !5348, expr: !DIExpression())
!5348 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata622", scope: !2, file: !3, line: 3316, type: !280, isLocal: true, isDefinition: true)
!5349 = !DIGlobalVariableExpression(var: !5350, expr: !DIExpression())
!5350 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata623", scope: !2, file: !3, line: 3317, type: !280, isLocal: true, isDefinition: true)
!5351 = !DIGlobalVariableExpression(var: !5352, expr: !DIExpression())
!5352 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata624", scope: !2, file: !3, line: 3318, type: !280, isLocal: true, isDefinition: true)
!5353 = !DIGlobalVariableExpression(var: !5354, expr: !DIExpression())
!5354 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata625", scope: !2, file: !3, line: 3319, type: !280, isLocal: true, isDefinition: true)
!5355 = !DIGlobalVariableExpression(var: !5356, expr: !DIExpression())
!5356 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata626", scope: !2, file: !3, line: 3320, type: !280, isLocal: true, isDefinition: true)
!5357 = !DIGlobalVariableExpression(var: !5358, expr: !DIExpression())
!5358 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_mc_errata627", scope: !2, file: !3, line: 3321, type: !280, isLocal: true, isDefinition: true)
!5359 = !DIGlobalVariableExpression(var: !5360, expr: !DIExpression())
!5360 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_ntb628", scope: !2, file: !3, line: 3345, type: !280, isLocal: true, isDefinition: true)
!5361 = !DIGlobalVariableExpression(var: !5362, expr: !DIExpression())
!5362 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_ntb629", scope: !2, file: !3, line: 3346, type: !280, isLocal: true, isDefinition: true)
!5363 = !DIGlobalVariableExpression(var: !5364, expr: !DIExpression())
!5364 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_disable_igfx_irq630", scope: !2, file: !3, line: 3378, type: !280, isLocal: true, isDefinition: true)
!5365 = !DIGlobalVariableExpression(var: !5366, expr: !DIExpression())
!5366 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_disable_igfx_irq631", scope: !2, file: !3, line: 3379, type: !280, isLocal: true, isDefinition: true)
!5367 = !DIGlobalVariableExpression(var: !5368, expr: !DIExpression())
!5368 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_disable_igfx_irq632", scope: !2, file: !3, line: 3380, type: !280, isLocal: true, isDefinition: true)
!5369 = !DIGlobalVariableExpression(var: !5370, expr: !DIExpression())
!5370 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_disable_igfx_irq633", scope: !2, file: !3, line: 3381, type: !280, isLocal: true, isDefinition: true)
!5371 = !DIGlobalVariableExpression(var: !5372, expr: !DIExpression())
!5372 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_disable_igfx_irq634", scope: !2, file: !3, line: 3382, type: !280, isLocal: true, isDefinition: true)
!5373 = !DIGlobalVariableExpression(var: !5374, expr: !DIExpression())
!5374 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_disable_igfx_irq635", scope: !2, file: !3, line: 3383, type: !280, isLocal: true, isDefinition: true)
!5375 = !DIGlobalVariableExpression(var: !5376, expr: !DIExpression())
!5376 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_disable_igfx_irq636", scope: !2, file: !3, line: 3384, type: !280, isLocal: true, isDefinition: true)
!5377 = !DIGlobalVariableExpression(var: !5378, expr: !DIExpression())
!5378 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay637", scope: !2, file: !3, line: 3395, type: !280, isLocal: true, isDefinition: true)
!5379 = !DIGlobalVariableExpression(var: !5380, expr: !DIExpression())
!5380 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay638", scope: !2, file: !3, line: 3396, type: !280, isLocal: true, isDefinition: true)
!5381 = !DIGlobalVariableExpression(var: !5382, expr: !DIExpression())
!5382 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay639", scope: !2, file: !3, line: 3397, type: !280, isLocal: true, isDefinition: true)
!5383 = !DIGlobalVariableExpression(var: !5384, expr: !DIExpression())
!5384 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay640", scope: !2, file: !3, line: 3399, type: !280, isLocal: true, isDefinition: true)
!5385 = !DIGlobalVariableExpression(var: !5386, expr: !DIExpression())
!5386 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay641", scope: !2, file: !3, line: 3400, type: !280, isLocal: true, isDefinition: true)
!5387 = !DIGlobalVariableExpression(var: !5388, expr: !DIExpression())
!5388 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay642", scope: !2, file: !3, line: 3401, type: !280, isLocal: true, isDefinition: true)
!5389 = !DIGlobalVariableExpression(var: !5390, expr: !DIExpression())
!5390 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay643", scope: !2, file: !3, line: 3402, type: !280, isLocal: true, isDefinition: true)
!5391 = !DIGlobalVariableExpression(var: !5392, expr: !DIExpression())
!5392 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay644", scope: !2, file: !3, line: 3403, type: !280, isLocal: true, isDefinition: true)
!5393 = !DIGlobalVariableExpression(var: !5394, expr: !DIExpression())
!5394 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay645", scope: !2, file: !3, line: 3404, type: !280, isLocal: true, isDefinition: true)
!5395 = !DIGlobalVariableExpression(var: !5396, expr: !DIExpression())
!5396 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay646", scope: !2, file: !3, line: 3405, type: !280, isLocal: true, isDefinition: true)
!5397 = !DIGlobalVariableExpression(var: !5398, expr: !DIExpression())
!5398 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay647", scope: !2, file: !3, line: 3406, type: !280, isLocal: true, isDefinition: true)
!5399 = !DIGlobalVariableExpression(var: !5400, expr: !DIExpression())
!5400 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay648", scope: !2, file: !3, line: 3407, type: !280, isLocal: true, isDefinition: true)
!5401 = !DIGlobalVariableExpression(var: !5402, expr: !DIExpression())
!5402 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay649", scope: !2, file: !3, line: 3408, type: !280, isLocal: true, isDefinition: true)
!5403 = !DIGlobalVariableExpression(var: !5404, expr: !DIExpression())
!5404 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay650", scope: !2, file: !3, line: 3409, type: !280, isLocal: true, isDefinition: true)
!5405 = !DIGlobalVariableExpression(var: !5406, expr: !DIExpression())
!5406 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay651", scope: !2, file: !3, line: 3411, type: !280, isLocal: true, isDefinition: true)
!5407 = !DIGlobalVariableExpression(var: !5408, expr: !DIExpression())
!5408 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay652", scope: !2, file: !3, line: 3412, type: !280, isLocal: true, isDefinition: true)
!5409 = !DIGlobalVariableExpression(var: !5410, expr: !DIExpression())
!5410 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay653", scope: !2, file: !3, line: 3413, type: !280, isLocal: true, isDefinition: true)
!5411 = !DIGlobalVariableExpression(var: !5412, expr: !DIExpression())
!5412 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay654", scope: !2, file: !3, line: 3414, type: !280, isLocal: true, isDefinition: true)
!5413 = !DIGlobalVariableExpression(var: !5414, expr: !DIExpression())
!5414 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay655", scope: !2, file: !3, line: 3415, type: !280, isLocal: true, isDefinition: true)
!5415 = !DIGlobalVariableExpression(var: !5416, expr: !DIExpression())
!5416 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay656", scope: !2, file: !3, line: 3416, type: !280, isLocal: true, isDefinition: true)
!5417 = !DIGlobalVariableExpression(var: !5418, expr: !DIExpression())
!5418 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay657", scope: !2, file: !3, line: 3417, type: !280, isLocal: true, isDefinition: true)
!5419 = !DIGlobalVariableExpression(var: !5420, expr: !DIExpression())
!5420 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay658", scope: !2, file: !3, line: 3418, type: !280, isLocal: true, isDefinition: true)
!5421 = !DIGlobalVariableExpression(var: !5422, expr: !DIExpression())
!5422 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_remove_d3hot_delay659", scope: !2, file: !3, line: 3419, type: !280, isLocal: true, isDefinition: true)
!5423 = !DIGlobalVariableExpression(var: !5424, expr: !DIExpression())
!5424 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking660", scope: !2, file: !3, line: 3430, type: !280, isLocal: true, isDefinition: true)
!5425 = !DIGlobalVariableExpression(var: !5426, expr: !DIExpression())
!5426 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking661", scope: !2, file: !3, line: 3432, type: !280, isLocal: true, isDefinition: true)
!5427 = !DIGlobalVariableExpression(var: !5428, expr: !DIExpression())
!5428 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking662", scope: !2, file: !3, line: 3434, type: !280, isLocal: true, isDefinition: true)
!5429 = !DIGlobalVariableExpression(var: !5430, expr: !DIExpression())
!5430 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking663", scope: !2, file: !3, line: 3443, type: !280, isLocal: true, isDefinition: true)
!5431 = !DIGlobalVariableExpression(var: !5432, expr: !DIExpression())
!5432 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking664", scope: !2, file: !3, line: 3450, type: !280, isLocal: true, isDefinition: true)
!5433 = !DIGlobalVariableExpression(var: !5434, expr: !DIExpression())
!5434 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking665", scope: !2, file: !3, line: 3451, type: !280, isLocal: true, isDefinition: true)
!5435 = !DIGlobalVariableExpression(var: !5436, expr: !DIExpression())
!5436 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking666", scope: !2, file: !3, line: 3452, type: !280, isLocal: true, isDefinition: true)
!5437 = !DIGlobalVariableExpression(var: !5438, expr: !DIExpression())
!5438 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking667", scope: !2, file: !3, line: 3453, type: !280, isLocal: true, isDefinition: true)
!5439 = !DIGlobalVariableExpression(var: !5440, expr: !DIExpression())
!5440 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking668", scope: !2, file: !3, line: 3454, type: !280, isLocal: true, isDefinition: true)
!5441 = !DIGlobalVariableExpression(var: !5442, expr: !DIExpression())
!5442 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking669", scope: !2, file: !3, line: 3455, type: !280, isLocal: true, isDefinition: true)
!5443 = !DIGlobalVariableExpression(var: !5444, expr: !DIExpression())
!5444 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking670", scope: !2, file: !3, line: 3456, type: !280, isLocal: true, isDefinition: true)
!5445 = !DIGlobalVariableExpression(var: !5446, expr: !DIExpression())
!5446 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking671", scope: !2, file: !3, line: 3457, type: !280, isLocal: true, isDefinition: true)
!5447 = !DIGlobalVariableExpression(var: !5448, expr: !DIExpression())
!5448 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking672", scope: !2, file: !3, line: 3458, type: !280, isLocal: true, isDefinition: true)
!5449 = !DIGlobalVariableExpression(var: !5450, expr: !DIExpression())
!5450 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking673", scope: !2, file: !3, line: 3459, type: !280, isLocal: true, isDefinition: true)
!5451 = !DIGlobalVariableExpression(var: !5452, expr: !DIExpression())
!5452 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking674", scope: !2, file: !3, line: 3460, type: !280, isLocal: true, isDefinition: true)
!5453 = !DIGlobalVariableExpression(var: !5454, expr: !DIExpression())
!5454 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking675", scope: !2, file: !3, line: 3461, type: !280, isLocal: true, isDefinition: true)
!5455 = !DIGlobalVariableExpression(var: !5456, expr: !DIExpression())
!5456 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking676", scope: !2, file: !3, line: 3462, type: !280, isLocal: true, isDefinition: true)
!5457 = !DIGlobalVariableExpression(var: !5458, expr: !DIExpression())
!5458 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking677", scope: !2, file: !3, line: 3463, type: !280, isLocal: true, isDefinition: true)
!5459 = !DIGlobalVariableExpression(var: !5460, expr: !DIExpression())
!5460 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking678", scope: !2, file: !3, line: 3464, type: !280, isLocal: true, isDefinition: true)
!5461 = !DIGlobalVariableExpression(var: !5462, expr: !DIExpression())
!5462 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_broken_intx_masking679", scope: !2, file: !3, line: 3465, type: !280, isLocal: true, isDefinition: true)
!5463 = !DIGlobalVariableExpression(var: !5464, expr: !DIExpression())
!5464 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_mellanox_check_broken_intx_masking680", scope: !2, file: !3, line: 3552, type: !280, isLocal: true, isDefinition: true)
!5465 = !DIGlobalVariableExpression(var: !5466, expr: !DIExpression())
!5466 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_bus_reset681", scope: !2, file: !3, line: 3567, type: !280, isLocal: true, isDefinition: true)
!5467 = !DIGlobalVariableExpression(var: !5468, expr: !DIExpression())
!5468 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_bus_reset682", scope: !2, file: !3, line: 3568, type: !280, isLocal: true, isDefinition: true)
!5469 = !DIGlobalVariableExpression(var: !5470, expr: !DIExpression())
!5470 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_bus_reset683", scope: !2, file: !3, line: 3569, type: !280, isLocal: true, isDefinition: true)
!5471 = !DIGlobalVariableExpression(var: !5472, expr: !DIExpression())
!5472 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_bus_reset684", scope: !2, file: !3, line: 3570, type: !280, isLocal: true, isDefinition: true)
!5473 = !DIGlobalVariableExpression(var: !5474, expr: !DIExpression())
!5474 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_bus_reset685", scope: !2, file: !3, line: 3571, type: !280, isLocal: true, isDefinition: true)
!5475 = !DIGlobalVariableExpression(var: !5476, expr: !DIExpression())
!5476 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_bus_reset686", scope: !2, file: !3, line: 3578, type: !280, isLocal: true, isDefinition: true)
!5477 = !DIGlobalVariableExpression(var: !5478, expr: !DIExpression())
!5478 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_pm_reset687", scope: !2, file: !3, line: 3598, type: !280, isLocal: true, isDefinition: true)
!5479 = !DIGlobalVariableExpression(var: !5480, expr: !DIExpression())
!5480 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi688", scope: !2, file: !3, line: 3613, type: !280, isLocal: true, isDefinition: true)
!5481 = !DIGlobalVariableExpression(var: !5482, expr: !DIExpression())
!5482 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi689", scope: !2, file: !3, line: 3615, type: !280, isLocal: true, isDefinition: true)
!5483 = !DIGlobalVariableExpression(var: !5484, expr: !DIExpression())
!5484 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi690", scope: !2, file: !3, line: 3617, type: !280, isLocal: true, isDefinition: true)
!5485 = !DIGlobalVariableExpression(var: !5486, expr: !DIExpression())
!5486 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi691", scope: !2, file: !3, line: 3619, type: !280, isLocal: true, isDefinition: true)
!5487 = !DIGlobalVariableExpression(var: !5488, expr: !DIExpression())
!5488 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_thunderbolt_hotplug_msi692", scope: !2, file: !3, line: 3621, type: !280, isLocal: true, isDefinition: true)
!5489 = !DIGlobalVariableExpression(var: !5490, expr: !DIExpression())
!5490 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_apple_poweroff_thunderbolt694", scope: !2, file: !3, line: 3673, type: !280, isLocal: true, isDefinition: true)
!5491 = !DIGlobalVariableExpression(var: !5492, expr: !DIExpression())
!5492 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func0_alias695", scope: !2, file: !3, line: 3960, type: !280, isLocal: true, isDefinition: true)
!5493 = !DIGlobalVariableExpression(var: !5494, expr: !DIExpression())
!5494 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func0_alias696", scope: !2, file: !3, line: 3961, type: !280, isLocal: true, isDefinition: true)
!5495 = !DIGlobalVariableExpression(var: !5496, expr: !DIExpression())
!5496 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias697", scope: !2, file: !3, line: 3975, type: !280, isLocal: true, isDefinition: true)
!5497 = !DIGlobalVariableExpression(var: !5498, expr: !DIExpression())
!5498 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias698", scope: !2, file: !3, line: 3977, type: !280, isLocal: true, isDefinition: true)
!5499 = !DIGlobalVariableExpression(var: !5500, expr: !DIExpression())
!5500 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias699", scope: !2, file: !3, line: 3979, type: !280, isLocal: true, isDefinition: true)
!5501 = !DIGlobalVariableExpression(var: !5502, expr: !DIExpression())
!5502 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias700", scope: !2, file: !3, line: 3982, type: !280, isLocal: true, isDefinition: true)
!5503 = !DIGlobalVariableExpression(var: !5504, expr: !DIExpression())
!5504 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias701", scope: !2, file: !3, line: 3984, type: !280, isLocal: true, isDefinition: true)
!5505 = !DIGlobalVariableExpression(var: !5506, expr: !DIExpression())
!5506 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias702", scope: !2, file: !3, line: 3987, type: !280, isLocal: true, isDefinition: true)
!5507 = !DIGlobalVariableExpression(var: !5508, expr: !DIExpression())
!5508 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias703", scope: !2, file: !3, line: 3990, type: !280, isLocal: true, isDefinition: true)
!5509 = !DIGlobalVariableExpression(var: !5510, expr: !DIExpression())
!5510 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias704", scope: !2, file: !3, line: 3993, type: !280, isLocal: true, isDefinition: true)
!5511 = !DIGlobalVariableExpression(var: !5512, expr: !DIExpression())
!5512 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias705", scope: !2, file: !3, line: 3996, type: !280, isLocal: true, isDefinition: true)
!5513 = !DIGlobalVariableExpression(var: !5514, expr: !DIExpression())
!5514 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias706", scope: !2, file: !3, line: 3999, type: !280, isLocal: true, isDefinition: true)
!5515 = !DIGlobalVariableExpression(var: !5516, expr: !DIExpression())
!5516 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias707", scope: !2, file: !3, line: 4002, type: !280, isLocal: true, isDefinition: true)
!5517 = !DIGlobalVariableExpression(var: !5518, expr: !DIExpression())
!5518 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias708", scope: !2, file: !3, line: 4005, type: !280, isLocal: true, isDefinition: true)
!5519 = !DIGlobalVariableExpression(var: !5520, expr: !DIExpression())
!5520 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias709", scope: !2, file: !3, line: 4007, type: !280, isLocal: true, isDefinition: true)
!5521 = !DIGlobalVariableExpression(var: !5522, expr: !DIExpression())
!5522 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias710", scope: !2, file: !3, line: 4009, type: !280, isLocal: true, isDefinition: true)
!5523 = !DIGlobalVariableExpression(var: !5524, expr: !DIExpression())
!5524 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias711", scope: !2, file: !3, line: 4012, type: !280, isLocal: true, isDefinition: true)
!5525 = !DIGlobalVariableExpression(var: !5526, expr: !DIExpression())
!5526 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_dma_func1_alias712", scope: !2, file: !3, line: 4016, type: !280, isLocal: true, isDefinition: true)
!5527 = !DIGlobalVariableExpression(var: !5528, expr: !DIExpression())
!5528 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_fixed_dma_alias713", scope: !2, file: !3, line: 4053, type: !280, isLocal: true, isDefinition: true)
!5529 = !DIGlobalVariableExpression(var: !5530, expr: !DIExpression())
!5530 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias714", scope: !2, file: !3, line: 4073, type: !280, isLocal: true, isDefinition: true)
!5531 = !DIGlobalVariableExpression(var: !5532, expr: !DIExpression())
!5532 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias715", scope: !2, file: !3, line: 4076, type: !280, isLocal: true, isDefinition: true)
!5533 = !DIGlobalVariableExpression(var: !5534, expr: !DIExpression())
!5534 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias716", scope: !2, file: !3, line: 4078, type: !280, isLocal: true, isDefinition: true)
!5535 = !DIGlobalVariableExpression(var: !5536, expr: !DIExpression())
!5536 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias717", scope: !2, file: !3, line: 4080, type: !280, isLocal: true, isDefinition: true)
!5537 = !DIGlobalVariableExpression(var: !5538, expr: !DIExpression())
!5538 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_use_pcie_bridge_dma_alias718", scope: !2, file: !3, line: 4082, type: !280, isLocal: true, isDefinition: true)
!5539 = !DIGlobalVariableExpression(var: !5540, expr: !DIExpression())
!5540 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_mic_x200_dma_alias719", scope: !2, file: !3, line: 4096, type: !280, isLocal: true, isDefinition: true)
!5541 = !DIGlobalVariableExpression(var: !5542, expr: !DIExpression())
!5542 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_mic_x200_dma_alias720", scope: !2, file: !3, line: 4097, type: !280, isLocal: true, isDefinition: true)
!5543 = !DIGlobalVariableExpression(var: !5544, expr: !DIExpression())
!5544 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pex_vca_alias721", scope: !2, file: !3, line: 4121, type: !280, isLocal: true, isDefinition: true)
!5545 = !DIGlobalVariableExpression(var: !5546, expr: !DIExpression())
!5546 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pex_vca_alias722", scope: !2, file: !3, line: 4122, type: !280, isLocal: true, isDefinition: true)
!5547 = !DIGlobalVariableExpression(var: !5548, expr: !DIExpression())
!5548 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pex_vca_alias723", scope: !2, file: !3, line: 4123, type: !280, isLocal: true, isDefinition: true)
!5549 = !DIGlobalVariableExpression(var: !5550, expr: !DIExpression())
!5550 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pex_vca_alias724", scope: !2, file: !3, line: 4124, type: !280, isLocal: true, isDefinition: true)
!5551 = !DIGlobalVariableExpression(var: !5552, expr: !DIExpression())
!5552 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pex_vca_alias725", scope: !2, file: !3, line: 4125, type: !280, isLocal: true, isDefinition: true)
!5553 = !DIGlobalVariableExpression(var: !5554, expr: !DIExpression())
!5554 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_pex_vca_alias726", scope: !2, file: !3, line: 4126, type: !280, isLocal: true, isDefinition: true)
!5555 = !DIGlobalVariableExpression(var: !5556, expr: !DIExpression())
!5556 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_bridge_cavm_thrx2_pcie_root727", scope: !2, file: !3, line: 4137, type: !280, isLocal: true, isDefinition: true)
!5557 = !DIGlobalVariableExpression(var: !5558, expr: !DIExpression())
!5558 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_bridge_cavm_thrx2_pcie_root728", scope: !2, file: !3, line: 4139, type: !280, isLocal: true, isDefinition: true)
!5559 = !DIGlobalVariableExpression(var: !5560, expr: !DIExpression())
!5560 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_tw686x_class729", scope: !2, file: !3, line: 4155, type: !280, isLocal: true, isDefinition: true)
!5561 = !DIGlobalVariableExpression(var: !5562, expr: !DIExpression())
!5562 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_tw686x_class730", scope: !2, file: !3, line: 4157, type: !280, isLocal: true, isDefinition: true)
!5563 = !DIGlobalVariableExpression(var: !5564, expr: !DIExpression())
!5564 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_tw686x_class731", scope: !2, file: !3, line: 4159, type: !280, isLocal: true, isDefinition: true)
!5565 = !DIGlobalVariableExpression(var: !5566, expr: !DIExpression())
!5566 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_tw686x_class732", scope: !2, file: !3, line: 4161, type: !280, isLocal: true, isDefinition: true)
!5567 = !DIGlobalVariableExpression(var: !5568, expr: !DIExpression())
!5568 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable733", scope: !2, file: !3, line: 4180, type: !280, isLocal: true, isDefinition: true)
!5569 = !DIGlobalVariableExpression(var: !5570, expr: !DIExpression())
!5570 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable734", scope: !2, file: !3, line: 4182, type: !280, isLocal: true, isDefinition: true)
!5571 = !DIGlobalVariableExpression(var: !5572, expr: !DIExpression())
!5572 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable735", scope: !2, file: !3, line: 4184, type: !280, isLocal: true, isDefinition: true)
!5573 = !DIGlobalVariableExpression(var: !5574, expr: !DIExpression())
!5574 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable736", scope: !2, file: !3, line: 4186, type: !280, isLocal: true, isDefinition: true)
!5575 = !DIGlobalVariableExpression(var: !5576, expr: !DIExpression())
!5576 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable737", scope: !2, file: !3, line: 4188, type: !280, isLocal: true, isDefinition: true)
!5577 = !DIGlobalVariableExpression(var: !5578, expr: !DIExpression())
!5578 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable738", scope: !2, file: !3, line: 4190, type: !280, isLocal: true, isDefinition: true)
!5579 = !DIGlobalVariableExpression(var: !5580, expr: !DIExpression())
!5580 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable739", scope: !2, file: !3, line: 4192, type: !280, isLocal: true, isDefinition: true)
!5581 = !DIGlobalVariableExpression(var: !5582, expr: !DIExpression())
!5582 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable740", scope: !2, file: !3, line: 4194, type: !280, isLocal: true, isDefinition: true)
!5583 = !DIGlobalVariableExpression(var: !5584, expr: !DIExpression())
!5584 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable741", scope: !2, file: !3, line: 4196, type: !280, isLocal: true, isDefinition: true)
!5585 = !DIGlobalVariableExpression(var: !5586, expr: !DIExpression())
!5586 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable742", scope: !2, file: !3, line: 4198, type: !280, isLocal: true, isDefinition: true)
!5587 = !DIGlobalVariableExpression(var: !5588, expr: !DIExpression())
!5588 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable743", scope: !2, file: !3, line: 4200, type: !280, isLocal: true, isDefinition: true)
!5589 = !DIGlobalVariableExpression(var: !5590, expr: !DIExpression())
!5590 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable744", scope: !2, file: !3, line: 4202, type: !280, isLocal: true, isDefinition: true)
!5591 = !DIGlobalVariableExpression(var: !5592, expr: !DIExpression())
!5592 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable745", scope: !2, file: !3, line: 4204, type: !280, isLocal: true, isDefinition: true)
!5593 = !DIGlobalVariableExpression(var: !5594, expr: !DIExpression())
!5594 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable746", scope: !2, file: !3, line: 4206, type: !280, isLocal: true, isDefinition: true)
!5595 = !DIGlobalVariableExpression(var: !5596, expr: !DIExpression())
!5596 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable747", scope: !2, file: !3, line: 4208, type: !280, isLocal: true, isDefinition: true)
!5597 = !DIGlobalVariableExpression(var: !5598, expr: !DIExpression())
!5598 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable748", scope: !2, file: !3, line: 4210, type: !280, isLocal: true, isDefinition: true)
!5599 = !DIGlobalVariableExpression(var: !5600, expr: !DIExpression())
!5600 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable749", scope: !2, file: !3, line: 4212, type: !280, isLocal: true, isDefinition: true)
!5601 = !DIGlobalVariableExpression(var: !5602, expr: !DIExpression())
!5602 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable750", scope: !2, file: !3, line: 4214, type: !280, isLocal: true, isDefinition: true)
!5603 = !DIGlobalVariableExpression(var: !5604, expr: !DIExpression())
!5604 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable751", scope: !2, file: !3, line: 4216, type: !280, isLocal: true, isDefinition: true)
!5605 = !DIGlobalVariableExpression(var: !5606, expr: !DIExpression())
!5606 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable752", scope: !2, file: !3, line: 4218, type: !280, isLocal: true, isDefinition: true)
!5607 = !DIGlobalVariableExpression(var: !5608, expr: !DIExpression())
!5608 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable753", scope: !2, file: !3, line: 4220, type: !280, isLocal: true, isDefinition: true)
!5609 = !DIGlobalVariableExpression(var: !5610, expr: !DIExpression())
!5610 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable754", scope: !2, file: !3, line: 4222, type: !280, isLocal: true, isDefinition: true)
!5611 = !DIGlobalVariableExpression(var: !5612, expr: !DIExpression())
!5612 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable755", scope: !2, file: !3, line: 4224, type: !280, isLocal: true, isDefinition: true)
!5613 = !DIGlobalVariableExpression(var: !5614, expr: !DIExpression())
!5614 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable756", scope: !2, file: !3, line: 4226, type: !280, isLocal: true, isDefinition: true)
!5615 = !DIGlobalVariableExpression(var: !5616, expr: !DIExpression())
!5616 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable757", scope: !2, file: !3, line: 4228, type: !280, isLocal: true, isDefinition: true)
!5617 = !DIGlobalVariableExpression(var: !5618, expr: !DIExpression())
!5618 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable758", scope: !2, file: !3, line: 4230, type: !280, isLocal: true, isDefinition: true)
!5619 = !DIGlobalVariableExpression(var: !5620, expr: !DIExpression())
!5620 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable759", scope: !2, file: !3, line: 4232, type: !280, isLocal: true, isDefinition: true)
!5621 = !DIGlobalVariableExpression(var: !5622, expr: !DIExpression())
!5622 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable760", scope: !2, file: !3, line: 4234, type: !280, isLocal: true, isDefinition: true)
!5623 = !DIGlobalVariableExpression(var: !5624, expr: !DIExpression())
!5624 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable761", scope: !2, file: !3, line: 4246, type: !280, isLocal: true, isDefinition: true)
!5625 = !DIGlobalVariableExpression(var: !5626, expr: !DIExpression())
!5626 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable762", scope: !2, file: !3, line: 4248, type: !280, isLocal: true, isDefinition: true)
!5627 = !DIGlobalVariableExpression(var: !5628, expr: !DIExpression())
!5628 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_relaxedordering_disable763", scope: !2, file: !3, line: 4250, type: !280, isLocal: true, isDefinition: true)
!5629 = !DIGlobalVariableExpression(var: !5630, expr: !DIExpression())
!5630 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_chelsio_T5_disable_root_port_attributes764", scope: !2, file: !3, line: 4307, type: !280, isLocal: true, isDefinition: true)
!5631 = !DIGlobalVariableExpression(var: !5632, expr: !DIExpression())
!5632 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_intel_qat_vf_cap765", scope: !2, file: !3, line: 5113, type: !280, isLocal: true, isDefinition: true)
!5633 = !DIGlobalVariableExpression(var: !5634, expr: !DIExpression())
!5634 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_flr766", scope: !2, file: !3, line: 5129, type: !280, isLocal: true, isDefinition: true)
!5635 = !DIGlobalVariableExpression(var: !5636, expr: !DIExpression())
!5636 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_flr767", scope: !2, file: !3, line: 5130, type: !280, isLocal: true, isDefinition: true)
!5637 = !DIGlobalVariableExpression(var: !5638, expr: !DIExpression())
!5638 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_flr768", scope: !2, file: !3, line: 5131, type: !280, isLocal: true, isDefinition: true)
!5639 = !DIGlobalVariableExpression(var: !5640, expr: !DIExpression())
!5640 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_flr769", scope: !2, file: !3, line: 5132, type: !280, isLocal: true, isDefinition: true)
!5641 = !DIGlobalVariableExpression(var: !5642, expr: !DIExpression())
!5642 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_flr770", scope: !2, file: !3, line: 5133, type: !280, isLocal: true, isDefinition: true)
!5643 = !DIGlobalVariableExpression(var: !5644, expr: !DIExpression())
!5644 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_ext_tags771", scope: !2, file: !3, line: 5147, type: !280, isLocal: true, isDefinition: true)
!5645 = !DIGlobalVariableExpression(var: !5646, expr: !DIExpression())
!5646 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_ext_tags772", scope: !2, file: !3, line: 5148, type: !280, isLocal: true, isDefinition: true)
!5647 = !DIGlobalVariableExpression(var: !5648, expr: !DIExpression())
!5648 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_ext_tags773", scope: !2, file: !3, line: 5149, type: !280, isLocal: true, isDefinition: true)
!5649 = !DIGlobalVariableExpression(var: !5650, expr: !DIExpression())
!5650 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_ext_tags774", scope: !2, file: !3, line: 5150, type: !280, isLocal: true, isDefinition: true)
!5651 = !DIGlobalVariableExpression(var: !5652, expr: !DIExpression())
!5652 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_ext_tags775", scope: !2, file: !3, line: 5151, type: !280, isLocal: true, isDefinition: true)
!5653 = !DIGlobalVariableExpression(var: !5654, expr: !DIExpression())
!5654 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_ext_tags776", scope: !2, file: !3, line: 5152, type: !280, isLocal: true, isDefinition: true)
!5655 = !DIGlobalVariableExpression(var: !5656, expr: !DIExpression())
!5656 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_no_ext_tags777", scope: !2, file: !3, line: 5153, type: !280, isLocal: true, isDefinition: true)
!5657 = !DIGlobalVariableExpression(var: !5658, expr: !DIExpression())
!5658 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats778", scope: !2, file: !3, line: 5172, type: !280, isLocal: true, isDefinition: true)
!5659 = !DIGlobalVariableExpression(var: !5660, expr: !DIExpression())
!5660 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats779", scope: !2, file: !3, line: 5174, type: !280, isLocal: true, isDefinition: true)
!5661 = !DIGlobalVariableExpression(var: !5662, expr: !DIExpression())
!5662 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats780", scope: !2, file: !3, line: 5176, type: !280, isLocal: true, isDefinition: true)
!5663 = !DIGlobalVariableExpression(var: !5664, expr: !DIExpression())
!5664 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_amd_harvest_no_ats781", scope: !2, file: !3, line: 5178, type: !280, isLocal: true, isDefinition: true)
!5665 = !DIGlobalVariableExpression(var: !5666, expr: !DIExpression())
!5666 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_fsl_no_msi782", scope: !2, file: !3, line: 5187, type: !280, isLocal: true, isDefinition: true)
!5667 = !DIGlobalVariableExpression(var: !5668, expr: !DIExpression())
!5668 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_gpu_hda783", scope: !2, file: !3, line: 5234, type: !280, isLocal: true, isDefinition: true)
!5669 = !DIGlobalVariableExpression(var: !5670, expr: !DIExpression())
!5670 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_gpu_hda784", scope: !2, file: !3, line: 5236, type: !280, isLocal: true, isDefinition: true)
!5671 = !DIGlobalVariableExpression(var: !5672, expr: !DIExpression())
!5672 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_gpu_hda785", scope: !2, file: !3, line: 5238, type: !280, isLocal: true, isDefinition: true)
!5673 = !DIGlobalVariableExpression(var: !5674, expr: !DIExpression())
!5674 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_gpu_usb786", scope: !2, file: !3, line: 5249, type: !280, isLocal: true, isDefinition: true)
!5675 = !DIGlobalVariableExpression(var: !5676, expr: !DIExpression())
!5676 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_gpu_usb_typec_ucsi787", scope: !2, file: !3, line: 5263, type: !280, isLocal: true, isDefinition: true)
!5677 = !DIGlobalVariableExpression(var: !5678, expr: !DIExpression())
!5678 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nvidia_hda788", scope: !2, file: !3, line: 5292, type: !280, isLocal: true, isDefinition: true)
!5679 = !DIGlobalVariableExpression(var: !5680, expr: !DIExpression())
!5680 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_nvidia_hda789", scope: !2, file: !3, line: 5294, type: !280, isLocal: true, isDefinition: true)
!5681 = !DIGlobalVariableExpression(var: !5682, expr: !DIExpression())
!5682 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias790", scope: !2, file: !3, line: 5436, type: !280, isLocal: true, isDefinition: true)
!5683 = !DIGlobalVariableExpression(var: !5684, expr: !DIExpression())
!5684 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias791", scope: !2, file: !3, line: 5437, type: !280, isLocal: true, isDefinition: true)
!5685 = !DIGlobalVariableExpression(var: !5686, expr: !DIExpression())
!5686 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias792", scope: !2, file: !3, line: 5438, type: !280, isLocal: true, isDefinition: true)
!5687 = !DIGlobalVariableExpression(var: !5688, expr: !DIExpression())
!5688 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias793", scope: !2, file: !3, line: 5439, type: !280, isLocal: true, isDefinition: true)
!5689 = !DIGlobalVariableExpression(var: !5690, expr: !DIExpression())
!5690 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias794", scope: !2, file: !3, line: 5440, type: !280, isLocal: true, isDefinition: true)
!5691 = !DIGlobalVariableExpression(var: !5692, expr: !DIExpression())
!5692 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias795", scope: !2, file: !3, line: 5441, type: !280, isLocal: true, isDefinition: true)
!5693 = !DIGlobalVariableExpression(var: !5694, expr: !DIExpression())
!5694 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias796", scope: !2, file: !3, line: 5442, type: !280, isLocal: true, isDefinition: true)
!5695 = !DIGlobalVariableExpression(var: !5696, expr: !DIExpression())
!5696 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias797", scope: !2, file: !3, line: 5443, type: !280, isLocal: true, isDefinition: true)
!5697 = !DIGlobalVariableExpression(var: !5698, expr: !DIExpression())
!5698 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias798", scope: !2, file: !3, line: 5444, type: !280, isLocal: true, isDefinition: true)
!5699 = !DIGlobalVariableExpression(var: !5700, expr: !DIExpression())
!5700 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias799", scope: !2, file: !3, line: 5445, type: !280, isLocal: true, isDefinition: true)
!5701 = !DIGlobalVariableExpression(var: !5702, expr: !DIExpression())
!5702 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias800", scope: !2, file: !3, line: 5446, type: !280, isLocal: true, isDefinition: true)
!5703 = !DIGlobalVariableExpression(var: !5704, expr: !DIExpression())
!5704 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias801", scope: !2, file: !3, line: 5447, type: !280, isLocal: true, isDefinition: true)
!5705 = !DIGlobalVariableExpression(var: !5706, expr: !DIExpression())
!5706 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias802", scope: !2, file: !3, line: 5448, type: !280, isLocal: true, isDefinition: true)
!5707 = !DIGlobalVariableExpression(var: !5708, expr: !DIExpression())
!5708 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias803", scope: !2, file: !3, line: 5449, type: !280, isLocal: true, isDefinition: true)
!5709 = !DIGlobalVariableExpression(var: !5710, expr: !DIExpression())
!5710 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias804", scope: !2, file: !3, line: 5450, type: !280, isLocal: true, isDefinition: true)
!5711 = !DIGlobalVariableExpression(var: !5712, expr: !DIExpression())
!5712 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias805", scope: !2, file: !3, line: 5451, type: !280, isLocal: true, isDefinition: true)
!5713 = !DIGlobalVariableExpression(var: !5714, expr: !DIExpression())
!5714 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias806", scope: !2, file: !3, line: 5452, type: !280, isLocal: true, isDefinition: true)
!5715 = !DIGlobalVariableExpression(var: !5716, expr: !DIExpression())
!5716 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias807", scope: !2, file: !3, line: 5453, type: !280, isLocal: true, isDefinition: true)
!5717 = !DIGlobalVariableExpression(var: !5718, expr: !DIExpression())
!5718 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias808", scope: !2, file: !3, line: 5454, type: !280, isLocal: true, isDefinition: true)
!5719 = !DIGlobalVariableExpression(var: !5720, expr: !DIExpression())
!5720 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias809", scope: !2, file: !3, line: 5455, type: !280, isLocal: true, isDefinition: true)
!5721 = !DIGlobalVariableExpression(var: !5722, expr: !DIExpression())
!5722 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias810", scope: !2, file: !3, line: 5456, type: !280, isLocal: true, isDefinition: true)
!5723 = !DIGlobalVariableExpression(var: !5724, expr: !DIExpression())
!5724 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias811", scope: !2, file: !3, line: 5457, type: !280, isLocal: true, isDefinition: true)
!5725 = !DIGlobalVariableExpression(var: !5726, expr: !DIExpression())
!5726 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias812", scope: !2, file: !3, line: 5458, type: !280, isLocal: true, isDefinition: true)
!5727 = !DIGlobalVariableExpression(var: !5728, expr: !DIExpression())
!5728 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias813", scope: !2, file: !3, line: 5459, type: !280, isLocal: true, isDefinition: true)
!5729 = !DIGlobalVariableExpression(var: !5730, expr: !DIExpression())
!5730 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias814", scope: !2, file: !3, line: 5460, type: !280, isLocal: true, isDefinition: true)
!5731 = !DIGlobalVariableExpression(var: !5732, expr: !DIExpression())
!5732 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias815", scope: !2, file: !3, line: 5461, type: !280, isLocal: true, isDefinition: true)
!5733 = !DIGlobalVariableExpression(var: !5734, expr: !DIExpression())
!5734 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias816", scope: !2, file: !3, line: 5462, type: !280, isLocal: true, isDefinition: true)
!5735 = !DIGlobalVariableExpression(var: !5736, expr: !DIExpression())
!5736 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias817", scope: !2, file: !3, line: 5463, type: !280, isLocal: true, isDefinition: true)
!5737 = !DIGlobalVariableExpression(var: !5738, expr: !DIExpression())
!5738 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias818", scope: !2, file: !3, line: 5464, type: !280, isLocal: true, isDefinition: true)
!5739 = !DIGlobalVariableExpression(var: !5740, expr: !DIExpression())
!5740 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias819", scope: !2, file: !3, line: 5465, type: !280, isLocal: true, isDefinition: true)
!5741 = !DIGlobalVariableExpression(var: !5742, expr: !DIExpression())
!5742 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias820", scope: !2, file: !3, line: 5466, type: !280, isLocal: true, isDefinition: true)
!5743 = !DIGlobalVariableExpression(var: !5744, expr: !DIExpression())
!5744 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias821", scope: !2, file: !3, line: 5467, type: !280, isLocal: true, isDefinition: true)
!5745 = !DIGlobalVariableExpression(var: !5746, expr: !DIExpression())
!5746 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias822", scope: !2, file: !3, line: 5468, type: !280, isLocal: true, isDefinition: true)
!5747 = !DIGlobalVariableExpression(var: !5748, expr: !DIExpression())
!5748 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias823", scope: !2, file: !3, line: 5469, type: !280, isLocal: true, isDefinition: true)
!5749 = !DIGlobalVariableExpression(var: !5750, expr: !DIExpression())
!5750 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias824", scope: !2, file: !3, line: 5470, type: !280, isLocal: true, isDefinition: true)
!5751 = !DIGlobalVariableExpression(var: !5752, expr: !DIExpression())
!5752 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias825", scope: !2, file: !3, line: 5471, type: !280, isLocal: true, isDefinition: true)
!5753 = !DIGlobalVariableExpression(var: !5754, expr: !DIExpression())
!5754 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias826", scope: !2, file: !3, line: 5472, type: !280, isLocal: true, isDefinition: true)
!5755 = !DIGlobalVariableExpression(var: !5756, expr: !DIExpression())
!5756 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias827", scope: !2, file: !3, line: 5473, type: !280, isLocal: true, isDefinition: true)
!5757 = !DIGlobalVariableExpression(var: !5758, expr: !DIExpression())
!5758 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias828", scope: !2, file: !3, line: 5474, type: !280, isLocal: true, isDefinition: true)
!5759 = !DIGlobalVariableExpression(var: !5760, expr: !DIExpression())
!5760 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias829", scope: !2, file: !3, line: 5475, type: !280, isLocal: true, isDefinition: true)
!5761 = !DIGlobalVariableExpression(var: !5762, expr: !DIExpression())
!5762 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias830", scope: !2, file: !3, line: 5476, type: !280, isLocal: true, isDefinition: true)
!5763 = !DIGlobalVariableExpression(var: !5764, expr: !DIExpression())
!5764 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias831", scope: !2, file: !3, line: 5477, type: !280, isLocal: true, isDefinition: true)
!5765 = !DIGlobalVariableExpression(var: !5766, expr: !DIExpression())
!5766 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias832", scope: !2, file: !3, line: 5478, type: !280, isLocal: true, isDefinition: true)
!5767 = !DIGlobalVariableExpression(var: !5768, expr: !DIExpression())
!5768 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias833", scope: !2, file: !3, line: 5479, type: !280, isLocal: true, isDefinition: true)
!5769 = !DIGlobalVariableExpression(var: !5770, expr: !DIExpression())
!5770 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias834", scope: !2, file: !3, line: 5480, type: !280, isLocal: true, isDefinition: true)
!5771 = !DIGlobalVariableExpression(var: !5772, expr: !DIExpression())
!5772 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias835", scope: !2, file: !3, line: 5481, type: !280, isLocal: true, isDefinition: true)
!5773 = !DIGlobalVariableExpression(var: !5774, expr: !DIExpression())
!5774 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias836", scope: !2, file: !3, line: 5482, type: !280, isLocal: true, isDefinition: true)
!5775 = !DIGlobalVariableExpression(var: !5776, expr: !DIExpression())
!5776 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_switchtec_ntb_dma_alias837", scope: !2, file: !3, line: 5483, type: !280, isLocal: true, isDefinition: true)
!5777 = !DIGlobalVariableExpression(var: !5778, expr: !DIExpression())
!5778 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_plx_ntb_dma_alias838", scope: !2, file: !3, line: 5497, type: !280, isLocal: true, isDefinition: true)
!5779 = !DIGlobalVariableExpression(var: !5780, expr: !DIExpression())
!5780 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_plx_ntb_dma_alias839", scope: !2, file: !3, line: 5498, type: !280, isLocal: true, isDefinition: true)
!5781 = !DIGlobalVariableExpression(var: !5782, expr: !DIExpression())
!5782 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_quirk_reset_lenovo_thinkpad_p50_nvgpu840", scope: !2, file: !3, line: 5554, type: !280, isLocal: true, isDefinition: true)
!5783 = !DIGlobalVariableExpression(var: !5784, expr: !DIExpression())
!5784 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_fixup_no_d0_pme841", scope: !2, file: !3, line: 5567, type: !280, isLocal: true, isDefinition: true)
!5785 = !DIGlobalVariableExpression(var: !5786, expr: !DIExpression())
!5786 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_fixup_no_pme842", scope: !2, file: !3, line: 5579, type: !280, isLocal: true, isDefinition: true)
!5787 = !DIGlobalVariableExpression(var: !5788, expr: !DIExpression())
!5788 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_fixup_no_pme843", scope: !2, file: !3, line: 5580, type: !280, isLocal: true, isDefinition: true)
!5789 = !DIGlobalVariableExpression(var: !5790, expr: !DIExpression())
!5790 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_apex_pci_fixup_class844", scope: !2, file: !3, line: 5586, type: !280, isLocal: true, isDefinition: true)
!5791 = !DIGlobalVariableExpression(var: !5792, expr: !DIExpression())
!5792 = distinct !DIGlobalVariable(name: "name", scope: !5793, file: !3, line: 546, type: !733, isLocal: true, isDefinition: true)
!5793 = distinct !DISubprogram(name: "quirk_cs5536_vsa", scope: !3, file: !3, line: 544, type: !4131, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!5794 = !DIGlobalVariableExpression(var: !5795, expr: !DIExpression())
!5795 = distinct !DIGlobalVariable(name: "via_vlink_dev_lo", scope: !2, file: !3, line: 1081, type: !277, isLocal: true, isDefinition: true)
!5796 = !DIGlobalVariableExpression(var: !5797, expr: !DIExpression())
!5797 = distinct !DIGlobalVariable(name: "via_vlink_dev_hi", scope: !2, file: !3, line: 1081, type: !277, isLocal: true, isDefinition: true)
!5798 = !DIGlobalVariableExpression(var: !5799, expr: !DIExpression())
!5799 = distinct !DIGlobalVariable(name: "asus_hides_smbus", scope: !2, file: !3, line: 1394, type: !277, isLocal: true, isDefinition: true)
!5800 = !DIGlobalVariableExpression(var: !5801, expr: !DIExpression())
!5801 = distinct !DIGlobalVariable(name: "asus_rcba_base", scope: !2, file: !3, line: 1563, type: !280, isLocal: true, isDefinition: true)
!5802 = !DIGlobalVariableExpression(var: !5803, expr: !DIExpression())
!5803 = distinct !DIGlobalVariable(name: "boot_interrupt_dmi_table", scope: !2, file: !3, line: 1917, type: !5804, isLocal: true, isDefinition: true)
!5804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5805, size: 5504, elements: !1723)
!5805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5806)
!5806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_system_id", file: !158, line: 566, size: 2752, elements: !5807)
!5807 = !{!5808, !5813, !5814, !5824}
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !5806, file: !158, line: 567, baseType: !5809, size: 64)
!5809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5810, size: 64)
!5810 = !DISubroutineType(types: !5811)
!5811 = !{!277, !5812}
!5812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5805, size: 64)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !5806, file: !158, line: 568, baseType: !707, size: 64, offset: 64)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !5806, file: !158, line: 569, baseType: !5815, size: 2560, offset: 128)
!5815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5816, size: 2560, elements: !1683)
!5816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_strmatch", file: !158, line: 560, size: 640, elements: !5817)
!5817 = !{!5818, !5819, !5820}
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !5816, file: !158, line: 561, baseType: !467, size: 7, flags: DIFlagBitField, extraData: i64 0)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "exact_match", scope: !5816, file: !158, line: 562, baseType: !467, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "substr", scope: !5816, file: !158, line: 563, baseType: !5821, size: 632, offset: 8)
!5821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 632, elements: !5822)
!5822 = !{!5823}
!5823 = !DISubrange(count: 79)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5806, file: !158, line: 570, baseType: !280, size: 64, offset: 2688)
!5825 = !DIGlobalVariableExpression(var: !5826, expr: !DIExpression())
!5826 = distinct !DIGlobalVariable(name: "__print_once", scope: !5827, file: !3, line: 3293, type: !752, isLocal: true, isDefinition: true)
!5827 = distinct !DISubprogram(name: "quirk_intel_mc_errata", scope: !3, file: !3, line: 3262, type: !4131, scopeLine: 3263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!5828 = !DIGlobalVariableExpression(var: !5829, expr: !DIExpression())
!5829 = distinct !DIGlobalVariable(name: "mellanox_broken_intx_devs", scope: !2, file: !3, line: 3467, type: !5830, isLocal: true, isDefinition: true)
!5830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 224, elements: !5831)
!5831 = !{!5832}
!5832 = !DISubrange(count: 14)
!5833 = !DIGlobalVariableExpression(var: !5834, expr: !DIExpression())
!5834 = distinct !DIGlobalVariable(name: "pci_dev_reset_methods", scope: !2, file: !3, line: 3915, type: !5835, isLocal: true, isDefinition: true)
!5835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5836, size: 896, elements: !5842)
!5836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5837)
!5837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev_reset_methods", file: !4266, line: 591, size: 128, elements: !5838)
!5838 = !{!5839, !5840, !5841}
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5837, file: !4266, line: 592, baseType: !272, size: 16)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5837, file: !4266, line: 593, baseType: !272, size: 16, offset: 16)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5837, file: !4266, line: 594, baseType: !4143, size: 64, offset: 64)
!5842 = !{!5843}
!5843 = !DISubrange(count: 7)
!5844 = !DIGlobalVariableExpression(var: !5845, expr: !DIExpression())
!5845 = distinct !DIGlobalVariable(name: "fixed_dma_alias_tbl", scope: !2, file: !3, line: 4035, type: !5846, isLocal: true, isDefinition: true)
!5846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4115, size: 768, elements: !820)
!5847 = !DIGlobalVariableExpression(var: !5848, expr: !DIExpression())
!5848 = distinct !DIGlobalVariable(name: "pci_dev_acs_enabled", scope: !2, file: !3, line: 4673, type: !5849, isLocal: true, isDefinition: true)
!5849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5850, size: 10752, elements: !5859)
!5850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5851)
!5851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev_acs_enabled", file: !3, line: 4669, size: 128, elements: !5852)
!5852 = !{!5853, !5854, !5855}
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5851, file: !3, line: 4670, baseType: !272, size: 16)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5851, file: !3, line: 4671, baseType: !272, size: 16, offset: 16)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "acs_enabled", scope: !5851, file: !3, line: 4672, baseType: !5856, size: 64, offset: 64)
!5856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5857, size: 64)
!5857 = !DISubroutineType(types: !5858)
!5858 = !{!277, !3449, !272}
!5859 = !{!5860}
!5860 = !DISubrange(count: 84)
!5861 = !DIGlobalVariableExpression(var: !5862, expr: !DIExpression())
!5862 = distinct !DIGlobalVariable(name: "pci_quirk_intel_pch_acs_ids", scope: !2, file: !3, line: 4455, type: !5863, isLocal: true, isDefinition: true)
!5863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5864, size: 1904, elements: !5865)
!5864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!5865 = !{!5866}
!5866 = !DISubrange(count: 119)
!5867 = !DIGlobalVariableExpression(var: !5868, expr: !DIExpression())
!5868 = distinct !DIGlobalVariable(name: "pci_dev_acs_ops", scope: !2, file: !3, line: 4980, type: !5869, isLocal: true, isDefinition: true)
!5869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5870, size: 384, elements: !1723)
!5870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5871)
!5871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev_acs_ops", file: !3, line: 4975, size: 192, elements: !5872)
!5872 = !{!5873, !5874, !5875, !5876}
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5871, file: !3, line: 4976, baseType: !272, size: 16)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5871, file: !3, line: 4977, baseType: !272, size: 16, offset: 16)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "enable_acs", scope: !5871, file: !3, line: 4978, baseType: !4138, size: 64, offset: 64)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "disable_acs_redir", scope: !5871, file: !3, line: 4979, baseType: !4138, size: 64, offset: 128)
!5877 = !{i32 7, !"Dwarf Version", i32 4}
!5878 = !{i32 2, !"Debug Info Version", i32 3}
!5879 = !{i32 1, !"wchar_size", i32 2}
!5880 = !{i32 1, !"Code Model", i32 2}
!5881 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5882 = distinct !DISubprogram(name: "pci_fixup_device", scope: !3, file: !3, line: 99, type: !5883, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !352)
!5883 = !DISubroutineType(types: !5884)
!5884 = !{null, !5, !3449}
!5885 = !DILocalVariable(name: "pass", arg: 1, scope: !5882, file: !3, line: 99, type: !5)
!5886 = !DILocation(line: 99, column: 43, scope: !5882)
!5887 = !DILocalVariable(name: "dev", arg: 2, scope: !5882, file: !3, line: 99, type: !3449)
!5888 = !DILocation(line: 99, column: 65, scope: !5882)
!5889 = !DILocalVariable(name: "start", scope: !5882, file: !3, line: 101, type: !5890)
!5890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5891, size: 64)
!5891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_fixup", file: !6, line: 1891, size: 128, elements: !5892)
!5892 = !{!5893, !5894, !5895, !5896, !5897}
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5891, file: !6, line: 1892, baseType: !272, size: 16)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5891, file: !6, line: 1893, baseType: !272, size: 16, offset: 16)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5891, file: !6, line: 1894, baseType: !278, size: 32, offset: 32)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "class_shift", scope: !5891, file: !6, line: 1895, baseType: !7, size: 32, offset: 64)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "hook_offset", scope: !5891, file: !6, line: 1897, baseType: !277, size: 32, offset: 96)
!5898 = !DILocation(line: 101, column: 20, scope: !5882)
!5899 = !DILocalVariable(name: "end", scope: !5882, file: !3, line: 101, type: !5890)
!5900 = !DILocation(line: 101, column: 28, scope: !5882)
!5901 = !DILocation(line: 103, column: 10, scope: !5882)
!5902 = !DILocation(line: 103, column: 2, scope: !5882)
!5903 = !DILocation(line: 105, column: 9, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 103, column: 16)
!5905 = !DILocation(line: 106, column: 7, scope: !5904)
!5906 = !DILocation(line: 107, column: 3, scope: !5904)
!5907 = !DILocation(line: 110, column: 9, scope: !5904)
!5908 = !DILocation(line: 111, column: 7, scope: !5904)
!5909 = !DILocation(line: 112, column: 3, scope: !5904)
!5910 = !DILocation(line: 115, column: 8, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 115, column: 7)
!5912 = !DILocation(line: 115, column: 7, scope: !5904)
!5913 = !DILocation(line: 116, column: 4, scope: !5911)
!5914 = !DILocation(line: 117, column: 9, scope: !5904)
!5915 = !DILocation(line: 118, column: 7, scope: !5904)
!5916 = !DILocation(line: 119, column: 3, scope: !5904)
!5917 = !DILocation(line: 122, column: 9, scope: !5904)
!5918 = !DILocation(line: 123, column: 7, scope: !5904)
!5919 = !DILocation(line: 124, column: 3, scope: !5904)
!5920 = !DILocation(line: 127, column: 9, scope: !5904)
!5921 = !DILocation(line: 128, column: 7, scope: !5904)
!5922 = !DILocation(line: 129, column: 3, scope: !5904)
!5923 = !DILocation(line: 132, column: 9, scope: !5904)
!5924 = !DILocation(line: 133, column: 7, scope: !5904)
!5925 = !DILocation(line: 134, column: 3, scope: !5904)
!5926 = !DILocation(line: 137, column: 9, scope: !5904)
!5927 = !DILocation(line: 138, column: 7, scope: !5904)
!5928 = !DILocation(line: 139, column: 3, scope: !5904)
!5929 = !DILocation(line: 142, column: 9, scope: !5904)
!5930 = !DILocation(line: 143, column: 7, scope: !5904)
!5931 = !DILocation(line: 144, column: 3, scope: !5904)
!5932 = !DILocation(line: 148, column: 3, scope: !5904)
!5933 = !DILocation(line: 150, column: 16, scope: !5882)
!5934 = !DILocation(line: 150, column: 21, scope: !5882)
!5935 = !DILocation(line: 150, column: 28, scope: !5882)
!5936 = !DILocation(line: 150, column: 2, scope: !5882)
!5937 = !DILocation(line: 151, column: 1, scope: !5882)
!5938 = distinct !DISubprogram(name: "pci_do_fixups", scope: !3, file: !3, line: 56, type: !5939, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!5939 = !DISubroutineType(types: !5940)
!5940 = !{null, !3449, !5890, !5890}
!5941 = !DILocalVariable(name: "dev", arg: 1, scope: !5938, file: !3, line: 56, type: !3449)
!5942 = !DILocation(line: 56, column: 43, scope: !5938)
!5943 = !DILocalVariable(name: "f", arg: 2, scope: !5938, file: !3, line: 56, type: !5890)
!5944 = !DILocation(line: 56, column: 66, scope: !5938)
!5945 = !DILocalVariable(name: "end", arg: 3, scope: !5938, file: !3, line: 57, type: !5890)
!5946 = !DILocation(line: 57, column: 24, scope: !5938)
!5947 = !DILocalVariable(name: "calltime", scope: !5938, file: !3, line: 59, type: !392)
!5948 = !DILocation(line: 59, column: 10, scope: !5938)
!5949 = !DILocation(line: 61, column: 2, scope: !5938)
!5950 = !DILocation(line: 61, column: 9, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 61, column: 2)
!5952 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 61, column: 2)
!5953 = !DILocation(line: 61, column: 13, scope: !5951)
!5954 = !DILocation(line: 61, column: 11, scope: !5951)
!5955 = !DILocation(line: 61, column: 2, scope: !5952)
!5956 = !DILocation(line: 62, column: 8, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 62, column: 7)
!5958 = !DILocation(line: 62, column: 11, scope: !5957)
!5959 = !DILocation(line: 62, column: 27, scope: !5957)
!5960 = !DILocation(line: 62, column: 32, scope: !5957)
!5961 = !DILocation(line: 62, column: 41, scope: !5957)
!5962 = !DILocation(line: 62, column: 44, scope: !5957)
!5963 = !DILocation(line: 62, column: 38, scope: !5957)
!5964 = !DILocation(line: 62, column: 17, scope: !5957)
!5965 = !DILocation(line: 62, column: 57, scope: !5957)
!5966 = !DILocation(line: 63, column: 8, scope: !5957)
!5967 = !DILocation(line: 63, column: 11, scope: !5957)
!5968 = !DILocation(line: 63, column: 17, scope: !5957)
!5969 = !DILocation(line: 63, column: 38, scope: !5957)
!5970 = !DILocation(line: 64, column: 8, scope: !5957)
!5971 = !DILocation(line: 64, column: 11, scope: !5957)
!5972 = !DILocation(line: 64, column: 21, scope: !5957)
!5973 = !DILocation(line: 64, column: 26, scope: !5957)
!5974 = !DILocation(line: 64, column: 18, scope: !5957)
!5975 = !DILocation(line: 64, column: 33, scope: !5957)
!5976 = !DILocation(line: 65, column: 8, scope: !5957)
!5977 = !DILocation(line: 65, column: 11, scope: !5957)
!5978 = !DILocation(line: 65, column: 18, scope: !5957)
!5979 = !DILocation(line: 65, column: 39, scope: !5957)
!5980 = !DILocation(line: 66, column: 8, scope: !5957)
!5981 = !DILocation(line: 66, column: 11, scope: !5957)
!5982 = !DILocation(line: 66, column: 21, scope: !5957)
!5983 = !DILocation(line: 66, column: 26, scope: !5957)
!5984 = !DILocation(line: 66, column: 18, scope: !5957)
!5985 = !DILocation(line: 66, column: 33, scope: !5957)
!5986 = !DILocation(line: 67, column: 8, scope: !5957)
!5987 = !DILocation(line: 67, column: 11, scope: !5957)
!5988 = !DILocation(line: 67, column: 18, scope: !5957)
!5989 = !DILocation(line: 62, column: 7, scope: !5951)
!5990 = !DILocalVariable(name: "hook", scope: !5991, file: !3, line: 68, type: !4130)
!5991 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 67, column: 40)
!5992 = !DILocation(line: 68, column: 11, scope: !5991)
!5993 = !DILocation(line: 70, column: 26, scope: !5991)
!5994 = !DILocation(line: 70, column: 29, scope: !5991)
!5995 = !DILocation(line: 70, column: 11, scope: !5991)
!5996 = !DILocation(line: 70, column: 9, scope: !5991)
!5997 = !DILocation(line: 74, column: 33, scope: !5991)
!5998 = !DILocation(line: 74, column: 38, scope: !5991)
!5999 = !DILocation(line: 74, column: 15, scope: !5991)
!6000 = !DILocation(line: 74, column: 13, scope: !5991)
!6001 = !DILocation(line: 75, column: 4, scope: !5991)
!6002 = !DILocation(line: 75, column: 9, scope: !5991)
!6003 = !DILocation(line: 76, column: 23, scope: !5991)
!6004 = !DILocation(line: 76, column: 28, scope: !5991)
!6005 = !DILocation(line: 76, column: 38, scope: !5991)
!6006 = !DILocation(line: 76, column: 4, scope: !5991)
!6007 = !DILocation(line: 77, column: 3, scope: !5991)
!6008 = !DILocation(line: 67, column: 37, scope: !5957)
!6009 = !DILocation(line: 61, column: 19, scope: !5951)
!6010 = !DILocation(line: 61, column: 2, scope: !5951)
!6011 = distinct !{!6011, !5955, !6012}
!6012 = !DILocation(line: 77, column: 3, scope: !5952)
!6013 = !DILocation(line: 78, column: 1, scope: !5938)
!6014 = distinct !DISubprogram(name: "pci_apply_final_quirks", scope: !3, file: !3, line: 154, type: !6015, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6015 = !DISubroutineType(types: !6016)
!6016 = !{!277}
!6017 = !DILocalVariable(name: "dev", scope: !6014, file: !3, line: 156, type: !3449)
!6018 = !DILocation(line: 156, column: 18, scope: !6014)
!6019 = !DILocalVariable(name: "cls", scope: !6014, file: !3, line: 157, type: !465)
!6020 = !DILocation(line: 157, column: 5, scope: !6014)
!6021 = !DILocalVariable(name: "tmp", scope: !6014, file: !3, line: 158, type: !465)
!6022 = !DILocation(line: 158, column: 5, scope: !6014)
!6023 = !DILocation(line: 160, column: 6, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 160, column: 6)
!6025 = !DILocation(line: 160, column: 6, scope: !6014)
!6026 = !DILocation(line: 161, column: 3, scope: !6024)
!6027 = !DILocation(line: 163, column: 31, scope: !6014)
!6028 = !DILocation(line: 164, column: 2, scope: !6014)
!6029 = !DILocation(line: 165, column: 37, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 164, column: 24)
!6031 = !DILocation(line: 165, column: 3, scope: !6030)
!6032 = !DILocation(line: 171, column: 8, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 171, column: 7)
!6034 = !DILocation(line: 171, column: 7, scope: !6030)
!6035 = !DILocation(line: 172, column: 25, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 171, column: 29)
!6037 = !DILocation(line: 172, column: 4, scope: !6036)
!6038 = !DILocation(line: 173, column: 9, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 173, column: 8)
!6040 = !DILocation(line: 173, column: 8, scope: !6036)
!6041 = !DILocation(line: 174, column: 11, scope: !6039)
!6042 = !DILocation(line: 174, column: 9, scope: !6039)
!6043 = !DILocation(line: 174, column: 5, scope: !6039)
!6044 = !DILocation(line: 175, column: 9, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 175, column: 8)
!6046 = !DILocation(line: 175, column: 13, scope: !6045)
!6047 = !DILocation(line: 175, column: 16, scope: !6045)
!6048 = !DILocation(line: 175, column: 23, scope: !6045)
!6049 = !DILocation(line: 175, column: 20, scope: !6045)
!6050 = !DILocation(line: 175, column: 8, scope: !6036)
!6051 = !DILocation(line: 176, column: 5, scope: !6045)
!6052 = distinct !{!6052, !6028, !6053}
!6053 = !DILocation(line: 183, column: 2, scope: !6014)
!6054 = !DILocation(line: 178, column: 4, scope: !6036)
!6055 = !DILocation(line: 181, column: 26, scope: !6036)
!6056 = !DILocation(line: 181, column: 24, scope: !6036)
!6057 = !DILocation(line: 182, column: 3, scope: !6036)
!6058 = !DILocation(line: 185, column: 7, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 185, column: 6)
!6060 = !DILocation(line: 185, column: 6, scope: !6014)
!6061 = !DILocation(line: 186, column: 3, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 185, column: 28)
!6063 = !DILocation(line: 188, column: 25, scope: !6062)
!6064 = !DILocation(line: 188, column: 31, scope: !6062)
!6065 = !DILocation(line: 188, column: 37, scope: !6062)
!6066 = !DILocation(line: 188, column: 23, scope: !6062)
!6067 = !DILocation(line: 189, column: 2, scope: !6062)
!6068 = !DILocation(line: 191, column: 2, scope: !6014)
!6069 = distinct !DISubprogram(name: "quirk_mmio_always_on", scope: !3, file: !3, line: 201, type: !4131, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6070 = !DILocalVariable(name: "dev", arg: 1, scope: !6069, file: !3, line: 201, type: !3449)
!6071 = !DILocation(line: 201, column: 50, scope: !6069)
!6072 = !DILocation(line: 203, column: 2, scope: !6069)
!6073 = !DILocation(line: 203, column: 7, scope: !6069)
!6074 = !DILocation(line: 203, column: 22, scope: !6069)
!6075 = !DILocation(line: 204, column: 1, scope: !6069)
!6076 = distinct !DISubprogram(name: "quirk_mellanox_tavor", scope: !3, file: !3, line: 213, type: !4131, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6077 = !DILocalVariable(name: "dev", arg: 1, scope: !6076, file: !3, line: 213, type: !3449)
!6078 = !DILocation(line: 213, column: 50, scope: !6076)
!6079 = !DILocation(line: 215, column: 2, scope: !6076)
!6080 = !DILocation(line: 215, column: 7, scope: !6076)
!6081 = !DILocation(line: 215, column: 28, scope: !6076)
!6082 = !DILocation(line: 216, column: 1, scope: !6076)
!6083 = distinct !DISubprogram(name: "quirk_passive_release", scope: !3, file: !3, line: 224, type: !4131, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6084 = !DILocalVariable(name: "dev", arg: 1, scope: !6083, file: !3, line: 224, type: !3449)
!6085 = !DILocation(line: 224, column: 51, scope: !6083)
!6086 = !DILocalVariable(name: "d", scope: !6083, file: !3, line: 226, type: !3449)
!6087 = !DILocation(line: 226, column: 18, scope: !6083)
!6088 = !DILocalVariable(name: "dlc", scope: !6083, file: !3, line: 227, type: !467)
!6089 = !DILocation(line: 227, column: 16, scope: !6083)
!6090 = !DILocation(line: 233, column: 2, scope: !6083)
!6091 = !DILocation(line: 233, column: 81, scope: !6083)
!6092 = !DILocation(line: 233, column: 14, scope: !6083)
!6093 = !DILocation(line: 233, column: 12, scope: !6083)
!6094 = !DILocation(line: 234, column: 24, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 233, column: 86)
!6096 = !DILocation(line: 234, column: 3, scope: !6095)
!6097 = !DILocation(line: 235, column: 9, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 235, column: 7)
!6099 = !DILocation(line: 235, column: 13, scope: !6098)
!6100 = !DILocation(line: 235, column: 7, scope: !6095)
!6101 = !DILocation(line: 236, column: 4, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 235, column: 22)
!6103 = !DILocation(line: 237, column: 8, scope: !6102)
!6104 = !DILocation(line: 238, column: 26, scope: !6102)
!6105 = !DILocation(line: 238, column: 35, scope: !6102)
!6106 = !DILocation(line: 238, column: 4, scope: !6102)
!6107 = !DILocation(line: 239, column: 3, scope: !6102)
!6108 = distinct !{!6108, !6090, !6109}
!6109 = !DILocation(line: 240, column: 2, scope: !6083)
!6110 = !DILocation(line: 241, column: 1, scope: !6083)
!6111 = distinct !DISubprogram(name: "quirk_isa_dma_hangs", scope: !3, file: !3, line: 253, type: !4131, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6112 = !DILocalVariable(name: "dev", arg: 1, scope: !6111, file: !3, line: 253, type: !3449)
!6113 = !DILocation(line: 253, column: 49, scope: !6111)
!6114 = !DILocation(line: 255, column: 7, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6111, file: !3, line: 255, column: 6)
!6116 = !DILocation(line: 255, column: 6, scope: !6111)
!6117 = !DILocation(line: 256, column: 24, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 255, column: 29)
!6119 = !DILocation(line: 257, column: 3, scope: !6118)
!6120 = !DILocation(line: 258, column: 2, scope: !6118)
!6121 = !DILocation(line: 259, column: 1, scope: !6111)
!6122 = distinct !DISubprogram(name: "quirk_tigerpoint_bm_sts", scope: !3, file: !3, line: 276, type: !4131, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6123 = !DILocalVariable(name: "dev", arg: 1, scope: !6122, file: !3, line: 276, type: !3449)
!6124 = !DILocation(line: 276, column: 53, scope: !6122)
!6125 = !DILocalVariable(name: "pmbase", scope: !6122, file: !3, line: 278, type: !278)
!6126 = !DILocation(line: 278, column: 6, scope: !6122)
!6127 = !DILocalVariable(name: "pm1a", scope: !6122, file: !3, line: 279, type: !272)
!6128 = !DILocation(line: 279, column: 6, scope: !6122)
!6129 = !DILocation(line: 281, column: 24, scope: !6122)
!6130 = !DILocation(line: 281, column: 2, scope: !6122)
!6131 = !DILocation(line: 282, column: 11, scope: !6122)
!6132 = !DILocation(line: 282, column: 18, scope: !6122)
!6133 = !DILocation(line: 282, column: 9, scope: !6122)
!6134 = !DILocation(line: 283, column: 13, scope: !6122)
!6135 = !DILocation(line: 283, column: 9, scope: !6122)
!6136 = !DILocation(line: 283, column: 7, scope: !6122)
!6137 = !DILocation(line: 285, column: 6, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 285, column: 6)
!6139 = !DILocation(line: 285, column: 11, scope: !6138)
!6140 = !DILocation(line: 285, column: 6, scope: !6122)
!6141 = !DILocation(line: 286, column: 3, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 285, column: 19)
!6143 = !DILocation(line: 287, column: 14, scope: !6142)
!6144 = !DILocation(line: 287, column: 3, scope: !6142)
!6145 = !DILocation(line: 288, column: 2, scope: !6142)
!6146 = !DILocation(line: 289, column: 1, scope: !6122)
!6147 = distinct !DISubprogram(name: "quirk_nopcipci", scope: !3, file: !3, line: 293, type: !4131, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6148 = !DILocalVariable(name: "dev", arg: 1, scope: !6147, file: !3, line: 293, type: !3449)
!6149 = !DILocation(line: 293, column: 44, scope: !6147)
!6150 = !DILocation(line: 295, column: 7, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 295, column: 6)
!6152 = !DILocation(line: 295, column: 24, scope: !6151)
!6153 = !DILocation(line: 295, column: 39, scope: !6151)
!6154 = !DILocation(line: 295, column: 6, scope: !6147)
!6155 = !DILocation(line: 296, column: 3, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 295, column: 45)
!6157 = !DILocation(line: 297, column: 20, scope: !6156)
!6158 = !DILocation(line: 298, column: 2, scope: !6156)
!6159 = !DILocation(line: 299, column: 1, scope: !6147)
!6160 = distinct !DISubprogram(name: "quirk_nopciamd", scope: !3, file: !3, line: 303, type: !4131, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6161 = !DILocalVariable(name: "dev", arg: 1, scope: !6160, file: !3, line: 303, type: !3449)
!6162 = !DILocation(line: 303, column: 44, scope: !6160)
!6163 = !DILocalVariable(name: "rev", scope: !6160, file: !3, line: 305, type: !465)
!6164 = !DILocation(line: 305, column: 5, scope: !6160)
!6165 = !DILocation(line: 306, column: 23, scope: !6160)
!6166 = !DILocation(line: 306, column: 2, scope: !6160)
!6167 = !DILocation(line: 307, column: 6, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6160, file: !3, line: 307, column: 6)
!6169 = !DILocation(line: 307, column: 10, scope: !6168)
!6170 = !DILocation(line: 307, column: 6, scope: !6160)
!6171 = !DILocation(line: 309, column: 3, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 307, column: 19)
!6173 = !DILocation(line: 310, column: 20, scope: !6172)
!6174 = !DILocation(line: 311, column: 2, scope: !6172)
!6175 = !DILocation(line: 312, column: 1, scope: !6160)
!6176 = distinct !DISubprogram(name: "quirk_triton", scope: !3, file: !3, line: 316, type: !4131, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6177 = !DILocalVariable(name: "dev", arg: 1, scope: !6176, file: !3, line: 316, type: !3449)
!6178 = !DILocation(line: 316, column: 42, scope: !6176)
!6179 = !DILocation(line: 318, column: 7, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 318, column: 6)
!6181 = !DILocation(line: 318, column: 23, scope: !6180)
!6182 = !DILocation(line: 318, column: 39, scope: !6180)
!6183 = !DILocation(line: 318, column: 6, scope: !6176)
!6184 = !DILocation(line: 319, column: 3, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 318, column: 45)
!6186 = !DILocation(line: 320, column: 20, scope: !6185)
!6187 = !DILocation(line: 321, column: 2, scope: !6185)
!6188 = !DILocation(line: 322, column: 1, scope: !6176)
!6189 = distinct !DISubprogram(name: "quirk_vialatency", scope: !3, file: !3, line: 338, type: !4131, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6190 = !DILocalVariable(name: "dev", arg: 1, scope: !6189, file: !3, line: 338, type: !3449)
!6191 = !DILocation(line: 338, column: 46, scope: !6189)
!6192 = !DILocalVariable(name: "p", scope: !6189, file: !3, line: 340, type: !3449)
!6193 = !DILocation(line: 340, column: 18, scope: !6189)
!6194 = !DILocalVariable(name: "busarb", scope: !6189, file: !3, line: 341, type: !465)
!6195 = !DILocation(line: 341, column: 5, scope: !6189)
!6196 = !DILocation(line: 347, column: 6, scope: !6189)
!6197 = !DILocation(line: 347, column: 4, scope: !6189)
!6198 = !DILocation(line: 348, column: 6, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 348, column: 6)
!6200 = !DILocation(line: 348, column: 8, scope: !6199)
!6201 = !DILocation(line: 348, column: 6, scope: !6189)
!6202 = !DILocation(line: 355, column: 7, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 355, column: 7)
!6204 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 348, column: 17)
!6205 = !DILocation(line: 355, column: 10, scope: !6203)
!6206 = !DILocation(line: 355, column: 19, scope: !6203)
!6207 = !DILocation(line: 355, column: 26, scope: !6203)
!6208 = !DILocation(line: 355, column: 29, scope: !6203)
!6209 = !DILocation(line: 355, column: 32, scope: !6203)
!6210 = !DILocation(line: 355, column: 41, scope: !6203)
!6211 = !DILocation(line: 355, column: 7, scope: !6204)
!6212 = !DILocation(line: 356, column: 4, scope: !6203)
!6213 = !DILocation(line: 357, column: 2, scope: !6204)
!6214 = !DILocation(line: 358, column: 7, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 357, column: 9)
!6216 = !DILocation(line: 358, column: 5, scope: !6215)
!6217 = !DILocation(line: 359, column: 7, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 359, column: 7)
!6219 = !DILocation(line: 359, column: 9, scope: !6218)
!6220 = !DILocation(line: 359, column: 7, scope: !6215)
!6221 = !DILocation(line: 360, column: 4, scope: !6218)
!6222 = !DILocation(line: 363, column: 7, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 363, column: 7)
!6224 = !DILocation(line: 363, column: 10, scope: !6223)
!6225 = !DILocation(line: 363, column: 19, scope: !6223)
!6226 = !DILocation(line: 363, column: 26, scope: !6223)
!6227 = !DILocation(line: 363, column: 29, scope: !6223)
!6228 = !DILocation(line: 363, column: 32, scope: !6223)
!6229 = !DILocation(line: 363, column: 41, scope: !6223)
!6230 = !DILocation(line: 363, column: 7, scope: !6215)
!6231 = !DILocation(line: 364, column: 4, scope: !6223)
!6232 = !DILocation(line: 379, column: 23, scope: !6189)
!6233 = !DILocation(line: 379, column: 2, scope: !6189)
!6234 = !DILocation(line: 385, column: 9, scope: !6189)
!6235 = !DILocation(line: 386, column: 9, scope: !6189)
!6236 = !DILocation(line: 387, column: 24, scope: !6189)
!6237 = !DILocation(line: 387, column: 35, scope: !6189)
!6238 = !DILocation(line: 387, column: 2, scope: !6189)
!6239 = !DILocation(line: 388, column: 2, scope: !6189)
!6240 = !DILabel(scope: !6189, name: "exit", file: !3, line: 389)
!6241 = !DILocation(line: 389, column: 1, scope: !6189)
!6242 = !DILocation(line: 390, column: 14, scope: !6189)
!6243 = !DILocation(line: 390, column: 2, scope: !6189)
!6244 = !DILocation(line: 391, column: 1, scope: !6189)
!6245 = distinct !DISubprogram(name: "quirk_viaetbf", scope: !3, file: !3, line: 401, type: !4131, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6246 = !DILocalVariable(name: "dev", arg: 1, scope: !6245, file: !3, line: 401, type: !3449)
!6247 = !DILocation(line: 401, column: 43, scope: !6245)
!6248 = !DILocation(line: 403, column: 7, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 403, column: 6)
!6250 = !DILocation(line: 403, column: 23, scope: !6249)
!6251 = !DILocation(line: 403, column: 40, scope: !6249)
!6252 = !DILocation(line: 403, column: 6, scope: !6245)
!6253 = !DILocation(line: 404, column: 3, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 403, column: 46)
!6255 = !DILocation(line: 405, column: 20, scope: !6254)
!6256 = !DILocation(line: 406, column: 2, scope: !6254)
!6257 = !DILocation(line: 407, column: 1, scope: !6245)
!6258 = distinct !DISubprogram(name: "quirk_vsfx", scope: !3, file: !3, line: 410, type: !4131, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6259 = !DILocalVariable(name: "dev", arg: 1, scope: !6258, file: !3, line: 410, type: !3449)
!6260 = !DILocation(line: 410, column: 40, scope: !6258)
!6261 = !DILocation(line: 412, column: 7, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 412, column: 6)
!6263 = !DILocation(line: 412, column: 23, scope: !6262)
!6264 = !DILocation(line: 412, column: 37, scope: !6262)
!6265 = !DILocation(line: 412, column: 6, scope: !6258)
!6266 = !DILocation(line: 413, column: 3, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 412, column: 43)
!6268 = !DILocation(line: 414, column: 20, scope: !6267)
!6269 = !DILocation(line: 415, column: 2, scope: !6267)
!6270 = !DILocation(line: 416, column: 1, scope: !6258)
!6271 = distinct !DISubprogram(name: "quirk_alimagik", scope: !3, file: !3, line: 424, type: !4131, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6272 = !DILocalVariable(name: "dev", arg: 1, scope: !6271, file: !3, line: 424, type: !3449)
!6273 = !DILocation(line: 424, column: 44, scope: !6271)
!6274 = !DILocation(line: 426, column: 7, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 426, column: 6)
!6276 = !DILocation(line: 426, column: 23, scope: !6275)
!6277 = !DILocation(line: 426, column: 41, scope: !6275)
!6278 = !DILocation(line: 426, column: 6, scope: !6271)
!6279 = !DILocation(line: 427, column: 3, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 426, column: 47)
!6281 = !DILocation(line: 428, column: 20, scope: !6280)
!6282 = !DILocation(line: 429, column: 2, scope: !6280)
!6283 = !DILocation(line: 430, column: 1, scope: !6271)
!6284 = distinct !DISubprogram(name: "quirk_natoma", scope: !3, file: !3, line: 435, type: !4131, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6285 = !DILocalVariable(name: "dev", arg: 1, scope: !6284, file: !3, line: 435, type: !3449)
!6286 = !DILocation(line: 435, column: 42, scope: !6284)
!6287 = !DILocation(line: 437, column: 7, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 437, column: 6)
!6289 = !DILocation(line: 437, column: 23, scope: !6288)
!6290 = !DILocation(line: 437, column: 39, scope: !6288)
!6291 = !DILocation(line: 437, column: 6, scope: !6284)
!6292 = !DILocation(line: 438, column: 3, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 437, column: 45)
!6294 = !DILocation(line: 439, column: 20, scope: !6293)
!6295 = !DILocation(line: 440, column: 2, scope: !6293)
!6296 = !DILocation(line: 441, column: 1, scope: !6284)
!6297 = distinct !DISubprogram(name: "quirk_citrine", scope: !3, file: !3, line: 453, type: !4131, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6298 = !DILocalVariable(name: "dev", arg: 1, scope: !6297, file: !3, line: 453, type: !3449)
!6299 = !DILocation(line: 453, column: 43, scope: !6297)
!6300 = !DILocation(line: 455, column: 2, scope: !6297)
!6301 = !DILocation(line: 455, column: 7, scope: !6297)
!6302 = !DILocation(line: 455, column: 16, scope: !6297)
!6303 = !DILocation(line: 456, column: 1, scope: !6297)
!6304 = distinct !DISubprogram(name: "quirk_nfp6000", scope: !3, file: !3, line: 463, type: !4131, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6305 = !DILocalVariable(name: "dev", arg: 1, scope: !6304, file: !3, line: 463, type: !3449)
!6306 = !DILocation(line: 463, column: 43, scope: !6304)
!6307 = !DILocation(line: 465, column: 2, scope: !6304)
!6308 = !DILocation(line: 465, column: 7, scope: !6304)
!6309 = !DILocation(line: 465, column: 16, scope: !6304)
!6310 = !DILocation(line: 466, column: 1, scope: !6304)
!6311 = distinct !DISubprogram(name: "quirk_extend_bar_to_page", scope: !3, file: !3, line: 473, type: !4131, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6312 = !DILocalVariable(name: "dev", arg: 1, scope: !6311, file: !3, line: 473, type: !3449)
!6313 = !DILocation(line: 473, column: 54, scope: !6311)
!6314 = !DILocalVariable(name: "i", scope: !6311, file: !3, line: 475, type: !277)
!6315 = !DILocation(line: 475, column: 6, scope: !6311)
!6316 = !DILocation(line: 477, column: 9, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 477, column: 2)
!6318 = !DILocation(line: 477, column: 7, scope: !6317)
!6319 = !DILocation(line: 477, column: 14, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 477, column: 2)
!6321 = !DILocation(line: 477, column: 16, scope: !6320)
!6322 = !DILocation(line: 477, column: 2, scope: !6317)
!6323 = !DILocalVariable(name: "r", scope: !6324, file: !3, line: 478, type: !3465)
!6324 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 477, column: 41)
!6325 = !DILocation(line: 478, column: 20, scope: !6324)
!6326 = !DILocation(line: 478, column: 25, scope: !6324)
!6327 = !DILocation(line: 478, column: 30, scope: !6324)
!6328 = !DILocation(line: 478, column: 39, scope: !6324)
!6329 = !DILocation(line: 480, column: 7, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 480, column: 7)
!6331 = !DILocation(line: 480, column: 10, scope: !6330)
!6332 = !DILocation(line: 480, column: 16, scope: !6330)
!6333 = !DILocation(line: 480, column: 33, scope: !6330)
!6334 = !DILocation(line: 480, column: 50, scope: !6330)
!6335 = !DILocation(line: 480, column: 36, scope: !6330)
!6336 = !DILocation(line: 480, column: 53, scope: !6330)
!6337 = !DILocation(line: 480, column: 7, scope: !6324)
!6338 = !DILocation(line: 481, column: 4, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 480, column: 66)
!6340 = !DILocation(line: 481, column: 7, scope: !6339)
!6341 = !DILocation(line: 481, column: 11, scope: !6339)
!6342 = !DILocation(line: 482, column: 4, scope: !6339)
!6343 = !DILocation(line: 482, column: 7, scope: !6339)
!6344 = !DILocation(line: 482, column: 13, scope: !6339)
!6345 = !DILocation(line: 483, column: 4, scope: !6339)
!6346 = !DILocation(line: 483, column: 7, scope: !6339)
!6347 = !DILocation(line: 483, column: 13, scope: !6339)
!6348 = !DILocation(line: 484, column: 4, scope: !6339)
!6349 = !DILocation(line: 486, column: 3, scope: !6339)
!6350 = !DILocation(line: 487, column: 2, scope: !6324)
!6351 = !DILocation(line: 477, column: 37, scope: !6320)
!6352 = !DILocation(line: 477, column: 2, scope: !6320)
!6353 = distinct !{!6353, !6322, !6354}
!6354 = !DILocation(line: 487, column: 2, scope: !6317)
!6355 = !DILocation(line: 488, column: 1, scope: !6311)
!6356 = distinct !DISubprogram(name: "quirk_s3_64M", scope: !3, file: !3, line: 495, type: !4131, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6357 = !DILocalVariable(name: "dev", arg: 1, scope: !6356, file: !3, line: 495, type: !3449)
!6358 = !DILocation(line: 495, column: 42, scope: !6356)
!6359 = !DILocalVariable(name: "r", scope: !6356, file: !3, line: 497, type: !3465)
!6360 = !DILocation(line: 497, column: 19, scope: !6356)
!6361 = !DILocation(line: 497, column: 24, scope: !6356)
!6362 = !DILocation(line: 497, column: 29, scope: !6356)
!6363 = !DILocation(line: 499, column: 7, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 499, column: 6)
!6365 = !DILocation(line: 499, column: 10, scope: !6364)
!6366 = !DILocation(line: 499, column: 16, scope: !6364)
!6367 = !DILocation(line: 499, column: 29, scope: !6364)
!6368 = !DILocation(line: 499, column: 32, scope: !6364)
!6369 = !DILocation(line: 499, column: 35, scope: !6364)
!6370 = !DILocation(line: 499, column: 42, scope: !6364)
!6371 = !DILocation(line: 499, column: 45, scope: !6364)
!6372 = !DILocation(line: 499, column: 51, scope: !6364)
!6373 = !DILocation(line: 499, column: 39, scope: !6364)
!6374 = !DILocation(line: 499, column: 6, scope: !6356)
!6375 = !DILocation(line: 500, column: 3, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 499, column: 64)
!6377 = !DILocation(line: 500, column: 6, scope: !6376)
!6378 = !DILocation(line: 500, column: 12, scope: !6376)
!6379 = !DILocation(line: 501, column: 3, scope: !6376)
!6380 = !DILocation(line: 501, column: 6, scope: !6376)
!6381 = !DILocation(line: 501, column: 12, scope: !6376)
!6382 = !DILocation(line: 502, column: 3, scope: !6376)
!6383 = !DILocation(line: 502, column: 6, scope: !6376)
!6384 = !DILocation(line: 502, column: 10, scope: !6376)
!6385 = !DILocation(line: 503, column: 2, scope: !6376)
!6386 = !DILocation(line: 504, column: 1, scope: !6356)
!6387 = !DILocalVariable(name: "dev", arg: 1, scope: !5793, file: !3, line: 544, type: !3449)
!6388 = !DILocation(line: 544, column: 46, scope: !5793)
!6389 = !DILocation(line: 548, column: 6, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 548, column: 6)
!6391 = !DILocation(line: 548, column: 31, scope: !6390)
!6392 = !DILocation(line: 548, column: 6, scope: !5793)
!6393 = !DILocation(line: 549, column: 12, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 548, column: 37)
!6395 = !DILocation(line: 549, column: 25, scope: !6394)
!6396 = !DILocation(line: 549, column: 3, scope: !6394)
!6397 = !DILocation(line: 550, column: 12, scope: !6394)
!6398 = !DILocation(line: 550, column: 25, scope: !6394)
!6399 = !DILocation(line: 550, column: 3, scope: !6394)
!6400 = !DILocation(line: 551, column: 12, scope: !6394)
!6401 = !DILocation(line: 551, column: 25, scope: !6394)
!6402 = !DILocation(line: 551, column: 3, scope: !6394)
!6403 = !DILocation(line: 552, column: 3, scope: !6394)
!6404 = !DILocation(line: 554, column: 2, scope: !6394)
!6405 = !DILocation(line: 555, column: 1, scope: !5793)
!6406 = distinct !DISubprogram(name: "quirk_ati_exploding_mce", scope: !3, file: !3, line: 587, type: !4131, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6407 = !DILocalVariable(name: "dev", arg: 1, scope: !6406, file: !3, line: 587, type: !3449)
!6408 = !DILocation(line: 587, column: 53, scope: !6406)
!6409 = !DILocation(line: 589, column: 2, scope: !6406)
!6410 = !DILocation(line: 591, column: 2, scope: !6406)
!6411 = !DILocation(line: 592, column: 2, scope: !6406)
!6412 = !DILocation(line: 593, column: 1, scope: !6406)
!6413 = distinct !DISubprogram(name: "quirk_amd_nl_class", scope: !3, file: !3, line: 607, type: !4131, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6414 = !DILocalVariable(name: "pdev", arg: 1, scope: !6413, file: !3, line: 607, type: !3449)
!6415 = !DILocation(line: 607, column: 48, scope: !6413)
!6416 = !DILocalVariable(name: "class", scope: !6413, file: !3, line: 609, type: !278)
!6417 = !DILocation(line: 609, column: 6, scope: !6413)
!6418 = !DILocation(line: 609, column: 14, scope: !6413)
!6419 = !DILocation(line: 609, column: 20, scope: !6413)
!6420 = !DILocation(line: 612, column: 2, scope: !6413)
!6421 = !DILocation(line: 612, column: 8, scope: !6413)
!6422 = !DILocation(line: 612, column: 14, scope: !6413)
!6423 = !DILocation(line: 613, column: 2, scope: !6413)
!6424 = !DILocation(line: 615, column: 1, scope: !6413)
!6425 = distinct !DISubprogram(name: "quirk_synopsys_haps", scope: !3, file: !3, line: 626, type: !4131, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6426 = !DILocalVariable(name: "pdev", arg: 1, scope: !6425, file: !3, line: 626, type: !3449)
!6427 = !DILocation(line: 626, column: 49, scope: !6425)
!6428 = !DILocalVariable(name: "class", scope: !6425, file: !3, line: 628, type: !278)
!6429 = !DILocation(line: 628, column: 6, scope: !6425)
!6430 = !DILocation(line: 628, column: 14, scope: !6425)
!6431 = !DILocation(line: 628, column: 20, scope: !6425)
!6432 = !DILocation(line: 630, column: 10, scope: !6425)
!6433 = !DILocation(line: 630, column: 16, scope: !6425)
!6434 = !DILocation(line: 630, column: 2, scope: !6425)
!6435 = !DILocation(line: 634, column: 3, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 630, column: 24)
!6437 = !DILocation(line: 634, column: 9, scope: !6436)
!6438 = !DILocation(line: 634, column: 15, scope: !6436)
!6439 = !DILocation(line: 635, column: 3, scope: !6436)
!6440 = !DILocation(line: 637, column: 3, scope: !6436)
!6441 = !DILocation(line: 639, column: 1, scope: !6425)
!6442 = distinct !DISubprogram(name: "quirk_ali7101_acpi", scope: !3, file: !3, line: 654, type: !4131, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6443 = !DILocalVariable(name: "dev", arg: 1, scope: !6442, file: !3, line: 654, type: !3449)
!6444 = !DILocation(line: 654, column: 48, scope: !6442)
!6445 = !DILocation(line: 656, column: 18, scope: !6442)
!6446 = !DILocation(line: 656, column: 2, scope: !6442)
!6447 = !DILocation(line: 657, column: 18, scope: !6442)
!6448 = !DILocation(line: 657, column: 2, scope: !6442)
!6449 = !DILocation(line: 658, column: 1, scope: !6442)
!6450 = distinct !DISubprogram(name: "quirk_piix4_acpi", scope: !3, file: !3, line: 719, type: !4131, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6451 = !DILocalVariable(name: "dev", arg: 1, scope: !6450, file: !3, line: 719, type: !3449)
!6452 = !DILocation(line: 719, column: 46, scope: !6450)
!6453 = !DILocalVariable(name: "res_a", scope: !6450, file: !3, line: 721, type: !278)
!6454 = !DILocation(line: 721, column: 6, scope: !6450)
!6455 = !DILocation(line: 723, column: 18, scope: !6450)
!6456 = !DILocation(line: 723, column: 2, scope: !6450)
!6457 = !DILocation(line: 724, column: 18, scope: !6450)
!6458 = !DILocation(line: 724, column: 2, scope: !6450)
!6459 = !DILocation(line: 727, column: 24, scope: !6450)
!6460 = !DILocation(line: 727, column: 2, scope: !6450)
!6461 = !DILocation(line: 729, column: 17, scope: !6450)
!6462 = !DILocation(line: 729, column: 2, scope: !6450)
!6463 = !DILocation(line: 730, column: 17, scope: !6450)
!6464 = !DILocation(line: 730, column: 2, scope: !6450)
!6465 = !DILocation(line: 735, column: 6, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 735, column: 6)
!6467 = !DILocation(line: 735, column: 12, scope: !6466)
!6468 = !DILocation(line: 735, column: 6, scope: !6450)
!6469 = !DILocation(line: 736, column: 18, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 735, column: 25)
!6471 = !DILocation(line: 736, column: 3, scope: !6470)
!6472 = !DILocation(line: 737, column: 19, scope: !6470)
!6473 = !DILocation(line: 737, column: 3, scope: !6470)
!6474 = !DILocation(line: 738, column: 2, scope: !6470)
!6475 = !DILocation(line: 740, column: 6, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 740, column: 6)
!6477 = !DILocation(line: 740, column: 12, scope: !6476)
!6478 = !DILocation(line: 740, column: 6, scope: !6450)
!6479 = !DILocation(line: 741, column: 18, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 740, column: 25)
!6481 = !DILocation(line: 741, column: 3, scope: !6480)
!6482 = !DILocation(line: 742, column: 19, scope: !6480)
!6483 = !DILocation(line: 742, column: 3, scope: !6480)
!6484 = !DILocation(line: 743, column: 2, scope: !6480)
!6485 = !DILocation(line: 744, column: 17, scope: !6450)
!6486 = !DILocation(line: 744, column: 2, scope: !6450)
!6487 = !DILocation(line: 745, column: 17, scope: !6450)
!6488 = !DILocation(line: 745, column: 2, scope: !6450)
!6489 = !DILocation(line: 746, column: 1, scope: !6450)
!6490 = distinct !DISubprogram(name: "quirk_ich4_lpc_acpi", scope: !3, file: !3, line: 766, type: !4131, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6491 = !DILocalVariable(name: "dev", arg: 1, scope: !6490, file: !3, line: 766, type: !3449)
!6492 = !DILocation(line: 766, column: 49, scope: !6490)
!6493 = !DILocalVariable(name: "enable", scope: !6490, file: !3, line: 768, type: !465)
!6494 = !DILocation(line: 768, column: 5, scope: !6490)
!6495 = !DILocation(line: 777, column: 23, scope: !6490)
!6496 = !DILocation(line: 777, column: 2, scope: !6490)
!6497 = !DILocation(line: 778, column: 6, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 778, column: 6)
!6499 = !DILocation(line: 778, column: 13, scope: !6498)
!6500 = !DILocation(line: 778, column: 6, scope: !6490)
!6501 = !DILocation(line: 779, column: 19, scope: !6498)
!6502 = !DILocation(line: 779, column: 3, scope: !6498)
!6503 = !DILocation(line: 782, column: 23, scope: !6490)
!6504 = !DILocation(line: 782, column: 2, scope: !6490)
!6505 = !DILocation(line: 783, column: 6, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 783, column: 6)
!6507 = !DILocation(line: 783, column: 13, scope: !6506)
!6508 = !DILocation(line: 783, column: 6, scope: !6490)
!6509 = !DILocation(line: 784, column: 19, scope: !6506)
!6510 = !DILocation(line: 784, column: 3, scope: !6506)
!6511 = !DILocation(line: 786, column: 1, scope: !6490)
!6512 = distinct !DISubprogram(name: "quirk_ich6_lpc", scope: !3, file: !3, line: 845, type: !4131, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6513 = !DILocalVariable(name: "dev", arg: 1, scope: !6512, file: !3, line: 845, type: !3449)
!6514 = !DILocation(line: 845, column: 44, scope: !6512)
!6515 = !DILocation(line: 848, column: 21, scope: !6512)
!6516 = !DILocation(line: 848, column: 2, scope: !6512)
!6517 = !DILocation(line: 851, column: 26, scope: !6512)
!6518 = !DILocation(line: 851, column: 2, scope: !6512)
!6519 = !DILocation(line: 852, column: 26, scope: !6512)
!6520 = !DILocation(line: 852, column: 2, scope: !6512)
!6521 = !DILocation(line: 853, column: 1, scope: !6512)
!6522 = distinct !DISubprogram(name: "quirk_ich7_lpc", scope: !3, file: !3, line: 882, type: !4131, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6523 = !DILocalVariable(name: "dev", arg: 1, scope: !6522, file: !3, line: 882, type: !3449)
!6524 = !DILocation(line: 882, column: 44, scope: !6522)
!6525 = !DILocation(line: 885, column: 21, scope: !6522)
!6526 = !DILocation(line: 885, column: 2, scope: !6522)
!6527 = !DILocation(line: 888, column: 26, scope: !6522)
!6528 = !DILocation(line: 888, column: 2, scope: !6522)
!6529 = !DILocation(line: 889, column: 26, scope: !6522)
!6530 = !DILocation(line: 889, column: 2, scope: !6522)
!6531 = !DILocation(line: 890, column: 26, scope: !6522)
!6532 = !DILocation(line: 890, column: 2, scope: !6522)
!6533 = !DILocation(line: 891, column: 26, scope: !6522)
!6534 = !DILocation(line: 891, column: 2, scope: !6522)
!6535 = !DILocation(line: 892, column: 1, scope: !6522)
!6536 = distinct !DISubprogram(name: "quirk_vt82c586_acpi", scope: !3, file: !3, line: 911, type: !4131, scopeLine: 912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6537 = !DILocalVariable(name: "dev", arg: 1, scope: !6536, file: !3, line: 911, type: !3449)
!6538 = !DILocation(line: 911, column: 49, scope: !6536)
!6539 = !DILocation(line: 913, column: 6, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 913, column: 6)
!6541 = !DILocation(line: 913, column: 11, scope: !6540)
!6542 = !DILocation(line: 913, column: 20, scope: !6540)
!6543 = !DILocation(line: 913, column: 6, scope: !6536)
!6544 = !DILocation(line: 914, column: 19, scope: !6540)
!6545 = !DILocation(line: 914, column: 3, scope: !6540)
!6546 = !DILocation(line: 916, column: 1, scope: !6536)
!6547 = distinct !DISubprogram(name: "quirk_vt82c686_acpi", scope: !3, file: !3, line: 925, type: !4131, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6548 = !DILocalVariable(name: "dev", arg: 1, scope: !6547, file: !3, line: 925, type: !3449)
!6549 = !DILocation(line: 925, column: 49, scope: !6547)
!6550 = !DILocation(line: 927, column: 22, scope: !6547)
!6551 = !DILocation(line: 927, column: 2, scope: !6547)
!6552 = !DILocation(line: 929, column: 18, scope: !6547)
!6553 = !DILocation(line: 929, column: 2, scope: !6547)
!6554 = !DILocation(line: 932, column: 18, scope: !6547)
!6555 = !DILocation(line: 932, column: 2, scope: !6547)
!6556 = !DILocation(line: 933, column: 1, scope: !6547)
!6557 = distinct !DISubprogram(name: "quirk_vt8235_acpi", scope: !3, file: !3, line: 941, type: !4131, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6558 = !DILocalVariable(name: "dev", arg: 1, scope: !6557, file: !3, line: 941, type: !3449)
!6559 = !DILocation(line: 941, column: 47, scope: !6557)
!6560 = !DILocation(line: 943, column: 18, scope: !6557)
!6561 = !DILocation(line: 943, column: 2, scope: !6557)
!6562 = !DILocation(line: 944, column: 18, scope: !6557)
!6563 = !DILocation(line: 944, column: 2, scope: !6557)
!6564 = !DILocation(line: 945, column: 1, scope: !6557)
!6565 = distinct !DISubprogram(name: "quirk_xio2000a", scope: !3, file: !3, line: 952, type: !4131, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6566 = !DILocalVariable(name: "dev", arg: 1, scope: !6565, file: !3, line: 952, type: !3449)
!6567 = !DILocation(line: 952, column: 44, scope: !6565)
!6568 = !DILocalVariable(name: "pdev", scope: !6565, file: !3, line: 954, type: !3449)
!6569 = !DILocation(line: 954, column: 18, scope: !6565)
!6570 = !DILocalVariable(name: "command", scope: !6565, file: !3, line: 955, type: !272)
!6571 = !DILocation(line: 955, column: 6, scope: !6565)
!6572 = !DILocation(line: 957, column: 2, scope: !6565)
!6573 = !DILocalVariable(name: "__mptr", scope: !6574, file: !3, line: 958, type: !280)
!6574 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 958, column: 2)
!6575 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 958, column: 2)
!6576 = !DILocation(line: 958, column: 2, scope: !6574)
!6577 = !DILocation(line: 958, column: 2, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 958, column: 2)
!6579 = !DILocation(line: 958, column: 2, scope: !6575)
!6580 = !DILocation(line: 958, column: 2, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 958, column: 2)
!6582 = !DILocation(line: 959, column: 24, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 958, column: 66)
!6584 = !DILocation(line: 959, column: 3, scope: !6583)
!6585 = !DILocation(line: 960, column: 7, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 960, column: 7)
!6587 = !DILocation(line: 960, column: 15, scope: !6586)
!6588 = !DILocation(line: 960, column: 7, scope: !6583)
!6589 = !DILocation(line: 961, column: 26, scope: !6586)
!6590 = !DILocation(line: 961, column: 45, scope: !6586)
!6591 = !DILocation(line: 961, column: 53, scope: !6586)
!6592 = !DILocation(line: 961, column: 4, scope: !6586)
!6593 = !DILocation(line: 962, column: 2, scope: !6583)
!6594 = !DILocalVariable(name: "__mptr", scope: !6595, file: !3, line: 958, type: !280)
!6595 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 958, column: 2)
!6596 = !DILocation(line: 958, column: 2, scope: !6595)
!6597 = !DILocation(line: 958, column: 2, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 958, column: 2)
!6599 = distinct !{!6599, !6579, !6600}
!6600 = !DILocation(line: 962, column: 2, scope: !6575)
!6601 = !DILocation(line: 963, column: 1, scope: !6565)
!6602 = distinct !DISubprogram(name: "quirk_via_ioapic", scope: !3, file: !3, line: 978, type: !4131, scopeLine: 979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6603 = !DILocalVariable(name: "dev", arg: 1, scope: !6602, file: !3, line: 978, type: !3449)
!6604 = !DILocation(line: 978, column: 46, scope: !6602)
!6605 = !DILocalVariable(name: "tmp", scope: !6602, file: !3, line: 980, type: !465)
!6606 = !DILocation(line: 980, column: 5, scope: !6602)
!6607 = !DILocation(line: 982, column: 6, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 982, column: 6)
!6609 = !DILocation(line: 982, column: 17, scope: !6608)
!6610 = !DILocation(line: 982, column: 6, scope: !6602)
!6611 = !DILocation(line: 983, column: 7, scope: !6608)
!6612 = !DILocation(line: 983, column: 3, scope: !6608)
!6613 = !DILocation(line: 985, column: 7, scope: !6608)
!6614 = !DILocation(line: 987, column: 2, scope: !6602)
!6615 = !DILocation(line: 991, column: 24, scope: !6602)
!6616 = !DILocation(line: 991, column: 35, scope: !6602)
!6617 = !DILocation(line: 991, column: 2, scope: !6602)
!6618 = !DILocation(line: 992, column: 1, scope: !6602)
!6619 = distinct !DISubprogram(name: "quirk_via_vt8237_bypass_apic_deassert", scope: !3, file: !3, line: 1002, type: !4131, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6620 = !DILocalVariable(name: "dev", arg: 1, scope: !6619, file: !3, line: 1002, type: !3449)
!6621 = !DILocation(line: 1002, column: 67, scope: !6619)
!6622 = !DILocalVariable(name: "misc_control2", scope: !6619, file: !3, line: 1004, type: !465)
!6623 = !DILocation(line: 1004, column: 5, scope: !6619)
!6624 = !DILocation(line: 1007, column: 23, scope: !6619)
!6625 = !DILocation(line: 1007, column: 2, scope: !6619)
!6626 = !DILocation(line: 1008, column: 8, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 1008, column: 6)
!6628 = !DILocation(line: 1008, column: 22, scope: !6627)
!6629 = !DILocation(line: 1008, column: 6, scope: !6619)
!6630 = !DILocation(line: 1009, column: 3, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 1008, column: 47)
!6632 = !DILocation(line: 1010, column: 25, scope: !6631)
!6633 = !DILocation(line: 1010, column: 36, scope: !6631)
!6634 = !DILocation(line: 1010, column: 49, scope: !6631)
!6635 = !DILocation(line: 1010, column: 3, scope: !6631)
!6636 = !DILocation(line: 1011, column: 2, scope: !6631)
!6637 = !DILocation(line: 1012, column: 1, scope: !6619)
!6638 = distinct !DISubprogram(name: "quirk_amd_ioapic", scope: !3, file: !3, line: 1025, type: !4131, scopeLine: 1026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6639 = !DILocalVariable(name: "dev", arg: 1, scope: !6638, file: !3, line: 1025, type: !3449)
!6640 = !DILocation(line: 1025, column: 46, scope: !6638)
!6641 = !DILocation(line: 1027, column: 6, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1027, column: 6)
!6643 = !DILocation(line: 1027, column: 11, scope: !6642)
!6644 = !DILocation(line: 1027, column: 20, scope: !6642)
!6645 = !DILocation(line: 1027, column: 6, scope: !6638)
!6646 = !DILocation(line: 1028, column: 3, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 1027, column: 29)
!6648 = !DILocation(line: 1029, column: 3, scope: !6647)
!6649 = !DILocation(line: 1030, column: 2, scope: !6647)
!6650 = !DILocation(line: 1031, column: 1, scope: !6638)
!6651 = distinct !DISubprogram(name: "quirk_amd_8131_mmrbc", scope: !3, file: !3, line: 1050, type: !4131, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6652 = !DILocalVariable(name: "dev", arg: 1, scope: !6651, file: !3, line: 1050, type: !3449)
!6653 = !DILocation(line: 1050, column: 50, scope: !6651)
!6654 = !DILocation(line: 1052, column: 6, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1052, column: 6)
!6656 = !DILocation(line: 1052, column: 11, scope: !6655)
!6657 = !DILocation(line: 1052, column: 23, scope: !6655)
!6658 = !DILocation(line: 1052, column: 26, scope: !6655)
!6659 = !DILocation(line: 1052, column: 31, scope: !6655)
!6660 = !DILocation(line: 1052, column: 40, scope: !6655)
!6661 = !DILocation(line: 1052, column: 6, scope: !6651)
!6662 = !DILocation(line: 1053, column: 3, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 1052, column: 49)
!6664 = !DILocation(line: 1055, column: 3, scope: !6663)
!6665 = !DILocation(line: 1055, column: 8, scope: !6663)
!6666 = !DILocation(line: 1055, column: 21, scope: !6663)
!6667 = !DILocation(line: 1055, column: 31, scope: !6663)
!6668 = !DILocation(line: 1056, column: 2, scope: !6663)
!6669 = !DILocation(line: 1057, column: 1, scope: !6651)
!6670 = distinct !DISubprogram(name: "quirk_via_acpi", scope: !3, file: !3, line: 1067, type: !4131, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6671 = !DILocalVariable(name: "d", arg: 1, scope: !6670, file: !3, line: 1067, type: !3449)
!6672 = !DILocation(line: 1067, column: 44, scope: !6670)
!6673 = !DILocalVariable(name: "irq", scope: !6670, file: !3, line: 1069, type: !465)
!6674 = !DILocation(line: 1069, column: 5, scope: !6670)
!6675 = !DILocation(line: 1072, column: 23, scope: !6670)
!6676 = !DILocation(line: 1072, column: 2, scope: !6670)
!6677 = !DILocation(line: 1073, column: 6, scope: !6670)
!6678 = !DILocation(line: 1074, column: 6, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1074, column: 6)
!6680 = !DILocation(line: 1074, column: 10, scope: !6679)
!6681 = !DILocation(line: 1074, column: 14, scope: !6679)
!6682 = !DILocation(line: 1074, column: 18, scope: !6679)
!6683 = !DILocation(line: 1074, column: 6, scope: !6670)
!6684 = !DILocation(line: 1075, column: 12, scope: !6679)
!6685 = !DILocation(line: 1075, column: 3, scope: !6679)
!6686 = !DILocation(line: 1075, column: 6, scope: !6679)
!6687 = !DILocation(line: 1075, column: 10, scope: !6679)
!6688 = !DILocation(line: 1076, column: 1, scope: !6670)
!6689 = distinct !DISubprogram(name: "quirk_via_bridge", scope: !3, file: !3, line: 1083, type: !4131, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6690 = !DILocalVariable(name: "dev", arg: 1, scope: !6689, file: !3, line: 1083, type: !3449)
!6691 = !DILocation(line: 1083, column: 46, scope: !6689)
!6692 = !DILocation(line: 1086, column: 10, scope: !6689)
!6693 = !DILocation(line: 1086, column: 15, scope: !6689)
!6694 = !DILocation(line: 1086, column: 2, scope: !6689)
!6695 = !DILocation(line: 1093, column: 22, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1086, column: 23)
!6697 = !DILocation(line: 1093, column: 20, scope: !6696)
!6698 = !DILocation(line: 1094, column: 22, scope: !6696)
!6699 = !DILocation(line: 1094, column: 20, scope: !6696)
!6700 = !DILocation(line: 1095, column: 3, scope: !6696)
!6701 = !DILocation(line: 1098, column: 20, scope: !6696)
!6702 = !DILocation(line: 1099, column: 3, scope: !6696)
!6703 = !DILocation(line: 1101, column: 20, scope: !6696)
!6704 = !DILocation(line: 1102, column: 3, scope: !6696)
!6705 = !DILocation(line: 1107, column: 20, scope: !6696)
!6706 = !DILocation(line: 1108, column: 3, scope: !6696)
!6707 = !DILocation(line: 1110, column: 1, scope: !6689)
!6708 = distinct !DISubprogram(name: "quirk_via_vlink", scope: !3, file: !3, line: 1131, type: !4131, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6709 = !DILocalVariable(name: "dev", arg: 1, scope: !6708, file: !3, line: 1131, type: !3449)
!6710 = !DILocation(line: 1131, column: 45, scope: !6708)
!6711 = !DILocalVariable(name: "irq", scope: !6708, file: !3, line: 1133, type: !465)
!6712 = !DILocation(line: 1133, column: 5, scope: !6708)
!6713 = !DILocalVariable(name: "new_irq", scope: !6708, file: !3, line: 1133, type: !465)
!6714 = !DILocation(line: 1133, column: 10, scope: !6708)
!6715 = !DILocation(line: 1136, column: 6, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 1136, column: 6)
!6717 = !DILocation(line: 1136, column: 23, scope: !6716)
!6718 = !DILocation(line: 1136, column: 6, scope: !6708)
!6719 = !DILocation(line: 1137, column: 3, scope: !6716)
!6720 = !DILocation(line: 1139, column: 12, scope: !6708)
!6721 = !DILocation(line: 1139, column: 17, scope: !6708)
!6722 = !DILocation(line: 1139, column: 10, scope: !6708)
!6723 = !DILocation(line: 1142, column: 7, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 1142, column: 6)
!6725 = !DILocation(line: 1142, column: 15, scope: !6724)
!6726 = !DILocation(line: 1142, column: 18, scope: !6724)
!6727 = !DILocation(line: 1142, column: 26, scope: !6724)
!6728 = !DILocation(line: 1142, column: 6, scope: !6708)
!6729 = !DILocation(line: 1143, column: 3, scope: !6724)
!6730 = !DILocation(line: 1146, column: 6, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 1146, column: 6)
!6732 = !DILocation(line: 1146, column: 11, scope: !6731)
!6733 = !DILocation(line: 1146, column: 16, scope: !6731)
!6734 = !DILocation(line: 1146, column: 23, scope: !6731)
!6735 = !DILocation(line: 1146, column: 28, scope: !6731)
!6736 = !DILocation(line: 1146, column: 31, scope: !6731)
!6737 = !DILocation(line: 1146, column: 54, scope: !6731)
!6738 = !DILocation(line: 1146, column: 52, scope: !6731)
!6739 = !DILocation(line: 1146, column: 71, scope: !6731)
!6740 = !DILocation(line: 1147, column: 6, scope: !6731)
!6741 = !DILocation(line: 1147, column: 29, scope: !6731)
!6742 = !DILocation(line: 1147, column: 27, scope: !6731)
!6743 = !DILocation(line: 1146, column: 6, scope: !6708)
!6744 = !DILocation(line: 1148, column: 3, scope: !6731)
!6745 = !DILocation(line: 1154, column: 23, scope: !6708)
!6746 = !DILocation(line: 1154, column: 2, scope: !6708)
!6747 = !DILocation(line: 1155, column: 6, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 1155, column: 6)
!6749 = !DILocation(line: 1155, column: 17, scope: !6748)
!6750 = !DILocation(line: 1155, column: 14, scope: !6748)
!6751 = !DILocation(line: 1155, column: 6, scope: !6708)
!6752 = !DILocation(line: 1156, column: 3, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 1155, column: 22)
!6754 = !DILocation(line: 1158, column: 3, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 1158, column: 3)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 1158, column: 3)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 1158, column: 3)
!6758 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 1158, column: 3)
!6759 = !DILocation(line: 1159, column: 25, scope: !6753)
!6760 = !DILocation(line: 1159, column: 50, scope: !6753)
!6761 = !DILocation(line: 1159, column: 3, scope: !6753)
!6762 = !DILocation(line: 1160, column: 2, scope: !6753)
!6763 = !DILocation(line: 1161, column: 1, scope: !6708)
!6764 = distinct !DISubprogram(name: "quirk_vt82c598_id", scope: !3, file: !3, line: 1169, type: !4131, scopeLine: 1170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6765 = !DILocalVariable(name: "dev", arg: 1, scope: !6764, file: !3, line: 1169, type: !3449)
!6766 = !DILocation(line: 1169, column: 47, scope: !6764)
!6767 = !DILocation(line: 1171, column: 24, scope: !6764)
!6768 = !DILocation(line: 1171, column: 2, scope: !6764)
!6769 = !DILocation(line: 1172, column: 23, scope: !6764)
!6770 = !DILocation(line: 1172, column: 44, scope: !6764)
!6771 = !DILocation(line: 1172, column: 49, scope: !6764)
!6772 = !DILocation(line: 1172, column: 2, scope: !6764)
!6773 = !DILocation(line: 1173, column: 1, scope: !6764)
!6774 = distinct !DISubprogram(name: "quirk_cardbus_legacy", scope: !3, file: !3, line: 1182, type: !4131, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6775 = !DILocalVariable(name: "dev", arg: 1, scope: !6774, file: !3, line: 1182, type: !3449)
!6776 = !DILocation(line: 1182, column: 50, scope: !6774)
!6777 = !DILocation(line: 1184, column: 25, scope: !6774)
!6778 = !DILocation(line: 1184, column: 2, scope: !6774)
!6779 = !DILocation(line: 1185, column: 1, scope: !6774)
!6780 = distinct !DISubprogram(name: "quirk_amd_ordering", scope: !3, file: !3, line: 1198, type: !4131, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6781 = !DILocalVariable(name: "dev", arg: 1, scope: !6780, file: !3, line: 1198, type: !3449)
!6782 = !DILocation(line: 1198, column: 48, scope: !6780)
!6783 = !DILocalVariable(name: "pcic", scope: !6780, file: !3, line: 1200, type: !278)
!6784 = !DILocation(line: 1200, column: 6, scope: !6780)
!6785 = !DILocation(line: 1201, column: 24, scope: !6780)
!6786 = !DILocation(line: 1201, column: 2, scope: !6780)
!6787 = !DILocation(line: 1202, column: 7, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 1202, column: 6)
!6789 = !DILocation(line: 1202, column: 12, scope: !6788)
!6790 = !DILocation(line: 1202, column: 17, scope: !6788)
!6791 = !DILocation(line: 1202, column: 6, scope: !6780)
!6792 = !DILocation(line: 1203, column: 8, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 1202, column: 23)
!6794 = !DILocation(line: 1204, column: 3, scope: !6793)
!6795 = !DILocation(line: 1205, column: 26, scope: !6793)
!6796 = !DILocation(line: 1205, column: 37, scope: !6793)
!6797 = !DILocation(line: 1205, column: 3, scope: !6793)
!6798 = !DILocation(line: 1206, column: 25, scope: !6793)
!6799 = !DILocation(line: 1206, column: 3, scope: !6793)
!6800 = !DILocation(line: 1207, column: 8, scope: !6793)
!6801 = !DILocation(line: 1208, column: 26, scope: !6793)
!6802 = !DILocation(line: 1208, column: 37, scope: !6793)
!6803 = !DILocation(line: 1208, column: 3, scope: !6793)
!6804 = !DILocation(line: 1209, column: 2, scope: !6793)
!6805 = !DILocation(line: 1210, column: 1, scope: !6780)
!6806 = distinct !DISubprogram(name: "quirk_dunord", scope: !3, file: !3, line: 1221, type: !4131, scopeLine: 1222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6807 = !DILocalVariable(name: "dev", arg: 1, scope: !6806, file: !3, line: 1221, type: !3449)
!6808 = !DILocation(line: 1221, column: 42, scope: !6806)
!6809 = !DILocalVariable(name: "r", scope: !6806, file: !3, line: 1223, type: !3465)
!6810 = !DILocation(line: 1223, column: 19, scope: !6806)
!6811 = !DILocation(line: 1223, column: 24, scope: !6806)
!6812 = !DILocation(line: 1223, column: 29, scope: !6806)
!6813 = !DILocation(line: 1225, column: 2, scope: !6806)
!6814 = !DILocation(line: 1225, column: 5, scope: !6806)
!6815 = !DILocation(line: 1225, column: 11, scope: !6806)
!6816 = !DILocation(line: 1226, column: 2, scope: !6806)
!6817 = !DILocation(line: 1226, column: 5, scope: !6806)
!6818 = !DILocation(line: 1226, column: 11, scope: !6806)
!6819 = !DILocation(line: 1227, column: 2, scope: !6806)
!6820 = !DILocation(line: 1227, column: 5, scope: !6806)
!6821 = !DILocation(line: 1227, column: 9, scope: !6806)
!6822 = !DILocation(line: 1228, column: 1, scope: !6806)
!6823 = distinct !DISubprogram(name: "quirk_transparent_bridge", scope: !3, file: !3, line: 1236, type: !4131, scopeLine: 1237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6824 = !DILocalVariable(name: "dev", arg: 1, scope: !6823, file: !3, line: 1236, type: !3449)
!6825 = !DILocation(line: 1236, column: 54, scope: !6823)
!6826 = !DILocation(line: 1238, column: 2, scope: !6823)
!6827 = !DILocation(line: 1238, column: 7, scope: !6823)
!6828 = !DILocation(line: 1238, column: 19, scope: !6823)
!6829 = !DILocation(line: 1239, column: 1, scope: !6823)
!6830 = distinct !DISubprogram(name: "quirk_mediagx_master", scope: !3, file: !3, line: 1249, type: !4131, scopeLine: 1250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6831 = !DILocalVariable(name: "dev", arg: 1, scope: !6830, file: !3, line: 1249, type: !3449)
!6832 = !DILocation(line: 1249, column: 50, scope: !6830)
!6833 = !DILocalVariable(name: "reg", scope: !6830, file: !3, line: 1251, type: !465)
!6834 = !DILocation(line: 1251, column: 5, scope: !6830)
!6835 = !DILocation(line: 1253, column: 23, scope: !6830)
!6836 = !DILocation(line: 1253, column: 2, scope: !6830)
!6837 = !DILocation(line: 1254, column: 6, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 1254, column: 6)
!6839 = !DILocation(line: 1254, column: 10, scope: !6838)
!6840 = !DILocation(line: 1254, column: 6, scope: !6830)
!6841 = !DILocation(line: 1255, column: 7, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 1254, column: 15)
!6843 = !DILocation(line: 1256, column: 3, scope: !6842)
!6844 = !DILocation(line: 1258, column: 25, scope: !6842)
!6845 = !DILocation(line: 1258, column: 36, scope: !6842)
!6846 = !DILocation(line: 1258, column: 3, scope: !6842)
!6847 = !DILocation(line: 1259, column: 2, scope: !6842)
!6848 = !DILocation(line: 1260, column: 1, scope: !6830)
!6849 = distinct !DISubprogram(name: "quirk_disable_pxb", scope: !3, file: !3, line: 1269, type: !4131, scopeLine: 1270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6850 = !DILocalVariable(name: "pdev", arg: 1, scope: !6849, file: !3, line: 1269, type: !3449)
!6851 = !DILocation(line: 1269, column: 47, scope: !6849)
!6852 = !DILocalVariable(name: "config", scope: !6849, file: !3, line: 1271, type: !272)
!6853 = !DILocation(line: 1271, column: 6, scope: !6849)
!6854 = !DILocation(line: 1273, column: 6, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 1273, column: 6)
!6856 = !DILocation(line: 1273, column: 12, scope: !6855)
!6857 = !DILocation(line: 1273, column: 21, scope: !6855)
!6858 = !DILocation(line: 1273, column: 6, scope: !6849)
!6859 = !DILocation(line: 1274, column: 3, scope: !6855)
!6860 = !DILocation(line: 1275, column: 23, scope: !6849)
!6861 = !DILocation(line: 1275, column: 2, scope: !6849)
!6862 = !DILocation(line: 1276, column: 6, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 1276, column: 6)
!6864 = !DILocation(line: 1276, column: 13, scope: !6863)
!6865 = !DILocation(line: 1276, column: 6, scope: !6849)
!6866 = !DILocation(line: 1277, column: 10, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 1276, column: 23)
!6868 = !DILocation(line: 1278, column: 25, scope: !6867)
!6869 = !DILocation(line: 1278, column: 37, scope: !6867)
!6870 = !DILocation(line: 1278, column: 3, scope: !6867)
!6871 = !DILocation(line: 1279, column: 3, scope: !6867)
!6872 = !DILocation(line: 1280, column: 2, scope: !6867)
!6873 = !DILocation(line: 1281, column: 1, scope: !6849)
!6874 = distinct !DISubprogram(name: "quirk_amd_ide_mode", scope: !3, file: !3, line: 1285, type: !4131, scopeLine: 1286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6875 = !DILocalVariable(name: "pdev", arg: 1, scope: !6874, file: !3, line: 1285, type: !3449)
!6876 = !DILocation(line: 1285, column: 48, scope: !6874)
!6877 = !DILocalVariable(name: "tmp", scope: !6874, file: !3, line: 1288, type: !465)
!6878 = !DILocation(line: 1288, column: 5, scope: !6874)
!6879 = !DILocation(line: 1290, column: 23, scope: !6874)
!6880 = !DILocation(line: 1290, column: 2, scope: !6874)
!6881 = !DILocation(line: 1291, column: 6, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 1291, column: 6)
!6883 = !DILocation(line: 1291, column: 10, scope: !6882)
!6884 = !DILocation(line: 1291, column: 6, scope: !6874)
!6885 = !DILocation(line: 1292, column: 24, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 1291, column: 19)
!6887 = !DILocation(line: 1292, column: 3, scope: !6886)
!6888 = !DILocation(line: 1293, column: 25, scope: !6886)
!6889 = !DILocation(line: 1293, column: 37, scope: !6886)
!6890 = !DILocation(line: 1293, column: 40, scope: !6886)
!6891 = !DILocation(line: 1293, column: 3, scope: !6886)
!6892 = !DILocation(line: 1294, column: 25, scope: !6886)
!6893 = !DILocation(line: 1294, column: 3, scope: !6886)
!6894 = !DILocation(line: 1295, column: 25, scope: !6886)
!6895 = !DILocation(line: 1295, column: 3, scope: !6886)
!6896 = !DILocation(line: 1296, column: 25, scope: !6886)
!6897 = !DILocation(line: 1296, column: 37, scope: !6886)
!6898 = !DILocation(line: 1296, column: 3, scope: !6886)
!6899 = !DILocation(line: 1298, column: 3, scope: !6886)
!6900 = !DILocation(line: 1298, column: 9, scope: !6886)
!6901 = !DILocation(line: 1298, column: 15, scope: !6886)
!6902 = !DILocation(line: 1299, column: 3, scope: !6886)
!6903 = !DILocation(line: 1300, column: 2, scope: !6886)
!6904 = !DILocation(line: 1301, column: 1, scope: !6874)
!6905 = distinct !DISubprogram(name: "quirk_svwks_csb5ide", scope: !3, file: !3, line: 1312, type: !4131, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6906 = !DILocalVariable(name: "pdev", arg: 1, scope: !6905, file: !3, line: 1312, type: !3449)
!6907 = !DILocation(line: 1312, column: 49, scope: !6905)
!6908 = !DILocalVariable(name: "prog", scope: !6905, file: !3, line: 1314, type: !465)
!6909 = !DILocation(line: 1314, column: 5, scope: !6905)
!6910 = !DILocation(line: 1315, column: 23, scope: !6905)
!6911 = !DILocation(line: 1315, column: 2, scope: !6905)
!6912 = !DILocation(line: 1316, column: 6, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1316, column: 6)
!6914 = !DILocation(line: 1316, column: 11, scope: !6913)
!6915 = !DILocation(line: 1316, column: 6, scope: !6905)
!6916 = !DILocation(line: 1317, column: 8, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1316, column: 16)
!6918 = !DILocation(line: 1318, column: 3, scope: !6917)
!6919 = !DILocation(line: 1318, column: 9, scope: !6917)
!6920 = !DILocation(line: 1318, column: 15, scope: !6917)
!6921 = !DILocation(line: 1319, column: 25, scope: !6917)
!6922 = !DILocation(line: 1319, column: 47, scope: !6917)
!6923 = !DILocation(line: 1319, column: 3, scope: !6917)
!6924 = !DILocation(line: 1321, column: 2, scope: !6917)
!6925 = !DILocation(line: 1322, column: 1, scope: !6905)
!6926 = distinct !DISubprogram(name: "quirk_ide_samemode", scope: !3, file: !3, line: 1326, type: !4131, scopeLine: 1327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6927 = !DILocalVariable(name: "pdev", arg: 1, scope: !6926, file: !3, line: 1326, type: !3449)
!6928 = !DILocation(line: 1326, column: 48, scope: !6926)
!6929 = !DILocalVariable(name: "prog", scope: !6926, file: !3, line: 1328, type: !465)
!6930 = !DILocation(line: 1328, column: 5, scope: !6926)
!6931 = !DILocation(line: 1330, column: 23, scope: !6926)
!6932 = !DILocation(line: 1330, column: 2, scope: !6926)
!6933 = !DILocation(line: 1332, column: 8, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 1332, column: 6)
!6935 = !DILocation(line: 1332, column: 13, scope: !6934)
!6936 = !DILocation(line: 1332, column: 18, scope: !6934)
!6937 = !DILocation(line: 1332, column: 23, scope: !6934)
!6938 = !DILocation(line: 1332, column: 28, scope: !6934)
!6939 = !DILocation(line: 1332, column: 34, scope: !6934)
!6940 = !DILocation(line: 1332, column: 39, scope: !6934)
!6941 = !DILocation(line: 1332, column: 44, scope: !6934)
!6942 = !DILocation(line: 1332, column: 49, scope: !6934)
!6943 = !DILocation(line: 1332, column: 54, scope: !6934)
!6944 = !DILocation(line: 1332, column: 59, scope: !6934)
!6945 = !DILocation(line: 1332, column: 6, scope: !6926)
!6946 = !DILocation(line: 1333, column: 3, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6934, file: !3, line: 1332, column: 66)
!6948 = !DILocation(line: 1334, column: 8, scope: !6947)
!6949 = !DILocation(line: 1335, column: 3, scope: !6947)
!6950 = !DILocation(line: 1335, column: 9, scope: !6947)
!6951 = !DILocation(line: 1335, column: 15, scope: !6947)
!6952 = !DILocation(line: 1336, column: 25, scope: !6947)
!6953 = !DILocation(line: 1336, column: 47, scope: !6947)
!6954 = !DILocation(line: 1336, column: 3, scope: !6947)
!6955 = !DILocation(line: 1337, column: 2, scope: !6947)
!6956 = !DILocation(line: 1338, column: 1, scope: !6926)
!6957 = distinct !DISubprogram(name: "quirk_no_ata_d3", scope: !3, file: !3, line: 1342, type: !4131, scopeLine: 1343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6958 = !DILocalVariable(name: "pdev", arg: 1, scope: !6957, file: !3, line: 1342, type: !3449)
!6959 = !DILocation(line: 1342, column: 45, scope: !6957)
!6960 = !DILocation(line: 1344, column: 2, scope: !6957)
!6961 = !DILocation(line: 1344, column: 8, scope: !6957)
!6962 = !DILocation(line: 1344, column: 18, scope: !6957)
!6963 = !DILocation(line: 1345, column: 1, scope: !6957)
!6964 = distinct !DISubprogram(name: "quirk_eisa_bridge", scope: !3, file: !3, line: 1363, type: !4131, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6965 = !DILocalVariable(name: "dev", arg: 1, scope: !6964, file: !3, line: 1363, type: !3449)
!6966 = !DILocation(line: 1363, column: 47, scope: !6964)
!6967 = !DILocation(line: 1365, column: 2, scope: !6964)
!6968 = !DILocation(line: 1365, column: 7, scope: !6964)
!6969 = !DILocation(line: 1365, column: 13, scope: !6964)
!6970 = !DILocation(line: 1366, column: 1, scope: !6964)
!6971 = distinct !DISubprogram(name: "asus_hides_smbus_hostbridge", scope: !3, file: !3, line: 1396, type: !4131, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!6972 = !DILocalVariable(name: "dev", arg: 1, scope: !6971, file: !3, line: 1396, type: !3449)
!6973 = !DILocation(line: 1396, column: 57, scope: !6971)
!6974 = !DILocation(line: 1398, column: 6, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 1398, column: 6)
!6976 = !DILocation(line: 1398, column: 6, scope: !6971)
!6977 = !DILocation(line: 1399, column: 7, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !3, line: 1399, column: 7)
!6979 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 1398, column: 64)
!6980 = !DILocation(line: 1399, column: 12, scope: !6978)
!6981 = !DILocation(line: 1399, column: 19, scope: !6978)
!6982 = !DILocation(line: 1399, column: 7, scope: !6979)
!6983 = !DILocation(line: 1400, column: 12, scope: !6978)
!6984 = !DILocation(line: 1400, column: 17, scope: !6978)
!6985 = !DILocation(line: 1400, column: 4, scope: !6978)
!6986 = !DILocation(line: 1405, column: 22, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 1400, column: 35)
!6988 = !DILocation(line: 1406, column: 4, scope: !6987)
!6989 = !DILocation(line: 1407, column: 12, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 1407, column: 12)
!6991 = !DILocation(line: 1407, column: 17, scope: !6990)
!6992 = !DILocation(line: 1407, column: 24, scope: !6990)
!6993 = !DILocation(line: 1407, column: 12, scope: !6978)
!6994 = !DILocation(line: 1408, column: 12, scope: !6990)
!6995 = !DILocation(line: 1408, column: 17, scope: !6990)
!6996 = !DILocation(line: 1408, column: 4, scope: !6990)
!6997 = !DILocation(line: 1412, column: 22, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 1408, column: 35)
!6999 = !DILocation(line: 1413, column: 4, scope: !6998)
!7000 = !DILocation(line: 1414, column: 12, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 1414, column: 12)
!7002 = !DILocation(line: 1414, column: 17, scope: !7001)
!7003 = !DILocation(line: 1414, column: 24, scope: !7001)
!7004 = !DILocation(line: 1414, column: 12, scope: !6990)
!7005 = !DILocation(line: 1415, column: 12, scope: !7001)
!7006 = !DILocation(line: 1415, column: 17, scope: !7001)
!7007 = !DILocation(line: 1415, column: 4, scope: !7001)
!7008 = !DILocation(line: 1417, column: 22, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 1415, column: 35)
!7010 = !DILocation(line: 1418, column: 4, scope: !7009)
!7011 = !DILocation(line: 1419, column: 12, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 1419, column: 12)
!7013 = !DILocation(line: 1419, column: 17, scope: !7012)
!7014 = !DILocation(line: 1419, column: 24, scope: !7012)
!7015 = !DILocation(line: 1419, column: 12, scope: !7001)
!7016 = !DILocation(line: 1420, column: 12, scope: !7012)
!7017 = !DILocation(line: 1420, column: 17, scope: !7012)
!7018 = !DILocation(line: 1420, column: 4, scope: !7012)
!7019 = !DILocation(line: 1422, column: 22, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 1420, column: 35)
!7021 = !DILocation(line: 1423, column: 4, scope: !7020)
!7022 = !DILocation(line: 1424, column: 12, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 1424, column: 12)
!7024 = !DILocation(line: 1424, column: 17, scope: !7023)
!7025 = !DILocation(line: 1424, column: 24, scope: !7023)
!7026 = !DILocation(line: 1424, column: 12, scope: !7012)
!7027 = !DILocation(line: 1425, column: 12, scope: !7023)
!7028 = !DILocation(line: 1425, column: 17, scope: !7023)
!7029 = !DILocation(line: 1425, column: 4, scope: !7023)
!7030 = !DILocation(line: 1427, column: 22, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 1425, column: 35)
!7032 = !DILocation(line: 1428, column: 4, scope: !7031)
!7033 = !DILocation(line: 1429, column: 12, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 1429, column: 12)
!7035 = !DILocation(line: 1429, column: 17, scope: !7034)
!7036 = !DILocation(line: 1429, column: 24, scope: !7034)
!7037 = !DILocation(line: 1429, column: 12, scope: !7023)
!7038 = !DILocation(line: 1430, column: 12, scope: !7034)
!7039 = !DILocation(line: 1430, column: 17, scope: !7034)
!7040 = !DILocation(line: 1430, column: 4, scope: !7034)
!7041 = !DILocation(line: 1434, column: 22, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 1430, column: 35)
!7043 = !DILocation(line: 1435, column: 4, scope: !7042)
!7044 = !DILocation(line: 1436, column: 12, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 1436, column: 12)
!7046 = !DILocation(line: 1436, column: 17, scope: !7045)
!7047 = !DILocation(line: 1436, column: 24, scope: !7045)
!7048 = !DILocation(line: 1436, column: 12, scope: !7034)
!7049 = !DILocation(line: 1437, column: 12, scope: !7045)
!7050 = !DILocation(line: 1437, column: 17, scope: !7045)
!7051 = !DILocation(line: 1437, column: 4, scope: !7045)
!7052 = !DILocation(line: 1440, column: 22, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 1437, column: 35)
!7054 = !DILocation(line: 1441, column: 4, scope: !7053)
!7055 = !DILocation(line: 1442, column: 12, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 1442, column: 12)
!7057 = !DILocation(line: 1442, column: 17, scope: !7056)
!7058 = !DILocation(line: 1442, column: 24, scope: !7056)
!7059 = !DILocation(line: 1442, column: 12, scope: !7045)
!7060 = !DILocation(line: 1443, column: 12, scope: !7056)
!7061 = !DILocation(line: 1443, column: 17, scope: !7056)
!7062 = !DILocation(line: 1443, column: 4, scope: !7056)
!7063 = !DILocation(line: 1445, column: 22, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 1443, column: 35)
!7065 = !DILocation(line: 1446, column: 4, scope: !7064)
!7066 = !DILocation(line: 1447, column: 12, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 1447, column: 12)
!7068 = !DILocation(line: 1447, column: 17, scope: !7067)
!7069 = !DILocation(line: 1447, column: 24, scope: !7067)
!7070 = !DILocation(line: 1447, column: 12, scope: !7056)
!7071 = !DILocation(line: 1448, column: 12, scope: !7067)
!7072 = !DILocation(line: 1448, column: 17, scope: !7067)
!7073 = !DILocation(line: 1448, column: 4, scope: !7067)
!7074 = !DILocation(line: 1451, column: 22, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 1448, column: 35)
!7076 = !DILocation(line: 1452, column: 4, scope: !7075)
!7077 = !DILocation(line: 1453, column: 2, scope: !6979)
!7078 = !DILocation(line: 1453, column: 13, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 1453, column: 13)
!7080 = !DILocation(line: 1453, column: 13, scope: !6975)
!7081 = !DILocation(line: 1454, column: 7, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 1454, column: 7)
!7083 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 1453, column: 66)
!7084 = !DILocation(line: 1454, column: 12, scope: !7082)
!7085 = !DILocation(line: 1454, column: 19, scope: !7082)
!7086 = !DILocation(line: 1454, column: 7, scope: !7083)
!7087 = !DILocation(line: 1455, column: 12, scope: !7082)
!7088 = !DILocation(line: 1455, column: 17, scope: !7082)
!7089 = !DILocation(line: 1455, column: 4, scope: !7082)
!7090 = !DILocation(line: 1458, column: 22, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 1455, column: 35)
!7092 = !DILocation(line: 1459, column: 4, scope: !7091)
!7093 = !DILocation(line: 1460, column: 12, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 1460, column: 12)
!7095 = !DILocation(line: 1460, column: 17, scope: !7094)
!7096 = !DILocation(line: 1460, column: 24, scope: !7094)
!7097 = !DILocation(line: 1460, column: 12, scope: !7082)
!7098 = !DILocation(line: 1461, column: 12, scope: !7094)
!7099 = !DILocation(line: 1461, column: 17, scope: !7094)
!7100 = !DILocation(line: 1461, column: 4, scope: !7094)
!7101 = !DILocation(line: 1465, column: 22, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 1461, column: 35)
!7103 = !DILocation(line: 1466, column: 4, scope: !7102)
!7104 = !DILocation(line: 1467, column: 12, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 1467, column: 12)
!7106 = !DILocation(line: 1467, column: 17, scope: !7105)
!7107 = !DILocation(line: 1467, column: 24, scope: !7105)
!7108 = !DILocation(line: 1467, column: 12, scope: !7094)
!7109 = !DILocation(line: 1468, column: 12, scope: !7105)
!7110 = !DILocation(line: 1468, column: 17, scope: !7105)
!7111 = !DILocation(line: 1468, column: 4, scope: !7105)
!7112 = !DILocation(line: 1470, column: 22, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 1468, column: 35)
!7114 = !DILocation(line: 1471, column: 4, scope: !7113)
!7115 = !DILocation(line: 1472, column: 2, scope: !7083)
!7116 = !DILocation(line: 1472, column: 13, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 1472, column: 13)
!7118 = !DILocation(line: 1472, column: 13, scope: !7079)
!7119 = !DILocation(line: 1473, column: 7, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 1473, column: 7)
!7121 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1472, column: 71)
!7122 = !DILocation(line: 1473, column: 12, scope: !7120)
!7123 = !DILocation(line: 1473, column: 19, scope: !7120)
!7124 = !DILocation(line: 1473, column: 7, scope: !7121)
!7125 = !DILocation(line: 1474, column: 12, scope: !7120)
!7126 = !DILocation(line: 1474, column: 17, scope: !7120)
!7127 = !DILocation(line: 1474, column: 4, scope: !7120)
!7128 = !DILocation(line: 1476, column: 22, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 1474, column: 35)
!7130 = !DILocation(line: 1477, column: 3, scope: !7129)
!7131 = !DILocation(line: 1478, column: 2, scope: !7121)
!7132 = !DILocation(line: 1478, column: 13, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1478, column: 13)
!7134 = !DILocation(line: 1478, column: 13, scope: !7117)
!7135 = !DILocation(line: 1479, column: 7, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 1479, column: 7)
!7137 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 1478, column: 70)
!7138 = !DILocation(line: 1479, column: 12, scope: !7136)
!7139 = !DILocation(line: 1479, column: 19, scope: !7136)
!7140 = !DILocation(line: 1479, column: 7, scope: !7137)
!7141 = !DILocation(line: 1480, column: 12, scope: !7136)
!7142 = !DILocation(line: 1480, column: 17, scope: !7136)
!7143 = !DILocation(line: 1480, column: 4, scope: !7136)
!7144 = !DILocation(line: 1482, column: 22, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 1480, column: 35)
!7146 = !DILocation(line: 1483, column: 4, scope: !7145)
!7147 = !DILocation(line: 1484, column: 12, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 1484, column: 12)
!7149 = !DILocation(line: 1484, column: 17, scope: !7148)
!7150 = !DILocation(line: 1484, column: 24, scope: !7148)
!7151 = !DILocation(line: 1484, column: 12, scope: !7136)
!7152 = !DILocation(line: 1485, column: 12, scope: !7148)
!7153 = !DILocation(line: 1485, column: 17, scope: !7148)
!7154 = !DILocation(line: 1485, column: 4, scope: !7148)
!7155 = !DILocation(line: 1490, column: 22, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1485, column: 35)
!7157 = !DILocation(line: 1491, column: 4, scope: !7156)
!7158 = !DILocation(line: 1492, column: 12, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1492, column: 12)
!7160 = !DILocation(line: 1492, column: 17, scope: !7159)
!7161 = !DILocation(line: 1492, column: 24, scope: !7159)
!7162 = !DILocation(line: 1492, column: 12, scope: !7148)
!7163 = !DILocation(line: 1493, column: 12, scope: !7159)
!7164 = !DILocation(line: 1493, column: 17, scope: !7159)
!7165 = !DILocation(line: 1493, column: 4, scope: !7159)
!7166 = !DILocation(line: 1502, column: 22, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 1493, column: 35)
!7168 = !DILocation(line: 1503, column: 4, scope: !7167)
!7169 = !DILocation(line: 1504, column: 12, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 1504, column: 12)
!7171 = !DILocation(line: 1504, column: 17, scope: !7170)
!7172 = !DILocation(line: 1504, column: 24, scope: !7170)
!7173 = !DILocation(line: 1504, column: 12, scope: !7159)
!7174 = !DILocation(line: 1505, column: 12, scope: !7170)
!7175 = !DILocation(line: 1505, column: 17, scope: !7170)
!7176 = !DILocation(line: 1505, column: 4, scope: !7170)
!7177 = !DILocation(line: 1510, column: 22, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 1505, column: 35)
!7179 = !DILocation(line: 1511, column: 4, scope: !7178)
!7180 = !DILocation(line: 1512, column: 2, scope: !7137)
!7181 = !DILocation(line: 1513, column: 1, scope: !6971)
!7182 = distinct !DISubprogram(name: "asus_hides_smbus_lpc", scope: !3, file: !3, line: 1529, type: !4131, scopeLine: 1530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7183 = !DILocalVariable(name: "dev", arg: 1, scope: !7182, file: !3, line: 1529, type: !3449)
!7184 = !DILocation(line: 1529, column: 50, scope: !7182)
!7185 = !DILocalVariable(name: "val", scope: !7182, file: !3, line: 1531, type: !272)
!7186 = !DILocation(line: 1531, column: 6, scope: !7182)
!7187 = !DILocation(line: 1533, column: 6, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 1533, column: 6)
!7189 = !DILocation(line: 1533, column: 6, scope: !7182)
!7190 = !DILocation(line: 1534, column: 3, scope: !7188)
!7191 = !DILocation(line: 1536, column: 23, scope: !7182)
!7192 = !DILocation(line: 1536, column: 2, scope: !7182)
!7193 = !DILocation(line: 1537, column: 6, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 1537, column: 6)
!7195 = !DILocation(line: 1537, column: 10, scope: !7194)
!7196 = !DILocation(line: 1537, column: 6, scope: !7182)
!7197 = !DILocation(line: 1538, column: 25, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 1537, column: 17)
!7199 = !DILocation(line: 1538, column: 36, scope: !7198)
!7200 = !DILocation(line: 1538, column: 40, scope: !7198)
!7201 = !DILocation(line: 1538, column: 3, scope: !7198)
!7202 = !DILocation(line: 1539, column: 24, scope: !7198)
!7203 = !DILocation(line: 1539, column: 3, scope: !7198)
!7204 = !DILocation(line: 1540, column: 7, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 1540, column: 7)
!7206 = !DILocation(line: 1540, column: 11, scope: !7205)
!7207 = !DILocation(line: 1540, column: 7, scope: !7198)
!7208 = !DILocation(line: 1541, column: 4, scope: !7205)
!7209 = !DILocation(line: 1544, column: 4, scope: !7205)
!7210 = !DILocation(line: 1545, column: 2, scope: !7198)
!7211 = !DILocation(line: 1546, column: 1, scope: !7182)
!7212 = distinct !DISubprogram(name: "asus_hides_smbus_lpc_ich6", scope: !3, file: !3, line: 1603, type: !4131, scopeLine: 1604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7213 = !DILocalVariable(name: "dev", arg: 1, scope: !7212, file: !3, line: 1603, type: !3449)
!7214 = !DILocation(line: 1603, column: 55, scope: !7212)
!7215 = !DILocation(line: 1605, column: 36, scope: !7212)
!7216 = !DILocation(line: 1605, column: 2, scope: !7212)
!7217 = !DILocation(line: 1606, column: 41, scope: !7212)
!7218 = !DILocation(line: 1606, column: 2, scope: !7212)
!7219 = !DILocation(line: 1607, column: 35, scope: !7212)
!7220 = !DILocation(line: 1607, column: 2, scope: !7212)
!7221 = !DILocation(line: 1608, column: 1, scope: !7212)
!7222 = distinct !DISubprogram(name: "asus_hides_smbus_lpc_ich6_suspend", scope: !3, file: !3, line: 1564, type: !4131, scopeLine: 1565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7223 = !DILocalVariable(name: "dev", arg: 1, scope: !7222, file: !3, line: 1564, type: !3449)
!7224 = !DILocation(line: 1564, column: 63, scope: !7222)
!7225 = !DILocalVariable(name: "rcba", scope: !7222, file: !3, line: 1566, type: !278)
!7226 = !DILocation(line: 1566, column: 6, scope: !7222)
!7227 = !DILocation(line: 1568, column: 6, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 1568, column: 6)
!7229 = !DILocation(line: 1568, column: 6, scope: !7222)
!7230 = !DILocation(line: 1569, column: 3, scope: !7228)
!7231 = !DILocalVariable(name: "__ret_warn_on", scope: !7232, file: !3, line: 1570, type: !277)
!7232 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 1570, column: 2)
!7233 = !DILocation(line: 1570, column: 2, scope: !7232)
!7234 = !DILocation(line: 1570, column: 2, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 1570, column: 2)
!7236 = !DILocation(line: 1570, column: 2, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1570, column: 2)
!7238 = !DILocation(line: 1570, column: 2, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 1570, column: 2)
!7240 = !DILocation(line: 1570, column: 2, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 1570, column: 2)
!7242 = !{i32 -2140570668, i32 -2140570639, i32 -2140570593, i32 -2140570535, i32 -2140570481, i32 -2140570427, i32 -2140570372, i32 -2140570341}
!7243 = !DILocation(line: 1570, column: 2, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 1570, column: 2)
!7245 = !{i32 -2140569938, i32 -2140569931, i32 -2140569879, i32 -2140569848, i32 -2140569818}
!7246 = !DILocation(line: 1570, column: 2, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 1570, column: 2)
!7248 = !DILocation(line: 1572, column: 24, scope: !7222)
!7249 = !DILocation(line: 1572, column: 2, scope: !7222)
!7250 = !DILocation(line: 1574, column: 27, scope: !7222)
!7251 = !DILocation(line: 1574, column: 32, scope: !7222)
!7252 = !DILocation(line: 1574, column: 19, scope: !7222)
!7253 = !DILocation(line: 1574, column: 17, scope: !7222)
!7254 = !DILocation(line: 1575, column: 6, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 1575, column: 6)
!7256 = !DILocation(line: 1575, column: 21, scope: !7255)
!7257 = !DILocation(line: 1575, column: 6, scope: !7222)
!7258 = !DILocation(line: 1576, column: 3, scope: !7255)
!7259 = !DILocation(line: 1577, column: 1, scope: !7222)
!7260 = distinct !DISubprogram(name: "asus_hides_smbus_lpc_ich6_resume", scope: !3, file: !3, line: 1593, type: !4131, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7261 = !DILocalVariable(name: "dev", arg: 1, scope: !7260, file: !3, line: 1593, type: !3449)
!7262 = !DILocation(line: 1593, column: 62, scope: !7260)
!7263 = !DILocation(line: 1595, column: 6, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 1595, column: 6)
!7265 = !DILocation(line: 1595, column: 6, scope: !7260)
!7266 = !DILocation(line: 1596, column: 3, scope: !7264)
!7267 = !DILocation(line: 1598, column: 10, scope: !7260)
!7268 = !DILocation(line: 1598, column: 2, scope: !7260)
!7269 = !DILocation(line: 1599, column: 17, scope: !7260)
!7270 = !DILocation(line: 1600, column: 2, scope: !7260)
!7271 = !DILocation(line: 1601, column: 1, scope: !7260)
!7272 = distinct !DISubprogram(name: "asus_hides_smbus_lpc_ich6_resume_early", scope: !3, file: !3, line: 1579, type: !4131, scopeLine: 1580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7273 = !DILocalVariable(name: "dev", arg: 1, scope: !7272, file: !3, line: 1579, type: !3449)
!7274 = !DILocation(line: 1579, column: 68, scope: !7272)
!7275 = !DILocalVariable(name: "val", scope: !7272, file: !3, line: 1581, type: !278)
!7276 = !DILocation(line: 1581, column: 6, scope: !7272)
!7277 = !DILocation(line: 1583, column: 6, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7272, file: !3, line: 1583, column: 6)
!7279 = !DILocation(line: 1583, column: 6, scope: !7272)
!7280 = !DILocation(line: 1584, column: 3, scope: !7278)
!7281 = !DILocation(line: 1587, column: 14, scope: !7272)
!7282 = !DILocation(line: 1587, column: 29, scope: !7272)
!7283 = !DILocation(line: 1587, column: 8, scope: !7272)
!7284 = !DILocation(line: 1587, column: 6, scope: !7272)
!7285 = !DILocation(line: 1590, column: 9, scope: !7272)
!7286 = !DILocation(line: 1590, column: 13, scope: !7272)
!7287 = !DILocation(line: 1590, column: 27, scope: !7272)
!7288 = !DILocation(line: 1590, column: 42, scope: !7272)
!7289 = !DILocation(line: 1590, column: 2, scope: !7272)
!7290 = !DILocation(line: 1591, column: 1, scope: !7272)
!7291 = distinct !DISubprogram(name: "quirk_sis_96x_smbus", scope: !3, file: !3, line: 1615, type: !4131, scopeLine: 1616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7292 = !DILocalVariable(name: "dev", arg: 1, scope: !7291, file: !3, line: 1615, type: !3449)
!7293 = !DILocation(line: 1615, column: 49, scope: !7291)
!7294 = !DILocalVariable(name: "val", scope: !7291, file: !3, line: 1617, type: !465)
!7295 = !DILocation(line: 1617, column: 5, scope: !7291)
!7296 = !DILocation(line: 1618, column: 23, scope: !7291)
!7297 = !DILocation(line: 1618, column: 2, scope: !7291)
!7298 = !DILocation(line: 1619, column: 6, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 1619, column: 6)
!7300 = !DILocation(line: 1619, column: 10, scope: !7299)
!7301 = !DILocation(line: 1619, column: 6, scope: !7291)
!7302 = !DILocation(line: 1620, column: 3, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 1619, column: 18)
!7304 = !DILocation(line: 1621, column: 25, scope: !7303)
!7305 = !DILocation(line: 1621, column: 36, scope: !7303)
!7306 = !DILocation(line: 1621, column: 40, scope: !7303)
!7307 = !DILocation(line: 1621, column: 3, scope: !7303)
!7308 = !DILocation(line: 1622, column: 2, scope: !7303)
!7309 = !DILocation(line: 1623, column: 1, scope: !7291)
!7310 = distinct !DISubprogram(name: "quirk_sis_503", scope: !3, file: !3, line: 1643, type: !4131, scopeLine: 1644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7311 = !DILocalVariable(name: "dev", arg: 1, scope: !7310, file: !3, line: 1643, type: !3449)
!7312 = !DILocation(line: 1643, column: 43, scope: !7310)
!7313 = !DILocalVariable(name: "reg", scope: !7310, file: !3, line: 1645, type: !465)
!7314 = !DILocation(line: 1645, column: 5, scope: !7310)
!7315 = !DILocalVariable(name: "devid", scope: !7310, file: !3, line: 1646, type: !272)
!7316 = !DILocation(line: 1646, column: 6, scope: !7310)
!7317 = !DILocation(line: 1648, column: 23, scope: !7310)
!7318 = !DILocation(line: 1648, column: 2, scope: !7310)
!7319 = !DILocation(line: 1649, column: 24, scope: !7310)
!7320 = !DILocation(line: 1649, column: 50, scope: !7310)
!7321 = !DILocation(line: 1649, column: 54, scope: !7310)
!7322 = !DILocation(line: 1649, column: 2, scope: !7310)
!7323 = !DILocation(line: 1650, column: 23, scope: !7310)
!7324 = !DILocation(line: 1650, column: 2, scope: !7310)
!7325 = !DILocation(line: 1651, column: 8, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 1651, column: 6)
!7327 = !DILocation(line: 1651, column: 14, scope: !7326)
!7328 = !DILocation(line: 1651, column: 24, scope: !7326)
!7329 = !DILocation(line: 1651, column: 35, scope: !7326)
!7330 = !DILocation(line: 1651, column: 39, scope: !7326)
!7331 = !DILocation(line: 1651, column: 45, scope: !7326)
!7332 = !DILocation(line: 1651, column: 6, scope: !7310)
!7333 = !DILocation(line: 1652, column: 25, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 1651, column: 57)
!7335 = !DILocation(line: 1652, column: 51, scope: !7334)
!7336 = !DILocation(line: 1652, column: 3, scope: !7334)
!7337 = !DILocation(line: 1653, column: 3, scope: !7334)
!7338 = !DILocation(line: 1661, column: 16, scope: !7310)
!7339 = !DILocation(line: 1661, column: 2, scope: !7310)
!7340 = !DILocation(line: 1661, column: 7, scope: !7310)
!7341 = !DILocation(line: 1661, column: 14, scope: !7310)
!7342 = !DILocation(line: 1662, column: 22, scope: !7310)
!7343 = !DILocation(line: 1662, column: 2, scope: !7310)
!7344 = !DILocation(line: 1663, column: 1, scope: !7310)
!7345 = distinct !DISubprogram(name: "asus_hides_ac97_lpc", scope: !3, file: !3, line: 1673, type: !4131, scopeLine: 1674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7346 = !DILocalVariable(name: "dev", arg: 1, scope: !7345, file: !3, line: 1673, type: !3449)
!7347 = !DILocation(line: 1673, column: 49, scope: !7345)
!7348 = !DILocalVariable(name: "val", scope: !7345, file: !3, line: 1675, type: !465)
!7349 = !DILocation(line: 1675, column: 5, scope: !7345)
!7350 = !DILocalVariable(name: "asus_hides_ac97", scope: !7345, file: !3, line: 1676, type: !277)
!7351 = !DILocation(line: 1676, column: 6, scope: !7345)
!7352 = !DILocation(line: 1678, column: 6, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 1678, column: 6)
!7354 = !DILocation(line: 1678, column: 6, scope: !7345)
!7355 = !DILocation(line: 1679, column: 7, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 1679, column: 7)
!7357 = distinct !DILexicalBlock(scope: !7353, file: !3, line: 1678, column: 62)
!7358 = !DILocation(line: 1679, column: 12, scope: !7356)
!7359 = !DILocation(line: 1679, column: 19, scope: !7356)
!7360 = !DILocation(line: 1679, column: 7, scope: !7357)
!7361 = !DILocation(line: 1680, column: 20, scope: !7356)
!7362 = !DILocation(line: 1680, column: 4, scope: !7356)
!7363 = !DILocation(line: 1681, column: 2, scope: !7357)
!7364 = !DILocation(line: 1683, column: 7, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 1683, column: 6)
!7366 = !DILocation(line: 1683, column: 6, scope: !7345)
!7367 = !DILocation(line: 1684, column: 3, scope: !7365)
!7368 = !DILocation(line: 1686, column: 23, scope: !7345)
!7369 = !DILocation(line: 1686, column: 2, scope: !7345)
!7370 = !DILocation(line: 1687, column: 6, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 1687, column: 6)
!7372 = !DILocation(line: 1687, column: 10, scope: !7371)
!7373 = !DILocation(line: 1687, column: 6, scope: !7345)
!7374 = !DILocation(line: 1688, column: 25, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 1687, column: 18)
!7376 = !DILocation(line: 1688, column: 36, scope: !7375)
!7377 = !DILocation(line: 1688, column: 40, scope: !7375)
!7378 = !DILocation(line: 1688, column: 3, scope: !7375)
!7379 = !DILocation(line: 1689, column: 24, scope: !7375)
!7380 = !DILocation(line: 1689, column: 3, scope: !7375)
!7381 = !DILocation(line: 1690, column: 7, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 1690, column: 7)
!7383 = !DILocation(line: 1690, column: 11, scope: !7382)
!7384 = !DILocation(line: 1690, column: 7, scope: !7375)
!7385 = !DILocation(line: 1691, column: 4, scope: !7382)
!7386 = !DILocation(line: 1694, column: 4, scope: !7382)
!7387 = !DILocation(line: 1695, column: 2, scope: !7375)
!7388 = !DILocation(line: 1696, column: 1, scope: !7345)
!7389 = distinct !DISubprogram(name: "quirk_jmicron_ata", scope: !3, file: !3, line: 1706, type: !4131, scopeLine: 1707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7390 = !DILocalVariable(name: "pdev", arg: 1, scope: !7389, file: !3, line: 1706, type: !3449)
!7391 = !DILocation(line: 1706, column: 47, scope: !7389)
!7392 = !DILocalVariable(name: "conf1", scope: !7389, file: !3, line: 1708, type: !278)
!7393 = !DILocation(line: 1708, column: 6, scope: !7389)
!7394 = !DILocalVariable(name: "conf5", scope: !7389, file: !3, line: 1708, type: !278)
!7395 = !DILocation(line: 1708, column: 13, scope: !7389)
!7396 = !DILocalVariable(name: "class", scope: !7389, file: !3, line: 1708, type: !278)
!7397 = !DILocation(line: 1708, column: 20, scope: !7389)
!7398 = !DILocalVariable(name: "hdr", scope: !7389, file: !3, line: 1709, type: !465)
!7399 = !DILocation(line: 1709, column: 5, scope: !7389)
!7400 = !DILocation(line: 1712, column: 6, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 1712, column: 6)
!7402 = !DILocation(line: 1712, column: 6, scope: !7389)
!7403 = !DILocation(line: 1713, column: 3, scope: !7401)
!7404 = !DILocation(line: 1715, column: 24, scope: !7389)
!7405 = !DILocation(line: 1715, column: 2, scope: !7389)
!7406 = !DILocation(line: 1716, column: 24, scope: !7389)
!7407 = !DILocation(line: 1716, column: 2, scope: !7389)
!7408 = !DILocation(line: 1718, column: 8, scope: !7389)
!7409 = !DILocation(line: 1719, column: 8, scope: !7389)
!7410 = !DILocation(line: 1721, column: 10, scope: !7389)
!7411 = !DILocation(line: 1721, column: 16, scope: !7389)
!7412 = !DILocation(line: 1721, column: 2, scope: !7389)
!7413 = !DILocation(line: 1726, column: 9, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 1721, column: 24)
!7415 = !DILocation(line: 1727, column: 3, scope: !7414)
!7416 = !DILocation(line: 1732, column: 9, scope: !7414)
!7417 = !DILocation(line: 1732, column: 3, scope: !7414)
!7418 = !DILocation(line: 1739, column: 9, scope: !7414)
!7419 = !DILocation(line: 1740, column: 3, scope: !7414)
!7420 = !DILocation(line: 1744, column: 9, scope: !7414)
!7421 = !DILocation(line: 1745, column: 3, scope: !7414)
!7422 = !DILocation(line: 1748, column: 25, scope: !7389)
!7423 = !DILocation(line: 1748, column: 37, scope: !7389)
!7424 = !DILocation(line: 1748, column: 2, scope: !7389)
!7425 = !DILocation(line: 1749, column: 25, scope: !7389)
!7426 = !DILocation(line: 1749, column: 37, scope: !7389)
!7427 = !DILocation(line: 1749, column: 2, scope: !7389)
!7428 = !DILocation(line: 1752, column: 23, scope: !7389)
!7429 = !DILocation(line: 1752, column: 2, scope: !7389)
!7430 = !DILocation(line: 1753, column: 19, scope: !7389)
!7431 = !DILocation(line: 1753, column: 23, scope: !7389)
!7432 = !DILocation(line: 1753, column: 2, scope: !7389)
!7433 = !DILocation(line: 1753, column: 8, scope: !7389)
!7434 = !DILocation(line: 1753, column: 17, scope: !7389)
!7435 = !DILocation(line: 1754, column: 27, scope: !7389)
!7436 = !DILocation(line: 1754, column: 31, scope: !7389)
!7437 = !DILocation(line: 1754, column: 25, scope: !7389)
!7438 = !DILocation(line: 1754, column: 24, scope: !7389)
!7439 = !DILocation(line: 1754, column: 2, scope: !7389)
!7440 = !DILocation(line: 1754, column: 8, scope: !7389)
!7441 = !DILocation(line: 1754, column: 22, scope: !7389)
!7442 = !DILocation(line: 1756, column: 24, scope: !7389)
!7443 = !DILocation(line: 1756, column: 2, scope: !7389)
!7444 = !DILocation(line: 1757, column: 16, scope: !7389)
!7445 = !DILocation(line: 1757, column: 22, scope: !7389)
!7446 = !DILocation(line: 1757, column: 2, scope: !7389)
!7447 = !DILocation(line: 1757, column: 8, scope: !7389)
!7448 = !DILocation(line: 1757, column: 14, scope: !7389)
!7449 = !DILocation(line: 1758, column: 1, scope: !7389)
!7450 = distinct !DISubprogram(name: "quirk_jmicron_async_suspend", scope: !3, file: !3, line: 1780, type: !4131, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7451 = !DILocalVariable(name: "dev", arg: 1, scope: !7450, file: !3, line: 1780, type: !3449)
!7452 = !DILocation(line: 1780, column: 57, scope: !7450)
!7453 = !DILocation(line: 1782, column: 6, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7450, file: !3, line: 1782, column: 6)
!7455 = !DILocation(line: 1782, column: 11, scope: !7454)
!7456 = !DILocation(line: 1782, column: 6, scope: !7450)
!7457 = !DILocation(line: 1783, column: 33, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 1782, column: 26)
!7459 = !DILocation(line: 1783, column: 38, scope: !7458)
!7460 = !DILocation(line: 1783, column: 3, scope: !7458)
!7461 = !DILocation(line: 1784, column: 3, scope: !7458)
!7462 = !DILocation(line: 1785, column: 2, scope: !7458)
!7463 = !DILocation(line: 1786, column: 1, scope: !7450)
!7464 = distinct !DISubprogram(name: "quirk_alder_ioapic", scope: !3, file: !3, line: 1793, type: !4131, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7465 = !DILocalVariable(name: "pdev", arg: 1, scope: !7464, file: !3, line: 1793, type: !3449)
!7466 = !DILocation(line: 1793, column: 48, scope: !7464)
!7467 = !DILocalVariable(name: "i", scope: !7464, file: !3, line: 1795, type: !277)
!7468 = !DILocation(line: 1795, column: 6, scope: !7464)
!7469 = !DILocation(line: 1797, column: 7, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 1797, column: 6)
!7471 = !DILocation(line: 1797, column: 13, scope: !7470)
!7472 = !DILocation(line: 1797, column: 19, scope: !7470)
!7473 = !DILocation(line: 1797, column: 25, scope: !7470)
!7474 = !DILocation(line: 1797, column: 6, scope: !7464)
!7475 = !DILocation(line: 1798, column: 3, scope: !7470)
!7476 = !DILocation(line: 1805, column: 6, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 1805, column: 6)
!7478 = !DILocation(line: 1805, column: 34, scope: !7477)
!7479 = !DILocation(line: 1805, column: 37, scope: !7477)
!7480 = !DILocation(line: 1805, column: 6, scope: !7464)
!7481 = !DILocation(line: 1806, column: 37, scope: !7477)
!7482 = !DILocation(line: 1806, column: 43, scope: !7477)
!7483 = !DILocation(line: 1806, column: 3, scope: !7477)
!7484 = !DILocation(line: 1812, column: 9, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 1812, column: 2)
!7486 = !DILocation(line: 1812, column: 7, scope: !7485)
!7487 = !DILocation(line: 1812, column: 14, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7485, file: !3, line: 1812, column: 2)
!7489 = !DILocation(line: 1812, column: 16, scope: !7488)
!7490 = !DILocation(line: 1812, column: 2, scope: !7485)
!7491 = !DILocation(line: 1813, column: 11, scope: !7488)
!7492 = !DILocation(line: 1813, column: 17, scope: !7488)
!7493 = !DILocation(line: 1813, column: 26, scope: !7488)
!7494 = !DILocation(line: 1813, column: 3, scope: !7488)
!7495 = !DILocation(line: 1812, column: 37, scope: !7488)
!7496 = !DILocation(line: 1812, column: 2, scope: !7488)
!7497 = distinct !{!7497, !7490, !7498}
!7498 = !DILocation(line: 1813, column: 58, scope: !7485)
!7499 = !DILocation(line: 1814, column: 1, scope: !7464)
!7500 = distinct !DISubprogram(name: "quirk_pcie_mch", scope: !3, file: !3, line: 1818, type: !4131, scopeLine: 1819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7501 = !DILocalVariable(name: "pdev", arg: 1, scope: !7500, file: !3, line: 1818, type: !3449)
!7502 = !DILocation(line: 1818, column: 44, scope: !7500)
!7503 = !DILocation(line: 1820, column: 2, scope: !7500)
!7504 = !DILocation(line: 1820, column: 8, scope: !7500)
!7505 = !DILocation(line: 1820, column: 15, scope: !7500)
!7506 = !DILocation(line: 1821, column: 1, scope: !7500)
!7507 = distinct !DISubprogram(name: "quirk_pcie_pxh", scope: !3, file: !3, line: 1832, type: !4131, scopeLine: 1833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7508 = !DILocalVariable(name: "dev", arg: 1, scope: !7507, file: !3, line: 1832, type: !3449)
!7509 = !DILocation(line: 1832, column: 44, scope: !7507)
!7510 = !DILocation(line: 1834, column: 2, scope: !7507)
!7511 = !DILocation(line: 1834, column: 7, scope: !7507)
!7512 = !DILocation(line: 1834, column: 14, scope: !7507)
!7513 = !DILocation(line: 1835, column: 2, scope: !7507)
!7514 = !DILocation(line: 1836, column: 1, scope: !7507)
!7515 = distinct !DISubprogram(name: "quirk_intel_pcie_pm", scope: !3, file: !3, line: 1847, type: !4131, scopeLine: 1848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7516 = !DILocalVariable(name: "dev", arg: 1, scope: !7515, file: !3, line: 1847, type: !3449)
!7517 = !DILocation(line: 1847, column: 49, scope: !7515)
!7518 = !DILocation(line: 1849, column: 21, scope: !7515)
!7519 = !DILocation(line: 1850, column: 2, scope: !7515)
!7520 = !DILocation(line: 1850, column: 7, scope: !7515)
!7521 = !DILocation(line: 1850, column: 15, scope: !7515)
!7522 = !DILocation(line: 1851, column: 1, scope: !7515)
!7523 = distinct !DISubprogram(name: "quirk_radeon_pm", scope: !3, file: !3, line: 1884, type: !4131, scopeLine: 1885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7524 = !DILocalVariable(name: "dev", arg: 1, scope: !7523, file: !3, line: 1884, type: !3449)
!7525 = !DILocation(line: 1884, column: 45, scope: !7523)
!7526 = !DILocation(line: 1886, column: 6, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 1886, column: 6)
!7528 = !DILocation(line: 1886, column: 11, scope: !7527)
!7529 = !DILocation(line: 1886, column: 28, scope: !7527)
!7530 = !DILocation(line: 1886, column: 51, scope: !7527)
!7531 = !DILocation(line: 1887, column: 6, scope: !7527)
!7532 = !DILocation(line: 1887, column: 11, scope: !7527)
!7533 = !DILocation(line: 1887, column: 28, scope: !7527)
!7534 = !DILocation(line: 1886, column: 6, scope: !7523)
!7535 = !DILocation(line: 1888, column: 21, scope: !7527)
!7536 = !DILocation(line: 1888, column: 3, scope: !7527)
!7537 = !DILocation(line: 1889, column: 1, scope: !7523)
!7538 = distinct !DISubprogram(name: "quirk_ryzen_xhci_d3hot", scope: !3, file: !3, line: 1901, type: !4131, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7539 = !DILocalVariable(name: "dev", arg: 1, scope: !7538, file: !3, line: 1901, type: !3449)
!7540 = !DILocation(line: 1901, column: 52, scope: !7538)
!7541 = !DILocation(line: 1903, column: 20, scope: !7538)
!7542 = !DILocation(line: 1903, column: 2, scope: !7538)
!7543 = !DILocation(line: 1904, column: 1, scope: !7538)
!7544 = distinct !DISubprogram(name: "quirk_reroute_to_boot_interrupts_intel", scope: !3, file: !3, line: 1938, type: !4131, scopeLine: 1939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7545 = !DILocalVariable(name: "dev", arg: 1, scope: !7544, file: !3, line: 1938, type: !3449)
!7546 = !DILocation(line: 1938, column: 68, scope: !7544)
!7547 = !DILocation(line: 1940, column: 2, scope: !7544)
!7548 = !DILocation(line: 1941, column: 6, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7544, file: !3, line: 1941, column: 6)
!7550 = !DILocation(line: 1941, column: 20, scope: !7549)
!7551 = !DILocation(line: 1941, column: 23, scope: !7549)
!7552 = !DILocation(line: 1941, column: 6, scope: !7544)
!7553 = !DILocation(line: 1942, column: 3, scope: !7549)
!7554 = !DILocation(line: 1944, column: 2, scope: !7544)
!7555 = !DILocation(line: 1944, column: 7, scope: !7544)
!7556 = !DILocation(line: 1944, column: 27, scope: !7544)
!7557 = !DILocation(line: 1945, column: 2, scope: !7544)
!7558 = !DILocation(line: 1947, column: 1, scope: !7544)
!7559 = distinct !DISubprogram(name: "quirk_disable_intel_boot_interrupt", scope: !3, file: !3, line: 1990, type: !4131, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7560 = !DILocalVariable(name: "dev", arg: 1, scope: !7559, file: !3, line: 1990, type: !3449)
!7561 = !DILocation(line: 1990, column: 64, scope: !7559)
!7562 = !DILocalVariable(name: "pci_config_word", scope: !7559, file: !3, line: 1992, type: !272)
!7563 = !DILocation(line: 1992, column: 6, scope: !7559)
!7564 = !DILocalVariable(name: "pci_config_dword", scope: !7559, file: !3, line: 1993, type: !278)
!7565 = !DILocation(line: 1993, column: 6, scope: !7559)
!7566 = !DILocation(line: 1995, column: 6, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 1995, column: 6)
!7568 = !DILocation(line: 1995, column: 6, scope: !7559)
!7569 = !DILocation(line: 1996, column: 3, scope: !7567)
!7570 = !DILocation(line: 1998, column: 10, scope: !7559)
!7571 = !DILocation(line: 1998, column: 15, scope: !7559)
!7572 = !DILocation(line: 1998, column: 2, scope: !7559)
!7573 = !DILocation(line: 2000, column: 24, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 1998, column: 23)
!7575 = !DILocation(line: 2000, column: 3, scope: !7574)
!7576 = !DILocation(line: 2002, column: 19, scope: !7574)
!7577 = !DILocation(line: 2003, column: 25, scope: !7574)
!7578 = !DILocation(line: 2004, column: 11, scope: !7574)
!7579 = !DILocation(line: 2003, column: 3, scope: !7574)
!7580 = !DILocation(line: 2005, column: 3, scope: !7574)
!7581 = !DILocation(line: 2011, column: 25, scope: !7574)
!7582 = !DILocation(line: 2011, column: 3, scope: !7574)
!7583 = !DILocation(line: 2013, column: 20, scope: !7574)
!7584 = !DILocation(line: 2014, column: 26, scope: !7574)
!7585 = !DILocation(line: 2015, column: 12, scope: !7574)
!7586 = !DILocation(line: 2014, column: 3, scope: !7574)
!7587 = !DILocation(line: 2016, column: 3, scope: !7574)
!7588 = !DILocation(line: 2018, column: 3, scope: !7574)
!7589 = !DILocation(line: 2020, column: 2, scope: !7559)
!7590 = !DILocation(line: 2022, column: 1, scope: !7559)
!7591 = distinct !DISubprogram(name: "quirk_disable_broadcom_boot_interrupt", scope: !3, file: !3, line: 2066, type: !4131, scopeLine: 2067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7592 = !DILocalVariable(name: "dev", arg: 1, scope: !7591, file: !3, line: 2066, type: !3449)
!7593 = !DILocation(line: 2066, column: 67, scope: !7591)
!7594 = !DILocalVariable(name: "pci_config_dword", scope: !7591, file: !3, line: 2068, type: !278)
!7595 = !DILocation(line: 2068, column: 6, scope: !7591)
!7596 = !DILocalVariable(name: "irq", scope: !7591, file: !3, line: 2069, type: !465)
!7597 = !DILocation(line: 2069, column: 5, scope: !7591)
!7598 = !DILocation(line: 2071, column: 6, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 2071, column: 6)
!7600 = !DILocation(line: 2071, column: 6, scope: !7591)
!7601 = !DILocation(line: 2072, column: 3, scope: !7599)
!7602 = !DILocation(line: 2074, column: 24, scope: !7591)
!7603 = !DILocation(line: 2074, column: 2, scope: !7591)
!7604 = !DILocation(line: 2075, column: 25, scope: !7591)
!7605 = !DILocation(line: 2075, column: 53, scope: !7591)
!7606 = !DILocation(line: 2075, column: 70, scope: !7591)
!7607 = !DILocation(line: 2075, column: 2, scope: !7591)
!7608 = !DILocation(line: 2078, column: 11, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 2078, column: 2)
!7610 = !DILocation(line: 2078, column: 7, scope: !7609)
!7611 = !DILocation(line: 2078, column: 19, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 2078, column: 2)
!7613 = !DILocation(line: 2078, column: 23, scope: !7612)
!7614 = !DILocation(line: 2078, column: 2, scope: !7609)
!7615 = !DILocation(line: 2079, column: 8, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 2078, column: 43)
!7617 = !DILocation(line: 2079, column: 3, scope: !7616)
!7618 = !DILocation(line: 2080, column: 3, scope: !7616)
!7619 = !DILocation(line: 2081, column: 2, scope: !7616)
!7620 = !DILocation(line: 2078, column: 39, scope: !7612)
!7621 = !DILocation(line: 2078, column: 2, scope: !7612)
!7622 = distinct !{!7622, !7614, !7623}
!7623 = !DILocation(line: 2081, column: 2, scope: !7609)
!7624 = !DILocation(line: 2083, column: 25, scope: !7591)
!7625 = !DILocation(line: 2083, column: 53, scope: !7591)
!7626 = !DILocation(line: 2083, column: 2, scope: !7591)
!7627 = !DILocation(line: 2085, column: 2, scope: !7591)
!7628 = !DILocation(line: 2087, column: 1, scope: !7591)
!7629 = distinct !DISubprogram(name: "quirk_disable_amd_813x_boot_interrupt", scope: !3, file: !3, line: 2103, type: !4131, scopeLine: 2104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7630 = !DILocalVariable(name: "dev", arg: 1, scope: !7629, file: !3, line: 2103, type: !3449)
!7631 = !DILocation(line: 2103, column: 67, scope: !7629)
!7632 = !DILocalVariable(name: "pci_config_dword", scope: !7629, file: !3, line: 2105, type: !278)
!7633 = !DILocation(line: 2105, column: 6, scope: !7629)
!7634 = !DILocation(line: 2107, column: 6, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 2107, column: 6)
!7636 = !DILocation(line: 2107, column: 6, scope: !7629)
!7637 = !DILocation(line: 2108, column: 3, scope: !7635)
!7638 = !DILocation(line: 2109, column: 7, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 2109, column: 6)
!7640 = !DILocation(line: 2109, column: 12, scope: !7639)
!7641 = !DILocation(line: 2109, column: 21, scope: !7639)
!7642 = !DILocation(line: 2109, column: 41, scope: !7639)
!7643 = !DILocation(line: 2110, column: 7, scope: !7639)
!7644 = !DILocation(line: 2110, column: 12, scope: !7639)
!7645 = !DILocation(line: 2110, column: 21, scope: !7639)
!7646 = !DILocation(line: 2109, column: 6, scope: !7629)
!7647 = !DILocation(line: 2111, column: 3, scope: !7639)
!7648 = !DILocation(line: 2113, column: 24, scope: !7629)
!7649 = !DILocation(line: 2113, column: 2, scope: !7629)
!7650 = !DILocation(line: 2114, column: 19, scope: !7629)
!7651 = !DILocation(line: 2115, column: 25, scope: !7629)
!7652 = !DILocation(line: 2115, column: 45, scope: !7629)
!7653 = !DILocation(line: 2115, column: 2, scope: !7629)
!7654 = !DILocation(line: 2117, column: 2, scope: !7629)
!7655 = !DILocation(line: 2119, column: 1, scope: !7629)
!7656 = distinct !DISubprogram(name: "quirk_disable_amd_8111_boot_interrupt", scope: !3, file: !3, line: 2127, type: !4131, scopeLine: 2128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7657 = !DILocalVariable(name: "dev", arg: 1, scope: !7656, file: !3, line: 2127, type: !3449)
!7658 = !DILocation(line: 2127, column: 67, scope: !7656)
!7659 = !DILocalVariable(name: "pci_config_word", scope: !7656, file: !3, line: 2129, type: !272)
!7660 = !DILocation(line: 2129, column: 6, scope: !7656)
!7661 = !DILocation(line: 2131, column: 6, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 2131, column: 6)
!7663 = !DILocation(line: 2131, column: 6, scope: !7656)
!7664 = !DILocation(line: 2132, column: 3, scope: !7662)
!7665 = !DILocation(line: 2134, column: 23, scope: !7656)
!7666 = !DILocation(line: 2134, column: 2, scope: !7656)
!7667 = !DILocation(line: 2135, column: 7, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 2135, column: 6)
!7669 = !DILocation(line: 2135, column: 6, scope: !7656)
!7670 = !DILocation(line: 2136, column: 3, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 2135, column: 24)
!7672 = !DILocation(line: 2138, column: 3, scope: !7671)
!7673 = !DILocation(line: 2140, column: 24, scope: !7656)
!7674 = !DILocation(line: 2140, column: 2, scope: !7656)
!7675 = !DILocation(line: 2141, column: 2, scope: !7656)
!7676 = !DILocation(line: 2143, column: 1, scope: !7656)
!7677 = distinct !DISubprogram(name: "quirk_tc86c001_ide", scope: !3, file: !3, line: 2153, type: !4131, scopeLine: 2154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7678 = !DILocalVariable(name: "dev", arg: 1, scope: !7677, file: !3, line: 2153, type: !3449)
!7679 = !DILocation(line: 2153, column: 48, scope: !7677)
!7680 = !DILocalVariable(name: "r", scope: !7677, file: !3, line: 2155, type: !3465)
!7681 = !DILocation(line: 2155, column: 19, scope: !7677)
!7682 = !DILocation(line: 2155, column: 24, scope: !7677)
!7683 = !DILocation(line: 2155, column: 29, scope: !7677)
!7684 = !DILocation(line: 2157, column: 6, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 2157, column: 6)
!7686 = !DILocation(line: 2157, column: 9, scope: !7685)
!7687 = !DILocation(line: 2157, column: 15, scope: !7685)
!7688 = !DILocation(line: 2157, column: 6, scope: !7677)
!7689 = !DILocation(line: 2158, column: 3, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 2157, column: 22)
!7691 = !DILocation(line: 2158, column: 6, scope: !7690)
!7692 = !DILocation(line: 2158, column: 12, scope: !7690)
!7693 = !DILocation(line: 2159, column: 3, scope: !7690)
!7694 = !DILocation(line: 2159, column: 6, scope: !7690)
!7695 = !DILocation(line: 2159, column: 12, scope: !7690)
!7696 = !DILocation(line: 2160, column: 3, scope: !7690)
!7697 = !DILocation(line: 2160, column: 6, scope: !7690)
!7698 = !DILocation(line: 2160, column: 10, scope: !7690)
!7699 = !DILocation(line: 2161, column: 2, scope: !7690)
!7700 = !DILocation(line: 2162, column: 1, scope: !7677)
!7701 = distinct !DISubprogram(name: "quirk_plx_pci9050", scope: !3, file: !3, line: 2174, type: !4131, scopeLine: 2175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7702 = !DILocalVariable(name: "dev", arg: 1, scope: !7701, file: !3, line: 2174, type: !3449)
!7703 = !DILocation(line: 2174, column: 47, scope: !7701)
!7704 = !DILocalVariable(name: "bar", scope: !7701, file: !3, line: 2176, type: !7)
!7705 = !DILocation(line: 2176, column: 15, scope: !7701)
!7706 = !DILocation(line: 2179, column: 6, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 2179, column: 6)
!7708 = !DILocation(line: 2179, column: 11, scope: !7707)
!7709 = !DILocation(line: 2179, column: 20, scope: !7707)
!7710 = !DILocation(line: 2179, column: 6, scope: !7701)
!7711 = !DILocation(line: 2180, column: 3, scope: !7707)
!7712 = !DILocation(line: 2181, column: 11, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 2181, column: 2)
!7714 = !DILocation(line: 2181, column: 7, scope: !7713)
!7715 = !DILocation(line: 2181, column: 16, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 2181, column: 2)
!7717 = !DILocation(line: 2181, column: 20, scope: !7716)
!7718 = !DILocation(line: 2181, column: 2, scope: !7713)
!7719 = !DILocation(line: 2182, column: 7, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 2182, column: 7)
!7721 = !DILocation(line: 2182, column: 34, scope: !7720)
!7722 = !DILocation(line: 2182, column: 42, scope: !7720)
!7723 = !DILocation(line: 2183, column: 8, scope: !7720)
!7724 = !DILocation(line: 2183, column: 37, scope: !7720)
!7725 = !DILocation(line: 2182, column: 7, scope: !7716)
!7726 = !DILocalVariable(name: "r", scope: !7727, file: !3, line: 2184, type: !3465)
!7727 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 2183, column: 46)
!7728 = !DILocation(line: 2184, column: 21, scope: !7727)
!7729 = !DILocation(line: 2184, column: 26, scope: !7727)
!7730 = !DILocation(line: 2184, column: 31, scope: !7727)
!7731 = !DILocation(line: 2184, column: 40, scope: !7727)
!7732 = !DILocation(line: 2185, column: 4, scope: !7727)
!7733 = !DILocation(line: 2187, column: 4, scope: !7727)
!7734 = !DILocation(line: 2187, column: 7, scope: !7727)
!7735 = !DILocation(line: 2187, column: 13, scope: !7727)
!7736 = !DILocation(line: 2188, column: 4, scope: !7727)
!7737 = !DILocation(line: 2188, column: 7, scope: !7727)
!7738 = !DILocation(line: 2188, column: 13, scope: !7727)
!7739 = !DILocation(line: 2189, column: 4, scope: !7727)
!7740 = !DILocation(line: 2189, column: 7, scope: !7727)
!7741 = !DILocation(line: 2189, column: 11, scope: !7727)
!7742 = !DILocation(line: 2190, column: 3, scope: !7727)
!7743 = !DILocation(line: 2183, column: 43, scope: !7720)
!7744 = !DILocation(line: 2181, column: 29, scope: !7716)
!7745 = !DILocation(line: 2181, column: 2, scope: !7716)
!7746 = distinct !{!7746, !7718, !7747}
!7747 = !DILocation(line: 2190, column: 3, scope: !7713)
!7748 = !DILocation(line: 2191, column: 1, scope: !7701)
!7749 = distinct !DISubprogram(name: "quirk_netmos", scope: !3, file: !3, line: 2206, type: !4131, scopeLine: 2207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7750 = !DILocalVariable(name: "dev", arg: 1, scope: !7749, file: !3, line: 2206, type: !3449)
!7751 = !DILocation(line: 2206, column: 42, scope: !7749)
!7752 = !DILocalVariable(name: "num_parallel", scope: !7749, file: !3, line: 2208, type: !7)
!7753 = !DILocation(line: 2208, column: 15, scope: !7749)
!7754 = !DILocation(line: 2208, column: 31, scope: !7749)
!7755 = !DILocation(line: 2208, column: 36, scope: !7749)
!7756 = !DILocation(line: 2208, column: 53, scope: !7749)
!7757 = !DILocation(line: 2208, column: 61, scope: !7749)
!7758 = !DILocalVariable(name: "num_serial", scope: !7749, file: !3, line: 2209, type: !7)
!7759 = !DILocation(line: 2209, column: 15, scope: !7749)
!7760 = !DILocation(line: 2209, column: 28, scope: !7749)
!7761 = !DILocation(line: 2209, column: 33, scope: !7749)
!7762 = !DILocation(line: 2209, column: 50, scope: !7749)
!7763 = !DILocation(line: 2221, column: 10, scope: !7749)
!7764 = !DILocation(line: 2221, column: 15, scope: !7749)
!7765 = !DILocation(line: 2221, column: 2, scope: !7749)
!7766 = !DILocation(line: 2224, column: 7, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 2224, column: 7)
!7768 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 2221, column: 23)
!7769 = !DILocation(line: 2224, column: 12, scope: !7767)
!7770 = !DILocation(line: 2224, column: 29, scope: !7767)
!7771 = !DILocation(line: 2224, column: 50, scope: !7767)
!7772 = !DILocation(line: 2225, column: 5, scope: !7767)
!7773 = !DILocation(line: 2225, column: 10, scope: !7767)
!7774 = !DILocation(line: 2225, column: 27, scope: !7767)
!7775 = !DILocation(line: 2224, column: 7, scope: !7768)
!7776 = !DILocation(line: 2226, column: 4, scope: !7767)
!7777 = !DILocation(line: 2225, column: 30, scope: !7767)
!7778 = !DILocation(line: 2232, column: 7, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 2232, column: 7)
!7780 = !DILocation(line: 2232, column: 7, scope: !7768)
!7781 = !DILocation(line: 2233, column: 4, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2232, column: 21)
!7783 = !DILocation(line: 2236, column: 9, scope: !7782)
!7784 = !DILocation(line: 2236, column: 14, scope: !7782)
!7785 = !DILocation(line: 2236, column: 20, scope: !7782)
!7786 = !DILocation(line: 2235, column: 54, scope: !7782)
!7787 = !DILocation(line: 2235, column: 4, scope: !7782)
!7788 = !DILocation(line: 2235, column: 9, scope: !7782)
!7789 = !DILocation(line: 2235, column: 15, scope: !7782)
!7790 = !DILocation(line: 2237, column: 3, scope: !7782)
!7791 = !DILocation(line: 2238, column: 2, scope: !7768)
!7792 = !DILocation(line: 2239, column: 1, scope: !7749)
!7793 = distinct !DISubprogram(name: "quirk_e100_interrupt", scope: !3, file: !3, line: 2243, type: !4131, scopeLine: 2244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7794 = !DILocalVariable(name: "dev", arg: 1, scope: !7793, file: !3, line: 2243, type: !3449)
!7795 = !DILocation(line: 2243, column: 50, scope: !7793)
!7796 = !DILocalVariable(name: "command", scope: !7793, file: !3, line: 2245, type: !272)
!7797 = !DILocation(line: 2245, column: 6, scope: !7793)
!7798 = !DILocalVariable(name: "pmcsr", scope: !7793, file: !3, line: 2245, type: !272)
!7799 = !DILocation(line: 2245, column: 15, scope: !7793)
!7800 = !DILocalVariable(name: "csr", scope: !7793, file: !3, line: 2246, type: !4390)
!7801 = !DILocation(line: 2246, column: 14, scope: !7793)
!7802 = !DILocalVariable(name: "cmd_hi", scope: !7793, file: !3, line: 2247, type: !465)
!7803 = !DILocation(line: 2247, column: 5, scope: !7793)
!7804 = !DILocation(line: 2249, column: 10, scope: !7793)
!7805 = !DILocation(line: 2249, column: 15, scope: !7793)
!7806 = !DILocation(line: 2249, column: 2, scope: !7793)
!7807 = !DILocation(line: 2249, column: 23, scope: !7793)
!7808 = !DILocation(line: 2264, column: 3, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 2249, column: 23)
!7810 = !DILocation(line: 2266, column: 3, scope: !7809)
!7811 = !DILocation(line: 2276, column: 23, scope: !7793)
!7812 = !DILocation(line: 2276, column: 2, scope: !7793)
!7813 = !DILocation(line: 2278, column: 8, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 2278, column: 6)
!7815 = !DILocation(line: 2278, column: 16, scope: !7814)
!7816 = !DILocation(line: 2278, column: 38, scope: !7814)
!7817 = !DILocation(line: 2278, column: 42, scope: !7814)
!7818 = !DILocation(line: 2278, column: 6, scope: !7793)
!7819 = !DILocation(line: 2279, column: 3, scope: !7814)
!7820 = !DILocation(line: 2285, column: 6, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 2285, column: 6)
!7822 = !DILocation(line: 2285, column: 11, scope: !7821)
!7823 = !DILocation(line: 2285, column: 6, scope: !7793)
!7824 = !DILocation(line: 2286, column: 24, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 2285, column: 19)
!7826 = !DILocation(line: 2286, column: 29, scope: !7825)
!7827 = !DILocation(line: 2286, column: 34, scope: !7825)
!7828 = !DILocation(line: 2286, column: 41, scope: !7825)
!7829 = !DILocation(line: 2286, column: 3, scope: !7825)
!7830 = !DILocation(line: 2287, column: 8, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7825, file: !3, line: 2287, column: 7)
!7832 = !DILocation(line: 2287, column: 14, scope: !7831)
!7833 = !DILocation(line: 2287, column: 40, scope: !7831)
!7834 = !DILocation(line: 2287, column: 7, scope: !7825)
!7835 = !DILocation(line: 2288, column: 4, scope: !7831)
!7836 = !DILocation(line: 2289, column: 2, scope: !7825)
!7837 = !DILocation(line: 2292, column: 16, scope: !7793)
!7838 = !DILocation(line: 2292, column: 8, scope: !7793)
!7839 = !DILocation(line: 2292, column: 6, scope: !7793)
!7840 = !DILocation(line: 2293, column: 7, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 2293, column: 6)
!7842 = !DILocation(line: 2293, column: 6, scope: !7793)
!7843 = !DILocation(line: 2294, column: 3, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 2293, column: 12)
!7845 = !DILocation(line: 2295, column: 3, scope: !7844)
!7846 = !DILocation(line: 2298, column: 17, scope: !7793)
!7847 = !DILocation(line: 2298, column: 21, scope: !7793)
!7848 = !DILocation(line: 2298, column: 11, scope: !7793)
!7849 = !DILocation(line: 2298, column: 9, scope: !7793)
!7850 = !DILocation(line: 2299, column: 6, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 2299, column: 6)
!7852 = !DILocation(line: 2299, column: 13, scope: !7851)
!7853 = !DILocation(line: 2299, column: 6, scope: !7793)
!7854 = !DILocation(line: 2300, column: 3, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 2299, column: 19)
!7856 = !DILocation(line: 2301, column: 13, scope: !7855)
!7857 = !DILocation(line: 2301, column: 17, scope: !7855)
!7858 = !DILocation(line: 2301, column: 3, scope: !7855)
!7859 = !DILocation(line: 2302, column: 2, scope: !7855)
!7860 = !DILocation(line: 2304, column: 10, scope: !7793)
!7861 = !DILocation(line: 2304, column: 2, scope: !7793)
!7862 = !DILocation(line: 2305, column: 1, scope: !7793)
!7863 = distinct !DISubprogram(name: "quirk_disable_aspm_l0s", scope: !3, file: !3, line: 2313, type: !4131, scopeLine: 2314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7864 = !DILocalVariable(name: "dev", arg: 1, scope: !7863, file: !3, line: 2313, type: !3449)
!7865 = !DILocation(line: 2313, column: 52, scope: !7863)
!7866 = !DILocation(line: 2315, column: 2, scope: !7863)
!7867 = !DILocation(line: 2316, column: 25, scope: !7863)
!7868 = !DILocation(line: 2316, column: 2, scope: !7863)
!7869 = !DILocation(line: 2317, column: 1, scope: !7863)
!7870 = distinct !DISubprogram(name: "quirk_disable_aspm_l0s_l1", scope: !3, file: !3, line: 2333, type: !4131, scopeLine: 2334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7871 = !DILocalVariable(name: "dev", arg: 1, scope: !7870, file: !3, line: 2333, type: !3449)
!7872 = !DILocation(line: 2333, column: 55, scope: !7870)
!7873 = !DILocation(line: 2335, column: 2, scope: !7870)
!7874 = !DILocation(line: 2336, column: 25, scope: !7870)
!7875 = !DILocation(line: 2336, column: 2, scope: !7870)
!7876 = !DILocation(line: 2337, column: 1, scope: !7870)
!7877 = distinct !DISubprogram(name: "quirk_enable_clear_retrain_link", scope: !3, file: !3, line: 2354, type: !4131, scopeLine: 2355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7878 = !DILocalVariable(name: "dev", arg: 1, scope: !7877, file: !3, line: 2354, type: !3449)
!7879 = !DILocation(line: 2354, column: 61, scope: !7877)
!7880 = !DILocation(line: 2356, column: 2, scope: !7877)
!7881 = !DILocation(line: 2356, column: 7, scope: !7877)
!7882 = !DILocation(line: 2356, column: 26, scope: !7877)
!7883 = !DILocation(line: 2357, column: 2, scope: !7877)
!7884 = !DILocation(line: 2358, column: 1, scope: !7877)
!7885 = distinct !DISubprogram(name: "fixup_rev1_53c810", scope: !3, file: !3, line: 2363, type: !4131, scopeLine: 2364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7886 = !DILocalVariable(name: "dev", arg: 1, scope: !7885, file: !3, line: 2363, type: !3449)
!7887 = !DILocation(line: 2363, column: 47, scope: !7885)
!7888 = !DILocalVariable(name: "class", scope: !7885, file: !3, line: 2365, type: !278)
!7889 = !DILocation(line: 2365, column: 6, scope: !7885)
!7890 = !DILocation(line: 2365, column: 14, scope: !7885)
!7891 = !DILocation(line: 2365, column: 19, scope: !7885)
!7892 = !DILocation(line: 2371, column: 6, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 2371, column: 6)
!7894 = !DILocation(line: 2371, column: 6, scope: !7885)
!7895 = !DILocation(line: 2372, column: 3, scope: !7893)
!7896 = !DILocation(line: 2374, column: 2, scope: !7885)
!7897 = !DILocation(line: 2374, column: 7, scope: !7885)
!7898 = !DILocation(line: 2374, column: 13, scope: !7885)
!7899 = !DILocation(line: 2375, column: 2, scope: !7885)
!7900 = !DILocation(line: 2377, column: 1, scope: !7885)
!7901 = distinct !DISubprogram(name: "quirk_p64h2_1k_io", scope: !3, file: !3, line: 2381, type: !4131, scopeLine: 2382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7902 = !DILocalVariable(name: "dev", arg: 1, scope: !7901, file: !3, line: 2381, type: !3449)
!7903 = !DILocation(line: 2381, column: 47, scope: !7901)
!7904 = !DILocalVariable(name: "en1k", scope: !7901, file: !3, line: 2383, type: !272)
!7905 = !DILocation(line: 2383, column: 6, scope: !7901)
!7906 = !DILocation(line: 2385, column: 23, scope: !7901)
!7907 = !DILocation(line: 2385, column: 2, scope: !7901)
!7908 = !DILocation(line: 2387, column: 6, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 2387, column: 6)
!7910 = !DILocation(line: 2387, column: 11, scope: !7909)
!7911 = !DILocation(line: 2387, column: 6, scope: !7901)
!7912 = !DILocation(line: 2388, column: 3, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 2387, column: 20)
!7914 = !DILocation(line: 2389, column: 3, scope: !7913)
!7915 = !DILocation(line: 2389, column: 8, scope: !7913)
!7916 = !DILocation(line: 2389, column: 21, scope: !7913)
!7917 = !DILocation(line: 2390, column: 2, scope: !7913)
!7918 = !DILocation(line: 2391, column: 1, scope: !7901)
!7919 = distinct !DISubprogram(name: "quirk_nvidia_ck804_pcie_aer_ext_cap", scope: !3, file: !3, line: 2399, type: !4131, scopeLine: 2400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7920 = !DILocalVariable(name: "dev", arg: 1, scope: !7919, file: !3, line: 2399, type: !3449)
!7921 = !DILocation(line: 2399, column: 65, scope: !7919)
!7922 = !DILocalVariable(name: "b", scope: !7919, file: !3, line: 2401, type: !7923)
!7923 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !304, line: 102, baseType: !465)
!7924 = !DILocation(line: 2401, column: 10, scope: !7919)
!7925 = !DILocation(line: 2403, column: 27, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 2403, column: 6)
!7927 = !DILocation(line: 2403, column: 6, scope: !7926)
!7928 = !DILocation(line: 2403, column: 43, scope: !7926)
!7929 = !DILocation(line: 2403, column: 6, scope: !7919)
!7930 = !DILocation(line: 2404, column: 9, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 2404, column: 7)
!7932 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 2403, column: 49)
!7933 = !DILocation(line: 2404, column: 11, scope: !7931)
!7934 = !DILocation(line: 2404, column: 7, scope: !7932)
!7935 = !DILocation(line: 2405, column: 26, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 2404, column: 20)
!7937 = !DILocation(line: 2405, column: 38, scope: !7936)
!7938 = !DILocation(line: 2405, column: 40, scope: !7936)
!7939 = !DILocation(line: 2405, column: 4, scope: !7936)
!7940 = !DILocation(line: 2406, column: 4, scope: !7936)
!7941 = !DILocation(line: 2407, column: 3, scope: !7936)
!7942 = !DILocation(line: 2408, column: 2, scope: !7932)
!7943 = !DILocation(line: 2409, column: 1, scope: !7919)
!7944 = distinct !DISubprogram(name: "quirk_via_cx700_pci_parking_caching", scope: !3, file: !3, line: 2415, type: !4131, scopeLine: 2416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!7945 = !DILocalVariable(name: "dev", arg: 1, scope: !7944, file: !3, line: 2415, type: !3449)
!7946 = !DILocation(line: 2415, column: 65, scope: !7944)
!7947 = !DILocalVariable(name: "p", scope: !7944, file: !3, line: 2428, type: !3449)
!7948 = !DILocation(line: 2428, column: 18, scope: !7944)
!7949 = !DILocation(line: 2428, column: 22, scope: !7944)
!7950 = !DILocalVariable(name: "b", scope: !7944, file: !3, line: 2430, type: !7923)
!7951 = !DILocation(line: 2430, column: 10, scope: !7944)
!7952 = !DILocation(line: 2436, column: 70, scope: !7944)
!7953 = !DILocation(line: 2436, column: 6, scope: !7944)
!7954 = !DILocation(line: 2436, column: 4, scope: !7944)
!7955 = !DILocation(line: 2437, column: 7, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 2437, column: 6)
!7957 = !DILocation(line: 2437, column: 6, scope: !7944)
!7958 = !DILocation(line: 2438, column: 3, scope: !7956)
!7959 = !DILocation(line: 2439, column: 14, scope: !7944)
!7960 = !DILocation(line: 2439, column: 2, scope: !7944)
!7961 = !DILocation(line: 2441, column: 27, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 2441, column: 6)
!7963 = !DILocation(line: 2441, column: 6, scope: !7962)
!7964 = !DILocation(line: 2441, column: 42, scope: !7962)
!7965 = !DILocation(line: 2441, column: 6, scope: !7944)
!7966 = !DILocation(line: 2442, column: 7, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 2442, column: 7)
!7968 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 2441, column: 48)
!7969 = !DILocation(line: 2442, column: 9, scope: !7967)
!7970 = !DILocation(line: 2442, column: 7, scope: !7968)
!7971 = !DILocation(line: 2444, column: 26, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 2442, column: 17)
!7973 = !DILocation(line: 2444, column: 37, scope: !7972)
!7974 = !DILocation(line: 2444, column: 39, scope: !7972)
!7975 = !DILocation(line: 2444, column: 4, scope: !7972)
!7976 = !DILocation(line: 2446, column: 4, scope: !7972)
!7977 = !DILocation(line: 2447, column: 3, scope: !7972)
!7978 = !DILocation(line: 2448, column: 2, scope: !7968)
!7979 = !DILocation(line: 2450, column: 27, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 2450, column: 6)
!7981 = !DILocation(line: 2450, column: 6, scope: !7980)
!7982 = !DILocation(line: 2450, column: 42, scope: !7980)
!7983 = !DILocation(line: 2450, column: 6, scope: !7944)
!7984 = !DILocation(line: 2451, column: 7, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 2451, column: 7)
!7986 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 2450, column: 48)
!7987 = !DILocation(line: 2451, column: 9, scope: !7985)
!7988 = !DILocation(line: 2451, column: 7, scope: !7986)
!7989 = !DILocation(line: 2453, column: 26, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 2451, column: 15)
!7991 = !DILocation(line: 2453, column: 4, scope: !7990)
!7992 = !DILocation(line: 2456, column: 26, scope: !7990)
!7993 = !DILocation(line: 2456, column: 4, scope: !7990)
!7994 = !DILocation(line: 2459, column: 26, scope: !7990)
!7995 = !DILocation(line: 2459, column: 4, scope: !7990)
!7996 = !DILocation(line: 2461, column: 4, scope: !7990)
!7997 = !DILocation(line: 2462, column: 3, scope: !7990)
!7998 = !DILocation(line: 2463, column: 2, scope: !7986)
!7999 = !DILocation(line: 2464, column: 1, scope: !7944)
!8000 = distinct !DISubprogram(name: "quirk_brcm_5719_limit_mrrs", scope: !3, file: !3, line: 2467, type: !4131, scopeLine: 2468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8001 = !DILocalVariable(name: "dev", arg: 1, scope: !8000, file: !3, line: 2467, type: !3449)
!8002 = !DILocation(line: 2467, column: 56, scope: !8000)
!8003 = !DILocalVariable(name: "rev", scope: !8000, file: !3, line: 2469, type: !278)
!8004 = !DILocation(line: 2469, column: 6, scope: !8000)
!8005 = !DILocation(line: 2471, column: 24, scope: !8000)
!8006 = !DILocation(line: 2471, column: 2, scope: !8000)
!8007 = !DILocation(line: 2474, column: 6, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 2474, column: 6)
!8009 = !DILocation(line: 2474, column: 10, scope: !8008)
!8010 = !DILocation(line: 2474, column: 6, scope: !8000)
!8011 = !DILocalVariable(name: "readrq", scope: !8012, file: !3, line: 2475, type: !277)
!8012 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 2474, column: 25)
!8013 = !DILocation(line: 2475, column: 7, scope: !8012)
!8014 = !DILocation(line: 2475, column: 32, scope: !8012)
!8015 = !DILocation(line: 2475, column: 16, scope: !8012)
!8016 = !DILocation(line: 2476, column: 7, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 2476, column: 7)
!8018 = !DILocation(line: 2476, column: 14, scope: !8017)
!8019 = !DILocation(line: 2476, column: 7, scope: !8012)
!8020 = !DILocation(line: 2477, column: 20, scope: !8017)
!8021 = !DILocation(line: 2477, column: 4, scope: !8017)
!8022 = !DILocation(line: 2478, column: 2, scope: !8012)
!8023 = !DILocation(line: 2479, column: 1, scope: !8000)
!8024 = distinct !DISubprogram(name: "quirk_unhide_mch_dev6", scope: !3, file: !3, line: 2490, type: !4131, scopeLine: 2491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8025 = !DILocalVariable(name: "dev", arg: 1, scope: !8024, file: !3, line: 2490, type: !3449)
!8026 = !DILocation(line: 2490, column: 51, scope: !8024)
!8027 = !DILocalVariable(name: "reg", scope: !8024, file: !3, line: 2492, type: !465)
!8028 = !DILocation(line: 2492, column: 5, scope: !8024)
!8029 = !DILocation(line: 2494, column: 27, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 2494, column: 6)
!8031 = !DILocation(line: 2494, column: 6, scope: !8030)
!8032 = !DILocation(line: 2494, column: 44, scope: !8030)
!8033 = !DILocation(line: 2494, column: 49, scope: !8030)
!8034 = !DILocation(line: 2494, column: 54, scope: !8030)
!8035 = !DILocation(line: 2494, column: 58, scope: !8030)
!8036 = !DILocation(line: 2494, column: 6, scope: !8024)
!8037 = !DILocation(line: 2495, column: 3, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2494, column: 67)
!8039 = !DILocation(line: 2496, column: 25, scope: !8038)
!8040 = !DILocation(line: 2496, column: 36, scope: !8038)
!8041 = !DILocation(line: 2496, column: 40, scope: !8038)
!8042 = !DILocation(line: 2496, column: 3, scope: !8038)
!8043 = !DILocation(line: 2497, column: 2, scope: !8038)
!8044 = !DILocation(line: 2498, column: 1, scope: !8024)
!8045 = distinct !DISubprogram(name: "quirk_disable_all_msi", scope: !3, file: !3, line: 2512, type: !4131, scopeLine: 2513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8046 = !DILocalVariable(name: "dev", arg: 1, scope: !8045, file: !3, line: 2512, type: !3449)
!8047 = !DILocation(line: 2512, column: 51, scope: !8045)
!8048 = !DILocation(line: 2514, column: 2, scope: !8045)
!8049 = !DILocation(line: 2515, column: 2, scope: !8045)
!8050 = !DILocation(line: 2516, column: 1, scope: !8045)
!8051 = distinct !DISubprogram(name: "quirk_disable_msi", scope: !3, file: !3, line: 2527, type: !4131, scopeLine: 2528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8052 = !DILocalVariable(name: "dev", arg: 1, scope: !8051, file: !3, line: 2527, type: !3449)
!8053 = !DILocation(line: 2527, column: 47, scope: !8051)
!8054 = !DILocation(line: 2529, column: 6, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 2529, column: 6)
!8056 = !DILocation(line: 2529, column: 11, scope: !8055)
!8057 = !DILocation(line: 2529, column: 6, scope: !8051)
!8058 = !DILocation(line: 2530, column: 3, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2529, column: 24)
!8060 = !DILocation(line: 2531, column: 3, scope: !8059)
!8061 = !DILocation(line: 2531, column: 8, scope: !8059)
!8062 = !DILocation(line: 2531, column: 21, scope: !8059)
!8063 = !DILocation(line: 2531, column: 31, scope: !8059)
!8064 = !DILocation(line: 2532, column: 2, scope: !8059)
!8065 = !DILocation(line: 2533, column: 1, scope: !8051)
!8066 = distinct !DISubprogram(name: "quirk_amd_780_apc_msi", scope: !3, file: !3, line: 2544, type: !4131, scopeLine: 2545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8067 = !DILocalVariable(name: "host_bridge", arg: 1, scope: !8066, file: !3, line: 2544, type: !3449)
!8068 = !DILocation(line: 2544, column: 51, scope: !8066)
!8069 = !DILocalVariable(name: "apc_bridge", scope: !8066, file: !3, line: 2546, type: !3449)
!8070 = !DILocation(line: 2546, column: 18, scope: !8066)
!8071 = !DILocation(line: 2548, column: 28, scope: !8066)
!8072 = !DILocation(line: 2548, column: 41, scope: !8066)
!8073 = !DILocation(line: 2548, column: 15, scope: !8066)
!8074 = !DILocation(line: 2548, column: 13, scope: !8066)
!8075 = !DILocation(line: 2549, column: 6, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 2549, column: 6)
!8077 = !DILocation(line: 2549, column: 6, scope: !8066)
!8078 = !DILocation(line: 2550, column: 7, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 2550, column: 7)
!8080 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 2549, column: 18)
!8081 = !DILocation(line: 2550, column: 19, scope: !8079)
!8082 = !DILocation(line: 2550, column: 26, scope: !8079)
!8083 = !DILocation(line: 2550, column: 7, scope: !8080)
!8084 = !DILocation(line: 2551, column: 22, scope: !8079)
!8085 = !DILocation(line: 2551, column: 4, scope: !8079)
!8086 = !DILocation(line: 2552, column: 15, scope: !8080)
!8087 = !DILocation(line: 2552, column: 3, scope: !8080)
!8088 = !DILocation(line: 2553, column: 2, scope: !8080)
!8089 = !DILocation(line: 2554, column: 1, scope: !8066)
!8090 = distinct !DISubprogram(name: "quirk_msi_ht_cap", scope: !3, file: !3, line: 2585, type: !4131, scopeLine: 2586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8091 = !DILocalVariable(name: "dev", arg: 1, scope: !8090, file: !3, line: 2585, type: !3449)
!8092 = !DILocation(line: 2585, column: 46, scope: !8090)
!8093 = !DILocation(line: 2587, column: 6, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8090, file: !3, line: 2587, column: 6)
!8095 = !DILocation(line: 2587, column: 11, scope: !8094)
!8096 = !DILocation(line: 2587, column: 23, scope: !8094)
!8097 = !DILocation(line: 2587, column: 46, scope: !8094)
!8098 = !DILocation(line: 2587, column: 27, scope: !8094)
!8099 = !DILocation(line: 2587, column: 6, scope: !8090)
!8100 = !DILocation(line: 2588, column: 3, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 2587, column: 52)
!8102 = !DILocation(line: 2589, column: 3, scope: !8101)
!8103 = !DILocation(line: 2589, column: 8, scope: !8101)
!8104 = !DILocation(line: 2589, column: 21, scope: !8101)
!8105 = !DILocation(line: 2589, column: 31, scope: !8101)
!8106 = !DILocation(line: 2590, column: 2, scope: !8101)
!8107 = !DILocation(line: 2591, column: 1, scope: !8090)
!8108 = distinct !DISubprogram(name: "quirk_nvidia_ck804_msi_ht_cap", scope: !3, file: !3, line: 2599, type: !4131, scopeLine: 2600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8109 = !DILocalVariable(name: "dev", arg: 1, scope: !8108, file: !3, line: 2599, type: !3449)
!8110 = !DILocation(line: 2599, column: 59, scope: !8108)
!8111 = !DILocalVariable(name: "pdev", scope: !8108, file: !3, line: 2601, type: !3449)
!8112 = !DILocation(line: 2601, column: 18, scope: !8108)
!8113 = !DILocation(line: 2603, column: 7, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 2603, column: 6)
!8115 = !DILocation(line: 2603, column: 12, scope: !8114)
!8116 = !DILocation(line: 2603, column: 6, scope: !8108)
!8117 = !DILocation(line: 2604, column: 3, scope: !8114)
!8118 = !DILocation(line: 2610, column: 22, scope: !8108)
!8119 = !DILocation(line: 2610, column: 27, scope: !8108)
!8120 = !DILocation(line: 2610, column: 9, scope: !8108)
!8121 = !DILocation(line: 2610, column: 7, scope: !8108)
!8122 = !DILocation(line: 2611, column: 7, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 2611, column: 6)
!8124 = !DILocation(line: 2611, column: 6, scope: !8108)
!8125 = !DILocation(line: 2612, column: 3, scope: !8123)
!8126 = !DILocation(line: 2613, column: 26, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 2613, column: 6)
!8128 = !DILocation(line: 2613, column: 7, scope: !8127)
!8129 = !DILocation(line: 2613, column: 31, scope: !8127)
!8130 = !DILocation(line: 2613, column: 54, scope: !8127)
!8131 = !DILocation(line: 2613, column: 35, scope: !8127)
!8132 = !DILocation(line: 2613, column: 6, scope: !8108)
!8133 = !DILocation(line: 2614, column: 3, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 2613, column: 61)
!8135 = !DILocation(line: 2615, column: 3, scope: !8134)
!8136 = !DILocation(line: 2615, column: 8, scope: !8134)
!8137 = !DILocation(line: 2615, column: 21, scope: !8134)
!8138 = !DILocation(line: 2615, column: 31, scope: !8134)
!8139 = !DILocation(line: 2616, column: 2, scope: !8134)
!8140 = !DILocation(line: 2617, column: 14, scope: !8108)
!8141 = !DILocation(line: 2617, column: 2, scope: !8108)
!8142 = !DILocation(line: 2618, column: 1, scope: !8108)
!8143 = distinct !DISubprogram(name: "ht_enable_msi_mapping", scope: !3, file: !3, line: 2623, type: !4131, scopeLine: 2624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8144 = !DILocalVariable(name: "dev", arg: 1, scope: !8143, file: !3, line: 2623, type: !3449)
!8145 = !DILocation(line: 2623, column: 51, scope: !8143)
!8146 = !DILocalVariable(name: "pos", scope: !8143, file: !3, line: 2625, type: !277)
!8147 = !DILocation(line: 2625, column: 6, scope: !8143)
!8148 = !DILocalVariable(name: "ttl", scope: !8143, file: !3, line: 2625, type: !277)
!8149 = !DILocation(line: 2625, column: 11, scope: !8143)
!8150 = !DILocation(line: 2627, column: 31, scope: !8143)
!8151 = !DILocation(line: 2627, column: 8, scope: !8143)
!8152 = !DILocation(line: 2627, column: 6, scope: !8143)
!8153 = !DILocation(line: 2628, column: 2, scope: !8143)
!8154 = !DILocation(line: 2628, column: 9, scope: !8143)
!8155 = !DILocation(line: 2628, column: 13, scope: !8143)
!8156 = !DILocation(line: 2628, column: 19, scope: !8143)
!8157 = !DILocation(line: 0, scope: !8143)
!8158 = !DILocalVariable(name: "flags", scope: !8159, file: !3, line: 2629, type: !465)
!8159 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 2628, column: 23)
!8160 = !DILocation(line: 2629, column: 6, scope: !8159)
!8161 = !DILocation(line: 2631, column: 28, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 2631, column: 7)
!8163 = !DILocation(line: 2631, column: 33, scope: !8162)
!8164 = !DILocation(line: 2631, column: 37, scope: !8162)
!8165 = !DILocation(line: 2631, column: 7, scope: !8162)
!8166 = !DILocation(line: 2632, column: 15, scope: !8162)
!8167 = !DILocation(line: 2631, column: 7, scope: !8159)
!8168 = !DILocation(line: 2633, column: 4, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 2632, column: 21)
!8170 = !DILocation(line: 2635, column: 26, scope: !8169)
!8171 = !DILocation(line: 2635, column: 31, scope: !8169)
!8172 = !DILocation(line: 2635, column: 35, scope: !8169)
!8173 = !DILocation(line: 2636, column: 12, scope: !8169)
!8174 = !DILocation(line: 2636, column: 18, scope: !8169)
!8175 = !DILocation(line: 2635, column: 4, scope: !8169)
!8176 = !DILocation(line: 2637, column: 3, scope: !8169)
!8177 = !DILocation(line: 2638, column: 37, scope: !8159)
!8178 = !DILocation(line: 2638, column: 42, scope: !8159)
!8179 = !DILocation(line: 2638, column: 9, scope: !8159)
!8180 = !DILocation(line: 2638, column: 7, scope: !8159)
!8181 = distinct !{!8181, !8153, !8182}
!8182 = !DILocation(line: 2640, column: 2, scope: !8143)
!8183 = !DILocation(line: 2641, column: 1, scope: !8143)
!8184 = distinct !DISubprogram(name: "nvenet_msi_disable", scope: !3, file: !3, line: 2653, type: !4131, scopeLine: 2654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8185 = !DILocalVariable(name: "dev", arg: 1, scope: !8184, file: !3, line: 2653, type: !3449)
!8186 = !DILocation(line: 2653, column: 48, scope: !8184)
!8187 = !DILocalVariable(name: "board_name", scope: !8184, file: !3, line: 2655, type: !707)
!8188 = !DILocation(line: 2655, column: 14, scope: !8184)
!8189 = !DILocation(line: 2655, column: 27, scope: !8184)
!8190 = !DILocation(line: 2657, column: 6, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8184, file: !3, line: 2657, column: 6)
!8192 = !DILocation(line: 2657, column: 17, scope: !8191)
!8193 = !DILocation(line: 2658, column: 14, scope: !8191)
!8194 = !DILocation(line: 2658, column: 7, scope: !8191)
!8195 = !DILocation(line: 2658, column: 47, scope: !8191)
!8196 = !DILocation(line: 2659, column: 14, scope: !8191)
!8197 = !DILocation(line: 2659, column: 7, scope: !8191)
!8198 = !DILocation(line: 2657, column: 6, scope: !8184)
!8199 = !DILocation(line: 2660, column: 3, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 2659, column: 43)
!8201 = !DILocation(line: 2661, column: 3, scope: !8200)
!8202 = !DILocation(line: 2661, column: 8, scope: !8200)
!8203 = !DILocation(line: 2661, column: 15, scope: !8200)
!8204 = !DILocation(line: 2662, column: 2, scope: !8200)
!8205 = !DILocation(line: 2663, column: 1, scope: !8184)
!8206 = distinct !DISubprogram(name: "pci_quirk_nvidia_tegra_disable_rp_msi", scope: !3, file: !3, line: 2677, type: !4131, scopeLine: 2678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8207 = !DILocalVariable(name: "dev", arg: 1, scope: !8206, file: !3, line: 2677, type: !3449)
!8208 = !DILocation(line: 2677, column: 67, scope: !8206)
!8209 = !DILocation(line: 2679, column: 2, scope: !8206)
!8210 = !DILocation(line: 2679, column: 7, scope: !8206)
!8211 = !DILocation(line: 2679, column: 14, scope: !8206)
!8212 = !DILocation(line: 2680, column: 1, scope: !8206)
!8213 = distinct !DISubprogram(name: "nvbridge_check_legacy_irq_routing", scope: !3, file: !3, line: 2731, type: !4131, scopeLine: 2732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8214 = !DILocalVariable(name: "dev", arg: 1, scope: !8213, file: !3, line: 2731, type: !3449)
!8215 = !DILocation(line: 2731, column: 63, scope: !8213)
!8216 = !DILocalVariable(name: "cfg", scope: !8213, file: !3, line: 2733, type: !278)
!8217 = !DILocation(line: 2733, column: 6, scope: !8213)
!8218 = !DILocation(line: 2735, column: 27, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2735, column: 6)
!8220 = !DILocation(line: 2735, column: 7, scope: !8219)
!8221 = !DILocation(line: 2735, column: 6, scope: !8213)
!8222 = !DILocation(line: 2736, column: 3, scope: !8219)
!8223 = !DILocation(line: 2738, column: 24, scope: !8213)
!8224 = !DILocation(line: 2738, column: 2, scope: !8213)
!8225 = !DILocation(line: 2740, column: 6, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2740, column: 6)
!8227 = !DILocation(line: 2740, column: 10, scope: !8226)
!8228 = !DILocation(line: 2740, column: 6, scope: !8213)
!8229 = !DILocation(line: 2741, column: 3, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 2740, column: 36)
!8231 = !DILocation(line: 2742, column: 7, scope: !8230)
!8232 = !DILocation(line: 2743, column: 26, scope: !8230)
!8233 = !DILocation(line: 2743, column: 37, scope: !8230)
!8234 = !DILocation(line: 2743, column: 3, scope: !8230)
!8235 = !DILocation(line: 2744, column: 2, scope: !8230)
!8236 = !DILocation(line: 2745, column: 1, scope: !8213)
!8237 = distinct !DISubprogram(name: "nv_msi_ht_cap_quirk_all", scope: !3, file: !3, line: 2949, type: !4131, scopeLine: 2950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8238 = !DILocalVariable(name: "dev", arg: 1, scope: !8237, file: !3, line: 2949, type: !3449)
!8239 = !DILocation(line: 2949, column: 53, scope: !8237)
!8240 = !DILocation(line: 2951, column: 31, scope: !8237)
!8241 = !DILocation(line: 2951, column: 9, scope: !8237)
!8242 = !DILocation(line: 2951, column: 2, scope: !8237)
!8243 = distinct !DISubprogram(name: "nv_msi_ht_cap_quirk_leaf", scope: !3, file: !3, line: 2956, type: !4131, scopeLine: 2957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8244 = !DILocalVariable(name: "dev", arg: 1, scope: !8243, file: !3, line: 2956, type: !3449)
!8245 = !DILocation(line: 2956, column: 54, scope: !8243)
!8246 = !DILocation(line: 2958, column: 31, scope: !8243)
!8247 = !DILocation(line: 2958, column: 9, scope: !8243)
!8248 = !DILocation(line: 2958, column: 2, scope: !8243)
!8249 = distinct !DISubprogram(name: "quirk_msi_intx_disable_bug", scope: !3, file: !3, line: 2963, type: !4131, scopeLine: 2964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8250 = !DILocalVariable(name: "dev", arg: 1, scope: !8249, file: !3, line: 2963, type: !3449)
!8251 = !DILocation(line: 2963, column: 56, scope: !8249)
!8252 = !DILocation(line: 2965, column: 2, scope: !8249)
!8253 = !DILocation(line: 2965, column: 7, scope: !8249)
!8254 = !DILocation(line: 2965, column: 17, scope: !8249)
!8255 = !DILocation(line: 2966, column: 1, scope: !8249)
!8256 = distinct !DISubprogram(name: "quirk_msi_intx_disable_ati_bug", scope: !3, file: !3, line: 2968, type: !4131, scopeLine: 2969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8257 = !DILocalVariable(name: "dev", arg: 1, scope: !8256, file: !3, line: 2968, type: !3449)
!8258 = !DILocation(line: 2968, column: 60, scope: !8256)
!8259 = !DILocalVariable(name: "p", scope: !8256, file: !3, line: 2970, type: !3449)
!8260 = !DILocation(line: 2970, column: 18, scope: !8256)
!8261 = !DILocation(line: 2977, column: 6, scope: !8256)
!8262 = !DILocation(line: 2977, column: 4, scope: !8256)
!8263 = !DILocation(line: 2979, column: 7, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8256, file: !3, line: 2979, column: 6)
!8265 = !DILocation(line: 2979, column: 6, scope: !8256)
!8266 = !DILocation(line: 2980, column: 3, scope: !8264)
!8267 = !DILocation(line: 2982, column: 7, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8256, file: !3, line: 2982, column: 6)
!8269 = !DILocation(line: 2982, column: 10, scope: !8268)
!8270 = !DILocation(line: 2982, column: 19, scope: !8268)
!8271 = !DILocation(line: 2982, column: 27, scope: !8268)
!8272 = !DILocation(line: 2982, column: 31, scope: !8268)
!8273 = !DILocation(line: 2982, column: 34, scope: !8268)
!8274 = !DILocation(line: 2982, column: 43, scope: !8268)
!8275 = !DILocation(line: 2982, column: 6, scope: !8256)
!8276 = !DILocation(line: 2983, column: 3, scope: !8268)
!8277 = !DILocation(line: 2983, column: 8, scope: !8268)
!8278 = !DILocation(line: 2983, column: 18, scope: !8268)
!8279 = !DILocation(line: 2984, column: 14, scope: !8256)
!8280 = !DILocation(line: 2984, column: 2, scope: !8256)
!8281 = !DILocation(line: 2985, column: 1, scope: !8256)
!8282 = distinct !DISubprogram(name: "quirk_msi_intx_disable_qca_bug", scope: !3, file: !3, line: 2987, type: !4131, scopeLine: 2988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8283 = !DILocalVariable(name: "dev", arg: 1, scope: !8282, file: !3, line: 2987, type: !3449)
!8284 = !DILocation(line: 2987, column: 60, scope: !8282)
!8285 = !DILocation(line: 2990, column: 6, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 2990, column: 6)
!8287 = !DILocation(line: 2990, column: 11, scope: !8286)
!8288 = !DILocation(line: 2990, column: 20, scope: !8286)
!8289 = !DILocation(line: 2990, column: 6, scope: !8282)
!8290 = !DILocation(line: 2991, column: 3, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 2990, column: 28)
!8292 = !DILocation(line: 2992, column: 3, scope: !8291)
!8293 = !DILocation(line: 2992, column: 8, scope: !8291)
!8294 = !DILocation(line: 2992, column: 18, scope: !8291)
!8295 = !DILocation(line: 2993, column: 2, scope: !8291)
!8296 = !DILocation(line: 2994, column: 1, scope: !8282)
!8297 = distinct !DISubprogram(name: "quirk_al_msi_disable", scope: !3, file: !3, line: 3065, type: !4131, scopeLine: 3066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8298 = !DILocalVariable(name: "dev", arg: 1, scope: !8297, file: !3, line: 3065, type: !3449)
!8299 = !DILocation(line: 3065, column: 50, scope: !8297)
!8300 = !DILocation(line: 3067, column: 2, scope: !8297)
!8301 = !DILocation(line: 3067, column: 7, scope: !8297)
!8302 = !DILocation(line: 3067, column: 14, scope: !8297)
!8303 = !DILocation(line: 3068, column: 2, scope: !8297)
!8304 = !DILocation(line: 3069, column: 1, scope: !8297)
!8305 = distinct !DISubprogram(name: "quirk_hotplug_bridge", scope: !3, file: !3, line: 3081, type: !4131, scopeLine: 3082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8306 = !DILocalVariable(name: "dev", arg: 1, scope: !8305, file: !3, line: 3081, type: !3449)
!8307 = !DILocation(line: 3081, column: 50, scope: !8305)
!8308 = !DILocation(line: 3083, column: 2, scope: !8305)
!8309 = !DILocation(line: 3083, column: 7, scope: !8305)
!8310 = !DILocation(line: 3083, column: 25, scope: !8305)
!8311 = !DILocation(line: 3084, column: 1, scope: !8305)
!8312 = distinct !DISubprogram(name: "fixup_ti816x_class", scope: !3, file: !3, line: 3227, type: !4131, scopeLine: 3228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8313 = !DILocalVariable(name: "dev", arg: 1, scope: !8312, file: !3, line: 3227, type: !3449)
!8314 = !DILocation(line: 3227, column: 48, scope: !8312)
!8315 = !DILocalVariable(name: "class", scope: !8312, file: !3, line: 3229, type: !278)
!8316 = !DILocation(line: 3229, column: 6, scope: !8312)
!8317 = !DILocation(line: 3229, column: 14, scope: !8312)
!8318 = !DILocation(line: 3229, column: 19, scope: !8312)
!8319 = !DILocation(line: 3232, column: 2, scope: !8312)
!8320 = !DILocation(line: 3232, column: 7, scope: !8312)
!8321 = !DILocation(line: 3232, column: 13, scope: !8312)
!8322 = !DILocation(line: 3233, column: 2, scope: !8312)
!8323 = !DILocation(line: 3235, column: 1, scope: !8312)
!8324 = distinct !DISubprogram(name: "fixup_mpss_256", scope: !3, file: !3, line: 3243, type: !4131, scopeLine: 3244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8325 = !DILocalVariable(name: "dev", arg: 1, scope: !8324, file: !3, line: 3243, type: !3449)
!8326 = !DILocation(line: 3243, column: 44, scope: !8324)
!8327 = !DILocation(line: 3245, column: 2, scope: !8324)
!8328 = !DILocation(line: 3245, column: 7, scope: !8324)
!8329 = !DILocation(line: 3245, column: 17, scope: !8324)
!8330 = !DILocation(line: 3246, column: 1, scope: !8324)
!8331 = !DILocalVariable(name: "dev", arg: 1, scope: !5827, file: !3, line: 3262, type: !3449)
!8332 = !DILocation(line: 3262, column: 51, scope: !5827)
!8333 = !DILocalVariable(name: "err", scope: !5827, file: !3, line: 3264, type: !277)
!8334 = !DILocation(line: 3264, column: 6, scope: !5827)
!8335 = !DILocalVariable(name: "rcc", scope: !5827, file: !3, line: 3265, type: !272)
!8336 = !DILocation(line: 3265, column: 6, scope: !5827)
!8337 = !DILocation(line: 3267, column: 6, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 3267, column: 6)
!8339 = !DILocation(line: 3267, column: 22, scope: !8338)
!8340 = !DILocation(line: 3267, column: 43, scope: !8338)
!8341 = !DILocation(line: 3268, column: 6, scope: !8338)
!8342 = !DILocation(line: 3268, column: 22, scope: !8338)
!8343 = !DILocation(line: 3267, column: 6, scope: !5827)
!8344 = !DILocation(line: 3269, column: 3, scope: !8338)
!8345 = !DILocation(line: 3276, column: 29, scope: !5827)
!8346 = !DILocation(line: 3276, column: 8, scope: !5827)
!8347 = !DILocation(line: 3276, column: 6, scope: !5827)
!8348 = !DILocation(line: 3277, column: 6, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 3277, column: 6)
!8350 = !DILocation(line: 3277, column: 6, scope: !5827)
!8351 = !DILocation(line: 3278, column: 3, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8349, file: !3, line: 3277, column: 11)
!8353 = !DILocation(line: 3279, column: 3, scope: !8352)
!8354 = !DILocation(line: 3282, column: 8, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 3282, column: 6)
!8356 = !DILocation(line: 3282, column: 12, scope: !8355)
!8357 = !DILocation(line: 3282, column: 6, scope: !5827)
!8358 = !DILocation(line: 3283, column: 3, scope: !8355)
!8359 = !DILocation(line: 3285, column: 6, scope: !5827)
!8360 = !DILocation(line: 3287, column: 30, scope: !5827)
!8361 = !DILocation(line: 3287, column: 41, scope: !5827)
!8362 = !DILocation(line: 3287, column: 8, scope: !5827)
!8363 = !DILocation(line: 3287, column: 6, scope: !5827)
!8364 = !DILocation(line: 3288, column: 6, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 3288, column: 6)
!8366 = !DILocation(line: 3288, column: 6, scope: !5827)
!8367 = !DILocation(line: 3289, column: 3, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 3288, column: 11)
!8369 = !DILocation(line: 3290, column: 3, scope: !8368)
!8370 = !DILocalVariable(name: "__ret_print_once", scope: !8371, file: !3, line: 3293, type: !752)
!8371 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 3293, column: 2)
!8372 = !DILocation(line: 3293, column: 2, scope: !8371)
!8373 = !DILocation(line: 3293, column: 2, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 3293, column: 2)
!8375 = !DILocation(line: 3293, column: 2, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 3293, column: 2)
!8377 = !DILocation(line: 3294, column: 1, scope: !5827)
!8378 = distinct !DISubprogram(name: "quirk_intel_ntb", scope: !3, file: !3, line: 3328, type: !4131, scopeLine: 3329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8379 = !DILocalVariable(name: "dev", arg: 1, scope: !8378, file: !3, line: 3328, type: !3449)
!8380 = !DILocation(line: 3328, column: 45, scope: !8378)
!8381 = !DILocalVariable(name: "rc", scope: !8378, file: !3, line: 3330, type: !277)
!8382 = !DILocation(line: 3330, column: 6, scope: !8378)
!8383 = !DILocalVariable(name: "val", scope: !8378, file: !3, line: 3331, type: !465)
!8384 = !DILocation(line: 3331, column: 5, scope: !8378)
!8385 = !DILocation(line: 3333, column: 28, scope: !8378)
!8386 = !DILocation(line: 3333, column: 7, scope: !8378)
!8387 = !DILocation(line: 3333, column: 5, scope: !8378)
!8388 = !DILocation(line: 3334, column: 6, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 3334, column: 6)
!8390 = !DILocation(line: 3334, column: 6, scope: !8378)
!8391 = !DILocation(line: 3335, column: 3, scope: !8389)
!8392 = !DILocation(line: 3337, column: 25, scope: !8378)
!8393 = !DILocation(line: 3337, column: 30, scope: !8378)
!8394 = !DILocation(line: 3337, column: 42, scope: !8378)
!8395 = !DILocation(line: 3337, column: 62, scope: !8378)
!8396 = !DILocation(line: 3337, column: 59, scope: !8378)
!8397 = !DILocation(line: 3337, column: 48, scope: !8378)
!8398 = !DILocation(line: 3337, column: 67, scope: !8378)
!8399 = !DILocation(line: 3337, column: 2, scope: !8378)
!8400 = !DILocation(line: 3337, column: 7, scope: !8378)
!8401 = !DILocation(line: 3337, column: 19, scope: !8378)
!8402 = !DILocation(line: 3337, column: 23, scope: !8378)
!8403 = !DILocation(line: 3339, column: 28, scope: !8378)
!8404 = !DILocation(line: 3339, column: 7, scope: !8378)
!8405 = !DILocation(line: 3339, column: 5, scope: !8378)
!8406 = !DILocation(line: 3340, column: 6, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 3340, column: 6)
!8408 = !DILocation(line: 3340, column: 6, scope: !8378)
!8409 = !DILocation(line: 3341, column: 3, scope: !8407)
!8410 = !DILocation(line: 3343, column: 25, scope: !8378)
!8411 = !DILocation(line: 3343, column: 30, scope: !8378)
!8412 = !DILocation(line: 3343, column: 42, scope: !8378)
!8413 = !DILocation(line: 3343, column: 62, scope: !8378)
!8414 = !DILocation(line: 3343, column: 59, scope: !8378)
!8415 = !DILocation(line: 3343, column: 48, scope: !8378)
!8416 = !DILocation(line: 3343, column: 67, scope: !8378)
!8417 = !DILocation(line: 3343, column: 2, scope: !8378)
!8418 = !DILocation(line: 3343, column: 7, scope: !8378)
!8419 = !DILocation(line: 3343, column: 19, scope: !8378)
!8420 = !DILocation(line: 3343, column: 23, scope: !8378)
!8421 = !DILocation(line: 3344, column: 1, scope: !8378)
!8422 = distinct !DISubprogram(name: "disable_igfx_irq", scope: !3, file: !3, line: 3361, type: !4131, scopeLine: 3362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8423 = !DILocalVariable(name: "dev", arg: 1, scope: !8422, file: !3, line: 3361, type: !3449)
!8424 = !DILocation(line: 3361, column: 46, scope: !8422)
!8425 = !DILocalVariable(name: "regs", scope: !8422, file: !3, line: 3363, type: !280)
!8426 = !DILocation(line: 3363, column: 16, scope: !8422)
!8427 = !DILocation(line: 3363, column: 33, scope: !8422)
!8428 = !DILocation(line: 3363, column: 23, scope: !8422)
!8429 = !DILocation(line: 3364, column: 6, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 3364, column: 6)
!8431 = !DILocation(line: 3364, column: 11, scope: !8430)
!8432 = !DILocation(line: 3364, column: 6, scope: !8422)
!8433 = !DILocation(line: 3365, column: 3, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 3364, column: 20)
!8435 = !DILocation(line: 3366, column: 3, scope: !8434)
!8436 = !DILocation(line: 3370, column: 12, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 3370, column: 6)
!8438 = !DILocation(line: 3370, column: 17, scope: !8437)
!8439 = !DILocation(line: 3370, column: 6, scope: !8437)
!8440 = !DILocation(line: 3370, column: 35, scope: !8437)
!8441 = !DILocation(line: 3370, column: 6, scope: !8422)
!8442 = !DILocation(line: 3371, column: 3, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 3370, column: 41)
!8444 = !DILocation(line: 3373, column: 13, scope: !8443)
!8445 = !DILocation(line: 3373, column: 18, scope: !8443)
!8446 = !DILocation(line: 3373, column: 3, scope: !8443)
!8447 = !DILocation(line: 3374, column: 2, scope: !8443)
!8448 = !DILocation(line: 3376, column: 14, scope: !8422)
!8449 = !DILocation(line: 3376, column: 19, scope: !8422)
!8450 = !DILocation(line: 3376, column: 2, scope: !8422)
!8451 = !DILocation(line: 3377, column: 1, scope: !8422)
!8452 = distinct !DISubprogram(name: "quirk_remove_d3hot_delay", scope: !3, file: !3, line: 3390, type: !4131, scopeLine: 3391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8453 = !DILocalVariable(name: "dev", arg: 1, scope: !8452, file: !3, line: 3390, type: !3449)
!8454 = !DILocation(line: 3390, column: 54, scope: !8452)
!8455 = !DILocation(line: 3392, column: 2, scope: !8452)
!8456 = !DILocation(line: 3392, column: 7, scope: !8452)
!8457 = !DILocation(line: 3392, column: 19, scope: !8452)
!8458 = !DILocation(line: 3393, column: 1, scope: !8452)
!8459 = distinct !DISubprogram(name: "quirk_broken_intx_masking", scope: !3, file: !3, line: 3426, type: !4131, scopeLine: 3427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8460 = !DILocalVariable(name: "dev", arg: 1, scope: !8459, file: !3, line: 3426, type: !3449)
!8461 = !DILocation(line: 3426, column: 55, scope: !8459)
!8462 = !DILocation(line: 3428, column: 2, scope: !8459)
!8463 = !DILocation(line: 3428, column: 7, scope: !8459)
!8464 = !DILocation(line: 3428, column: 27, scope: !8459)
!8465 = !DILocation(line: 3429, column: 1, scope: !8459)
!8466 = distinct !DISubprogram(name: "mellanox_check_broken_intx_masking", scope: !3, file: !3, line: 3493, type: !4131, scopeLine: 3494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8467 = !DILocalVariable(name: "pdev", arg: 1, scope: !8466, file: !3, line: 3493, type: !3449)
!8468 = !DILocation(line: 3493, column: 64, scope: !8466)
!8469 = !DILocalVariable(name: "fw_ver", scope: !8466, file: !3, line: 3495, type: !8470)
!8470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8471, size: 64)
!8471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !1478, line: 32, baseType: !279)
!8472 = !DILocation(line: 3495, column: 18, scope: !8466)
!8473 = !DILocalVariable(name: "fw_major", scope: !8466, file: !3, line: 3496, type: !272)
!8474 = !DILocation(line: 3496, column: 6, scope: !8466)
!8475 = !DILocalVariable(name: "fw_minor", scope: !8466, file: !3, line: 3497, type: !272)
!8476 = !DILocation(line: 3497, column: 6, scope: !8466)
!8477 = !DILocalVariable(name: "fw_subminor", scope: !8466, file: !3, line: 3498, type: !272)
!8478 = !DILocation(line: 3498, column: 6, scope: !8466)
!8479 = !DILocalVariable(name: "fw_maj_min", scope: !8466, file: !3, line: 3499, type: !278)
!8480 = !DILocation(line: 3499, column: 6, scope: !8466)
!8481 = !DILocalVariable(name: "fw_sub_min", scope: !8466, file: !3, line: 3500, type: !278)
!8482 = !DILocation(line: 3500, column: 6, scope: !8466)
!8483 = !DILocalVariable(name: "i", scope: !8466, file: !3, line: 3501, type: !277)
!8484 = !DILocation(line: 3501, column: 6, scope: !8466)
!8485 = !DILocation(line: 3503, column: 9, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 3503, column: 2)
!8487 = !DILocation(line: 3503, column: 7, scope: !8486)
!8488 = !DILocation(line: 3503, column: 14, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8486, file: !3, line: 3503, column: 2)
!8490 = !DILocation(line: 3503, column: 16, scope: !8489)
!8491 = !DILocation(line: 3503, column: 2, scope: !8486)
!8492 = !DILocation(line: 3504, column: 7, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 3504, column: 7)
!8494 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 3503, column: 62)
!8495 = !DILocation(line: 3504, column: 13, scope: !8493)
!8496 = !DILocation(line: 3504, column: 49, scope: !8493)
!8497 = !DILocation(line: 3504, column: 23, scope: !8493)
!8498 = !DILocation(line: 3504, column: 20, scope: !8493)
!8499 = !DILocation(line: 3504, column: 7, scope: !8494)
!8500 = !DILocation(line: 3505, column: 4, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8493, file: !3, line: 3504, column: 53)
!8502 = !DILocation(line: 3505, column: 10, scope: !8501)
!8503 = !DILocation(line: 3505, column: 30, scope: !8501)
!8504 = !DILocation(line: 3506, column: 4, scope: !8501)
!8505 = !DILocation(line: 3508, column: 2, scope: !8494)
!8506 = !DILocation(line: 3503, column: 58, scope: !8489)
!8507 = !DILocation(line: 3503, column: 2, scope: !8489)
!8508 = distinct !{!8508, !8491, !8509}
!8509 = !DILocation(line: 3508, column: 2, scope: !8486)
!8510 = !DILocation(line: 3514, column: 6, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 3514, column: 6)
!8512 = !DILocation(line: 3514, column: 12, scope: !8511)
!8513 = !DILocation(line: 3514, column: 19, scope: !8511)
!8514 = !DILocation(line: 3514, column: 6, scope: !8466)
!8515 = !DILocation(line: 3515, column: 3, scope: !8511)
!8516 = !DILocation(line: 3517, column: 6, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 3517, column: 6)
!8518 = !DILocation(line: 3517, column: 12, scope: !8517)
!8519 = !DILocation(line: 3517, column: 19, scope: !8517)
!8520 = !DILocation(line: 3517, column: 55, scope: !8517)
!8521 = !DILocation(line: 3518, column: 6, scope: !8517)
!8522 = !DILocation(line: 3518, column: 12, scope: !8517)
!8523 = !DILocation(line: 3518, column: 19, scope: !8517)
!8524 = !DILocation(line: 3517, column: 6, scope: !8466)
!8525 = !DILocation(line: 3519, column: 3, scope: !8517)
!8526 = !DILocation(line: 3522, column: 28, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 3522, column: 6)
!8528 = !DILocation(line: 3522, column: 6, scope: !8527)
!8529 = !DILocation(line: 3522, column: 6, scope: !8466)
!8530 = !DILocation(line: 3523, column: 3, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 3522, column: 35)
!8532 = !DILocation(line: 3524, column: 3, scope: !8531)
!8533 = !DILocation(line: 3527, column: 19, scope: !8466)
!8534 = !DILocation(line: 3527, column: 11, scope: !8466)
!8535 = !DILocation(line: 3527, column: 9, scope: !8466)
!8536 = !DILocation(line: 3528, column: 7, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 3528, column: 6)
!8538 = !DILocation(line: 3528, column: 6, scope: !8466)
!8539 = !DILocation(line: 3529, column: 3, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 3528, column: 15)
!8541 = !DILocation(line: 3530, column: 3, scope: !8540)
!8542 = !DILocation(line: 3534, column: 26, scope: !8466)
!8543 = !DILocation(line: 3534, column: 15, scope: !8466)
!8544 = !DILocation(line: 3534, column: 13, scope: !8466)
!8545 = !DILocation(line: 3535, column: 26, scope: !8466)
!8546 = !DILocation(line: 3535, column: 33, scope: !8466)
!8547 = !DILocation(line: 3535, column: 15, scope: !8466)
!8548 = !DILocation(line: 3535, column: 13, scope: !8466)
!8549 = !DILocation(line: 3536, column: 13, scope: !8466)
!8550 = !DILocation(line: 3536, column: 24, scope: !8466)
!8551 = !DILocation(line: 3536, column: 11, scope: !8466)
!8552 = !DILocation(line: 3537, column: 13, scope: !8466)
!8553 = !DILocation(line: 3537, column: 24, scope: !8466)
!8554 = !DILocation(line: 3537, column: 11, scope: !8466)
!8555 = !DILocation(line: 3538, column: 16, scope: !8466)
!8556 = !DILocation(line: 3538, column: 27, scope: !8466)
!8557 = !DILocation(line: 3538, column: 14, scope: !8466)
!8558 = !DILocation(line: 3539, column: 6, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 3539, column: 6)
!8560 = !DILocation(line: 3539, column: 15, scope: !8559)
!8561 = !DILocation(line: 3539, column: 43, scope: !8559)
!8562 = !DILocation(line: 3540, column: 6, scope: !8559)
!8563 = !DILocation(line: 3540, column: 15, scope: !8559)
!8564 = !DILocation(line: 3539, column: 6, scope: !8466)
!8565 = !DILocation(line: 3541, column: 3, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 3540, column: 48)
!8567 = !DILocation(line: 3544, column: 3, scope: !8566)
!8568 = !DILocation(line: 3544, column: 9, scope: !8566)
!8569 = !DILocation(line: 3544, column: 29, scope: !8566)
!8570 = !DILocation(line: 3545, column: 2, scope: !8566)
!8571 = !DILocation(line: 3547, column: 10, scope: !8466)
!8572 = !DILocation(line: 3547, column: 2, scope: !8466)
!8573 = !DILabel(scope: !8466, name: "out", file: !3, line: 3549)
!8574 = !DILocation(line: 3549, column: 1, scope: !8466)
!8575 = !DILocation(line: 3550, column: 21, scope: !8466)
!8576 = !DILocation(line: 3550, column: 2, scope: !8466)
!8577 = !DILocation(line: 3551, column: 1, scope: !8466)
!8578 = distinct !DISubprogram(name: "quirk_no_bus_reset", scope: !3, file: !3, line: 3555, type: !4131, scopeLine: 3556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8579 = !DILocalVariable(name: "dev", arg: 1, scope: !8578, file: !3, line: 3555, type: !3449)
!8580 = !DILocation(line: 3555, column: 48, scope: !8578)
!8581 = !DILocation(line: 3557, column: 2, scope: !8578)
!8582 = !DILocation(line: 3557, column: 7, scope: !8578)
!8583 = !DILocation(line: 3557, column: 17, scope: !8578)
!8584 = !DILocation(line: 3558, column: 1, scope: !8578)
!8585 = distinct !DISubprogram(name: "quirk_no_pm_reset", scope: !3, file: !3, line: 3580, type: !4131, scopeLine: 3581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8586 = !DILocalVariable(name: "dev", arg: 1, scope: !8585, file: !3, line: 3580, type: !3449)
!8587 = !DILocation(line: 3580, column: 47, scope: !8585)
!8588 = !DILocation(line: 3586, column: 23, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 3586, column: 6)
!8590 = !DILocation(line: 3586, column: 28, scope: !8589)
!8591 = !DILocation(line: 3586, column: 7, scope: !8589)
!8592 = !DILocation(line: 3586, column: 6, scope: !8585)
!8593 = !DILocation(line: 3587, column: 3, scope: !8589)
!8594 = !DILocation(line: 3587, column: 8, scope: !8589)
!8595 = !DILocation(line: 3587, column: 18, scope: !8589)
!8596 = !DILocation(line: 3588, column: 1, scope: !8585)
!8597 = distinct !DISubprogram(name: "quirk_thunderbolt_hotplug_msi", scope: !3, file: !3, line: 3606, type: !4131, scopeLine: 3607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8598 = !DILocalVariable(name: "pdev", arg: 1, scope: !8597, file: !3, line: 3606, type: !3449)
!8599 = !DILocation(line: 3606, column: 59, scope: !8597)
!8600 = !DILocation(line: 3608, column: 6, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 3608, column: 6)
!8602 = !DILocation(line: 3608, column: 12, scope: !8601)
!8603 = !DILocation(line: 3608, column: 30, scope: !8601)
!8604 = !DILocation(line: 3609, column: 7, scope: !8601)
!8605 = !DILocation(line: 3609, column: 13, scope: !8601)
!8606 = !DILocation(line: 3609, column: 20, scope: !8601)
!8607 = !DILocation(line: 3609, column: 59, scope: !8601)
!8608 = !DILocation(line: 3610, column: 7, scope: !8601)
!8609 = !DILocation(line: 3610, column: 13, scope: !8601)
!8610 = !DILocation(line: 3610, column: 22, scope: !8601)
!8611 = !DILocation(line: 3608, column: 6, scope: !8597)
!8612 = !DILocation(line: 3611, column: 3, scope: !8601)
!8613 = !DILocation(line: 3611, column: 9, scope: !8601)
!8614 = !DILocation(line: 3611, column: 16, scope: !8601)
!8615 = !DILocation(line: 3612, column: 1, scope: !8597)
!8616 = distinct !DISubprogram(name: "quirk_apple_poweroff_thunderbolt", scope: !3, file: !3, line: 3640, type: !4131, scopeLine: 3641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8617 = !DILocalVariable(name: "dev", arg: 1, scope: !8616, file: !3, line: 3640, type: !3449)
!8618 = !DILocation(line: 3640, column: 62, scope: !8616)
!8619 = !DILocalVariable(name: "bridge", scope: !8616, file: !3, line: 3642, type: !4309)
!8620 = !DILocation(line: 3642, column: 14, scope: !8616)
!8621 = !DILocalVariable(name: "SXIO", scope: !8616, file: !3, line: 3642, type: !4309)
!8622 = !DILocation(line: 3642, column: 22, scope: !8616)
!8623 = !DILocalVariable(name: "SXFP", scope: !8616, file: !3, line: 3642, type: !4309)
!8624 = !DILocation(line: 3642, column: 28, scope: !8616)
!8625 = !DILocalVariable(name: "SXLV", scope: !8616, file: !3, line: 3642, type: !4309)
!8626 = !DILocation(line: 3642, column: 34, scope: !8616)
!8627 = !DILocation(line: 3644, column: 7, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 3644, column: 6)
!8629 = !DILocation(line: 3644, column: 6, scope: !8616)
!8630 = !DILocation(line: 3645, column: 3, scope: !8628)
!8631 = !DILocation(line: 3646, column: 20, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 3646, column: 6)
!8633 = !DILocation(line: 3646, column: 6, scope: !8632)
!8634 = !DILocation(line: 3646, column: 25, scope: !8632)
!8635 = !DILocation(line: 3646, column: 6, scope: !8616)
!8636 = !DILocation(line: 3647, column: 3, scope: !8632)
!8637 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !8638, file: !3, line: 3648, type: !3833)
!8638 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 3648, column: 11)
!8639 = !DILocation(line: 3648, column: 11, scope: !8638)
!8640 = !DILocalVariable(name: "__mptr", scope: !8641, file: !3, line: 3648, type: !280)
!8641 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 3648, column: 11)
!8642 = !DILocation(line: 3648, column: 11, scope: !8641)
!8643 = !DILocation(line: 3648, column: 11, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 3648, column: 11)
!8645 = !DILocation(line: 3648, column: 11, scope: !8616)
!8646 = !DILocation(line: 3648, column: 9, scope: !8616)
!8647 = !DILocation(line: 3649, column: 7, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 3649, column: 6)
!8649 = !DILocation(line: 3649, column: 6, scope: !8616)
!8650 = !DILocation(line: 3650, column: 3, scope: !8648)
!8651 = !DILocation(line: 3659, column: 6, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 3659, column: 6)
!8653 = !DILocation(line: 3660, column: 6, scope: !8652)
!8654 = !DILocation(line: 3660, column: 9, scope: !8652)
!8655 = !DILocation(line: 3661, column: 6, scope: !8652)
!8656 = !DILocation(line: 3661, column: 9, scope: !8652)
!8657 = !DILocation(line: 3659, column: 6, scope: !8616)
!8658 = !DILocation(line: 3662, column: 3, scope: !8652)
!8659 = !DILocation(line: 3663, column: 2, scope: !8616)
!8660 = !DILocation(line: 3666, column: 29, scope: !8616)
!8661 = !DILocation(line: 3666, column: 2, scope: !8616)
!8662 = !DILocation(line: 3667, column: 29, scope: !8616)
!8663 = !DILocation(line: 3667, column: 2, scope: !8616)
!8664 = !DILocation(line: 3668, column: 2, scope: !8616)
!8665 = !DILocation(line: 3669, column: 29, scope: !8616)
!8666 = !DILocation(line: 3669, column: 2, scope: !8616)
!8667 = !DILocation(line: 3670, column: 29, scope: !8616)
!8668 = !DILocation(line: 3670, column: 2, scope: !8616)
!8669 = !DILocation(line: 3671, column: 29, scope: !8616)
!8670 = !DILocation(line: 3671, column: 2, scope: !8616)
!8671 = !DILocation(line: 3672, column: 1, scope: !8616)
!8672 = distinct !DISubprogram(name: "pci_dev_specific_reset", scope: !3, file: !3, line: 3934, type: !4144, scopeLine: 3935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8673 = !DILocalVariable(name: "dev", arg: 1, scope: !8672, file: !3, line: 3934, type: !3449)
!8674 = !DILocation(line: 3934, column: 44, scope: !8672)
!8675 = !DILocalVariable(name: "probe", arg: 2, scope: !8672, file: !3, line: 3934, type: !277)
!8676 = !DILocation(line: 3934, column: 53, scope: !8672)
!8677 = !DILocalVariable(name: "i", scope: !8672, file: !3, line: 3936, type: !8678)
!8678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5836, size: 64)
!8679 = !DILocation(line: 3936, column: 38, scope: !8672)
!8680 = !DILocation(line: 3938, column: 9, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 3938, column: 2)
!8682 = !DILocation(line: 3938, column: 7, scope: !8681)
!8683 = !DILocation(line: 3938, column: 34, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 3938, column: 2)
!8685 = !DILocation(line: 3938, column: 37, scope: !8684)
!8686 = !DILocation(line: 3938, column: 2, scope: !8681)
!8687 = !DILocation(line: 3939, column: 8, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 3939, column: 7)
!8689 = distinct !DILexicalBlock(scope: !8684, file: !3, line: 3938, column: 49)
!8690 = !DILocation(line: 3939, column: 11, scope: !8688)
!8691 = !DILocation(line: 3939, column: 21, scope: !8688)
!8692 = !DILocation(line: 3939, column: 26, scope: !8688)
!8693 = !DILocation(line: 3939, column: 18, scope: !8688)
!8694 = !DILocation(line: 3939, column: 33, scope: !8688)
!8695 = !DILocation(line: 3940, column: 8, scope: !8688)
!8696 = !DILocation(line: 3940, column: 11, scope: !8688)
!8697 = !DILocation(line: 3940, column: 18, scope: !8688)
!8698 = !DILocation(line: 3940, column: 38, scope: !8688)
!8699 = !DILocation(line: 3941, column: 8, scope: !8688)
!8700 = !DILocation(line: 3941, column: 11, scope: !8688)
!8701 = !DILocation(line: 3941, column: 21, scope: !8688)
!8702 = !DILocation(line: 3941, column: 26, scope: !8688)
!8703 = !DILocation(line: 3941, column: 18, scope: !8688)
!8704 = !DILocation(line: 3941, column: 33, scope: !8688)
!8705 = !DILocation(line: 3942, column: 8, scope: !8688)
!8706 = !DILocation(line: 3942, column: 11, scope: !8688)
!8707 = !DILocation(line: 3942, column: 18, scope: !8688)
!8708 = !DILocation(line: 3939, column: 7, scope: !8689)
!8709 = !DILocation(line: 3943, column: 11, scope: !8688)
!8710 = !DILocation(line: 3943, column: 14, scope: !8688)
!8711 = !DILocation(line: 3943, column: 20, scope: !8688)
!8712 = !DILocation(line: 3943, column: 25, scope: !8688)
!8713 = !DILocation(line: 3943, column: 4, scope: !8688)
!8714 = !DILocation(line: 3944, column: 2, scope: !8689)
!8715 = !DILocation(line: 3938, column: 45, scope: !8684)
!8716 = !DILocation(line: 3938, column: 2, scope: !8684)
!8717 = distinct !{!8717, !8686, !8718}
!8718 = !DILocation(line: 3944, column: 2, scope: !8681)
!8719 = !DILocation(line: 3946, column: 2, scope: !8672)
!8720 = !DILocation(line: 3947, column: 1, scope: !8672)
!8721 = distinct !DISubprogram(name: "quirk_dma_func0_alias", scope: !3, file: !3, line: 3949, type: !4131, scopeLine: 3950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8722 = !DILocalVariable(name: "dev", arg: 1, scope: !8721, file: !3, line: 3949, type: !3449)
!8723 = !DILocation(line: 3949, column: 51, scope: !8721)
!8724 = !DILocation(line: 3951, column: 6, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 3951, column: 6)
!8726 = !DILocation(line: 3951, column: 27, scope: !8725)
!8727 = !DILocation(line: 3951, column: 6, scope: !8721)
!8728 = !DILocation(line: 3952, column: 21, scope: !8725)
!8729 = !DILocation(line: 3952, column: 26, scope: !8725)
!8730 = !DILocation(line: 3952, column: 3, scope: !8725)
!8731 = !DILocation(line: 3953, column: 1, scope: !8721)
!8732 = distinct !DISubprogram(name: "quirk_dma_func1_alias", scope: !3, file: !3, line: 3963, type: !4131, scopeLine: 3964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8733 = !DILocalVariable(name: "dev", arg: 1, scope: !8732, file: !3, line: 3963, type: !3449)
!8734 = !DILocation(line: 3963, column: 51, scope: !8732)
!8735 = !DILocation(line: 3965, column: 6, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 3965, column: 6)
!8737 = !DILocation(line: 3965, column: 27, scope: !8736)
!8738 = !DILocation(line: 3965, column: 6, scope: !8732)
!8739 = !DILocation(line: 3966, column: 21, scope: !8736)
!8740 = !DILocation(line: 3966, column: 26, scope: !8736)
!8741 = !DILocation(line: 3966, column: 3, scope: !8736)
!8742 = !DILocation(line: 3967, column: 1, scope: !8732)
!8743 = distinct !DISubprogram(name: "quirk_fixed_dma_alias", scope: !3, file: !3, line: 4045, type: !4131, scopeLine: 4046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8744 = !DILocalVariable(name: "dev", arg: 1, scope: !8743, file: !3, line: 4045, type: !3449)
!8745 = !DILocation(line: 4045, column: 51, scope: !8743)
!8746 = !DILocalVariable(name: "id", scope: !8743, file: !3, line: 4047, type: !4114)
!8747 = !DILocation(line: 4047, column: 30, scope: !8743)
!8748 = !DILocation(line: 4049, column: 41, scope: !8743)
!8749 = !DILocation(line: 4049, column: 7, scope: !8743)
!8750 = !DILocation(line: 4049, column: 5, scope: !8743)
!8751 = !DILocation(line: 4050, column: 6, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 4050, column: 6)
!8753 = !DILocation(line: 4050, column: 6, scope: !8743)
!8754 = !DILocation(line: 4051, column: 21, scope: !8752)
!8755 = !DILocation(line: 4051, column: 26, scope: !8752)
!8756 = !DILocation(line: 4051, column: 30, scope: !8752)
!8757 = !DILocation(line: 4051, column: 3, scope: !8752)
!8758 = !DILocation(line: 4052, column: 1, scope: !8743)
!8759 = distinct !DISubprogram(name: "quirk_use_pcie_bridge_dma_alias", scope: !3, file: !3, line: 4064, type: !4131, scopeLine: 4065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8760 = !DILocalVariable(name: "pdev", arg: 1, scope: !8759, file: !3, line: 4064, type: !3449)
!8761 = !DILocation(line: 4064, column: 61, scope: !8759)
!8762 = !DILocation(line: 4066, column: 23, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8759, file: !3, line: 4066, column: 6)
!8764 = !DILocation(line: 4066, column: 29, scope: !8763)
!8765 = !DILocation(line: 4066, column: 7, scope: !8763)
!8766 = !DILocation(line: 4066, column: 34, scope: !8763)
!8767 = !DILocation(line: 4067, column: 6, scope: !8763)
!8768 = !DILocation(line: 4067, column: 12, scope: !8763)
!8769 = !DILocation(line: 4067, column: 21, scope: !8763)
!8770 = !DILocation(line: 4067, column: 47, scope: !8763)
!8771 = !DILocation(line: 4068, column: 19, scope: !8763)
!8772 = !DILocation(line: 4068, column: 7, scope: !8763)
!8773 = !DILocation(line: 4068, column: 25, scope: !8763)
!8774 = !DILocation(line: 4068, column: 40, scope: !8763)
!8775 = !DILocation(line: 4068, column: 46, scope: !8763)
!8776 = !DILocation(line: 4068, column: 51, scope: !8763)
!8777 = !DILocation(line: 4068, column: 28, scope: !8763)
!8778 = !DILocation(line: 4068, column: 57, scope: !8763)
!8779 = !DILocation(line: 4069, column: 20, scope: !8763)
!8780 = !DILocation(line: 4069, column: 26, scope: !8763)
!8781 = !DILocation(line: 4069, column: 31, scope: !8763)
!8782 = !DILocation(line: 4069, column: 6, scope: !8763)
!8783 = !DILocation(line: 4069, column: 37, scope: !8763)
!8784 = !DILocation(line: 4066, column: 6, scope: !8759)
!8785 = !DILocation(line: 4070, column: 3, scope: !8763)
!8786 = !DILocation(line: 4070, column: 9, scope: !8763)
!8787 = !DILocation(line: 4070, column: 19, scope: !8763)
!8788 = !DILocation(line: 4071, column: 1, scope: !8759)
!8789 = distinct !DISubprogram(name: "quirk_mic_x200_dma_alias", scope: !3, file: !3, line: 4090, type: !4131, scopeLine: 4091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8790 = !DILocalVariable(name: "pdev", arg: 1, scope: !8789, file: !3, line: 4090, type: !3449)
!8791 = !DILocation(line: 4090, column: 54, scope: !8789)
!8792 = !DILocation(line: 4092, column: 20, scope: !8789)
!8793 = !DILocation(line: 4092, column: 2, scope: !8789)
!8794 = !DILocation(line: 4093, column: 20, scope: !8789)
!8795 = !DILocation(line: 4093, column: 2, scope: !8789)
!8796 = !DILocation(line: 4094, column: 20, scope: !8789)
!8797 = !DILocation(line: 4094, column: 2, scope: !8789)
!8798 = !DILocation(line: 4095, column: 1, scope: !8789)
!8799 = distinct !DISubprogram(name: "quirk_pex_vca_alias", scope: !3, file: !3, line: 4113, type: !4131, scopeLine: 4114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8800 = !DILocalVariable(name: "pdev", arg: 1, scope: !8799, file: !3, line: 4113, type: !3449)
!8801 = !DILocation(line: 4113, column: 49, scope: !8799)
!8802 = !DILocalVariable(name: "num_pci_slots", scope: !8799, file: !3, line: 4115, type: !1959)
!8803 = !DILocation(line: 4115, column: 21, scope: !8799)
!8804 = !DILocalVariable(name: "slot", scope: !8799, file: !3, line: 4116, type: !7)
!8805 = !DILocation(line: 4116, column: 15, scope: !8799)
!8806 = !DILocation(line: 4118, column: 12, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 4118, column: 2)
!8808 = !DILocation(line: 4118, column: 7, scope: !8807)
!8809 = !DILocation(line: 4118, column: 17, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8807, file: !3, line: 4118, column: 2)
!8811 = !DILocation(line: 4118, column: 22, scope: !8810)
!8812 = !DILocation(line: 4118, column: 2, scope: !8807)
!8813 = !DILocation(line: 4119, column: 21, scope: !8810)
!8814 = !DILocation(line: 4119, column: 27, scope: !8810)
!8815 = !DILocation(line: 4119, column: 3, scope: !8810)
!8816 = !DILocation(line: 4118, column: 43, scope: !8810)
!8817 = !DILocation(line: 4118, column: 2, scope: !8810)
!8818 = distinct !{!8818, !8812, !8819}
!8819 = !DILocation(line: 4119, column: 50, scope: !8807)
!8820 = !DILocation(line: 4120, column: 1, scope: !8799)
!8821 = distinct !DISubprogram(name: "quirk_bridge_cavm_thrx2_pcie_root", scope: !3, file: !3, line: 4133, type: !4131, scopeLine: 4134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8822 = !DILocalVariable(name: "pdev", arg: 1, scope: !8821, file: !3, line: 4133, type: !3449)
!8823 = !DILocation(line: 4133, column: 63, scope: !8821)
!8824 = !DILocation(line: 4135, column: 2, scope: !8821)
!8825 = !DILocation(line: 4135, column: 8, scope: !8821)
!8826 = !DILocation(line: 4135, column: 18, scope: !8821)
!8827 = !DILocation(line: 4136, column: 1, scope: !8821)
!8828 = distinct !DISubprogram(name: "quirk_tw686x_class", scope: !3, file: !3, line: 4146, type: !4131, scopeLine: 4147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8829 = !DILocalVariable(name: "pdev", arg: 1, scope: !8828, file: !3, line: 4146, type: !3449)
!8830 = !DILocation(line: 4146, column: 48, scope: !8828)
!8831 = !DILocalVariable(name: "class", scope: !8828, file: !3, line: 4148, type: !278)
!8832 = !DILocation(line: 4148, column: 6, scope: !8828)
!8833 = !DILocation(line: 4148, column: 14, scope: !8828)
!8834 = !DILocation(line: 4148, column: 20, scope: !8828)
!8835 = !DILocation(line: 4151, column: 2, scope: !8828)
!8836 = !DILocation(line: 4151, column: 8, scope: !8828)
!8837 = !DILocation(line: 4151, column: 14, scope: !8828)
!8838 = !DILocation(line: 4152, column: 2, scope: !8828)
!8839 = !DILocation(line: 4154, column: 1, scope: !8828)
!8840 = distinct !DISubprogram(name: "quirk_relaxedordering_disable", scope: !3, file: !3, line: 4169, type: !4131, scopeLine: 4170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8841 = !DILocalVariable(name: "dev", arg: 1, scope: !8840, file: !3, line: 4169, type: !3449)
!8842 = !DILocation(line: 4169, column: 59, scope: !8840)
!8843 = !DILocation(line: 4171, column: 2, scope: !8840)
!8844 = !DILocation(line: 4171, column: 7, scope: !8840)
!8845 = !DILocation(line: 4171, column: 17, scope: !8840)
!8846 = !DILocation(line: 4172, column: 2, scope: !8840)
!8847 = !DILocation(line: 4173, column: 1, scope: !8840)
!8848 = distinct !DISubprogram(name: "quirk_chelsio_T5_disable_root_port_attributes", scope: !3, file: !3, line: 4296, type: !4131, scopeLine: 4297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8849 = !DILocalVariable(name: "pdev", arg: 1, scope: !8848, file: !3, line: 4296, type: !3449)
!8850 = !DILocation(line: 4296, column: 75, scope: !8848)
!8851 = !DILocation(line: 4304, column: 7, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8848, file: !3, line: 4304, column: 6)
!8853 = !DILocation(line: 4304, column: 13, scope: !8852)
!8854 = !DILocation(line: 4304, column: 20, scope: !8852)
!8855 = !DILocation(line: 4304, column: 30, scope: !8852)
!8856 = !DILocation(line: 4304, column: 6, scope: !8848)
!8857 = !DILocation(line: 4305, column: 38, scope: !8852)
!8858 = !DILocation(line: 4305, column: 3, scope: !8852)
!8859 = !DILocation(line: 4306, column: 1, scope: !8848)
!8860 = distinct !DISubprogram(name: "pci_dev_specific_acs_enabled", scope: !3, file: !3, line: 4786, type: !5857, scopeLine: 4787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8861 = !DILocalVariable(name: "dev", arg: 1, scope: !8860, file: !3, line: 4786, type: !3449)
!8862 = !DILocation(line: 4786, column: 50, scope: !8860)
!8863 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !8860, file: !3, line: 4786, type: !272)
!8864 = !DILocation(line: 4786, column: 59, scope: !8860)
!8865 = !DILocalVariable(name: "i", scope: !8860, file: !3, line: 4788, type: !8866)
!8866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!8867 = !DILocation(line: 4788, column: 36, scope: !8860)
!8868 = !DILocalVariable(name: "ret", scope: !8860, file: !3, line: 4789, type: !277)
!8869 = !DILocation(line: 4789, column: 6, scope: !8860)
!8870 = !DILocation(line: 4797, column: 9, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8860, file: !3, line: 4797, column: 2)
!8872 = !DILocation(line: 4797, column: 7, scope: !8871)
!8873 = !DILocation(line: 4797, column: 32, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 4797, column: 2)
!8875 = !DILocation(line: 4797, column: 35, scope: !8874)
!8876 = !DILocation(line: 4797, column: 2, scope: !8871)
!8877 = !DILocation(line: 4798, column: 8, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 4798, column: 7)
!8879 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 4797, column: 53)
!8880 = !DILocation(line: 4798, column: 11, scope: !8878)
!8881 = !DILocation(line: 4798, column: 21, scope: !8878)
!8882 = !DILocation(line: 4798, column: 26, scope: !8878)
!8883 = !DILocation(line: 4798, column: 18, scope: !8878)
!8884 = !DILocation(line: 4798, column: 33, scope: !8878)
!8885 = !DILocation(line: 4799, column: 8, scope: !8878)
!8886 = !DILocation(line: 4799, column: 11, scope: !8878)
!8887 = !DILocation(line: 4799, column: 18, scope: !8878)
!8888 = !DILocation(line: 4799, column: 38, scope: !8878)
!8889 = !DILocation(line: 4800, column: 8, scope: !8878)
!8890 = !DILocation(line: 4800, column: 11, scope: !8878)
!8891 = !DILocation(line: 4800, column: 21, scope: !8878)
!8892 = !DILocation(line: 4800, column: 26, scope: !8878)
!8893 = !DILocation(line: 4800, column: 18, scope: !8878)
!8894 = !DILocation(line: 4800, column: 33, scope: !8878)
!8895 = !DILocation(line: 4801, column: 8, scope: !8878)
!8896 = !DILocation(line: 4801, column: 11, scope: !8878)
!8897 = !DILocation(line: 4801, column: 18, scope: !8878)
!8898 = !DILocation(line: 4798, column: 7, scope: !8879)
!8899 = !DILocation(line: 4802, column: 10, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 4801, column: 39)
!8901 = !DILocation(line: 4802, column: 13, scope: !8900)
!8902 = !DILocation(line: 4802, column: 25, scope: !8900)
!8903 = !DILocation(line: 4802, column: 30, scope: !8900)
!8904 = !DILocation(line: 4802, column: 8, scope: !8900)
!8905 = !DILocation(line: 4803, column: 8, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 4803, column: 8)
!8907 = !DILocation(line: 4803, column: 12, scope: !8906)
!8908 = !DILocation(line: 4803, column: 8, scope: !8900)
!8909 = !DILocation(line: 4804, column: 12, scope: !8906)
!8910 = !DILocation(line: 4804, column: 5, scope: !8906)
!8911 = !DILocation(line: 4805, column: 3, scope: !8900)
!8912 = !DILocation(line: 4806, column: 2, scope: !8879)
!8913 = !DILocation(line: 4797, column: 49, scope: !8874)
!8914 = !DILocation(line: 4797, column: 2, scope: !8874)
!8915 = distinct !{!8915, !8876, !8916}
!8916 = !DILocation(line: 4806, column: 2, scope: !8871)
!8917 = !DILocation(line: 4808, column: 2, scope: !8860)
!8918 = !DILocation(line: 4809, column: 1, scope: !8860)
!8919 = distinct !DISubprogram(name: "pci_dev_specific_enable_acs", scope: !3, file: !3, line: 4990, type: !4139, scopeLine: 4991, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8920 = !DILocalVariable(name: "dev", arg: 1, scope: !8919, file: !3, line: 4990, type: !3449)
!8921 = !DILocation(line: 4990, column: 49, scope: !8919)
!8922 = !DILocalVariable(name: "p", scope: !8919, file: !3, line: 4992, type: !8923)
!8923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5870, size: 64)
!8924 = !DILocation(line: 4992, column: 32, scope: !8919)
!8925 = !DILocalVariable(name: "i", scope: !8919, file: !3, line: 4993, type: !277)
!8926 = !DILocation(line: 4993, column: 6, scope: !8919)
!8927 = !DILocalVariable(name: "ret", scope: !8919, file: !3, line: 4993, type: !277)
!8928 = !DILocation(line: 4993, column: 9, scope: !8919)
!8929 = !DILocation(line: 4995, column: 9, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 4995, column: 2)
!8931 = !DILocation(line: 4995, column: 7, scope: !8930)
!8932 = !DILocation(line: 4995, column: 14, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 4995, column: 2)
!8934 = !DILocation(line: 4995, column: 16, scope: !8933)
!8935 = !DILocation(line: 4995, column: 2, scope: !8930)
!8936 = !DILocation(line: 4996, column: 24, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 4995, column: 52)
!8938 = !DILocation(line: 4996, column: 8, scope: !8937)
!8939 = !DILocation(line: 4996, column: 5, scope: !8937)
!8940 = !DILocation(line: 4997, column: 8, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 4997, column: 7)
!8942 = !DILocation(line: 4997, column: 11, scope: !8941)
!8943 = !DILocation(line: 4997, column: 21, scope: !8941)
!8944 = !DILocation(line: 4997, column: 26, scope: !8941)
!8945 = !DILocation(line: 4997, column: 18, scope: !8941)
!8946 = !DILocation(line: 4997, column: 33, scope: !8941)
!8947 = !DILocation(line: 4998, column: 8, scope: !8941)
!8948 = !DILocation(line: 4998, column: 11, scope: !8941)
!8949 = !DILocation(line: 4998, column: 18, scope: !8941)
!8950 = !DILocation(line: 4998, column: 38, scope: !8941)
!8951 = !DILocation(line: 4999, column: 8, scope: !8941)
!8952 = !DILocation(line: 4999, column: 11, scope: !8941)
!8953 = !DILocation(line: 4999, column: 21, scope: !8941)
!8954 = !DILocation(line: 4999, column: 26, scope: !8941)
!8955 = !DILocation(line: 4999, column: 18, scope: !8941)
!8956 = !DILocation(line: 4999, column: 33, scope: !8941)
!8957 = !DILocation(line: 5000, column: 8, scope: !8941)
!8958 = !DILocation(line: 5000, column: 11, scope: !8941)
!8959 = !DILocation(line: 5000, column: 18, scope: !8941)
!8960 = !DILocation(line: 5000, column: 38, scope: !8941)
!8961 = !DILocation(line: 5001, column: 7, scope: !8941)
!8962 = !DILocation(line: 5001, column: 10, scope: !8941)
!8963 = !DILocation(line: 4997, column: 7, scope: !8937)
!8964 = !DILocation(line: 5002, column: 10, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 5001, column: 22)
!8966 = !DILocation(line: 5002, column: 13, scope: !8965)
!8967 = !DILocation(line: 5002, column: 24, scope: !8965)
!8968 = !DILocation(line: 5002, column: 8, scope: !8965)
!8969 = !DILocation(line: 5003, column: 8, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8965, file: !3, line: 5003, column: 8)
!8971 = !DILocation(line: 5003, column: 12, scope: !8970)
!8972 = !DILocation(line: 5003, column: 8, scope: !8965)
!8973 = !DILocation(line: 5004, column: 12, scope: !8970)
!8974 = !DILocation(line: 5004, column: 5, scope: !8970)
!8975 = !DILocation(line: 5005, column: 3, scope: !8965)
!8976 = !DILocation(line: 5006, column: 2, scope: !8937)
!8977 = !DILocation(line: 4995, column: 48, scope: !8933)
!8978 = !DILocation(line: 4995, column: 2, scope: !8933)
!8979 = distinct !{!8979, !8935, !8980}
!8980 = !DILocation(line: 5006, column: 2, scope: !8930)
!8981 = !DILocation(line: 5008, column: 2, scope: !8919)
!8982 = !DILocation(line: 5009, column: 1, scope: !8919)
!8983 = distinct !DISubprogram(name: "pci_dev_specific_disable_acs_redir", scope: !3, file: !3, line: 5011, type: !4139, scopeLine: 5012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !352)
!8984 = !DILocalVariable(name: "dev", arg: 1, scope: !8983, file: !3, line: 5011, type: !3449)
!8985 = !DILocation(line: 5011, column: 56, scope: !8983)
!8986 = !DILocalVariable(name: "p", scope: !8983, file: !3, line: 5013, type: !8923)
!8987 = !DILocation(line: 5013, column: 32, scope: !8983)
!8988 = !DILocalVariable(name: "i", scope: !8983, file: !3, line: 5014, type: !277)
!8989 = !DILocation(line: 5014, column: 6, scope: !8983)
!8990 = !DILocalVariable(name: "ret", scope: !8983, file: !3, line: 5014, type: !277)
!8991 = !DILocation(line: 5014, column: 9, scope: !8983)
!8992 = !DILocation(line: 5016, column: 9, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 5016, column: 2)
!8994 = !DILocation(line: 5016, column: 7, scope: !8993)
!8995 = !DILocation(line: 5016, column: 14, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 5016, column: 2)
!8997 = !DILocation(line: 5016, column: 16, scope: !8996)
!8998 = !DILocation(line: 5016, column: 2, scope: !8993)
!8999 = !DILocation(line: 5017, column: 24, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 5016, column: 52)
!9001 = !DILocation(line: 5017, column: 8, scope: !9000)
!9002 = !DILocation(line: 5017, column: 5, scope: !9000)
!9003 = !DILocation(line: 5018, column: 8, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 5018, column: 7)
!9005 = !DILocation(line: 5018, column: 11, scope: !9004)
!9006 = !DILocation(line: 5018, column: 21, scope: !9004)
!9007 = !DILocation(line: 5018, column: 26, scope: !9004)
!9008 = !DILocation(line: 5018, column: 18, scope: !9004)
!9009 = !DILocation(line: 5018, column: 33, scope: !9004)
!9010 = !DILocation(line: 5019, column: 8, scope: !9004)
!9011 = !DILocation(line: 5019, column: 11, scope: !9004)
!9012 = !DILocation(line: 5019, column: 18, scope: !9004)
!9013 = !DILocation(line: 5019, column: 38, scope: !9004)
!9014 = !DILocation(line: 5020, column: 8, scope: !9004)
!9015 = !DILocation(line: 5020, column: 11, scope: !9004)
!9016 = !DILocation(line: 5020, column: 21, scope: !9004)
!9017 = !DILocation(line: 5020, column: 26, scope: !9004)
!9018 = !DILocation(line: 5020, column: 18, scope: !9004)
!9019 = !DILocation(line: 5020, column: 33, scope: !9004)
!9020 = !DILocation(line: 5021, column: 8, scope: !9004)
!9021 = !DILocation(line: 5021, column: 11, scope: !9004)
!9022 = !DILocation(line: 5021, column: 18, scope: !9004)
!9023 = !DILocation(line: 5021, column: 38, scope: !9004)
!9024 = !DILocation(line: 5022, column: 7, scope: !9004)
!9025 = !DILocation(line: 5022, column: 10, scope: !9004)
!9026 = !DILocation(line: 5018, column: 7, scope: !9000)
!9027 = !DILocation(line: 5023, column: 10, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 5022, column: 29)
!9029 = !DILocation(line: 5023, column: 13, scope: !9028)
!9030 = !DILocation(line: 5023, column: 31, scope: !9028)
!9031 = !DILocation(line: 5023, column: 8, scope: !9028)
!9032 = !DILocation(line: 5024, column: 8, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 5024, column: 8)
!9034 = !DILocation(line: 5024, column: 12, scope: !9033)
!9035 = !DILocation(line: 5024, column: 8, scope: !9028)
!9036 = !DILocation(line: 5025, column: 12, scope: !9033)
!9037 = !DILocation(line: 5025, column: 5, scope: !9033)
!9038 = !DILocation(line: 5026, column: 3, scope: !9028)
!9039 = !DILocation(line: 5027, column: 2, scope: !9000)
!9040 = !DILocation(line: 5016, column: 48, scope: !8996)
!9041 = !DILocation(line: 5016, column: 2, scope: !8996)
!9042 = distinct !{!9042, !8998, !9043}
!9043 = !DILocation(line: 5027, column: 2, scope: !8993)
!9044 = !DILocation(line: 5029, column: 2, scope: !8983)
!9045 = !DILocation(line: 5030, column: 1, scope: !8983)
!9046 = distinct !DISubprogram(name: "quirk_intel_qat_vf_cap", scope: !3, file: !3, line: 5039, type: !4131, scopeLine: 5040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9047 = !DILocalVariable(name: "pdev", arg: 1, scope: !9046, file: !3, line: 5039, type: !3449)
!9048 = !DILocation(line: 5039, column: 52, scope: !9046)
!9049 = !DILocalVariable(name: "pos", scope: !9046, file: !3, line: 5041, type: !277)
!9050 = !DILocation(line: 5041, column: 6, scope: !9046)
!9051 = !DILocalVariable(name: "i", scope: !9046, file: !3, line: 5041, type: !277)
!9052 = !DILocation(line: 5041, column: 11, scope: !9046)
!9053 = !DILocalVariable(name: "next_cap", scope: !9046, file: !3, line: 5042, type: !465)
!9054 = !DILocation(line: 5042, column: 5, scope: !9046)
!9055 = !DILocalVariable(name: "reg16", scope: !9046, file: !3, line: 5043, type: !272)
!9056 = !DILocation(line: 5043, column: 6, scope: !9046)
!9057 = !DILocalVariable(name: "cap", scope: !9046, file: !3, line: 5043, type: !4583)
!9058 = !DILocation(line: 5043, column: 14, scope: !9046)
!9059 = !DILocalVariable(name: "state", scope: !9046, file: !3, line: 5044, type: !9060)
!9060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9061, size: 64)
!9061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_cap_saved_state", file: !6, line: 297, size: 192, elements: !9062)
!9062 = !{!9063, !9064}
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9061, file: !6, line: 298, baseType: !808, size: 128)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !9061, file: !6, line: 299, baseType: !9065, size: 64, offset: 128)
!9065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_cap_saved_data", file: !6, line: 290, size: 64, elements: !9066)
!9066 = !{!9067, !9068, !9069, !9070}
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "cap_nr", scope: !9065, file: !6, line: 291, baseType: !272, size: 16)
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "cap_extended", scope: !9065, file: !6, line: 292, baseType: !752, size: 8, offset: 16)
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9065, file: !6, line: 293, baseType: !7, size: 32, offset: 32)
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9065, file: !6, line: 294, baseType: !9071, offset: 64)
!9071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, elements: !2755)
!9072 = !DILocation(line: 5044, column: 30, scope: !9046)
!9073 = !DILocation(line: 5047, column: 6, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 5047, column: 6)
!9075 = !DILocation(line: 5047, column: 12, scope: !9074)
!9076 = !DILocation(line: 5047, column: 21, scope: !9074)
!9077 = !DILocation(line: 5047, column: 44, scope: !9074)
!9078 = !DILocation(line: 5047, column: 24, scope: !9074)
!9079 = !DILocation(line: 5047, column: 6, scope: !9046)
!9080 = !DILocation(line: 5048, column: 3, scope: !9074)
!9081 = !DILocation(line: 5051, column: 28, scope: !9046)
!9082 = !DILocation(line: 5051, column: 8, scope: !9046)
!9083 = !DILocation(line: 5051, column: 6, scope: !9046)
!9084 = !DILocation(line: 5052, column: 7, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 5052, column: 6)
!9086 = !DILocation(line: 5052, column: 6, scope: !9046)
!9087 = !DILocation(line: 5053, column: 3, scope: !9085)
!9088 = !DILocation(line: 5059, column: 23, scope: !9046)
!9089 = !DILocation(line: 5059, column: 29, scope: !9046)
!9090 = !DILocation(line: 5059, column: 33, scope: !9046)
!9091 = !DILocation(line: 5059, column: 2, scope: !9046)
!9092 = !DILocation(line: 5060, column: 6, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 5060, column: 6)
!9094 = !DILocation(line: 5060, column: 6, scope: !9046)
!9095 = !DILocation(line: 5061, column: 3, scope: !9093)
!9096 = !DILocation(line: 5071, column: 6, scope: !9046)
!9097 = !DILocation(line: 5072, column: 23, scope: !9046)
!9098 = !DILocation(line: 5072, column: 29, scope: !9046)
!9099 = !DILocation(line: 5072, column: 2, scope: !9046)
!9100 = !DILocation(line: 5073, column: 6, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 5073, column: 6)
!9102 = !DILocation(line: 5073, column: 12, scope: !9101)
!9103 = !DILocation(line: 5073, column: 6, scope: !9046)
!9104 = !DILocalVariable(name: "status", scope: !9105, file: !3, line: 5074, type: !278)
!9105 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 5073, column: 42)
!9106 = !DILocation(line: 5074, column: 7, scope: !9105)
!9107 = !DILocalVariable(name: "size", scope: !9105, file: !3, line: 5078, type: !277)
!9108 = !DILocation(line: 5078, column: 7, scope: !9105)
!9109 = !DILocation(line: 5080, column: 20, scope: !9105)
!9110 = !DILocation(line: 5080, column: 3, scope: !9105)
!9111 = !DILocation(line: 5080, column: 9, scope: !9105)
!9112 = !DILocation(line: 5080, column: 18, scope: !9105)
!9113 = !DILocation(line: 5081, column: 24, scope: !9105)
!9114 = !DILocation(line: 5081, column: 30, scope: !9105)
!9115 = !DILocation(line: 5081, column: 34, scope: !9105)
!9116 = !DILocation(line: 5081, column: 3, scope: !9105)
!9117 = !DILocation(line: 5082, column: 26, scope: !9105)
!9118 = !DILocation(line: 5082, column: 3, scope: !9105)
!9119 = !DILocation(line: 5082, column: 9, scope: !9105)
!9120 = !DILocation(line: 5082, column: 24, scope: !9105)
!9121 = !DILocation(line: 5083, column: 24, scope: !9105)
!9122 = !DILocation(line: 5083, column: 30, scope: !9105)
!9123 = !DILocation(line: 5083, column: 34, scope: !9105)
!9124 = !DILocation(line: 5083, column: 3, scope: !9105)
!9125 = !DILocation(line: 5084, column: 21, scope: !9105)
!9126 = !DILocation(line: 5084, column: 27, scope: !9105)
!9127 = !DILocation(line: 5084, column: 3, scope: !9105)
!9128 = !DILocation(line: 5084, column: 9, scope: !9105)
!9129 = !DILocation(line: 5084, column: 19, scope: !9105)
!9130 = !DILocation(line: 5086, column: 3, scope: !9105)
!9131 = !DILocation(line: 5086, column: 9, scope: !9105)
!9132 = !DILocation(line: 5086, column: 18, scope: !9105)
!9133 = !DILocation(line: 5087, column: 29, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 5087, column: 7)
!9135 = !DILocation(line: 5087, column: 7, scope: !9134)
!9136 = !DILocation(line: 5087, column: 64, scope: !9134)
!9137 = !DILocation(line: 5088, column: 26, scope: !9134)
!9138 = !DILocation(line: 5088, column: 30, scope: !9134)
!9139 = !DILocation(line: 5088, column: 37, scope: !9134)
!9140 = !DILocation(line: 5087, column: 7, scope: !9105)
!9141 = !DILocation(line: 5089, column: 4, scope: !9134)
!9142 = !DILocation(line: 5089, column: 10, scope: !9134)
!9143 = !DILocation(line: 5089, column: 19, scope: !9134)
!9144 = !DILocation(line: 5091, column: 26, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 5091, column: 7)
!9146 = !DILocation(line: 5091, column: 7, scope: !9145)
!9147 = !DILocation(line: 5091, column: 7, scope: !9105)
!9148 = !DILocation(line: 5092, column: 4, scope: !9145)
!9149 = !DILocation(line: 5095, column: 36, scope: !9105)
!9150 = !DILocation(line: 5095, column: 34, scope: !9105)
!9151 = !DILocation(line: 5095, column: 11, scope: !9105)
!9152 = !DILocation(line: 5095, column: 9, scope: !9105)
!9153 = !DILocation(line: 5096, column: 8, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 5096, column: 7)
!9155 = !DILocation(line: 5096, column: 7, scope: !9105)
!9156 = !DILocation(line: 5097, column: 4, scope: !9154)
!9157 = !DILocation(line: 5099, column: 3, scope: !9105)
!9158 = !DILocation(line: 5099, column: 10, scope: !9105)
!9159 = !DILocation(line: 5099, column: 14, scope: !9105)
!9160 = !DILocation(line: 5099, column: 21, scope: !9105)
!9161 = !DILocation(line: 5100, column: 3, scope: !9105)
!9162 = !DILocation(line: 5100, column: 10, scope: !9105)
!9163 = !DILocation(line: 5100, column: 14, scope: !9105)
!9164 = !DILocation(line: 5100, column: 27, scope: !9105)
!9165 = !DILocation(line: 5101, column: 21, scope: !9105)
!9166 = !DILocation(line: 5101, column: 3, scope: !9105)
!9167 = !DILocation(line: 5101, column: 10, scope: !9105)
!9168 = !DILocation(line: 5101, column: 14, scope: !9105)
!9169 = !DILocation(line: 5101, column: 19, scope: !9105)
!9170 = !DILocation(line: 5102, column: 17, scope: !9105)
!9171 = !DILocation(line: 5102, column: 24, scope: !9105)
!9172 = !DILocation(line: 5102, column: 28, scope: !9105)
!9173 = !DILocation(line: 5102, column: 9, scope: !9105)
!9174 = !DILocation(line: 5102, column: 7, scope: !9105)
!9175 = !DILocation(line: 5103, column: 29, scope: !9105)
!9176 = !DILocation(line: 5103, column: 52, scope: !9105)
!9177 = !DILocation(line: 5103, column: 57, scope: !9105)
!9178 = !DILocation(line: 5103, column: 3, scope: !9105)
!9179 = !DILocation(line: 5104, column: 29, scope: !9105)
!9180 = !DILocation(line: 5104, column: 52, scope: !9105)
!9181 = !DILocation(line: 5104, column: 57, scope: !9105)
!9182 = !DILocation(line: 5104, column: 3, scope: !9105)
!9183 = !DILocation(line: 5105, column: 29, scope: !9105)
!9184 = !DILocation(line: 5105, column: 52, scope: !9105)
!9185 = !DILocation(line: 5105, column: 57, scope: !9105)
!9186 = !DILocation(line: 5105, column: 3, scope: !9105)
!9187 = !DILocation(line: 5106, column: 29, scope: !9105)
!9188 = !DILocation(line: 5106, column: 52, scope: !9105)
!9189 = !DILocation(line: 5106, column: 57, scope: !9105)
!9190 = !DILocation(line: 5106, column: 3, scope: !9105)
!9191 = !DILocation(line: 5107, column: 29, scope: !9105)
!9192 = !DILocation(line: 5107, column: 53, scope: !9105)
!9193 = !DILocation(line: 5107, column: 58, scope: !9105)
!9194 = !DILocation(line: 5107, column: 3, scope: !9105)
!9195 = !DILocation(line: 5108, column: 29, scope: !9105)
!9196 = !DILocation(line: 5108, column: 53, scope: !9105)
!9197 = !DILocation(line: 5108, column: 58, scope: !9105)
!9198 = !DILocation(line: 5108, column: 3, scope: !9105)
!9199 = !DILocation(line: 5109, column: 29, scope: !9105)
!9200 = !DILocation(line: 5109, column: 53, scope: !9105)
!9201 = !DILocation(line: 5109, column: 58, scope: !9105)
!9202 = !DILocation(line: 5109, column: 3, scope: !9105)
!9203 = !DILocation(line: 5110, column: 19, scope: !9105)
!9204 = !DILocation(line: 5110, column: 26, scope: !9105)
!9205 = !DILocation(line: 5110, column: 33, scope: !9105)
!9206 = !DILocation(line: 5110, column: 39, scope: !9105)
!9207 = !DILocation(line: 5110, column: 3, scope: !9105)
!9208 = !DILocation(line: 5111, column: 2, scope: !9105)
!9209 = !DILocation(line: 5112, column: 1, scope: !9046)
!9210 = distinct !DISubprogram(name: "quirk_no_flr", scope: !3, file: !3, line: 5125, type: !4131, scopeLine: 5126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9211 = !DILocalVariable(name: "dev", arg: 1, scope: !9210, file: !3, line: 5125, type: !3449)
!9212 = !DILocation(line: 5125, column: 42, scope: !9210)
!9213 = !DILocation(line: 5127, column: 2, scope: !9210)
!9214 = !DILocation(line: 5127, column: 7, scope: !9210)
!9215 = !DILocation(line: 5127, column: 17, scope: !9210)
!9216 = !DILocation(line: 5128, column: 1, scope: !9210)
!9217 = distinct !DISubprogram(name: "quirk_no_ext_tags", scope: !3, file: !3, line: 5135, type: !4131, scopeLine: 5136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9218 = !DILocalVariable(name: "pdev", arg: 1, scope: !9217, file: !3, line: 5135, type: !3449)
!9219 = !DILocation(line: 5135, column: 47, scope: !9217)
!9220 = !DILocalVariable(name: "bridge", scope: !9217, file: !3, line: 5137, type: !9221)
!9221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9222, size: 64)
!9222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_host_bridge", file: !6, line: 524, size: 6656, elements: !9223)
!9223 = !{!9224, !9225, !9226, !9227, !9228, !9229, !9230, !9231, !9232, !9236, !9242, !9246, !9247, !9248, !9249, !9250, !9251, !9252, !9253, !9254, !9255, !9256, !9257, !9258, !9264}
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9222, file: !6, line: 525, baseType: !3525, size: 5568)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9222, file: !6, line: 526, baseType: !3454, size: 64, offset: 5568)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9222, file: !6, line: 527, baseType: !3481, size: 64, offset: 5632)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "child_ops", scope: !9222, file: !6, line: 528, baseType: !3481, size: 64, offset: 5696)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !9222, file: !6, line: 529, baseType: !280, size: 64, offset: 5760)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "busnr", scope: !9222, file: !6, line: 530, baseType: !277, size: 32, offset: 5824)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !9222, file: !6, line: 531, baseType: !336, size: 128, offset: 5888)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ranges", scope: !9222, file: !6, line: 532, baseType: !336, size: 128, offset: 6016)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "swizzle_irq", scope: !9222, file: !6, line: 533, baseType: !9233, size: 64, offset: 6144)
!9233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9234, size: 64)
!9234 = !DISubroutineType(types: !9235)
!9235 = !{!465, !3449, !4390}
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "map_irq", scope: !9222, file: !6, line: 534, baseType: !9237, size: 64, offset: 6208)
!9237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9238, size: 64)
!9238 = !DISubroutineType(types: !9239)
!9239 = !{!277, !9240, !465, !465}
!9240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9241, size: 64)
!9241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3450)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "release_fn", scope: !9222, file: !6, line: 535, baseType: !9243, size: 64, offset: 6272)
!9243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9244, size: 64)
!9244 = !DISubroutineType(types: !9245)
!9245 = !{null, !9221}
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "release_data", scope: !9222, file: !6, line: 536, baseType: !280, size: 64, offset: 6336)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !9222, file: !6, line: 537, baseType: !3505, size: 64, offset: 6400)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_reset_delay", scope: !9222, file: !6, line: 538, baseType: !7, size: 1, offset: 6464, flags: DIFlagBitField, extraData: i64 6464)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "no_ext_tags", scope: !9222, file: !6, line: 539, baseType: !7, size: 1, offset: 6465, flags: DIFlagBitField, extraData: i64 6464)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "native_aer", scope: !9222, file: !6, line: 540, baseType: !7, size: 1, offset: 6466, flags: DIFlagBitField, extraData: i64 6464)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "native_pcie_hotplug", scope: !9222, file: !6, line: 541, baseType: !7, size: 1, offset: 6467, flags: DIFlagBitField, extraData: i64 6464)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "native_shpc_hotplug", scope: !9222, file: !6, line: 542, baseType: !7, size: 1, offset: 6468, flags: DIFlagBitField, extraData: i64 6464)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "native_pme", scope: !9222, file: !6, line: 543, baseType: !7, size: 1, offset: 6469, flags: DIFlagBitField, extraData: i64 6464)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "native_ltr", scope: !9222, file: !6, line: 544, baseType: !7, size: 1, offset: 6470, flags: DIFlagBitField, extraData: i64 6464)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "native_dpc", scope: !9222, file: !6, line: 545, baseType: !7, size: 1, offset: 6471, flags: DIFlagBitField, extraData: i64 6464)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_config", scope: !9222, file: !6, line: 546, baseType: !7, size: 1, offset: 6472, flags: DIFlagBitField, extraData: i64 6464)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "size_windows", scope: !9222, file: !6, line: 547, baseType: !7, size: 1, offset: 6473, flags: DIFlagBitField, extraData: i64 6464)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "align_resource", scope: !9222, file: !6, line: 550, baseType: !9259, size: 64, offset: 6528)
!9259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9260, size: 64)
!9260 = !DISubroutineType(types: !9261)
!9261 = !{!3470, !3449, !9262, !3470, !3470, !3470}
!9262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9263, size: 64)
!9263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3466)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !9222, file: !6, line: 555, baseType: !2754, align: 512, offset: 6656)
!9265 = !DILocation(line: 5137, column: 26, scope: !9217)
!9266 = !DILocation(line: 5137, column: 56, scope: !9217)
!9267 = !DILocation(line: 5137, column: 62, scope: !9217)
!9268 = !DILocation(line: 5137, column: 35, scope: !9217)
!9269 = !DILocation(line: 5139, column: 7, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 5139, column: 6)
!9271 = !DILocation(line: 5139, column: 6, scope: !9217)
!9272 = !DILocation(line: 5140, column: 3, scope: !9270)
!9273 = !DILocation(line: 5142, column: 2, scope: !9217)
!9274 = !DILocation(line: 5142, column: 10, scope: !9217)
!9275 = !DILocation(line: 5142, column: 22, scope: !9217)
!9276 = !DILocation(line: 5143, column: 2, scope: !9217)
!9277 = !DILocation(line: 5145, column: 15, scope: !9217)
!9278 = !DILocation(line: 5145, column: 23, scope: !9217)
!9279 = !DILocation(line: 5145, column: 2, scope: !9217)
!9280 = !DILocation(line: 5146, column: 1, scope: !9217)
!9281 = distinct !DISubprogram(name: "quirk_amd_harvest_no_ats", scope: !3, file: !3, line: 5161, type: !4131, scopeLine: 5162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9282 = !DILocalVariable(name: "pdev", arg: 1, scope: !9281, file: !3, line: 5161, type: !3449)
!9283 = !DILocation(line: 5161, column: 54, scope: !9281)
!9284 = !DILocation(line: 5163, column: 7, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 5163, column: 6)
!9286 = !DILocation(line: 5163, column: 13, scope: !9285)
!9287 = !DILocation(line: 5163, column: 20, scope: !9285)
!9288 = !DILocation(line: 5163, column: 30, scope: !9285)
!9289 = !DILocation(line: 5163, column: 33, scope: !9285)
!9290 = !DILocation(line: 5163, column: 39, scope: !9285)
!9291 = !DILocation(line: 5163, column: 48, scope: !9285)
!9292 = !DILocation(line: 5163, column: 57, scope: !9285)
!9293 = !DILocation(line: 5164, column: 7, scope: !9285)
!9294 = !DILocation(line: 5164, column: 13, scope: !9285)
!9295 = !DILocation(line: 5164, column: 20, scope: !9285)
!9296 = !DILocation(line: 5164, column: 30, scope: !9285)
!9297 = !DILocation(line: 5164, column: 33, scope: !9285)
!9298 = !DILocation(line: 5164, column: 39, scope: !9285)
!9299 = !DILocation(line: 5164, column: 48, scope: !9285)
!9300 = !DILocation(line: 5163, column: 6, scope: !9281)
!9301 = !DILocation(line: 5165, column: 3, scope: !9285)
!9302 = !DILocation(line: 5167, column: 2, scope: !9281)
!9303 = !DILocation(line: 5168, column: 2, scope: !9281)
!9304 = !DILocation(line: 5168, column: 8, scope: !9281)
!9305 = !DILocation(line: 5168, column: 16, scope: !9281)
!9306 = !DILocation(line: 5169, column: 1, scope: !9281)
!9307 = distinct !DISubprogram(name: "quirk_fsl_no_msi", scope: !3, file: !3, line: 5182, type: !4131, scopeLine: 5183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9308 = !DILocalVariable(name: "pdev", arg: 1, scope: !9307, file: !3, line: 5182, type: !3449)
!9309 = !DILocation(line: 5182, column: 46, scope: !9307)
!9310 = !DILocation(line: 5184, column: 20, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 5184, column: 6)
!9312 = !DILocation(line: 5184, column: 6, scope: !9311)
!9313 = !DILocation(line: 5184, column: 26, scope: !9311)
!9314 = !DILocation(line: 5184, column: 6, scope: !9307)
!9315 = !DILocation(line: 5185, column: 3, scope: !9311)
!9316 = !DILocation(line: 5185, column: 9, scope: !9311)
!9317 = !DILocation(line: 5185, column: 16, scope: !9311)
!9318 = !DILocation(line: 5186, column: 1, scope: !9307)
!9319 = distinct !DISubprogram(name: "quirk_gpu_hda", scope: !3, file: !3, line: 5230, type: !4131, scopeLine: 5231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9320 = !DILocalVariable(name: "hda", arg: 1, scope: !9319, file: !3, line: 5230, type: !3449)
!9321 = !DILocation(line: 5230, column: 43, scope: !9319)
!9322 = !DILocation(line: 5232, column: 25, scope: !9319)
!9323 = !DILocation(line: 5232, column: 2, scope: !9319)
!9324 = !DILocation(line: 5233, column: 1, scope: !9319)
!9325 = distinct !DISubprogram(name: "quirk_gpu_usb", scope: !3, file: !3, line: 5245, type: !4131, scopeLine: 5246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9326 = !DILocalVariable(name: "usb", arg: 1, scope: !9325, file: !3, line: 5245, type: !3449)
!9327 = !DILocation(line: 5245, column: 43, scope: !9325)
!9328 = !DILocation(line: 5247, column: 25, scope: !9325)
!9329 = !DILocation(line: 5247, column: 2, scope: !9325)
!9330 = !DILocation(line: 5248, column: 1, scope: !9325)
!9331 = distinct !DISubprogram(name: "quirk_gpu_usb_typec_ucsi", scope: !3, file: !3, line: 5259, type: !4131, scopeLine: 5260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9332 = !DILocalVariable(name: "ucsi", arg: 1, scope: !9331, file: !3, line: 5259, type: !3449)
!9333 = !DILocation(line: 5259, column: 54, scope: !9331)
!9334 = !DILocation(line: 5261, column: 25, scope: !9331)
!9335 = !DILocation(line: 5261, column: 2, scope: !9331)
!9336 = !DILocation(line: 5262, column: 1, scope: !9331)
!9337 = distinct !DISubprogram(name: "quirk_nvidia_hda", scope: !3, file: !3, line: 5271, type: !4131, scopeLine: 5272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9338 = !DILocalVariable(name: "gpu", arg: 1, scope: !9337, file: !3, line: 5271, type: !3449)
!9339 = !DILocation(line: 5271, column: 46, scope: !9337)
!9340 = !DILocalVariable(name: "hdr_type", scope: !9337, file: !3, line: 5273, type: !465)
!9341 = !DILocation(line: 5273, column: 5, scope: !9337)
!9342 = !DILocalVariable(name: "val", scope: !9337, file: !3, line: 5274, type: !278)
!9343 = !DILocation(line: 5274, column: 6, scope: !9337)
!9344 = !DILocation(line: 5277, column: 6, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 5277, column: 6)
!9346 = !DILocation(line: 5277, column: 11, scope: !9345)
!9347 = !DILocation(line: 5277, column: 18, scope: !9345)
!9348 = !DILocation(line: 5277, column: 6, scope: !9337)
!9349 = !DILocation(line: 5278, column: 3, scope: !9345)
!9350 = !DILocation(line: 5281, column: 24, scope: !9337)
!9351 = !DILocation(line: 5281, column: 2, scope: !9337)
!9352 = !DILocation(line: 5282, column: 6, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 5282, column: 6)
!9354 = !DILocation(line: 5282, column: 10, scope: !9353)
!9355 = !DILocation(line: 5282, column: 6, scope: !9337)
!9356 = !DILocation(line: 5283, column: 3, scope: !9353)
!9357 = !DILocation(line: 5285, column: 2, scope: !9337)
!9358 = !DILocation(line: 5286, column: 25, scope: !9337)
!9359 = !DILocation(line: 5286, column: 37, scope: !9337)
!9360 = !DILocation(line: 5286, column: 41, scope: !9337)
!9361 = !DILocation(line: 5286, column: 2, scope: !9337)
!9362 = !DILocation(line: 5289, column: 23, scope: !9337)
!9363 = !DILocation(line: 5289, column: 2, scope: !9337)
!9364 = !DILocation(line: 5290, column: 26, scope: !9337)
!9365 = !DILocation(line: 5290, column: 35, scope: !9337)
!9366 = !DILocation(line: 5290, column: 24, scope: !9337)
!9367 = !DILocation(line: 5290, column: 23, scope: !9337)
!9368 = !DILocation(line: 5290, column: 2, scope: !9337)
!9369 = !DILocation(line: 5290, column: 7, scope: !9337)
!9370 = !DILocation(line: 5290, column: 21, scope: !9337)
!9371 = !DILocation(line: 5291, column: 1, scope: !9337)
!9372 = distinct !DISubprogram(name: "pci_idt_bus_quirk", scope: !3, file: !3, line: 5322, type: !9373, scopeLine: 5323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9373 = !DISubroutineType(types: !9374)
!9374 = !{!277, !3454, !277, !2794, !277}
!9375 = !DILocalVariable(name: "bus", arg: 1, scope: !9372, file: !3, line: 5322, type: !3454)
!9376 = !DILocation(line: 5322, column: 39, scope: !9372)
!9377 = !DILocalVariable(name: "devfn", arg: 2, scope: !9372, file: !3, line: 5322, type: !277)
!9378 = !DILocation(line: 5322, column: 48, scope: !9372)
!9379 = !DILocalVariable(name: "l", arg: 3, scope: !9372, file: !3, line: 5322, type: !2794)
!9380 = !DILocation(line: 5322, column: 60, scope: !9372)
!9381 = !DILocalVariable(name: "timeout", arg: 4, scope: !9372, file: !3, line: 5322, type: !277)
!9382 = !DILocation(line: 5322, column: 67, scope: !9372)
!9383 = !DILocalVariable(name: "pos", scope: !9372, file: !3, line: 5324, type: !277)
!9384 = !DILocation(line: 5324, column: 6, scope: !9372)
!9385 = !DILocalVariable(name: "ctrl", scope: !9372, file: !3, line: 5325, type: !272)
!9386 = !DILocation(line: 5325, column: 6, scope: !9372)
!9387 = !DILocalVariable(name: "found", scope: !9372, file: !3, line: 5326, type: !752)
!9388 = !DILocation(line: 5326, column: 7, scope: !9372)
!9389 = !DILocalVariable(name: "bridge", scope: !9372, file: !3, line: 5327, type: !3449)
!9390 = !DILocation(line: 5327, column: 18, scope: !9372)
!9391 = !DILocation(line: 5327, column: 27, scope: !9372)
!9392 = !DILocation(line: 5327, column: 32, scope: !9372)
!9393 = !DILocation(line: 5329, column: 8, scope: !9372)
!9394 = !DILocation(line: 5329, column: 16, scope: !9372)
!9395 = !DILocation(line: 5329, column: 6, scope: !9372)
!9396 = !DILocation(line: 5332, column: 6, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 5332, column: 6)
!9398 = !DILocation(line: 5332, column: 6, scope: !9372)
!9399 = !DILocation(line: 5333, column: 24, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9397, file: !3, line: 5332, column: 11)
!9401 = !DILocation(line: 5333, column: 32, scope: !9400)
!9402 = !DILocation(line: 5333, column: 36, scope: !9400)
!9403 = !DILocation(line: 5333, column: 3, scope: !9400)
!9404 = !DILocation(line: 5334, column: 7, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 5334, column: 7)
!9406 = !DILocation(line: 5334, column: 12, scope: !9405)
!9407 = !DILocation(line: 5334, column: 7, scope: !9400)
!9408 = !DILocation(line: 5335, column: 26, scope: !9405)
!9409 = !DILocation(line: 5335, column: 34, scope: !9405)
!9410 = !DILocation(line: 5335, column: 38, scope: !9405)
!9411 = !DILocation(line: 5336, column: 12, scope: !9405)
!9412 = !DILocation(line: 5336, column: 17, scope: !9405)
!9413 = !DILocation(line: 5335, column: 4, scope: !9405)
!9414 = !DILocation(line: 5337, column: 2, scope: !9400)
!9415 = !DILocation(line: 5339, column: 45, scope: !9372)
!9416 = !DILocation(line: 5339, column: 50, scope: !9372)
!9417 = !DILocation(line: 5339, column: 57, scope: !9372)
!9418 = !DILocation(line: 5339, column: 60, scope: !9372)
!9419 = !DILocation(line: 5339, column: 10, scope: !9372)
!9420 = !DILocation(line: 5339, column: 8, scope: !9372)
!9421 = !DILocation(line: 5342, column: 6, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 5342, column: 6)
!9423 = !DILocation(line: 5342, column: 6, scope: !9372)
!9424 = !DILocation(line: 5343, column: 29, scope: !9422)
!9425 = !DILocation(line: 5343, column: 34, scope: !9422)
!9426 = !DILocation(line: 5343, column: 3, scope: !9422)
!9427 = !DILocation(line: 5346, column: 6, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 5346, column: 6)
!9429 = !DILocation(line: 5346, column: 11, scope: !9428)
!9430 = !DILocation(line: 5346, column: 6, scope: !9372)
!9431 = !DILocation(line: 5347, column: 25, scope: !9428)
!9432 = !DILocation(line: 5347, column: 33, scope: !9428)
!9433 = !DILocation(line: 5347, column: 37, scope: !9428)
!9434 = !DILocation(line: 5347, column: 53, scope: !9428)
!9435 = !DILocation(line: 5347, column: 3, scope: !9428)
!9436 = !DILocation(line: 5349, column: 9, scope: !9372)
!9437 = !DILocation(line: 5349, column: 2, scope: !9372)
!9438 = distinct !DISubprogram(name: "quirk_switchtec_ntb_dma_alias", scope: !3, file: !3, line: 5359, type: !4131, scopeLine: 5360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9439 = !DILocalVariable(name: "pdev", arg: 1, scope: !9438, file: !3, line: 5359, type: !3449)
!9440 = !DILocation(line: 5359, column: 59, scope: !9438)
!9441 = !DILocalVariable(name: "mmio", scope: !9438, file: !3, line: 5361, type: !280)
!9442 = !DILocation(line: 5361, column: 16, scope: !9438)
!9443 = !DILocalVariable(name: "mmio_ntb", scope: !9438, file: !3, line: 5362, type: !9444)
!9444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9445, size: 64)
!9445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ntb_info_regs", file: !256, line: 277, size: 6400, elements: !9446)
!9446 = !{!9447, !9448, !9449, !9450, !9451, !9452, !9453, !9455}
!9447 = !DIDerivedType(tag: DW_TAG_member, name: "partition_count", scope: !9445, file: !256, line: 278, baseType: !465, size: 8)
!9448 = !DIDerivedType(tag: DW_TAG_member, name: "partition_id", scope: !9445, file: !256, line: 279, baseType: !465, size: 8, offset: 8)
!9449 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !9445, file: !256, line: 280, baseType: !272, size: 16, offset: 16)
!9450 = !DIDerivedType(tag: DW_TAG_member, name: "ep_map", scope: !9445, file: !256, line: 281, baseType: !343, size: 64, offset: 32)
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "requester_id", scope: !9445, file: !256, line: 282, baseType: !272, size: 16, offset: 96)
!9452 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !9445, file: !256, line: 283, baseType: !272, size: 16, offset: 112)
!9453 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !9445, file: !256, line: 284, baseType: !9454, size: 128, offset: 128)
!9454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 128, elements: !1683)
!9455 = !DIDerivedType(tag: DW_TAG_member, name: "ntp_info", scope: !9445, file: !256, line: 290, baseType: !9456, size: 6144, offset: 256)
!9456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9457, size: 6144, elements: !3518)
!9457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nt_partition_info", file: !256, line: 285, size: 128, elements: !9458)
!9458 = !{!9459, !9460, !9461, !9462}
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "xlink_enabled", scope: !9457, file: !256, line: 286, baseType: !278, size: 32)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "target_part_low", scope: !9457, file: !256, line: 287, baseType: !278, size: 32, offset: 32)
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "target_part_high", scope: !9457, file: !256, line: 288, baseType: !278, size: 32, offset: 64)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9457, file: !256, line: 289, baseType: !278, size: 32, offset: 96)
!9463 = !DILocation(line: 5362, column: 32, scope: !9438)
!9464 = !DILocalVariable(name: "mmio_ctrl", scope: !9438, file: !3, line: 5363, type: !9465)
!9465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9466, size: 64)
!9466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ntb_ctrl_regs", file: !256, line: 343, size: 65536, elements: !9467)
!9467 = !{!9468, !9469, !9470, !9471, !9472, !9473, !9474, !9475, !9476, !9477, !9478, !9479, !9481, !9488, !9495, !9499, !9503, !9507}
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "partition_status", scope: !9466, file: !256, line: 344, baseType: !278, size: 32)
!9469 = !DIDerivedType(tag: DW_TAG_member, name: "partition_op", scope: !9466, file: !256, line: 345, baseType: !278, size: 32, offset: 32)
!9470 = !DIDerivedType(tag: DW_TAG_member, name: "partition_ctrl", scope: !9466, file: !256, line: 346, baseType: !278, size: 32, offset: 64)
!9471 = !DIDerivedType(tag: DW_TAG_member, name: "bar_setup", scope: !9466, file: !256, line: 347, baseType: !278, size: 32, offset: 96)
!9472 = !DIDerivedType(tag: DW_TAG_member, name: "bar_error", scope: !9466, file: !256, line: 348, baseType: !278, size: 32, offset: 128)
!9473 = !DIDerivedType(tag: DW_TAG_member, name: "lut_table_entries", scope: !9466, file: !256, line: 349, baseType: !272, size: 16, offset: 160)
!9474 = !DIDerivedType(tag: DW_TAG_member, name: "lut_table_offset", scope: !9466, file: !256, line: 350, baseType: !272, size: 16, offset: 176)
!9475 = !DIDerivedType(tag: DW_TAG_member, name: "lut_error", scope: !9466, file: !256, line: 351, baseType: !278, size: 32, offset: 192)
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "req_id_table_size", scope: !9466, file: !256, line: 352, baseType: !272, size: 16, offset: 224)
!9477 = !DIDerivedType(tag: DW_TAG_member, name: "req_id_table_offset", scope: !9466, file: !256, line: 353, baseType: !272, size: 16, offset: 240)
!9478 = !DIDerivedType(tag: DW_TAG_member, name: "req_id_error", scope: !9466, file: !256, line: 354, baseType: !278, size: 32, offset: 256)
!9479 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !9466, file: !256, line: 355, baseType: !9480, size: 224, offset: 288)
!9480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 224, elements: !5842)
!9481 = !DIDerivedType(tag: DW_TAG_member, name: "bar_entry", scope: !9466, file: !256, line: 360, baseType: !9482, size: 768, offset: 512)
!9482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9483, size: 768, elements: !1783)
!9483 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9466, file: !256, line: 356, size: 128, elements: !9484)
!9484 = !{!9485, !9486, !9487}
!9485 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !9483, file: !256, line: 357, baseType: !278, size: 32)
!9486 = !DIDerivedType(tag: DW_TAG_member, name: "win_size", scope: !9483, file: !256, line: 358, baseType: !278, size: 32, offset: 32)
!9487 = !DIDerivedType(tag: DW_TAG_member, name: "xlate_addr", scope: !9483, file: !256, line: 359, baseType: !343, size: 64, offset: 64)
!9488 = !DIDerivedType(tag: DW_TAG_member, name: "bar_ext_entry", scope: !9466, file: !256, line: 364, baseType: !9489, size: 768, offset: 1280)
!9489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9490, size: 768, elements: !1783)
!9490 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9466, file: !256, line: 361, size: 128, elements: !9491)
!9491 = !{!9492, !9493}
!9492 = !DIDerivedType(tag: DW_TAG_member, name: "win_size", scope: !9490, file: !256, line: 362, baseType: !278, size: 32)
!9493 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9490, file: !256, line: 363, baseType: !9494, size: 96, offset: 32)
!9494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 96, elements: !820)
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !9466, file: !256, line: 365, baseType: !9496, size: 6144, offset: 2048)
!9496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 6144, elements: !9497)
!9497 = !{!9498}
!9498 = !DISubrange(count: 192)
!9499 = !DIDerivedType(tag: DW_TAG_member, name: "req_id_table", scope: !9466, file: !256, line: 366, baseType: !9500, size: 16384, offset: 8192)
!9500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 16384, elements: !9501)
!9501 = !{!9502}
!9502 = !DISubrange(count: 512)
!9503 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !9466, file: !256, line: 367, baseType: !9504, size: 8192, offset: 24576)
!9504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 8192, elements: !9505)
!9505 = !{!9506}
!9506 = !DISubrange(count: 256)
!9507 = !DIDerivedType(tag: DW_TAG_member, name: "lut_entry", scope: !9466, file: !256, line: 368, baseType: !9508, size: 32768, offset: 32768)
!9508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !343, size: 32768, elements: !9501)
!9509 = !DILocation(line: 5363, column: 32, scope: !9438)
!9510 = !DILocalVariable(name: "partition_map", scope: !9438, file: !3, line: 5364, type: !343)
!9511 = !DILocation(line: 5364, column: 6, scope: !9438)
!9512 = !DILocalVariable(name: "partition", scope: !9438, file: !3, line: 5365, type: !465)
!9513 = !DILocation(line: 5365, column: 5, scope: !9438)
!9514 = !DILocalVariable(name: "pp", scope: !9438, file: !3, line: 5366, type: !277)
!9515 = !DILocation(line: 5366, column: 6, scope: !9438)
!9516 = !DILocation(line: 5368, column: 24, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 5368, column: 6)
!9518 = !DILocation(line: 5368, column: 6, scope: !9517)
!9519 = !DILocation(line: 5368, column: 6, scope: !9438)
!9520 = !DILocation(line: 5369, column: 3, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9517, file: !3, line: 5368, column: 31)
!9522 = !DILocation(line: 5370, column: 3, scope: !9521)
!9523 = !DILocation(line: 5373, column: 19, scope: !9438)
!9524 = !DILocation(line: 5373, column: 9, scope: !9438)
!9525 = !DILocation(line: 5373, column: 7, scope: !9438)
!9526 = !DILocation(line: 5374, column: 6, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 5374, column: 6)
!9528 = !DILocation(line: 5374, column: 11, scope: !9527)
!9529 = !DILocation(line: 5374, column: 6, scope: !9438)
!9530 = !DILocation(line: 5375, column: 22, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9527, file: !3, line: 5374, column: 20)
!9532 = !DILocation(line: 5375, column: 3, scope: !9531)
!9533 = !DILocation(line: 5376, column: 3, scope: !9531)
!9534 = !DILocation(line: 5377, column: 3, scope: !9531)
!9535 = !DILocation(line: 5380, column: 2, scope: !9438)
!9536 = !DILocation(line: 5382, column: 13, scope: !9438)
!9537 = !DILocation(line: 5382, column: 18, scope: !9438)
!9538 = !DILocation(line: 5382, column: 11, scope: !9438)
!9539 = !DILocation(line: 5383, column: 31, scope: !9438)
!9540 = !DILocation(line: 5383, column: 14, scope: !9438)
!9541 = !DILocation(line: 5383, column: 40, scope: !9438)
!9542 = !DILocation(line: 5383, column: 12, scope: !9438)
!9543 = !DILocation(line: 5385, column: 23, scope: !9438)
!9544 = !DILocation(line: 5385, column: 33, scope: !9438)
!9545 = !DILocation(line: 5385, column: 14, scope: !9438)
!9546 = !DILocation(line: 5385, column: 12, scope: !9438)
!9547 = !DILocation(line: 5387, column: 28, scope: !9438)
!9548 = !DILocation(line: 5387, column: 38, scope: !9438)
!9549 = !DILocation(line: 5387, column: 27, scope: !9438)
!9550 = !DILocation(line: 5387, column: 18, scope: !9438)
!9551 = !DILocation(line: 5387, column: 16, scope: !9438)
!9552 = !DILocation(line: 5388, column: 36, scope: !9438)
!9553 = !DILocation(line: 5388, column: 46, scope: !9438)
!9554 = !DILocation(line: 5388, column: 53, scope: !9438)
!9555 = !DILocation(line: 5388, column: 35, scope: !9438)
!9556 = !DILocation(line: 5388, column: 26, scope: !9438)
!9557 = !DILocation(line: 5388, column: 20, scope: !9438)
!9558 = !DILocation(line: 5388, column: 59, scope: !9438)
!9559 = !DILocation(line: 5388, column: 16, scope: !9438)
!9560 = !DILocation(line: 5389, column: 29, scope: !9438)
!9561 = !DILocation(line: 5389, column: 26, scope: !9438)
!9562 = !DILocation(line: 5389, column: 19, scope: !9438)
!9563 = !DILocation(line: 5389, column: 16, scope: !9438)
!9564 = !DILocation(line: 5391, column: 10, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 5391, column: 2)
!9566 = !DILocation(line: 5391, column: 7, scope: !9565)
!9567 = !DILocation(line: 5391, column: 15, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 5391, column: 2)
!9569 = !DILocation(line: 5391, column: 18, scope: !9568)
!9570 = !DILocation(line: 5391, column: 2, scope: !9565)
!9571 = !DILocalVariable(name: "mmio_peer_ctrl", scope: !9572, file: !3, line: 5392, type: !9465)
!9572 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 5391, column: 55)
!9573 = !DILocation(line: 5392, column: 33, scope: !9572)
!9574 = !DILocalVariable(name: "table_sz", scope: !9572, file: !3, line: 5393, type: !278)
!9575 = !DILocation(line: 5393, column: 7, scope: !9572)
!9576 = !DILocalVariable(name: "te", scope: !9572, file: !3, line: 5394, type: !277)
!9577 = !DILocation(line: 5394, column: 7, scope: !9572)
!9578 = !DILocation(line: 5396, column: 9, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 5396, column: 7)
!9580 = !DILocation(line: 5396, column: 34, scope: !9579)
!9581 = !DILocation(line: 5396, column: 31, scope: !9579)
!9582 = !DILocation(line: 5396, column: 23, scope: !9579)
!9583 = !DILocation(line: 5396, column: 7, scope: !9572)
!9584 = !DILocation(line: 5397, column: 4, scope: !9579)
!9585 = !DILocation(line: 5401, column: 21, scope: !9572)
!9586 = !DILocation(line: 5401, column: 31, scope: !9572)
!9587 = !DILocation(line: 5401, column: 18, scope: !9572)
!9588 = !DILocation(line: 5403, column: 24, scope: !9572)
!9589 = !DILocation(line: 5403, column: 40, scope: !9572)
!9590 = !DILocation(line: 5403, column: 23, scope: !9572)
!9591 = !DILocation(line: 5403, column: 14, scope: !9572)
!9592 = !DILocation(line: 5403, column: 12, scope: !9572)
!9593 = !DILocation(line: 5404, column: 8, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 5404, column: 7)
!9595 = !DILocation(line: 5404, column: 7, scope: !9572)
!9596 = !DILocation(line: 5405, column: 4, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 5404, column: 18)
!9598 = !DILocation(line: 5406, column: 4, scope: !9597)
!9599 = !DILocation(line: 5409, column: 7, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 5409, column: 7)
!9601 = !DILocation(line: 5409, column: 16, scope: !9600)
!9602 = !DILocation(line: 5409, column: 7, scope: !9572)
!9603 = !DILocation(line: 5410, column: 4, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 5409, column: 23)
!9605 = !DILocation(line: 5413, column: 4, scope: !9604)
!9606 = !DILocation(line: 5416, column: 11, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 5416, column: 3)
!9608 = !DILocation(line: 5416, column: 8, scope: !9607)
!9609 = !DILocation(line: 5416, column: 16, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9607, file: !3, line: 5416, column: 3)
!9611 = !DILocation(line: 5416, column: 21, scope: !9610)
!9612 = !DILocation(line: 5416, column: 19, scope: !9610)
!9613 = !DILocation(line: 5416, column: 3, scope: !9607)
!9614 = !DILocalVariable(name: "rid_entry", scope: !9615, file: !3, line: 5417, type: !278)
!9615 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 5416, column: 37)
!9616 = !DILocation(line: 5417, column: 8, scope: !9615)
!9617 = !DILocalVariable(name: "devfn", scope: !9615, file: !3, line: 5418, type: !465)
!9618 = !DILocation(line: 5418, column: 7, scope: !9615)
!9619 = !DILocation(line: 5420, column: 26, scope: !9615)
!9620 = !DILocation(line: 5420, column: 42, scope: !9615)
!9621 = !DILocation(line: 5420, column: 55, scope: !9615)
!9622 = !DILocation(line: 5420, column: 25, scope: !9615)
!9623 = !DILocation(line: 5420, column: 16, scope: !9615)
!9624 = !DILocation(line: 5420, column: 14, scope: !9615)
!9625 = !DILocation(line: 5421, column: 13, scope: !9615)
!9626 = !DILocation(line: 5421, column: 23, scope: !9615)
!9627 = !DILocation(line: 5421, column: 29, scope: !9615)
!9628 = !DILocation(line: 5421, column: 12, scope: !9615)
!9629 = !DILocation(line: 5421, column: 10, scope: !9615)
!9630 = !DILocation(line: 5425, column: 22, scope: !9615)
!9631 = !DILocation(line: 5425, column: 28, scope: !9615)
!9632 = !DILocation(line: 5425, column: 4, scope: !9615)
!9633 = !DILocation(line: 5426, column: 3, scope: !9615)
!9634 = !DILocation(line: 5416, column: 33, scope: !9610)
!9635 = !DILocation(line: 5416, column: 3, scope: !9610)
!9636 = distinct !{!9636, !9613, !9637}
!9637 = !DILocation(line: 5426, column: 3, scope: !9607)
!9638 = !DILocation(line: 5427, column: 2, scope: !9572)
!9639 = !DILocation(line: 5391, column: 51, scope: !9568)
!9640 = !DILocation(line: 5391, column: 2, scope: !9568)
!9641 = distinct !{!9641, !9570, !9642}
!9642 = !DILocation(line: 5427, column: 2, scope: !9565)
!9643 = !DILocation(line: 5429, column: 14, scope: !9438)
!9644 = !DILocation(line: 5429, column: 20, scope: !9438)
!9645 = !DILocation(line: 5429, column: 2, scope: !9438)
!9646 = !DILocation(line: 5430, column: 21, scope: !9438)
!9647 = !DILocation(line: 5430, column: 2, scope: !9438)
!9648 = !DILocation(line: 5431, column: 1, scope: !9438)
!9649 = distinct !DISubprogram(name: "quirk_plx_ntb_dma_alias", scope: !3, file: !3, line: 5491, type: !4131, scopeLine: 5492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9650 = !DILocalVariable(name: "pdev", arg: 1, scope: !9649, file: !3, line: 5491, type: !3449)
!9651 = !DILocation(line: 5491, column: 53, scope: !9649)
!9652 = !DILocation(line: 5493, column: 2, scope: !9649)
!9653 = !DILocation(line: 5495, column: 20, scope: !9649)
!9654 = !DILocation(line: 5495, column: 2, scope: !9649)
!9655 = !DILocation(line: 5496, column: 1, scope: !9649)
!9656 = distinct !DISubprogram(name: "quirk_reset_lenovo_thinkpad_p50_nvgpu", scope: !3, file: !3, line: 5516, type: !4131, scopeLine: 5517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9657 = !DILocalVariable(name: "pdev", arg: 1, scope: !9656, file: !3, line: 5516, type: !3449)
!9658 = !DILocation(line: 5516, column: 67, scope: !9656)
!9659 = !DILocalVariable(name: "map", scope: !9656, file: !3, line: 5518, type: !280)
!9660 = !DILocation(line: 5518, column: 16, scope: !9656)
!9661 = !DILocalVariable(name: "ret", scope: !9656, file: !3, line: 5519, type: !277)
!9662 = !DILocation(line: 5519, column: 6, scope: !9656)
!9663 = !DILocation(line: 5521, column: 6, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9656, file: !3, line: 5521, column: 6)
!9665 = !DILocation(line: 5521, column: 12, scope: !9664)
!9666 = !DILocation(line: 5521, column: 29, scope: !9664)
!9667 = !DILocation(line: 5521, column: 53, scope: !9664)
!9668 = !DILocation(line: 5522, column: 6, scope: !9664)
!9669 = !DILocation(line: 5522, column: 12, scope: !9664)
!9670 = !DILocation(line: 5522, column: 29, scope: !9664)
!9671 = !DILocation(line: 5522, column: 39, scope: !9664)
!9672 = !DILocation(line: 5523, column: 7, scope: !9664)
!9673 = !DILocation(line: 5523, column: 13, scope: !9664)
!9674 = !DILocation(line: 5521, column: 6, scope: !9656)
!9675 = !DILocation(line: 5524, column: 3, scope: !9664)
!9676 = !DILocation(line: 5526, column: 28, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9656, file: !3, line: 5526, column: 6)
!9678 = !DILocation(line: 5526, column: 6, scope: !9677)
!9679 = !DILocation(line: 5526, column: 6, scope: !9656)
!9680 = !DILocation(line: 5527, column: 3, scope: !9677)
!9681 = !DILocation(line: 5533, column: 18, scope: !9656)
!9682 = !DILocation(line: 5533, column: 8, scope: !9656)
!9683 = !DILocation(line: 5533, column: 6, scope: !9656)
!9684 = !DILocation(line: 5534, column: 7, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9656, file: !3, line: 5534, column: 6)
!9686 = !DILocation(line: 5534, column: 6, scope: !9656)
!9687 = !DILocation(line: 5535, column: 3, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 5534, column: 12)
!9689 = !DILocation(line: 5536, column: 3, scope: !9688)
!9690 = !DILocation(line: 5543, column: 15, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9656, file: !3, line: 5543, column: 6)
!9692 = !DILocation(line: 5543, column: 19, scope: !9691)
!9693 = !DILocation(line: 5543, column: 6, scope: !9691)
!9694 = !DILocation(line: 5543, column: 30, scope: !9691)
!9695 = !DILocation(line: 5543, column: 6, scope: !9656)
!9696 = !DILocation(line: 5544, column: 3, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9691, file: !3, line: 5543, column: 37)
!9698 = !DILocation(line: 5545, column: 23, scope: !9697)
!9699 = !DILocation(line: 5545, column: 9, scope: !9697)
!9700 = !DILocation(line: 5545, column: 7, scope: !9697)
!9701 = !DILocation(line: 5546, column: 7, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9697, file: !3, line: 5546, column: 7)
!9703 = !DILocation(line: 5546, column: 11, scope: !9702)
!9704 = !DILocation(line: 5546, column: 7, scope: !9697)
!9705 = !DILocation(line: 5547, column: 4, scope: !9702)
!9706 = !DILocation(line: 5548, column: 2, scope: !9697)
!9707 = !DILocation(line: 5550, column: 10, scope: !9656)
!9708 = !DILocation(line: 5550, column: 2, scope: !9656)
!9709 = !DILabel(scope: !9656, name: "out_disable", file: !3, line: 5551)
!9710 = !DILocation(line: 5551, column: 1, scope: !9656)
!9711 = !DILocation(line: 5552, column: 21, scope: !9656)
!9712 = !DILocation(line: 5552, column: 2, scope: !9656)
!9713 = !DILocation(line: 5553, column: 1, scope: !9656)
!9714 = distinct !DISubprogram(name: "pci_fixup_no_d0_pme", scope: !3, file: !3, line: 5562, type: !4131, scopeLine: 5563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9715 = !DILocalVariable(name: "dev", arg: 1, scope: !9714, file: !3, line: 5562, type: !3449)
!9716 = !DILocation(line: 5562, column: 49, scope: !9714)
!9717 = !DILocation(line: 5564, column: 2, scope: !9714)
!9718 = !DILocation(line: 5565, column: 2, scope: !9714)
!9719 = !DILocation(line: 5565, column: 7, scope: !9714)
!9720 = !DILocation(line: 5565, column: 19, scope: !9714)
!9721 = !DILocation(line: 5566, column: 1, scope: !9714)
!9722 = distinct !DISubprogram(name: "pci_fixup_no_pme", scope: !3, file: !3, line: 5574, type: !4131, scopeLine: 5575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9723 = !DILocalVariable(name: "dev", arg: 1, scope: !9722, file: !3, line: 5574, type: !3449)
!9724 = !DILocation(line: 5574, column: 46, scope: !9722)
!9725 = !DILocation(line: 5576, column: 2, scope: !9722)
!9726 = !DILocation(line: 5577, column: 2, scope: !9722)
!9727 = !DILocation(line: 5577, column: 7, scope: !9722)
!9728 = !DILocation(line: 5577, column: 19, scope: !9722)
!9729 = !DILocation(line: 5578, column: 1, scope: !9722)
!9730 = distinct !DISubprogram(name: "apex_pci_fixup_class", scope: !3, file: !3, line: 5582, type: !4131, scopeLine: 5583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9731 = !DILocalVariable(name: "pdev", arg: 1, scope: !9730, file: !3, line: 5582, type: !3449)
!9732 = !DILocation(line: 5582, column: 50, scope: !9730)
!9733 = !DILocation(line: 5584, column: 48, scope: !9730)
!9734 = !DILocation(line: 5584, column: 54, scope: !9730)
!9735 = !DILocation(line: 5584, column: 46, scope: !9730)
!9736 = !DILocation(line: 5584, column: 2, scope: !9730)
!9737 = !DILocation(line: 5584, column: 8, scope: !9730)
!9738 = !DILocation(line: 5584, column: 14, scope: !9730)
!9739 = !DILocation(line: 5585, column: 1, scope: !9730)
!9740 = distinct !DISubprogram(name: "offset_to_ptr", scope: !9741, file: !9741, line: 230, type: !9742, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9741 = !DIFile(filename: "./include/linux/compiler.h", directory: "/home/lizy2001/genbc/linux")
!9742 = !DISubroutineType(types: !9743)
!9743 = !{!280, !9744}
!9744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9745, size: 64)
!9745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !277)
!9746 = !DILocalVariable(name: "off", arg: 1, scope: !9740, file: !9741, line: 230, type: !9744)
!9747 = !DILocation(line: 230, column: 46, scope: !9740)
!9748 = !DILocation(line: 232, column: 33, scope: !9740)
!9749 = !DILocation(line: 232, column: 18, scope: !9740)
!9750 = !DILocation(line: 232, column: 40, scope: !9740)
!9751 = !DILocation(line: 232, column: 39, scope: !9740)
!9752 = !DILocation(line: 232, column: 37, scope: !9740)
!9753 = !DILocation(line: 232, column: 9, scope: !9740)
!9754 = !DILocation(line: 232, column: 2, scope: !9740)
!9755 = distinct !DISubprogram(name: "fixup_debug_start", scope: !3, file: !3, line: 34, type: !9756, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9756 = !DISubroutineType(types: !9757)
!9757 = !{!392, !3449, !4130}
!9758 = !DILocalVariable(name: "pscr_ret__", scope: !9759, file: !9760, line: 15, type: !283)
!9759 = distinct !DILexicalBlock(scope: !9761, file: !9760, line: 15, column: 9)
!9760 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!9761 = distinct !DISubprogram(name: "get_current", scope: !9760, file: !9760, line: 13, type: !9762, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9762 = !DISubroutineType(types: !9763)
!9763 = !{!283}
!9764 = !DILocation(line: 15, column: 9, scope: !9759, inlinedAt: !9765)
!9765 = distinct !DILocation(line: 38, column: 3, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9755, file: !3, line: 37, column: 6)
!9767 = !DILocalVariable(name: "__vpp_verify", scope: !9768, file: !9760, line: 15, type: !2149)
!9768 = distinct !DILexicalBlock(scope: !9759, file: !9760, line: 15, column: 9)
!9769 = !DILocation(line: 15, column: 9, scope: !9768, inlinedAt: !9765)
!9770 = !DILocalVariable(name: "pfo_val__", scope: !9771, file: !9760, line: 15, type: !343)
!9771 = distinct !DILexicalBlock(scope: !9759, file: !9760, line: 15, column: 9)
!9772 = !DILocation(line: 15, column: 9, scope: !9771, inlinedAt: !9765)
!9773 = !DILocalVariable(name: "dev", arg: 1, scope: !9755, file: !3, line: 34, type: !3449)
!9774 = !DILocation(line: 34, column: 50, scope: !9755)
!9775 = !DILocalVariable(name: "fn", arg: 2, scope: !9755, file: !3, line: 35, type: !4130)
!9776 = !DILocation(line: 35, column: 13, scope: !9755)
!9777 = !DILocation(line: 37, column: 6, scope: !9766)
!9778 = !DILocation(line: 37, column: 6, scope: !9755)
!9779 = !DILocation(line: 38, column: 3, scope: !9766)
!9780 = !{i32 -2146127148}
!9781 = !DILocation(line: 40, column: 9, scope: !9755)
!9782 = !DILocation(line: 40, column: 2, scope: !9755)
!9783 = distinct !DISubprogram(name: "fixup_debug_report", scope: !3, file: !3, line: 43, type: !9784, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9784 = !DISubroutineType(types: !9785)
!9785 = !{null, !3449, !392, !4130}
!9786 = !DILocalVariable(name: "dev", arg: 1, scope: !9783, file: !3, line: 43, type: !3449)
!9787 = !DILocation(line: 43, column: 48, scope: !9783)
!9788 = !DILocalVariable(name: "calltime", arg: 2, scope: !9783, file: !3, line: 43, type: !392)
!9789 = !DILocation(line: 43, column: 61, scope: !9783)
!9790 = !DILocalVariable(name: "fn", arg: 3, scope: !9783, file: !3, line: 44, type: !4130)
!9791 = !DILocation(line: 44, column: 18, scope: !9783)
!9792 = !DILocalVariable(name: "delta", scope: !9783, file: !3, line: 46, type: !392)
!9793 = !DILocation(line: 46, column: 10, scope: !9783)
!9794 = !DILocalVariable(name: "rettime", scope: !9783, file: !3, line: 46, type: !392)
!9795 = !DILocation(line: 46, column: 17, scope: !9783)
!9796 = !DILocalVariable(name: "duration", scope: !9783, file: !3, line: 47, type: !345)
!9797 = !DILocation(line: 47, column: 21, scope: !9783)
!9798 = !DILocation(line: 49, column: 12, scope: !9783)
!9799 = !DILocation(line: 49, column: 10, scope: !9783)
!9800 = !DILocation(line: 50, column: 10, scope: !9783)
!9801 = !DILocation(line: 50, column: 8, scope: !9783)
!9802 = !DILocation(line: 51, column: 46, scope: !9783)
!9803 = !DILocation(line: 51, column: 34, scope: !9783)
!9804 = !DILocation(line: 51, column: 53, scope: !9783)
!9805 = !DILocation(line: 51, column: 11, scope: !9783)
!9806 = !DILocation(line: 52, column: 6, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9783, file: !3, line: 52, column: 6)
!9808 = !DILocation(line: 52, column: 21, scope: !9807)
!9809 = !DILocation(line: 52, column: 24, scope: !9807)
!9810 = !DILocation(line: 52, column: 33, scope: !9807)
!9811 = !DILocation(line: 52, column: 6, scope: !9783)
!9812 = !DILocation(line: 53, column: 3, scope: !9807)
!9813 = !DILocation(line: 54, column: 1, scope: !9783)
!9814 = distinct !DISubprogram(name: "task_pid_nr", scope: !285, file: !285, line: 1386, type: !9815, scopeLine: 1387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9815 = !DISubroutineType(types: !9816)
!9816 = !{!2836, !283}
!9817 = !DILocalVariable(name: "tsk", arg: 1, scope: !9814, file: !285, line: 1386, type: !283)
!9818 = !DILocation(line: 1386, column: 53, scope: !9814)
!9819 = !DILocation(line: 1388, column: 9, scope: !9814)
!9820 = !DILocation(line: 1388, column: 14, scope: !9814)
!9821 = !DILocation(line: 1388, column: 2, scope: !9814)
!9822 = distinct !DISubprogram(name: "ktime_to_ns", scope: !393, file: !393, line: 80, type: !9823, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9823 = !DISubroutineType(types: !9824)
!9824 = !{!374, !9825}
!9825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !392)
!9826 = !DILocalVariable(name: "kt", arg: 1, scope: !9822, file: !393, line: 80, type: !9825)
!9827 = !DILocation(line: 80, column: 45, scope: !9822)
!9828 = !DILocation(line: 82, column: 9, scope: !9822)
!9829 = !DILocation(line: 82, column: 2, scope: !9822)
!9830 = distinct !DISubprogram(name: "inw", scope: !9831, file: !9831, line: 335, type: !9832, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9831 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!9832 = !DISubroutineType(types: !9833)
!9833 = !{!276, !277}
!9834 = !DILocalVariable(name: "port", arg: 1, scope: !9830, file: !9831, line: 335, type: !277)
!9835 = !DILocation(line: 335, column: 1, scope: !9830)
!9836 = !DILocalVariable(name: "value", scope: !9830, file: !9831, line: 335, type: !276)
!9837 = !{i32 -2143387157}
!9838 = distinct !DISubprogram(name: "outw", scope: !9831, file: !9831, line: 335, type: !9839, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9839 = !DISubroutineType(types: !9840)
!9840 = !{null, !276, !277}
!9841 = !DILocalVariable(name: "value", arg: 1, scope: !9838, file: !9831, line: 335, type: !276)
!9842 = !DILocation(line: 335, column: 1, scope: !9838)
!9843 = !DILocalVariable(name: "port", arg: 2, scope: !9838, file: !9831, line: 335, type: !277)
!9844 = !{i32 -2143387359}
!9845 = distinct !DISubprogram(name: "resource_size", scope: !3467, file: !3467, line: 210, type: !9846, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9846 = !DISubroutineType(types: !9847)
!9847 = !{!3470, !9262}
!9848 = !DILocalVariable(name: "res", arg: 1, scope: !9845, file: !3467, line: 210, type: !9262)
!9849 = !DILocation(line: 210, column: 68, scope: !9845)
!9850 = !DILocation(line: 212, column: 9, scope: !9845)
!9851 = !DILocation(line: 212, column: 14, scope: !9845)
!9852 = !DILocation(line: 212, column: 20, scope: !9845)
!9853 = !DILocation(line: 212, column: 25, scope: !9845)
!9854 = !DILocation(line: 212, column: 18, scope: !9845)
!9855 = !DILocation(line: 212, column: 31, scope: !9845)
!9856 = !DILocation(line: 212, column: 2, scope: !9845)
!9857 = distinct !DISubprogram(name: "quirk_io", scope: !3, file: !3, line: 508, type: !9858, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9858 = !DISubroutineType(types: !9859)
!9859 = !{null, !3449, !277, !7, !707}
!9860 = !DILocalVariable(name: "dev", arg: 1, scope: !9857, file: !3, line: 508, type: !3449)
!9861 = !DILocation(line: 508, column: 38, scope: !9857)
!9862 = !DILocalVariable(name: "pos", arg: 2, scope: !9857, file: !3, line: 508, type: !277)
!9863 = !DILocation(line: 508, column: 47, scope: !9857)
!9864 = !DILocalVariable(name: "size", arg: 3, scope: !9857, file: !3, line: 508, type: !7)
!9865 = !DILocation(line: 508, column: 61, scope: !9857)
!9866 = !DILocalVariable(name: "name", arg: 4, scope: !9857, file: !3, line: 509, type: !707)
!9867 = !DILocation(line: 509, column: 20, scope: !9857)
!9868 = !DILocalVariable(name: "region", scope: !9857, file: !3, line: 511, type: !278)
!9869 = !DILocation(line: 511, column: 6, scope: !9857)
!9870 = !DILocalVariable(name: "bus_region", scope: !9857, file: !3, line: 512, type: !9871)
!9871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus_region", file: !6, line: 754, size: 128, elements: !9872)
!9872 = !{!9873, !9875}
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9871, file: !6, line: 755, baseType: !9874, size: 64)
!9874 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_addr_t", file: !6, line: 749, baseType: !343)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !9871, file: !6, line: 756, baseType: !9874, size: 64, offset: 64)
!9876 = !DILocation(line: 512, column: 24, scope: !9857)
!9877 = !DILocalVariable(name: "res", scope: !9857, file: !3, line: 513, type: !3465)
!9878 = !DILocation(line: 513, column: 19, scope: !9857)
!9879 = !DILocation(line: 513, column: 25, scope: !9857)
!9880 = !DILocation(line: 513, column: 30, scope: !9857)
!9881 = !DILocation(line: 513, column: 41, scope: !9857)
!9882 = !DILocation(line: 513, column: 39, scope: !9857)
!9883 = !DILocation(line: 515, column: 24, scope: !9857)
!9884 = !DILocation(line: 515, column: 51, scope: !9857)
!9885 = !DILocation(line: 515, column: 55, scope: !9857)
!9886 = !DILocation(line: 515, column: 48, scope: !9857)
!9887 = !DILocation(line: 515, column: 2, scope: !9857)
!9888 = !DILocation(line: 517, column: 7, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9857, file: !3, line: 517, column: 6)
!9890 = !DILocation(line: 517, column: 6, scope: !9857)
!9891 = !DILocation(line: 518, column: 3, scope: !9889)
!9892 = !DILocation(line: 520, column: 23, scope: !9857)
!9893 = !DILocation(line: 520, column: 14, scope: !9857)
!9894 = !DILocation(line: 520, column: 2, scope: !9857)
!9895 = !DILocation(line: 520, column: 7, scope: !9857)
!9896 = !DILocation(line: 520, column: 12, scope: !9857)
!9897 = !DILocation(line: 521, column: 15, scope: !9857)
!9898 = !DILocation(line: 521, column: 22, scope: !9857)
!9899 = !DILocation(line: 521, column: 2, scope: !9857)
!9900 = !DILocation(line: 521, column: 7, scope: !9857)
!9901 = !DILocation(line: 521, column: 13, scope: !9857)
!9902 = !DILocation(line: 522, column: 2, scope: !9857)
!9903 = !DILocation(line: 522, column: 7, scope: !9857)
!9904 = !DILocation(line: 522, column: 13, scope: !9857)
!9905 = !DILocation(line: 524, column: 14, scope: !9857)
!9906 = !DILocation(line: 524, column: 19, scope: !9857)
!9907 = !DILocation(line: 524, column: 12, scope: !9857)
!9908 = !DILocation(line: 524, column: 9, scope: !9857)
!9909 = !DILocation(line: 527, column: 21, scope: !9857)
!9910 = !DILocation(line: 527, column: 13, scope: !9857)
!9911 = !DILocation(line: 527, column: 19, scope: !9857)
!9912 = !DILocation(line: 528, column: 19, scope: !9857)
!9913 = !DILocation(line: 528, column: 28, scope: !9857)
!9914 = !DILocation(line: 528, column: 26, scope: !9857)
!9915 = !DILocation(line: 528, column: 33, scope: !9857)
!9916 = !DILocation(line: 528, column: 13, scope: !9857)
!9917 = !DILocation(line: 528, column: 17, scope: !9857)
!9918 = !DILocation(line: 529, column: 26, scope: !9857)
!9919 = !DILocation(line: 529, column: 31, scope: !9857)
!9920 = !DILocation(line: 529, column: 36, scope: !9857)
!9921 = !DILocation(line: 529, column: 2, scope: !9857)
!9922 = !DILocation(line: 531, column: 2, scope: !9857)
!9923 = !DILocation(line: 533, column: 1, scope: !9857)
!9924 = distinct !DISubprogram(name: "pci_name", scope: !6, file: !6, line: 1875, type: !9925, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9925 = !DISubroutineType(types: !9926)
!9926 = !{!707, !9240}
!9927 = !DILocalVariable(name: "pdev", arg: 1, scope: !9924, file: !6, line: 1875, type: !9240)
!9928 = !DILocation(line: 1875, column: 58, scope: !9924)
!9929 = !DILocation(line: 1877, column: 19, scope: !9924)
!9930 = !DILocation(line: 1877, column: 25, scope: !9924)
!9931 = !DILocation(line: 1877, column: 9, scope: !9924)
!9932 = !DILocation(line: 1877, column: 2, scope: !9924)
!9933 = distinct !DISubprogram(name: "dev_name", scope: !84, file: !84, line: 609, type: !9934, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9934 = !DISubroutineType(types: !9935)
!9935 = !{!707, !3857}
!9936 = !DILocalVariable(name: "dev", arg: 1, scope: !9933, file: !84, line: 609, type: !3857)
!9937 = !DILocation(line: 609, column: 57, scope: !9933)
!9938 = !DILocation(line: 612, column: 6, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9933, file: !84, line: 612, column: 6)
!9940 = !DILocation(line: 612, column: 11, scope: !9939)
!9941 = !DILocation(line: 612, column: 6, scope: !9933)
!9942 = !DILocation(line: 613, column: 10, scope: !9939)
!9943 = !DILocation(line: 613, column: 15, scope: !9939)
!9944 = !DILocation(line: 613, column: 3, scope: !9939)
!9945 = !DILocation(line: 615, column: 23, scope: !9933)
!9946 = !DILocation(line: 615, column: 28, scope: !9933)
!9947 = !DILocation(line: 615, column: 9, scope: !9933)
!9948 = !DILocation(line: 615, column: 2, scope: !9933)
!9949 = !DILocation(line: 616, column: 1, scope: !9933)
!9950 = distinct !DISubprogram(name: "kobject_name", scope: !2018, file: !2018, line: 88, type: !9951, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9951 = !DISubroutineType(types: !9952)
!9952 = !{!707, !9953}
!9953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9954, size: 64)
!9954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2017)
!9955 = !DILocalVariable(name: "kobj", arg: 1, scope: !9950, file: !2018, line: 88, type: !9953)
!9956 = !DILocation(line: 88, column: 62, scope: !9950)
!9957 = !DILocation(line: 90, column: 9, scope: !9950)
!9958 = !DILocation(line: 90, column: 15, scope: !9950)
!9959 = !DILocation(line: 90, column: 2, scope: !9950)
!9960 = distinct !DISubprogram(name: "quirk_io_region", scope: !3, file: !3, line: 558, type: !9961, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!9961 = !DISubroutineType(types: !9962)
!9962 = !{null, !3449, !277, !7, !277, !707}
!9963 = !DILocalVariable(name: "dev", arg: 1, scope: !9960, file: !3, line: 558, type: !3449)
!9964 = !DILocation(line: 558, column: 45, scope: !9960)
!9965 = !DILocalVariable(name: "port", arg: 2, scope: !9960, file: !3, line: 558, type: !277)
!9966 = !DILocation(line: 558, column: 54, scope: !9960)
!9967 = !DILocalVariable(name: "size", arg: 3, scope: !9960, file: !3, line: 559, type: !7)
!9968 = !DILocation(line: 559, column: 14, scope: !9960)
!9969 = !DILocalVariable(name: "nr", arg: 4, scope: !9960, file: !3, line: 559, type: !277)
!9970 = !DILocation(line: 559, column: 24, scope: !9960)
!9971 = !DILocalVariable(name: "name", arg: 5, scope: !9960, file: !3, line: 559, type: !707)
!9972 = !DILocation(line: 559, column: 40, scope: !9960)
!9973 = !DILocalVariable(name: "region", scope: !9960, file: !3, line: 561, type: !272)
!9974 = !DILocation(line: 561, column: 6, scope: !9960)
!9975 = !DILocalVariable(name: "bus_region", scope: !9960, file: !3, line: 562, type: !9871)
!9976 = !DILocation(line: 562, column: 24, scope: !9960)
!9977 = !DILocalVariable(name: "res", scope: !9960, file: !3, line: 563, type: !3465)
!9978 = !DILocation(line: 563, column: 19, scope: !9960)
!9979 = !DILocation(line: 563, column: 25, scope: !9960)
!9980 = !DILocation(line: 563, column: 30, scope: !9960)
!9981 = !DILocation(line: 563, column: 41, scope: !9960)
!9982 = !DILocation(line: 563, column: 39, scope: !9960)
!9983 = !DILocation(line: 565, column: 23, scope: !9960)
!9984 = !DILocation(line: 565, column: 28, scope: !9960)
!9985 = !DILocation(line: 565, column: 2, scope: !9960)
!9986 = !DILocation(line: 566, column: 14, scope: !9960)
!9987 = !DILocation(line: 566, column: 19, scope: !9960)
!9988 = !DILocation(line: 566, column: 12, scope: !9960)
!9989 = !DILocation(line: 566, column: 9, scope: !9960)
!9990 = !DILocation(line: 568, column: 7, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 568, column: 6)
!9992 = !DILocation(line: 568, column: 6, scope: !9960)
!9993 = !DILocation(line: 569, column: 3, scope: !9991)
!9994 = !DILocation(line: 571, column: 23, scope: !9960)
!9995 = !DILocation(line: 571, column: 14, scope: !9960)
!9996 = !DILocation(line: 571, column: 2, scope: !9960)
!9997 = !DILocation(line: 571, column: 7, scope: !9960)
!9998 = !DILocation(line: 571, column: 12, scope: !9960)
!9999 = !DILocation(line: 572, column: 2, scope: !9960)
!10000 = !DILocation(line: 572, column: 7, scope: !9960)
!10001 = !DILocation(line: 572, column: 13, scope: !9960)
!10002 = !DILocation(line: 575, column: 21, scope: !9960)
!10003 = !DILocation(line: 575, column: 13, scope: !9960)
!10004 = !DILocation(line: 575, column: 19, scope: !9960)
!10005 = !DILocation(line: 576, column: 19, scope: !9960)
!10006 = !DILocation(line: 576, column: 28, scope: !9960)
!10007 = !DILocation(line: 576, column: 26, scope: !9960)
!10008 = !DILocation(line: 576, column: 33, scope: !9960)
!10009 = !DILocation(line: 576, column: 13, scope: !9960)
!10010 = !DILocation(line: 576, column: 17, scope: !9960)
!10011 = !DILocation(line: 577, column: 26, scope: !9960)
!10012 = !DILocation(line: 577, column: 31, scope: !9960)
!10013 = !DILocation(line: 577, column: 36, scope: !9960)
!10014 = !DILocation(line: 577, column: 2, scope: !9960)
!10015 = !DILocation(line: 579, column: 26, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 579, column: 6)
!10017 = !DILocation(line: 579, column: 31, scope: !10016)
!10018 = !DILocation(line: 579, column: 7, scope: !10016)
!10019 = !DILocation(line: 579, column: 6, scope: !9960)
!10020 = !DILocation(line: 580, column: 3, scope: !10016)
!10021 = !DILocation(line: 581, column: 1, scope: !9960)
!10022 = distinct !DISubprogram(name: "piix4_io_quirk", scope: !3, file: !3, line: 661, type: !10023, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10023 = !DISubroutineType(types: !10024)
!10024 = !{null, !3449, !707, !7, !7}
!10025 = !DILocalVariable(name: "dev", arg: 1, scope: !10022, file: !3, line: 661, type: !3449)
!10026 = !DILocation(line: 661, column: 44, scope: !10022)
!10027 = !DILocalVariable(name: "name", arg: 2, scope: !10022, file: !3, line: 661, type: !707)
!10028 = !DILocation(line: 661, column: 61, scope: !10022)
!10029 = !DILocalVariable(name: "port", arg: 3, scope: !10022, file: !3, line: 661, type: !7)
!10030 = !DILocation(line: 661, column: 80, scope: !10022)
!10031 = !DILocalVariable(name: "enable", arg: 4, scope: !10022, file: !3, line: 661, type: !7)
!10032 = !DILocation(line: 661, column: 99, scope: !10022)
!10033 = !DILocalVariable(name: "devres", scope: !10022, file: !3, line: 663, type: !278)
!10034 = !DILocation(line: 663, column: 6, scope: !10022)
!10035 = !DILocalVariable(name: "mask", scope: !10022, file: !3, line: 664, type: !278)
!10036 = !DILocation(line: 664, column: 6, scope: !10022)
!10037 = !DILocalVariable(name: "size", scope: !10022, file: !3, line: 664, type: !278)
!10038 = !DILocation(line: 664, column: 12, scope: !10022)
!10039 = !DILocalVariable(name: "base", scope: !10022, file: !3, line: 664, type: !278)
!10040 = !DILocation(line: 664, column: 18, scope: !10022)
!10041 = !DILocation(line: 666, column: 24, scope: !10022)
!10042 = !DILocation(line: 666, column: 29, scope: !10022)
!10043 = !DILocation(line: 666, column: 2, scope: !10022)
!10044 = !DILocation(line: 667, column: 7, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10022, file: !3, line: 667, column: 6)
!10046 = !DILocation(line: 667, column: 16, scope: !10045)
!10047 = !DILocation(line: 667, column: 14, scope: !10045)
!10048 = !DILocation(line: 667, column: 27, scope: !10045)
!10049 = !DILocation(line: 667, column: 24, scope: !10045)
!10050 = !DILocation(line: 667, column: 6, scope: !10022)
!10051 = !DILocation(line: 668, column: 3, scope: !10045)
!10052 = !DILocation(line: 669, column: 10, scope: !10022)
!10053 = !DILocation(line: 669, column: 17, scope: !10022)
!10054 = !DILocation(line: 669, column: 24, scope: !10022)
!10055 = !DILocation(line: 669, column: 7, scope: !10022)
!10056 = !DILocation(line: 670, column: 9, scope: !10022)
!10057 = !DILocation(line: 670, column: 16, scope: !10022)
!10058 = !DILocation(line: 670, column: 7, scope: !10022)
!10059 = !DILocation(line: 671, column: 7, scope: !10022)
!10060 = !DILocation(line: 672, column: 2, scope: !10022)
!10061 = !DILocalVariable(name: "bit", scope: !10062, file: !3, line: 673, type: !7)
!10062 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 672, column: 11)
!10063 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 672, column: 2)
!10064 = distinct !DILexicalBlock(scope: !10022, file: !3, line: 672, column: 2)
!10065 = !DILocation(line: 673, column: 12, scope: !10062)
!10066 = !DILocation(line: 673, column: 18, scope: !10062)
!10067 = !DILocation(line: 673, column: 23, scope: !10062)
!10068 = !DILocation(line: 674, column: 8, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 674, column: 7)
!10070 = !DILocation(line: 674, column: 14, scope: !10069)
!10071 = !DILocation(line: 674, column: 12, scope: !10069)
!10072 = !DILocation(line: 674, column: 23, scope: !10069)
!10073 = !DILocation(line: 674, column: 20, scope: !10069)
!10074 = !DILocation(line: 674, column: 7, scope: !10062)
!10075 = !DILocation(line: 675, column: 4, scope: !10069)
!10076 = !DILocation(line: 676, column: 10, scope: !10062)
!10077 = !DILocation(line: 676, column: 8, scope: !10062)
!10078 = !DILocation(line: 672, column: 2, scope: !10063)
!10079 = distinct !{!10079, !10080, !10081}
!10080 = !DILocation(line: 672, column: 2, scope: !10064)
!10081 = !DILocation(line: 677, column: 2, scope: !10064)
!10082 = !DILocation(line: 683, column: 11, scope: !10022)
!10083 = !DILocation(line: 683, column: 10, scope: !10022)
!10084 = !DILocation(line: 683, column: 7, scope: !10022)
!10085 = !DILocation(line: 684, column: 2, scope: !10022)
!10086 = !DILocation(line: 685, column: 1, scope: !10022)
!10087 = distinct !DISubprogram(name: "piix4_mem_quirk", scope: !3, file: !3, line: 687, type: !10023, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10088 = !DILocalVariable(name: "dev", arg: 1, scope: !10087, file: !3, line: 687, type: !3449)
!10089 = !DILocation(line: 687, column: 45, scope: !10087)
!10090 = !DILocalVariable(name: "name", arg: 2, scope: !10087, file: !3, line: 687, type: !707)
!10091 = !DILocation(line: 687, column: 62, scope: !10087)
!10092 = !DILocalVariable(name: "port", arg: 3, scope: !10087, file: !3, line: 687, type: !7)
!10093 = !DILocation(line: 687, column: 81, scope: !10087)
!10094 = !DILocalVariable(name: "enable", arg: 4, scope: !10087, file: !3, line: 687, type: !7)
!10095 = !DILocation(line: 687, column: 100, scope: !10087)
!10096 = !DILocalVariable(name: "devres", scope: !10087, file: !3, line: 689, type: !278)
!10097 = !DILocation(line: 689, column: 6, scope: !10087)
!10098 = !DILocalVariable(name: "mask", scope: !10087, file: !3, line: 690, type: !278)
!10099 = !DILocation(line: 690, column: 6, scope: !10087)
!10100 = !DILocalVariable(name: "size", scope: !10087, file: !3, line: 690, type: !278)
!10101 = !DILocation(line: 690, column: 12, scope: !10087)
!10102 = !DILocalVariable(name: "base", scope: !10087, file: !3, line: 690, type: !278)
!10103 = !DILocation(line: 690, column: 18, scope: !10087)
!10104 = !DILocation(line: 692, column: 24, scope: !10087)
!10105 = !DILocation(line: 692, column: 29, scope: !10087)
!10106 = !DILocation(line: 692, column: 2, scope: !10087)
!10107 = !DILocation(line: 693, column: 7, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 693, column: 6)
!10109 = !DILocation(line: 693, column: 16, scope: !10108)
!10110 = !DILocation(line: 693, column: 14, scope: !10108)
!10111 = !DILocation(line: 693, column: 27, scope: !10108)
!10112 = !DILocation(line: 693, column: 24, scope: !10108)
!10113 = !DILocation(line: 693, column: 6, scope: !10087)
!10114 = !DILocation(line: 694, column: 3, scope: !10108)
!10115 = !DILocation(line: 695, column: 9, scope: !10087)
!10116 = !DILocation(line: 695, column: 16, scope: !10087)
!10117 = !DILocation(line: 695, column: 7, scope: !10087)
!10118 = !DILocation(line: 696, column: 10, scope: !10087)
!10119 = !DILocation(line: 696, column: 17, scope: !10087)
!10120 = !DILocation(line: 696, column: 25, scope: !10087)
!10121 = !DILocation(line: 696, column: 7, scope: !10087)
!10122 = !DILocation(line: 697, column: 7, scope: !10087)
!10123 = !DILocation(line: 698, column: 2, scope: !10087)
!10124 = !DILocalVariable(name: "bit", scope: !10125, file: !3, line: 699, type: !7)
!10125 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 698, column: 11)
!10126 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 698, column: 2)
!10127 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 698, column: 2)
!10128 = !DILocation(line: 699, column: 12, scope: !10125)
!10129 = !DILocation(line: 699, column: 18, scope: !10125)
!10130 = !DILocation(line: 699, column: 23, scope: !10125)
!10131 = !DILocation(line: 700, column: 8, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10125, file: !3, line: 700, column: 7)
!10133 = !DILocation(line: 700, column: 14, scope: !10132)
!10134 = !DILocation(line: 700, column: 12, scope: !10132)
!10135 = !DILocation(line: 700, column: 23, scope: !10132)
!10136 = !DILocation(line: 700, column: 20, scope: !10132)
!10137 = !DILocation(line: 700, column: 7, scope: !10125)
!10138 = !DILocation(line: 701, column: 4, scope: !10132)
!10139 = !DILocation(line: 702, column: 10, scope: !10125)
!10140 = !DILocation(line: 702, column: 8, scope: !10125)
!10141 = !DILocation(line: 698, column: 2, scope: !10126)
!10142 = distinct !{!10142, !10143, !10144}
!10143 = !DILocation(line: 698, column: 2, scope: !10127)
!10144 = !DILocation(line: 703, column: 2, scope: !10127)
!10145 = !DILocation(line: 709, column: 11, scope: !10087)
!10146 = !DILocation(line: 709, column: 10, scope: !10087)
!10147 = !DILocation(line: 709, column: 7, scope: !10087)
!10148 = !DILocation(line: 710, column: 2, scope: !10087)
!10149 = !DILocation(line: 711, column: 1, scope: !10087)
!10150 = distinct !DISubprogram(name: "ich6_lpc_acpi_gpio", scope: !3, file: !3, line: 798, type: !4131, scopeLine: 799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10151 = !DILocalVariable(name: "dev", arg: 1, scope: !10150, file: !3, line: 798, type: !3449)
!10152 = !DILocation(line: 798, column: 48, scope: !10150)
!10153 = !DILocalVariable(name: "enable", scope: !10150, file: !3, line: 800, type: !465)
!10154 = !DILocation(line: 800, column: 5, scope: !10150)
!10155 = !DILocation(line: 802, column: 23, scope: !10150)
!10156 = !DILocation(line: 802, column: 2, scope: !10150)
!10157 = !DILocation(line: 803, column: 6, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 803, column: 6)
!10159 = !DILocation(line: 803, column: 13, scope: !10158)
!10160 = !DILocation(line: 803, column: 6, scope: !10150)
!10161 = !DILocation(line: 804, column: 19, scope: !10158)
!10162 = !DILocation(line: 804, column: 3, scope: !10158)
!10163 = !DILocation(line: 807, column: 23, scope: !10150)
!10164 = !DILocation(line: 807, column: 2, scope: !10150)
!10165 = !DILocation(line: 808, column: 6, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 808, column: 6)
!10167 = !DILocation(line: 808, column: 13, scope: !10166)
!10168 = !DILocation(line: 808, column: 6, scope: !10150)
!10169 = !DILocation(line: 809, column: 19, scope: !10166)
!10170 = !DILocation(line: 809, column: 3, scope: !10166)
!10171 = !DILocation(line: 811, column: 1, scope: !10150)
!10172 = distinct !DISubprogram(name: "ich6_lpc_generic_decode", scope: !3, file: !3, line: 813, type: !10173, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10173 = !DISubroutineType(types: !10174)
!10174 = !{null, !3449, !7, !707, !277}
!10175 = !DILocalVariable(name: "dev", arg: 1, scope: !10172, file: !3, line: 813, type: !3449)
!10176 = !DILocation(line: 813, column: 53, scope: !10172)
!10177 = !DILocalVariable(name: "reg", arg: 2, scope: !10172, file: !3, line: 813, type: !7)
!10178 = !DILocation(line: 813, column: 67, scope: !10172)
!10179 = !DILocalVariable(name: "name", arg: 3, scope: !10172, file: !3, line: 814, type: !707)
!10180 = !DILocation(line: 814, column: 21, scope: !10172)
!10181 = !DILocalVariable(name: "dynsize", arg: 4, scope: !10172, file: !3, line: 814, type: !277)
!10182 = !DILocation(line: 814, column: 31, scope: !10172)
!10183 = !DILocalVariable(name: "val", scope: !10172, file: !3, line: 816, type: !278)
!10184 = !DILocation(line: 816, column: 6, scope: !10172)
!10185 = !DILocalVariable(name: "size", scope: !10172, file: !3, line: 817, type: !278)
!10186 = !DILocation(line: 817, column: 6, scope: !10172)
!10187 = !DILocalVariable(name: "base", scope: !10172, file: !3, line: 817, type: !278)
!10188 = !DILocation(line: 817, column: 12, scope: !10172)
!10189 = !DILocation(line: 819, column: 24, scope: !10172)
!10190 = !DILocation(line: 819, column: 29, scope: !10172)
!10191 = !DILocation(line: 819, column: 2, scope: !10172)
!10192 = !DILocation(line: 822, column: 8, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 822, column: 6)
!10194 = !DILocation(line: 822, column: 12, scope: !10193)
!10195 = !DILocation(line: 822, column: 6, scope: !10172)
!10196 = !DILocation(line: 823, column: 3, scope: !10193)
!10197 = !DILocation(line: 824, column: 9, scope: !10172)
!10198 = !DILocation(line: 824, column: 13, scope: !10172)
!10199 = !DILocation(line: 824, column: 7, scope: !10172)
!10200 = !DILocation(line: 825, column: 6, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 825, column: 6)
!10202 = !DILocation(line: 825, column: 6, scope: !10172)
!10203 = !DILocation(line: 832, column: 8, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 825, column: 15)
!10205 = !DILocation(line: 833, column: 2, scope: !10204)
!10206 = !DILocation(line: 834, column: 8, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 833, column: 9)
!10208 = !DILocation(line: 836, column: 12, scope: !10172)
!10209 = !DILocation(line: 836, column: 16, scope: !10172)
!10210 = !DILocation(line: 836, column: 10, scope: !10172)
!10211 = !DILocation(line: 836, column: 7, scope: !10172)
!10212 = !DILocation(line: 842, column: 2, scope: !10172)
!10213 = !DILocation(line: 843, column: 1, scope: !10172)
!10214 = distinct !DISubprogram(name: "ich7_lpc_generic_decode", scope: !3, file: !3, line: 857, type: !10215, scopeLine: 859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10215 = !DISubroutineType(types: !10216)
!10216 = !{null, !3449, !7, !707}
!10217 = !DILocalVariable(name: "dev", arg: 1, scope: !10214, file: !3, line: 857, type: !3449)
!10218 = !DILocation(line: 857, column: 53, scope: !10214)
!10219 = !DILocalVariable(name: "reg", arg: 2, scope: !10214, file: !3, line: 857, type: !7)
!10220 = !DILocation(line: 857, column: 67, scope: !10214)
!10221 = !DILocalVariable(name: "name", arg: 3, scope: !10214, file: !3, line: 858, type: !707)
!10222 = !DILocation(line: 858, column: 21, scope: !10214)
!10223 = !DILocalVariable(name: "val", scope: !10214, file: !3, line: 860, type: !278)
!10224 = !DILocation(line: 860, column: 6, scope: !10214)
!10225 = !DILocalVariable(name: "mask", scope: !10214, file: !3, line: 861, type: !278)
!10226 = !DILocation(line: 861, column: 6, scope: !10214)
!10227 = !DILocalVariable(name: "base", scope: !10214, file: !3, line: 861, type: !278)
!10228 = !DILocation(line: 861, column: 12, scope: !10214)
!10229 = !DILocation(line: 863, column: 24, scope: !10214)
!10230 = !DILocation(line: 863, column: 29, scope: !10214)
!10231 = !DILocation(line: 863, column: 2, scope: !10214)
!10232 = !DILocation(line: 866, column: 8, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 866, column: 6)
!10234 = !DILocation(line: 866, column: 12, scope: !10233)
!10235 = !DILocation(line: 866, column: 6, scope: !10214)
!10236 = !DILocation(line: 867, column: 3, scope: !10233)
!10237 = !DILocation(line: 870, column: 9, scope: !10214)
!10238 = !DILocation(line: 870, column: 13, scope: !10214)
!10239 = !DILocation(line: 870, column: 7, scope: !10214)
!10240 = !DILocation(line: 871, column: 10, scope: !10214)
!10241 = !DILocation(line: 871, column: 14, scope: !10214)
!10242 = !DILocation(line: 871, column: 21, scope: !10214)
!10243 = !DILocation(line: 871, column: 7, scope: !10214)
!10244 = !DILocation(line: 872, column: 7, scope: !10214)
!10245 = !DILocation(line: 878, column: 2, scope: !10214)
!10246 = !DILocation(line: 879, column: 1, scope: !10214)
!10247 = distinct !DISubprogram(name: "readl", scope: !9831, file: !9831, line: 59, type: !10248, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10248 = !DISubroutineType(types: !10249)
!10249 = !{!7, !10250}
!10250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10251, size: 64)
!10251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10252)
!10252 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!10253 = !DILocalVariable(name: "addr", arg: 1, scope: !10247, file: !9831, line: 59, type: !10250)
!10254 = !DILocation(line: 59, column: 1, scope: !10247)
!10255 = !DILocalVariable(name: "ret", scope: !10247, file: !9831, line: 59, type: !7)
!10256 = !{i32 -2143402365}
!10257 = distinct !DISubprogram(name: "writel", scope: !9831, file: !9831, line: 67, type: !10258, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10258 = !DISubroutineType(types: !10259)
!10259 = !{null, !7, !10260}
!10260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10252, size: 64)
!10261 = !DILocalVariable(name: "val", arg: 1, scope: !10257, file: !9831, line: 67, type: !7)
!10262 = !DILocation(line: 67, column: 1, scope: !10257)
!10263 = !DILocalVariable(name: "addr", arg: 2, scope: !10257, file: !9831, line: 67, type: !10260)
!10264 = !{i32 -2143399972}
!10265 = distinct !DISubprogram(name: "device_disable_async_suspend", scope: !84, file: !84, line: 691, type: !3551, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10266 = !DILocalVariable(name: "dev", arg: 1, scope: !10265, file: !84, line: 691, type: !3524)
!10267 = !DILocation(line: 691, column: 64, scope: !10265)
!10268 = !DILocation(line: 693, column: 7, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10265, file: !84, line: 693, column: 6)
!10270 = !DILocation(line: 693, column: 12, scope: !10269)
!10271 = !DILocation(line: 693, column: 18, scope: !10269)
!10272 = !DILocation(line: 693, column: 6, scope: !10265)
!10273 = !DILocation(line: 694, column: 3, scope: !10269)
!10274 = !DILocation(line: 694, column: 8, scope: !10269)
!10275 = !DILocation(line: 694, column: 14, scope: !10269)
!10276 = !DILocation(line: 694, column: 28, scope: !10269)
!10277 = !DILocation(line: 695, column: 1, scope: !10265)
!10278 = distinct !DISubprogram(name: "quirk_d3hot_delay", scope: !3, file: !3, line: 1874, type: !10279, scopeLine: 1875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10279 = !DISubroutineType(types: !10280)
!10280 = !{null, !3449, !7}
!10281 = !DILocalVariable(name: "dev", arg: 1, scope: !10278, file: !3, line: 1874, type: !3449)
!10282 = !DILocation(line: 1874, column: 47, scope: !10278)
!10283 = !DILocalVariable(name: "delay", arg: 2, scope: !10278, file: !3, line: 1874, type: !7)
!10284 = !DILocation(line: 1874, column: 65, scope: !10278)
!10285 = !DILocation(line: 1876, column: 6, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 1876, column: 6)
!10287 = !DILocation(line: 1876, column: 11, scope: !10286)
!10288 = !DILocation(line: 1876, column: 26, scope: !10286)
!10289 = !DILocation(line: 1876, column: 23, scope: !10286)
!10290 = !DILocation(line: 1876, column: 6, scope: !10278)
!10291 = !DILocation(line: 1877, column: 3, scope: !10286)
!10292 = !DILocation(line: 1879, column: 21, scope: !10278)
!10293 = !DILocation(line: 1879, column: 2, scope: !10278)
!10294 = !DILocation(line: 1879, column: 7, scope: !10278)
!10295 = !DILocation(line: 1879, column: 19, scope: !10278)
!10296 = !DILocation(line: 1880, column: 2, scope: !10278)
!10297 = !DILocation(line: 1882, column: 1, scope: !10278)
!10298 = distinct !DISubprogram(name: "dmi_disable_ioapicreroute", scope: !3, file: !3, line: 1909, type: !5810, scopeLine: 1910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10299 = !DILocalVariable(name: "d", arg: 1, scope: !10298, file: !3, line: 1909, type: !5812)
!10300 = !DILocation(line: 1909, column: 66, scope: !10298)
!10301 = !DILocation(line: 1911, column: 18, scope: !10298)
!10302 = !DILocation(line: 1912, column: 2, scope: !10298)
!10303 = !DILocation(line: 1914, column: 2, scope: !10298)
!10304 = distinct !DISubprogram(name: "outb", scope: !9831, file: !9831, line: 334, type: !10305, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10305 = !DISubroutineType(types: !10306)
!10306 = !{null, !467, !277}
!10307 = !DILocalVariable(name: "value", arg: 1, scope: !10304, file: !9831, line: 334, type: !467)
!10308 = !DILocation(line: 334, column: 1, scope: !10304)
!10309 = !DILocalVariable(name: "port", arg: 2, scope: !10304, file: !9831, line: 334, type: !277)
!10310 = !{i32 -2143390102}
!10311 = distinct !DISubprogram(name: "readb", scope: !9831, file: !9831, line: 57, type: !10312, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10312 = !DISubroutineType(types: !10313)
!10313 = !{!467, !10250}
!10314 = !DILocalVariable(name: "addr", arg: 1, scope: !10311, file: !9831, line: 57, type: !10250)
!10315 = !DILocation(line: 57, column: 1, scope: !10311)
!10316 = !DILocalVariable(name: "ret", scope: !10311, file: !9831, line: 57, type: !467)
!10317 = !{i32 -2143403196}
!10318 = distinct !DISubprogram(name: "writeb", scope: !9831, file: !9831, line: 65, type: !10319, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10319 = !DISubroutineType(types: !10320)
!10320 = !{null, !467, !10260}
!10321 = !DILocalVariable(name: "val", arg: 1, scope: !10318, file: !9831, line: 65, type: !467)
!10322 = !DILocation(line: 65, column: 1, scope: !10318)
!10323 = !DILocalVariable(name: "addr", arg: 2, scope: !10318, file: !9831, line: 65, type: !10260)
!10324 = !{i32 -2143400742}
!10325 = distinct !DISubprogram(name: "msi_ht_cap_enabled", scope: !3, file: !3, line: 2562, type: !4139, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10326 = !DILocalVariable(name: "dev", arg: 1, scope: !10325, file: !3, line: 2562, type: !3449)
!10327 = !DILocation(line: 2562, column: 47, scope: !10325)
!10328 = !DILocalVariable(name: "pos", scope: !10325, file: !3, line: 2564, type: !277)
!10329 = !DILocation(line: 2564, column: 6, scope: !10325)
!10330 = !DILocalVariable(name: "ttl", scope: !10325, file: !3, line: 2564, type: !277)
!10331 = !DILocation(line: 2564, column: 11, scope: !10325)
!10332 = !DILocation(line: 2566, column: 31, scope: !10325)
!10333 = !DILocation(line: 2566, column: 8, scope: !10325)
!10334 = !DILocation(line: 2566, column: 6, scope: !10325)
!10335 = !DILocation(line: 2567, column: 2, scope: !10325)
!10336 = !DILocation(line: 2567, column: 9, scope: !10325)
!10337 = !DILocation(line: 2567, column: 13, scope: !10325)
!10338 = !DILocation(line: 2567, column: 19, scope: !10325)
!10339 = !DILocation(line: 0, scope: !10325)
!10340 = !DILocalVariable(name: "flags", scope: !10341, file: !3, line: 2568, type: !465)
!10341 = distinct !DILexicalBlock(scope: !10325, file: !3, line: 2567, column: 23)
!10342 = !DILocation(line: 2568, column: 6, scope: !10341)
!10343 = !DILocation(line: 2570, column: 28, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 2570, column: 7)
!10345 = !DILocation(line: 2570, column: 33, scope: !10344)
!10346 = !DILocation(line: 2570, column: 37, scope: !10344)
!10347 = !DILocation(line: 2570, column: 7, scope: !10344)
!10348 = !DILocation(line: 2571, column: 15, scope: !10344)
!10349 = !DILocation(line: 2570, column: 7, scope: !10341)
!10350 = !DILocation(line: 2572, column: 4, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10344, file: !3, line: 2571, column: 21)
!10352 = !DILocation(line: 2575, column: 12, scope: !10351)
!10353 = !DILocation(line: 2575, column: 18, scope: !10351)
!10354 = !DILocation(line: 2575, column: 41, scope: !10351)
!10355 = !DILocation(line: 2575, column: 4, scope: !10351)
!10356 = !DILocation(line: 2578, column: 37, scope: !10341)
!10357 = !DILocation(line: 2578, column: 42, scope: !10341)
!10358 = !DILocation(line: 2578, column: 9, scope: !10341)
!10359 = !DILocation(line: 2578, column: 7, scope: !10341)
!10360 = distinct !{!10360, !10335, !10361}
!10361 = !DILocation(line: 2580, column: 2, scope: !10325)
!10362 = !DILocation(line: 2581, column: 2, scope: !10325)
!10363 = !DILocation(line: 2582, column: 1, scope: !10325)
!10364 = distinct !DISubprogram(name: "__nv_msi_ht_cap_quirk", scope: !3, file: !3, line: 2898, type: !10365, scopeLine: 2899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10365 = !DISubroutineType(types: !10366)
!10366 = !{null, !3449, !277}
!10367 = !DILocalVariable(name: "dev", arg: 1, scope: !10364, file: !3, line: 2898, type: !3449)
!10368 = !DILocation(line: 2898, column: 51, scope: !10364)
!10369 = !DILocalVariable(name: "all", arg: 2, scope: !10364, file: !3, line: 2898, type: !277)
!10370 = !DILocation(line: 2898, column: 60, scope: !10364)
!10371 = !DILocalVariable(name: "host_bridge", scope: !10364, file: !3, line: 2900, type: !3449)
!10372 = !DILocation(line: 2900, column: 18, scope: !10364)
!10373 = !DILocalVariable(name: "pos", scope: !10364, file: !3, line: 2901, type: !277)
!10374 = !DILocation(line: 2901, column: 6, scope: !10364)
!10375 = !DILocalVariable(name: "found", scope: !10364, file: !3, line: 2902, type: !277)
!10376 = !DILocation(line: 2902, column: 6, scope: !10364)
!10377 = !DILocation(line: 2904, column: 7, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 2904, column: 6)
!10379 = !DILocation(line: 2904, column: 6, scope: !10364)
!10380 = !DILocation(line: 2905, column: 3, scope: !10378)
!10381 = !DILocation(line: 2908, column: 31, scope: !10364)
!10382 = !DILocation(line: 2908, column: 10, scope: !10364)
!10383 = !DILocation(line: 2908, column: 8, scope: !10364)
!10384 = !DILocation(line: 2911, column: 6, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 2911, column: 6)
!10386 = !DILocation(line: 2911, column: 12, scope: !10385)
!10387 = !DILocation(line: 2911, column: 6, scope: !10364)
!10388 = !DILocation(line: 2912, column: 3, scope: !10385)
!10389 = !DILocation(line: 2918, column: 58, scope: !10364)
!10390 = !DILocation(line: 2918, column: 63, scope: !10364)
!10391 = !DILocation(line: 2918, column: 44, scope: !10364)
!10392 = !DILocation(line: 2918, column: 16, scope: !10364)
!10393 = !DILocation(line: 2918, column: 14, scope: !10364)
!10394 = !DILocation(line: 2920, column: 6, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 2920, column: 6)
!10396 = !DILocation(line: 2920, column: 18, scope: !10395)
!10397 = !DILocation(line: 2920, column: 6, scope: !10364)
!10398 = !DILocation(line: 2921, column: 3, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 2920, column: 27)
!10400 = !DILocation(line: 2922, column: 3, scope: !10399)
!10401 = !DILocation(line: 2925, column: 31, scope: !10364)
!10402 = !DILocation(line: 2925, column: 8, scope: !10364)
!10403 = !DILocation(line: 2925, column: 6, scope: !10364)
!10404 = !DILocation(line: 2926, column: 6, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 2926, column: 6)
!10406 = !DILocation(line: 2926, column: 10, scope: !10405)
!10407 = !DILocation(line: 2926, column: 6, scope: !10364)
!10408 = !DILocation(line: 2928, column: 7, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10410, file: !3, line: 2928, column: 7)
!10410 = distinct !DILexicalBlock(scope: !10405, file: !3, line: 2926, column: 16)
!10411 = !DILocation(line: 2928, column: 13, scope: !10409)
!10412 = !DILocation(line: 2928, column: 7, scope: !10410)
!10413 = !DILocation(line: 2930, column: 8, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 2930, column: 8)
!10415 = distinct !DILexicalBlock(scope: !10409, file: !3, line: 2928, column: 19)
!10416 = !DILocation(line: 2930, column: 8, scope: !10415)
!10417 = !DILocation(line: 2931, column: 27, scope: !10414)
!10418 = !DILocation(line: 2931, column: 5, scope: !10414)
!10419 = !DILocation(line: 2933, column: 30, scope: !10414)
!10420 = !DILocation(line: 2933, column: 5, scope: !10414)
!10421 = !DILocation(line: 2934, column: 3, scope: !10415)
!10422 = !DILocation(line: 2935, column: 3, scope: !10410)
!10423 = !DILocation(line: 2939, column: 6, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 2939, column: 6)
!10425 = !DILocation(line: 2939, column: 12, scope: !10424)
!10426 = !DILocation(line: 2939, column: 6, scope: !10364)
!10427 = !DILocation(line: 2940, column: 3, scope: !10424)
!10428 = !DILocation(line: 2943, column: 25, scope: !10364)
!10429 = !DILocation(line: 2943, column: 2, scope: !10364)
!10430 = !DILabel(scope: !10364, name: "out", file: !3, line: 2945)
!10431 = !DILocation(line: 2945, column: 1, scope: !10364)
!10432 = !DILocation(line: 2946, column: 14, scope: !10364)
!10433 = !DILocation(line: 2946, column: 2, scope: !10364)
!10434 = !DILocation(line: 2947, column: 1, scope: !10364)
!10435 = distinct !DISubprogram(name: "ht_check_msi_mapping", scope: !3, file: !3, line: 2753, type: !4139, scopeLine: 2754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10436 = !DILocalVariable(name: "dev", arg: 1, scope: !10435, file: !3, line: 2753, type: !3449)
!10437 = !DILocation(line: 2753, column: 49, scope: !10435)
!10438 = !DILocalVariable(name: "pos", scope: !10435, file: !3, line: 2755, type: !277)
!10439 = !DILocation(line: 2755, column: 6, scope: !10435)
!10440 = !DILocalVariable(name: "ttl", scope: !10435, file: !3, line: 2755, type: !277)
!10441 = !DILocation(line: 2755, column: 11, scope: !10435)
!10442 = !DILocalVariable(name: "found", scope: !10435, file: !3, line: 2756, type: !277)
!10443 = !DILocation(line: 2756, column: 6, scope: !10435)
!10444 = !DILocation(line: 2759, column: 31, scope: !10435)
!10445 = !DILocation(line: 2759, column: 8, scope: !10435)
!10446 = !DILocation(line: 2759, column: 6, scope: !10435)
!10447 = !DILocation(line: 2760, column: 2, scope: !10435)
!10448 = !DILocation(line: 2760, column: 9, scope: !10435)
!10449 = !DILocation(line: 2760, column: 13, scope: !10435)
!10450 = !DILocation(line: 2760, column: 19, scope: !10435)
!10451 = !DILocation(line: 0, scope: !10435)
!10452 = !DILocalVariable(name: "flags", scope: !10453, file: !3, line: 2761, type: !465)
!10453 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 2760, column: 23)
!10454 = !DILocation(line: 2761, column: 6, scope: !10453)
!10455 = !DILocation(line: 2763, column: 7, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 2763, column: 7)
!10457 = !DILocation(line: 2763, column: 13, scope: !10456)
!10458 = !DILocation(line: 2763, column: 7, scope: !10453)
!10459 = !DILocation(line: 2764, column: 10, scope: !10456)
!10460 = !DILocation(line: 2764, column: 4, scope: !10456)
!10461 = !DILocation(line: 2765, column: 28, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 2765, column: 7)
!10463 = !DILocation(line: 2765, column: 33, scope: !10462)
!10464 = !DILocation(line: 2765, column: 37, scope: !10462)
!10465 = !DILocation(line: 2765, column: 7, scope: !10462)
!10466 = !DILocation(line: 2766, column: 15, scope: !10462)
!10467 = !DILocation(line: 2765, column: 7, scope: !10453)
!10468 = !DILocation(line: 2767, column: 8, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10470, file: !3, line: 2767, column: 8)
!10470 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 2766, column: 21)
!10471 = !DILocation(line: 2767, column: 14, scope: !10469)
!10472 = !DILocation(line: 2767, column: 8, scope: !10470)
!10473 = !DILocation(line: 2768, column: 9, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 2768, column: 9)
!10475 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 2767, column: 37)
!10476 = !DILocation(line: 2768, column: 15, scope: !10474)
!10477 = !DILocation(line: 2768, column: 9, scope: !10475)
!10478 = !DILocation(line: 2769, column: 12, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 2768, column: 20)
!10480 = !DILocation(line: 2770, column: 6, scope: !10479)
!10481 = !DILocation(line: 2772, column: 4, scope: !10475)
!10482 = !DILocation(line: 2773, column: 3, scope: !10470)
!10483 = !DILocation(line: 2774, column: 37, scope: !10453)
!10484 = !DILocation(line: 2774, column: 42, scope: !10453)
!10485 = !DILocation(line: 2774, column: 9, scope: !10453)
!10486 = !DILocation(line: 2774, column: 7, scope: !10453)
!10487 = distinct !{!10487, !10447, !10488}
!10488 = !DILocation(line: 2776, column: 2, scope: !10435)
!10489 = !DILocation(line: 2778, column: 9, scope: !10435)
!10490 = !DILocation(line: 2778, column: 2, scope: !10435)
!10491 = distinct !DISubprogram(name: "pci_domain_nr", scope: !10492, file: !10492, line: 44, type: !3486, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10492 = !DIFile(filename: "./arch/x86/include/asm/pci.h", directory: "/home/lizy2001/genbc/linux")
!10493 = !DILocalVariable(name: "bus", arg: 1, scope: !10491, file: !10492, line: 44, type: !3454)
!10494 = !DILocation(line: 44, column: 49, scope: !10491)
!10495 = !DILocation(line: 46, column: 24, scope: !10491)
!10496 = !DILocation(line: 46, column: 9, scope: !10491)
!10497 = !DILocation(line: 46, column: 30, scope: !10491)
!10498 = !DILocation(line: 46, column: 2, scope: !10491)
!10499 = distinct !DISubprogram(name: "nv_ht_enable_msi_mapping", scope: !3, file: !3, line: 2839, type: !4131, scopeLine: 2840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10500 = !DILocalVariable(name: "dev", arg: 1, scope: !10499, file: !3, line: 2839, type: !3449)
!10501 = !DILocation(line: 2839, column: 54, scope: !10499)
!10502 = !DILocalVariable(name: "host_bridge", scope: !10499, file: !3, line: 2841, type: !3449)
!10503 = !DILocation(line: 2841, column: 18, scope: !10499)
!10504 = !DILocalVariable(name: "pos", scope: !10499, file: !3, line: 2842, type: !277)
!10505 = !DILocation(line: 2842, column: 6, scope: !10499)
!10506 = !DILocalVariable(name: "i", scope: !10499, file: !3, line: 2843, type: !277)
!10507 = !DILocation(line: 2843, column: 6, scope: !10499)
!10508 = !DILocalVariable(name: "dev_no", scope: !10499, file: !3, line: 2843, type: !277)
!10509 = !DILocation(line: 2843, column: 9, scope: !10499)
!10510 = !DILocalVariable(name: "found", scope: !10499, file: !3, line: 2844, type: !277)
!10511 = !DILocation(line: 2844, column: 6, scope: !10499)
!10512 = !DILocation(line: 2846, column: 11, scope: !10499)
!10513 = !DILocation(line: 2846, column: 16, scope: !10499)
!10514 = !DILocation(line: 2846, column: 22, scope: !10499)
!10515 = !DILocation(line: 2846, column: 9, scope: !10499)
!10516 = !DILocation(line: 2847, column: 11, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 2847, column: 2)
!10518 = !DILocation(line: 2847, column: 9, scope: !10517)
!10519 = !DILocation(line: 2847, column: 7, scope: !10517)
!10520 = !DILocation(line: 2847, column: 19, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 2847, column: 2)
!10522 = !DILocation(line: 2847, column: 21, scope: !10521)
!10523 = !DILocation(line: 2847, column: 2, scope: !10517)
!10524 = !DILocation(line: 2848, column: 30, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 2847, column: 32)
!10526 = !DILocation(line: 2848, column: 35, scope: !10525)
!10527 = !DILocation(line: 2848, column: 40, scope: !10525)
!10528 = !DILocation(line: 2848, column: 17, scope: !10525)
!10529 = !DILocation(line: 2848, column: 15, scope: !10525)
!10530 = !DILocation(line: 2849, column: 8, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 2849, column: 7)
!10532 = !DILocation(line: 2849, column: 7, scope: !10525)
!10533 = !DILocation(line: 2850, column: 4, scope: !10531)
!10534 = !DILocation(line: 2852, column: 32, scope: !10525)
!10535 = !DILocation(line: 2852, column: 9, scope: !10525)
!10536 = !DILocation(line: 2852, column: 7, scope: !10525)
!10537 = !DILocation(line: 2853, column: 7, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 2853, column: 7)
!10539 = !DILocation(line: 2853, column: 11, scope: !10538)
!10540 = !DILocation(line: 2853, column: 7, scope: !10525)
!10541 = !DILocation(line: 2854, column: 10, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 2853, column: 17)
!10543 = !DILocation(line: 2855, column: 4, scope: !10542)
!10544 = !DILocation(line: 2857, column: 15, scope: !10525)
!10545 = !DILocation(line: 2857, column: 3, scope: !10525)
!10546 = !DILocation(line: 2858, column: 2, scope: !10525)
!10547 = !DILocation(line: 2847, column: 28, scope: !10521)
!10548 = !DILocation(line: 2847, column: 2, scope: !10521)
!10549 = distinct !{!10549, !10523, !10550}
!10550 = !DILocation(line: 2858, column: 2, scope: !10517)
!10551 = !DILocation(line: 2860, column: 7, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 2860, column: 6)
!10553 = !DILocation(line: 2860, column: 6, scope: !10499)
!10554 = !DILocation(line: 2861, column: 3, scope: !10552)
!10555 = !DILocation(line: 2864, column: 6, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 2864, column: 6)
!10557 = !DILocation(line: 2864, column: 21, scope: !10556)
!10558 = !DILocation(line: 2864, column: 18, scope: !10556)
!10559 = !DILocation(line: 2864, column: 25, scope: !10556)
!10560 = !DILocation(line: 2864, column: 47, scope: !10556)
!10561 = !DILocation(line: 2864, column: 28, scope: !10556)
!10562 = !DILocation(line: 2864, column: 60, scope: !10556)
!10563 = !DILocation(line: 2865, column: 28, scope: !10556)
!10564 = !DILocation(line: 2865, column: 6, scope: !10556)
!10565 = !DILocation(line: 2864, column: 6, scope: !10499)
!10566 = !DILocation(line: 2866, column: 3, scope: !10556)
!10567 = !DILocation(line: 2869, column: 25, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 2869, column: 6)
!10569 = !DILocation(line: 2869, column: 6, scope: !10568)
!10570 = !DILocation(line: 2869, column: 6, scope: !10499)
!10571 = !DILocation(line: 2870, column: 3, scope: !10568)
!10572 = !DILocation(line: 2872, column: 24, scope: !10499)
!10573 = !DILocation(line: 2872, column: 2, scope: !10499)
!10574 = !DILabel(scope: !10499, name: "out", file: !3, line: 2874)
!10575 = !DILocation(line: 2874, column: 1, scope: !10499)
!10576 = !DILocation(line: 2875, column: 14, scope: !10499)
!10577 = !DILocation(line: 2875, column: 2, scope: !10499)
!10578 = !DILocation(line: 2876, column: 1, scope: !10499)
!10579 = distinct !DISubprogram(name: "ht_disable_msi_mapping", scope: !3, file: !3, line: 2878, type: !4131, scopeLine: 2879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10580 = !DILocalVariable(name: "dev", arg: 1, scope: !10579, file: !3, line: 2878, type: !3449)
!10581 = !DILocation(line: 2878, column: 52, scope: !10579)
!10582 = !DILocalVariable(name: "pos", scope: !10579, file: !3, line: 2880, type: !277)
!10583 = !DILocation(line: 2880, column: 6, scope: !10579)
!10584 = !DILocalVariable(name: "ttl", scope: !10579, file: !3, line: 2880, type: !277)
!10585 = !DILocation(line: 2880, column: 11, scope: !10579)
!10586 = !DILocation(line: 2882, column: 31, scope: !10579)
!10587 = !DILocation(line: 2882, column: 8, scope: !10579)
!10588 = !DILocation(line: 2882, column: 6, scope: !10579)
!10589 = !DILocation(line: 2883, column: 2, scope: !10579)
!10590 = !DILocation(line: 2883, column: 9, scope: !10579)
!10591 = !DILocation(line: 2883, column: 13, scope: !10579)
!10592 = !DILocation(line: 2883, column: 19, scope: !10579)
!10593 = !DILocation(line: 0, scope: !10579)
!10594 = !DILocalVariable(name: "flags", scope: !10595, file: !3, line: 2884, type: !465)
!10595 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 2883, column: 23)
!10596 = !DILocation(line: 2884, column: 6, scope: !10595)
!10597 = !DILocation(line: 2886, column: 28, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 2886, column: 7)
!10599 = !DILocation(line: 2886, column: 33, scope: !10598)
!10600 = !DILocation(line: 2886, column: 37, scope: !10598)
!10601 = !DILocation(line: 2886, column: 7, scope: !10598)
!10602 = !DILocation(line: 2887, column: 15, scope: !10598)
!10603 = !DILocation(line: 2886, column: 7, scope: !10595)
!10604 = !DILocation(line: 2888, column: 4, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2887, column: 21)
!10606 = !DILocation(line: 2890, column: 26, scope: !10605)
!10607 = !DILocation(line: 2890, column: 31, scope: !10605)
!10608 = !DILocation(line: 2890, column: 35, scope: !10605)
!10609 = !DILocation(line: 2891, column: 12, scope: !10605)
!10610 = !DILocation(line: 2891, column: 18, scope: !10605)
!10611 = !DILocation(line: 2890, column: 4, scope: !10605)
!10612 = !DILocation(line: 2892, column: 3, scope: !10605)
!10613 = !DILocation(line: 2893, column: 37, scope: !10595)
!10614 = !DILocation(line: 2893, column: 42, scope: !10595)
!10615 = !DILocation(line: 2893, column: 9, scope: !10595)
!10616 = !DILocation(line: 2893, column: 7, scope: !10595)
!10617 = distinct !{!10617, !10589, !10618}
!10618 = !DILocation(line: 2895, column: 2, scope: !10579)
!10619 = !DILocation(line: 2896, column: 1, scope: !10579)
!10620 = distinct !DISubprogram(name: "to_pci_sysdata", scope: !10492, file: !10492, line: 36, type: !10621, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10621 = !DISubroutineType(types: !10622)
!10622 = !{!10623, !10632}
!10623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10624, size: 64)
!10624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sysdata", file: !10492, line: 15, size: 320, elements: !10625)
!10625 = !{!10626, !10627, !10628, !10629, !10630, !10631}
!10626 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !10624, file: !10492, line: 16, baseType: !277, size: 32)
!10627 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10624, file: !10492, line: 17, baseType: !277, size: 32, offset: 32)
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "companion", scope: !10624, file: !10492, line: 19, baseType: !4303, size: 64, offset: 64)
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !10624, file: !10492, line: 22, baseType: !280, size: 64, offset: 128)
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !10624, file: !10492, line: 25, baseType: !280, size: 64, offset: 192)
!10631 = !DIDerivedType(tag: DW_TAG_member, name: "vmd_dev", scope: !10624, file: !10492, line: 28, baseType: !3449, size: 64, offset: 256)
!10632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10633, size: 64)
!10633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3455)
!10634 = !DILocalVariable(name: "bus", arg: 1, scope: !10620, file: !10492, line: 36, type: !10632)
!10635 = !DILocation(line: 36, column: 72, scope: !10620)
!10636 = !DILocation(line: 38, column: 9, scope: !10620)
!10637 = !DILocation(line: 38, column: 14, scope: !10620)
!10638 = !DILocation(line: 38, column: 2, scope: !10620)
!10639 = distinct !DISubprogram(name: "is_end_of_ht_chain", scope: !3, file: !3, line: 2815, type: !4139, scopeLine: 2816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10640 = !DILocalVariable(name: "dev", arg: 1, scope: !10639, file: !3, line: 2815, type: !3449)
!10641 = !DILocation(line: 2815, column: 47, scope: !10639)
!10642 = !DILocalVariable(name: "pos", scope: !10639, file: !3, line: 2817, type: !277)
!10643 = !DILocation(line: 2817, column: 6, scope: !10639)
!10644 = !DILocalVariable(name: "ctrl_off", scope: !10639, file: !3, line: 2817, type: !277)
!10645 = !DILocation(line: 2817, column: 11, scope: !10639)
!10646 = !DILocalVariable(name: "end", scope: !10639, file: !3, line: 2818, type: !277)
!10647 = !DILocation(line: 2818, column: 6, scope: !10639)
!10648 = !DILocalVariable(name: "flags", scope: !10639, file: !3, line: 2819, type: !272)
!10649 = !DILocation(line: 2819, column: 6, scope: !10639)
!10650 = !DILocalVariable(name: "ctrl", scope: !10639, file: !3, line: 2819, type: !272)
!10651 = !DILocation(line: 2819, column: 13, scope: !10639)
!10652 = !DILocation(line: 2821, column: 31, scope: !10639)
!10653 = !DILocation(line: 2821, column: 8, scope: !10639)
!10654 = !DILocation(line: 2821, column: 6, scope: !10639)
!10655 = !DILocation(line: 2823, column: 7, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10639, file: !3, line: 2823, column: 6)
!10657 = !DILocation(line: 2823, column: 6, scope: !10639)
!10658 = !DILocation(line: 2824, column: 3, scope: !10656)
!10659 = !DILocation(line: 2826, column: 23, scope: !10639)
!10660 = !DILocation(line: 2826, column: 28, scope: !10639)
!10661 = !DILocation(line: 2826, column: 32, scope: !10639)
!10662 = !DILocation(line: 2826, column: 2, scope: !10639)
!10663 = !DILocation(line: 2828, column: 15, scope: !10639)
!10664 = !DILocation(line: 2828, column: 21, scope: !10639)
!10665 = !DILocation(line: 2828, column: 28, scope: !10639)
!10666 = !DILocation(line: 2828, column: 13, scope: !10639)
!10667 = !DILocation(line: 2828, column: 11, scope: !10639)
!10668 = !DILocation(line: 2830, column: 23, scope: !10639)
!10669 = !DILocation(line: 2830, column: 28, scope: !10639)
!10670 = !DILocation(line: 2830, column: 34, scope: !10639)
!10671 = !DILocation(line: 2830, column: 32, scope: !10639)
!10672 = !DILocation(line: 2830, column: 2, scope: !10639)
!10673 = !DILocation(line: 2832, column: 6, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10639, file: !3, line: 2832, column: 6)
!10675 = !DILocation(line: 2832, column: 11, scope: !10674)
!10676 = !DILocation(line: 2832, column: 6, scope: !10639)
!10677 = !DILocation(line: 2833, column: 7, scope: !10674)
!10678 = !DILocation(line: 2833, column: 3, scope: !10674)
!10679 = !DILocation(line: 2832, column: 20, scope: !10674)
!10680 = !DILabel(scope: !10639, name: "out", file: !3, line: 2835)
!10681 = !DILocation(line: 2835, column: 1, scope: !10639)
!10682 = !DILocation(line: 2836, column: 9, scope: !10639)
!10683 = !DILocation(line: 2836, column: 2, scope: !10639)
!10684 = distinct !DISubprogram(name: "host_bridge_with_leaf", scope: !3, file: !3, line: 2781, type: !4139, scopeLine: 2782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10685 = !DILocalVariable(name: "host_bridge", arg: 1, scope: !10684, file: !3, line: 2781, type: !3449)
!10686 = !DILocation(line: 2781, column: 50, scope: !10684)
!10687 = !DILocalVariable(name: "dev", scope: !10684, file: !3, line: 2783, type: !3449)
!10688 = !DILocation(line: 2783, column: 18, scope: !10684)
!10689 = !DILocalVariable(name: "pos", scope: !10684, file: !3, line: 2784, type: !277)
!10690 = !DILocation(line: 2784, column: 6, scope: !10684)
!10691 = !DILocalVariable(name: "i", scope: !10684, file: !3, line: 2785, type: !277)
!10692 = !DILocation(line: 2785, column: 6, scope: !10684)
!10693 = !DILocalVariable(name: "dev_no", scope: !10684, file: !3, line: 2785, type: !277)
!10694 = !DILocation(line: 2785, column: 9, scope: !10684)
!10695 = !DILocalVariable(name: "found", scope: !10684, file: !3, line: 2786, type: !277)
!10696 = !DILocation(line: 2786, column: 6, scope: !10684)
!10697 = !DILocation(line: 2788, column: 11, scope: !10684)
!10698 = !DILocation(line: 2788, column: 24, scope: !10684)
!10699 = !DILocation(line: 2788, column: 30, scope: !10684)
!10700 = !DILocation(line: 2788, column: 9, scope: !10684)
!10701 = !DILocation(line: 2789, column: 11, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10684, file: !3, line: 2789, column: 2)
!10703 = !DILocation(line: 2789, column: 18, scope: !10702)
!10704 = !DILocation(line: 2789, column: 9, scope: !10702)
!10705 = !DILocation(line: 2789, column: 7, scope: !10702)
!10706 = !DILocation(line: 2789, column: 23, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 2789, column: 2)
!10708 = !DILocation(line: 2789, column: 25, scope: !10707)
!10709 = !DILocation(line: 2789, column: 2, scope: !10702)
!10710 = !DILocation(line: 2790, column: 22, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 2789, column: 38)
!10712 = !DILocation(line: 2790, column: 35, scope: !10711)
!10713 = !DILocation(line: 2790, column: 40, scope: !10711)
!10714 = !DILocation(line: 2790, column: 9, scope: !10711)
!10715 = !DILocation(line: 2790, column: 7, scope: !10711)
!10716 = !DILocation(line: 2791, column: 8, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10711, file: !3, line: 2791, column: 7)
!10718 = !DILocation(line: 2791, column: 7, scope: !10711)
!10719 = !DILocation(line: 2792, column: 4, scope: !10717)
!10720 = !DILocation(line: 2795, column: 32, scope: !10711)
!10721 = !DILocation(line: 2795, column: 9, scope: !10711)
!10722 = !DILocation(line: 2795, column: 7, scope: !10711)
!10723 = !DILocation(line: 2796, column: 7, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10711, file: !3, line: 2796, column: 7)
!10725 = !DILocation(line: 2796, column: 11, scope: !10724)
!10726 = !DILocation(line: 2796, column: 7, scope: !10711)
!10727 = !DILocation(line: 2797, column: 16, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 2796, column: 17)
!10729 = !DILocation(line: 2797, column: 4, scope: !10728)
!10730 = !DILocation(line: 2798, column: 4, scope: !10728)
!10731 = !DILocation(line: 2801, column: 28, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10711, file: !3, line: 2801, column: 7)
!10733 = !DILocation(line: 2801, column: 7, scope: !10732)
!10734 = !DILocation(line: 2801, column: 7, scope: !10711)
!10735 = !DILocation(line: 2802, column: 10, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 2801, column: 34)
!10737 = !DILocation(line: 2803, column: 16, scope: !10736)
!10738 = !DILocation(line: 2803, column: 4, scope: !10736)
!10739 = !DILocation(line: 2804, column: 4, scope: !10736)
!10740 = !DILocation(line: 2806, column: 15, scope: !10711)
!10741 = !DILocation(line: 2806, column: 3, scope: !10711)
!10742 = !DILocation(line: 2807, column: 2, scope: !10711)
!10743 = !DILocation(line: 2789, column: 34, scope: !10707)
!10744 = !DILocation(line: 2789, column: 2, scope: !10707)
!10745 = distinct !{!10745, !10709, !10746}
!10746 = !DILocation(line: 2807, column: 2, scope: !10702)
!10747 = !DILocation(line: 2809, column: 9, scope: !10684)
!10748 = !DILocation(line: 2809, column: 2, scope: !10684)
!10749 = distinct !DISubprogram(name: "pci_is_root_bus", scope: !6, file: !6, line: 656, type: !10750, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10750 = !DISubroutineType(types: !10751)
!10751 = !{!752, !3454}
!10752 = !DILocalVariable(name: "pbus", arg: 1, scope: !10749, file: !6, line: 656, type: !3454)
!10753 = !DILocation(line: 656, column: 52, scope: !10749)
!10754 = !DILocation(line: 658, column: 11, scope: !10749)
!10755 = !DILocation(line: 658, column: 17, scope: !10749)
!10756 = !DILocation(line: 658, column: 9, scope: !10749)
!10757 = !DILocation(line: 658, column: 2, scope: !10749)
!10758 = distinct !DISubprogram(name: "pci_pcie_type", scope: !6, file: !6, line: 2157, type: !10759, scopeLine: 2158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10759 = !DISubroutineType(types: !10760)
!10760 = !{!277, !9240}
!10761 = !DILocalVariable(name: "dev", arg: 1, scope: !10758, file: !6, line: 2157, type: !9240)
!10762 = !DILocation(line: 2157, column: 55, scope: !10758)
!10763 = !DILocation(line: 2159, column: 24, scope: !10758)
!10764 = !DILocation(line: 2159, column: 10, scope: !10758)
!10765 = !DILocation(line: 2159, column: 29, scope: !10758)
!10766 = !DILocation(line: 2159, column: 51, scope: !10758)
!10767 = !DILocation(line: 2159, column: 2, scope: !10758)
!10768 = distinct !DISubprogram(name: "acpi_device_handle", scope: !10769, file: !10769, line: 38, type: !10770, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10769 = !DIFile(filename: "./include/linux/acpi.h", directory: "/home/lizy2001/genbc/linux")
!10770 = !DISubroutineType(types: !10771)
!10771 = !{!4309, !4303}
!10772 = !DILocalVariable(name: "adev", arg: 1, scope: !10768, file: !10769, line: 38, type: !4303)
!10773 = !DILocation(line: 38, column: 66, scope: !10768)
!10774 = !DILocation(line: 40, column: 9, scope: !10768)
!10775 = !DILocation(line: 40, column: 16, scope: !10768)
!10776 = !DILocation(line: 40, column: 22, scope: !10768)
!10777 = !DILocation(line: 40, column: 2, scope: !10768)
!10778 = distinct !DISubprogram(name: "pcie_caps_reg", scope: !6, file: !6, line: 2148, type: !10779, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10779 = !DISubroutineType(types: !10780)
!10780 = !{!272, !9240}
!10781 = !DILocalVariable(name: "dev", arg: 1, scope: !10778, file: !6, line: 2148, type: !9240)
!10782 = !DILocation(line: 2148, column: 55, scope: !10778)
!10783 = !DILocation(line: 2150, column: 9, scope: !10778)
!10784 = !DILocation(line: 2150, column: 14, scope: !10778)
!10785 = !DILocation(line: 2150, column: 2, scope: !10778)
!10786 = distinct !DISubprogram(name: "reset_intel_82599_sfp_virtfn", scope: !3, file: !3, line: 3683, type: !4144, scopeLine: 3684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10787 = !DILocalVariable(name: "dev", arg: 1, scope: !10786, file: !3, line: 3683, type: !3449)
!10788 = !DILocation(line: 3683, column: 57, scope: !10786)
!10789 = !DILocalVariable(name: "probe", arg: 2, scope: !10786, file: !3, line: 3683, type: !277)
!10790 = !DILocation(line: 3683, column: 66, scope: !10786)
!10791 = !DILocation(line: 3693, column: 7, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10786, file: !3, line: 3693, column: 6)
!10793 = !DILocation(line: 3693, column: 6, scope: !10786)
!10794 = !DILocation(line: 3694, column: 12, scope: !10792)
!10795 = !DILocation(line: 3694, column: 3, scope: !10792)
!10796 = !DILocation(line: 3695, column: 2, scope: !10786)
!10797 = distinct !DISubprogram(name: "reset_ivb_igd", scope: !3, file: !3, line: 3705, type: !4144, scopeLine: 3706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10798 = !DILocalVariable(name: "m", arg: 1, scope: !10799, file: !10800, line: 363, type: !1959)
!10799 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !10800, file: !10800, line: 363, type: !10801, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10800 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!10801 = !DISubroutineType(types: !10802)
!10802 = !{!281, !1959}
!10803 = !DILocation(line: 363, column: 74, scope: !10799, inlinedAt: !10804)
!10804 = distinct !DILocation(line: 3731, column: 22, scope: !10797)
!10805 = !DILocalVariable(name: "dev", arg: 1, scope: !10797, file: !3, line: 3705, type: !3449)
!10806 = !DILocation(line: 3705, column: 42, scope: !10797)
!10807 = !DILocalVariable(name: "probe", arg: 2, scope: !10797, file: !3, line: 3705, type: !277)
!10808 = !DILocation(line: 3705, column: 51, scope: !10797)
!10809 = !DILocalVariable(name: "mmio_base", scope: !10797, file: !3, line: 3707, type: !280)
!10810 = !DILocation(line: 3707, column: 16, scope: !10797)
!10811 = !DILocalVariable(name: "timeout", scope: !10797, file: !3, line: 3708, type: !281)
!10812 = !DILocation(line: 3708, column: 16, scope: !10797)
!10813 = !DILocalVariable(name: "val", scope: !10797, file: !3, line: 3709, type: !278)
!10814 = !DILocation(line: 3709, column: 6, scope: !10797)
!10815 = !DILocation(line: 3711, column: 6, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10797, file: !3, line: 3711, column: 6)
!10817 = !DILocation(line: 3711, column: 6, scope: !10797)
!10818 = !DILocation(line: 3712, column: 3, scope: !10816)
!10819 = !DILocation(line: 3714, column: 24, scope: !10797)
!10820 = !DILocation(line: 3714, column: 14, scope: !10797)
!10821 = !DILocation(line: 3714, column: 12, scope: !10797)
!10822 = !DILocation(line: 3715, column: 7, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10797, file: !3, line: 3715, column: 6)
!10824 = !DILocation(line: 3715, column: 6, scope: !10797)
!10825 = !DILocation(line: 3716, column: 3, scope: !10823)
!10826 = !DILocation(line: 3718, column: 24, scope: !10797)
!10827 = !DILocation(line: 3718, column: 34, scope: !10797)
!10828 = !DILocation(line: 3718, column: 2, scope: !10797)
!10829 = !DILocation(line: 3726, column: 24, scope: !10797)
!10830 = !DILocation(line: 3726, column: 34, scope: !10797)
!10831 = !DILocation(line: 3726, column: 2, scope: !10797)
!10832 = !DILocation(line: 3728, column: 17, scope: !10797)
!10833 = !DILocation(line: 3728, column: 27, scope: !10797)
!10834 = !DILocation(line: 3728, column: 8, scope: !10797)
!10835 = !DILocation(line: 3728, column: 45, scope: !10797)
!10836 = !DILocation(line: 3728, column: 6, scope: !10797)
!10837 = !DILocation(line: 3729, column: 12, scope: !10797)
!10838 = !DILocation(line: 3729, column: 17, scope: !10797)
!10839 = !DILocation(line: 3729, column: 27, scope: !10797)
!10840 = !DILocation(line: 3729, column: 2, scope: !10797)
!10841 = !DILocation(line: 3731, column: 12, scope: !10797)
!10842 = !DILocation(line: 365, column: 27, scope: !10843, inlinedAt: !10804)
!10843 = distinct !DILexicalBlock(scope: !10799, file: !10800, line: 365, column: 6)
!10844 = !DILocation(line: 365, column: 6, scope: !10843, inlinedAt: !10804)
!10845 = !DILocation(line: 365, column: 6, scope: !10799, inlinedAt: !10804)
!10846 = !DILocation(line: 366, column: 12, scope: !10847, inlinedAt: !10804)
!10847 = distinct !DILexicalBlock(scope: !10848, file: !10800, line: 366, column: 7)
!10848 = distinct !DILexicalBlock(scope: !10843, file: !10800, line: 365, column: 31)
!10849 = !DILocation(line: 366, column: 14, scope: !10847, inlinedAt: !10804)
!10850 = !DILocation(line: 366, column: 7, scope: !10848, inlinedAt: !10804)
!10851 = !DILocation(line: 367, column: 4, scope: !10847, inlinedAt: !10804)
!10852 = !DILocation(line: 368, column: 28, scope: !10848, inlinedAt: !10804)
!10853 = !DILocation(line: 368, column: 10, scope: !10848, inlinedAt: !10804)
!10854 = !DILocation(line: 368, column: 3, scope: !10848, inlinedAt: !10804)
!10855 = !DILocation(line: 370, column: 29, scope: !10856, inlinedAt: !10804)
!10856 = distinct !DILexicalBlock(scope: !10843, file: !10800, line: 369, column: 9)
!10857 = !DILocation(line: 370, column: 10, scope: !10856, inlinedAt: !10804)
!10858 = !DILocation(line: 370, column: 3, scope: !10856, inlinedAt: !10804)
!10859 = !DILocation(line: 372, column: 1, scope: !10799, inlinedAt: !10804)
!10860 = !DILocation(line: 3731, column: 20, scope: !10797)
!10861 = !DILocation(line: 3731, column: 10, scope: !10797)
!10862 = !DILocation(line: 3732, column: 2, scope: !10797)
!10863 = !DILocation(line: 3733, column: 18, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10797, file: !3, line: 3732, column: 5)
!10865 = !DILocation(line: 3733, column: 28, scope: !10864)
!10866 = !DILocation(line: 3733, column: 9, scope: !10864)
!10867 = !DILocation(line: 3733, column: 7, scope: !10864)
!10868 = !DILocation(line: 3734, column: 8, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10864, file: !3, line: 3734, column: 7)
!10870 = !DILocation(line: 3734, column: 12, scope: !10869)
!10871 = !DILocation(line: 3734, column: 26, scope: !10869)
!10872 = !DILocation(line: 3734, column: 7, scope: !10864)
!10873 = !DILocation(line: 3735, column: 4, scope: !10869)
!10874 = !DILocation(line: 3736, column: 3, scope: !10864)
!10875 = !DILocation(line: 3737, column: 2, scope: !10864)
!10876 = !DILocation(line: 3737, column: 11, scope: !10797)
!10877 = distinct !{!10877, !10862, !10878}
!10878 = !DILocation(line: 3737, column: 40, scope: !10797)
!10879 = !DILocation(line: 3738, column: 2, scope: !10797)
!10880 = !DILabel(scope: !10797, name: "reset_complete", file: !3, line: 3740)
!10881 = !DILocation(line: 3740, column: 1, scope: !10797)
!10882 = !DILocation(line: 3741, column: 24, scope: !10797)
!10883 = !DILocation(line: 3741, column: 34, scope: !10797)
!10884 = !DILocation(line: 3741, column: 2, scope: !10797)
!10885 = !DILocation(line: 3743, column: 14, scope: !10797)
!10886 = !DILocation(line: 3743, column: 19, scope: !10797)
!10887 = !DILocation(line: 3743, column: 2, scope: !10797)
!10888 = !DILocation(line: 3744, column: 2, scope: !10797)
!10889 = !DILocation(line: 3745, column: 1, scope: !10797)
!10890 = distinct !DISubprogram(name: "nvme_disable_and_flr", scope: !3, file: !3, line: 3826, type: !4144, scopeLine: 3827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10891 = !DILocalVariable(name: "dev", arg: 1, scope: !10890, file: !3, line: 3826, type: !3449)
!10892 = !DILocation(line: 3826, column: 49, scope: !10890)
!10893 = !DILocalVariable(name: "probe", arg: 2, scope: !10890, file: !3, line: 3826, type: !277)
!10894 = !DILocation(line: 3826, column: 58, scope: !10890)
!10895 = !DILocalVariable(name: "bar", scope: !10890, file: !3, line: 3828, type: !280)
!10896 = !DILocation(line: 3828, column: 16, scope: !10890)
!10897 = !DILocalVariable(name: "cmd", scope: !10890, file: !3, line: 3829, type: !272)
!10898 = !DILocation(line: 3829, column: 6, scope: !10890)
!10899 = !DILocalVariable(name: "cfg", scope: !10890, file: !3, line: 3830, type: !278)
!10900 = !DILocation(line: 3830, column: 6, scope: !10890)
!10901 = !DILocation(line: 3832, column: 6, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 3832, column: 6)
!10903 = !DILocation(line: 3832, column: 11, scope: !10902)
!10904 = !DILocation(line: 3832, column: 17, scope: !10902)
!10905 = !DILocation(line: 3832, column: 46, scope: !10902)
!10906 = !DILocation(line: 3833, column: 20, scope: !10902)
!10907 = !DILocation(line: 3833, column: 7, scope: !10902)
!10908 = !DILocation(line: 3833, column: 25, scope: !10902)
!10909 = !DILocation(line: 3833, column: 29, scope: !10902)
!10910 = !DILocation(line: 3832, column: 6, scope: !10890)
!10911 = !DILocation(line: 3834, column: 3, scope: !10902)
!10912 = !DILocation(line: 3836, column: 6, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 3836, column: 6)
!10914 = !DILocation(line: 3836, column: 6, scope: !10890)
!10915 = !DILocation(line: 3837, column: 3, scope: !10913)
!10916 = !DILocation(line: 3839, column: 18, scope: !10890)
!10917 = !DILocation(line: 3839, column: 8, scope: !10890)
!10918 = !DILocation(line: 3839, column: 6, scope: !10890)
!10919 = !DILocation(line: 3840, column: 7, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 3840, column: 6)
!10921 = !DILocation(line: 3840, column: 6, scope: !10890)
!10922 = !DILocation(line: 3841, column: 3, scope: !10920)
!10923 = !DILocation(line: 3843, column: 23, scope: !10890)
!10924 = !DILocation(line: 3843, column: 2, scope: !10890)
!10925 = !DILocation(line: 3844, column: 24, scope: !10890)
!10926 = !DILocation(line: 3844, column: 42, scope: !10890)
!10927 = !DILocation(line: 3844, column: 46, scope: !10890)
!10928 = !DILocation(line: 3844, column: 2, scope: !10890)
!10929 = !DILocation(line: 3846, column: 14, scope: !10890)
!10930 = !DILocation(line: 3846, column: 18, scope: !10890)
!10931 = !DILocation(line: 3846, column: 8, scope: !10890)
!10932 = !DILocation(line: 3846, column: 6, scope: !10890)
!10933 = !DILocation(line: 3849, column: 6, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 3849, column: 6)
!10935 = !DILocation(line: 3849, column: 10, scope: !10934)
!10936 = !DILocation(line: 3849, column: 6, scope: !10890)
!10937 = !DILocalVariable(name: "cap", scope: !10938, file: !3, line: 3850, type: !278)
!10938 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 3849, column: 28)
!10939 = !DILocation(line: 3850, column: 7, scope: !10938)
!10940 = !DILocation(line: 3850, column: 19, scope: !10938)
!10941 = !DILocation(line: 3850, column: 23, scope: !10938)
!10942 = !DILocation(line: 3850, column: 13, scope: !10938)
!10943 = !DILocalVariable(name: "timeout", scope: !10938, file: !3, line: 3851, type: !281)
!10944 = !DILocation(line: 3851, column: 17, scope: !10938)
!10945 = !DILocation(line: 3858, column: 7, scope: !10938)
!10946 = !DILocation(line: 3860, column: 10, scope: !10938)
!10947 = !DILocation(line: 3860, column: 15, scope: !10938)
!10948 = !DILocation(line: 3860, column: 19, scope: !10938)
!10949 = !DILocation(line: 3860, column: 3, scope: !10938)
!10950 = !DILocation(line: 3869, column: 15, scope: !10938)
!10951 = !DILocation(line: 3869, column: 37, scope: !10938)
!10952 = !DILocation(line: 3869, column: 42, scope: !10938)
!10953 = !DILocation(line: 3869, column: 47, scope: !10938)
!10954 = !DILocation(line: 3869, column: 13, scope: !10938)
!10955 = !DILocation(line: 3869, column: 54, scope: !10938)
!10956 = !DILocation(line: 3869, column: 52, scope: !10938)
!10957 = !DILocation(line: 3869, column: 11, scope: !10938)
!10958 = !DILocation(line: 3871, column: 3, scope: !10938)
!10959 = !DILocalVariable(name: "status", scope: !10960, file: !3, line: 3872, type: !278)
!10960 = distinct !DILexicalBlock(scope: !10961, file: !3, line: 3871, column: 12)
!10961 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 3871, column: 3)
!10962 = distinct !DILexicalBlock(scope: !10938, file: !3, line: 3871, column: 3)
!10963 = !DILocation(line: 3872, column: 8, scope: !10960)
!10964 = !DILocation(line: 3872, column: 23, scope: !10960)
!10965 = !DILocation(line: 3872, column: 27, scope: !10960)
!10966 = !DILocation(line: 3872, column: 17, scope: !10960)
!10967 = !DILocation(line: 3875, column: 10, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10960, file: !3, line: 3875, column: 8)
!10969 = !DILocation(line: 3875, column: 17, scope: !10968)
!10970 = !DILocation(line: 3875, column: 8, scope: !10960)
!10971 = !DILocation(line: 3876, column: 5, scope: !10968)
!10972 = !DILocation(line: 3878, column: 4, scope: !10960)
!10973 = !DILocation(line: 3880, column: 8, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10960, file: !3, line: 3880, column: 8)
!10975 = !DILocation(line: 3880, column: 8, scope: !10960)
!10976 = !DILocation(line: 3881, column: 5, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 3880, column: 38)
!10978 = !DILocation(line: 3882, column: 5, scope: !10977)
!10979 = !DILocation(line: 3871, column: 3, scope: !10961)
!10980 = distinct !{!10980, !10981, !10982}
!10981 = !DILocation(line: 3871, column: 3, scope: !10962)
!10982 = !DILocation(line: 3884, column: 3, scope: !10962)
!10983 = !DILocation(line: 3885, column: 2, scope: !10938)
!10984 = !DILocation(line: 3887, column: 14, scope: !10890)
!10985 = !DILocation(line: 3887, column: 19, scope: !10890)
!10986 = !DILocation(line: 3887, column: 2, scope: !10890)
!10987 = !DILocation(line: 3889, column: 11, scope: !10890)
!10988 = !DILocation(line: 3889, column: 2, scope: !10890)
!10989 = !DILocation(line: 3891, column: 2, scope: !10890)
!10990 = !DILocation(line: 3892, column: 1, scope: !10890)
!10991 = distinct !DISubprogram(name: "delay_250ms_after_flr", scope: !3, file: !3, line: 3900, type: !4144, scopeLine: 3901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!10992 = !DILocalVariable(name: "dev", arg: 1, scope: !10991, file: !3, line: 3900, type: !3449)
!10993 = !DILocation(line: 3900, column: 50, scope: !10991)
!10994 = !DILocalVariable(name: "probe", arg: 2, scope: !10991, file: !3, line: 3900, type: !277)
!10995 = !DILocation(line: 3900, column: 59, scope: !10991)
!10996 = !DILocation(line: 3902, column: 20, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3902, column: 6)
!10998 = !DILocation(line: 3902, column: 7, scope: !10997)
!10999 = !DILocation(line: 3902, column: 6, scope: !10991)
!11000 = !DILocation(line: 3903, column: 3, scope: !10997)
!11001 = !DILocation(line: 3905, column: 6, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3905, column: 6)
!11003 = !DILocation(line: 3905, column: 6, scope: !10991)
!11004 = !DILocation(line: 3906, column: 3, scope: !11002)
!11005 = !DILocation(line: 3908, column: 11, scope: !10991)
!11006 = !DILocation(line: 3908, column: 2, scope: !10991)
!11007 = !DILocation(line: 3910, column: 2, scope: !10991)
!11008 = !DILocation(line: 3912, column: 2, scope: !10991)
!11009 = !DILocation(line: 3913, column: 1, scope: !10991)
!11010 = distinct !DISubprogram(name: "reset_chelsio_generic_dev", scope: !3, file: !3, line: 3748, type: !4144, scopeLine: 3749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11011 = !DILocalVariable(name: "dev", arg: 1, scope: !11010, file: !3, line: 3748, type: !3449)
!11012 = !DILocation(line: 3748, column: 54, scope: !11010)
!11013 = !DILocalVariable(name: "probe", arg: 2, scope: !11010, file: !3, line: 3748, type: !277)
!11014 = !DILocation(line: 3748, column: 63, scope: !11010)
!11015 = !DILocalVariable(name: "old_command", scope: !11010, file: !3, line: 3750, type: !272)
!11016 = !DILocation(line: 3750, column: 6, scope: !11010)
!11017 = !DILocalVariable(name: "msix_flags", scope: !11010, file: !3, line: 3751, type: !272)
!11018 = !DILocation(line: 3751, column: 6, scope: !11010)
!11019 = !DILocation(line: 3757, column: 7, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 3757, column: 6)
!11021 = !DILocation(line: 3757, column: 12, scope: !11020)
!11022 = !DILocation(line: 3757, column: 19, scope: !11020)
!11023 = !DILocation(line: 3757, column: 29, scope: !11020)
!11024 = !DILocation(line: 3757, column: 6, scope: !11010)
!11025 = !DILocation(line: 3758, column: 3, scope: !11020)
!11026 = !DILocation(line: 3764, column: 6, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 3764, column: 6)
!11028 = !DILocation(line: 3764, column: 6, scope: !11010)
!11029 = !DILocation(line: 3765, column: 3, scope: !11027)
!11030 = !DILocation(line: 3773, column: 23, scope: !11010)
!11031 = !DILocation(line: 3773, column: 2, scope: !11010)
!11032 = !DILocation(line: 3774, column: 24, scope: !11010)
!11033 = !DILocation(line: 3775, column: 10, scope: !11010)
!11034 = !DILocation(line: 3775, column: 22, scope: !11010)
!11035 = !DILocation(line: 3774, column: 2, scope: !11010)
!11036 = !DILocation(line: 3781, column: 17, scope: !11010)
!11037 = !DILocation(line: 3781, column: 2, scope: !11010)
!11038 = !DILocation(line: 3790, column: 23, scope: !11010)
!11039 = !DILocation(line: 3790, column: 28, scope: !11010)
!11040 = !DILocation(line: 3790, column: 33, scope: !11010)
!11041 = !DILocation(line: 3790, column: 41, scope: !11010)
!11042 = !DILocation(line: 3790, column: 2, scope: !11010)
!11043 = !DILocation(line: 3791, column: 7, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 3791, column: 6)
!11045 = !DILocation(line: 3791, column: 18, scope: !11044)
!11046 = !DILocation(line: 3791, column: 43, scope: !11044)
!11047 = !DILocation(line: 3791, column: 6, scope: !11010)
!11048 = !DILocation(line: 3792, column: 25, scope: !11044)
!11049 = !DILocation(line: 3792, column: 30, scope: !11044)
!11050 = !DILocation(line: 3792, column: 35, scope: !11044)
!11051 = !DILocation(line: 3792, column: 43, scope: !11044)
!11052 = !DILocation(line: 3793, column: 11, scope: !11044)
!11053 = !DILocation(line: 3793, column: 22, scope: !11044)
!11054 = !DILocation(line: 3794, column: 33, scope: !11044)
!11055 = !DILocation(line: 3792, column: 3, scope: !11044)
!11056 = !DILocation(line: 3797, column: 11, scope: !11010)
!11057 = !DILocation(line: 3797, column: 2, scope: !11010)
!11058 = !DILocation(line: 3804, column: 20, scope: !11010)
!11059 = !DILocation(line: 3804, column: 2, scope: !11010)
!11060 = !DILocation(line: 3805, column: 24, scope: !11010)
!11061 = !DILocation(line: 3805, column: 42, scope: !11010)
!11062 = !DILocation(line: 3805, column: 2, scope: !11010)
!11063 = !DILocation(line: 3806, column: 2, scope: !11010)
!11064 = !DILocation(line: 3807, column: 1, scope: !11010)
!11065 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !10800, file: !10800, line: 308, type: !10801, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11066 = !DILocalVariable(name: "m", arg: 1, scope: !11065, file: !10800, line: 308, type: !1959)
!11067 = !DILocation(line: 308, column: 66, scope: !11065)
!11068 = !DILocation(line: 310, column: 10, scope: !11065)
!11069 = !DILocation(line: 310, column: 12, scope: !11065)
!11070 = !DILocation(line: 310, column: 34, scope: !11065)
!11071 = !DILocation(line: 310, column: 39, scope: !11065)
!11072 = !DILocation(line: 310, column: 2, scope: !11065)
!11073 = distinct !DISubprogram(name: "pci_is_pcie", scope: !6, file: !6, line: 2139, type: !11074, scopeLine: 2140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11074 = !DISubroutineType(types: !11075)
!11075 = !{!752, !3449}
!11076 = !DILocalVariable(name: "dev", arg: 1, scope: !11073, file: !6, line: 2139, type: !3449)
!11077 = !DILocation(line: 2139, column: 48, scope: !11073)
!11078 = !DILocation(line: 2141, column: 22, scope: !11073)
!11079 = !DILocation(line: 2141, column: 9, scope: !11073)
!11080 = !DILocation(line: 2141, column: 2, scope: !11073)
!11081 = distinct !DISubprogram(name: "pci_pcie_cap", scope: !6, file: !6, line: 2128, type: !4139, scopeLine: 2129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11082 = !DILocalVariable(name: "dev", arg: 1, scope: !11081, file: !6, line: 2128, type: !3449)
!11083 = !DILocation(line: 2128, column: 48, scope: !11081)
!11084 = !DILocation(line: 2130, column: 9, scope: !11081)
!11085 = !DILocation(line: 2130, column: 14, scope: !11081)
!11086 = !DILocation(line: 2130, column: 2, scope: !11081)
!11087 = distinct !DISubprogram(name: "quirk_disable_root_port_attributes", scope: !3, file: !3, line: 4276, type: !4131, scopeLine: 4277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11088 = !DILocalVariable(name: "pdev", arg: 1, scope: !11087, file: !3, line: 4276, type: !3449)
!11089 = !DILocation(line: 4276, column: 64, scope: !11087)
!11090 = !DILocalVariable(name: "root_port", scope: !11087, file: !3, line: 4278, type: !3449)
!11091 = !DILocation(line: 4278, column: 18, scope: !11087)
!11092 = !DILocation(line: 4278, column: 50, scope: !11087)
!11093 = !DILocation(line: 4278, column: 30, scope: !11087)
!11094 = !DILocation(line: 4280, column: 7, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 4280, column: 6)
!11096 = !DILocation(line: 4280, column: 6, scope: !11087)
!11097 = !DILocation(line: 4281, column: 3, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11095, file: !3, line: 4280, column: 18)
!11099 = !DILocation(line: 4282, column: 3, scope: !11098)
!11100 = !DILocation(line: 4285, column: 2, scope: !11087)
!11101 = !DILocation(line: 4287, column: 37, scope: !11087)
!11102 = !DILocation(line: 4287, column: 2, scope: !11087)
!11103 = !DILocation(line: 4290, column: 1, scope: !11087)
!11104 = distinct !DISubprogram(name: "pcie_find_root_port", scope: !6, file: !6, line: 2169, type: !11105, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11105 = !DISubroutineType(types: !11106)
!11106 = !{!3449, !3449}
!11107 = !DILocalVariable(name: "dev", arg: 1, scope: !11104, file: !6, line: 2169, type: !3449)
!11108 = !DILocation(line: 2169, column: 67, scope: !11104)
!11109 = !DILocation(line: 2171, column: 2, scope: !11104)
!11110 = !DILocation(line: 2171, column: 9, scope: !11104)
!11111 = !DILocation(line: 2172, column: 19, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !6, line: 2172, column: 7)
!11113 = distinct !DILexicalBlock(scope: !11104, file: !6, line: 2171, column: 14)
!11114 = !DILocation(line: 2172, column: 7, scope: !11112)
!11115 = !DILocation(line: 2172, column: 24, scope: !11112)
!11116 = !DILocation(line: 2173, column: 21, scope: !11112)
!11117 = !DILocation(line: 2173, column: 7, scope: !11112)
!11118 = !DILocation(line: 2173, column: 26, scope: !11112)
!11119 = !DILocation(line: 2172, column: 7, scope: !11113)
!11120 = !DILocation(line: 2174, column: 11, scope: !11112)
!11121 = !DILocation(line: 2174, column: 4, scope: !11112)
!11122 = !DILocation(line: 2175, column: 29, scope: !11113)
!11123 = !DILocation(line: 2175, column: 9, scope: !11113)
!11124 = !DILocation(line: 2175, column: 7, scope: !11113)
!11125 = distinct !{!11125, !11109, !11126}
!11126 = !DILocation(line: 2176, column: 2, scope: !11104)
!11127 = !DILocation(line: 2178, column: 2, scope: !11104)
!11128 = !DILocation(line: 2179, column: 1, scope: !11104)
!11129 = distinct !DISubprogram(name: "pci_upstream_bridge", scope: !6, file: !6, line: 678, type: !11105, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11130 = !DILocalVariable(name: "dev", arg: 1, scope: !11129, file: !6, line: 678, type: !3449)
!11131 = !DILocation(line: 678, column: 67, scope: !11129)
!11132 = !DILocation(line: 680, column: 19, scope: !11129)
!11133 = !DILocation(line: 680, column: 8, scope: !11129)
!11134 = !DILocation(line: 680, column: 6, scope: !11129)
!11135 = !DILocation(line: 681, column: 22, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11129, file: !6, line: 681, column: 6)
!11137 = !DILocation(line: 681, column: 27, scope: !11136)
!11138 = !DILocation(line: 681, column: 6, scope: !11136)
!11139 = !DILocation(line: 681, column: 6, scope: !11129)
!11140 = !DILocation(line: 682, column: 3, scope: !11136)
!11141 = !DILocation(line: 684, column: 9, scope: !11129)
!11142 = !DILocation(line: 684, column: 14, scope: !11129)
!11143 = !DILocation(line: 684, column: 19, scope: !11129)
!11144 = !DILocation(line: 684, column: 2, scope: !11129)
!11145 = !DILocation(line: 685, column: 1, scope: !11129)
!11146 = distinct !DISubprogram(name: "pci_physfn", scope: !6, file: !6, line: 505, type: !11105, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11147 = !DILocalVariable(name: "dev", arg: 1, scope: !11146, file: !6, line: 505, type: !3449)
!11148 = !DILocation(line: 505, column: 58, scope: !11146)
!11149 = !DILocation(line: 508, column: 6, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11146, file: !6, line: 508, column: 6)
!11151 = !DILocation(line: 508, column: 11, scope: !11150)
!11152 = !DILocation(line: 508, column: 6, scope: !11146)
!11153 = !DILocation(line: 509, column: 9, scope: !11150)
!11154 = !DILocation(line: 509, column: 14, scope: !11150)
!11155 = !DILocation(line: 509, column: 7, scope: !11150)
!11156 = !DILocation(line: 509, column: 3, scope: !11150)
!11157 = !DILocation(line: 511, column: 9, scope: !11146)
!11158 = !DILocation(line: 511, column: 2, scope: !11146)
!11159 = distinct !DISubprogram(name: "pci_quirk_amd_sb_acs", scope: !3, file: !3, line: 4353, type: !5857, scopeLine: 4354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11160 = !DILocalVariable(name: "dev", arg: 1, scope: !11159, file: !3, line: 4353, type: !3449)
!11161 = !DILocation(line: 4353, column: 49, scope: !11159)
!11162 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !11159, file: !3, line: 4353, type: !272)
!11163 = !DILocation(line: 4353, column: 58, scope: !11159)
!11164 = !DILocalVariable(name: "header", scope: !11159, file: !3, line: 4356, type: !11165)
!11165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11166, size: 64)
!11166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_table_header", file: !11167, line: 68, size: 288, elements: !11168)
!11167 = !DIFile(filename: "./include/acpi/actbl.h", directory: "/home/lizy2001/genbc/linux")
!11168 = !{!11169, !11171, !11172, !11173, !11174, !11175, !11176, !11177, !11178}
!11169 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !11166, file: !11167, line: 69, baseType: !11170, size: 32)
!11170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 32, elements: !1683)
!11171 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11166, file: !11167, line: 70, baseType: !278, size: 32, offset: 32)
!11172 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !11166, file: !11167, line: 71, baseType: !465, size: 8, offset: 64)
!11173 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !11166, file: !11167, line: 72, baseType: !465, size: 8, offset: 72)
!11174 = !DIDerivedType(tag: DW_TAG_member, name: "oem_id", scope: !11166, file: !11167, line: 73, baseType: !1782, size: 48, offset: 80)
!11175 = !DIDerivedType(tag: DW_TAG_member, name: "oem_table_id", scope: !11166, file: !11167, line: 74, baseType: !3177, size: 64, offset: 128)
!11176 = !DIDerivedType(tag: DW_TAG_member, name: "oem_revision", scope: !11166, file: !11167, line: 75, baseType: !278, size: 32, offset: 192)
!11177 = !DIDerivedType(tag: DW_TAG_member, name: "asl_compiler_id", scope: !11166, file: !11167, line: 76, baseType: !11170, size: 32, offset: 224)
!11178 = !DIDerivedType(tag: DW_TAG_member, name: "asl_compiler_revision", scope: !11166, file: !11167, line: 77, baseType: !278, size: 32, offset: 256)
!11179 = !DILocation(line: 4356, column: 28, scope: !11159)
!11180 = !DILocalVariable(name: "status", scope: !11159, file: !3, line: 4357, type: !11181)
!11181 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_status", file: !4310, line: 421, baseType: !278)
!11182 = !DILocation(line: 4357, column: 14, scope: !11159)
!11183 = !DILocation(line: 4360, column: 7, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 4360, column: 6)
!11185 = !DILocation(line: 4360, column: 12, scope: !11184)
!11186 = !DILocation(line: 4360, column: 26, scope: !11184)
!11187 = !DILocation(line: 4360, column: 46, scope: !11184)
!11188 = !DILocation(line: 4360, column: 51, scope: !11184)
!11189 = !DILocation(line: 4360, column: 30, scope: !11184)
!11190 = !DILocation(line: 4360, column: 6, scope: !11159)
!11191 = !DILocation(line: 4361, column: 3, scope: !11184)
!11192 = !DILocation(line: 4364, column: 11, scope: !11159)
!11193 = !DILocation(line: 4364, column: 9, scope: !11159)
!11194 = !DILocation(line: 4365, column: 6, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 4365, column: 6)
!11196 = !DILocation(line: 4365, column: 6, scope: !11159)
!11197 = !DILocation(line: 4366, column: 3, scope: !11195)
!11198 = !DILocation(line: 4368, column: 17, scope: !11159)
!11199 = !DILocation(line: 4368, column: 2, scope: !11159)
!11200 = !DILocation(line: 4371, column: 12, scope: !11159)
!11201 = !DILocation(line: 4373, column: 30, scope: !11159)
!11202 = !DILocation(line: 4373, column: 9, scope: !11159)
!11203 = !DILocation(line: 4373, column: 2, scope: !11159)
!11204 = !DILocation(line: 4377, column: 1, scope: !11159)
!11205 = distinct !DISubprogram(name: "pci_quirk_mf_endpoint_acs", scope: !3, file: !3, line: 4627, type: !5857, scopeLine: 4628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11206 = !DILocalVariable(name: "dev", arg: 1, scope: !11205, file: !3, line: 4627, type: !3449)
!11207 = !DILocation(line: 4627, column: 54, scope: !11205)
!11208 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !11205, file: !3, line: 4627, type: !272)
!11209 = !DILocation(line: 4627, column: 63, scope: !11205)
!11210 = !DILocation(line: 4638, column: 30, scope: !11205)
!11211 = !DILocation(line: 4638, column: 9, scope: !11205)
!11212 = !DILocation(line: 4638, column: 2, scope: !11205)
!11213 = distinct !DISubprogram(name: "pci_quirk_rciep_acs", scope: !3, file: !3, line: 4643, type: !5857, scopeLine: 4644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11214 = !DILocalVariable(name: "dev", arg: 1, scope: !11213, file: !3, line: 4643, type: !3449)
!11215 = !DILocation(line: 4643, column: 48, scope: !11213)
!11216 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !11213, file: !3, line: 4643, type: !272)
!11217 = !DILocation(line: 4643, column: 57, scope: !11213)
!11218 = !DILocation(line: 4650, column: 20, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11213, file: !3, line: 4650, column: 6)
!11220 = !DILocation(line: 4650, column: 6, scope: !11219)
!11221 = !DILocation(line: 4650, column: 25, scope: !11219)
!11222 = !DILocation(line: 4650, column: 6, scope: !11213)
!11223 = !DILocation(line: 4651, column: 3, scope: !11219)
!11224 = !DILocation(line: 4653, column: 30, scope: !11213)
!11225 = !DILocation(line: 4653, column: 9, scope: !11213)
!11226 = !DILocation(line: 4653, column: 2, scope: !11213)
!11227 = !DILocation(line: 4655, column: 1, scope: !11213)
!11228 = distinct !DISubprogram(name: "pci_quirk_qcom_rp_acs", scope: !3, file: !3, line: 4520, type: !5857, scopeLine: 4521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11229 = !DILocalVariable(name: "dev", arg: 1, scope: !11228, file: !3, line: 4520, type: !3449)
!11230 = !DILocation(line: 4520, column: 50, scope: !11228)
!11231 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !11228, file: !3, line: 4520, type: !272)
!11232 = !DILocation(line: 4520, column: 59, scope: !11228)
!11233 = !DILocation(line: 4522, column: 30, scope: !11228)
!11234 = !DILocation(line: 4522, column: 9, scope: !11228)
!11235 = !DILocation(line: 4522, column: 2, scope: !11228)
!11236 = distinct !DISubprogram(name: "pci_quirk_intel_pch_acs", scope: !3, file: !3, line: 4498, type: !5857, scopeLine: 4499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11237 = !DILocalVariable(name: "dev", arg: 1, scope: !11236, file: !3, line: 4498, type: !3449)
!11238 = !DILocation(line: 4498, column: 52, scope: !11236)
!11239 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !11236, file: !3, line: 4498, type: !272)
!11240 = !DILocation(line: 4498, column: 61, scope: !11236)
!11241 = !DILocation(line: 4500, column: 37, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 4500, column: 6)
!11243 = !DILocation(line: 4500, column: 7, scope: !11242)
!11244 = !DILocation(line: 4500, column: 6, scope: !11236)
!11245 = !DILocation(line: 4501, column: 3, scope: !11242)
!11246 = !DILocation(line: 4503, column: 6, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 4503, column: 6)
!11248 = !DILocation(line: 4503, column: 11, scope: !11247)
!11249 = !DILocation(line: 4503, column: 21, scope: !11247)
!11250 = !DILocation(line: 4503, column: 6, scope: !11236)
!11251 = !DILocation(line: 4504, column: 31, scope: !11247)
!11252 = !DILocation(line: 4504, column: 10, scope: !11247)
!11253 = !DILocation(line: 4504, column: 3, scope: !11247)
!11254 = !DILocation(line: 4507, column: 30, scope: !11236)
!11255 = !DILocation(line: 4507, column: 9, scope: !11236)
!11256 = !DILocation(line: 4507, column: 2, scope: !11236)
!11257 = !DILocation(line: 4508, column: 1, scope: !11236)
!11258 = distinct !DISubprogram(name: "pci_quirk_intel_spt_pch_acs", scope: !3, file: !3, line: 4606, type: !5857, scopeLine: 4607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11259 = !DILocalVariable(name: "dev", arg: 1, scope: !11258, file: !3, line: 4606, type: !3449)
!11260 = !DILocation(line: 4606, column: 56, scope: !11258)
!11261 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !11258, file: !3, line: 4606, type: !272)
!11262 = !DILocation(line: 4606, column: 65, scope: !11258)
!11263 = !DILocalVariable(name: "pos", scope: !11258, file: !3, line: 4608, type: !277)
!11264 = !DILocation(line: 4608, column: 6, scope: !11258)
!11265 = !DILocalVariable(name: "cap", scope: !11258, file: !3, line: 4609, type: !278)
!11266 = !DILocation(line: 4609, column: 6, scope: !11258)
!11267 = !DILocalVariable(name: "ctrl", scope: !11258, file: !3, line: 4609, type: !278)
!11268 = !DILocation(line: 4609, column: 11, scope: !11258)
!11269 = !DILocation(line: 4611, column: 41, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 4611, column: 6)
!11271 = !DILocation(line: 4611, column: 7, scope: !11270)
!11272 = !DILocation(line: 4611, column: 6, scope: !11258)
!11273 = !DILocation(line: 4612, column: 3, scope: !11270)
!11274 = !DILocation(line: 4614, column: 8, scope: !11258)
!11275 = !DILocation(line: 4614, column: 13, scope: !11258)
!11276 = !DILocation(line: 4614, column: 6, scope: !11258)
!11277 = !DILocation(line: 4615, column: 7, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 4615, column: 6)
!11279 = !DILocation(line: 4615, column: 6, scope: !11258)
!11280 = !DILocation(line: 4616, column: 3, scope: !11278)
!11281 = !DILocation(line: 4619, column: 24, scope: !11258)
!11282 = !DILocation(line: 4619, column: 29, scope: !11258)
!11283 = !DILocation(line: 4619, column: 33, scope: !11258)
!11284 = !DILocation(line: 4619, column: 2, scope: !11258)
!11285 = !DILocation(line: 4620, column: 16, scope: !11258)
!11286 = !DILocation(line: 4620, column: 20, scope: !11258)
!11287 = !DILocation(line: 4620, column: 12, scope: !11258)
!11288 = !DILocation(line: 4622, column: 24, scope: !11258)
!11289 = !DILocation(line: 4622, column: 29, scope: !11258)
!11290 = !DILocation(line: 4622, column: 33, scope: !11258)
!11291 = !DILocation(line: 4622, column: 2, scope: !11258)
!11292 = !DILocation(line: 4624, column: 30, scope: !11258)
!11293 = !DILocation(line: 4624, column: 41, scope: !11258)
!11294 = !DILocation(line: 4624, column: 9, scope: !11258)
!11295 = !DILocation(line: 4624, column: 2, scope: !11258)
!11296 = !DILocation(line: 4625, column: 1, scope: !11258)
!11297 = distinct !DISubprogram(name: "pci_quirk_cavium_acs", scope: !3, file: !3, line: 4398, type: !5857, scopeLine: 4399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11298 = !DILocalVariable(name: "dev", arg: 1, scope: !11297, file: !3, line: 4398, type: !3449)
!11299 = !DILocation(line: 4398, column: 49, scope: !11297)
!11300 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !11297, file: !3, line: 4398, type: !272)
!11301 = !DILocation(line: 4398, column: 58, scope: !11297)
!11302 = !DILocation(line: 4400, column: 34, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11297, file: !3, line: 4400, column: 6)
!11304 = !DILocation(line: 4400, column: 7, scope: !11303)
!11305 = !DILocation(line: 4400, column: 6, scope: !11297)
!11306 = !DILocation(line: 4401, column: 3, scope: !11303)
!11307 = !DILocation(line: 4411, column: 30, scope: !11297)
!11308 = !DILocation(line: 4411, column: 9, scope: !11297)
!11309 = !DILocation(line: 4411, column: 2, scope: !11297)
!11310 = !DILocation(line: 4413, column: 1, scope: !11297)
!11311 = distinct !DISubprogram(name: "pci_quirk_xgene_acs", scope: !3, file: !3, line: 4415, type: !5857, scopeLine: 4416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11312 = !DILocalVariable(name: "dev", arg: 1, scope: !11311, file: !3, line: 4415, type: !3449)
!11313 = !DILocation(line: 4415, column: 48, scope: !11311)
!11314 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !11311, file: !3, line: 4415, type: !272)
!11315 = !DILocation(line: 4415, column: 57, scope: !11311)
!11316 = !DILocation(line: 4422, column: 30, scope: !11311)
!11317 = !DILocation(line: 4422, column: 9, scope: !11311)
!11318 = !DILocation(line: 4422, column: 2, scope: !11311)
!11319 = distinct !DISubprogram(name: "pci_quirk_brcm_acs", scope: !3, file: !3, line: 4657, type: !5857, scopeLine: 4658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11320 = !DILocalVariable(name: "dev", arg: 1, scope: !11319, file: !3, line: 4657, type: !3449)
!11321 = !DILocation(line: 4657, column: 47, scope: !11319)
!11322 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !11319, file: !3, line: 4657, type: !272)
!11323 = !DILocation(line: 4657, column: 56, scope: !11319)
!11324 = !DILocation(line: 4665, column: 30, scope: !11319)
!11325 = !DILocation(line: 4665, column: 9, scope: !11319)
!11326 = !DILocation(line: 4665, column: 2, scope: !11319)
!11327 = distinct !DISubprogram(name: "pci_quirk_al_acs", scope: !3, file: !3, line: 4526, type: !5857, scopeLine: 4527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11328 = !DILocalVariable(name: "dev", arg: 1, scope: !11327, file: !3, line: 4526, type: !3449)
!11329 = !DILocation(line: 4526, column: 45, scope: !11327)
!11330 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !11327, file: !3, line: 4526, type: !272)
!11331 = !DILocation(line: 4526, column: 54, scope: !11327)
!11332 = !DILocation(line: 4528, column: 20, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 4528, column: 6)
!11334 = !DILocation(line: 4528, column: 6, scope: !11333)
!11335 = !DILocation(line: 4528, column: 25, scope: !11333)
!11336 = !DILocation(line: 4528, column: 6, scope: !11327)
!11337 = !DILocation(line: 4529, column: 3, scope: !11333)
!11338 = !DILocation(line: 4539, column: 12, scope: !11327)
!11339 = !DILocation(line: 4541, column: 9, scope: !11327)
!11340 = !DILocation(line: 4541, column: 2, scope: !11327)
!11341 = !DILocation(line: 4542, column: 1, scope: !11327)
!11342 = distinct !DISubprogram(name: "pci_quirk_zhaoxin_pcie_ports_acs", scope: !3, file: !3, line: 4431, type: !5857, scopeLine: 4432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11343 = !DILocalVariable(name: "dev", arg: 1, scope: !11342, file: !3, line: 4431, type: !3449)
!11344 = !DILocation(line: 4431, column: 62, scope: !11342)
!11345 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !11342, file: !3, line: 4431, type: !272)
!11346 = !DILocation(line: 4431, column: 71, scope: !11342)
!11347 = !DILocation(line: 4433, column: 19, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11342, file: !3, line: 4433, column: 6)
!11349 = !DILocation(line: 4433, column: 7, scope: !11348)
!11350 = !DILocation(line: 4433, column: 24, scope: !11348)
!11351 = !DILocation(line: 4434, column: 22, scope: !11348)
!11352 = !DILocation(line: 4434, column: 8, scope: !11348)
!11353 = !DILocation(line: 4434, column: 27, scope: !11348)
!11354 = !DILocation(line: 4434, column: 54, scope: !11348)
!11355 = !DILocation(line: 4435, column: 22, scope: !11348)
!11356 = !DILocation(line: 4435, column: 8, scope: !11348)
!11357 = !DILocation(line: 4435, column: 27, scope: !11348)
!11358 = !DILocation(line: 4433, column: 6, scope: !11342)
!11359 = !DILocation(line: 4436, column: 3, scope: !11348)
!11360 = !DILocation(line: 4438, column: 10, scope: !11342)
!11361 = !DILocation(line: 4438, column: 15, scope: !11342)
!11362 = !DILocation(line: 4438, column: 2, scope: !11342)
!11363 = !DILocation(line: 4438, column: 23, scope: !11342)
!11364 = !DILocation(line: 4442, column: 31, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11342, file: !3, line: 4438, column: 23)
!11366 = !DILocation(line: 4442, column: 10, scope: !11365)
!11367 = !DILocation(line: 4442, column: 3, scope: !11365)
!11368 = !DILocation(line: 4446, column: 2, scope: !11342)
!11369 = !DILocation(line: 4447, column: 1, scope: !11342)
!11370 = distinct !DISubprogram(name: "pci_acs_ctrl_enabled", scope: !3, file: !3, line: 4321, type: !11371, scopeLine: 4322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11371 = !DISubroutineType(types: !11372)
!11372 = !{!277, !272, !272}
!11373 = !DILocalVariable(name: "acs_ctrl_req", arg: 1, scope: !11370, file: !3, line: 4321, type: !272)
!11374 = !DILocation(line: 4321, column: 37, scope: !11370)
!11375 = !DILocalVariable(name: "acs_ctrl_ena", arg: 2, scope: !11370, file: !3, line: 4321, type: !272)
!11376 = !DILocation(line: 4321, column: 55, scope: !11370)
!11377 = !DILocation(line: 4323, column: 7, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11370, file: !3, line: 4323, column: 6)
!11379 = !DILocation(line: 4323, column: 22, scope: !11378)
!11380 = !DILocation(line: 4323, column: 20, scope: !11378)
!11381 = !DILocation(line: 4323, column: 39, scope: !11378)
!11382 = !DILocation(line: 4323, column: 36, scope: !11378)
!11383 = !DILocation(line: 4323, column: 6, scope: !11370)
!11384 = !DILocation(line: 4324, column: 3, scope: !11378)
!11385 = !DILocation(line: 4325, column: 2, scope: !11370)
!11386 = !DILocation(line: 4326, column: 1, scope: !11370)
!11387 = distinct !DISubprogram(name: "pci_quirk_intel_pch_acs_match", scope: !3, file: !3, line: 4483, type: !11074, scopeLine: 4484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11388 = !DILocalVariable(name: "dev", arg: 1, scope: !11387, file: !3, line: 4483, type: !3449)
!11389 = !DILocation(line: 4483, column: 59, scope: !11387)
!11390 = !DILocalVariable(name: "i", scope: !11387, file: !3, line: 4485, type: !277)
!11391 = !DILocation(line: 4485, column: 6, scope: !11387)
!11392 = !DILocation(line: 4488, column: 19, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11387, file: !3, line: 4488, column: 6)
!11394 = !DILocation(line: 4488, column: 7, scope: !11393)
!11395 = !DILocation(line: 4488, column: 24, scope: !11393)
!11396 = !DILocation(line: 4488, column: 41, scope: !11393)
!11397 = !DILocation(line: 4488, column: 27, scope: !11393)
!11398 = !DILocation(line: 4488, column: 46, scope: !11393)
!11399 = !DILocation(line: 4488, column: 6, scope: !11387)
!11400 = !DILocation(line: 4489, column: 3, scope: !11393)
!11401 = !DILocation(line: 4491, column: 9, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11387, file: !3, line: 4491, column: 2)
!11403 = !DILocation(line: 4491, column: 7, scope: !11402)
!11404 = !DILocation(line: 4491, column: 14, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 4491, column: 2)
!11406 = !DILocation(line: 4491, column: 16, scope: !11405)
!11407 = !DILocation(line: 4491, column: 2, scope: !11402)
!11408 = !DILocation(line: 4492, column: 35, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 4492, column: 7)
!11410 = !DILocation(line: 4492, column: 7, scope: !11409)
!11411 = !DILocation(line: 4492, column: 41, scope: !11409)
!11412 = !DILocation(line: 4492, column: 46, scope: !11409)
!11413 = !DILocation(line: 4492, column: 38, scope: !11409)
!11414 = !DILocation(line: 4492, column: 7, scope: !11405)
!11415 = !DILocation(line: 4493, column: 4, scope: !11409)
!11416 = !DILocation(line: 4491, column: 60, scope: !11405)
!11417 = !DILocation(line: 4491, column: 2, scope: !11405)
!11418 = distinct !{!11418, !11407, !11419}
!11419 = !DILocation(line: 4493, column: 11, scope: !11402)
!11420 = !DILocation(line: 4495, column: 2, scope: !11387)
!11421 = !DILocation(line: 4496, column: 1, scope: !11387)
!11422 = distinct !DISubprogram(name: "pci_quirk_intel_spt_pch_acs_match", scope: !3, file: !3, line: 4589, type: !11074, scopeLine: 4590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11423 = !DILocalVariable(name: "dev", arg: 1, scope: !11422, file: !3, line: 4589, type: !3449)
!11424 = !DILocation(line: 4589, column: 63, scope: !11422)
!11425 = !DILocation(line: 4591, column: 19, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 4591, column: 6)
!11427 = !DILocation(line: 4591, column: 7, scope: !11426)
!11428 = !DILocation(line: 4591, column: 24, scope: !11426)
!11429 = !DILocation(line: 4591, column: 41, scope: !11426)
!11430 = !DILocation(line: 4591, column: 27, scope: !11426)
!11431 = !DILocation(line: 4591, column: 46, scope: !11426)
!11432 = !DILocation(line: 4591, column: 6, scope: !11422)
!11433 = !DILocation(line: 4592, column: 3, scope: !11426)
!11434 = !DILocation(line: 4594, column: 10, scope: !11422)
!11435 = !DILocation(line: 4594, column: 15, scope: !11422)
!11436 = !DILocation(line: 4594, column: 2, scope: !11422)
!11437 = !DILocation(line: 4594, column: 23, scope: !11422)
!11438 = !DILocation(line: 4598, column: 3, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 4594, column: 23)
!11440 = !DILocation(line: 4601, column: 2, scope: !11422)
!11441 = !DILocation(line: 4602, column: 1, scope: !11422)
!11442 = distinct !DISubprogram(name: "pci_quirk_cavium_acs_match", scope: !3, file: !3, line: 4379, type: !11074, scopeLine: 4380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11443 = !DILocalVariable(name: "dev", arg: 1, scope: !11442, file: !3, line: 4379, type: !3449)
!11444 = !DILocation(line: 4379, column: 56, scope: !11442)
!11445 = !DILocation(line: 4381, column: 19, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 4381, column: 6)
!11447 = !DILocation(line: 4381, column: 7, scope: !11446)
!11448 = !DILocation(line: 4381, column: 24, scope: !11446)
!11449 = !DILocation(line: 4381, column: 41, scope: !11446)
!11450 = !DILocation(line: 4381, column: 27, scope: !11446)
!11451 = !DILocation(line: 4381, column: 46, scope: !11446)
!11452 = !DILocation(line: 4381, column: 6, scope: !11442)
!11453 = !DILocation(line: 4382, column: 3, scope: !11446)
!11454 = !DILocation(line: 4384, column: 10, scope: !11442)
!11455 = !DILocation(line: 4384, column: 15, scope: !11442)
!11456 = !DILocation(line: 4384, column: 2, scope: !11442)
!11457 = !DILocation(line: 4384, column: 23, scope: !11442)
!11458 = !DILocation(line: 4392, column: 3, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 4384, column: 23)
!11460 = !DILocation(line: 4394, column: 3, scope: !11459)
!11461 = !DILocation(line: 4396, column: 1, scope: !11442)
!11462 = distinct !DISubprogram(name: "pci_quirk_enable_intel_pch_acs", scope: !3, file: !3, line: 4902, type: !4139, scopeLine: 4903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11463 = !DILocalVariable(name: "dev", arg: 1, scope: !11462, file: !3, line: 4902, type: !3449)
!11464 = !DILocation(line: 4902, column: 59, scope: !11462)
!11465 = !DILocation(line: 4904, column: 37, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11462, file: !3, line: 4904, column: 6)
!11467 = !DILocation(line: 4904, column: 7, scope: !11466)
!11468 = !DILocation(line: 4904, column: 6, scope: !11462)
!11469 = !DILocation(line: 4905, column: 3, scope: !11466)
!11470 = !DILocation(line: 4907, column: 37, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11462, file: !3, line: 4907, column: 6)
!11472 = !DILocation(line: 4907, column: 6, scope: !11471)
!11473 = !DILocation(line: 4907, column: 6, scope: !11462)
!11474 = !DILocation(line: 4908, column: 3, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 4907, column: 43)
!11476 = !DILocation(line: 4909, column: 3, scope: !11475)
!11477 = !DILocation(line: 4912, column: 36, scope: !11462)
!11478 = !DILocation(line: 4912, column: 2, scope: !11462)
!11479 = !DILocation(line: 4914, column: 2, scope: !11462)
!11480 = !DILocation(line: 4914, column: 7, scope: !11462)
!11481 = !DILocation(line: 4914, column: 17, scope: !11462)
!11482 = !DILocation(line: 4916, column: 2, scope: !11462)
!11483 = !DILocation(line: 4918, column: 2, scope: !11462)
!11484 = !DILocation(line: 4919, column: 1, scope: !11462)
!11485 = distinct !DISubprogram(name: "pci_quirk_enable_intel_spt_pch_acs", scope: !3, file: !3, line: 4921, type: !4139, scopeLine: 4922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11486 = !DILocalVariable(name: "dev", arg: 1, scope: !11485, file: !3, line: 4921, type: !3449)
!11487 = !DILocation(line: 4921, column: 63, scope: !11485)
!11488 = !DILocalVariable(name: "pos", scope: !11485, file: !3, line: 4923, type: !277)
!11489 = !DILocation(line: 4923, column: 6, scope: !11485)
!11490 = !DILocalVariable(name: "cap", scope: !11485, file: !3, line: 4924, type: !278)
!11491 = !DILocation(line: 4924, column: 6, scope: !11485)
!11492 = !DILocalVariable(name: "ctrl", scope: !11485, file: !3, line: 4924, type: !278)
!11493 = !DILocation(line: 4924, column: 11, scope: !11485)
!11494 = !DILocation(line: 4926, column: 41, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 4926, column: 6)
!11496 = !DILocation(line: 4926, column: 7, scope: !11495)
!11497 = !DILocation(line: 4926, column: 6, scope: !11485)
!11498 = !DILocation(line: 4927, column: 3, scope: !11495)
!11499 = !DILocation(line: 4929, column: 8, scope: !11485)
!11500 = !DILocation(line: 4929, column: 13, scope: !11485)
!11501 = !DILocation(line: 4929, column: 6, scope: !11485)
!11502 = !DILocation(line: 4930, column: 7, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 4930, column: 6)
!11504 = !DILocation(line: 4930, column: 6, scope: !11485)
!11505 = !DILocation(line: 4931, column: 3, scope: !11503)
!11506 = !DILocation(line: 4933, column: 24, scope: !11485)
!11507 = !DILocation(line: 4933, column: 29, scope: !11485)
!11508 = !DILocation(line: 4933, column: 33, scope: !11485)
!11509 = !DILocation(line: 4933, column: 2, scope: !11485)
!11510 = !DILocation(line: 4934, column: 24, scope: !11485)
!11511 = !DILocation(line: 4934, column: 29, scope: !11485)
!11512 = !DILocation(line: 4934, column: 33, scope: !11485)
!11513 = !DILocation(line: 4934, column: 2, scope: !11485)
!11514 = !DILocation(line: 4936, column: 11, scope: !11485)
!11515 = !DILocation(line: 4936, column: 15, scope: !11485)
!11516 = !DILocation(line: 4936, column: 7, scope: !11485)
!11517 = !DILocation(line: 4937, column: 11, scope: !11485)
!11518 = !DILocation(line: 4937, column: 15, scope: !11485)
!11519 = !DILocation(line: 4937, column: 7, scope: !11485)
!11520 = !DILocation(line: 4938, column: 11, scope: !11485)
!11521 = !DILocation(line: 4938, column: 15, scope: !11485)
!11522 = !DILocation(line: 4938, column: 7, scope: !11485)
!11523 = !DILocation(line: 4939, column: 11, scope: !11485)
!11524 = !DILocation(line: 4939, column: 15, scope: !11485)
!11525 = !DILocation(line: 4939, column: 7, scope: !11485)
!11526 = !DILocation(line: 4941, column: 6, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 4941, column: 6)
!11528 = !DILocation(line: 4941, column: 11, scope: !11527)
!11529 = !DILocation(line: 4941, column: 27, scope: !11527)
!11530 = !DILocation(line: 4941, column: 30, scope: !11527)
!11531 = !DILocation(line: 4941, column: 35, scope: !11527)
!11532 = !DILocation(line: 4941, column: 6, scope: !11485)
!11533 = !DILocation(line: 4942, column: 12, scope: !11527)
!11534 = !DILocation(line: 4942, column: 16, scope: !11527)
!11535 = !DILocation(line: 4942, column: 8, scope: !11527)
!11536 = !DILocation(line: 4942, column: 3, scope: !11527)
!11537 = !DILocation(line: 4944, column: 25, scope: !11485)
!11538 = !DILocation(line: 4944, column: 30, scope: !11485)
!11539 = !DILocation(line: 4944, column: 34, scope: !11485)
!11540 = !DILocation(line: 4944, column: 56, scope: !11485)
!11541 = !DILocation(line: 4944, column: 2, scope: !11485)
!11542 = !DILocation(line: 4946, column: 2, scope: !11485)
!11543 = !DILocation(line: 4948, column: 2, scope: !11485)
!11544 = !DILocation(line: 4949, column: 1, scope: !11485)
!11545 = distinct !DISubprogram(name: "pci_quirk_disable_intel_spt_pch_acs_redir", scope: !3, file: !3, line: 4951, type: !4139, scopeLine: 4952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11546 = !DILocalVariable(name: "dev", arg: 1, scope: !11545, file: !3, line: 4951, type: !3449)
!11547 = !DILocation(line: 4951, column: 70, scope: !11545)
!11548 = !DILocalVariable(name: "pos", scope: !11545, file: !3, line: 4953, type: !277)
!11549 = !DILocation(line: 4953, column: 6, scope: !11545)
!11550 = !DILocalVariable(name: "cap", scope: !11545, file: !3, line: 4954, type: !278)
!11551 = !DILocation(line: 4954, column: 6, scope: !11545)
!11552 = !DILocalVariable(name: "ctrl", scope: !11545, file: !3, line: 4954, type: !278)
!11553 = !DILocation(line: 4954, column: 11, scope: !11545)
!11554 = !DILocation(line: 4956, column: 41, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 4956, column: 6)
!11556 = !DILocation(line: 4956, column: 7, scope: !11555)
!11557 = !DILocation(line: 4956, column: 6, scope: !11545)
!11558 = !DILocation(line: 4957, column: 3, scope: !11555)
!11559 = !DILocation(line: 4959, column: 8, scope: !11545)
!11560 = !DILocation(line: 4959, column: 13, scope: !11545)
!11561 = !DILocation(line: 4959, column: 6, scope: !11545)
!11562 = !DILocation(line: 4960, column: 7, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 4960, column: 6)
!11564 = !DILocation(line: 4960, column: 6, scope: !11545)
!11565 = !DILocation(line: 4961, column: 3, scope: !11563)
!11566 = !DILocation(line: 4963, column: 24, scope: !11545)
!11567 = !DILocation(line: 4963, column: 29, scope: !11545)
!11568 = !DILocation(line: 4963, column: 33, scope: !11545)
!11569 = !DILocation(line: 4963, column: 2, scope: !11545)
!11570 = !DILocation(line: 4964, column: 24, scope: !11545)
!11571 = !DILocation(line: 4964, column: 29, scope: !11545)
!11572 = !DILocation(line: 4964, column: 33, scope: !11545)
!11573 = !DILocation(line: 4964, column: 2, scope: !11545)
!11574 = !DILocation(line: 4966, column: 7, scope: !11545)
!11575 = !DILocation(line: 4968, column: 25, scope: !11545)
!11576 = !DILocation(line: 4968, column: 30, scope: !11545)
!11577 = !DILocation(line: 4968, column: 34, scope: !11545)
!11578 = !DILocation(line: 4968, column: 56, scope: !11545)
!11579 = !DILocation(line: 4968, column: 2, scope: !11545)
!11580 = !DILocation(line: 4970, column: 2, scope: !11545)
!11581 = !DILocation(line: 4972, column: 2, scope: !11545)
!11582 = !DILocation(line: 4973, column: 1, scope: !11545)
!11583 = distinct !DISubprogram(name: "pci_quirk_enable_intel_lpc_acs", scope: !3, file: !3, line: 4830, type: !4139, scopeLine: 4831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11584 = !DILocalVariable(name: "dev", arg: 1, scope: !11583, file: !3, line: 4830, type: !3449)
!11585 = !DILocation(line: 4830, column: 59, scope: !11583)
!11586 = !DILocalVariable(name: "rcba", scope: !11583, file: !3, line: 4832, type: !278)
!11587 = !DILocation(line: 4832, column: 6, scope: !11583)
!11588 = !DILocalVariable(name: "bspr", scope: !11583, file: !3, line: 4832, type: !278)
!11589 = !DILocation(line: 4832, column: 12, scope: !11583)
!11590 = !DILocalVariable(name: "updcr", scope: !11583, file: !3, line: 4832, type: !278)
!11591 = !DILocation(line: 4832, column: 18, scope: !11583)
!11592 = !DILocalVariable(name: "rcba_mem", scope: !11583, file: !3, line: 4833, type: !280)
!11593 = !DILocation(line: 4833, column: 16, scope: !11583)
!11594 = !DILocation(line: 4840, column: 28, scope: !11583)
!11595 = !DILocation(line: 4840, column: 33, scope: !11583)
!11596 = !DILocation(line: 4840, column: 2, scope: !11583)
!11597 = !DILocation(line: 4842, column: 8, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 4842, column: 6)
!11599 = !DILocation(line: 4842, column: 13, scope: !11598)
!11600 = !DILocation(line: 4842, column: 6, scope: !11583)
!11601 = !DILocation(line: 4843, column: 3, scope: !11598)
!11602 = !DILocation(line: 4845, column: 21, scope: !11583)
!11603 = !DILocation(line: 4845, column: 26, scope: !11583)
!11604 = !DILocation(line: 4845, column: 13, scope: !11583)
!11605 = !DILocation(line: 4845, column: 11, scope: !11583)
!11606 = !DILocation(line: 4847, column: 7, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 4847, column: 6)
!11608 = !DILocation(line: 4847, column: 6, scope: !11583)
!11609 = !DILocation(line: 4848, column: 3, scope: !11607)
!11610 = !DILocation(line: 4857, column: 15, scope: !11583)
!11611 = !DILocation(line: 4857, column: 24, scope: !11583)
!11612 = !DILocation(line: 4857, column: 9, scope: !11583)
!11613 = !DILocation(line: 4857, column: 7, scope: !11583)
!11614 = !DILocation(line: 4858, column: 7, scope: !11583)
!11615 = !DILocation(line: 4859, column: 6, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 4859, column: 6)
!11617 = !DILocation(line: 4859, column: 11, scope: !11616)
!11618 = !DILocation(line: 4859, column: 6, scope: !11583)
!11619 = !DILocation(line: 4860, column: 17, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 4859, column: 60)
!11621 = !DILocation(line: 4860, column: 26, scope: !11620)
!11622 = !DILocation(line: 4860, column: 11, scope: !11620)
!11623 = !DILocation(line: 4860, column: 9, scope: !11620)
!11624 = !DILocation(line: 4861, column: 7, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 4861, column: 7)
!11626 = !DILocation(line: 4861, column: 13, scope: !11625)
!11627 = !DILocation(line: 4861, column: 7, scope: !11620)
!11628 = !DILocation(line: 4862, column: 4, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11625, file: !3, line: 4861, column: 37)
!11630 = !DILocation(line: 4863, column: 10, scope: !11629)
!11631 = !DILocation(line: 4864, column: 11, scope: !11629)
!11632 = !DILocation(line: 4864, column: 18, scope: !11629)
!11633 = !DILocation(line: 4864, column: 27, scope: !11629)
!11634 = !DILocation(line: 4864, column: 4, scope: !11629)
!11635 = !DILocation(line: 4865, column: 3, scope: !11629)
!11636 = !DILocation(line: 4866, column: 2, scope: !11620)
!11637 = !DILocation(line: 4868, column: 10, scope: !11583)
!11638 = !DILocation(line: 4868, column: 2, scope: !11583)
!11639 = !DILocation(line: 4869, column: 2, scope: !11583)
!11640 = !DILocation(line: 4870, column: 1, scope: !11583)
!11641 = distinct !DISubprogram(name: "pci_quirk_enable_intel_rp_mpc_acs", scope: !3, file: !3, line: 4877, type: !4131, scopeLine: 4878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11642 = !DILocalVariable(name: "dev", arg: 1, scope: !11641, file: !3, line: 4877, type: !3449)
!11643 = !DILocation(line: 4877, column: 63, scope: !11641)
!11644 = !DILocalVariable(name: "mpc", scope: !11641, file: !3, line: 4879, type: !278)
!11645 = !DILocation(line: 4879, column: 6, scope: !11641)
!11646 = !DILocation(line: 4887, column: 24, scope: !11641)
!11647 = !DILocation(line: 4887, column: 2, scope: !11641)
!11648 = !DILocation(line: 4888, column: 8, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 4888, column: 6)
!11650 = !DILocation(line: 4888, column: 12, scope: !11649)
!11651 = !DILocation(line: 4888, column: 6, scope: !11641)
!11652 = !DILocation(line: 4889, column: 3, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11649, file: !3, line: 4888, column: 37)
!11654 = !DILocation(line: 4890, column: 7, scope: !11653)
!11655 = !DILocation(line: 4891, column: 25, scope: !11653)
!11656 = !DILocation(line: 4891, column: 45, scope: !11653)
!11657 = !DILocation(line: 4891, column: 3, scope: !11653)
!11658 = !DILocation(line: 4892, column: 2, scope: !11653)
!11659 = !DILocation(line: 4893, column: 1, scope: !11641)
!11660 = distinct !DISubprogram(name: "kzalloc", scope: !249, file: !249, line: 662, type: !11661, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11661 = !DISubroutineType(types: !11662)
!11662 = !{!280, !1420, !557}
!11663 = !DILocalVariable(name: "s", arg: 1, scope: !11664, file: !249, line: 445, type: !2462)
!11664 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !249, file: !249, line: 445, type: !11665, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11665 = !DISubroutineType(types: !11666)
!11666 = !{!280, !2462, !557, !1420}
!11667 = !DILocation(line: 445, column: 72, scope: !11664, inlinedAt: !11668)
!11668 = distinct !DILocation(line: 552, column: 10, scope: !11669, inlinedAt: !11672)
!11669 = distinct !DILexicalBlock(scope: !11670, file: !249, line: 540, column: 34)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !249, line: 540, column: 6)
!11671 = distinct !DISubprogram(name: "kmalloc", scope: !249, file: !249, line: 538, type: !11661, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11672 = distinct !DILocation(line: 664, column: 9, scope: !11660)
!11673 = !DILocalVariable(name: "flags", arg: 2, scope: !11664, file: !249, line: 446, type: !557)
!11674 = !DILocation(line: 446, column: 9, scope: !11664, inlinedAt: !11668)
!11675 = !DILocalVariable(name: "size", arg: 3, scope: !11664, file: !249, line: 446, type: !1420)
!11676 = !DILocation(line: 446, column: 23, scope: !11664, inlinedAt: !11668)
!11677 = !DILocalVariable(name: "ret", scope: !11664, file: !249, line: 448, type: !280)
!11678 = !DILocation(line: 448, column: 8, scope: !11664, inlinedAt: !11668)
!11679 = !DILocalVariable(name: "flags", arg: 1, scope: !11680, file: !249, line: 318, type: !557)
!11680 = distinct !DISubprogram(name: "kmalloc_type", scope: !249, file: !249, line: 318, type: !11681, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11681 = !DISubroutineType(types: !11682)
!11682 = !{!248, !557}
!11683 = !DILocation(line: 318, column: 67, scope: !11680, inlinedAt: !11684)
!11684 = distinct !DILocation(line: 553, column: 20, scope: !11669, inlinedAt: !11672)
!11685 = !DILocalVariable(name: "size", arg: 1, scope: !11686, file: !249, line: 346, type: !1420)
!11686 = distinct !DISubprogram(name: "kmalloc_index", scope: !249, file: !249, line: 346, type: !11687, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11687 = !DISubroutineType(types: !11688)
!11688 = !{!7, !1420}
!11689 = !DILocation(line: 346, column: 58, scope: !11686, inlinedAt: !11690)
!11690 = distinct !DILocation(line: 547, column: 11, scope: !11669, inlinedAt: !11672)
!11691 = !DILocalVariable(name: "size", arg: 1, scope: !11692, file: !249, line: 472, type: !1420)
!11692 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !249, file: !249, line: 472, type: !11693, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11693 = !DISubroutineType(types: !11694)
!11694 = !{!280, !1420, !557, !7}
!11695 = !DILocation(line: 472, column: 28, scope: !11692, inlinedAt: !11696)
!11696 = distinct !DILocation(line: 481, column: 9, scope: !11697, inlinedAt: !11698)
!11697 = distinct !DISubprogram(name: "kmalloc_large", scope: !249, file: !249, line: 478, type: !11661, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11698 = distinct !DILocation(line: 545, column: 11, scope: !11699, inlinedAt: !11672)
!11699 = distinct !DILexicalBlock(scope: !11669, file: !249, line: 544, column: 7)
!11700 = !DILocalVariable(name: "flags", arg: 2, scope: !11692, file: !249, line: 472, type: !557)
!11701 = !DILocation(line: 472, column: 40, scope: !11692, inlinedAt: !11696)
!11702 = !DILocalVariable(name: "order", arg: 3, scope: !11692, file: !249, line: 472, type: !7)
!11703 = !DILocation(line: 472, column: 60, scope: !11692, inlinedAt: !11696)
!11704 = !DILocalVariable(name: "size", arg: 1, scope: !11697, file: !249, line: 478, type: !1420)
!11705 = !DILocation(line: 478, column: 51, scope: !11697, inlinedAt: !11698)
!11706 = !DILocalVariable(name: "flags", arg: 2, scope: !11697, file: !249, line: 478, type: !557)
!11707 = !DILocation(line: 478, column: 63, scope: !11697, inlinedAt: !11698)
!11708 = !DILocalVariable(name: "order", scope: !11697, file: !249, line: 480, type: !7)
!11709 = !DILocation(line: 480, column: 15, scope: !11697, inlinedAt: !11698)
!11710 = !DILocalVariable(name: "size", arg: 1, scope: !11671, file: !249, line: 538, type: !1420)
!11711 = !DILocation(line: 538, column: 45, scope: !11671, inlinedAt: !11672)
!11712 = !DILocalVariable(name: "flags", arg: 2, scope: !11671, file: !249, line: 538, type: !557)
!11713 = !DILocation(line: 538, column: 57, scope: !11671, inlinedAt: !11672)
!11714 = !DILocalVariable(name: "index", scope: !11669, file: !249, line: 542, type: !7)
!11715 = !DILocation(line: 542, column: 16, scope: !11669, inlinedAt: !11672)
!11716 = !DILocalVariable(name: "size", arg: 1, scope: !11660, file: !249, line: 662, type: !1420)
!11717 = !DILocation(line: 662, column: 36, scope: !11660)
!11718 = !DILocalVariable(name: "flags", arg: 2, scope: !11660, file: !249, line: 662, type: !557)
!11719 = !DILocation(line: 662, column: 48, scope: !11660)
!11720 = !DILocation(line: 664, column: 17, scope: !11660)
!11721 = !DILocation(line: 664, column: 23, scope: !11660)
!11722 = !DILocation(line: 664, column: 29, scope: !11660)
!11723 = !DILocation(line: 540, column: 27, scope: !11670, inlinedAt: !11672)
!11724 = !DILocation(line: 540, column: 6, scope: !11670, inlinedAt: !11672)
!11725 = !DILocation(line: 540, column: 6, scope: !11671, inlinedAt: !11672)
!11726 = !DILocation(line: 544, column: 7, scope: !11699, inlinedAt: !11672)
!11727 = !DILocation(line: 544, column: 12, scope: !11699, inlinedAt: !11672)
!11728 = !DILocation(line: 544, column: 7, scope: !11669, inlinedAt: !11672)
!11729 = !DILocation(line: 545, column: 25, scope: !11699, inlinedAt: !11672)
!11730 = !DILocation(line: 545, column: 31, scope: !11699, inlinedAt: !11672)
!11731 = !DILocation(line: 480, column: 33, scope: !11697, inlinedAt: !11698)
!11732 = !DILocation(line: 480, column: 23, scope: !11697, inlinedAt: !11698)
!11733 = !DILocation(line: 481, column: 29, scope: !11697, inlinedAt: !11698)
!11734 = !DILocation(line: 481, column: 35, scope: !11697, inlinedAt: !11698)
!11735 = !DILocation(line: 481, column: 42, scope: !11697, inlinedAt: !11698)
!11736 = !DILocation(line: 474, column: 23, scope: !11692, inlinedAt: !11696)
!11737 = !DILocation(line: 474, column: 29, scope: !11692, inlinedAt: !11696)
!11738 = !DILocation(line: 474, column: 36, scope: !11692, inlinedAt: !11696)
!11739 = !DILocation(line: 474, column: 9, scope: !11692, inlinedAt: !11696)
!11740 = !DILocation(line: 545, column: 4, scope: !11699, inlinedAt: !11672)
!11741 = !DILocation(line: 547, column: 25, scope: !11669, inlinedAt: !11672)
!11742 = !DILocation(line: 348, column: 7, scope: !11743, inlinedAt: !11690)
!11743 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 348, column: 6)
!11744 = !DILocation(line: 348, column: 6, scope: !11686, inlinedAt: !11690)
!11745 = !DILocation(line: 349, column: 3, scope: !11743, inlinedAt: !11690)
!11746 = !DILocation(line: 351, column: 6, scope: !11747, inlinedAt: !11690)
!11747 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 351, column: 6)
!11748 = !DILocation(line: 351, column: 11, scope: !11747, inlinedAt: !11690)
!11749 = !DILocation(line: 351, column: 6, scope: !11686, inlinedAt: !11690)
!11750 = !DILocation(line: 352, column: 3, scope: !11747, inlinedAt: !11690)
!11751 = !DILocation(line: 354, column: 32, scope: !11752, inlinedAt: !11690)
!11752 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 354, column: 6)
!11753 = !DILocation(line: 354, column: 37, scope: !11752, inlinedAt: !11690)
!11754 = !DILocation(line: 354, column: 42, scope: !11752, inlinedAt: !11690)
!11755 = !DILocation(line: 354, column: 45, scope: !11752, inlinedAt: !11690)
!11756 = !DILocation(line: 354, column: 50, scope: !11752, inlinedAt: !11690)
!11757 = !DILocation(line: 354, column: 6, scope: !11686, inlinedAt: !11690)
!11758 = !DILocation(line: 355, column: 3, scope: !11752, inlinedAt: !11690)
!11759 = !DILocation(line: 356, column: 32, scope: !11760, inlinedAt: !11690)
!11760 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 356, column: 6)
!11761 = !DILocation(line: 356, column: 37, scope: !11760, inlinedAt: !11690)
!11762 = !DILocation(line: 356, column: 43, scope: !11760, inlinedAt: !11690)
!11763 = !DILocation(line: 356, column: 46, scope: !11760, inlinedAt: !11690)
!11764 = !DILocation(line: 356, column: 51, scope: !11760, inlinedAt: !11690)
!11765 = !DILocation(line: 356, column: 6, scope: !11686, inlinedAt: !11690)
!11766 = !DILocation(line: 357, column: 3, scope: !11760, inlinedAt: !11690)
!11767 = !DILocation(line: 358, column: 6, scope: !11768, inlinedAt: !11690)
!11768 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 358, column: 6)
!11769 = !DILocation(line: 358, column: 11, scope: !11768, inlinedAt: !11690)
!11770 = !DILocation(line: 358, column: 6, scope: !11686, inlinedAt: !11690)
!11771 = !DILocation(line: 358, column: 26, scope: !11768, inlinedAt: !11690)
!11772 = !DILocation(line: 359, column: 6, scope: !11773, inlinedAt: !11690)
!11773 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 359, column: 6)
!11774 = !DILocation(line: 359, column: 11, scope: !11773, inlinedAt: !11690)
!11775 = !DILocation(line: 359, column: 6, scope: !11686, inlinedAt: !11690)
!11776 = !DILocation(line: 359, column: 26, scope: !11773, inlinedAt: !11690)
!11777 = !DILocation(line: 360, column: 6, scope: !11778, inlinedAt: !11690)
!11778 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 360, column: 6)
!11779 = !DILocation(line: 360, column: 11, scope: !11778, inlinedAt: !11690)
!11780 = !DILocation(line: 360, column: 6, scope: !11686, inlinedAt: !11690)
!11781 = !DILocation(line: 360, column: 26, scope: !11778, inlinedAt: !11690)
!11782 = !DILocation(line: 361, column: 6, scope: !11783, inlinedAt: !11690)
!11783 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 361, column: 6)
!11784 = !DILocation(line: 361, column: 11, scope: !11783, inlinedAt: !11690)
!11785 = !DILocation(line: 361, column: 6, scope: !11686, inlinedAt: !11690)
!11786 = !DILocation(line: 361, column: 26, scope: !11783, inlinedAt: !11690)
!11787 = !DILocation(line: 362, column: 6, scope: !11788, inlinedAt: !11690)
!11788 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 362, column: 6)
!11789 = !DILocation(line: 362, column: 11, scope: !11788, inlinedAt: !11690)
!11790 = !DILocation(line: 362, column: 6, scope: !11686, inlinedAt: !11690)
!11791 = !DILocation(line: 362, column: 26, scope: !11788, inlinedAt: !11690)
!11792 = !DILocation(line: 363, column: 6, scope: !11793, inlinedAt: !11690)
!11793 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 363, column: 6)
!11794 = !DILocation(line: 363, column: 11, scope: !11793, inlinedAt: !11690)
!11795 = !DILocation(line: 363, column: 6, scope: !11686, inlinedAt: !11690)
!11796 = !DILocation(line: 363, column: 26, scope: !11793, inlinedAt: !11690)
!11797 = !DILocation(line: 364, column: 6, scope: !11798, inlinedAt: !11690)
!11798 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 364, column: 6)
!11799 = !DILocation(line: 364, column: 11, scope: !11798, inlinedAt: !11690)
!11800 = !DILocation(line: 364, column: 6, scope: !11686, inlinedAt: !11690)
!11801 = !DILocation(line: 364, column: 26, scope: !11798, inlinedAt: !11690)
!11802 = !DILocation(line: 365, column: 6, scope: !11803, inlinedAt: !11690)
!11803 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 365, column: 6)
!11804 = !DILocation(line: 365, column: 11, scope: !11803, inlinedAt: !11690)
!11805 = !DILocation(line: 365, column: 6, scope: !11686, inlinedAt: !11690)
!11806 = !DILocation(line: 365, column: 26, scope: !11803, inlinedAt: !11690)
!11807 = !DILocation(line: 366, column: 6, scope: !11808, inlinedAt: !11690)
!11808 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 366, column: 6)
!11809 = !DILocation(line: 366, column: 11, scope: !11808, inlinedAt: !11690)
!11810 = !DILocation(line: 366, column: 6, scope: !11686, inlinedAt: !11690)
!11811 = !DILocation(line: 366, column: 26, scope: !11808, inlinedAt: !11690)
!11812 = !DILocation(line: 367, column: 6, scope: !11813, inlinedAt: !11690)
!11813 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 367, column: 6)
!11814 = !DILocation(line: 367, column: 11, scope: !11813, inlinedAt: !11690)
!11815 = !DILocation(line: 367, column: 6, scope: !11686, inlinedAt: !11690)
!11816 = !DILocation(line: 367, column: 26, scope: !11813, inlinedAt: !11690)
!11817 = !DILocation(line: 368, column: 6, scope: !11818, inlinedAt: !11690)
!11818 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 368, column: 6)
!11819 = !DILocation(line: 368, column: 11, scope: !11818, inlinedAt: !11690)
!11820 = !DILocation(line: 368, column: 6, scope: !11686, inlinedAt: !11690)
!11821 = !DILocation(line: 368, column: 26, scope: !11818, inlinedAt: !11690)
!11822 = !DILocation(line: 369, column: 6, scope: !11823, inlinedAt: !11690)
!11823 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 369, column: 6)
!11824 = !DILocation(line: 369, column: 11, scope: !11823, inlinedAt: !11690)
!11825 = !DILocation(line: 369, column: 6, scope: !11686, inlinedAt: !11690)
!11826 = !DILocation(line: 369, column: 26, scope: !11823, inlinedAt: !11690)
!11827 = !DILocation(line: 370, column: 6, scope: !11828, inlinedAt: !11690)
!11828 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 370, column: 6)
!11829 = !DILocation(line: 370, column: 11, scope: !11828, inlinedAt: !11690)
!11830 = !DILocation(line: 370, column: 6, scope: !11686, inlinedAt: !11690)
!11831 = !DILocation(line: 370, column: 26, scope: !11828, inlinedAt: !11690)
!11832 = !DILocation(line: 371, column: 6, scope: !11833, inlinedAt: !11690)
!11833 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 371, column: 6)
!11834 = !DILocation(line: 371, column: 11, scope: !11833, inlinedAt: !11690)
!11835 = !DILocation(line: 371, column: 6, scope: !11686, inlinedAt: !11690)
!11836 = !DILocation(line: 371, column: 26, scope: !11833, inlinedAt: !11690)
!11837 = !DILocation(line: 372, column: 6, scope: !11838, inlinedAt: !11690)
!11838 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 372, column: 6)
!11839 = !DILocation(line: 372, column: 11, scope: !11838, inlinedAt: !11690)
!11840 = !DILocation(line: 372, column: 6, scope: !11686, inlinedAt: !11690)
!11841 = !DILocation(line: 372, column: 26, scope: !11838, inlinedAt: !11690)
!11842 = !DILocation(line: 373, column: 6, scope: !11843, inlinedAt: !11690)
!11843 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 373, column: 6)
!11844 = !DILocation(line: 373, column: 11, scope: !11843, inlinedAt: !11690)
!11845 = !DILocation(line: 373, column: 6, scope: !11686, inlinedAt: !11690)
!11846 = !DILocation(line: 373, column: 26, scope: !11843, inlinedAt: !11690)
!11847 = !DILocation(line: 374, column: 6, scope: !11848, inlinedAt: !11690)
!11848 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 374, column: 6)
!11849 = !DILocation(line: 374, column: 11, scope: !11848, inlinedAt: !11690)
!11850 = !DILocation(line: 374, column: 6, scope: !11686, inlinedAt: !11690)
!11851 = !DILocation(line: 374, column: 26, scope: !11848, inlinedAt: !11690)
!11852 = !DILocation(line: 375, column: 6, scope: !11853, inlinedAt: !11690)
!11853 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 375, column: 6)
!11854 = !DILocation(line: 375, column: 11, scope: !11853, inlinedAt: !11690)
!11855 = !DILocation(line: 375, column: 6, scope: !11686, inlinedAt: !11690)
!11856 = !DILocation(line: 375, column: 27, scope: !11853, inlinedAt: !11690)
!11857 = !DILocation(line: 376, column: 6, scope: !11858, inlinedAt: !11690)
!11858 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 376, column: 6)
!11859 = !DILocation(line: 376, column: 11, scope: !11858, inlinedAt: !11690)
!11860 = !DILocation(line: 376, column: 6, scope: !11686, inlinedAt: !11690)
!11861 = !DILocation(line: 376, column: 32, scope: !11858, inlinedAt: !11690)
!11862 = !DILocation(line: 377, column: 6, scope: !11863, inlinedAt: !11690)
!11863 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 377, column: 6)
!11864 = !DILocation(line: 377, column: 11, scope: !11863, inlinedAt: !11690)
!11865 = !DILocation(line: 377, column: 6, scope: !11686, inlinedAt: !11690)
!11866 = !DILocation(line: 377, column: 32, scope: !11863, inlinedAt: !11690)
!11867 = !DILocation(line: 378, column: 6, scope: !11868, inlinedAt: !11690)
!11868 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 378, column: 6)
!11869 = !DILocation(line: 378, column: 11, scope: !11868, inlinedAt: !11690)
!11870 = !DILocation(line: 378, column: 6, scope: !11686, inlinedAt: !11690)
!11871 = !DILocation(line: 378, column: 32, scope: !11868, inlinedAt: !11690)
!11872 = !DILocation(line: 379, column: 6, scope: !11873, inlinedAt: !11690)
!11873 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 379, column: 6)
!11874 = !DILocation(line: 379, column: 11, scope: !11873, inlinedAt: !11690)
!11875 = !DILocation(line: 379, column: 6, scope: !11686, inlinedAt: !11690)
!11876 = !DILocation(line: 379, column: 33, scope: !11873, inlinedAt: !11690)
!11877 = !DILocation(line: 380, column: 6, scope: !11878, inlinedAt: !11690)
!11878 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 380, column: 6)
!11879 = !DILocation(line: 380, column: 11, scope: !11878, inlinedAt: !11690)
!11880 = !DILocation(line: 380, column: 6, scope: !11686, inlinedAt: !11690)
!11881 = !DILocation(line: 380, column: 33, scope: !11878, inlinedAt: !11690)
!11882 = !DILocation(line: 381, column: 6, scope: !11883, inlinedAt: !11690)
!11883 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 381, column: 6)
!11884 = !DILocation(line: 381, column: 11, scope: !11883, inlinedAt: !11690)
!11885 = !DILocation(line: 381, column: 6, scope: !11686, inlinedAt: !11690)
!11886 = !DILocation(line: 381, column: 33, scope: !11883, inlinedAt: !11690)
!11887 = !DILocation(line: 382, column: 2, scope: !11888, inlinedAt: !11690)
!11888 = distinct !DILexicalBlock(scope: !11889, file: !249, line: 382, column: 2)
!11889 = distinct !DILexicalBlock(scope: !11686, file: !249, line: 382, column: 2)
!11890 = !{i32 -2143250443, i32 -2143250414, i32 -2143250368, i32 -2143250310, i32 -2143250256, i32 -2143250202, i32 -2143250147, i32 -2143250116}
!11891 = !DILocation(line: 382, column: 2, scope: !11892, inlinedAt: !11690)
!11892 = distinct !DILexicalBlock(scope: !11893, file: !249, line: 382, column: 2)
!11893 = distinct !DILexicalBlock(scope: !11889, file: !249, line: 382, column: 2)
!11894 = !{i32 -2143249673, i32 -2143249666, i32 -2143249612, i32 -2143249581, i32 -2143249551}
!11895 = !DILocation(line: 382, column: 2, scope: !11893, inlinedAt: !11690)
!11896 = !DILocation(line: 386, column: 1, scope: !11686, inlinedAt: !11690)
!11897 = !DILocation(line: 547, column: 9, scope: !11669, inlinedAt: !11672)
!11898 = !DILocation(line: 549, column: 8, scope: !11899, inlinedAt: !11672)
!11899 = distinct !DILexicalBlock(scope: !11669, file: !249, line: 549, column: 7)
!11900 = !DILocation(line: 549, column: 7, scope: !11669, inlinedAt: !11672)
!11901 = !DILocation(line: 550, column: 4, scope: !11899, inlinedAt: !11672)
!11902 = !DILocation(line: 553, column: 33, scope: !11669, inlinedAt: !11672)
!11903 = !DILocation(line: 325, column: 6, scope: !11904, inlinedAt: !11684)
!11904 = distinct !DILexicalBlock(scope: !11680, file: !249, line: 325, column: 6)
!11905 = !DILocation(line: 325, column: 6, scope: !11680, inlinedAt: !11684)
!11906 = !DILocation(line: 326, column: 3, scope: !11904, inlinedAt: !11684)
!11907 = !DILocation(line: 332, column: 9, scope: !11680, inlinedAt: !11684)
!11908 = !DILocation(line: 332, column: 15, scope: !11680, inlinedAt: !11684)
!11909 = !DILocation(line: 332, column: 2, scope: !11680, inlinedAt: !11684)
!11910 = !DILocation(line: 336, column: 1, scope: !11680, inlinedAt: !11684)
!11911 = !DILocation(line: 553, column: 5, scope: !11669, inlinedAt: !11672)
!11912 = !DILocation(line: 553, column: 41, scope: !11669, inlinedAt: !11672)
!11913 = !DILocation(line: 554, column: 5, scope: !11669, inlinedAt: !11672)
!11914 = !DILocation(line: 554, column: 12, scope: !11669, inlinedAt: !11672)
!11915 = !DILocation(line: 448, column: 31, scope: !11664, inlinedAt: !11668)
!11916 = !DILocation(line: 448, column: 34, scope: !11664, inlinedAt: !11668)
!11917 = !DILocation(line: 448, column: 14, scope: !11664, inlinedAt: !11668)
!11918 = !DILocation(line: 450, column: 22, scope: !11664, inlinedAt: !11668)
!11919 = !DILocation(line: 450, column: 25, scope: !11664, inlinedAt: !11668)
!11920 = !DILocation(line: 450, column: 30, scope: !11664, inlinedAt: !11668)
!11921 = !DILocation(line: 450, column: 36, scope: !11664, inlinedAt: !11668)
!11922 = !DILocation(line: 450, column: 8, scope: !11664, inlinedAt: !11668)
!11923 = !DILocation(line: 450, column: 6, scope: !11664, inlinedAt: !11668)
!11924 = !DILocation(line: 451, column: 9, scope: !11664, inlinedAt: !11668)
!11925 = !DILocation(line: 552, column: 3, scope: !11669, inlinedAt: !11672)
!11926 = !DILocation(line: 557, column: 19, scope: !11671, inlinedAt: !11672)
!11927 = !DILocation(line: 557, column: 25, scope: !11671, inlinedAt: !11672)
!11928 = !DILocation(line: 557, column: 9, scope: !11671, inlinedAt: !11672)
!11929 = !DILocation(line: 557, column: 2, scope: !11671, inlinedAt: !11672)
!11930 = !DILocation(line: 558, column: 1, scope: !11671, inlinedAt: !11672)
!11931 = !DILocation(line: 664, column: 2, scope: !11660)
!11932 = distinct !DISubprogram(name: "hlist_add_head", scope: !11933, file: !11933, line: 879, type: !11934, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11933 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!11934 = !DISubroutineType(types: !11935)
!11935 = !{null, !807, !11936}
!11936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!11937 = !DILocalVariable(name: "n", arg: 1, scope: !11932, file: !11933, line: 879, type: !807)
!11938 = !DILocation(line: 879, column: 54, scope: !11932)
!11939 = !DILocalVariable(name: "h", arg: 2, scope: !11932, file: !11933, line: 879, type: !11936)
!11940 = !DILocation(line: 879, column: 76, scope: !11932)
!11941 = !DILocalVariable(name: "first", scope: !11932, file: !11933, line: 881, type: !807)
!11942 = !DILocation(line: 881, column: 21, scope: !11932)
!11943 = !DILocation(line: 881, column: 29, scope: !11932)
!11944 = !DILocation(line: 881, column: 32, scope: !11932)
!11945 = !DILocation(line: 882, column: 2, scope: !11932)
!11946 = !DILocation(line: 882, column: 2, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11932, file: !11933, line: 882, column: 2)
!11948 = !DILocation(line: 882, column: 2, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11947, file: !11933, line: 882, column: 2)
!11950 = !DILocation(line: 882, column: 2, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11947, file: !11933, line: 882, column: 2)
!11952 = !DILocation(line: 883, column: 6, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11932, file: !11933, line: 883, column: 6)
!11954 = !DILocation(line: 883, column: 6, scope: !11932)
!11955 = !DILocation(line: 884, column: 3, scope: !11953)
!11956 = !DILocation(line: 884, column: 3, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11953, file: !11933, line: 884, column: 3)
!11958 = !DILocation(line: 884, column: 3, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11957, file: !11933, line: 884, column: 3)
!11960 = !DILocation(line: 884, column: 3, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11957, file: !11933, line: 884, column: 3)
!11962 = !DILocation(line: 885, column: 2, scope: !11932)
!11963 = !DILocation(line: 885, column: 2, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11932, file: !11933, line: 885, column: 2)
!11965 = !DILocation(line: 885, column: 2, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11964, file: !11933, line: 885, column: 2)
!11967 = !DILocation(line: 885, column: 2, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11964, file: !11933, line: 885, column: 2)
!11969 = !DILocation(line: 886, column: 2, scope: !11932)
!11970 = !DILocation(line: 886, column: 2, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11932, file: !11933, line: 886, column: 2)
!11972 = !DILocation(line: 886, column: 2, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11971, file: !11933, line: 886, column: 2)
!11974 = !DILocation(line: 886, column: 2, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11971, file: !11933, line: 886, column: 2)
!11976 = !DILocation(line: 887, column: 1, scope: !11932)
!11977 = distinct !DISubprogram(name: "get_order", scope: !11978, file: !11978, line: 29, type: !11979, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11978 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11979 = !DISubroutineType(types: !11980)
!11980 = !{!277, !281}
!11981 = !DILocalVariable(name: "x", arg: 1, scope: !11982, file: !11983, line: 366, type: !344)
!11982 = distinct !DISubprogram(name: "fls64", scope: !11983, file: !11983, line: 366, type: !11984, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!11983 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!11984 = !DISubroutineType(types: !11985)
!11985 = !{!277, !344}
!11986 = !DILocation(line: 366, column: 40, scope: !11982, inlinedAt: !11987)
!11987 = distinct !DILocation(line: 46, column: 9, scope: !11977)
!11988 = !DILocalVariable(name: "bitpos", scope: !11982, file: !11983, line: 368, type: !277)
!11989 = !DILocation(line: 368, column: 6, scope: !11982, inlinedAt: !11987)
!11990 = !DILocalVariable(name: "size", arg: 1, scope: !11977, file: !11978, line: 29, type: !281)
!11991 = !DILocation(line: 29, column: 63, scope: !11977)
!11992 = !DILocation(line: 31, column: 27, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11977, file: !11978, line: 31, column: 6)
!11994 = !DILocation(line: 31, column: 6, scope: !11993)
!11995 = !DILocation(line: 31, column: 6, scope: !11977)
!11996 = !DILocation(line: 32, column: 8, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11998, file: !11978, line: 32, column: 7)
!11998 = distinct !DILexicalBlock(scope: !11993, file: !11978, line: 31, column: 34)
!11999 = !DILocation(line: 32, column: 7, scope: !11998)
!12000 = !DILocation(line: 33, column: 4, scope: !11997)
!12001 = !DILocation(line: 35, column: 7, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11998, file: !11978, line: 35, column: 7)
!12003 = !DILocation(line: 35, column: 12, scope: !12002)
!12004 = !DILocation(line: 35, column: 7, scope: !11998)
!12005 = !DILocation(line: 36, column: 4, scope: !12002)
!12006 = !DILocation(line: 38, column: 10, scope: !11998)
!12007 = !DILocation(line: 38, column: 28, scope: !11998)
!12008 = !DILocation(line: 38, column: 41, scope: !11998)
!12009 = !DILocation(line: 38, column: 3, scope: !11998)
!12010 = !DILocation(line: 41, column: 6, scope: !11977)
!12011 = !DILocation(line: 42, column: 7, scope: !11977)
!12012 = !DILocation(line: 46, column: 15, scope: !11977)
!12013 = !DILocation(line: 374, column: 2, scope: !11982, inlinedAt: !11987)
!12014 = !DILocation(line: 376, column: 14, scope: !11982, inlinedAt: !11987)
!12015 = !{i32 440541}
!12016 = !DILocation(line: 377, column: 9, scope: !11982, inlinedAt: !11987)
!12017 = !DILocation(line: 377, column: 16, scope: !11982, inlinedAt: !11987)
!12018 = !DILocation(line: 46, column: 2, scope: !11977)
!12019 = !DILocation(line: 48, column: 1, scope: !11977)
!12020 = distinct !DISubprogram(name: "__ilog2_u64", scope: !12021, file: !12021, line: 30, type: !12022, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!12021 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!12022 = !DISubroutineType(types: !12023)
!12023 = !{!277, !343}
!12024 = !DILocation(line: 366, column: 40, scope: !11982, inlinedAt: !12025)
!12025 = distinct !DILocation(line: 32, column: 9, scope: !12020)
!12026 = !DILocation(line: 368, column: 6, scope: !11982, inlinedAt: !12025)
!12027 = !DILocalVariable(name: "n", arg: 1, scope: !12020, file: !12021, line: 30, type: !343)
!12028 = !DILocation(line: 30, column: 21, scope: !12020)
!12029 = !DILocation(line: 32, column: 15, scope: !12020)
!12030 = !DILocation(line: 374, column: 2, scope: !11982, inlinedAt: !12025)
!12031 = !DILocation(line: 376, column: 14, scope: !11982, inlinedAt: !12025)
!12032 = !DILocation(line: 377, column: 9, scope: !11982, inlinedAt: !12025)
!12033 = !DILocation(line: 377, column: 16, scope: !11982, inlinedAt: !12025)
!12034 = !DILocation(line: 32, column: 18, scope: !12020)
!12035 = !DILocation(line: 32, column: 2, scope: !12020)
!12036 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !12037, file: !12037, line: 137, type: !12038, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!12037 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!12038 = !DISubroutineType(types: !12039)
!12039 = !{!280, !2462, !2149, !1420, !557}
!12040 = !DILocalVariable(name: "s", arg: 1, scope: !12036, file: !12037, line: 137, type: !2462)
!12041 = !DILocation(line: 137, column: 54, scope: !12036)
!12042 = !DILocalVariable(name: "object", arg: 2, scope: !12036, file: !12037, line: 137, type: !2149)
!12043 = !DILocation(line: 137, column: 69, scope: !12036)
!12044 = !DILocalVariable(name: "size", arg: 3, scope: !12036, file: !12037, line: 138, type: !1420)
!12045 = !DILocation(line: 138, column: 12, scope: !12036)
!12046 = !DILocalVariable(name: "flags", arg: 4, scope: !12036, file: !12037, line: 138, type: !557)
!12047 = !DILocation(line: 138, column: 24, scope: !12036)
!12048 = !DILocation(line: 140, column: 17, scope: !12036)
!12049 = !DILocation(line: 140, column: 2, scope: !12036)
!12050 = distinct !DISubprogram(name: "pci_create_device_link", scope: !3, file: !3, line: 5197, type: !12051, scopeLine: 5200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !352)
!12051 = !DISubroutineType(types: !12052)
!12052 = !{null, !3449, !7, !7, !7, !7}
!12053 = !DILocalVariable(name: "pdev", arg: 1, scope: !12050, file: !3, line: 5197, type: !3449)
!12054 = !DILocation(line: 5197, column: 52, scope: !12050)
!12055 = !DILocalVariable(name: "consumer", arg: 2, scope: !12050, file: !3, line: 5197, type: !7)
!12056 = !DILocation(line: 5197, column: 71, scope: !12050)
!12057 = !DILocalVariable(name: "supplier", arg: 3, scope: !12050, file: !3, line: 5198, type: !7)
!12058 = !DILocation(line: 5198, column: 21, scope: !12050)
!12059 = !DILocalVariable(name: "class", arg: 4, scope: !12050, file: !3, line: 5198, type: !7)
!12060 = !DILocation(line: 5198, column: 44, scope: !12050)
!12061 = !DILocalVariable(name: "class_shift", arg: 5, scope: !12050, file: !3, line: 5199, type: !7)
!12062 = !DILocation(line: 5199, column: 21, scope: !12050)
!12063 = !DILocalVariable(name: "supplier_pdev", scope: !12050, file: !3, line: 5201, type: !3449)
!12064 = !DILocation(line: 5201, column: 18, scope: !12050)
!12065 = !DILocation(line: 5203, column: 6, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 5203, column: 6)
!12067 = !DILocation(line: 5203, column: 31, scope: !12066)
!12068 = !DILocation(line: 5203, column: 28, scope: !12066)
!12069 = !DILocation(line: 5203, column: 6, scope: !12050)
!12070 = !DILocation(line: 5204, column: 3, scope: !12066)
!12071 = !DILocation(line: 5206, column: 60, scope: !12050)
!12072 = !DILocation(line: 5206, column: 66, scope: !12050)
!12073 = !DILocation(line: 5206, column: 46, scope: !12050)
!12074 = !DILocation(line: 5207, column: 5, scope: !12050)
!12075 = !DILocation(line: 5207, column: 11, scope: !12050)
!12076 = !DILocation(line: 5207, column: 16, scope: !12050)
!12077 = !DILocation(line: 5208, column: 5, scope: !12050)
!12078 = !DILocation(line: 5206, column: 18, scope: !12050)
!12079 = !DILocation(line: 5206, column: 16, scope: !12050)
!12080 = !DILocation(line: 5209, column: 7, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 5209, column: 6)
!12082 = !DILocation(line: 5209, column: 21, scope: !12081)
!12083 = !DILocation(line: 5209, column: 25, scope: !12081)
!12084 = !DILocation(line: 5209, column: 40, scope: !12081)
!12085 = !DILocation(line: 5209, column: 49, scope: !12081)
!12086 = !DILocation(line: 5209, column: 46, scope: !12081)
!12087 = !DILocation(line: 5209, column: 65, scope: !12081)
!12088 = !DILocation(line: 5209, column: 62, scope: !12081)
!12089 = !DILocation(line: 5209, column: 6, scope: !12050)
!12090 = !DILocation(line: 5210, column: 15, scope: !12091)
!12091 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 5209, column: 72)
!12092 = !DILocation(line: 5210, column: 3, scope: !12091)
!12093 = !DILocation(line: 5211, column: 3, scope: !12091)
!12094 = !DILocation(line: 5214, column: 23, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 5214, column: 6)
!12096 = !DILocation(line: 5214, column: 29, scope: !12095)
!12097 = !DILocation(line: 5214, column: 35, scope: !12095)
!12098 = !DILocation(line: 5214, column: 50, scope: !12095)
!12099 = !DILocation(line: 5214, column: 6, scope: !12095)
!12100 = !DILocation(line: 5214, column: 6, scope: !12050)
!12101 = !DILocation(line: 5216, column: 3, scope: !12095)
!12102 = !DILocation(line: 5219, column: 3, scope: !12095)
!12103 = !DILocation(line: 5222, column: 20, scope: !12050)
!12104 = !DILocation(line: 5222, column: 26, scope: !12050)
!12105 = !DILocation(line: 5222, column: 2, scope: !12050)
!12106 = !DILocation(line: 5223, column: 14, scope: !12050)
!12107 = !DILocation(line: 5223, column: 2, scope: !12050)
!12108 = !DILocation(line: 5224, column: 1, scope: !12050)
