; ModuleID = '../bcout/drivers/devfreq/devfreq.llvm.bc'
source_filename = "drivers/devfreq/devfreq.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall4.init\22, \22a\22\09"
module asm "__initcall_devfreq_init4:\09\09\09"
module asm ".long\09devfreq_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.workqueue_struct = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.lock_class_key = type {}
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.module = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.attribute = type { i8*, i16 }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.61, %struct.list_head, %struct.list_head, %union.anon.62 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.59 }
%union.anon.59 = type { %struct.anon.60 }
%struct.anon.60 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.51, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.51 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.52, i32 }
%union.anon.52 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type opaque
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.61 = type { %struct.list_head }
%union.anon.62 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.53, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.54, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.55, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.58, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.53 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.54 = type { %struct.callback_head }
%union.anon.55 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.58 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.56 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.56 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.63, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.63 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type { %struct.pm_qos_constraints, %struct.pm_qos_constraints, %struct.freq_constraints, %struct.pm_qos_flags, %struct.dev_pm_qos_request*, %struct.dev_pm_qos_request*, %struct.dev_pm_qos_request* }
%struct.pm_qos_constraints = type { %struct.plist_head, i32, i32, i32, i32, %struct.blocking_notifier_head* }
%struct.plist_head = type { %struct.list_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.freq_constraints = type { %struct.pm_qos_constraints, %struct.blocking_notifier_head, %struct.pm_qos_constraints, %struct.blocking_notifier_head }
%struct.pm_qos_flags = type { %struct.list_head, i32 }
%struct.dev_pm_qos_request = type { i32, %union.anon.64, %struct.device* }
%union.anon.64 = type { %struct.freq_qos_request }
%struct.freq_qos_request = type { i32, %struct.plist_node, %struct.freq_constraints* }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.subsys_private = type opaque
%struct.kmem_cache = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.devfreq = type { %struct.list_head, %struct.mutex, %struct.device, %struct.devfreq_dev_profile*, %struct.devfreq_governor*, [16 x i8], %struct.notifier_block, %struct.delayed_work, i64, %struct.devfreq_dev_status, i8*, %struct.dev_pm_qos_request, %struct.dev_pm_qos_request, i64, i64, i8, i64, i64, %struct.atomic_t, %struct.devfreq_stats, %struct.srcu_notifier_head, %struct.notifier_block, %struct.notifier_block }
%struct.devfreq_dev_profile = type { i64, i32, i32, i32 (%struct.device*, i64*, i32)*, i32 (%struct.device*, %struct.devfreq_dev_status*)*, i32 (%struct.device*, i64*)*, void (%struct.device*)*, i64*, i32 }
%struct.devfreq_governor = type { %struct.list_head, [16 x i8], i32, i32, i32 (%struct.devfreq*, i64*)*, i32 (%struct.devfreq*, i32, i8*)* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.devfreq_dev_status = type { i64, i64, i64, i8* }
%struct.devfreq_stats = type { i32, i32*, i64*, i64 }
%struct.srcu_notifier_head = type { %struct.mutex, %struct.srcu_struct, %struct.notifier_block* }
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.devfreq_freqs = type { i64, i64 }
%struct.dev_pm_opp = type opaque
%struct.devfreq_notifier_devres = type { %struct.devfreq*, %struct.notifier_block*, i32 }

@devfreq_wq = internal global %struct.workqueue_struct* null, align 8, !dbg !0
@.str = private unnamed_addr constant [25 x i8] c"%s: Invalid parameters.\0A\00", align 1
@__func__.devfreq_add_device = private unnamed_addr constant [19 x i8] c"devfreq_add_device\00", align 1
@devfreq_list_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @devfreq_list_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @devfreq_list_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !3851
@.str.1 = private unnamed_addr constant [36 x i8] c"%s: devfreq device already exists!\0A\00", align 1
@devfreq_add_device.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !3842
@.str.2 = private unnamed_addr constant [15 x i8] c"&devfreq->lock\00", align 1
@devfreq_class = internal global %struct.class* null, align 8, !dbg !3849
@.str.3 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"%s: Unable to find governor for the device\0A\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"%s: Unable to start governor for the device\0A\00", align 1
@devfreq_list = internal global %struct.list_head { %struct.list_head* @devfreq_list, %struct.list_head* @devfreq_list }, align 8, !dbg !3853
@.str.6 = private unnamed_addr constant [26 x i8] c"drivers/devfreq/devfreq.c\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"failed to suspend devfreq device\0A\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"failed to resume devfreq device\0A\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"\013%s: Invalid parameters.\0A\00", align 1
@__func__.devfreq_add_governor = private unnamed_addr constant [21 x i8] c"devfreq_add_governor\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"\013%s: governor %s already registered\0A\00", align 1
@devfreq_governor_list = internal global %struct.list_head { %struct.list_head* @devfreq_governor_list, %struct.list_head* @devfreq_governor_list }, align 8, !dbg !3855
@.str.11 = private unnamed_addr constant [33 x i8] c"%s: Governor %s already present\0A\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"%s: Governor %s stop = %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"%s: Governor %s start=%d\0A\00", align 1
@__func__.devfreq_remove_governor = private unnamed_addr constant [24 x i8] c"devfreq_remove_governor\00", align 1
@.str.14 = private unnamed_addr constant [34 x i8] c"\013%s: governor %s not registered\0A\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"%s: Governor %s NOT present\0A\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"%s: Governor %s stop=%d\0A\00", align 1
@__UNIQUE_ID___addressable_devfreq_init252 = internal global i8* bitcast (i32 ()* @devfreq_init to i8*), section ".discard.addressable", align 8, !dbg !3847
@jiffies = external dso_local global i64, align 8
@.str.17 = private unnamed_addr constant [51 x i8] c"Couldn't update frequency transition information.\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"dvfs failed with (%d) error\0A\00", align 1
@.str.19 = private unnamed_addr constant [35 x i8] c"\013DEVFREQ: %s: Invalid parameters\0A\00", align 1
@__func__.find_device_devfreq = private unnamed_addr constant [20 x i8] c"find_device_devfreq\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.20 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.21 = private unnamed_addr constant [40 x i8] c"Failed to remove max_freq notifier: %d\0A\00", align 1
@.str.22 = private unnamed_addr constant [40 x i8] c"Failed to remove min_freq notifier: %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"Failed to remove max_freq request: %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [39 x i8] c"Failed to remove min_freq request: %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [51 x i8] c"failed to update frequency from OPP notifier (%d)\0A\00", align 1
@.str.26 = private unnamed_addr constant [45 x i8] c"failed to update frequency from PM QoS (%d)\0A\00", align 1
@__func__.try_then_request_governor = private unnamed_addr constant [26 x i8] c"try_then_request_governor\00", align 1
@.str.27 = private unnamed_addr constant [16 x i8] c"simple_ondemand\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"governor_%s\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"simpleondemand\00", align 1
@__func__.find_devfreq_governor = private unnamed_addr constant [22 x i8] c"find_devfreq_governor\00", align 1
@devfreq_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !3857
@.str.30 = private unnamed_addr constant [8 x i8] c"devfreq\00", align 1
@.str.31 = private unnamed_addr constant [29 x i8] c"\013%s: couldn't create class\0A\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"devfreq_wq\00", align 1
@.str.33 = private unnamed_addr constant [33 x i8] c"\013%s: couldn't create workqueue\0A\00", align 1
@devfreq_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @devfreq_group, %struct.attribute_group* null], align 16, !dbg !3862
@devfreq_debugfs = internal global %struct.dentry* null, align 8, !dbg !3908
@.str.34 = private unnamed_addr constant [16 x i8] c"devfreq_summary\00", align 1
@devfreq_summary_fops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @seq_lseek, i64 (%struct.file*, i8*, i64, i64*)* @seq_read, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* null, i64 (%struct.file*, i32, i64)* null, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* @devfreq_summary_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* @single_release, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !3910
@devfreq_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([12 x %struct.attribute*], [12 x %struct.attribute*]* @devfreq_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !3865
@devfreq_attrs = internal global [12 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_name, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_governor, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_available_governors, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_cur_freq, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_available_frequencies, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_target_freq, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_polling_interval, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_min_freq, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_max_freq, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_trans_stat, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_timer, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !3867
@dev_attr_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @name_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3870
@dev_attr_governor = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @governor_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @governor_store }, align 8, !dbg !3884
@dev_attr_available_governors = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @available_governors_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3886
@dev_attr_cur_freq = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @cur_freq_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3888
@dev_attr_available_frequencies = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @available_frequencies_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3890
@dev_attr_target_freq = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @target_freq_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3892
@dev_attr_polling_interval = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @polling_interval_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @polling_interval_store }, align 8, !dbg !3894
@dev_attr_min_freq = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @min_freq_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @min_freq_store }, align 8, !dbg !3896
@dev_attr_max_freq = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @max_freq_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @max_freq_store }, align 8, !dbg !3898
@dev_attr_trans_stat = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @trans_stat_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @trans_stat_store }, align 8, !dbg !3900
@dev_attr_timer = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @timer_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @timer_store }, align 8, !dbg !3902
@.str.35 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"governor\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"%16s\00", align 1
@.str.39 = private unnamed_addr constant [33 x i8] c"%s: Governor %s not stopped(%d)\0A\00", align 1
@__func__.governor_store = private unnamed_addr constant [15 x i8] c"governor_store\00", align 1
@.str.40 = private unnamed_addr constant [33 x i8] c"%s: Governor %s not started(%d)\0A\00", align 1
@.str.41 = private unnamed_addr constant [42 x i8] c"%s: reverting to Governor %s failed (%d)\0A\00", align 1
@.str.42 = private unnamed_addr constant [20 x i8] c"available_governors\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.44 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"cur_freq\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"%lu\0A\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"available_frequencies\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"%lu \00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"target_freq\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"polling_interval\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"min_freq\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"max_freq\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"trans_stat\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"Not Supported.\0A\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"     From  :   To\0A\00", align 1
@.str.59 = private unnamed_addr constant [13 x i8] c"           :\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"%10lu\00", align 1
@.str.61 = private unnamed_addr constant [13 x i8] c"   time(ms)\0A\00", align 1
@.str.62 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.64 = private unnamed_addr constant [7 x i8] c"%10lu:\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"%10u\00", align 1
@.str.66 = private unnamed_addr constant [8 x i8] c"%10llu\0A\00", align 1
@.str.67 = private unnamed_addr constant [23 x i8] c"Total transition : %u\0A\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"timer\00", align 1
@timer_name = internal constant [2 x [16 x i8]] [[16 x i8] c"deferrable\00\00\00\00\00\00", [16 x i8] c"delayed\00\00\00\00\00\00\00\00\00"], align 16, !dbg !3904
@__func__.timer_store = private unnamed_addr constant [12 x i8] c"timer_store\00", align 1
@.str.69 = private unnamed_addr constant [45 x i8] c"%-30s %-30s %-15s %-10s %10s %12s %12s %12s\0A\00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"dev\00", align 1
@.str.71 = private unnamed_addr constant [11 x i8] c"parent_dev\00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c"polling_ms\00", align 1
@.str.73 = private unnamed_addr constant [12 x i8] c"cur_freq_Hz\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c"min_freq_Hz\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"max_freq_Hz\00", align 1
@.str.76 = private unnamed_addr constant [41 x i8] c"%30s %30s %15s %10s %10s %12s %12s %12s\0A\00", align 1
@.str.77 = private unnamed_addr constant [31 x i8] c"------------------------------\00", align 1
@.str.78 = private unnamed_addr constant [16 x i8] c"---------------\00", align 1
@.str.79 = private unnamed_addr constant [11 x i8] c"----------\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"------------\00", align 1
@.str.81 = private unnamed_addr constant [48 x i8] c"%-30s %-30s %-15s %-10s %10d %12ld %12ld %12ld\0A\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_devfreq_init252 to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devfreq_update_status(%struct.devfreq* %devfreq, i64 %freq) #0 !dbg !3917 {
entry:
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %freq.addr = alloca i64, align 8
  %lev = alloca i32, align 4
  %prev_lev = alloca i32, align 4
  %ret = alloca i32, align 4
  %cur_time = alloca i64, align 8
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !3920, metadata !DIExpression()), !dbg !3921
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !3922, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.declare(metadata i32* %lev, metadata !3924, metadata !DIExpression()), !dbg !3925
  call void @llvm.dbg.declare(metadata i32* %prev_lev, metadata !3926, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3928, metadata !DIExpression()), !dbg !3929
  store i32 0, i32* %ret, align 4, !dbg !3929
  call void @llvm.dbg.declare(metadata i64* %cur_time, metadata !3930, metadata !DIExpression()), !dbg !3931
  br label %do.body, !dbg !3932

do.body:                                          ; preds = %entry
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !3933
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 1, !dbg !3933
  br label %do.end, !dbg !3933

do.end:                                           ; preds = %do.body
  %call = call i64 @get_jiffies_64() #9, !dbg !3935
  store i64 %call, i64* %cur_time, align 8, !dbg !3936
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !3937
  %previous_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %1, i32 0, i32 8, !dbg !3939
  %2 = load i64, i64* %previous_freq, align 8, !dbg !3939
  %tobool = icmp ne i64 %2, 0, !dbg !3937
  br i1 %tobool, label %if.end, label %if.then, !dbg !3940

if.then:                                          ; preds = %do.end
  br label %out, !dbg !3941

if.end:                                           ; preds = %do.end
  %3 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !3942
  %4 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !3943
  %previous_freq1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %4, i32 0, i32 8, !dbg !3944
  %5 = load i64, i64* %previous_freq1, align 8, !dbg !3944
  %call2 = call i32 @devfreq_get_freq_level(%struct.devfreq* %3, i64 %5) #9, !dbg !3945
  store i32 %call2, i32* %prev_lev, align 4, !dbg !3946
  %6 = load i32, i32* %prev_lev, align 4, !dbg !3947
  %cmp = icmp slt i32 %6, 0, !dbg !3949
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !3950

if.then3:                                         ; preds = %if.end
  %7 = load i32, i32* %prev_lev, align 4, !dbg !3951
  store i32 %7, i32* %ret, align 4, !dbg !3953
  br label %out, !dbg !3954

if.end4:                                          ; preds = %if.end
  %8 = load i64, i64* %cur_time, align 8, !dbg !3955
  %9 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !3956
  %stats = getelementptr inbounds %struct.devfreq, %struct.devfreq* %9, i32 0, i32 19, !dbg !3957
  %last_update = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats, i32 0, i32 3, !dbg !3958
  %10 = load i64, i64* %last_update, align 8, !dbg !3958
  %sub = sub i64 %8, %10, !dbg !3959
  %11 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !3960
  %stats5 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %11, i32 0, i32 19, !dbg !3961
  %time_in_state = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats5, i32 0, i32 2, !dbg !3962
  %12 = load i64*, i64** %time_in_state, align 8, !dbg !3962
  %13 = load i32, i32* %prev_lev, align 4, !dbg !3963
  %idxprom = sext i32 %13 to i64, !dbg !3960
  %arrayidx = getelementptr i64, i64* %12, i64 %idxprom, !dbg !3960
  %14 = load i64, i64* %arrayidx, align 8, !dbg !3964
  %add = add i64 %14, %sub, !dbg !3964
  store i64 %add, i64* %arrayidx, align 8, !dbg !3964
  %15 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !3965
  %16 = load i64, i64* %freq.addr, align 8, !dbg !3966
  %call6 = call i32 @devfreq_get_freq_level(%struct.devfreq* %15, i64 %16) #9, !dbg !3967
  store i32 %call6, i32* %lev, align 4, !dbg !3968
  %17 = load i32, i32* %lev, align 4, !dbg !3969
  %cmp7 = icmp slt i32 %17, 0, !dbg !3971
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !3972

if.then8:                                         ; preds = %if.end4
  %18 = load i32, i32* %lev, align 4, !dbg !3973
  store i32 %18, i32* %ret, align 4, !dbg !3975
  br label %out, !dbg !3976

if.end9:                                          ; preds = %if.end4
  %19 = load i32, i32* %lev, align 4, !dbg !3977
  %20 = load i32, i32* %prev_lev, align 4, !dbg !3979
  %cmp10 = icmp ne i32 %19, %20, !dbg !3980
  br i1 %cmp10, label %if.then11, label %if.end18, !dbg !3981

if.then11:                                        ; preds = %if.end9
  %21 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !3982
  %stats12 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %21, i32 0, i32 19, !dbg !3984
  %trans_table = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats12, i32 0, i32 1, !dbg !3985
  %22 = load i32*, i32** %trans_table, align 8, !dbg !3985
  %23 = load i32, i32* %prev_lev, align 4, !dbg !3986
  %24 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !3987
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %24, i32 0, i32 3, !dbg !3988
  %25 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !3988
  %max_state = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %25, i32 0, i32 8, !dbg !3989
  %26 = load i32, i32* %max_state, align 8, !dbg !3989
  %mul = mul i32 %23, %26, !dbg !3990
  %27 = load i32, i32* %lev, align 4, !dbg !3991
  %add13 = add i32 %mul, %27, !dbg !3992
  %idxprom14 = zext i32 %add13 to i64, !dbg !3982
  %arrayidx15 = getelementptr i32, i32* %22, i64 %idxprom14, !dbg !3982
  %28 = load i32, i32* %arrayidx15, align 4, !dbg !3993
  %inc = add i32 %28, 1, !dbg !3993
  store i32 %inc, i32* %arrayidx15, align 4, !dbg !3993
  %29 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !3994
  %stats16 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %29, i32 0, i32 19, !dbg !3995
  %total_trans = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats16, i32 0, i32 0, !dbg !3996
  %30 = load i32, i32* %total_trans, align 8, !dbg !3997
  %inc17 = add i32 %30, 1, !dbg !3997
  store i32 %inc17, i32* %total_trans, align 8, !dbg !3997
  br label %if.end18, !dbg !3998

if.end18:                                         ; preds = %if.then11, %if.end9
  br label %out, !dbg !3979

out:                                              ; preds = %if.end18, %if.then8, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !3999), !dbg !4000
  %31 = load i64, i64* %cur_time, align 8, !dbg !4001
  %32 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4002
  %stats19 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %32, i32 0, i32 19, !dbg !4003
  %last_update20 = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats19, i32 0, i32 3, !dbg !4004
  store i64 %31, i64* %last_update20, align 8, !dbg !4005
  %33 = load i32, i32* %ret, align 4, !dbg !4006
  ret i32 %33, !dbg !4007
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_jiffies_64() #0 !dbg !4008 {
entry:
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !4012
  ret i64 %0, !dbg !4013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devfreq_get_freq_level(%struct.devfreq* %devfreq, i64 %freq) #0 !dbg !4014 {
entry:
  %retval = alloca i32, align 4
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %freq.addr = alloca i64, align 8
  %lev = alloca i32, align 4
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !4015, metadata !DIExpression()), !dbg !4016
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !4017, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.declare(metadata i32* %lev, metadata !4019, metadata !DIExpression()), !dbg !4020
  store i32 0, i32* %lev, align 4, !dbg !4021
  br label %for.cond, !dbg !4023

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %lev, align 4, !dbg !4024
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4026
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %1, i32 0, i32 3, !dbg !4027
  %2 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !4027
  %max_state = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %2, i32 0, i32 8, !dbg !4028
  %3 = load i32, i32* %max_state, align 8, !dbg !4028
  %cmp = icmp ult i32 %0, %3, !dbg !4029
  br i1 %cmp, label %for.body, label %for.end, !dbg !4030

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %freq.addr, align 8, !dbg !4031
  %5 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4033
  %profile1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 3, !dbg !4034
  %6 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile1, align 8, !dbg !4034
  %freq_table = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %6, i32 0, i32 7, !dbg !4035
  %7 = load i64*, i64** %freq_table, align 8, !dbg !4035
  %8 = load i32, i32* %lev, align 4, !dbg !4036
  %idxprom = sext i32 %8 to i64, !dbg !4033
  %arrayidx = getelementptr i64, i64* %7, i64 %idxprom, !dbg !4033
  %9 = load i64, i64* %arrayidx, align 8, !dbg !4033
  %cmp2 = icmp eq i64 %4, %9, !dbg !4037
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4038

if.then:                                          ; preds = %for.body
  %10 = load i32, i32* %lev, align 4, !dbg !4039
  store i32 %10, i32* %retval, align 4, !dbg !4040
  br label %return, !dbg !4040

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4041

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %lev, align 4, !dbg !4042
  %inc = add i32 %11, 1, !dbg !4042
  store i32 %inc, i32* %lev, align 4, !dbg !4042
  br label %for.cond, !dbg !4043, !llvm.loop !4044

for.end:                                          ; preds = %for.cond
  store i32 -22, i32* %retval, align 4, !dbg !4046
  br label %return, !dbg !4046

return:                                           ; preds = %for.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !4047
  ret i32 %12, !dbg !4047
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @update_devfreq(%struct.devfreq* %devfreq) #0 !dbg !4048 {
entry:
  %retval = alloca i32, align 4
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %freq = alloca i64, align 8
  %min_freq = alloca i64, align 8
  %max_freq = alloca i64, align 8
  %err = alloca i32, align 4
  %flags = alloca i32, align 4
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !4051, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.declare(metadata i64* %freq, metadata !4053, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.declare(metadata i64* %min_freq, metadata !4055, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.declare(metadata i64* %max_freq, metadata !4057, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4059, metadata !DIExpression()), !dbg !4060
  store i32 0, i32* %err, align 4, !dbg !4060
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !4061, metadata !DIExpression()), !dbg !4062
  store i32 0, i32* %flags, align 4, !dbg !4062
  br label %do.body, !dbg !4063

do.body:                                          ; preds = %entry
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4064
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 1, !dbg !4064
  br label %do.end, !dbg !4064

do.end:                                           ; preds = %do.body
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4066
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %1, i32 0, i32 4, !dbg !4068
  %2 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !4068
  %tobool = icmp ne %struct.devfreq_governor* %2, null, !dbg !4066
  br i1 %tobool, label %if.end, label %if.then, !dbg !4069

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !4070
  br label %return, !dbg !4070

if.end:                                           ; preds = %do.end
  %3 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4071
  %governor1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %3, i32 0, i32 4, !dbg !4072
  %4 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor1, align 8, !dbg !4072
  %get_target_freq = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %4, i32 0, i32 4, !dbg !4073
  %5 = load i32 (%struct.devfreq*, i64*)*, i32 (%struct.devfreq*, i64*)** %get_target_freq, align 8, !dbg !4073
  %6 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4074
  %call = call i32 %5(%struct.devfreq* %6, i64* %freq) #9, !dbg !4071
  store i32 %call, i32* %err, align 4, !dbg !4075
  %7 = load i32, i32* %err, align 4, !dbg !4076
  %tobool2 = icmp ne i32 %7, 0, !dbg !4076
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !4078

if.then3:                                         ; preds = %if.end
  %8 = load i32, i32* %err, align 4, !dbg !4079
  store i32 %8, i32* %retval, align 4, !dbg !4080
  br label %return, !dbg !4080

if.end4:                                          ; preds = %if.end
  %9 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4081
  call void @get_freq_range(%struct.devfreq* %9, i64* %min_freq, i64* %max_freq) #9, !dbg !4082
  %10 = load i64, i64* %freq, align 8, !dbg !4083
  %11 = load i64, i64* %min_freq, align 8, !dbg !4085
  %cmp = icmp ult i64 %10, %11, !dbg !4086
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !4087

if.then5:                                         ; preds = %if.end4
  %12 = load i64, i64* %min_freq, align 8, !dbg !4088
  store i64 %12, i64* %freq, align 8, !dbg !4090
  %13 = load i32, i32* %flags, align 4, !dbg !4091
  %and = and i32 %13, -2, !dbg !4091
  store i32 %and, i32* %flags, align 4, !dbg !4091
  br label %if.end6, !dbg !4092

if.end6:                                          ; preds = %if.then5, %if.end4
  %14 = load i64, i64* %freq, align 8, !dbg !4093
  %15 = load i64, i64* %max_freq, align 8, !dbg !4095
  %cmp7 = icmp ugt i64 %14, %15, !dbg !4096
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4097

if.then8:                                         ; preds = %if.end6
  %16 = load i64, i64* %max_freq, align 8, !dbg !4098
  store i64 %16, i64* %freq, align 8, !dbg !4100
  %17 = load i32, i32* %flags, align 4, !dbg !4101
  %or = or i32 %17, 1, !dbg !4101
  store i32 %or, i32* %flags, align 4, !dbg !4101
  br label %if.end9, !dbg !4102

if.end9:                                          ; preds = %if.then8, %if.end6
  %18 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4103
  %19 = load i64, i64* %freq, align 8, !dbg !4104
  %20 = load i32, i32* %flags, align 4, !dbg !4105
  %call10 = call i32 @devfreq_set_target(%struct.devfreq* %18, i64 %19, i32 %20) #9, !dbg !4106
  store i32 %call10, i32* %retval, align 4, !dbg !4107
  br label %return, !dbg !4107

return:                                           ; preds = %if.end9, %if.then3, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !4108
  ret i32 %21, !dbg !4108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_freq_range(%struct.devfreq* %devfreq, i64* %min_freq, i64* %max_freq) #0 !dbg !4109 {
entry:
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %min_freq.addr = alloca i64*, align 8
  %max_freq.addr = alloca i64*, align 8
  %freq_table = alloca i64*, align 8
  %qos_min_freq = alloca i32, align 4
  %qos_max_freq = alloca i32, align 4
  %__UNIQUE_ID___x204 = alloca i64, align 8
  %__UNIQUE_ID___y205 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %__UNIQUE_ID___x206 = alloca i64, align 8
  %__UNIQUE_ID___y207 = alloca i64, align 8
  %tmp26 = alloca i64, align 8
  %__UNIQUE_ID___x208 = alloca i64, align 8
  %__UNIQUE_ID___y209 = alloca i64, align 8
  %tmp34 = alloca i64, align 8
  %__UNIQUE_ID___x210 = alloca i64, align 8
  %__UNIQUE_ID___y211 = alloca i64, align 8
  %tmp41 = alloca i64, align 8
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !4112, metadata !DIExpression()), !dbg !4113
  store i64* %min_freq, i64** %min_freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %min_freq.addr, metadata !4114, metadata !DIExpression()), !dbg !4115
  store i64* %max_freq, i64** %max_freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %max_freq.addr, metadata !4116, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.declare(metadata i64** %freq_table, metadata !4118, metadata !DIExpression()), !dbg !4119
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4120
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 3, !dbg !4121
  %1 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !4121
  %freq_table1 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %1, i32 0, i32 7, !dbg !4122
  %2 = load i64*, i64** %freq_table1, align 8, !dbg !4122
  store i64* %2, i64** %freq_table, align 8, !dbg !4119
  call void @llvm.dbg.declare(metadata i32* %qos_min_freq, metadata !4123, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.declare(metadata i32* %qos_max_freq, metadata !4125, metadata !DIExpression()), !dbg !4126
  br label %do.body, !dbg !4127

do.body:                                          ; preds = %entry
  %3 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4128
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %3, i32 0, i32 1, !dbg !4128
  br label %do.end, !dbg !4128

do.end:                                           ; preds = %do.body
  %4 = load i64*, i64** %freq_table, align 8, !dbg !4130
  %arrayidx = getelementptr i64, i64* %4, i64 0, !dbg !4130
  %5 = load i64, i64* %arrayidx, align 8, !dbg !4130
  %6 = load i64*, i64** %freq_table, align 8, !dbg !4132
  %7 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4133
  %profile2 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 3, !dbg !4134
  %8 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile2, align 8, !dbg !4134
  %max_state = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %8, i32 0, i32 8, !dbg !4135
  %9 = load i32, i32* %max_state, align 8, !dbg !4135
  %sub = sub i32 %9, 1, !dbg !4136
  %idxprom = zext i32 %sub to i64, !dbg !4132
  %arrayidx3 = getelementptr i64, i64* %6, i64 %idxprom, !dbg !4132
  %10 = load i64, i64* %arrayidx3, align 8, !dbg !4132
  %cmp = icmp ult i64 %5, %10, !dbg !4137
  br i1 %cmp, label %if.then, label %if.else, !dbg !4138

if.then:                                          ; preds = %do.end
  %11 = load i64*, i64** %freq_table, align 8, !dbg !4139
  %arrayidx4 = getelementptr i64, i64* %11, i64 0, !dbg !4139
  %12 = load i64, i64* %arrayidx4, align 8, !dbg !4139
  %13 = load i64*, i64** %min_freq.addr, align 8, !dbg !4141
  store i64 %12, i64* %13, align 8, !dbg !4142
  %14 = load i64*, i64** %freq_table, align 8, !dbg !4143
  %15 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4144
  %profile5 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %15, i32 0, i32 3, !dbg !4145
  %16 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile5, align 8, !dbg !4145
  %max_state6 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %16, i32 0, i32 8, !dbg !4146
  %17 = load i32, i32* %max_state6, align 8, !dbg !4146
  %sub7 = sub i32 %17, 1, !dbg !4147
  %idxprom8 = zext i32 %sub7 to i64, !dbg !4143
  %arrayidx9 = getelementptr i64, i64* %14, i64 %idxprom8, !dbg !4143
  %18 = load i64, i64* %arrayidx9, align 8, !dbg !4143
  %19 = load i64*, i64** %max_freq.addr, align 8, !dbg !4148
  store i64 %18, i64* %19, align 8, !dbg !4149
  br label %if.end, !dbg !4150

if.else:                                          ; preds = %do.end
  %20 = load i64*, i64** %freq_table, align 8, !dbg !4151
  %21 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4153
  %profile10 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %21, i32 0, i32 3, !dbg !4154
  %22 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile10, align 8, !dbg !4154
  %max_state11 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %22, i32 0, i32 8, !dbg !4155
  %23 = load i32, i32* %max_state11, align 8, !dbg !4155
  %sub12 = sub i32 %23, 1, !dbg !4156
  %idxprom13 = zext i32 %sub12 to i64, !dbg !4151
  %arrayidx14 = getelementptr i64, i64* %20, i64 %idxprom13, !dbg !4151
  %24 = load i64, i64* %arrayidx14, align 8, !dbg !4151
  %25 = load i64*, i64** %min_freq.addr, align 8, !dbg !4157
  store i64 %24, i64* %25, align 8, !dbg !4158
  %26 = load i64*, i64** %freq_table, align 8, !dbg !4159
  %arrayidx15 = getelementptr i64, i64* %26, i64 0, !dbg !4159
  %27 = load i64, i64* %arrayidx15, align 8, !dbg !4159
  %28 = load i64*, i64** %max_freq.addr, align 8, !dbg !4160
  store i64 %27, i64* %28, align 8, !dbg !4161
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %29 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4162
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %29, i32 0, i32 2, !dbg !4163
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !4164
  %30 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4164
  %call = call i32 @dev_pm_qos_read_value(%struct.device* %30, i32 3) #9, !dbg !4165
  store i32 %call, i32* %qos_min_freq, align 4, !dbg !4166
  %31 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4167
  %dev16 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %31, i32 0, i32 2, !dbg !4168
  %parent17 = getelementptr inbounds %struct.device, %struct.device* %dev16, i32 0, i32 1, !dbg !4169
  %32 = load %struct.device*, %struct.device** %parent17, align 8, !dbg !4169
  %call18 = call i32 @dev_pm_qos_read_value(%struct.device* %32, i32 4) #9, !dbg !4170
  store i32 %call18, i32* %qos_max_freq, align 4, !dbg !4171
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x204, metadata !4172, metadata !DIExpression()), !dbg !4174
  %33 = load i64*, i64** %min_freq.addr, align 8, !dbg !4174
  %34 = load i64, i64* %33, align 8, !dbg !4174
  store i64 %34, i64* %__UNIQUE_ID___x204, align 8, !dbg !4174
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y205, metadata !4175, metadata !DIExpression()), !dbg !4174
  %35 = load i32, i32* %qos_min_freq, align 4, !dbg !4174
  %conv = sext i32 %35 to i64, !dbg !4174
  %mul = mul i64 1000, %conv, !dbg !4174
  store i64 %mul, i64* %__UNIQUE_ID___y205, align 8, !dbg !4174
  %36 = load i64, i64* %__UNIQUE_ID___x204, align 8, !dbg !4174
  %37 = load i64, i64* %__UNIQUE_ID___y205, align 8, !dbg !4174
  %cmp19 = icmp ugt i64 %36, %37, !dbg !4174
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !4174

cond.true:                                        ; preds = %if.end
  %38 = load i64, i64* %__UNIQUE_ID___x204, align 8, !dbg !4174
  br label %cond.end, !dbg !4174

cond.false:                                       ; preds = %if.end
  %39 = load i64, i64* %__UNIQUE_ID___y205, align 8, !dbg !4174
  br label %cond.end, !dbg !4174

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %38, %cond.true ], [ %39, %cond.false ], !dbg !4174
  store i64 %cond, i64* %tmp, align 8, !dbg !4174
  %40 = load i64, i64* %tmp, align 8, !dbg !4174
  %41 = load i64*, i64** %min_freq.addr, align 8, !dbg !4176
  store i64 %40, i64* %41, align 8, !dbg !4177
  %42 = load i32, i32* %qos_max_freq, align 4, !dbg !4178
  %cmp21 = icmp ne i32 %42, 2147483647, !dbg !4180
  br i1 %cmp21, label %if.then23, label %if.end33, !dbg !4181

if.then23:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x206, metadata !4182, metadata !DIExpression()), !dbg !4184
  %43 = load i64*, i64** %max_freq.addr, align 8, !dbg !4184
  %44 = load i64, i64* %43, align 8, !dbg !4184
  store i64 %44, i64* %__UNIQUE_ID___x206, align 8, !dbg !4184
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y207, metadata !4185, metadata !DIExpression()), !dbg !4184
  %45 = load i32, i32* %qos_max_freq, align 4, !dbg !4184
  %conv24 = sext i32 %45 to i64, !dbg !4184
  %mul25 = mul i64 1000, %conv24, !dbg !4184
  store i64 %mul25, i64* %__UNIQUE_ID___y207, align 8, !dbg !4184
  %46 = load i64, i64* %__UNIQUE_ID___x206, align 8, !dbg !4184
  %47 = load i64, i64* %__UNIQUE_ID___y207, align 8, !dbg !4184
  %cmp27 = icmp ult i64 %46, %47, !dbg !4184
  br i1 %cmp27, label %cond.true29, label %cond.false30, !dbg !4184

cond.true29:                                      ; preds = %if.then23
  %48 = load i64, i64* %__UNIQUE_ID___x206, align 8, !dbg !4184
  br label %cond.end31, !dbg !4184

cond.false30:                                     ; preds = %if.then23
  %49 = load i64, i64* %__UNIQUE_ID___y207, align 8, !dbg !4184
  br label %cond.end31, !dbg !4184

cond.end31:                                       ; preds = %cond.false30, %cond.true29
  %cond32 = phi i64 [ %48, %cond.true29 ], [ %49, %cond.false30 ], !dbg !4184
  store i64 %cond32, i64* %tmp26, align 8, !dbg !4184
  %50 = load i64, i64* %tmp26, align 8, !dbg !4184
  %51 = load i64*, i64** %max_freq.addr, align 8, !dbg !4186
  store i64 %50, i64* %51, align 8, !dbg !4187
  br label %if.end33, !dbg !4188

if.end33:                                         ; preds = %cond.end31, %cond.end
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x208, metadata !4189, metadata !DIExpression()), !dbg !4191
  %52 = load i64*, i64** %min_freq.addr, align 8, !dbg !4191
  %53 = load i64, i64* %52, align 8, !dbg !4191
  store i64 %53, i64* %__UNIQUE_ID___x208, align 8, !dbg !4191
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y209, metadata !4192, metadata !DIExpression()), !dbg !4191
  %54 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4191
  %scaling_min_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %54, i32 0, i32 13, !dbg !4191
  %55 = load i64, i64* %scaling_min_freq, align 8, !dbg !4191
  store i64 %55, i64* %__UNIQUE_ID___y209, align 8, !dbg !4191
  %56 = load i64, i64* %__UNIQUE_ID___x208, align 8, !dbg !4191
  %57 = load i64, i64* %__UNIQUE_ID___y209, align 8, !dbg !4191
  %cmp35 = icmp ugt i64 %56, %57, !dbg !4191
  br i1 %cmp35, label %cond.true37, label %cond.false38, !dbg !4191

cond.true37:                                      ; preds = %if.end33
  %58 = load i64, i64* %__UNIQUE_ID___x208, align 8, !dbg !4191
  br label %cond.end39, !dbg !4191

cond.false38:                                     ; preds = %if.end33
  %59 = load i64, i64* %__UNIQUE_ID___y209, align 8, !dbg !4191
  br label %cond.end39, !dbg !4191

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond40 = phi i64 [ %58, %cond.true37 ], [ %59, %cond.false38 ], !dbg !4191
  store i64 %cond40, i64* %tmp34, align 8, !dbg !4191
  %60 = load i64, i64* %tmp34, align 8, !dbg !4191
  %61 = load i64*, i64** %min_freq.addr, align 8, !dbg !4193
  store i64 %60, i64* %61, align 8, !dbg !4194
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x210, metadata !4195, metadata !DIExpression()), !dbg !4197
  %62 = load i64*, i64** %max_freq.addr, align 8, !dbg !4197
  %63 = load i64, i64* %62, align 8, !dbg !4197
  store i64 %63, i64* %__UNIQUE_ID___x210, align 8, !dbg !4197
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y211, metadata !4198, metadata !DIExpression()), !dbg !4197
  %64 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4197
  %scaling_max_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %64, i32 0, i32 14, !dbg !4197
  %65 = load i64, i64* %scaling_max_freq, align 8, !dbg !4197
  store i64 %65, i64* %__UNIQUE_ID___y211, align 8, !dbg !4197
  %66 = load i64, i64* %__UNIQUE_ID___x210, align 8, !dbg !4197
  %67 = load i64, i64* %__UNIQUE_ID___y211, align 8, !dbg !4197
  %cmp42 = icmp ult i64 %66, %67, !dbg !4197
  br i1 %cmp42, label %cond.true44, label %cond.false45, !dbg !4197

cond.true44:                                      ; preds = %cond.end39
  %68 = load i64, i64* %__UNIQUE_ID___x210, align 8, !dbg !4197
  br label %cond.end46, !dbg !4197

cond.false45:                                     ; preds = %cond.end39
  %69 = load i64, i64* %__UNIQUE_ID___y211, align 8, !dbg !4197
  br label %cond.end46, !dbg !4197

cond.end46:                                       ; preds = %cond.false45, %cond.true44
  %cond47 = phi i64 [ %68, %cond.true44 ], [ %69, %cond.false45 ], !dbg !4197
  store i64 %cond47, i64* %tmp41, align 8, !dbg !4197
  %70 = load i64, i64* %tmp41, align 8, !dbg !4197
  %71 = load i64*, i64** %max_freq.addr, align 8, !dbg !4199
  store i64 %70, i64* %71, align 8, !dbg !4200
  %72 = load i64*, i64** %min_freq.addr, align 8, !dbg !4201
  %73 = load i64, i64* %72, align 8, !dbg !4203
  %74 = load i64*, i64** %max_freq.addr, align 8, !dbg !4204
  %75 = load i64, i64* %74, align 8, !dbg !4205
  %cmp48 = icmp ugt i64 %73, %75, !dbg !4206
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !4207

if.then50:                                        ; preds = %cond.end46
  %76 = load i64*, i64** %max_freq.addr, align 8, !dbg !4208
  %77 = load i64, i64* %76, align 8, !dbg !4209
  %78 = load i64*, i64** %min_freq.addr, align 8, !dbg !4210
  store i64 %77, i64* %78, align 8, !dbg !4211
  br label %if.end51, !dbg !4212

if.end51:                                         ; preds = %if.then50, %cond.end46
  ret void, !dbg !4213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devfreq_set_target(%struct.devfreq* %devfreq, i64 %new_freq, i32 %flags) #0 !dbg !4214 {
entry:
  %retval = alloca i32, align 4
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %new_freq.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %freqs = alloca %struct.devfreq_freqs, align 8
  %cur_freq = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !4217, metadata !DIExpression()), !dbg !4218
  store i64 %new_freq, i64* %new_freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %new_freq.addr, metadata !4219, metadata !DIExpression()), !dbg !4220
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4221, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.declare(metadata %struct.devfreq_freqs* %freqs, metadata !4223, metadata !DIExpression()), !dbg !4228
  call void @llvm.dbg.declare(metadata i64* %cur_freq, metadata !4229, metadata !DIExpression()), !dbg !4230
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4231, metadata !DIExpression()), !dbg !4232
  store i32 0, i32* %err, align 4, !dbg !4232
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4233
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 3, !dbg !4235
  %1 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !4235
  %get_cur_freq = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %1, i32 0, i32 5, !dbg !4236
  %2 = load i32 (%struct.device*, i64*)*, i32 (%struct.device*, i64*)** %get_cur_freq, align 8, !dbg !4236
  %tobool = icmp ne i32 (%struct.device*, i64*)* %2, null, !dbg !4233
  br i1 %tobool, label %if.then, label %if.else, !dbg !4237

if.then:                                          ; preds = %entry
  %3 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4238
  %profile1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %3, i32 0, i32 3, !dbg !4239
  %4 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile1, align 8, !dbg !4239
  %get_cur_freq2 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %4, i32 0, i32 5, !dbg !4240
  %5 = load i32 (%struct.device*, i64*)*, i32 (%struct.device*, i64*)** %get_cur_freq2, align 8, !dbg !4240
  %6 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4241
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %6, i32 0, i32 2, !dbg !4242
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !4243
  %7 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4243
  %call = call i32 %5(%struct.device* %7, i64* %cur_freq) #9, !dbg !4238
  br label %if.end, !dbg !4238

if.else:                                          ; preds = %entry
  %8 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4244
  %previous_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 8, !dbg !4245
  %9 = load i64, i64* %previous_freq, align 8, !dbg !4245
  store i64 %9, i64* %cur_freq, align 8, !dbg !4246
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i64, i64* %cur_freq, align 8, !dbg !4247
  %old = getelementptr inbounds %struct.devfreq_freqs, %struct.devfreq_freqs* %freqs, i32 0, i32 0, !dbg !4248
  store i64 %10, i64* %old, align 8, !dbg !4249
  %11 = load i64, i64* %new_freq.addr, align 8, !dbg !4250
  %new = getelementptr inbounds %struct.devfreq_freqs, %struct.devfreq_freqs* %freqs, i32 0, i32 1, !dbg !4251
  store i64 %11, i64* %new, align 8, !dbg !4252
  %12 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4253
  %call3 = call i32 @devfreq_notify_transition(%struct.devfreq* %12, %struct.devfreq_freqs* %freqs, i32 0) #9, !dbg !4254
  %13 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4255
  %profile4 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %13, i32 0, i32 3, !dbg !4256
  %14 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile4, align 8, !dbg !4256
  %target = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %14, i32 0, i32 3, !dbg !4257
  %15 = load i32 (%struct.device*, i64*, i32)*, i32 (%struct.device*, i64*, i32)** %target, align 8, !dbg !4257
  %16 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4258
  %dev5 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %16, i32 0, i32 2, !dbg !4259
  %parent6 = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 1, !dbg !4260
  %17 = load %struct.device*, %struct.device** %parent6, align 8, !dbg !4260
  %18 = load i32, i32* %flags.addr, align 4, !dbg !4261
  %call7 = call i32 %15(%struct.device* %17, i64* %new_freq.addr, i32 %18) #9, !dbg !4255
  store i32 %call7, i32* %err, align 4, !dbg !4262
  %19 = load i32, i32* %err, align 4, !dbg !4263
  %tobool8 = icmp ne i32 %19, 0, !dbg !4263
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !4265

if.then9:                                         ; preds = %if.end
  %20 = load i64, i64* %cur_freq, align 8, !dbg !4266
  %new10 = getelementptr inbounds %struct.devfreq_freqs, %struct.devfreq_freqs* %freqs, i32 0, i32 1, !dbg !4268
  store i64 %20, i64* %new10, align 8, !dbg !4269
  %21 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4270
  %call11 = call i32 @devfreq_notify_transition(%struct.devfreq* %21, %struct.devfreq_freqs* %freqs, i32 1) #9, !dbg !4271
  %22 = load i32, i32* %err, align 4, !dbg !4272
  store i32 %22, i32* %retval, align 4, !dbg !4273
  br label %return, !dbg !4273

if.end12:                                         ; preds = %if.end
  %23 = load i64, i64* %new_freq.addr, align 8, !dbg !4274
  %new13 = getelementptr inbounds %struct.devfreq_freqs, %struct.devfreq_freqs* %freqs, i32 0, i32 1, !dbg !4275
  store i64 %23, i64* %new13, align 8, !dbg !4276
  %24 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4277
  %call14 = call i32 @devfreq_notify_transition(%struct.devfreq* %24, %struct.devfreq_freqs* %freqs, i32 1) #9, !dbg !4278
  %25 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4279
  %26 = load i64, i64* %new_freq.addr, align 8, !dbg !4281
  %call15 = call i32 @devfreq_update_status(%struct.devfreq* %25, i64 %26) #9, !dbg !4282
  %tobool16 = icmp ne i32 %call15, 0, !dbg !4282
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !4283

if.then17:                                        ; preds = %if.end12
  %27 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4284
  %dev18 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %27, i32 0, i32 2, !dbg !4284
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev18, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !4284
  br label %if.end19, !dbg !4284

if.end19:                                         ; preds = %if.then17, %if.end12
  %28 = load i64, i64* %new_freq.addr, align 8, !dbg !4285
  %29 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4286
  %previous_freq20 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %29, i32 0, i32 8, !dbg !4287
  store i64 %28, i64* %previous_freq20, align 8, !dbg !4288
  %30 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4289
  %suspend_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %30, i32 0, i32 16, !dbg !4291
  %31 = load i64, i64* %suspend_freq, align 8, !dbg !4291
  %tobool21 = icmp ne i64 %31, 0, !dbg !4289
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !4292

if.then22:                                        ; preds = %if.end19
  %32 = load i64, i64* %cur_freq, align 8, !dbg !4293
  %33 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4294
  %resume_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %33, i32 0, i32 17, !dbg !4295
  store i64 %32, i64* %resume_freq, align 8, !dbg !4296
  br label %if.end23, !dbg !4294

if.end23:                                         ; preds = %if.then22, %if.end19
  %34 = load i32, i32* %err, align 4, !dbg !4297
  store i32 %34, i32* %retval, align 4, !dbg !4298
  br label %return, !dbg !4298

return:                                           ; preds = %if.end23, %if.then9
  %35 = load i32, i32* %retval, align 4, !dbg !4299
  ret i32 %35, !dbg !4299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devfreq_monitor_start(%struct.devfreq* %devfreq) #0 !dbg !4300 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4303, metadata !DIExpression()), !dbg !4307
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral21 = alloca %struct.atomic64_t, align 8
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !4310, metadata !DIExpression()), !dbg !4311
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4312
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 4, !dbg !4314
  %1 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !4314
  %interrupt_driven = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %1, i32 0, i32 3, !dbg !4315
  %2 = load i32, i32* %interrupt_driven, align 4, !dbg !4315
  %tobool = icmp ne i32 %2, 0, !dbg !4312
  br i1 %tobool, label %if.then, label %if.end, !dbg !4316

if.then:                                          ; preds = %entry
  br label %if.end40, !dbg !4317

if.end:                                           ; preds = %entry
  %3 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4318
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %3, i32 0, i32 3, !dbg !4319
  %4 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !4319
  %timer = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %4, i32 0, i32 2, !dbg !4320
  %5 = load i32, i32* %timer, align 4, !dbg !4320
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb13
  ], !dbg !4321

sw.bb:                                            ; preds = %if.end
  br label %do.body, !dbg !4322

do.body:                                          ; preds = %sw.bb
  br label %do.body1, !dbg !4324

do.body1:                                         ; preds = %do.body
  %6 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4326
  %work = getelementptr inbounds %struct.devfreq, %struct.devfreq* %6, i32 0, i32 7, !dbg !4326
  %work2 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work, i32 0, i32 0, !dbg !4326
  call void @__init_work(%struct.work_struct* %work2, i32 0) #9, !dbg !4326
  %7 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4326
  %work3 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 7, !dbg !4326
  %work4 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work3, i32 0, i32 0, !dbg !4326
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work4, i32 0, i32 0, !dbg !4326
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !4326
  store i64 68719476704, i64* %counter, align 8, !dbg !4326
  %8 = bitcast %struct.atomic64_t* %data to i8*, !dbg !4326
  %9 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !4326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 8, i1 false), !dbg !4326
  %10 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4326
  %work5 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %10, i32 0, i32 7, !dbg !4326
  %work6 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work5, i32 0, i32 0, !dbg !4326
  %entry7 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work6, i32 0, i32 1, !dbg !4326
  call void @INIT_LIST_HEAD(%struct.list_head* %entry7) #9, !dbg !4326
  %11 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4326
  %work8 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %11, i32 0, i32 7, !dbg !4326
  %work9 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work8, i32 0, i32 0, !dbg !4326
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work9, i32 0, i32 2, !dbg !4326
  store void (%struct.work_struct*)* @devfreq_monitor, void (%struct.work_struct*)** %func, align 8, !dbg !4326
  br label %do.end, !dbg !4326

do.end:                                           ; preds = %do.body1
  %12 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4324
  %work10 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %12, i32 0, i32 7, !dbg !4324
  %timer11 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work10, i32 0, i32 1, !dbg !4324
  call void @init_timer_key(%struct.timer_list* %timer11, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2621440, i8* null, %struct.lock_class_key* null) #9, !dbg !4324
  br label %do.end12, !dbg !4324

do.end12:                                         ; preds = %do.end
  br label %sw.epilog, !dbg !4328

sw.bb13:                                          ; preds = %if.end
  br label %do.body14, !dbg !4329

do.body14:                                        ; preds = %sw.bb13
  br label %do.body15, !dbg !4330

do.body15:                                        ; preds = %do.body14
  %13 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4332
  %work16 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %13, i32 0, i32 7, !dbg !4332
  %work17 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work16, i32 0, i32 0, !dbg !4332
  call void @__init_work(%struct.work_struct* %work17, i32 0) #9, !dbg !4332
  %14 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4332
  %work18 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %14, i32 0, i32 7, !dbg !4332
  %work19 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work18, i32 0, i32 0, !dbg !4332
  %data20 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work19, i32 0, i32 0, !dbg !4332
  %counter22 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral21, i32 0, i32 0, !dbg !4332
  store i64 68719476704, i64* %counter22, align 8, !dbg !4332
  %15 = bitcast %struct.atomic64_t* %data20 to i8*, !dbg !4332
  %16 = bitcast %struct.atomic64_t* %.compoundliteral21 to i8*, !dbg !4332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false), !dbg !4332
  %17 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4332
  %work23 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %17, i32 0, i32 7, !dbg !4332
  %work24 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work23, i32 0, i32 0, !dbg !4332
  %entry25 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work24, i32 0, i32 1, !dbg !4332
  call void @INIT_LIST_HEAD(%struct.list_head* %entry25) #9, !dbg !4332
  %18 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4332
  %work26 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %18, i32 0, i32 7, !dbg !4332
  %work27 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work26, i32 0, i32 0, !dbg !4332
  %func28 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work27, i32 0, i32 2, !dbg !4332
  store void (%struct.work_struct*)* @devfreq_monitor, void (%struct.work_struct*)** %func28, align 8, !dbg !4332
  br label %do.end29, !dbg !4332

do.end29:                                         ; preds = %do.body15
  %19 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4330
  %work30 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %19, i32 0, i32 7, !dbg !4330
  %timer31 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work30, i32 0, i32 1, !dbg !4330
  call void @init_timer_key(%struct.timer_list* %timer31, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #9, !dbg !4330
  br label %do.end32, !dbg !4330

do.end32:                                         ; preds = %do.end29
  br label %sw.epilog, !dbg !4334

sw.default:                                       ; preds = %if.end
  br label %if.end40, !dbg !4335

sw.epilog:                                        ; preds = %do.end32, %do.end12
  %20 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4336
  %profile33 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %20, i32 0, i32 3, !dbg !4337
  %21 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile33, align 8, !dbg !4337
  %polling_ms = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %21, i32 0, i32 1, !dbg !4338
  %22 = load i32, i32* %polling_ms, align 8, !dbg !4338
  %tobool34 = icmp ne i32 %22, 0, !dbg !4336
  br i1 %tobool34, label %if.then35, label %if.end40, !dbg !4339

if.then35:                                        ; preds = %sw.epilog
  %23 = load %struct.workqueue_struct*, %struct.workqueue_struct** @devfreq_wq, align 8, !dbg !4340
  %24 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4341
  %work36 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %24, i32 0, i32 7, !dbg !4342
  %25 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4343
  %profile37 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %25, i32 0, i32 3, !dbg !4344
  %26 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile37, align 8, !dbg !4344
  %polling_ms38 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %26, i32 0, i32 1, !dbg !4345
  %27 = load i32, i32* %polling_ms38, align 8, !dbg !4345
  store i32 %27, i32* %m.addr.i, align 4
  %28 = load i32, i32* %m.addr.i, align 4, !dbg !4346
  %29 = call i1 @llvm.is.constant.i32(i32 %28) #11, !dbg !4348
  br i1 %29, label %if.then.i, label %if.else.i, !dbg !4349

if.then.i:                                        ; preds = %if.then35
  %30 = load i32, i32* %m.addr.i, align 4, !dbg !4350
  %cmp.i = icmp slt i32 %30, 0, !dbg !4353
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4354

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !4355
  br label %msecs_to_jiffies.exit, !dbg !4355

if.end.i:                                         ; preds = %if.then.i
  %31 = load i32, i32* %m.addr.i, align 4, !dbg !4356
  %call.i = call i64 @_msecs_to_jiffies(i32 %31) #12, !dbg !4357
  store i64 %call.i, i64* %retval.i, align 8, !dbg !4358
  br label %msecs_to_jiffies.exit, !dbg !4358

if.else.i:                                        ; preds = %if.then35
  %32 = load i32, i32* %m.addr.i, align 4, !dbg !4359
  %call2.i = call i64 @__msecs_to_jiffies(i32 %32) #12, !dbg !4361
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !4362
  br label %msecs_to_jiffies.exit, !dbg !4362

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %33 = load i64, i64* %retval.i, align 8, !dbg !4363
  %call39 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %23, %struct.delayed_work* %work36, i64 %33) #9, !dbg !4364
  br label %if.end40, !dbg !4364

if.end40:                                         ; preds = %if.then, %sw.default, %msecs_to_jiffies.exit, %sw.epilog
  ret void, !dbg !4365
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !4366 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !4369, metadata !DIExpression()), !dbg !4370
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !4371, metadata !DIExpression()), !dbg !4372
  ret void, !dbg !4373
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !4374 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !4378, metadata !DIExpression()), !dbg !4379
  br label %do.body, !dbg !4380

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !4381

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !4383

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !4381

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4385
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4385
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !4385
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !4385
  br label %do.end3, !dbg !4385

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !4381

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4387
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4388
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !4389
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !4390
  ret void, !dbg !4391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devfreq_monitor(%struct.work_struct* %work) #0 !dbg !4392 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4303, metadata !DIExpression()), !dbg !4393
  %work.addr = alloca %struct.work_struct*, align 8
  %err = alloca i32, align 4
  %devfreq = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !4395, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4397, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !4399, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4401, metadata !DIExpression()), !dbg !4403
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !4403
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !4403
  store i8* %1, i8** %__mptr, align 8, !dbg !4403
  br label %do.body, !dbg !4403

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4404

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !4403
  %add.ptr = getelementptr i8, i8* %2, i64 -792, !dbg !4403
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !4403
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !4404
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !4403
  store %struct.devfreq* %4, %struct.devfreq** %devfreq, align 8, !dbg !4400
  %5 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4406
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 1, !dbg !4407
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !4408
  %6 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4409
  %call = call i32 @update_devfreq(%struct.devfreq* %6) #9, !dbg !4410
  store i32 %call, i32* %err, align 4, !dbg !4411
  %7 = load i32, i32* %err, align 4, !dbg !4412
  %tobool = icmp ne i32 %7, 0, !dbg !4412
  br i1 %tobool, label %if.then, label %if.end, !dbg !4414

if.then:                                          ; preds = %do.end
  %8 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4415
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 2, !dbg !4415
  %9 = load i32, i32* %err, align 4, !dbg !4415
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i64 0, i64 0), i32 %9) #10, !dbg !4415
  br label %if.end, !dbg !4415

if.end:                                           ; preds = %if.then, %do.end
  %10 = load %struct.workqueue_struct*, %struct.workqueue_struct** @devfreq_wq, align 8, !dbg !4416
  %11 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4417
  %work1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %11, i32 0, i32 7, !dbg !4418
  %12 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4419
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %12, i32 0, i32 3, !dbg !4420
  %13 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !4420
  %polling_ms = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %13, i32 0, i32 1, !dbg !4421
  %14 = load i32, i32* %polling_ms, align 8, !dbg !4421
  store i32 %14, i32* %m.addr.i, align 4
  %15 = load i32, i32* %m.addr.i, align 4, !dbg !4422
  %16 = call i1 @llvm.is.constant.i32(i32 %15) #11, !dbg !4423
  br i1 %16, label %if.then.i, label %if.else.i, !dbg !4424

if.then.i:                                        ; preds = %if.end
  %17 = load i32, i32* %m.addr.i, align 4, !dbg !4425
  %cmp.i = icmp slt i32 %17, 0, !dbg !4426
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4427

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !4428
  br label %msecs_to_jiffies.exit, !dbg !4428

if.end.i:                                         ; preds = %if.then.i
  %18 = load i32, i32* %m.addr.i, align 4, !dbg !4429
  %call.i = call i64 @_msecs_to_jiffies(i32 %18) #12, !dbg !4430
  store i64 %call.i, i64* %retval.i, align 8, !dbg !4431
  br label %msecs_to_jiffies.exit, !dbg !4431

if.else.i:                                        ; preds = %if.end
  %19 = load i32, i32* %m.addr.i, align 4, !dbg !4432
  %call2.i = call i64 @__msecs_to_jiffies(i32 %19) #12, !dbg !4433
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !4434
  br label %msecs_to_jiffies.exit, !dbg !4434

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %20 = load i64, i64* %retval.i, align 8, !dbg !4435
  %call3 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %10, %struct.delayed_work* %work1, i64 %20) #9, !dbg !4436
  %21 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4437
  %lock4 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %21, i32 0, i32 1, !dbg !4438
  call void @mutex_unlock(%struct.mutex* %lock4) #9, !dbg !4439
  %22 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4440
  call void @trace_devfreq_monitor(%struct.devfreq* %22) #9, !dbg !4441
  ret void, !dbg !4442
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #3

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #0 !dbg !4443 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !4447, metadata !DIExpression()), !dbg !4448
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !4449, metadata !DIExpression()), !dbg !4450
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !4451, metadata !DIExpression()), !dbg !4452
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !4453
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !4454
  %2 = load i64, i64* %delay.addr, align 8, !dbg !4455
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #9, !dbg !4456
  ret i1 %call, !dbg !4457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devfreq_monitor_stop(%struct.devfreq* %devfreq) #0 !dbg !4458 {
entry:
  %devfreq.addr = alloca %struct.devfreq*, align 8
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !4459, metadata !DIExpression()), !dbg !4460
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4461
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 4, !dbg !4463
  %1 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !4463
  %interrupt_driven = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %1, i32 0, i32 3, !dbg !4464
  %2 = load i32, i32* %interrupt_driven, align 4, !dbg !4464
  %tobool = icmp ne i32 %2, 0, !dbg !4461
  br i1 %tobool, label %if.then, label %if.end, !dbg !4465

if.then:                                          ; preds = %entry
  br label %return, !dbg !4466

if.end:                                           ; preds = %entry
  %3 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4467
  %work = getelementptr inbounds %struct.devfreq, %struct.devfreq* %3, i32 0, i32 7, !dbg !4468
  %call = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %work) #9, !dbg !4469
  br label %return, !dbg !4470

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !4470
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devfreq_monitor_suspend(%struct.devfreq* %devfreq) #0 !dbg !4471 {
entry:
  %devfreq.addr = alloca %struct.devfreq*, align 8
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !4472, metadata !DIExpression()), !dbg !4473
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4474
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 1, !dbg !4475
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !4476
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4477
  %stop_polling = getelementptr inbounds %struct.devfreq, %struct.devfreq* %1, i32 0, i32 15, !dbg !4479
  %2 = load i8, i8* %stop_polling, align 8, !dbg !4479
  %tobool = trunc i8 %2 to i1, !dbg !4479
  br i1 %tobool, label %if.then, label %if.end, !dbg !4480

if.then:                                          ; preds = %entry
  %3 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4481
  %lock1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %3, i32 0, i32 1, !dbg !4483
  call void @mutex_unlock(%struct.mutex* %lock1) #9, !dbg !4484
  br label %return, !dbg !4485

if.end:                                           ; preds = %entry
  %4 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4486
  %5 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4487
  %previous_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 8, !dbg !4488
  %6 = load i64, i64* %previous_freq, align 8, !dbg !4488
  %call = call i32 @devfreq_update_status(%struct.devfreq* %4, i64 %6) #9, !dbg !4489
  %7 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4490
  %stop_polling2 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 15, !dbg !4491
  store i8 1, i8* %stop_polling2, align 8, !dbg !4492
  %8 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4493
  %lock3 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 1, !dbg !4494
  call void @mutex_unlock(%struct.mutex* %lock3) #9, !dbg !4495
  %9 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4496
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %9, i32 0, i32 4, !dbg !4498
  %10 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !4498
  %interrupt_driven = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %10, i32 0, i32 3, !dbg !4499
  %11 = load i32, i32* %interrupt_driven, align 4, !dbg !4499
  %tobool4 = icmp ne i32 %11, 0, !dbg !4496
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !4500

if.then5:                                         ; preds = %if.end
  br label %return, !dbg !4501

if.end6:                                          ; preds = %if.end
  %12 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4502
  %work = getelementptr inbounds %struct.devfreq, %struct.devfreq* %12, i32 0, i32 7, !dbg !4503
  %call7 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %work) #9, !dbg !4504
  br label %return, !dbg !4505

return:                                           ; preds = %if.end6, %if.then5, %if.then
  ret void, !dbg !4505
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devfreq_monitor_resume(%struct.devfreq* %devfreq) #0 !dbg !4506 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4303, metadata !DIExpression()), !dbg !4507
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %freq = alloca i64, align 8
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !4510, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.declare(metadata i64* %freq, metadata !4512, metadata !DIExpression()), !dbg !4513
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4514
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 1, !dbg !4515
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !4516
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4517
  %stop_polling = getelementptr inbounds %struct.devfreq, %struct.devfreq* %1, i32 0, i32 15, !dbg !4519
  %2 = load i8, i8* %stop_polling, align 8, !dbg !4519
  %tobool = trunc i8 %2 to i1, !dbg !4519
  br i1 %tobool, label %if.end, label %if.then, !dbg !4520

if.then:                                          ; preds = %entry
  br label %out, !dbg !4521

if.end:                                           ; preds = %entry
  %3 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4522
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %3, i32 0, i32 4, !dbg !4524
  %4 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !4524
  %interrupt_driven = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %4, i32 0, i32 3, !dbg !4525
  %5 = load i32, i32* %interrupt_driven, align 4, !dbg !4525
  %tobool1 = icmp ne i32 %5, 0, !dbg !4522
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !4526

if.then2:                                         ; preds = %if.end
  br label %out_update, !dbg !4527

if.end3:                                          ; preds = %if.end
  %6 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4528
  %work = getelementptr inbounds %struct.devfreq, %struct.devfreq* %6, i32 0, i32 7, !dbg !4528
  %work4 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %work, i32 0, i32 0, !dbg !4528
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work4, i32 0, i32 0, !dbg !4528
  %7 = bitcast %struct.atomic64_t* %data to i64*, !dbg !4528
  %call = call zeroext i1 @test_bit(i64 0, i64* %7) #9, !dbg !4528
  br i1 %call, label %if.end12, label %land.lhs.true, !dbg !4529

land.lhs.true:                                    ; preds = %if.end3
  %8 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4530
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 3, !dbg !4531
  %9 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !4531
  %polling_ms = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %9, i32 0, i32 1, !dbg !4532
  %10 = load i32, i32* %polling_ms, align 8, !dbg !4532
  %tobool5 = icmp ne i32 %10, 0, !dbg !4530
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !4533

if.then6:                                         ; preds = %land.lhs.true
  %11 = load %struct.workqueue_struct*, %struct.workqueue_struct** @devfreq_wq, align 8, !dbg !4534
  %12 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4535
  %work7 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %12, i32 0, i32 7, !dbg !4536
  %13 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4537
  %profile8 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %13, i32 0, i32 3, !dbg !4538
  %14 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile8, align 8, !dbg !4538
  %polling_ms9 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %14, i32 0, i32 1, !dbg !4539
  %15 = load i32, i32* %polling_ms9, align 8, !dbg !4539
  store i32 %15, i32* %m.addr.i, align 4
  %16 = load i32, i32* %m.addr.i, align 4, !dbg !4540
  %17 = call i1 @llvm.is.constant.i32(i32 %16) #11, !dbg !4541
  br i1 %17, label %if.then.i, label %if.else.i, !dbg !4542

if.then.i:                                        ; preds = %if.then6
  %18 = load i32, i32* %m.addr.i, align 4, !dbg !4543
  %cmp.i = icmp slt i32 %18, 0, !dbg !4544
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4545

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !4546
  br label %msecs_to_jiffies.exit, !dbg !4546

if.end.i:                                         ; preds = %if.then.i
  %19 = load i32, i32* %m.addr.i, align 4, !dbg !4547
  %call.i = call i64 @_msecs_to_jiffies(i32 %19) #12, !dbg !4548
  store i64 %call.i, i64* %retval.i, align 8, !dbg !4549
  br label %msecs_to_jiffies.exit, !dbg !4549

if.else.i:                                        ; preds = %if.then6
  %20 = load i32, i32* %m.addr.i, align 4, !dbg !4550
  %call2.i = call i64 @__msecs_to_jiffies(i32 %20) #12, !dbg !4551
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !4552
  br label %msecs_to_jiffies.exit, !dbg !4552

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %21 = load i64, i64* %retval.i, align 8, !dbg !4553
  %call11 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %11, %struct.delayed_work* %work7, i64 %21) #9, !dbg !4554
  br label %if.end12, !dbg !4554

if.end12:                                         ; preds = %msecs_to_jiffies.exit, %land.lhs.true, %if.end3
  br label %out_update, !dbg !4532

out_update:                                       ; preds = %if.end12, %if.then2
  call void @llvm.dbg.label(metadata !4555), !dbg !4556
  %call13 = call i64 @get_jiffies_64() #9, !dbg !4557
  %22 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4558
  %stats = getelementptr inbounds %struct.devfreq, %struct.devfreq* %22, i32 0, i32 19, !dbg !4559
  %last_update = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats, i32 0, i32 3, !dbg !4560
  store i64 %call13, i64* %last_update, align 8, !dbg !4561
  %23 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4562
  %stop_polling14 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %23, i32 0, i32 15, !dbg !4563
  store i8 0, i8* %stop_polling14, align 8, !dbg !4564
  %24 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4565
  %profile15 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %24, i32 0, i32 3, !dbg !4567
  %25 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile15, align 8, !dbg !4567
  %get_cur_freq = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %25, i32 0, i32 5, !dbg !4568
  %26 = load i32 (%struct.device*, i64*)*, i32 (%struct.device*, i64*)** %get_cur_freq, align 8, !dbg !4568
  %tobool16 = icmp ne i32 (%struct.device*, i64*)* %26, null, !dbg !4565
  br i1 %tobool16, label %land.lhs.true17, label %if.end23, !dbg !4569

land.lhs.true17:                                  ; preds = %out_update
  %27 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4570
  %profile18 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %27, i32 0, i32 3, !dbg !4571
  %28 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile18, align 8, !dbg !4571
  %get_cur_freq19 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %28, i32 0, i32 5, !dbg !4572
  %29 = load i32 (%struct.device*, i64*)*, i32 (%struct.device*, i64*)** %get_cur_freq19, align 8, !dbg !4572
  %30 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4573
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %30, i32 0, i32 2, !dbg !4574
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !4575
  %31 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4575
  %call20 = call i32 %29(%struct.device* %31, i64* %freq) #9, !dbg !4570
  %tobool21 = icmp ne i32 %call20, 0, !dbg !4570
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !4576

if.then22:                                        ; preds = %land.lhs.true17
  %32 = load i64, i64* %freq, align 8, !dbg !4577
  %33 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4578
  %previous_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %33, i32 0, i32 8, !dbg !4579
  store i64 %32, i64* %previous_freq, align 8, !dbg !4580
  br label %if.end23, !dbg !4578

if.end23:                                         ; preds = %if.then22, %land.lhs.true17, %out_update
  br label %out, !dbg !4581

out:                                              ; preds = %if.end23, %if.then
  call void @llvm.dbg.label(metadata !4582), !dbg !4583
  %34 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4584
  %lock24 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %34, i32 0, i32 1, !dbg !4585
  call void @mutex_unlock(%struct.mutex* %lock24) #9, !dbg !4586
  ret void, !dbg !4587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !4588 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !4595, metadata !DIExpression()), !dbg !4598
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !4600, metadata !DIExpression()), !dbg !4601
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !4602, metadata !DIExpression()), !dbg !4603
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !4604, metadata !DIExpression()), !dbg !4606
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !4608, metadata !DIExpression()), !dbg !4609
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !4610, metadata !DIExpression()), !dbg !4618
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4620, metadata !DIExpression()), !dbg !4621
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !4622, metadata !DIExpression()), !dbg !4623
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !4624, metadata !DIExpression()), !dbg !4625
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !4626
  %1 = load i64, i64* %nr.addr, align 8, !dbg !4627
  %div = sdiv i64 %1, 64, !dbg !4627
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !4628
  %2 = bitcast i64* %add.ptr to i8*, !dbg !4626
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !4629
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4630
  %conv.i = trunc i64 %4 to i32, !dbg !4630
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !4631
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !4632
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !4632
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !4632
  %7 = load i64, i64* %nr.addr, align 8, !dbg !4633
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !4633
  br i1 %8, label %cond.true, label %cond.false, !dbg !4633

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !4633
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !4633
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !4634
  %and.i = and i64 %11, 63, !dbg !4635
  %shl.i = shl i64 1, %and.i, !dbg !4636
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !4637
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !4638
  %shr.i = ashr i64 %13, 6, !dbg !4639
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !4637
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !4637
  %and1.i = and i64 %shl.i, %14, !dbg !4640
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !4641
  %conv = zext i1 %cmp.i to i32, !dbg !4633
  br label %cond.end, !dbg !4633

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !4633
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !4633
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !4642
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !4643
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #11, !dbg !4644, !srcloc !4645
  store i8 %19, i8* %oldbit.i, align 1, !dbg !4644
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !4646
  %tobool.i = trunc i8 %20 to i1, !dbg !4646
  %conv2 = zext i1 %tobool.i to i32, !dbg !4633
  br label %cond.end, !dbg !4633

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !4633
  %tobool = icmp ne i32 %cond, 0, !dbg !4633
  ret i1 %tobool, !dbg !4647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devfreq_update_interval(%struct.devfreq* %devfreq, i32* %delay) #0 !dbg !4648 {
entry:
  %retval.i34 = alloca i64, align 8
  %m.addr.i35 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i35, metadata !4303, metadata !DIExpression()), !dbg !4651
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4303, metadata !DIExpression()), !dbg !4656
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %delay.addr = alloca i32*, align 8
  %cur_delay = alloca i32, align 4
  %new_delay = alloca i32, align 4
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !4660, metadata !DIExpression()), !dbg !4661
  store i32* %delay, i32** %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %delay.addr, metadata !4662, metadata !DIExpression()), !dbg !4663
  call void @llvm.dbg.declare(metadata i32* %cur_delay, metadata !4664, metadata !DIExpression()), !dbg !4665
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4666
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 3, !dbg !4667
  %1 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !4667
  %polling_ms = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %1, i32 0, i32 1, !dbg !4668
  %2 = load i32, i32* %polling_ms, align 8, !dbg !4668
  store i32 %2, i32* %cur_delay, align 4, !dbg !4665
  call void @llvm.dbg.declare(metadata i32* %new_delay, metadata !4669, metadata !DIExpression()), !dbg !4670
  %3 = load i32*, i32** %delay.addr, align 8, !dbg !4671
  %4 = load i32, i32* %3, align 4, !dbg !4672
  store i32 %4, i32* %new_delay, align 4, !dbg !4670
  %5 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4673
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 1, !dbg !4674
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !4675
  %6 = load i32, i32* %new_delay, align 4, !dbg !4676
  %7 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4677
  %profile1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 3, !dbg !4678
  %8 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile1, align 8, !dbg !4678
  %polling_ms2 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %8, i32 0, i32 1, !dbg !4679
  store i32 %6, i32* %polling_ms2, align 8, !dbg !4680
  %9 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4681
  %stop_polling = getelementptr inbounds %struct.devfreq, %struct.devfreq* %9, i32 0, i32 15, !dbg !4683
  %10 = load i8, i8* %stop_polling, align 8, !dbg !4683
  %tobool = trunc i8 %10 to i1, !dbg !4683
  br i1 %tobool, label %if.then, label %if.end, !dbg !4684

if.then:                                          ; preds = %entry
  br label %out, !dbg !4685

if.end:                                           ; preds = %entry
  %11 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4686
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %11, i32 0, i32 4, !dbg !4688
  %12 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !4688
  %interrupt_driven = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %12, i32 0, i32 3, !dbg !4689
  %13 = load i32, i32* %interrupt_driven, align 4, !dbg !4689
  %tobool3 = icmp ne i32 %13, 0, !dbg !4686
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4690

if.then4:                                         ; preds = %if.end
  br label %out, !dbg !4691

if.end5:                                          ; preds = %if.end
  %14 = load i32, i32* %new_delay, align 4, !dbg !4692
  %tobool6 = icmp ne i32 %14, 0, !dbg !4692
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !4694

if.then7:                                         ; preds = %if.end5
  %15 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4695
  %lock8 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %15, i32 0, i32 1, !dbg !4697
  call void @mutex_unlock(%struct.mutex* %lock8) #9, !dbg !4698
  %16 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4699
  %work = getelementptr inbounds %struct.devfreq, %struct.devfreq* %16, i32 0, i32 7, !dbg !4700
  %call = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %work) #9, !dbg !4701
  br label %return, !dbg !4702

if.end9:                                          ; preds = %if.end5
  %17 = load i32, i32* %cur_delay, align 4, !dbg !4703
  %tobool10 = icmp ne i32 %17, 0, !dbg !4703
  br i1 %tobool10, label %if.end17, label %if.then11, !dbg !4704

if.then11:                                        ; preds = %if.end9
  %18 = load %struct.workqueue_struct*, %struct.workqueue_struct** @devfreq_wq, align 8, !dbg !4705
  %19 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4706
  %work12 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %19, i32 0, i32 7, !dbg !4707
  %20 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4708
  %profile13 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %20, i32 0, i32 3, !dbg !4709
  %21 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile13, align 8, !dbg !4709
  %polling_ms14 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %21, i32 0, i32 1, !dbg !4710
  %22 = load i32, i32* %polling_ms14, align 8, !dbg !4710
  store i32 %22, i32* %m.addr.i, align 4
  %23 = load i32, i32* %m.addr.i, align 4, !dbg !4711
  %24 = call i1 @llvm.is.constant.i32(i32 %23) #11, !dbg !4712
  br i1 %24, label %if.then.i, label %if.else.i, !dbg !4713

if.then.i:                                        ; preds = %if.then11
  %25 = load i32, i32* %m.addr.i, align 4, !dbg !4714
  %cmp.i = icmp slt i32 %25, 0, !dbg !4715
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4716

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !4717
  br label %msecs_to_jiffies.exit, !dbg !4717

if.end.i:                                         ; preds = %if.then.i
  %26 = load i32, i32* %m.addr.i, align 4, !dbg !4718
  %call.i = call i64 @_msecs_to_jiffies(i32 %26) #12, !dbg !4719
  store i64 %call.i, i64* %retval.i, align 8, !dbg !4720
  br label %msecs_to_jiffies.exit, !dbg !4720

if.else.i:                                        ; preds = %if.then11
  %27 = load i32, i32* %m.addr.i, align 4, !dbg !4721
  %call2.i = call i64 @__msecs_to_jiffies(i32 %27) #12, !dbg !4722
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !4723
  br label %msecs_to_jiffies.exit, !dbg !4723

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %28 = load i64, i64* %retval.i, align 8, !dbg !4724
  %call16 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %18, %struct.delayed_work* %work12, i64 %28) #9, !dbg !4725
  br label %out, !dbg !4726

if.end17:                                         ; preds = %if.end9
  %29 = load i32, i32* %cur_delay, align 4, !dbg !4727
  %30 = load i32, i32* %new_delay, align 4, !dbg !4728
  %cmp = icmp ugt i32 %29, %30, !dbg !4729
  br i1 %cmp, label %if.then18, label %if.end32, !dbg !4730

if.then18:                                        ; preds = %if.end17
  %31 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4731
  %lock19 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %31, i32 0, i32 1, !dbg !4732
  call void @mutex_unlock(%struct.mutex* %lock19) #9, !dbg !4733
  %32 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4734
  %work20 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %32, i32 0, i32 7, !dbg !4735
  %call21 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %work20) #9, !dbg !4736
  %33 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4737
  %lock22 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %33, i32 0, i32 1, !dbg !4738
  call void @mutex_lock(%struct.mutex* %lock22) #9, !dbg !4739
  %34 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4740
  %stop_polling23 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %34, i32 0, i32 15, !dbg !4741
  %35 = load i8, i8* %stop_polling23, align 8, !dbg !4741
  %tobool24 = trunc i8 %35 to i1, !dbg !4741
  br i1 %tobool24, label %if.end31, label %if.then25, !dbg !4742

if.then25:                                        ; preds = %if.then18
  %36 = load %struct.workqueue_struct*, %struct.workqueue_struct** @devfreq_wq, align 8, !dbg !4743
  %37 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4744
  %work26 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %37, i32 0, i32 7, !dbg !4745
  %38 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4746
  %profile27 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %38, i32 0, i32 3, !dbg !4747
  %39 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile27, align 8, !dbg !4747
  %polling_ms28 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %39, i32 0, i32 1, !dbg !4748
  %40 = load i32, i32* %polling_ms28, align 8, !dbg !4748
  store i32 %40, i32* %m.addr.i35, align 4
  %41 = load i32, i32* %m.addr.i35, align 4, !dbg !4749
  %42 = call i1 @llvm.is.constant.i32(i32 %41) #11, !dbg !4750
  br i1 %42, label %if.then.i37, label %if.else.i42, !dbg !4751

if.then.i37:                                      ; preds = %if.then25
  %43 = load i32, i32* %m.addr.i35, align 4, !dbg !4752
  %cmp.i36 = icmp slt i32 %43, 0, !dbg !4753
  br i1 %cmp.i36, label %if.then1.i38, label %if.end.i40, !dbg !4754

if.then1.i38:                                     ; preds = %if.then.i37
  store i64 4611686018427387902, i64* %retval.i34, align 8, !dbg !4755
  br label %msecs_to_jiffies.exit43, !dbg !4755

if.end.i40:                                       ; preds = %if.then.i37
  %44 = load i32, i32* %m.addr.i35, align 4, !dbg !4756
  %call.i39 = call i64 @_msecs_to_jiffies(i32 %44) #12, !dbg !4757
  store i64 %call.i39, i64* %retval.i34, align 8, !dbg !4758
  br label %msecs_to_jiffies.exit43, !dbg !4758

if.else.i42:                                      ; preds = %if.then25
  %45 = load i32, i32* %m.addr.i35, align 4, !dbg !4759
  %call2.i41 = call i64 @__msecs_to_jiffies(i32 %45) #12, !dbg !4760
  store i64 %call2.i41, i64* %retval.i34, align 8, !dbg !4761
  br label %msecs_to_jiffies.exit43, !dbg !4761

msecs_to_jiffies.exit43:                          ; preds = %if.then1.i38, %if.end.i40, %if.else.i42
  %46 = load i64, i64* %retval.i34, align 8, !dbg !4762
  %call30 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %36, %struct.delayed_work* %work26, i64 %46) #9, !dbg !4763
  br label %if.end31, !dbg !4763

if.end31:                                         ; preds = %msecs_to_jiffies.exit43, %if.then18
  br label %if.end32, !dbg !4764

if.end32:                                         ; preds = %if.end31, %if.end17
  br label %out, !dbg !4728

out:                                              ; preds = %if.end32, %msecs_to_jiffies.exit, %if.then4, %if.then
  call void @llvm.dbg.label(metadata !4765), !dbg !4766
  %47 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !4767
  %lock33 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %47, i32 0, i32 1, !dbg !4768
  call void @mutex_unlock(%struct.mutex* %lock33) #9, !dbg !4769
  br label %return, !dbg !4770

return:                                           ; preds = %out, %if.then7
  ret void, !dbg !4770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.devfreq* @devfreq_add_device(%struct.device* %dev, %struct.devfreq_dev_profile* %profile, i8* %governor_name, i8* %data) #0 !dbg !3844 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4771, metadata !DIExpression()), !dbg !4777
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !4782, metadata !DIExpression()), !dbg !4783
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4784, metadata !DIExpression()), !dbg !4786
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4788, metadata !DIExpression()), !dbg !4789
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4790, metadata !DIExpression()), !dbg !4791
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !4792, metadata !DIExpression()), !dbg !4793
  %retval = alloca %struct.devfreq*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %profile.addr = alloca %struct.devfreq_dev_profile*, align 8
  %governor_name.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %devfreq = alloca %struct.devfreq*, align 8
  %governor = alloca %struct.devfreq_governor*, align 8
  %err = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4794, metadata !DIExpression()), !dbg !4795
  store %struct.devfreq_dev_profile* %profile, %struct.devfreq_dev_profile** %profile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq_dev_profile** %profile.addr, metadata !4796, metadata !DIExpression()), !dbg !4797
  store i8* %governor_name, i8** %governor_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %governor_name.addr, metadata !4798, metadata !DIExpression()), !dbg !4799
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4800, metadata !DIExpression()), !dbg !4801
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !4802, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.declare(metadata %struct.devfreq_governor** %governor, metadata !4804, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4806, metadata !DIExpression()), !dbg !4807
  store i32 0, i32* %err, align 4, !dbg !4807
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4808
  %tobool = icmp ne %struct.device* %0, null, !dbg !4808
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4810

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile.addr, align 8, !dbg !4811
  %tobool1 = icmp ne %struct.devfreq_dev_profile* %1, null, !dbg !4811
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !4812

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %governor_name.addr, align 8, !dbg !4813
  %tobool3 = icmp ne i8* %2, null, !dbg !4813
  br i1 %tobool3, label %if.end, label %if.then, !dbg !4814

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4815
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.devfreq_add_device, i64 0, i64 0)) #10, !dbg !4815
  %call = call i8* @ERR_PTR(i64 -22) #9, !dbg !4817
  %4 = bitcast i8* %call to %struct.devfreq*, !dbg !4817
  store %struct.devfreq* %4, %struct.devfreq** %retval, align 8, !dbg !4818
  br label %return, !dbg !4818

if.end:                                           ; preds = %lor.lhs.false2
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !4819
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4820
  %call4 = call %struct.devfreq* @find_device_devfreq(%struct.device* %5) #9, !dbg !4821
  store %struct.devfreq* %call4, %struct.devfreq** %devfreq, align 8, !dbg !4822
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !4823
  %6 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4824
  %7 = bitcast %struct.devfreq* %6 to i8*, !dbg !4824
  %call5 = call zeroext i1 @IS_ERR(i8* %7) #9, !dbg !4826
  br i1 %call5, label %if.end7, label %if.then6, !dbg !4827

if.then6:                                         ; preds = %if.end
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4828
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.devfreq_add_device, i64 0, i64 0)) #10, !dbg !4828
  store i32 -22, i32* %err, align 4, !dbg !4830
  br label %err_out, !dbg !4831

if.end7:                                          ; preds = %if.end
  %call8 = call i8* @kzalloc(i64 1304, i32 3264) #9, !dbg !4832
  %9 = bitcast i8* %call8 to %struct.devfreq*, !dbg !4832
  store %struct.devfreq* %9, %struct.devfreq** %devfreq, align 8, !dbg !4833
  %10 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4834
  %tobool9 = icmp ne %struct.devfreq* %10, null, !dbg !4834
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !4836

if.then10:                                        ; preds = %if.end7
  store i32 -12, i32* %err, align 4, !dbg !4837
  br label %err_out, !dbg !4839

if.end11:                                         ; preds = %if.end7
  br label %do.body, !dbg !4840

do.body:                                          ; preds = %if.end11
  %11 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4841
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %11, i32 0, i32 1, !dbg !4841
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), %struct.lock_class_key* @devfreq_add_device.__key) #9, !dbg !4841
  br label %do.end, !dbg !4841

do.end:                                           ; preds = %do.body
  %12 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4843
  %lock12 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %12, i32 0, i32 1, !dbg !4844
  call void @mutex_lock(%struct.mutex* %lock12) #9, !dbg !4845
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4846
  %14 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4847
  %dev13 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %14, i32 0, i32 2, !dbg !4848
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev13, i32 0, i32 1, !dbg !4849
  store %struct.device* %13, %struct.device** %parent, align 8, !dbg !4850
  %15 = load %struct.class*, %struct.class** @devfreq_class, align 8, !dbg !4851
  %16 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4852
  %dev14 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %16, i32 0, i32 2, !dbg !4853
  %class = getelementptr inbounds %struct.device, %struct.device* %dev14, i32 0, i32 29, !dbg !4854
  store %struct.class* %15, %struct.class** %class, align 8, !dbg !4855
  %17 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4856
  %dev15 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %17, i32 0, i32 2, !dbg !4857
  %release = getelementptr inbounds %struct.device, %struct.device* %dev15, i32 0, i32 31, !dbg !4858
  store void (%struct.device*)* @devfreq_dev_release, void (%struct.device*)** %release, align 8, !dbg !4859
  %18 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4860
  %node = getelementptr inbounds %struct.devfreq, %struct.devfreq* %18, i32 0, i32 0, !dbg !4861
  call void @INIT_LIST_HEAD(%struct.list_head* %node) #9, !dbg !4862
  %19 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile.addr, align 8, !dbg !4863
  %20 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4864
  %profile16 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %20, i32 0, i32 3, !dbg !4865
  store %struct.devfreq_dev_profile* %19, %struct.devfreq_dev_profile** %profile16, align 8, !dbg !4866
  %21 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4867
  %governor_name17 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %21, i32 0, i32 5, !dbg !4868
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %governor_name17, i64 0, i64 0, !dbg !4867
  %22 = load i8*, i8** %governor_name.addr, align 8, !dbg !4869
  %call18 = call i64 @strscpy(i8* %arraydecay, i8* %22, i64 16) #9, !dbg !4870
  %23 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile.addr, align 8, !dbg !4871
  %initial_freq = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %23, i32 0, i32 0, !dbg !4872
  %24 = load i64, i64* %initial_freq, align 8, !dbg !4872
  %25 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4873
  %previous_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %25, i32 0, i32 8, !dbg !4874
  store i64 %24, i64* %previous_freq, align 8, !dbg !4875
  %26 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile.addr, align 8, !dbg !4876
  %initial_freq19 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %26, i32 0, i32 0, !dbg !4877
  %27 = load i64, i64* %initial_freq19, align 8, !dbg !4877
  %28 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4878
  %last_status = getelementptr inbounds %struct.devfreq, %struct.devfreq* %28, i32 0, i32 9, !dbg !4879
  %current_frequency = getelementptr inbounds %struct.devfreq_dev_status, %struct.devfreq_dev_status* %last_status, i32 0, i32 2, !dbg !4880
  store i64 %27, i64* %current_frequency, align 8, !dbg !4881
  %29 = load i8*, i8** %data.addr, align 8, !dbg !4882
  %30 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4883
  %data20 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %30, i32 0, i32 10, !dbg !4884
  store i8* %29, i8** %data20, align 8, !dbg !4885
  %31 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4886
  %nb = getelementptr inbounds %struct.devfreq, %struct.devfreq* %31, i32 0, i32 6, !dbg !4887
  %notifier_call = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %nb, i32 0, i32 0, !dbg !4888
  store i32 (%struct.notifier_block*, i64, i8*)* @devfreq_notifier_call, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call, align 8, !dbg !4889
  %32 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4890
  %profile21 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %32, i32 0, i32 3, !dbg !4892
  %33 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile21, align 8, !dbg !4892
  %timer = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %33, i32 0, i32 2, !dbg !4893
  %34 = load i32, i32* %timer, align 4, !dbg !4893
  %cmp = icmp ult i32 %34, 0, !dbg !4894
  br i1 %cmp, label %if.then26, label %lor.lhs.false22, !dbg !4895

lor.lhs.false22:                                  ; preds = %do.end
  %35 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4896
  %profile23 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %35, i32 0, i32 3, !dbg !4897
  %36 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile23, align 8, !dbg !4897
  %timer24 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %36, i32 0, i32 2, !dbg !4898
  %37 = load i32, i32* %timer24, align 4, !dbg !4898
  %cmp25 = icmp uge i32 %37, 2, !dbg !4899
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !4900

if.then26:                                        ; preds = %lor.lhs.false22, %do.end
  br label %err_out, !dbg !4901

if.end27:                                         ; preds = %lor.lhs.false22
  %38 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4903
  %profile28 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %38, i32 0, i32 3, !dbg !4905
  %39 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile28, align 8, !dbg !4905
  %max_state = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %39, i32 0, i32 8, !dbg !4906
  %40 = load i32, i32* %max_state, align 8, !dbg !4906
  %tobool29 = icmp ne i32 %40, 0, !dbg !4903
  br i1 %tobool29, label %if.end39, label %land.lhs.true, !dbg !4907

land.lhs.true:                                    ; preds = %if.end27
  %41 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4908
  %profile30 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %41, i32 0, i32 3, !dbg !4909
  %42 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile30, align 8, !dbg !4909
  %freq_table = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %42, i32 0, i32 7, !dbg !4910
  %43 = load i64*, i64** %freq_table, align 8, !dbg !4910
  %tobool31 = icmp ne i64* %43, null, !dbg !4908
  br i1 %tobool31, label %if.end39, label %if.then32, !dbg !4911

if.then32:                                        ; preds = %land.lhs.true
  %44 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4912
  %lock33 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %44, i32 0, i32 1, !dbg !4914
  call void @mutex_unlock(%struct.mutex* %lock33) #9, !dbg !4915
  %45 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4916
  %call34 = call i32 @set_freq_table(%struct.devfreq* %45) #9, !dbg !4917
  store i32 %call34, i32* %err, align 4, !dbg !4918
  %46 = load i32, i32* %err, align 4, !dbg !4919
  %cmp35 = icmp slt i32 %46, 0, !dbg !4921
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !4922

if.then36:                                        ; preds = %if.then32
  br label %err_dev, !dbg !4923

if.end37:                                         ; preds = %if.then32
  %47 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4924
  %lock38 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %47, i32 0, i32 1, !dbg !4925
  call void @mutex_lock(%struct.mutex* %lock38) #9, !dbg !4926
  br label %if.end39, !dbg !4927

if.end39:                                         ; preds = %if.end37, %land.lhs.true, %if.end27
  %48 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4928
  %call40 = call i64 @find_available_min_freq(%struct.devfreq* %48) #9, !dbg !4929
  %49 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4930
  %scaling_min_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %49, i32 0, i32 13, !dbg !4931
  store i64 %call40, i64* %scaling_min_freq, align 8, !dbg !4932
  %50 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4933
  %scaling_min_freq41 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %50, i32 0, i32 13, !dbg !4935
  %51 = load i64, i64* %scaling_min_freq41, align 8, !dbg !4935
  %tobool42 = icmp ne i64 %51, 0, !dbg !4933
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !4936

if.then43:                                        ; preds = %if.end39
  %52 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4937
  %lock44 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %52, i32 0, i32 1, !dbg !4939
  call void @mutex_unlock(%struct.mutex* %lock44) #9, !dbg !4940
  store i32 -22, i32* %err, align 4, !dbg !4941
  br label %err_dev, !dbg !4942

if.end45:                                         ; preds = %if.end39
  %53 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4943
  %call46 = call i64 @find_available_max_freq(%struct.devfreq* %53) #9, !dbg !4944
  %54 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4945
  %scaling_max_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %54, i32 0, i32 14, !dbg !4946
  store i64 %call46, i64* %scaling_max_freq, align 8, !dbg !4947
  %55 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4948
  %scaling_max_freq47 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %55, i32 0, i32 14, !dbg !4950
  %56 = load i64, i64* %scaling_max_freq47, align 8, !dbg !4950
  %tobool48 = icmp ne i64 %56, 0, !dbg !4948
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !4951

if.then49:                                        ; preds = %if.end45
  %57 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4952
  %lock50 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %57, i32 0, i32 1, !dbg !4954
  call void @mutex_unlock(%struct.mutex* %lock50) #9, !dbg !4955
  store i32 -22, i32* %err, align 4, !dbg !4956
  br label %err_dev, !dbg !4957

if.end51:                                         ; preds = %if.end45
  %58 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4958
  %call52 = call i64 @dev_pm_opp_get_suspend_opp_freq(%struct.device* %58) #9, !dbg !4959
  %59 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4960
  %suspend_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %59, i32 0, i32 16, !dbg !4961
  store i64 %call52, i64* %suspend_freq, align 8, !dbg !4962
  %60 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4963
  %suspend_count = getelementptr inbounds %struct.devfreq, %struct.devfreq* %60, i32 0, i32 18, !dbg !4964
  store %struct.atomic_t* %suspend_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %i.addr.i, align 4
  %61 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4965
  %62 = bitcast %struct.atomic_t* %61 to i8*, !dbg !4965
  store i8* %62, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %63 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4966
  %64 = load i64, i64* %size.addr.i.i, align 8, !dbg !4967
  %conv.i.i = trunc i64 %64 to i32, !dbg !4967
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %63, i32 %conv.i.i) #12, !dbg !4968
  %65 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4969
  %66 = load i64, i64* %size.addr.i.i, align 8, !dbg !4969
  call void @kcsan_check_access(i8* %65, i64 %66, i32 5) #12, !dbg !4969
  %67 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4970
  %68 = load i32, i32* %i.addr.i, align 4, !dbg !4971
  store %struct.atomic_t* %67, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %68, i32* %i.addr.i.i, align 4
  %69 = load i32, i32* %i.addr.i.i, align 4, !dbg !4972
  %70 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !4972
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %70, i32 0, i32 0, !dbg !4972
  store volatile i32 %69, i32* %counter.i.i, align 4, !dbg !4972
  %71 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4974
  %dev53 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %71, i32 0, i32 2, !dbg !4975
  %72 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4976
  %call54 = call i8* @dev_name(%struct.device* %72) #9, !dbg !4977
  %call55 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %call54) #9, !dbg !4978
  %73 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4979
  %dev56 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %73, i32 0, i32 2, !dbg !4980
  %call57 = call i32 @device_register(%struct.device* %dev56) #9, !dbg !4981
  store i32 %call57, i32* %err, align 4, !dbg !4982
  %74 = load i32, i32* %err, align 4, !dbg !4983
  %tobool58 = icmp ne i32 %74, 0, !dbg !4983
  br i1 %tobool58, label %if.then59, label %if.end62, !dbg !4985

if.then59:                                        ; preds = %if.end51
  %75 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4986
  %lock60 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %75, i32 0, i32 1, !dbg !4988
  call void @mutex_unlock(%struct.mutex* %lock60) #9, !dbg !4989
  %76 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4990
  %dev61 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %76, i32 0, i32 2, !dbg !4991
  call void @put_device(%struct.device* %dev61) #9, !dbg !4992
  br label %err_out, !dbg !4993

if.end62:                                         ; preds = %if.end51
  %77 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4994
  %dev63 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %77, i32 0, i32 2, !dbg !4995
  %78 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4996
  %profile64 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %78, i32 0, i32 3, !dbg !4997
  %79 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile64, align 8, !dbg !4997
  %max_state65 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %79, i32 0, i32 8, !dbg !4998
  %80 = load i32, i32* %max_state65, align 8, !dbg !4998
  %conv = zext i32 %80 to i64, !dbg !4996
  %81 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !4999
  %profile66 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %81, i32 0, i32 3, !dbg !5000
  %82 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile66, align 8, !dbg !5000
  %max_state67 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %82, i32 0, i32 8, !dbg !5001
  %83 = load i32, i32* %max_state67, align 8, !dbg !5001
  %conv68 = zext i32 %83 to i64, !dbg !4999
  %call69 = call i64 @array3_size(i64 4, i64 %conv, i64 %conv68) #9, !dbg !5002
  %call70 = call i8* @devm_kzalloc(%struct.device* %dev63, i64 %call69, i32 3264) #9, !dbg !5003
  %84 = bitcast i8* %call70 to i32*, !dbg !5003
  %85 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5004
  %stats = getelementptr inbounds %struct.devfreq, %struct.devfreq* %85, i32 0, i32 19, !dbg !5005
  %trans_table = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats, i32 0, i32 1, !dbg !5006
  store i32* %84, i32** %trans_table, align 8, !dbg !5007
  %86 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5008
  %stats71 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %86, i32 0, i32 19, !dbg !5010
  %trans_table72 = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats71, i32 0, i32 1, !dbg !5011
  %87 = load i32*, i32** %trans_table72, align 8, !dbg !5011
  %tobool73 = icmp ne i32* %87, null, !dbg !5008
  br i1 %tobool73, label %if.end76, label %if.then74, !dbg !5012

if.then74:                                        ; preds = %if.end62
  %88 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5013
  %lock75 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %88, i32 0, i32 1, !dbg !5015
  call void @mutex_unlock(%struct.mutex* %lock75) #9, !dbg !5016
  store i32 -12, i32* %err, align 4, !dbg !5017
  br label %err_devfreq, !dbg !5018

if.end76:                                         ; preds = %if.end62
  %89 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5019
  %dev77 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %89, i32 0, i32 2, !dbg !5020
  %90 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5021
  %profile78 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %90, i32 0, i32 3, !dbg !5022
  %91 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile78, align 8, !dbg !5022
  %max_state79 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %91, i32 0, i32 8, !dbg !5023
  %92 = load i32, i32* %max_state79, align 8, !dbg !5023
  %conv80 = zext i32 %92 to i64, !dbg !5021
  %call81 = call i8* @devm_kcalloc(%struct.device* %dev77, i64 %conv80, i64 8, i32 3264) #9, !dbg !5024
  %93 = bitcast i8* %call81 to i64*, !dbg !5024
  %94 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5025
  %stats82 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %94, i32 0, i32 19, !dbg !5026
  %time_in_state = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats82, i32 0, i32 2, !dbg !5027
  store i64* %93, i64** %time_in_state, align 8, !dbg !5028
  %95 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5029
  %stats83 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %95, i32 0, i32 19, !dbg !5031
  %time_in_state84 = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats83, i32 0, i32 2, !dbg !5032
  %96 = load i64*, i64** %time_in_state84, align 8, !dbg !5032
  %tobool85 = icmp ne i64* %96, null, !dbg !5029
  br i1 %tobool85, label %if.end88, label %if.then86, !dbg !5033

if.then86:                                        ; preds = %if.end76
  %97 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5034
  %lock87 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %97, i32 0, i32 1, !dbg !5036
  call void @mutex_unlock(%struct.mutex* %lock87) #9, !dbg !5037
  store i32 -12, i32* %err, align 4, !dbg !5038
  br label %err_devfreq, !dbg !5039

if.end88:                                         ; preds = %if.end76
  %98 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5040
  %stats89 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %98, i32 0, i32 19, !dbg !5041
  %total_trans = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats89, i32 0, i32 0, !dbg !5042
  store i32 0, i32* %total_trans, align 8, !dbg !5043
  %call90 = call i64 @get_jiffies_64() #9, !dbg !5044
  %99 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5045
  %stats91 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %99, i32 0, i32 19, !dbg !5046
  %last_update = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats91, i32 0, i32 3, !dbg !5047
  store i64 %call90, i64* %last_update, align 8, !dbg !5048
  %100 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5049
  %transition_notifier_list = getelementptr inbounds %struct.devfreq, %struct.devfreq* %100, i32 0, i32 20, !dbg !5050
  call void @srcu_init_notifier_head(%struct.srcu_notifier_head* %transition_notifier_list) #9, !dbg !5051
  %101 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5052
  %lock92 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %101, i32 0, i32 1, !dbg !5053
  call void @mutex_unlock(%struct.mutex* %lock92) #9, !dbg !5054
  %102 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5055
  %103 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5056
  %user_min_freq_req = getelementptr inbounds %struct.devfreq, %struct.devfreq* %103, i32 0, i32 11, !dbg !5057
  %call93 = call i32 @dev_pm_qos_add_request(%struct.device* %102, %struct.dev_pm_qos_request* %user_min_freq_req, i32 3, i32 0) #9, !dbg !5058
  store i32 %call93, i32* %err, align 4, !dbg !5059
  %104 = load i32, i32* %err, align 4, !dbg !5060
  %cmp94 = icmp slt i32 %104, 0, !dbg !5062
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !5063

if.then96:                                        ; preds = %if.end88
  br label %err_devfreq, !dbg !5064

if.end97:                                         ; preds = %if.end88
  %105 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5065
  %106 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5066
  %user_max_freq_req = getelementptr inbounds %struct.devfreq, %struct.devfreq* %106, i32 0, i32 12, !dbg !5067
  %call98 = call i32 @dev_pm_qos_add_request(%struct.device* %105, %struct.dev_pm_qos_request* %user_max_freq_req, i32 4, i32 2147483647) #9, !dbg !5068
  store i32 %call98, i32* %err, align 4, !dbg !5069
  %107 = load i32, i32* %err, align 4, !dbg !5070
  %cmp99 = icmp slt i32 %107, 0, !dbg !5072
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !5073

if.then101:                                       ; preds = %if.end97
  br label %err_devfreq, !dbg !5074

if.end102:                                        ; preds = %if.end97
  %108 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5075
  %nb_min = getelementptr inbounds %struct.devfreq, %struct.devfreq* %108, i32 0, i32 21, !dbg !5076
  %notifier_call103 = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %nb_min, i32 0, i32 0, !dbg !5077
  store i32 (%struct.notifier_block*, i64, i8*)* @qos_min_notifier_call, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call103, align 8, !dbg !5078
  %109 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5079
  %dev104 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %109, i32 0, i32 2, !dbg !5080
  %parent105 = getelementptr inbounds %struct.device, %struct.device* %dev104, i32 0, i32 1, !dbg !5081
  %110 = load %struct.device*, %struct.device** %parent105, align 8, !dbg !5081
  %111 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5082
  %nb_min106 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %111, i32 0, i32 21, !dbg !5083
  %call107 = call i32 @dev_pm_qos_add_notifier(%struct.device* %110, %struct.notifier_block* %nb_min106, i32 3) #9, !dbg !5084
  store i32 %call107, i32* %err, align 4, !dbg !5085
  %112 = load i32, i32* %err, align 4, !dbg !5086
  %tobool108 = icmp ne i32 %112, 0, !dbg !5086
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !5088

if.then109:                                       ; preds = %if.end102
  br label %err_devfreq, !dbg !5089

if.end110:                                        ; preds = %if.end102
  %113 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5090
  %nb_max = getelementptr inbounds %struct.devfreq, %struct.devfreq* %113, i32 0, i32 22, !dbg !5091
  %notifier_call111 = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %nb_max, i32 0, i32 0, !dbg !5092
  store i32 (%struct.notifier_block*, i64, i8*)* @qos_max_notifier_call, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call111, align 8, !dbg !5093
  %114 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5094
  %dev112 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %114, i32 0, i32 2, !dbg !5095
  %parent113 = getelementptr inbounds %struct.device, %struct.device* %dev112, i32 0, i32 1, !dbg !5096
  %115 = load %struct.device*, %struct.device** %parent113, align 8, !dbg !5096
  %116 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5097
  %nb_max114 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %116, i32 0, i32 22, !dbg !5098
  %call115 = call i32 @dev_pm_qos_add_notifier(%struct.device* %115, %struct.notifier_block* %nb_max114, i32 4) #9, !dbg !5099
  store i32 %call115, i32* %err, align 4, !dbg !5100
  %117 = load i32, i32* %err, align 4, !dbg !5101
  %tobool116 = icmp ne i32 %117, 0, !dbg !5101
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !5103

if.then117:                                       ; preds = %if.end110
  br label %err_devfreq, !dbg !5104

if.end118:                                        ; preds = %if.end110
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !5105
  %118 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5106
  %governor_name119 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %118, i32 0, i32 5, !dbg !5107
  %arraydecay120 = getelementptr inbounds [16 x i8], [16 x i8]* %governor_name119, i64 0, i64 0, !dbg !5106
  %call121 = call %struct.devfreq_governor* @try_then_request_governor(i8* %arraydecay120) #9, !dbg !5108
  store %struct.devfreq_governor* %call121, %struct.devfreq_governor** %governor, align 8, !dbg !5109
  %119 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !5110
  %120 = bitcast %struct.devfreq_governor* %119 to i8*, !dbg !5110
  %call122 = call zeroext i1 @IS_ERR(i8* %120) #9, !dbg !5112
  br i1 %call122, label %if.then123, label %if.end126, !dbg !5113

if.then123:                                       ; preds = %if.end118
  %121 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5114
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %121, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.devfreq_add_device, i64 0, i64 0)) #10, !dbg !5114
  %122 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !5116
  %123 = bitcast %struct.devfreq_governor* %122 to i8*, !dbg !5116
  %call124 = call i64 @PTR_ERR(i8* %123) #9, !dbg !5117
  %conv125 = trunc i64 %call124 to i32, !dbg !5117
  store i32 %conv125, i32* %err, align 4, !dbg !5118
  br label %err_init, !dbg !5119

if.end126:                                        ; preds = %if.end118
  %124 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !5120
  %125 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5121
  %governor127 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %125, i32 0, i32 4, !dbg !5122
  store %struct.devfreq_governor* %124, %struct.devfreq_governor** %governor127, align 8, !dbg !5123
  %126 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5124
  %governor128 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %126, i32 0, i32 4, !dbg !5125
  %127 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor128, align 8, !dbg !5125
  %event_handler = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %127, i32 0, i32 5, !dbg !5126
  %128 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler, align 8, !dbg !5126
  %129 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5127
  %call129 = call i32 %128(%struct.devfreq* %129, i32 1, i8* null) #9, !dbg !5124
  store i32 %call129, i32* %err, align 4, !dbg !5128
  %130 = load i32, i32* %err, align 4, !dbg !5129
  %tobool130 = icmp ne i32 %130, 0, !dbg !5129
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !5131

if.then131:                                       ; preds = %if.end126
  %131 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5132
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %131, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.devfreq_add_device, i64 0, i64 0)) #10, !dbg !5132
  br label %err_init, !dbg !5134

if.end132:                                        ; preds = %if.end126
  %132 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5135
  %node133 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %132, i32 0, i32 0, !dbg !5136
  call void @list_add(%struct.list_head* %node133, %struct.list_head* @devfreq_list) #9, !dbg !5137
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !5138
  %133 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5139
  store %struct.devfreq* %133, %struct.devfreq** %retval, align 8, !dbg !5140
  br label %return, !dbg !5140

err_init:                                         ; preds = %if.then131, %if.then123
  call void @llvm.dbg.label(metadata !5141), !dbg !5142
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !5143
  br label %err_devfreq, !dbg !5143

err_devfreq:                                      ; preds = %err_init, %if.then117, %if.then109, %if.then101, %if.then96, %if.then86, %if.then74
  call void @llvm.dbg.label(metadata !5144), !dbg !5145
  %134 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5146
  %call134 = call i32 @devfreq_remove_device(%struct.devfreq* %134) #9, !dbg !5147
  store %struct.devfreq* null, %struct.devfreq** %devfreq, align 8, !dbg !5148
  br label %err_dev, !dbg !5149

err_dev:                                          ; preds = %err_devfreq, %if.then49, %if.then43, %if.then36
  call void @llvm.dbg.label(metadata !5150), !dbg !5151
  %135 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5152
  %136 = bitcast %struct.devfreq* %135 to i8*, !dbg !5152
  call void @kfree(i8* %136) #9, !dbg !5153
  br label %err_out, !dbg !5153

err_out:                                          ; preds = %err_dev, %if.then59, %if.then26, %if.then10, %if.then6
  call void @llvm.dbg.label(metadata !5154), !dbg !5155
  %137 = load i32, i32* %err, align 4, !dbg !5156
  %conv135 = sext i32 %137 to i64, !dbg !5156
  %call136 = call i8* @ERR_PTR(i64 %conv135) #9, !dbg !5157
  %138 = bitcast i8* %call136 to %struct.devfreq*, !dbg !5157
  store %struct.devfreq* %138, %struct.devfreq** %retval, align 8, !dbg !5158
  br label %return, !dbg !5158

return:                                           ; preds = %err_out, %if.end132, %if.then
  %139 = load %struct.devfreq*, %struct.devfreq** %retval, align 8, !dbg !5159
  ret %struct.devfreq* %139, !dbg !5159
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !5160 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !5164, metadata !DIExpression()), !dbg !5165
  %0 = load i64, i64* %error.addr, align 8, !dbg !5166
  %1 = inttoptr i64 %0 to i8*, !dbg !5167
  ret i8* %1, !dbg !5168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.devfreq* @find_device_devfreq(%struct.device* %dev) #0 !dbg !5169 {
entry:
  %retval = alloca %struct.devfreq*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %tmp_devfreq = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp13 = alloca %struct.devfreq*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5172, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.declare(metadata %struct.devfreq** %tmp_devfreq, metadata !5174, metadata !DIExpression()), !dbg !5175
  br label %do.body, !dbg !5176

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5177

do.end:                                           ; preds = %do.body
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5179
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5179
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #9, !dbg !5181
  br i1 %call, label %if.then, label %if.end, !dbg !5182

if.then:                                          ; preds = %do.end
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.find_device_devfreq, i64 0, i64 0)) #10, !dbg !5183
  %call2 = call i8* @ERR_PTR(i64 -22) #9, !dbg !5185
  %2 = bitcast i8* %call2 to %struct.devfreq*, !dbg !5185
  store %struct.devfreq* %2, %struct.devfreq** %retval, align 8, !dbg !5186
  br label %return, !dbg !5186

if.end:                                           ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5187, metadata !DIExpression()), !dbg !5190
  %3 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @devfreq_list, i32 0, i32 0), align 8, !dbg !5190
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !5190
  store i8* %4, i8** %__mptr, align 8, !dbg !5190
  br label %do.body3, !dbg !5190

do.body3:                                         ; preds = %if.end
  br label %do.end4, !dbg !5191

do.end4:                                          ; preds = %do.body3
  %5 = load i8*, i8** %__mptr, align 8, !dbg !5190
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !5190
  %6 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !5190
  store %struct.devfreq* %6, %struct.devfreq** %tmp, align 8, !dbg !5191
  %7 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !5190
  store %struct.devfreq* %7, %struct.devfreq** %tmp_devfreq, align 8, !dbg !5193
  br label %for.cond, !dbg !5193

for.cond:                                         ; preds = %do.end12, %do.end4
  %8 = load %struct.devfreq*, %struct.devfreq** %tmp_devfreq, align 8, !dbg !5194
  %node = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 0, !dbg !5194
  %cmp = icmp eq %struct.list_head* %node, @devfreq_list, !dbg !5194
  %lnot = xor i1 %cmp, true, !dbg !5194
  br i1 %lnot, label %for.body, label %for.end, !dbg !5193

for.body:                                         ; preds = %for.cond
  %9 = load %struct.devfreq*, %struct.devfreq** %tmp_devfreq, align 8, !dbg !5196
  %dev5 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %9, i32 0, i32 2, !dbg !5199
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 1, !dbg !5200
  %10 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5200
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5201
  %cmp6 = icmp eq %struct.device* %10, %11, !dbg !5202
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !5203

if.then7:                                         ; preds = %for.body
  %12 = load %struct.devfreq*, %struct.devfreq** %tmp_devfreq, align 8, !dbg !5204
  store %struct.devfreq* %12, %struct.devfreq** %retval, align 8, !dbg !5205
  br label %return, !dbg !5205

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !5206

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !5207, metadata !DIExpression()), !dbg !5209
  %13 = load %struct.devfreq*, %struct.devfreq** %tmp_devfreq, align 8, !dbg !5209
  %node10 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %13, i32 0, i32 0, !dbg !5209
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node10, i32 0, i32 0, !dbg !5209
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5209
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !5209
  store i8* %15, i8** %__mptr9, align 8, !dbg !5209
  br label %do.body11, !dbg !5209

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !5210

do.end12:                                         ; preds = %do.body11
  %16 = load i8*, i8** %__mptr9, align 8, !dbg !5209
  %add.ptr14 = getelementptr i8, i8* %16, i64 0, !dbg !5209
  %17 = bitcast i8* %add.ptr14 to %struct.devfreq*, !dbg !5209
  store %struct.devfreq* %17, %struct.devfreq** %tmp13, align 8, !dbg !5210
  %18 = load %struct.devfreq*, %struct.devfreq** %tmp13, align 8, !dbg !5209
  store %struct.devfreq* %18, %struct.devfreq** %tmp_devfreq, align 8, !dbg !5194
  br label %for.cond, !dbg !5194, !llvm.loop !5212

for.end:                                          ; preds = %for.cond
  %call15 = call i8* @ERR_PTR(i64 -19) #9, !dbg !5214
  %19 = bitcast i8* %call15 to %struct.devfreq*, !dbg !5214
  store %struct.devfreq* %19, %struct.devfreq** %retval, align 8, !dbg !5215
  br label %return, !dbg !5215

return:                                           ; preds = %for.end, %if.then7, %if.then
  %20 = load %struct.devfreq*, %struct.devfreq** %retval, align 8, !dbg !5216
  ret %struct.devfreq* %20, !dbg !5216
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !5217 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5220, metadata !DIExpression()), !dbg !5221
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5222
  %1 = ptrtoint i8* %0 to i64, !dbg !5222
  %2 = inttoptr i64 %1 to i8*, !dbg !5222
  %3 = ptrtoint i8* %2 to i64, !dbg !5222
  %cmp = icmp uge i64 %3, -4095, !dbg !5222
  %lnot = xor i1 %cmp, true, !dbg !5222
  %lnot1 = xor i1 %lnot, true, !dbg !5222
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5222
  %conv = sext i32 %lnot.ext to i64, !dbg !5222
  %tobool = icmp ne i64 %conv, 0, !dbg !5222
  ret i1 %tobool, !dbg !5223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !5224 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5227, metadata !DIExpression()), !dbg !5231
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5237, metadata !DIExpression()), !dbg !5238
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5239, metadata !DIExpression()), !dbg !5240
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5241, metadata !DIExpression()), !dbg !5242
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5243, metadata !DIExpression()), !dbg !5247
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5249, metadata !DIExpression()), !dbg !5253
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5255, metadata !DIExpression()), !dbg !5259
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5264, metadata !DIExpression()), !dbg !5265
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5266, metadata !DIExpression()), !dbg !5267
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5268, metadata !DIExpression()), !dbg !5269
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5270, metadata !DIExpression()), !dbg !5271
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5272, metadata !DIExpression()), !dbg !5273
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5274, metadata !DIExpression()), !dbg !5275
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5276, metadata !DIExpression()), !dbg !5277
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5278, metadata !DIExpression()), !dbg !5279
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5280, metadata !DIExpression()), !dbg !5281
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5282, metadata !DIExpression()), !dbg !5283
  %0 = load i64, i64* %size.addr, align 8, !dbg !5284
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5285
  %or = or i32 %1, 256, !dbg !5286
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5287
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #11, !dbg !5288
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5289

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5290
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5291
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5292

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5293
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5294
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5295
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !5296
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5273
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5297
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5298
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5299
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5300
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5301
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5302
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !5303
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5303
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5303
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5303
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !5303
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5304
  br label %kmalloc.exit, !dbg !5304

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5305
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5306
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5306
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5308

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5309
  br label %kmalloc_index.exit.i, !dbg !5309

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5310
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5312
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5313

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5314
  br label %kmalloc_index.exit.i, !dbg !5314

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5315
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5317
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5318

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5319
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5320
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5321

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5322
  br label %kmalloc_index.exit.i, !dbg !5322

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5323
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5325
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5326

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5327
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5328
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5329

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5330
  br label %kmalloc_index.exit.i, !dbg !5330

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5331
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5333
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5334

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5335
  br label %kmalloc_index.exit.i, !dbg !5335

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5336
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5338
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5339

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5340
  br label %kmalloc_index.exit.i, !dbg !5340

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5341
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5343
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5344

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5345
  br label %kmalloc_index.exit.i, !dbg !5345

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5346
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5348
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5349

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5350
  br label %kmalloc_index.exit.i, !dbg !5350

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5351
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5353
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5354

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5355
  br label %kmalloc_index.exit.i, !dbg !5355

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5356
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5358
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5359

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5360
  br label %kmalloc_index.exit.i, !dbg !5360

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5361
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5363
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5364

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5365
  br label %kmalloc_index.exit.i, !dbg !5365

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5366
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5368
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5369

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5370
  br label %kmalloc_index.exit.i, !dbg !5370

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5371
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5373
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5374

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5375
  br label %kmalloc_index.exit.i, !dbg !5375

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5376
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5378
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5379

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5380
  br label %kmalloc_index.exit.i, !dbg !5380

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5381
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5383
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5384

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5385
  br label %kmalloc_index.exit.i, !dbg !5385

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5386
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5388
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5389

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5390
  br label %kmalloc_index.exit.i, !dbg !5390

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5391
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5393
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5394

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5395
  br label %kmalloc_index.exit.i, !dbg !5395

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5396
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5398
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5399

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5400
  br label %kmalloc_index.exit.i, !dbg !5400

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5401
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5403
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5404

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5405
  br label %kmalloc_index.exit.i, !dbg !5405

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5406
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5408
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5409

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5410
  br label %kmalloc_index.exit.i, !dbg !5410

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5411
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5413
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5414

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5415
  br label %kmalloc_index.exit.i, !dbg !5415

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5416
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5418
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5419

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5420
  br label %kmalloc_index.exit.i, !dbg !5420

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5421
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5423
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5424

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5425
  br label %kmalloc_index.exit.i, !dbg !5425

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5426
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5428
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5429

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5430
  br label %kmalloc_index.exit.i, !dbg !5430

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5431
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5433
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5434

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5435
  br label %kmalloc_index.exit.i, !dbg !5435

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5436
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5438
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5439

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5440
  br label %kmalloc_index.exit.i, !dbg !5440

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5441
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5443
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5444

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5445
  br label %kmalloc_index.exit.i, !dbg !5445

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5446
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5448
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5449

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5450
  br label %kmalloc_index.exit.i, !dbg !5450

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !5451, !srcloc !5454
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 192) #11, !dbg !5455, !srcloc !5458
  unreachable, !dbg !5459

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5460
  store i32 %45, i32* %index.i, align 4, !dbg !5461
  %46 = load i32, i32* %index.i, align 4, !dbg !5462
  %tobool.i = icmp ne i32 %46, 0, !dbg !5462
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5464

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5465
  br label %kmalloc.exit, !dbg !5465

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5466
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5467
  %and.i.i = and i32 %48, 17, !dbg !5467
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5467
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5467
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5467
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5467
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5469

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5470
  br label %kmalloc_type.exit.i, !dbg !5470

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5471
  %and2.i.i = and i32 %49, 1, !dbg !5472
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5471
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5471
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5471
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5473
  br label %kmalloc_type.exit.i, !dbg !5473

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5474
  %idxprom.i = zext i32 %51 to i64, !dbg !5475
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5475
  %52 = load i32, i32* %index.i, align 4, !dbg !5476
  %idxprom6.i = zext i32 %52 to i64, !dbg !5475
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5475
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5475
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5477
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5478
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5479
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5480
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !5481
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5481
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5481
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5481
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !5481
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5242
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5482
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5483
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5484
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5485
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !5486
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5487
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5488
  store i8* %62, i8** %retval.i, align 8, !dbg !5489
  br label %kmalloc.exit, !dbg !5489

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5490
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5491
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !5492
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5492
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5492
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5492
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !5492
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5493
  br label %kmalloc.exit, !dbg !5493

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5494
  ret i8* %65, !dbg !5495
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devfreq_dev_release(%struct.device* %dev) #0 !dbg !5496 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %devfreq = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %err = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5497, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !5499, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5501, metadata !DIExpression()), !dbg !5503
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5503
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5503
  store i8* %1, i8** %__mptr, align 8, !dbg !5503
  br label %do.body, !dbg !5503

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5504

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5503
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !5503
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !5503
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !5504
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !5503
  store %struct.devfreq* %4, %struct.devfreq** %devfreq, align 8, !dbg !5500
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5506, metadata !DIExpression()), !dbg !5507
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !5508
  %5 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5509
  %node = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 0, !dbg !5510
  call void @list_del(%struct.list_head* %node) #9, !dbg !5511
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !5512
  %6 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5513
  %dev1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %6, i32 0, i32 2, !dbg !5514
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !5515
  %7 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5515
  %8 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5516
  %nb_max = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 22, !dbg !5517
  %call = call i32 @dev_pm_qos_remove_notifier(%struct.device* %7, %struct.notifier_block* %nb_max, i32 4) #9, !dbg !5518
  store i32 %call, i32* %err, align 4, !dbg !5519
  %9 = load i32, i32* %err, align 4, !dbg !5520
  %tobool = icmp ne i32 %9, 0, !dbg !5520
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5522

land.lhs.true:                                    ; preds = %do.end
  %10 = load i32, i32* %err, align 4, !dbg !5523
  %cmp = icmp ne i32 %10, -2, !dbg !5524
  br i1 %cmp, label %if.then, label %if.end, !dbg !5525

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5526
  %parent2 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 1, !dbg !5526
  %12 = load %struct.device*, %struct.device** %parent2, align 8, !dbg !5526
  %13 = load i32, i32* %err, align 4, !dbg !5526
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %12, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.21, i64 0, i64 0), i32 %13) #10, !dbg !5526
  br label %if.end, !dbg !5526

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end
  %14 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5527
  %dev3 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %14, i32 0, i32 2, !dbg !5528
  %parent4 = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 1, !dbg !5529
  %15 = load %struct.device*, %struct.device** %parent4, align 8, !dbg !5529
  %16 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5530
  %nb_min = getelementptr inbounds %struct.devfreq, %struct.devfreq* %16, i32 0, i32 21, !dbg !5531
  %call5 = call i32 @dev_pm_qos_remove_notifier(%struct.device* %15, %struct.notifier_block* %nb_min, i32 3) #9, !dbg !5532
  store i32 %call5, i32* %err, align 4, !dbg !5533
  %17 = load i32, i32* %err, align 4, !dbg !5534
  %tobool6 = icmp ne i32 %17, 0, !dbg !5534
  br i1 %tobool6, label %land.lhs.true7, label %if.end11, !dbg !5536

land.lhs.true7:                                   ; preds = %if.end
  %18 = load i32, i32* %err, align 4, !dbg !5537
  %cmp8 = icmp ne i32 %18, -2, !dbg !5538
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !5539

if.then9:                                         ; preds = %land.lhs.true7
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5540
  %parent10 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 1, !dbg !5540
  %20 = load %struct.device*, %struct.device** %parent10, align 8, !dbg !5540
  %21 = load i32, i32* %err, align 4, !dbg !5540
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %20, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22, i64 0, i64 0), i32 %21) #10, !dbg !5540
  br label %if.end11, !dbg !5540

if.end11:                                         ; preds = %if.then9, %land.lhs.true7, %if.end
  %22 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5541
  %user_max_freq_req = getelementptr inbounds %struct.devfreq, %struct.devfreq* %22, i32 0, i32 12, !dbg !5543
  %call12 = call i32 @dev_pm_qos_request_active(%struct.dev_pm_qos_request* %user_max_freq_req) #9, !dbg !5544
  %tobool13 = icmp ne i32 %call12, 0, !dbg !5544
  br i1 %tobool13, label %if.then14, label %if.end21, !dbg !5545

if.then14:                                        ; preds = %if.end11
  %23 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5546
  %user_max_freq_req15 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %23, i32 0, i32 12, !dbg !5548
  %call16 = call i32 @dev_pm_qos_remove_request(%struct.dev_pm_qos_request* %user_max_freq_req15) #9, !dbg !5549
  store i32 %call16, i32* %err, align 4, !dbg !5550
  %24 = load i32, i32* %err, align 4, !dbg !5551
  %cmp17 = icmp slt i32 %24, 0, !dbg !5553
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !5554

if.then18:                                        ; preds = %if.then14
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5555
  %parent19 = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 1, !dbg !5555
  %26 = load %struct.device*, %struct.device** %parent19, align 8, !dbg !5555
  %27 = load i32, i32* %err, align 4, !dbg !5555
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %26, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0), i32 %27) #10, !dbg !5555
  br label %if.end20, !dbg !5555

if.end20:                                         ; preds = %if.then18, %if.then14
  br label %if.end21, !dbg !5556

if.end21:                                         ; preds = %if.end20, %if.end11
  %28 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5557
  %user_min_freq_req = getelementptr inbounds %struct.devfreq, %struct.devfreq* %28, i32 0, i32 11, !dbg !5559
  %call22 = call i32 @dev_pm_qos_request_active(%struct.dev_pm_qos_request* %user_min_freq_req) #9, !dbg !5560
  %tobool23 = icmp ne i32 %call22, 0, !dbg !5560
  br i1 %tobool23, label %if.then24, label %if.end31, !dbg !5561

if.then24:                                        ; preds = %if.end21
  %29 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5562
  %user_min_freq_req25 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %29, i32 0, i32 11, !dbg !5564
  %call26 = call i32 @dev_pm_qos_remove_request(%struct.dev_pm_qos_request* %user_min_freq_req25) #9, !dbg !5565
  store i32 %call26, i32* %err, align 4, !dbg !5566
  %30 = load i32, i32* %err, align 4, !dbg !5567
  %cmp27 = icmp slt i32 %30, 0, !dbg !5569
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !5570

if.then28:                                        ; preds = %if.then24
  %31 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5571
  %parent29 = getelementptr inbounds %struct.device, %struct.device* %31, i32 0, i32 1, !dbg !5571
  %32 = load %struct.device*, %struct.device** %parent29, align 8, !dbg !5571
  %33 = load i32, i32* %err, align 4, !dbg !5571
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %32, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.24, i64 0, i64 0), i32 %33) #10, !dbg !5571
  br label %if.end30, !dbg !5571

if.end30:                                         ; preds = %if.then28, %if.then24
  br label %if.end31, !dbg !5572

if.end31:                                         ; preds = %if.end30, %if.end21
  %34 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5573
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %34, i32 0, i32 3, !dbg !5575
  %35 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !5575
  %exit = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %35, i32 0, i32 6, !dbg !5576
  %36 = load void (%struct.device*)*, void (%struct.device*)** %exit, align 8, !dbg !5576
  %tobool32 = icmp ne void (%struct.device*)* %36, null, !dbg !5573
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !5577

if.then33:                                        ; preds = %if.end31
  %37 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5578
  %profile34 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %37, i32 0, i32 3, !dbg !5579
  %38 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile34, align 8, !dbg !5579
  %exit35 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %38, i32 0, i32 6, !dbg !5580
  %39 = load void (%struct.device*)*, void (%struct.device*)** %exit35, align 8, !dbg !5580
  %40 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5581
  %dev36 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %40, i32 0, i32 2, !dbg !5582
  %parent37 = getelementptr inbounds %struct.device, %struct.device* %dev36, i32 0, i32 1, !dbg !5583
  %41 = load %struct.device*, %struct.device** %parent37, align 8, !dbg !5583
  call void %39(%struct.device* %41) #9, !dbg !5578
  br label %if.end38, !dbg !5578

if.end38:                                         ; preds = %if.then33, %if.end31
  %42 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5584
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %42, i32 0, i32 1, !dbg !5585
  call void @mutex_destroy(%struct.mutex* %lock) #9, !dbg !5586
  %43 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5587
  %44 = bitcast %struct.devfreq* %43 to i8*, !dbg !5587
  call void @kfree(i8* %44) #9, !dbg !5588
  ret void, !dbg !5589
}

; Function Attrs: noredzone
declare dso_local i64 @strscpy(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devfreq_notifier_call(%struct.notifier_block* %nb, i64 %type, i8* %devp) #0 !dbg !5590 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  %type.addr = alloca i64, align 8
  %devp.addr = alloca i8*, align 8
  %devfreq = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %err = alloca i32, align 4
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !5591, metadata !DIExpression()), !dbg !5592
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !5593, metadata !DIExpression()), !dbg !5594
  store i8* %devp, i8** %devp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devp.addr, metadata !5595, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !5597, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5599, metadata !DIExpression()), !dbg !5601
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5601
  %1 = bitcast %struct.notifier_block* %0 to i8*, !dbg !5601
  store i8* %1, i8** %__mptr, align 8, !dbg !5601
  br label %do.body, !dbg !5601

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5602

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5601
  %add.ptr = getelementptr i8, i8* %2, i64 -768, !dbg !5601
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !5601
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !5602
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !5601
  store %struct.devfreq* %4, %struct.devfreq** %devfreq, align 8, !dbg !5598
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5604, metadata !DIExpression()), !dbg !5605
  store i32 -22, i32* %err, align 4, !dbg !5605
  %5 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5606
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 1, !dbg !5607
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !5608
  %6 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5609
  %call = call i64 @find_available_min_freq(%struct.devfreq* %6) #9, !dbg !5610
  %7 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5611
  %scaling_min_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 13, !dbg !5612
  store i64 %call, i64* %scaling_min_freq, align 8, !dbg !5613
  %8 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5614
  %scaling_min_freq1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 13, !dbg !5616
  %9 = load i64, i64* %scaling_min_freq1, align 8, !dbg !5616
  %tobool = icmp ne i64 %9, 0, !dbg !5614
  br i1 %tobool, label %if.end, label %if.then, !dbg !5617

if.then:                                          ; preds = %do.end
  br label %out, !dbg !5618

if.end:                                           ; preds = %do.end
  %10 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5619
  %call2 = call i64 @find_available_max_freq(%struct.devfreq* %10) #9, !dbg !5620
  %11 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5621
  %scaling_max_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %11, i32 0, i32 14, !dbg !5622
  store i64 %call2, i64* %scaling_max_freq, align 8, !dbg !5623
  %12 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5624
  %scaling_max_freq3 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %12, i32 0, i32 14, !dbg !5626
  %13 = load i64, i64* %scaling_max_freq3, align 8, !dbg !5626
  %tobool4 = icmp ne i64 %13, 0, !dbg !5624
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !5627

if.then5:                                         ; preds = %if.end
  %14 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5628
  %scaling_max_freq6 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %14, i32 0, i32 14, !dbg !5630
  store i64 -1, i64* %scaling_max_freq6, align 8, !dbg !5631
  br label %out, !dbg !5632

if.end7:                                          ; preds = %if.end
  %15 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5633
  %call8 = call i32 @update_devfreq(%struct.devfreq* %15) #9, !dbg !5634
  store i32 %call8, i32* %err, align 4, !dbg !5635
  br label %out, !dbg !5636

out:                                              ; preds = %if.end7, %if.then5, %if.then
  call void @llvm.dbg.label(metadata !5637), !dbg !5638
  %16 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5639
  %lock9 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %16, i32 0, i32 1, !dbg !5640
  call void @mutex_unlock(%struct.mutex* %lock9) #9, !dbg !5641
  %17 = load i32, i32* %err, align 4, !dbg !5642
  %tobool10 = icmp ne i32 %17, 0, !dbg !5642
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5644

if.then11:                                        ; preds = %out
  %18 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !5645
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %18, i32 0, i32 2, !dbg !5645
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !5645
  %19 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5645
  %20 = load i32, i32* %err, align 4, !dbg !5645
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %19, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.25, i64 0, i64 0), i32 %20) #10, !dbg !5645
  br label %if.end12, !dbg !5645

if.end12:                                         ; preds = %if.then11, %out
  ret i32 1, !dbg !5646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_freq_table(%struct.devfreq* %devfreq) #0 !dbg !5647 {
entry:
  %retval = alloca i32, align 4
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %profile = alloca %struct.devfreq_dev_profile*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %freq = alloca i64, align 8
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !5648, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.declare(metadata %struct.devfreq_dev_profile** %profile, metadata !5650, metadata !DIExpression()), !dbg !5651
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5652
  %profile1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 3, !dbg !5653
  %1 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile1, align 8, !dbg !5653
  store %struct.devfreq_dev_profile* %1, %struct.devfreq_dev_profile** %profile, align 8, !dbg !5651
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !5654, metadata !DIExpression()), !dbg !5658
  call void @llvm.dbg.declare(metadata i64* %freq, metadata !5659, metadata !DIExpression()), !dbg !5660
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5661, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5663, metadata !DIExpression()), !dbg !5664
  %2 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5665
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %2, i32 0, i32 2, !dbg !5666
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !5667
  %3 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5667
  %call = call i32 @dev_pm_opp_get_opp_count(%struct.device* %3) #9, !dbg !5668
  store i32 %call, i32* %count, align 4, !dbg !5669
  %4 = load i32, i32* %count, align 4, !dbg !5670
  %cmp = icmp sle i32 %4, 0, !dbg !5672
  br i1 %cmp, label %if.then, label %if.end, !dbg !5673

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5674
  br label %return, !dbg !5674

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %count, align 4, !dbg !5675
  %6 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !5676
  %max_state = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %6, i32 0, i32 8, !dbg !5677
  store i32 %5, i32* %max_state, align 8, !dbg !5678
  %7 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5679
  %dev2 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 2, !dbg !5680
  %parent3 = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 1, !dbg !5681
  %8 = load %struct.device*, %struct.device** %parent3, align 8, !dbg !5681
  %9 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !5682
  %max_state4 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %9, i32 0, i32 8, !dbg !5683
  %10 = load i32, i32* %max_state4, align 8, !dbg !5683
  %conv = zext i32 %10 to i64, !dbg !5682
  %call5 = call i8* @devm_kcalloc(%struct.device* %8, i64 %conv, i64 8, i32 3264) #9, !dbg !5684
  %11 = bitcast i8* %call5 to i64*, !dbg !5684
  %12 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !5685
  %freq_table = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %12, i32 0, i32 7, !dbg !5686
  store i64* %11, i64** %freq_table, align 8, !dbg !5687
  %13 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !5688
  %freq_table6 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %13, i32 0, i32 7, !dbg !5690
  %14 = load i64*, i64** %freq_table6, align 8, !dbg !5690
  %tobool = icmp ne i64* %14, null, !dbg !5688
  br i1 %tobool, label %if.end9, label %if.then7, !dbg !5691

if.then7:                                         ; preds = %if.end
  %15 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !5692
  %max_state8 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %15, i32 0, i32 8, !dbg !5694
  store i32 0, i32* %max_state8, align 8, !dbg !5695
  store i32 -12, i32* %retval, align 4, !dbg !5696
  br label %return, !dbg !5696

if.end9:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !5697
  store i64 0, i64* %freq, align 8, !dbg !5699
  br label %for.cond, !dbg !5700

for.cond:                                         ; preds = %for.inc, %if.end9
  %16 = load i32, i32* %i, align 4, !dbg !5701
  %17 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !5703
  %max_state10 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %17, i32 0, i32 8, !dbg !5704
  %18 = load i32, i32* %max_state10, align 8, !dbg !5704
  %cmp11 = icmp ult i32 %16, %18, !dbg !5705
  br i1 %cmp11, label %for.body, label %for.end, !dbg !5706

for.body:                                         ; preds = %for.cond
  %19 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5707
  %dev13 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %19, i32 0, i32 2, !dbg !5709
  %parent14 = getelementptr inbounds %struct.device, %struct.device* %dev13, i32 0, i32 1, !dbg !5710
  %20 = load %struct.device*, %struct.device** %parent14, align 8, !dbg !5710
  %call15 = call %struct.dev_pm_opp* @dev_pm_opp_find_freq_ceil(%struct.device* %20, i64* %freq) #9, !dbg !5711
  store %struct.dev_pm_opp* %call15, %struct.dev_pm_opp** %opp, align 8, !dbg !5712
  %21 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5713
  %22 = bitcast %struct.dev_pm_opp* %21 to i8*, !dbg !5713
  %call16 = call zeroext i1 @IS_ERR(i8* %22) #9, !dbg !5715
  br i1 %call16, label %if.then17, label %if.end24, !dbg !5716

if.then17:                                        ; preds = %for.body
  %23 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5717
  %dev18 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %23, i32 0, i32 2, !dbg !5719
  %parent19 = getelementptr inbounds %struct.device, %struct.device* %dev18, i32 0, i32 1, !dbg !5720
  %24 = load %struct.device*, %struct.device** %parent19, align 8, !dbg !5720
  %25 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !5721
  %freq_table20 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %25, i32 0, i32 7, !dbg !5722
  %26 = load i64*, i64** %freq_table20, align 8, !dbg !5722
  %27 = bitcast i64* %26 to i8*, !dbg !5721
  call void @devm_kfree(%struct.device* %24, i8* %27) #9, !dbg !5723
  %28 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !5724
  %max_state21 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %28, i32 0, i32 8, !dbg !5725
  store i32 0, i32* %max_state21, align 8, !dbg !5726
  %29 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5727
  %30 = bitcast %struct.dev_pm_opp* %29 to i8*, !dbg !5727
  %call22 = call i64 @PTR_ERR(i8* %30) #9, !dbg !5728
  %conv23 = trunc i64 %call22 to i32, !dbg !5728
  store i32 %conv23, i32* %retval, align 4, !dbg !5729
  br label %return, !dbg !5729

if.end24:                                         ; preds = %for.body
  %31 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5730
  call void @dev_pm_opp_put(%struct.dev_pm_opp* %31) #9, !dbg !5731
  %32 = load i64, i64* %freq, align 8, !dbg !5732
  %33 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !5733
  %freq_table25 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %33, i32 0, i32 7, !dbg !5734
  %34 = load i64*, i64** %freq_table25, align 8, !dbg !5734
  %35 = load i32, i32* %i, align 4, !dbg !5735
  %idxprom = sext i32 %35 to i64, !dbg !5733
  %arrayidx = getelementptr i64, i64* %34, i64 %idxprom, !dbg !5733
  store i64 %32, i64* %arrayidx, align 8, !dbg !5736
  br label %for.inc, !dbg !5737

for.inc:                                          ; preds = %if.end24
  %36 = load i32, i32* %i, align 4, !dbg !5738
  %inc = add i32 %36, 1, !dbg !5738
  store i32 %inc, i32* %i, align 4, !dbg !5738
  %37 = load i64, i64* %freq, align 8, !dbg !5739
  %inc26 = add i64 %37, 1, !dbg !5739
  store i64 %inc26, i64* %freq, align 8, !dbg !5739
  br label %for.cond, !dbg !5740, !llvm.loop !5741

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5743
  br label %return, !dbg !5743

return:                                           ; preds = %for.end, %if.then17, %if.then7, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !5744
  ret i32 %38, !dbg !5744
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @find_available_min_freq(%struct.devfreq* %devfreq) #0 !dbg !5745 {
entry:
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %min_freq = alloca i64, align 8
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !5748, metadata !DIExpression()), !dbg !5749
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !5750, metadata !DIExpression()), !dbg !5751
  call void @llvm.dbg.declare(metadata i64* %min_freq, metadata !5752, metadata !DIExpression()), !dbg !5753
  store i64 0, i64* %min_freq, align 8, !dbg !5753
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5754
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 2, !dbg !5755
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !5756
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5756
  %call = call %struct.dev_pm_opp* @dev_pm_opp_find_freq_ceil(%struct.device* %1, i64* %min_freq) #9, !dbg !5757
  store %struct.dev_pm_opp* %call, %struct.dev_pm_opp** %opp, align 8, !dbg !5758
  %2 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5759
  %3 = bitcast %struct.dev_pm_opp* %2 to i8*, !dbg !5759
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #9, !dbg !5761
  br i1 %call1, label %if.then, label %if.else, !dbg !5762

if.then:                                          ; preds = %entry
  store i64 0, i64* %min_freq, align 8, !dbg !5763
  br label %if.end, !dbg !5764

if.else:                                          ; preds = %entry
  %4 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5765
  call void @dev_pm_opp_put(%struct.dev_pm_opp* %4) #9, !dbg !5766
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i64, i64* %min_freq, align 8, !dbg !5767
  ret i64 %5, !dbg !5768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @find_available_max_freq(%struct.devfreq* %devfreq) #0 !dbg !5769 {
entry:
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %max_freq = alloca i64, align 8
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !5770, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !5772, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.declare(metadata i64* %max_freq, metadata !5774, metadata !DIExpression()), !dbg !5775
  store i64 -1, i64* %max_freq, align 8, !dbg !5775
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5776
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 2, !dbg !5777
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !5778
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5778
  %call = call %struct.dev_pm_opp* @dev_pm_opp_find_freq_floor(%struct.device* %1, i64* %max_freq) #9, !dbg !5779
  store %struct.dev_pm_opp* %call, %struct.dev_pm_opp** %opp, align 8, !dbg !5780
  %2 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5781
  %3 = bitcast %struct.dev_pm_opp* %2 to i8*, !dbg !5781
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #9, !dbg !5783
  br i1 %call1, label %if.then, label %if.else, !dbg !5784

if.then:                                          ; preds = %entry
  store i64 0, i64* %max_freq, align 8, !dbg !5785
  br label %if.end, !dbg !5786

if.else:                                          ; preds = %entry
  %4 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5787
  call void @dev_pm_opp_put(%struct.dev_pm_opp* %4) #9, !dbg !5788
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i64, i64* %max_freq, align 8, !dbg !5789
  ret i64 %5, !dbg !5790
}

; Function Attrs: noredzone
declare dso_local i64 @dev_pm_opp_get_suspend_opp_freq(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !5791 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5794, metadata !DIExpression()), !dbg !5795
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5796
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !5798
  %1 = load i8*, i8** %init_name, align 8, !dbg !5798
  %tobool = icmp ne i8* %1, null, !dbg !5796
  br i1 %tobool, label %if.then, label %if.end, !dbg !5799

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5800
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !5801
  %3 = load i8*, i8** %init_name1, align 8, !dbg !5801
  store i8* %3, i8** %retval, align 8, !dbg !5802
  br label %return, !dbg !5802

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5803
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !5804
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #9, !dbg !5805
  store i8* %call, i8** %retval, align 8, !dbg !5806
  br label %return, !dbg !5806

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !5807
  ret i8* %5, !dbg !5807
}

; Function Attrs: noredzone
declare dso_local i32 @device_register(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kzalloc(%struct.device* %dev, i64 %size, i32 %gfp) #0 !dbg !5808 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5811, metadata !DIExpression()), !dbg !5812
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5813, metadata !DIExpression()), !dbg !5814
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !5815, metadata !DIExpression()), !dbg !5816
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5817
  %1 = load i64, i64* %size.addr, align 8, !dbg !5818
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !5819
  %or = or i32 %2, 256, !dbg !5820
  %call = call noalias i8* @devm_kmalloc(%struct.device* %0, i64 %1, i32 %or) #9, !dbg !5821
  ret i8* %call, !dbg !5822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @array3_size(i64 %a, i64 %b, i64 %c) #0 !dbg !5823 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !5827, metadata !DIExpression()), !dbg !5828
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !5829, metadata !DIExpression()), !dbg !5830
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !5831, metadata !DIExpression()), !dbg !5832
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !5833, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !5835, metadata !DIExpression()), !dbg !5838
  %0 = load i64, i64* %a.addr, align 8, !dbg !5838
  store i64 %0, i64* %__a, align 8, !dbg !5838
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !5839, metadata !DIExpression()), !dbg !5838
  %1 = load i64, i64* %b.addr, align 8, !dbg !5838
  store i64 %1, i64* %__b, align 8, !dbg !5838
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !5840, metadata !DIExpression()), !dbg !5838
  store i64* %bytes, i64** %__d, align 8, !dbg !5838
  %cmp = icmp eq i64* %__a, %__b, !dbg !5838
  %conv = zext i1 %cmp to i32, !dbg !5838
  %2 = load i64*, i64** %__d, align 8, !dbg !5838
  %cmp1 = icmp eq i64* %__a, %2, !dbg !5838
  %conv2 = zext i1 %cmp1 to i32, !dbg !5838
  %3 = load i64, i64* %__a, align 8, !dbg !5838
  %4 = load i64, i64* %__b, align 8, !dbg !5838
  %5 = load i64*, i64** %__d, align 8, !dbg !5838
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !5838
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !5838
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !5838
  store i64 %8, i64* %5, align 8, !dbg !5838
  %frombool = zext i1 %7 to i8, !dbg !5838
  store i8 %frombool, i8* %tmp, align 1, !dbg !5838
  %9 = load i8, i8* %tmp, align 1, !dbg !5838
  %tobool = trunc i8 %9 to i1, !dbg !5838
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #9, !dbg !5842
  br i1 %call, label %if.then, label %if.end, !dbg !5843

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !5844
  br label %return, !dbg !5844

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !5845, metadata !DIExpression()), !dbg !5848
  %10 = load i64, i64* %bytes, align 8, !dbg !5848
  store i64 %10, i64* %__a3, align 8, !dbg !5848
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !5849, metadata !DIExpression()), !dbg !5848
  %11 = load i64, i64* %c.addr, align 8, !dbg !5848
  store i64 %11, i64* %__b4, align 8, !dbg !5848
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !5850, metadata !DIExpression()), !dbg !5848
  store i64* %bytes, i64** %__d5, align 8, !dbg !5848
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !5848
  %conv7 = zext i1 %cmp6 to i32, !dbg !5848
  %12 = load i64*, i64** %__d5, align 8, !dbg !5848
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !5848
  %conv9 = zext i1 %cmp8 to i32, !dbg !5848
  %13 = load i64, i64* %__a3, align 8, !dbg !5848
  %14 = load i64, i64* %__b4, align 8, !dbg !5848
  %15 = load i64*, i64** %__d5, align 8, !dbg !5848
  %16 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 %14), !dbg !5848
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !5848
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !5848
  store i64 %18, i64* %15, align 8, !dbg !5848
  %frombool11 = zext i1 %17 to i8, !dbg !5848
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !5848
  %19 = load i8, i8* %tmp10, align 1, !dbg !5848
  %tobool12 = trunc i8 %19 to i1, !dbg !5848
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #9, !dbg !5851
  br i1 %call13, label %if.then14, label %if.end15, !dbg !5852

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !5853
  br label %return, !dbg !5853

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !5854
  store i64 %20, i64* %retval, align 8, !dbg !5855
  br label %return, !dbg !5855

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !5856
  ret i64 %21, !dbg !5856
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kcalloc(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !5857 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5860, metadata !DIExpression()), !dbg !5861
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5862, metadata !DIExpression()), !dbg !5863
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5864, metadata !DIExpression()), !dbg !5865
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5866, metadata !DIExpression()), !dbg !5867
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5868
  %1 = load i64, i64* %n.addr, align 8, !dbg !5869
  %2 = load i64, i64* %size.addr, align 8, !dbg !5870
  %3 = load i32, i32* %flags.addr, align 4, !dbg !5871
  %or = or i32 %3, 256, !dbg !5872
  %call = call i8* @devm_kmalloc_array(%struct.device* %0, i64 %1, i64 %2, i32 %or) #9, !dbg !5873
  ret i8* %call, !dbg !5874
}

; Function Attrs: noredzone
declare dso_local void @srcu_init_notifier_head(%struct.srcu_notifier_head*) #3

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_qos_add_request(%struct.device*, %struct.dev_pm_qos_request*, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @qos_min_notifier_call(%struct.notifier_block* %nb, i64 %val, i8* %ptr) #0 !dbg !5875 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  %val.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !5876, metadata !DIExpression()), !dbg !5877
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !5878, metadata !DIExpression()), !dbg !5879
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5880, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5882, metadata !DIExpression()), !dbg !5884
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5884
  %1 = bitcast %struct.notifier_block* %0 to i8*, !dbg !5884
  store i8* %1, i8** %__mptr, align 8, !dbg !5884
  br label %do.body, !dbg !5884

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5885

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5884
  %add.ptr = getelementptr i8, i8* %2, i64 -1256, !dbg !5884
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !5884
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !5885
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !5884
  %call = call i32 @qos_notifier_call(%struct.devfreq* %4) #9, !dbg !5887
  ret i32 %call, !dbg !5888
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_qos_add_notifier(%struct.device*, %struct.notifier_block*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @qos_max_notifier_call(%struct.notifier_block* %nb, i64 %val, i8* %ptr) #0 !dbg !5889 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  %val.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !5890, metadata !DIExpression()), !dbg !5891
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !5892, metadata !DIExpression()), !dbg !5893
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5894, metadata !DIExpression()), !dbg !5895
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5896, metadata !DIExpression()), !dbg !5898
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5898
  %1 = bitcast %struct.notifier_block* %0 to i8*, !dbg !5898
  store i8* %1, i8** %__mptr, align 8, !dbg !5898
  br label %do.body, !dbg !5898

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5899

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5898
  %add.ptr = getelementptr i8, i8* %2, i64 -1280, !dbg !5898
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !5898
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !5899
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !5898
  %call = call i32 @qos_notifier_call(%struct.devfreq* %4) #9, !dbg !5901
  ret i32 %call, !dbg !5902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.devfreq_governor* @try_then_request_governor(i8* %name) #0 !dbg !5903 {
entry:
  %retval = alloca %struct.devfreq_governor*, align 8
  %name.addr = alloca i8*, align 8
  %governor = alloca %struct.devfreq_governor*, align 8
  %err = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5906, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.declare(metadata %struct.devfreq_governor** %governor, metadata !5908, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5910, metadata !DIExpression()), !dbg !5911
  store i32 0, i32* %err, align 4, !dbg !5911
  br label %do.body, !dbg !5912

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5913

do.end:                                           ; preds = %do.body
  %0 = load i8*, i8** %name.addr, align 8, !dbg !5915
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %0) #9, !dbg !5917
  br i1 %call, label %if.then, label %if.end, !dbg !5918

if.then:                                          ; preds = %do.end
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.try_then_request_governor, i64 0, i64 0)) #10, !dbg !5919
  %call2 = call i8* @ERR_PTR(i64 -22) #9, !dbg !5921
  %1 = bitcast i8* %call2 to %struct.devfreq_governor*, !dbg !5921
  store %struct.devfreq_governor* %1, %struct.devfreq_governor** %retval, align 8, !dbg !5922
  br label %return, !dbg !5922

if.end:                                           ; preds = %do.end
  %2 = load i8*, i8** %name.addr, align 8, !dbg !5923
  %call3 = call %struct.devfreq_governor* @find_devfreq_governor(i8* %2) #9, !dbg !5924
  store %struct.devfreq_governor* %call3, %struct.devfreq_governor** %governor, align 8, !dbg !5925
  %3 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !5926
  %4 = bitcast %struct.devfreq_governor* %3 to i8*, !dbg !5926
  %call4 = call zeroext i1 @IS_ERR(i8* %4) #9, !dbg !5928
  br i1 %call4, label %if.then5, label %if.end17, !dbg !5929

if.then5:                                         ; preds = %if.end
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !5930
  %5 = load i8*, i8** %name.addr, align 8, !dbg !5932
  %call6 = call i32 @strncmp(i8* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0), i64 16) #9, !dbg !5934
  %tobool = icmp ne i32 %call6, 0, !dbg !5934
  br i1 %tobool, label %if.else, label %if.then7, !dbg !5935

if.then7:                                         ; preds = %if.then5
  %call8 = call i32 (i8*, ...) @request_module(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #9, !dbg !5936
  store i32 %call8, i32* %err, align 4, !dbg !5937
  br label %if.end10, !dbg !5938

if.else:                                          ; preds = %if.then5
  %6 = load i8*, i8** %name.addr, align 8, !dbg !5939
  %call9 = call i32 (i8*, ...) @request_module(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i64 0, i64 0), i8* %6) #9, !dbg !5940
  store i32 %call9, i32* %err, align 4, !dbg !5941
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !5942
  %7 = load i32, i32* %err, align 4, !dbg !5943
  %tobool11 = icmp ne i32 %7, 0, !dbg !5943
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !5945

if.then12:                                        ; preds = %if.end10
  %8 = load i32, i32* %err, align 4, !dbg !5946
  %cmp = icmp slt i32 %8, 0, !dbg !5947
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5948

cond.true:                                        ; preds = %if.then12
  %9 = load i32, i32* %err, align 4, !dbg !5949
  %conv = sext i32 %9 to i64, !dbg !5949
  %call13 = call i8* @ERR_PTR(i64 %conv) #9, !dbg !5950
  br label %cond.end, !dbg !5948

cond.false:                                       ; preds = %if.then12
  %call14 = call i8* @ERR_PTR(i64 -22) #9, !dbg !5951
  br label %cond.end, !dbg !5948

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call13, %cond.true ], [ %call14, %cond.false ], !dbg !5948
  %10 = bitcast i8* %cond to %struct.devfreq_governor*, !dbg !5948
  store %struct.devfreq_governor* %10, %struct.devfreq_governor** %retval, align 8, !dbg !5952
  br label %return, !dbg !5952

if.end15:                                         ; preds = %if.end10
  %11 = load i8*, i8** %name.addr, align 8, !dbg !5953
  %call16 = call %struct.devfreq_governor* @find_devfreq_governor(i8* %11) #9, !dbg !5954
  store %struct.devfreq_governor* %call16, %struct.devfreq_governor** %governor, align 8, !dbg !5955
  br label %if.end17, !dbg !5956

if.end17:                                         ; preds = %if.end15, %if.end
  %12 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !5957
  store %struct.devfreq_governor* %12, %struct.devfreq_governor** %retval, align 8, !dbg !5958
  br label %return, !dbg !5958

return:                                           ; preds = %if.end17, %cond.end, %if.then
  %13 = load %struct.devfreq_governor*, %struct.devfreq_governor** %retval, align 8, !dbg !5959
  ret %struct.devfreq_governor* %13, !dbg !5959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !5960 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5963, metadata !DIExpression()), !dbg !5964
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5965
  %1 = ptrtoint i8* %0 to i64, !dbg !5966
  ret i64 %1, !dbg !5967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !5968 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !5971, metadata !DIExpression()), !dbg !5972
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !5973, metadata !DIExpression()), !dbg !5974
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !5975
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !5976
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !5977
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !5978
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5978
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #9, !dbg !5979
  ret void, !dbg !5980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devfreq_remove_device(%struct.devfreq* %devfreq) #0 !dbg !5981 {
entry:
  %retval = alloca i32, align 4
  %devfreq.addr = alloca %struct.devfreq*, align 8
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !5982, metadata !DIExpression()), !dbg !5983
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5984
  %tobool = icmp ne %struct.devfreq* %0, null, !dbg !5984
  br i1 %tobool, label %if.end, label %if.then, !dbg !5986

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5987
  br label %return, !dbg !5987

if.end:                                           ; preds = %entry
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5988
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %1, i32 0, i32 4, !dbg !5990
  %2 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !5990
  %tobool1 = icmp ne %struct.devfreq_governor* %2, null, !dbg !5988
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !5991

if.then2:                                         ; preds = %if.end
  %3 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5992
  %governor3 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %3, i32 0, i32 4, !dbg !5993
  %4 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor3, align 8, !dbg !5993
  %event_handler = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %4, i32 0, i32 5, !dbg !5994
  %5 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler, align 8, !dbg !5994
  %6 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5995
  %call = call i32 %5(%struct.devfreq* %6, i32 2, i8* null) #9, !dbg !5992
  br label %if.end4, !dbg !5992

if.end4:                                          ; preds = %if.then2, %if.end
  %7 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !5996
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 2, !dbg !5997
  call void @device_unregister(%struct.device* %dev) #9, !dbg !5998
  store i32 0, i32* %retval, align 4, !dbg !5999
  br label %return, !dbg !5999

return:                                           ; preds = %if.end4, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6000
  ret i32 %8, !dbg !6000
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noredzone
declare dso_local void @device_unregister(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.devfreq* @devm_devfreq_add_device(%struct.device* %dev, %struct.devfreq_dev_profile* %profile, i8* %governor_name, i8* %data) #0 !dbg !6001 {
entry:
  %retval = alloca %struct.devfreq*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %profile.addr = alloca %struct.devfreq_dev_profile*, align 8
  %governor_name.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %ptr = alloca %struct.devfreq**, align 8
  %devfreq = alloca %struct.devfreq*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6002, metadata !DIExpression()), !dbg !6003
  store %struct.devfreq_dev_profile* %profile, %struct.devfreq_dev_profile** %profile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq_dev_profile** %profile.addr, metadata !6004, metadata !DIExpression()), !dbg !6005
  store i8* %governor_name, i8** %governor_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %governor_name.addr, metadata !6006, metadata !DIExpression()), !dbg !6007
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6008, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.declare(metadata %struct.devfreq*** %ptr, metadata !6010, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !6012, metadata !DIExpression()), !dbg !6013
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_devfreq_dev_release, i64 8, i32 3264) #9, !dbg !6014
  %0 = bitcast i8* %call to %struct.devfreq**, !dbg !6014
  store %struct.devfreq** %0, %struct.devfreq*** %ptr, align 8, !dbg !6015
  %1 = load %struct.devfreq**, %struct.devfreq*** %ptr, align 8, !dbg !6016
  %tobool = icmp ne %struct.devfreq** %1, null, !dbg !6016
  br i1 %tobool, label %if.end, label %if.then, !dbg !6018

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #9, !dbg !6019
  %2 = bitcast i8* %call1 to %struct.devfreq*, !dbg !6019
  store %struct.devfreq* %2, %struct.devfreq** %retval, align 8, !dbg !6020
  br label %return, !dbg !6020

if.end:                                           ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6021
  %4 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile.addr, align 8, !dbg !6022
  %5 = load i8*, i8** %governor_name.addr, align 8, !dbg !6023
  %6 = load i8*, i8** %data.addr, align 8, !dbg !6024
  %call2 = call %struct.devfreq* @devfreq_add_device(%struct.device* %3, %struct.devfreq_dev_profile* %4, i8* %5, i8* %6) #9, !dbg !6025
  store %struct.devfreq* %call2, %struct.devfreq** %devfreq, align 8, !dbg !6026
  %7 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6027
  %8 = bitcast %struct.devfreq* %7 to i8*, !dbg !6027
  %call3 = call zeroext i1 @IS_ERR(i8* %8) #9, !dbg !6029
  br i1 %call3, label %if.then4, label %if.end5, !dbg !6030

if.then4:                                         ; preds = %if.end
  %9 = load %struct.devfreq**, %struct.devfreq*** %ptr, align 8, !dbg !6031
  %10 = bitcast %struct.devfreq** %9 to i8*, !dbg !6031
  call void @devres_free(i8* %10) #9, !dbg !6033
  %11 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6034
  store %struct.devfreq* %11, %struct.devfreq** %retval, align 8, !dbg !6035
  br label %return, !dbg !6035

if.end5:                                          ; preds = %if.end
  %12 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6036
  %13 = load %struct.devfreq**, %struct.devfreq*** %ptr, align 8, !dbg !6037
  store %struct.devfreq* %12, %struct.devfreq** %13, align 8, !dbg !6038
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6039
  %15 = load %struct.devfreq**, %struct.devfreq*** %ptr, align 8, !dbg !6040
  %16 = bitcast %struct.devfreq** %15 to i8*, !dbg !6040
  call void @devres_add(%struct.device* %14, i8* %16) #9, !dbg !6041
  %17 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6042
  store %struct.devfreq* %17, %struct.devfreq** %retval, align 8, !dbg !6043
  br label %return, !dbg !6043

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %18 = load %struct.devfreq*, %struct.devfreq** %retval, align 8, !dbg !6044
  ret %struct.devfreq* %18, !dbg !6044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devres_alloc(void (%struct.device*, i8*)* %release, i64 %size, i32 %gfp) #0 !dbg !6045 {
entry:
  %release.addr = alloca void (%struct.device*, i8*)*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store void (%struct.device*, i8*)* %release, void (%struct.device*, i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*, i8*)** %release.addr, metadata !6052, metadata !DIExpression()), !dbg !6053
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6054, metadata !DIExpression()), !dbg !6055
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !6056, metadata !DIExpression()), !dbg !6057
  %0 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %release.addr, align 8, !dbg !6058
  %1 = load i64, i64* %size.addr, align 8, !dbg !6059
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !6060
  %call = call noalias i8* @devres_alloc_node(void (%struct.device*, i8*)* %0, i64 %1, i32 %2, i32 -1) #9, !dbg !6061
  ret i8* %call, !dbg !6062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_devfreq_dev_release(%struct.device* %dev, i8* %res) #0 !dbg !6063 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6064, metadata !DIExpression()), !dbg !6065
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6066, metadata !DIExpression()), !dbg !6067
  %0 = load i8*, i8** %res.addr, align 8, !dbg !6068
  %1 = bitcast i8* %0 to %struct.devfreq**, !dbg !6069
  %2 = load %struct.devfreq*, %struct.devfreq** %1, align 8, !dbg !6070
  %call = call i32 @devfreq_remove_device(%struct.devfreq* %2) #9, !dbg !6071
  ret void, !dbg !6072
}

; Function Attrs: noredzone
declare dso_local void @devres_free(i8*) #3

; Function Attrs: noredzone
declare dso_local void @devres_add(%struct.device*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.devfreq* @devfreq_get_devfreq_by_node(%struct.device_node* %node) #0 !dbg !6073 {
entry:
  %retval = alloca %struct.devfreq*, align 8
  %node.addr = alloca %struct.device_node*, align 8
  %devfreq = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp12 = alloca %struct.devfreq*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !6076, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !6078, metadata !DIExpression()), !dbg !6079
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !6080
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !6080
  br i1 %tobool, label %if.end, label %if.then, !dbg !6082

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -22) #9, !dbg !6083
  %1 = bitcast i8* %call to %struct.devfreq*, !dbg !6083
  store %struct.devfreq* %1, %struct.devfreq** %retval, align 8, !dbg !6084
  br label %return, !dbg !6084

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !6085
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6086, metadata !DIExpression()), !dbg !6089
  %2 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @devfreq_list, i32 0, i32 0), align 8, !dbg !6089
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !6089
  store i8* %3, i8** %__mptr, align 8, !dbg !6089
  br label %do.body, !dbg !6089

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6090

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !6089
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !6089
  %5 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !6089
  store %struct.devfreq* %5, %struct.devfreq** %tmp, align 8, !dbg !6090
  %6 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !6089
  store %struct.devfreq* %6, %struct.devfreq** %devfreq, align 8, !dbg !6092
  br label %for.cond, !dbg !6092

for.cond:                                         ; preds = %do.end11, %do.end
  %7 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6093
  %node1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 0, !dbg !6093
  %cmp = icmp eq %struct.list_head* %node1, @devfreq_list, !dbg !6093
  %lnot = xor i1 %cmp, true, !dbg !6093
  br i1 %lnot, label %for.body, label %for.end, !dbg !6092

for.body:                                         ; preds = %for.cond
  %8 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6095
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 2, !dbg !6098
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !6099
  %9 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6099
  %tobool2 = icmp ne %struct.device* %9, null, !dbg !6095
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !6100

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6101
  %dev3 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %10, i32 0, i32 2, !dbg !6102
  %parent4 = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 1, !dbg !6103
  %11 = load %struct.device*, %struct.device** %parent4, align 8, !dbg !6103
  %of_node = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 23, !dbg !6104
  %12 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !6104
  %13 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !6105
  %cmp5 = icmp eq %struct.device_node* %12, %13, !dbg !6106
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6107

if.then6:                                         ; preds = %land.lhs.true
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !6108
  %14 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6110
  store %struct.devfreq* %14, %struct.devfreq** %retval, align 8, !dbg !6111
  br label %return, !dbg !6111

if.end7:                                          ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !6112

for.inc:                                          ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !6113, metadata !DIExpression()), !dbg !6115
  %15 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6115
  %node9 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %15, i32 0, i32 0, !dbg !6115
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node9, i32 0, i32 0, !dbg !6115
  %16 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6115
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !6115
  store i8* %17, i8** %__mptr8, align 8, !dbg !6115
  br label %do.body10, !dbg !6115

do.body10:                                        ; preds = %for.inc
  br label %do.end11, !dbg !6116

do.end11:                                         ; preds = %do.body10
  %18 = load i8*, i8** %__mptr8, align 8, !dbg !6115
  %add.ptr13 = getelementptr i8, i8* %18, i64 0, !dbg !6115
  %19 = bitcast i8* %add.ptr13 to %struct.devfreq*, !dbg !6115
  store %struct.devfreq* %19, %struct.devfreq** %tmp12, align 8, !dbg !6116
  %20 = load %struct.devfreq*, %struct.devfreq** %tmp12, align 8, !dbg !6115
  store %struct.devfreq* %20, %struct.devfreq** %devfreq, align 8, !dbg !6093
  br label %for.cond, !dbg !6093, !llvm.loop !6118

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !6120
  %call14 = call i8* @ERR_PTR(i64 -19) #9, !dbg !6121
  %21 = bitcast i8* %call14 to %struct.devfreq*, !dbg !6121
  store %struct.devfreq* %21, %struct.devfreq** %retval, align 8, !dbg !6122
  br label %return, !dbg !6122

return:                                           ; preds = %for.end, %if.then6, %if.then
  %22 = load %struct.devfreq*, %struct.devfreq** %retval, align 8, !dbg !6123
  ret %struct.devfreq* %22, !dbg !6123
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.devfreq* @devfreq_get_devfreq_by_phandle(%struct.device* %dev, i8* %phandle_name, i32 %index) #0 !dbg !6124 {
entry:
  %retval = alloca %struct.devfreq*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %phandle_name.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %node = alloca %struct.device_node*, align 8
  %devfreq = alloca %struct.devfreq*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6127, metadata !DIExpression()), !dbg !6128
  store i8* %phandle_name, i8** %phandle_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %phandle_name.addr, metadata !6129, metadata !DIExpression()), !dbg !6130
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6131, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.declare(metadata %struct.device_node** %node, metadata !6133, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !6135, metadata !DIExpression()), !dbg !6136
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6137
  %tobool = icmp ne %struct.device* %0, null, !dbg !6137
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6139

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %phandle_name.addr, align 8, !dbg !6140
  %tobool1 = icmp ne i8* %1, null, !dbg !6140
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6141

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = call i8* @ERR_PTR(i64 -22) #9, !dbg !6142
  %2 = bitcast i8* %call to %struct.devfreq*, !dbg !6142
  store %struct.devfreq* %2, %struct.devfreq** %retval, align 8, !dbg !6143
  br label %return, !dbg !6143

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6144
  %of_node = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 23, !dbg !6146
  %4 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !6146
  %tobool2 = icmp ne %struct.device_node* %4, null, !dbg !6144
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !6147

if.then3:                                         ; preds = %if.end
  %call4 = call i8* @ERR_PTR(i64 -22) #9, !dbg !6148
  %5 = bitcast i8* %call4 to %struct.devfreq*, !dbg !6148
  store %struct.devfreq* %5, %struct.devfreq** %retval, align 8, !dbg !6149
  br label %return, !dbg !6149

if.end5:                                          ; preds = %if.end
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6150
  %of_node6 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 23, !dbg !6151
  %7 = load %struct.device_node*, %struct.device_node** %of_node6, align 8, !dbg !6151
  %8 = load i8*, i8** %phandle_name.addr, align 8, !dbg !6152
  %9 = load i32, i32* %index.addr, align 4, !dbg !6153
  %call7 = call %struct.device_node* @of_parse_phandle(%struct.device_node* %7, i8* %8, i32 %9) #9, !dbg !6154
  store %struct.device_node* %call7, %struct.device_node** %node, align 8, !dbg !6155
  %10 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !6156
  %tobool8 = icmp ne %struct.device_node* %10, null, !dbg !6156
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !6158

if.then9:                                         ; preds = %if.end5
  %call10 = call i8* @ERR_PTR(i64 -19) #9, !dbg !6159
  %11 = bitcast i8* %call10 to %struct.devfreq*, !dbg !6159
  store %struct.devfreq* %11, %struct.devfreq** %retval, align 8, !dbg !6160
  br label %return, !dbg !6160

if.end11:                                         ; preds = %if.end5
  %12 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !6161
  %call12 = call %struct.devfreq* @devfreq_get_devfreq_by_node(%struct.device_node* %12) #9, !dbg !6162
  store %struct.devfreq* %call12, %struct.devfreq** %devfreq, align 8, !dbg !6163
  %13 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !6164
  call void @of_node_put(%struct.device_node* %13) #9, !dbg !6165
  %14 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6166
  store %struct.devfreq* %14, %struct.devfreq** %retval, align 8, !dbg !6167
  br label %return, !dbg !6167

return:                                           ; preds = %if.end11, %if.then9, %if.then3, %if.then
  %15 = load %struct.devfreq*, %struct.devfreq** %retval, align 8, !dbg !6168
  ret %struct.devfreq* %15, !dbg !6168
}

; Function Attrs: noredzone
declare dso_local %struct.device_node* @of_parse_phandle(%struct.device_node*, i8*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_node_put(%struct.device_node* %node) #0 !dbg !6169 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !6172, metadata !DIExpression()), !dbg !6173
  ret void, !dbg !6174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devm_devfreq_remove_device(%struct.device* %dev, %struct.devfreq* %devfreq) #0 !dbg !6175 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6178, metadata !DIExpression()), !dbg !6179
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !6180, metadata !DIExpression()), !dbg !6181
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6182, metadata !DIExpression()), !dbg !6184
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6184
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6184
  %2 = bitcast %struct.devfreq* %1 to i8*, !dbg !6184
  %call = call i32 @devres_release(%struct.device* %0, void (%struct.device*, i8*)* @devm_devfreq_dev_release, i32 (%struct.device*, i8*, i8*)* @devm_devfreq_dev_match, i8* %2) #9, !dbg !6184
  %tobool = icmp ne i32 %call, 0, !dbg !6184
  %lnot = xor i1 %tobool, true, !dbg !6184
  %lnot1 = xor i1 %lnot, true, !dbg !6184
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6184
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6184
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !6185
  %tobool2 = icmp ne i32 %3, 0, !dbg !6185
  %lnot3 = xor i1 %tobool2, true, !dbg !6185
  %lnot5 = xor i1 %lnot3, true, !dbg !6185
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !6185
  %conv = sext i32 %lnot.ext6 to i64, !dbg !6185
  %tobool7 = icmp ne i64 %conv, 0, !dbg !6185
  br i1 %tobool7, label %if.then, label %if.end, !dbg !6184

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6185

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !6187

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !6189

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !6187

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i32 1065, i32 2305, i64 12) #11, !dbg !6191, !srcloc !6193
  br label %do.end10, !dbg !6191

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 222) #11, !dbg !6194, !srcloc !6196
  br label %do.body11, !dbg !6187

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !6197

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !6187

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !6187

if.end:                                           ; preds = %do.end13, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !6184
  %tobool14 = icmp ne i32 %4, 0, !dbg !6184
  %lnot15 = xor i1 %tobool14, true, !dbg !6184
  %lnot17 = xor i1 %lnot15, true, !dbg !6184
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !6184
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !6184
  store i64 %conv19, i64* %tmp, align 8, !dbg !6185
  %5 = load i64, i64* %tmp, align 8, !dbg !6184
  ret void, !dbg !6199
}

; Function Attrs: noredzone
declare dso_local i32 @devres_release(%struct.device*, void (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_devfreq_dev_match(%struct.device* %dev, i8* %res, i8* %data) #0 !dbg !6200 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %r = alloca %struct.devfreq**, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6203, metadata !DIExpression()), !dbg !6204
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6205, metadata !DIExpression()), !dbg !6206
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6207, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.declare(metadata %struct.devfreq*** %r, metadata !6209, metadata !DIExpression()), !dbg !6210
  %0 = load i8*, i8** %res.addr, align 8, !dbg !6211
  %1 = bitcast i8* %0 to %struct.devfreq**, !dbg !6211
  store %struct.devfreq** %1, %struct.devfreq*** %r, align 8, !dbg !6210
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6212, metadata !DIExpression()), !dbg !6215
  %2 = load %struct.devfreq**, %struct.devfreq*** %r, align 8, !dbg !6215
  %tobool = icmp ne %struct.devfreq** %2, null, !dbg !6215
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6215

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.devfreq**, %struct.devfreq*** %r, align 8, !dbg !6215
  %4 = load %struct.devfreq*, %struct.devfreq** %3, align 8, !dbg !6215
  %tobool1 = icmp ne %struct.devfreq* %4, null, !dbg !6215
  %lnot = xor i1 %tobool1, true, !dbg !6215
  br label %lor.end, !dbg !6215

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %5, true, !dbg !6215
  %lnot3 = xor i1 %lnot2, true, !dbg !6215
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6215
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6215
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !6216
  %tobool4 = icmp ne i32 %6, 0, !dbg !6216
  %lnot5 = xor i1 %tobool4, true, !dbg !6216
  %lnot7 = xor i1 %lnot5, true, !dbg !6216
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !6216
  %conv = sext i32 %lnot.ext8 to i64, !dbg !6216
  %tobool9 = icmp ne i64 %conv, 0, !dbg !6216
  br i1 %tobool9, label %if.then, label %if.end, !dbg !6215

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !6216

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !6218

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !6220

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !6218

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i32 938, i32 2305, i64 12) #11, !dbg !6222, !srcloc !6224
  br label %do.end12, !dbg !6222

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 219) #11, !dbg !6225, !srcloc !6227
  br label %do.body13, !dbg !6218

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !6228

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !6218

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !6218

if.end:                                           ; preds = %do.end15, %lor.end
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !6215
  %tobool16 = icmp ne i32 %7, 0, !dbg !6215
  %lnot17 = xor i1 %tobool16, true, !dbg !6215
  %lnot19 = xor i1 %lnot17, true, !dbg !6215
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !6215
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !6215
  store i64 %conv21, i64* %tmp, align 8, !dbg !6216
  %8 = load i64, i64* %tmp, align 8, !dbg !6215
  %tobool22 = icmp ne i64 %8, 0, !dbg !6230
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !6231

if.then23:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6232
  br label %return, !dbg !6232

if.end24:                                         ; preds = %if.end
  %9 = load %struct.devfreq**, %struct.devfreq*** %r, align 8, !dbg !6233
  %10 = load %struct.devfreq*, %struct.devfreq** %9, align 8, !dbg !6234
  %11 = load i8*, i8** %data.addr, align 8, !dbg !6235
  %12 = bitcast i8* %11 to %struct.devfreq*, !dbg !6235
  %cmp = icmp eq %struct.devfreq* %10, %12, !dbg !6236
  %conv25 = zext i1 %cmp to i32, !dbg !6236
  store i32 %conv25, i32* %retval, align 4, !dbg !6237
  br label %return, !dbg !6237

return:                                           ; preds = %if.end24, %if.then23
  %13 = load i32, i32* %retval, align 4, !dbg !6238
  ret i32 %13, !dbg !6238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devfreq_suspend_device(%struct.devfreq* %devfreq) #0 !dbg !6239 {
entry:
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !6240, metadata !DIExpression()), !dbg !6244
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !6254, metadata !DIExpression()), !dbg !6255
  %__ret.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i, metadata !6256, metadata !DIExpression()), !dbg !6258
  %tmp.i.i.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6259, metadata !DIExpression()), !dbg !6260
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6261, metadata !DIExpression()), !dbg !6263
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6265, metadata !DIExpression()), !dbg !6266
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6267, metadata !DIExpression()), !dbg !6268
  %retval = alloca i32, align 4
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %ret = alloca i32, align 4
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !6269, metadata !DIExpression()), !dbg !6270
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6271, metadata !DIExpression()), !dbg !6272
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6273
  %tobool = icmp ne %struct.devfreq* %0, null, !dbg !6273
  br i1 %tobool, label %if.end, label %if.then, !dbg !6275

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6276
  br label %return, !dbg !6276

if.end:                                           ; preds = %entry
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6277
  %suspend_count = getelementptr inbounds %struct.devfreq, %struct.devfreq* %1, i32 0, i32 18, !dbg !6278
  store %struct.atomic_t* %suspend_count, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6279
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !6279
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6280
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6281
  %conv.i.i = trunc i64 %5 to i32, !dbg !6281
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !6282
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6283
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !6283
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !6283
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6284
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6285
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i.i.i, align 8
  %10 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !6286
  %11 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !6258
  store i32 %11, i32* %__ret.i.i.i, align 4, !dbg !6258
  %12 = load i32, i32* %__ret.i.i.i, align 4, !dbg !6258
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !6258
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !6258
  %14 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i, i32 %12, i32* %counter.i.i.i) #11, !dbg !6258, !srcloc !6287
  store i32 %14, i32* %__ret.i.i.i, align 4, !dbg !6258
  %15 = load i32, i32* %__ret.i.i.i, align 4, !dbg !6258
  store i32 %15, i32* %tmp.i.i.i, align 4, !dbg !6258
  %16 = load i32, i32* %tmp.i.i.i, align 4, !dbg !6258
  %add.i.i.i = add i32 %10, %16, !dbg !6288
  %cmp = icmp sgt i32 %add.i.i.i, 1, !dbg !6289
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !6290

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6291
  br label %return, !dbg !6291

if.end2:                                          ; preds = %if.end
  %17 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6292
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %17, i32 0, i32 4, !dbg !6294
  %18 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !6294
  %tobool3 = icmp ne %struct.devfreq_governor* %18, null, !dbg !6292
  br i1 %tobool3, label %if.then4, label %if.end10, !dbg !6295

if.then4:                                         ; preds = %if.end2
  %19 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6296
  %governor5 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %19, i32 0, i32 4, !dbg !6298
  %20 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor5, align 8, !dbg !6298
  %event_handler = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %20, i32 0, i32 5, !dbg !6299
  %21 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler, align 8, !dbg !6299
  %22 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6300
  %call6 = call i32 %21(%struct.devfreq* %22, i32 4, i8* null) #9, !dbg !6296
  store i32 %call6, i32* %ret, align 4, !dbg !6301
  %23 = load i32, i32* %ret, align 4, !dbg !6302
  %tobool7 = icmp ne i32 %23, 0, !dbg !6302
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !6304

if.then8:                                         ; preds = %if.then4
  %24 = load i32, i32* %ret, align 4, !dbg !6305
  store i32 %24, i32* %retval, align 4, !dbg !6306
  br label %return, !dbg !6306

if.end9:                                          ; preds = %if.then4
  br label %if.end10, !dbg !6307

if.end10:                                         ; preds = %if.end9, %if.end2
  %25 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6308
  %suspend_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %25, i32 0, i32 16, !dbg !6310
  %26 = load i64, i64* %suspend_freq, align 8, !dbg !6310
  %tobool11 = icmp ne i64 %26, 0, !dbg !6308
  br i1 %tobool11, label %if.then12, label %if.end19, !dbg !6311

if.then12:                                        ; preds = %if.end10
  %27 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6312
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %27, i32 0, i32 1, !dbg !6314
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !6315
  %28 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6316
  %29 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6317
  %suspend_freq13 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %29, i32 0, i32 16, !dbg !6318
  %30 = load i64, i64* %suspend_freq13, align 8, !dbg !6318
  %call14 = call i32 @devfreq_set_target(%struct.devfreq* %28, i64 %30, i32 0) #9, !dbg !6319
  store i32 %call14, i32* %ret, align 4, !dbg !6320
  %31 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6321
  %lock15 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %31, i32 0, i32 1, !dbg !6322
  call void @mutex_unlock(%struct.mutex* %lock15) #9, !dbg !6323
  %32 = load i32, i32* %ret, align 4, !dbg !6324
  %tobool16 = icmp ne i32 %32, 0, !dbg !6324
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !6326

if.then17:                                        ; preds = %if.then12
  %33 = load i32, i32* %ret, align 4, !dbg !6327
  store i32 %33, i32* %retval, align 4, !dbg !6328
  br label %return, !dbg !6328

if.end18:                                         ; preds = %if.then12
  br label %if.end19, !dbg !6329

if.end19:                                         ; preds = %if.end18, %if.end10
  store i32 0, i32* %retval, align 4, !dbg !6330
  br label %return, !dbg !6330

return:                                           ; preds = %if.end19, %if.then17, %if.then8, %if.then1, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !6331
  ret i32 %34, !dbg !6331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devfreq_resume_device(%struct.devfreq* %devfreq) #0 !dbg !6332 {
entry:
  %i.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i.i, metadata !6240, metadata !DIExpression()), !dbg !6333
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !6254, metadata !DIExpression()), !dbg !6342
  %__ret.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i.i, metadata !6256, metadata !DIExpression()), !dbg !6343
  %tmp.i.i.i.i = alloca i32, align 4
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !6344, metadata !DIExpression()), !dbg !6345
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !6346, metadata !DIExpression()), !dbg !6347
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6348, metadata !DIExpression()), !dbg !6349
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6261, metadata !DIExpression()), !dbg !6350
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6265, metadata !DIExpression()), !dbg !6352
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6353, metadata !DIExpression()), !dbg !6354
  %retval = alloca i32, align 4
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %ret = alloca i32, align 4
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !6355, metadata !DIExpression()), !dbg !6356
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6357, metadata !DIExpression()), !dbg !6358
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6359
  %tobool = icmp ne %struct.devfreq* %0, null, !dbg !6359
  br i1 %tobool, label %if.end, label %if.then, !dbg !6361

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6362
  br label %return, !dbg !6362

if.end:                                           ; preds = %entry
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6363
  %suspend_count = getelementptr inbounds %struct.devfreq, %struct.devfreq* %1, i32 0, i32 18, !dbg !6364
  store %struct.atomic_t* %suspend_count, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6365
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !6365
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6366
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6367
  %conv.i.i = trunc i64 %5 to i32, !dbg !6367
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !6368
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6369
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !6369
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !6369
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6370
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6371
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i.i.i, align 8
  %10 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !6372
  %sub.i.i.i = sub i32 0, %10, !dbg !6373
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !6374
  store i32 %sub.i.i.i, i32* %i.addr.i.i.i.i, align 4
  store %struct.atomic_t* %11, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %12 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !6375
  %13 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !6343
  store i32 %13, i32* %__ret.i.i.i.i, align 4, !dbg !6343
  %14 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !6343
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !6343
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %15, i32 0, i32 0, !dbg !6343
  %16 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i.i, i32 %14, i32* %counter.i.i.i.i) #11, !dbg !6343, !srcloc !6287
  store i32 %16, i32* %__ret.i.i.i.i, align 4, !dbg !6343
  %17 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !6343
  store i32 %17, i32* %tmp.i.i.i.i, align 4, !dbg !6343
  %18 = load i32, i32* %tmp.i.i.i.i, align 4, !dbg !6343
  %add.i.i.i.i = add i32 %12, %18, !dbg !6376
  %cmp = icmp sge i32 %add.i.i.i.i, 1, !dbg !6377
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !6378

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6379
  br label %return, !dbg !6379

if.end2:                                          ; preds = %if.end
  %19 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6380
  %resume_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %19, i32 0, i32 17, !dbg !6382
  %20 = load i64, i64* %resume_freq, align 8, !dbg !6382
  %tobool3 = icmp ne i64 %20, 0, !dbg !6380
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !6383

if.then4:                                         ; preds = %if.end2
  %21 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6384
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %21, i32 0, i32 1, !dbg !6386
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !6387
  %22 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6388
  %23 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6389
  %resume_freq5 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %23, i32 0, i32 17, !dbg !6390
  %24 = load i64, i64* %resume_freq5, align 8, !dbg !6390
  %call6 = call i32 @devfreq_set_target(%struct.devfreq* %22, i64 %24, i32 0) #9, !dbg !6391
  store i32 %call6, i32* %ret, align 4, !dbg !6392
  %25 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6393
  %lock7 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %25, i32 0, i32 1, !dbg !6394
  call void @mutex_unlock(%struct.mutex* %lock7) #9, !dbg !6395
  %26 = load i32, i32* %ret, align 4, !dbg !6396
  %tobool8 = icmp ne i32 %26, 0, !dbg !6396
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6398

if.then9:                                         ; preds = %if.then4
  %27 = load i32, i32* %ret, align 4, !dbg !6399
  store i32 %27, i32* %retval, align 4, !dbg !6400
  br label %return, !dbg !6400

if.end10:                                         ; preds = %if.then4
  br label %if.end11, !dbg !6401

if.end11:                                         ; preds = %if.end10, %if.end2
  %28 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6402
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %28, i32 0, i32 4, !dbg !6404
  %29 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !6404
  %tobool12 = icmp ne %struct.devfreq_governor* %29, null, !dbg !6402
  br i1 %tobool12, label %if.then13, label %if.end19, !dbg !6405

if.then13:                                        ; preds = %if.end11
  %30 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6406
  %governor14 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %30, i32 0, i32 4, !dbg !6408
  %31 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor14, align 8, !dbg !6408
  %event_handler = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %31, i32 0, i32 5, !dbg !6409
  %32 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler, align 8, !dbg !6409
  %33 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6410
  %call15 = call i32 %32(%struct.devfreq* %33, i32 5, i8* null) #9, !dbg !6406
  store i32 %call15, i32* %ret, align 4, !dbg !6411
  %34 = load i32, i32* %ret, align 4, !dbg !6412
  %tobool16 = icmp ne i32 %34, 0, !dbg !6412
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !6414

if.then17:                                        ; preds = %if.then13
  %35 = load i32, i32* %ret, align 4, !dbg !6415
  store i32 %35, i32* %retval, align 4, !dbg !6416
  br label %return, !dbg !6416

if.end18:                                         ; preds = %if.then13
  br label %if.end19, !dbg !6417

if.end19:                                         ; preds = %if.end18, %if.end11
  store i32 0, i32* %retval, align 4, !dbg !6418
  br label %return, !dbg !6418

return:                                           ; preds = %if.end19, %if.then17, %if.then9, %if.then1, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !6419
  ret i32 %36, !dbg !6419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devfreq_suspend() #0 !dbg !6420 {
entry:
  %devfreq = alloca %struct.devfreq*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.devfreq*, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !6421, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6423, metadata !DIExpression()), !dbg !6424
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !6425
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6426, metadata !DIExpression()), !dbg !6429
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @devfreq_list, i32 0, i32 0), align 8, !dbg !6429
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !6429
  store i8* %1, i8** %__mptr, align 8, !dbg !6429
  br label %do.body, !dbg !6429

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6430

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6429
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6429
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !6429
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !6430
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !6429
  store %struct.devfreq* %4, %struct.devfreq** %devfreq, align 8, !dbg !6432
  br label %for.cond, !dbg !6432

for.cond:                                         ; preds = %do.end4, %do.end
  %5 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6433
  %node = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 0, !dbg !6433
  %cmp = icmp eq %struct.list_head* %node, @devfreq_list, !dbg !6433
  %lnot = xor i1 %cmp, true, !dbg !6433
  br i1 %lnot, label %for.body, label %for.end, !dbg !6432

for.body:                                         ; preds = %for.cond
  %6 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6435
  %call = call i32 @devfreq_suspend_device(%struct.devfreq* %6) #9, !dbg !6437
  store i32 %call, i32* %ret, align 4, !dbg !6438
  %7 = load i32, i32* %ret, align 4, !dbg !6439
  %tobool = icmp ne i32 %7, 0, !dbg !6439
  br i1 %tobool, label %if.then, label %if.end, !dbg !6441

if.then:                                          ; preds = %for.body
  %8 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6442
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 2, !dbg !6442
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !6442
  br label %if.end, !dbg !6442

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6443

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !6444, metadata !DIExpression()), !dbg !6446
  %9 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6446
  %node2 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %9, i32 0, i32 0, !dbg !6446
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node2, i32 0, i32 0, !dbg !6446
  %10 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6446
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !6446
  store i8* %11, i8** %__mptr1, align 8, !dbg !6446
  br label %do.body3, !dbg !6446

do.body3:                                         ; preds = %for.inc
  br label %do.end4, !dbg !6447

do.end4:                                          ; preds = %do.body3
  %12 = load i8*, i8** %__mptr1, align 8, !dbg !6446
  %add.ptr6 = getelementptr i8, i8* %12, i64 0, !dbg !6446
  %13 = bitcast i8* %add.ptr6 to %struct.devfreq*, !dbg !6446
  store %struct.devfreq* %13, %struct.devfreq** %tmp5, align 8, !dbg !6447
  %14 = load %struct.devfreq*, %struct.devfreq** %tmp5, align 8, !dbg !6446
  store %struct.devfreq* %14, %struct.devfreq** %devfreq, align 8, !dbg !6433
  br label %for.cond, !dbg !6433, !llvm.loop !6449

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !6451
  ret void, !dbg !6452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devfreq_resume() #0 !dbg !6453 {
entry:
  %devfreq = alloca %struct.devfreq*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.devfreq*, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !6454, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6456, metadata !DIExpression()), !dbg !6457
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !6458
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6459, metadata !DIExpression()), !dbg !6462
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @devfreq_list, i32 0, i32 0), align 8, !dbg !6462
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !6462
  store i8* %1, i8** %__mptr, align 8, !dbg !6462
  br label %do.body, !dbg !6462

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6463

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6462
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6462
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !6462
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !6463
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !6462
  store %struct.devfreq* %4, %struct.devfreq** %devfreq, align 8, !dbg !6465
  br label %for.cond, !dbg !6465

for.cond:                                         ; preds = %do.end4, %do.end
  %5 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6466
  %node = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 0, !dbg !6466
  %cmp = icmp eq %struct.list_head* %node, @devfreq_list, !dbg !6466
  %lnot = xor i1 %cmp, true, !dbg !6466
  br i1 %lnot, label %for.body, label %for.end, !dbg !6465

for.body:                                         ; preds = %for.cond
  %6 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6468
  %call = call i32 @devfreq_resume_device(%struct.devfreq* %6) #9, !dbg !6470
  store i32 %call, i32* %ret, align 4, !dbg !6471
  %7 = load i32, i32* %ret, align 4, !dbg !6472
  %tobool = icmp ne i32 %7, 0, !dbg !6472
  br i1 %tobool, label %if.then, label %if.end, !dbg !6474

if.then:                                          ; preds = %for.body
  %8 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6475
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 2, !dbg !6475
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !6475
  br label %if.end, !dbg !6475

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6476

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !6477, metadata !DIExpression()), !dbg !6479
  %9 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6479
  %node2 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %9, i32 0, i32 0, !dbg !6479
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node2, i32 0, i32 0, !dbg !6479
  %10 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6479
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !6479
  store i8* %11, i8** %__mptr1, align 8, !dbg !6479
  br label %do.body3, !dbg !6479

do.body3:                                         ; preds = %for.inc
  br label %do.end4, !dbg !6480

do.end4:                                          ; preds = %do.body3
  %12 = load i8*, i8** %__mptr1, align 8, !dbg !6479
  %add.ptr6 = getelementptr i8, i8* %12, i64 0, !dbg !6479
  %13 = bitcast i8* %add.ptr6 to %struct.devfreq*, !dbg !6479
  store %struct.devfreq* %13, %struct.devfreq** %tmp5, align 8, !dbg !6480
  %14 = load %struct.devfreq*, %struct.devfreq** %tmp5, align 8, !dbg !6479
  store %struct.devfreq* %14, %struct.devfreq** %devfreq, align 8, !dbg !6466
  br label %for.cond, !dbg !6466, !llvm.loop !6482

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !6484
  ret void, !dbg !6485
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devfreq_add_governor(%struct.devfreq_governor* %governor) #0 !dbg !6486 {
entry:
  %retval = alloca i32, align 4
  %governor.addr = alloca %struct.devfreq_governor*, align 8
  %g = alloca %struct.devfreq_governor*, align 8
  %devfreq = alloca %struct.devfreq*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %ret = alloca i32, align 4
  %dev = alloca %struct.device*, align 8
  %__mptr42 = alloca i8*, align 8
  %tmp46 = alloca %struct.devfreq*, align 8
  store %struct.devfreq_governor* %governor, %struct.devfreq_governor** %governor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq_governor** %governor.addr, metadata !6489, metadata !DIExpression()), !dbg !6490
  call void @llvm.dbg.declare(metadata %struct.devfreq_governor** %g, metadata !6491, metadata !DIExpression()), !dbg !6492
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !6493, metadata !DIExpression()), !dbg !6494
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6495, metadata !DIExpression()), !dbg !6496
  store i32 0, i32* %err, align 4, !dbg !6496
  %0 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor.addr, align 8, !dbg !6497
  %tobool = icmp ne %struct.devfreq_governor* %0, null, !dbg !6497
  br i1 %tobool, label %if.end, label %if.then, !dbg !6499

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.devfreq_add_governor, i64 0, i64 0)) #10, !dbg !6500
  store i32 -22, i32* %retval, align 4, !dbg !6502
  br label %return, !dbg !6502

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !6503
  %1 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor.addr, align 8, !dbg !6504
  %name = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %1, i32 0, i32 1, !dbg !6505
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !6504
  %call1 = call %struct.devfreq_governor* @find_devfreq_governor(i8* %arraydecay) #9, !dbg !6506
  store %struct.devfreq_governor* %call1, %struct.devfreq_governor** %g, align 8, !dbg !6507
  %2 = load %struct.devfreq_governor*, %struct.devfreq_governor** %g, align 8, !dbg !6508
  %3 = bitcast %struct.devfreq_governor* %2 to i8*, !dbg !6508
  %call2 = call zeroext i1 @IS_ERR(i8* %3) #9, !dbg !6510
  br i1 %call2, label %if.end7, label %if.then3, !dbg !6511

if.then3:                                         ; preds = %if.end
  %4 = load %struct.devfreq_governor*, %struct.devfreq_governor** %g, align 8, !dbg !6512
  %name4 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %4, i32 0, i32 1, !dbg !6512
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %name4, i64 0, i64 0, !dbg !6512
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.devfreq_add_governor, i64 0, i64 0), i8* %arraydecay5) #10, !dbg !6512
  store i32 -22, i32* %err, align 4, !dbg !6514
  br label %err_out, !dbg !6515

if.end7:                                          ; preds = %if.end
  %5 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor.addr, align 8, !dbg !6516
  %node = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %5, i32 0, i32 0, !dbg !6517
  call void @list_add(%struct.list_head* %node, %struct.list_head* @devfreq_governor_list) #9, !dbg !6518
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6519, metadata !DIExpression()), !dbg !6522
  %6 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @devfreq_list, i32 0, i32 0), align 8, !dbg !6522
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !6522
  store i8* %7, i8** %__mptr, align 8, !dbg !6522
  br label %do.body, !dbg !6522

do.body:                                          ; preds = %if.end7
  br label %do.end, !dbg !6523

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !6522
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !6522
  %9 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !6522
  store %struct.devfreq* %9, %struct.devfreq** %tmp, align 8, !dbg !6523
  %10 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !6522
  store %struct.devfreq* %10, %struct.devfreq** %devfreq, align 8, !dbg !6525
  br label %for.cond, !dbg !6525

for.cond:                                         ; preds = %do.end45, %do.end
  %11 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6526
  %node8 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %11, i32 0, i32 0, !dbg !6526
  %cmp = icmp eq %struct.list_head* %node8, @devfreq_list, !dbg !6526
  %lnot = xor i1 %cmp, true, !dbg !6526
  br i1 %lnot, label %for.body, label %for.end, !dbg !6525

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6528, metadata !DIExpression()), !dbg !6530
  store i32 0, i32* %ret, align 4, !dbg !6530
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !6531, metadata !DIExpression()), !dbg !6532
  %12 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6533
  %dev9 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %12, i32 0, i32 2, !dbg !6534
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev9, i32 0, i32 1, !dbg !6535
  %13 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6535
  store %struct.device* %13, %struct.device** %dev, align 8, !dbg !6532
  %14 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6536
  %governor_name = getelementptr inbounds %struct.devfreq, %struct.devfreq* %14, i32 0, i32 5, !dbg !6538
  %arraydecay10 = getelementptr inbounds [16 x i8], [16 x i8]* %governor_name, i64 0, i64 0, !dbg !6536
  %15 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor.addr, align 8, !dbg !6539
  %name11 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %15, i32 0, i32 1, !dbg !6540
  %arraydecay12 = getelementptr inbounds [16 x i8], [16 x i8]* %name11, i64 0, i64 0, !dbg !6539
  %call13 = call i32 @strncmp(i8* %arraydecay10, i8* %arraydecay12, i64 16) #9, !dbg !6541
  %tobool14 = icmp ne i32 %call13, 0, !dbg !6541
  br i1 %tobool14, label %if.end41, label %if.then15, !dbg !6542

if.then15:                                        ; preds = %for.body
  %16 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6543
  %governor16 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %16, i32 0, i32 4, !dbg !6546
  %17 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor16, align 8, !dbg !6546
  %tobool17 = icmp ne %struct.devfreq_governor* %17, null, !dbg !6543
  br i1 %tobool17, label %if.then18, label %if.end30, !dbg !6547

if.then18:                                        ; preds = %if.then15
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6548
  %19 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6548
  %governor19 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %19, i32 0, i32 4, !dbg !6548
  %20 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor19, align 8, !dbg !6548
  %name20 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %20, i32 0, i32 1, !dbg !6548
  %arraydecay21 = getelementptr inbounds [16 x i8], [16 x i8]* %name20, i64 0, i64 0, !dbg !6548
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %18, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.devfreq_add_governor, i64 0, i64 0), i8* %arraydecay21) #10, !dbg !6548
  %21 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6550
  %governor22 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %21, i32 0, i32 4, !dbg !6551
  %22 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor22, align 8, !dbg !6551
  %event_handler = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %22, i32 0, i32 5, !dbg !6552
  %23 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler, align 8, !dbg !6552
  %24 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6553
  %call23 = call i32 %23(%struct.devfreq* %24, i32 2, i8* null) #9, !dbg !6550
  store i32 %call23, i32* %ret, align 4, !dbg !6554
  %25 = load i32, i32* %ret, align 4, !dbg !6555
  %tobool24 = icmp ne i32 %25, 0, !dbg !6555
  br i1 %tobool24, label %if.then25, label %if.end29, !dbg !6557

if.then25:                                        ; preds = %if.then18
  %26 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6558
  %27 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6558
  %governor26 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %27, i32 0, i32 4, !dbg !6558
  %28 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor26, align 8, !dbg !6558
  %name27 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %28, i32 0, i32 1, !dbg !6558
  %arraydecay28 = getelementptr inbounds [16 x i8], [16 x i8]* %name27, i64 0, i64 0, !dbg !6558
  %29 = load i32, i32* %ret, align 4, !dbg !6558
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.devfreq_add_governor, i64 0, i64 0), i8* %arraydecay28, i32 %29) #10, !dbg !6558
  br label %if.end29, !dbg !6560

if.end29:                                         ; preds = %if.then25, %if.then18
  br label %if.end30, !dbg !6561

if.end30:                                         ; preds = %if.end29, %if.then15
  %30 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor.addr, align 8, !dbg !6562
  %31 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6563
  %governor31 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %31, i32 0, i32 4, !dbg !6564
  store %struct.devfreq_governor* %30, %struct.devfreq_governor** %governor31, align 8, !dbg !6565
  %32 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6566
  %governor32 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %32, i32 0, i32 4, !dbg !6567
  %33 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor32, align 8, !dbg !6567
  %event_handler33 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %33, i32 0, i32 5, !dbg !6568
  %34 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler33, align 8, !dbg !6568
  %35 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6569
  %call34 = call i32 %34(%struct.devfreq* %35, i32 1, i8* null) #9, !dbg !6566
  store i32 %call34, i32* %ret, align 4, !dbg !6570
  %36 = load i32, i32* %ret, align 4, !dbg !6571
  %tobool35 = icmp ne i32 %36, 0, !dbg !6571
  br i1 %tobool35, label %if.then36, label %if.end40, !dbg !6573

if.then36:                                        ; preds = %if.end30
  %37 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6574
  %38 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6574
  %governor37 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %38, i32 0, i32 4, !dbg !6574
  %39 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor37, align 8, !dbg !6574
  %name38 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %39, i32 0, i32 1, !dbg !6574
  %arraydecay39 = getelementptr inbounds [16 x i8], [16 x i8]* %name38, i64 0, i64 0, !dbg !6574
  %40 = load i32, i32* %ret, align 4, !dbg !6574
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %37, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.devfreq_add_governor, i64 0, i64 0), i8* %arraydecay39, i32 %40) #10, !dbg !6574
  br label %if.end40, !dbg !6576

if.end40:                                         ; preds = %if.then36, %if.end30
  br label %if.end41, !dbg !6577

if.end41:                                         ; preds = %if.end40, %for.body
  br label %for.inc, !dbg !6578

for.inc:                                          ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i8** %__mptr42, metadata !6579, metadata !DIExpression()), !dbg !6581
  %41 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6581
  %node43 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %41, i32 0, i32 0, !dbg !6581
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node43, i32 0, i32 0, !dbg !6581
  %42 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6581
  %43 = bitcast %struct.list_head* %42 to i8*, !dbg !6581
  store i8* %43, i8** %__mptr42, align 8, !dbg !6581
  br label %do.body44, !dbg !6581

do.body44:                                        ; preds = %for.inc
  br label %do.end45, !dbg !6582

do.end45:                                         ; preds = %do.body44
  %44 = load i8*, i8** %__mptr42, align 8, !dbg !6581
  %add.ptr47 = getelementptr i8, i8* %44, i64 0, !dbg !6581
  %45 = bitcast i8* %add.ptr47 to %struct.devfreq*, !dbg !6581
  store %struct.devfreq* %45, %struct.devfreq** %tmp46, align 8, !dbg !6582
  %46 = load %struct.devfreq*, %struct.devfreq** %tmp46, align 8, !dbg !6581
  store %struct.devfreq* %46, %struct.devfreq** %devfreq, align 8, !dbg !6526
  br label %for.cond, !dbg !6526, !llvm.loop !6584

for.end:                                          ; preds = %for.cond
  br label %err_out, !dbg !6585

err_out:                                          ; preds = %for.end, %if.then3
  call void @llvm.dbg.label(metadata !6586), !dbg !6587
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !6588
  %47 = load i32, i32* %err, align 4, !dbg !6589
  store i32 %47, i32* %retval, align 4, !dbg !6590
  br label %return, !dbg !6590

return:                                           ; preds = %err_out, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !6591
  ret i32 %48, !dbg !6591
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.devfreq_governor* @find_devfreq_governor(i8* %name) #0 !dbg !6592 {
entry:
  %retval = alloca %struct.devfreq_governor*, align 8
  %name.addr = alloca i8*, align 8
  %tmp_governor = alloca %struct.devfreq_governor*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq_governor*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp13 = alloca %struct.devfreq_governor*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6593, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.declare(metadata %struct.devfreq_governor** %tmp_governor, metadata !6595, metadata !DIExpression()), !dbg !6596
  br label %do.body, !dbg !6597

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6598

do.end:                                           ; preds = %do.body
  %0 = load i8*, i8** %name.addr, align 8, !dbg !6600
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %0) #9, !dbg !6602
  br i1 %call, label %if.then, label %if.end, !dbg !6603

if.then:                                          ; preds = %do.end
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.find_devfreq_governor, i64 0, i64 0)) #10, !dbg !6604
  %call2 = call i8* @ERR_PTR(i64 -22) #9, !dbg !6606
  %1 = bitcast i8* %call2 to %struct.devfreq_governor*, !dbg !6606
  store %struct.devfreq_governor* %1, %struct.devfreq_governor** %retval, align 8, !dbg !6607
  br label %return, !dbg !6607

if.end:                                           ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6608, metadata !DIExpression()), !dbg !6611
  %2 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @devfreq_governor_list, i32 0, i32 0), align 8, !dbg !6611
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !6611
  store i8* %3, i8** %__mptr, align 8, !dbg !6611
  br label %do.body3, !dbg !6611

do.body3:                                         ; preds = %if.end
  br label %do.end4, !dbg !6612

do.end4:                                          ; preds = %do.body3
  %4 = load i8*, i8** %__mptr, align 8, !dbg !6611
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !6611
  %5 = bitcast i8* %add.ptr to %struct.devfreq_governor*, !dbg !6611
  store %struct.devfreq_governor* %5, %struct.devfreq_governor** %tmp, align 8, !dbg !6612
  %6 = load %struct.devfreq_governor*, %struct.devfreq_governor** %tmp, align 8, !dbg !6611
  store %struct.devfreq_governor* %6, %struct.devfreq_governor** %tmp_governor, align 8, !dbg !6614
  br label %for.cond, !dbg !6614

for.cond:                                         ; preds = %do.end12, %do.end4
  %7 = load %struct.devfreq_governor*, %struct.devfreq_governor** %tmp_governor, align 8, !dbg !6615
  %node = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %7, i32 0, i32 0, !dbg !6615
  %cmp = icmp eq %struct.list_head* %node, @devfreq_governor_list, !dbg !6615
  %lnot = xor i1 %cmp, true, !dbg !6615
  br i1 %lnot, label %for.body, label %for.end, !dbg !6614

for.body:                                         ; preds = %for.cond
  %8 = load %struct.devfreq_governor*, %struct.devfreq_governor** %tmp_governor, align 8, !dbg !6617
  %name5 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %8, i32 0, i32 1, !dbg !6620
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name5, i64 0, i64 0, !dbg !6617
  %9 = load i8*, i8** %name.addr, align 8, !dbg !6621
  %call6 = call i32 @strncmp(i8* %arraydecay, i8* %9, i64 16) #9, !dbg !6622
  %tobool = icmp ne i32 %call6, 0, !dbg !6622
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !6623

if.then7:                                         ; preds = %for.body
  %10 = load %struct.devfreq_governor*, %struct.devfreq_governor** %tmp_governor, align 8, !dbg !6624
  store %struct.devfreq_governor* %10, %struct.devfreq_governor** %retval, align 8, !dbg !6625
  br label %return, !dbg !6625

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !6626

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !6627, metadata !DIExpression()), !dbg !6629
  %11 = load %struct.devfreq_governor*, %struct.devfreq_governor** %tmp_governor, align 8, !dbg !6629
  %node10 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %11, i32 0, i32 0, !dbg !6629
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node10, i32 0, i32 0, !dbg !6629
  %12 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6629
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !6629
  store i8* %13, i8** %__mptr9, align 8, !dbg !6629
  br label %do.body11, !dbg !6629

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !6630

do.end12:                                         ; preds = %do.body11
  %14 = load i8*, i8** %__mptr9, align 8, !dbg !6629
  %add.ptr14 = getelementptr i8, i8* %14, i64 0, !dbg !6629
  %15 = bitcast i8* %add.ptr14 to %struct.devfreq_governor*, !dbg !6629
  store %struct.devfreq_governor* %15, %struct.devfreq_governor** %tmp13, align 8, !dbg !6630
  %16 = load %struct.devfreq_governor*, %struct.devfreq_governor** %tmp13, align 8, !dbg !6629
  store %struct.devfreq_governor* %16, %struct.devfreq_governor** %tmp_governor, align 8, !dbg !6615
  br label %for.cond, !dbg !6615, !llvm.loop !6632

for.end:                                          ; preds = %for.cond
  %call15 = call i8* @ERR_PTR(i64 -19) #9, !dbg !6634
  %17 = bitcast i8* %call15 to %struct.devfreq_governor*, !dbg !6634
  store %struct.devfreq_governor* %17, %struct.devfreq_governor** %retval, align 8, !dbg !6635
  br label %return, !dbg !6635

return:                                           ; preds = %for.end, %if.then7, %if.then
  %18 = load %struct.devfreq_governor*, %struct.devfreq_governor** %retval, align 8, !dbg !6636
  ret %struct.devfreq_governor* %18, !dbg !6636
}

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devfreq_remove_governor(%struct.devfreq_governor* %governor) #0 !dbg !6637 {
entry:
  %retval = alloca i32, align 4
  %governor.addr = alloca %struct.devfreq_governor*, align 8
  %g = alloca %struct.devfreq_governor*, align 8
  %devfreq = alloca %struct.devfreq*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %ret = alloca i32, align 4
  %dev = alloca %struct.device*, align 8
  %__mptr33 = alloca i8*, align 8
  %tmp37 = alloca %struct.devfreq*, align 8
  store %struct.devfreq_governor* %governor, %struct.devfreq_governor** %governor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq_governor** %governor.addr, metadata !6638, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.declare(metadata %struct.devfreq_governor** %g, metadata !6640, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !6642, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6644, metadata !DIExpression()), !dbg !6645
  store i32 0, i32* %err, align 4, !dbg !6645
  %0 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor.addr, align 8, !dbg !6646
  %tobool = icmp ne %struct.devfreq_governor* %0, null, !dbg !6646
  br i1 %tobool, label %if.end, label %if.then, !dbg !6648

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.devfreq_remove_governor, i64 0, i64 0)) #10, !dbg !6649
  store i32 -22, i32* %retval, align 4, !dbg !6651
  br label %return, !dbg !6651

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !6652
  %1 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor.addr, align 8, !dbg !6653
  %name = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %1, i32 0, i32 1, !dbg !6654
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !6653
  %call1 = call %struct.devfreq_governor* @find_devfreq_governor(i8* %arraydecay) #9, !dbg !6655
  store %struct.devfreq_governor* %call1, %struct.devfreq_governor** %g, align 8, !dbg !6656
  %2 = load %struct.devfreq_governor*, %struct.devfreq_governor** %g, align 8, !dbg !6657
  %3 = bitcast %struct.devfreq_governor* %2 to i8*, !dbg !6657
  %call2 = call zeroext i1 @IS_ERR(i8* %3) #9, !dbg !6659
  br i1 %call2, label %if.then3, label %if.end8, !dbg !6660

if.then3:                                         ; preds = %if.end
  %4 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor.addr, align 8, !dbg !6661
  %name4 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %4, i32 0, i32 1, !dbg !6661
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %name4, i64 0, i64 0, !dbg !6661
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.devfreq_remove_governor, i64 0, i64 0), i8* %arraydecay5) #10, !dbg !6661
  %5 = load %struct.devfreq_governor*, %struct.devfreq_governor** %g, align 8, !dbg !6663
  %6 = bitcast %struct.devfreq_governor* %5 to i8*, !dbg !6663
  %call7 = call i64 @PTR_ERR(i8* %6) #9, !dbg !6664
  %conv = trunc i64 %call7 to i32, !dbg !6664
  store i32 %conv, i32* %err, align 4, !dbg !6665
  br label %err_out, !dbg !6666

if.end8:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6667, metadata !DIExpression()), !dbg !6670
  %7 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @devfreq_list, i32 0, i32 0), align 8, !dbg !6670
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !6670
  store i8* %8, i8** %__mptr, align 8, !dbg !6670
  br label %do.body, !dbg !6670

do.body:                                          ; preds = %if.end8
  br label %do.end, !dbg !6671

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr, align 8, !dbg !6670
  %add.ptr = getelementptr i8, i8* %9, i64 0, !dbg !6670
  %10 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !6670
  store %struct.devfreq* %10, %struct.devfreq** %tmp, align 8, !dbg !6671
  %11 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !6670
  store %struct.devfreq* %11, %struct.devfreq** %devfreq, align 8, !dbg !6673
  br label %for.cond, !dbg !6673

for.cond:                                         ; preds = %do.end36, %do.end
  %12 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6674
  %node = getelementptr inbounds %struct.devfreq, %struct.devfreq* %12, i32 0, i32 0, !dbg !6674
  %cmp = icmp eq %struct.list_head* %node, @devfreq_list, !dbg !6674
  %lnot = xor i1 %cmp, true, !dbg !6674
  br i1 %lnot, label %for.body, label %for.end, !dbg !6673

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6676, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !6679, metadata !DIExpression()), !dbg !6680
  %13 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6681
  %dev10 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %13, i32 0, i32 2, !dbg !6682
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev10, i32 0, i32 1, !dbg !6683
  %14 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6683
  store %struct.device* %14, %struct.device** %dev, align 8, !dbg !6680
  %15 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6684
  %governor_name = getelementptr inbounds %struct.devfreq, %struct.devfreq* %15, i32 0, i32 5, !dbg !6686
  %arraydecay11 = getelementptr inbounds [16 x i8], [16 x i8]* %governor_name, i64 0, i64 0, !dbg !6684
  %16 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor.addr, align 8, !dbg !6687
  %name12 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %16, i32 0, i32 1, !dbg !6688
  %arraydecay13 = getelementptr inbounds [16 x i8], [16 x i8]* %name12, i64 0, i64 0, !dbg !6687
  %call14 = call i32 @strncmp(i8* %arraydecay11, i8* %arraydecay13, i64 16) #9, !dbg !6689
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6689
  br i1 %tobool15, label %if.end32, label %if.then16, !dbg !6690

if.then16:                                        ; preds = %for.body
  %17 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6691
  %governor17 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %17, i32 0, i32 4, !dbg !6694
  %18 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor17, align 8, !dbg !6694
  %tobool18 = icmp ne %struct.devfreq_governor* %18, null, !dbg !6691
  br i1 %tobool18, label %if.end22, label %if.then19, !dbg !6695

if.then19:                                        ; preds = %if.then16
  %19 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6696
  %20 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor.addr, align 8, !dbg !6696
  %name20 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %20, i32 0, i32 1, !dbg !6696
  %arraydecay21 = getelementptr inbounds [16 x i8], [16 x i8]* %name20, i64 0, i64 0, !dbg !6696
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %19, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.devfreq_remove_governor, i64 0, i64 0), i8* %arraydecay21) #10, !dbg !6696
  br label %for.inc, !dbg !6698

if.end22:                                         ; preds = %if.then16
  %21 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6699
  %governor23 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %21, i32 0, i32 4, !dbg !6700
  %22 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor23, align 8, !dbg !6700
  %event_handler = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %22, i32 0, i32 5, !dbg !6701
  %23 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler, align 8, !dbg !6701
  %24 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6702
  %call24 = call i32 %23(%struct.devfreq* %24, i32 2, i8* null) #9, !dbg !6699
  store i32 %call24, i32* %ret, align 4, !dbg !6703
  %25 = load i32, i32* %ret, align 4, !dbg !6704
  %tobool25 = icmp ne i32 %25, 0, !dbg !6704
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !6706

if.then26:                                        ; preds = %if.end22
  %26 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6707
  %27 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6707
  %governor27 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %27, i32 0, i32 4, !dbg !6707
  %28 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor27, align 8, !dbg !6707
  %name28 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %28, i32 0, i32 1, !dbg !6707
  %arraydecay29 = getelementptr inbounds [16 x i8], [16 x i8]* %name28, i64 0, i64 0, !dbg !6707
  %29 = load i32, i32* %ret, align 4, !dbg !6707
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %26, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.devfreq_remove_governor, i64 0, i64 0), i8* %arraydecay29, i32 %29) #10, !dbg !6707
  br label %if.end30, !dbg !6709

if.end30:                                         ; preds = %if.then26, %if.end22
  %30 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6710
  %governor31 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %30, i32 0, i32 4, !dbg !6711
  store %struct.devfreq_governor* null, %struct.devfreq_governor** %governor31, align 8, !dbg !6712
  br label %if.end32, !dbg !6713

if.end32:                                         ; preds = %if.end30, %for.body
  br label %for.inc, !dbg !6714

for.inc:                                          ; preds = %if.end32, %if.then19
  call void @llvm.dbg.declare(metadata i8** %__mptr33, metadata !6715, metadata !DIExpression()), !dbg !6717
  %31 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !6717
  %node34 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %31, i32 0, i32 0, !dbg !6717
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node34, i32 0, i32 0, !dbg !6717
  %32 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6717
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !6717
  store i8* %33, i8** %__mptr33, align 8, !dbg !6717
  br label %do.body35, !dbg !6717

do.body35:                                        ; preds = %for.inc
  br label %do.end36, !dbg !6718

do.end36:                                         ; preds = %do.body35
  %34 = load i8*, i8** %__mptr33, align 8, !dbg !6717
  %add.ptr38 = getelementptr i8, i8* %34, i64 0, !dbg !6717
  %35 = bitcast i8* %add.ptr38 to %struct.devfreq*, !dbg !6717
  store %struct.devfreq* %35, %struct.devfreq** %tmp37, align 8, !dbg !6718
  %36 = load %struct.devfreq*, %struct.devfreq** %tmp37, align 8, !dbg !6717
  store %struct.devfreq* %36, %struct.devfreq** %devfreq, align 8, !dbg !6674
  br label %for.cond, !dbg !6674, !llvm.loop !6720

for.end:                                          ; preds = %for.cond
  %37 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor.addr, align 8, !dbg !6722
  %node39 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %37, i32 0, i32 0, !dbg !6723
  call void @list_del(%struct.list_head* %node39) #9, !dbg !6724
  br label %err_out, !dbg !6724

err_out:                                          ; preds = %for.end, %if.then3
  call void @llvm.dbg.label(metadata !6725), !dbg !6726
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !6727
  %38 = load i32, i32* %err, align 4, !dbg !6728
  store i32 %38, i32* %retval, align 4, !dbg !6729
  br label %return, !dbg !6729

return:                                           ; preds = %err_out, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !6730
  ret i32 %39, !dbg !6730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !6731 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6732, metadata !DIExpression()), !dbg !6733
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6734
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !6735
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6736
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6737
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !6738
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6739
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !6740
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !6741
  ret void, !dbg !6742
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @devfreq_init() #5 section ".init.text" !dbg !3859 {
entry:
  %retval = alloca i32, align 4
  %tmp = alloca %struct.class*, align 8
  %call = call %struct.class* @__class_create(%struct.module* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), %struct.lock_class_key* @devfreq_init.__key) #9, !dbg !6743
  store %struct.class* %call, %struct.class** %tmp, align 8, !dbg !6743
  %0 = load %struct.class*, %struct.class** %tmp, align 8, !dbg !6743
  store %struct.class* %0, %struct.class** @devfreq_class, align 8, !dbg !6745
  %1 = load %struct.class*, %struct.class** @devfreq_class, align 8, !dbg !6746
  %2 = bitcast %struct.class* %1 to i8*, !dbg !6746
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #9, !dbg !6748
  br i1 %call1, label %if.then, label %if.end, !dbg !6749

if.then:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !6750
  %3 = load %struct.class*, %struct.class** @devfreq_class, align 8, !dbg !6752
  %4 = bitcast %struct.class* %3 to i8*, !dbg !6752
  %call3 = call i64 @PTR_ERR(i8* %4) #9, !dbg !6753
  %conv = trunc i64 %call3 to i32, !dbg !6753
  store i32 %conv, i32* %retval, align 4, !dbg !6754
  br label %return, !dbg !6754

if.end:                                           ; preds = %entry
  %call4 = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 262158, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0)) #9, !dbg !6755
  store %struct.workqueue_struct* %call4, %struct.workqueue_struct** @devfreq_wq, align 8, !dbg !6756
  %5 = load %struct.workqueue_struct*, %struct.workqueue_struct** @devfreq_wq, align 8, !dbg !6757
  %tobool = icmp ne %struct.workqueue_struct* %5, null, !dbg !6757
  br i1 %tobool, label %if.end7, label %if.then5, !dbg !6759

if.then5:                                         ; preds = %if.end
  %6 = load %struct.class*, %struct.class** @devfreq_class, align 8, !dbg !6760
  call void @class_destroy(%struct.class* %6) #9, !dbg !6762
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !6763
  store i32 -12, i32* %retval, align 4, !dbg !6764
  br label %return, !dbg !6764

if.end7:                                          ; preds = %if.end
  %7 = load %struct.class*, %struct.class** @devfreq_class, align 8, !dbg !6765
  %dev_groups = getelementptr inbounds %struct.class, %struct.class* %7, i32 0, i32 3, !dbg !6766
  store %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @devfreq_groups, i64 0, i64 0), %struct.attribute_group*** %dev_groups, align 8, !dbg !6767
  %call8 = call %struct.dentry* @debugfs_create_dir(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), %struct.dentry* null) #9, !dbg !6768
  store %struct.dentry* %call8, %struct.dentry** @devfreq_debugfs, align 8, !dbg !6769
  %8 = load %struct.dentry*, %struct.dentry** @devfreq_debugfs, align 8, !dbg !6770
  %call9 = call %struct.dentry* @debugfs_create_file(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i64 0, i64 0), i16 zeroext 292, %struct.dentry* %8, i8* null, %struct.file_operations* @devfreq_summary_fops) #9, !dbg !6771
  store i32 0, i32* %retval, align 4, !dbg !6772
  br label %return, !dbg !6772

return:                                           ; preds = %if.end7, %if.then5, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6773
  ret i32 %9, !dbg !6773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dev_pm_opp* @devfreq_recommended_opp(%struct.device* %dev, i64* %freq, i32 %flags) #0 !dbg !6774 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %freq.addr = alloca i64*, align 8
  %flags.addr = alloca i32, align 4
  %opp = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6777, metadata !DIExpression()), !dbg !6778
  store i64* %freq, i64** %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %freq.addr, metadata !6779, metadata !DIExpression()), !dbg !6780
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6781, metadata !DIExpression()), !dbg !6782
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !6783, metadata !DIExpression()), !dbg !6784
  %0 = load i32, i32* %flags.addr, align 4, !dbg !6785
  %and = and i32 %0, 1, !dbg !6787
  %tobool = icmp ne i32 %and, 0, !dbg !6787
  br i1 %tobool, label %if.then, label %if.else, !dbg !6788

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6789
  %2 = load i64*, i64** %freq.addr, align 8, !dbg !6791
  %call = call %struct.dev_pm_opp* @dev_pm_opp_find_freq_floor(%struct.device* %1, i64* %2) #9, !dbg !6792
  store %struct.dev_pm_opp* %call, %struct.dev_pm_opp** %opp, align 8, !dbg !6793
  %3 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6794
  %call1 = call i8* @ERR_PTR(i64 -34) #9, !dbg !6796
  %4 = bitcast i8* %call1 to %struct.dev_pm_opp*, !dbg !6796
  %cmp = icmp eq %struct.dev_pm_opp* %3, %4, !dbg !6797
  br i1 %cmp, label %if.then2, label %if.end, !dbg !6798

if.then2:                                         ; preds = %if.then
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6799
  %6 = load i64*, i64** %freq.addr, align 8, !dbg !6800
  %call3 = call %struct.dev_pm_opp* @dev_pm_opp_find_freq_ceil(%struct.device* %5, i64* %6) #9, !dbg !6801
  store %struct.dev_pm_opp* %call3, %struct.dev_pm_opp** %opp, align 8, !dbg !6802
  br label %if.end, !dbg !6803

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end10, !dbg !6804

if.else:                                          ; preds = %entry
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6805
  %8 = load i64*, i64** %freq.addr, align 8, !dbg !6807
  %call4 = call %struct.dev_pm_opp* @dev_pm_opp_find_freq_ceil(%struct.device* %7, i64* %8) #9, !dbg !6808
  store %struct.dev_pm_opp* %call4, %struct.dev_pm_opp** %opp, align 8, !dbg !6809
  %9 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6810
  %call5 = call i8* @ERR_PTR(i64 -34) #9, !dbg !6812
  %10 = bitcast i8* %call5 to %struct.dev_pm_opp*, !dbg !6812
  %cmp6 = icmp eq %struct.dev_pm_opp* %9, %10, !dbg !6813
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !6814

if.then7:                                         ; preds = %if.else
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6815
  %12 = load i64*, i64** %freq.addr, align 8, !dbg !6816
  %call8 = call %struct.dev_pm_opp* @dev_pm_opp_find_freq_floor(%struct.device* %11, i64* %12) #9, !dbg !6817
  store %struct.dev_pm_opp* %call8, %struct.dev_pm_opp** %opp, align 8, !dbg !6818
  br label %if.end9, !dbg !6819

if.end9:                                          ; preds = %if.then7, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %13 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6820
  ret %struct.dev_pm_opp* %13, !dbg !6821
}

; Function Attrs: noredzone
declare dso_local %struct.dev_pm_opp* @dev_pm_opp_find_freq_floor(%struct.device*, i64*) #3

; Function Attrs: noredzone
declare dso_local %struct.dev_pm_opp* @dev_pm_opp_find_freq_ceil(%struct.device*, i64*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devfreq_register_opp_notifier(%struct.device* %dev, %struct.devfreq* %devfreq) #0 !dbg !6822 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %devfreq.addr = alloca %struct.devfreq*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6825, metadata !DIExpression()), !dbg !6826
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !6827, metadata !DIExpression()), !dbg !6828
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6829
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6830
  %nb = getelementptr inbounds %struct.devfreq, %struct.devfreq* %1, i32 0, i32 6, !dbg !6831
  %call = call i32 @dev_pm_opp_register_notifier(%struct.device* %0, %struct.notifier_block* %nb) #9, !dbg !6832
  ret i32 %call, !dbg !6833
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_opp_register_notifier(%struct.device*, %struct.notifier_block*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devfreq_unregister_opp_notifier(%struct.device* %dev, %struct.devfreq* %devfreq) #0 !dbg !6834 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %devfreq.addr = alloca %struct.devfreq*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6835, metadata !DIExpression()), !dbg !6836
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !6837, metadata !DIExpression()), !dbg !6838
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6839
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6840
  %nb = getelementptr inbounds %struct.devfreq, %struct.devfreq* %1, i32 0, i32 6, !dbg !6841
  %call = call i32 @dev_pm_opp_unregister_notifier(%struct.device* %0, %struct.notifier_block* %nb) #9, !dbg !6842
  ret i32 %call, !dbg !6843
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_opp_unregister_notifier(%struct.device*, %struct.notifier_block*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devm_devfreq_register_opp_notifier(%struct.device* %dev, %struct.devfreq* %devfreq) #0 !dbg !6844 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %ptr = alloca %struct.devfreq**, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.declare(metadata %struct.devfreq*** %ptr, metadata !6849, metadata !DIExpression()), !dbg !6850
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6851, metadata !DIExpression()), !dbg !6852
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_devfreq_opp_release, i64 8, i32 3264) #9, !dbg !6853
  %0 = bitcast i8* %call to %struct.devfreq**, !dbg !6853
  store %struct.devfreq** %0, %struct.devfreq*** %ptr, align 8, !dbg !6854
  %1 = load %struct.devfreq**, %struct.devfreq*** %ptr, align 8, !dbg !6855
  %tobool = icmp ne %struct.devfreq** %1, null, !dbg !6855
  br i1 %tobool, label %if.end, label %if.then, !dbg !6857

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6858
  br label %return, !dbg !6858

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6859
  %3 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6860
  %call1 = call i32 @devfreq_register_opp_notifier(%struct.device* %2, %struct.devfreq* %3) #9, !dbg !6861
  store i32 %call1, i32* %ret, align 4, !dbg !6862
  %4 = load i32, i32* %ret, align 4, !dbg !6863
  %tobool2 = icmp ne i32 %4, 0, !dbg !6863
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6865

if.then3:                                         ; preds = %if.end
  %5 = load %struct.devfreq**, %struct.devfreq*** %ptr, align 8, !dbg !6866
  %6 = bitcast %struct.devfreq** %5 to i8*, !dbg !6866
  call void @devres_free(i8* %6) #9, !dbg !6868
  %7 = load i32, i32* %ret, align 4, !dbg !6869
  store i32 %7, i32* %retval, align 4, !dbg !6870
  br label %return, !dbg !6870

if.end4:                                          ; preds = %if.end
  %8 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6871
  %9 = load %struct.devfreq**, %struct.devfreq*** %ptr, align 8, !dbg !6872
  store %struct.devfreq* %8, %struct.devfreq** %9, align 8, !dbg !6873
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6874
  %11 = load %struct.devfreq**, %struct.devfreq*** %ptr, align 8, !dbg !6875
  %12 = bitcast %struct.devfreq** %11 to i8*, !dbg !6875
  call void @devres_add(%struct.device* %10, i8* %12) #9, !dbg !6876
  store i32 0, i32* %retval, align 4, !dbg !6877
  br label %return, !dbg !6877

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !6878
  ret i32 %13, !dbg !6878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_devfreq_opp_release(%struct.device* %dev, i8* %res) #0 !dbg !6879 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6880, metadata !DIExpression()), !dbg !6881
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6882, metadata !DIExpression()), !dbg !6883
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6884
  %1 = load i8*, i8** %res.addr, align 8, !dbg !6885
  %2 = bitcast i8* %1 to %struct.devfreq**, !dbg !6886
  %3 = load %struct.devfreq*, %struct.devfreq** %2, align 8, !dbg !6887
  %call = call i32 @devfreq_unregister_opp_notifier(%struct.device* %0, %struct.devfreq* %3) #9, !dbg !6888
  ret void, !dbg !6889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devm_devfreq_unregister_opp_notifier(%struct.device* %dev, %struct.devfreq* %devfreq) #0 !dbg !6890 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6891, metadata !DIExpression()), !dbg !6892
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !6893, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6895, metadata !DIExpression()), !dbg !6897
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6897
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6897
  %2 = bitcast %struct.devfreq* %1 to i8*, !dbg !6897
  %call = call i32 @devres_release(%struct.device* %0, void (%struct.device*, i8*)* @devm_devfreq_opp_release, i32 (%struct.device*, i8*, i8*)* @devm_devfreq_dev_match, i8* %2) #9, !dbg !6897
  %tobool = icmp ne i32 %call, 0, !dbg !6897
  %lnot = xor i1 %tobool, true, !dbg !6897
  %lnot1 = xor i1 %lnot, true, !dbg !6897
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6897
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6897
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !6898
  %tobool2 = icmp ne i32 %3, 0, !dbg !6898
  %lnot3 = xor i1 %tobool2, true, !dbg !6898
  %lnot5 = xor i1 %lnot3, true, !dbg !6898
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !6898
  %conv = sext i32 %lnot.ext6 to i64, !dbg !6898
  %tobool7 = icmp ne i64 %conv, 0, !dbg !6898
  br i1 %tobool7, label %if.then, label %if.end, !dbg !6897

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6898

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !6900

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !6902

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !6900

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i32 1996, i32 2305, i64 12) #11, !dbg !6904, !srcloc !6906
  br label %do.end10, !dbg !6904

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 253) #11, !dbg !6907, !srcloc !6909
  br label %do.body11, !dbg !6900

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !6910

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !6900

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !6900

if.end:                                           ; preds = %do.end13, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !6897
  %tobool14 = icmp ne i32 %4, 0, !dbg !6897
  %lnot15 = xor i1 %tobool14, true, !dbg !6897
  %lnot17 = xor i1 %lnot15, true, !dbg !6897
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !6897
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !6897
  store i64 %conv19, i64* %tmp, align 8, !dbg !6898
  %5 = load i64, i64* %tmp, align 8, !dbg !6897
  ret void, !dbg !6912
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devfreq_register_notifier(%struct.devfreq* %devfreq, %struct.notifier_block* %nb, i32 %list) #0 !dbg !6913 {
entry:
  %retval = alloca i32, align 4
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  %list.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !6916, metadata !DIExpression()), !dbg !6917
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !6918, metadata !DIExpression()), !dbg !6919
  store i32 %list, i32* %list.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list.addr, metadata !6920, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6922, metadata !DIExpression()), !dbg !6923
  store i32 0, i32* %ret, align 4, !dbg !6923
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6924
  %tobool = icmp ne %struct.devfreq* %0, null, !dbg !6924
  br i1 %tobool, label %if.end, label %if.then, !dbg !6926

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6927
  br label %return, !dbg !6927

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %list.addr, align 4, !dbg !6928
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !6929

sw.bb:                                            ; preds = %if.end
  %2 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6930
  %transition_notifier_list = getelementptr inbounds %struct.devfreq, %struct.devfreq* %2, i32 0, i32 20, !dbg !6932
  %3 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !6933
  %call = call i32 @srcu_notifier_chain_register(%struct.srcu_notifier_head* %transition_notifier_list, %struct.notifier_block* %3) #9, !dbg !6934
  store i32 %call, i32* %ret, align 4, !dbg !6935
  br label %sw.epilog, !dbg !6936

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %ret, align 4, !dbg !6937
  br label %sw.epilog, !dbg !6938

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %4 = load i32, i32* %ret, align 4, !dbg !6939
  store i32 %4, i32* %retval, align 4, !dbg !6940
  br label %return, !dbg !6940

return:                                           ; preds = %sw.epilog, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6941
  ret i32 %5, !dbg !6941
}

; Function Attrs: noredzone
declare dso_local i32 @srcu_notifier_chain_register(%struct.srcu_notifier_head*, %struct.notifier_block*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devfreq_unregister_notifier(%struct.devfreq* %devfreq, %struct.notifier_block* %nb, i32 %list) #0 !dbg !6942 {
entry:
  %retval = alloca i32, align 4
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  %list.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !6943, metadata !DIExpression()), !dbg !6944
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !6945, metadata !DIExpression()), !dbg !6946
  store i32 %list, i32* %list.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list.addr, metadata !6947, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6949, metadata !DIExpression()), !dbg !6950
  store i32 0, i32* %ret, align 4, !dbg !6950
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6951
  %tobool = icmp ne %struct.devfreq* %0, null, !dbg !6951
  br i1 %tobool, label %if.end, label %if.then, !dbg !6953

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6954
  br label %return, !dbg !6954

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %list.addr, align 4, !dbg !6955
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !6956

sw.bb:                                            ; preds = %if.end
  %2 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6957
  %transition_notifier_list = getelementptr inbounds %struct.devfreq, %struct.devfreq* %2, i32 0, i32 20, !dbg !6959
  %3 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !6960
  %call = call i32 @srcu_notifier_chain_unregister(%struct.srcu_notifier_head* %transition_notifier_list, %struct.notifier_block* %3) #9, !dbg !6961
  store i32 %call, i32* %ret, align 4, !dbg !6962
  br label %sw.epilog, !dbg !6963

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %ret, align 4, !dbg !6964
  br label %sw.epilog, !dbg !6965

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %4 = load i32, i32* %ret, align 4, !dbg !6966
  store i32 %4, i32* %retval, align 4, !dbg !6967
  br label %return, !dbg !6967

return:                                           ; preds = %sw.epilog, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6968
  ret i32 %5, !dbg !6968
}

; Function Attrs: noredzone
declare dso_local i32 @srcu_notifier_chain_unregister(%struct.srcu_notifier_head*, %struct.notifier_block*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devm_devfreq_register_notifier(%struct.device* %dev, %struct.devfreq* %devfreq, %struct.notifier_block* %nb, i32 %list) #0 !dbg !6969 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  %list.addr = alloca i32, align 4
  %ptr = alloca %struct.devfreq_notifier_devres*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6972, metadata !DIExpression()), !dbg !6973
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !6974, metadata !DIExpression()), !dbg !6975
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !6976, metadata !DIExpression()), !dbg !6977
  store i32 %list, i32* %list.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list.addr, metadata !6978, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.declare(metadata %struct.devfreq_notifier_devres** %ptr, metadata !6980, metadata !DIExpression()), !dbg !6987
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6988, metadata !DIExpression()), !dbg !6989
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_devfreq_notifier_release, i64 24, i32 3264) #9, !dbg !6990
  %0 = bitcast i8* %call to %struct.devfreq_notifier_devres*, !dbg !6990
  store %struct.devfreq_notifier_devres* %0, %struct.devfreq_notifier_devres** %ptr, align 8, !dbg !6991
  %1 = load %struct.devfreq_notifier_devres*, %struct.devfreq_notifier_devres** %ptr, align 8, !dbg !6992
  %tobool = icmp ne %struct.devfreq_notifier_devres* %1, null, !dbg !6992
  br i1 %tobool, label %if.end, label %if.then, !dbg !6994

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6995
  br label %return, !dbg !6995

if.end:                                           ; preds = %entry
  %2 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !6996
  %3 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !6997
  %4 = load i32, i32* %list.addr, align 4, !dbg !6998
  %call1 = call i32 @devfreq_register_notifier(%struct.devfreq* %2, %struct.notifier_block* %3, i32 %4) #9, !dbg !6999
  store i32 %call1, i32* %ret, align 4, !dbg !7000
  %5 = load i32, i32* %ret, align 4, !dbg !7001
  %tobool2 = icmp ne i32 %5, 0, !dbg !7001
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7003

if.then3:                                         ; preds = %if.end
  %6 = load %struct.devfreq_notifier_devres*, %struct.devfreq_notifier_devres** %ptr, align 8, !dbg !7004
  %7 = bitcast %struct.devfreq_notifier_devres* %6 to i8*, !dbg !7004
  call void @devres_free(i8* %7) #9, !dbg !7006
  %8 = load i32, i32* %ret, align 4, !dbg !7007
  store i32 %8, i32* %retval, align 4, !dbg !7008
  br label %return, !dbg !7008

if.end4:                                          ; preds = %if.end
  %9 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !7009
  %10 = load %struct.devfreq_notifier_devres*, %struct.devfreq_notifier_devres** %ptr, align 8, !dbg !7010
  %devfreq5 = getelementptr inbounds %struct.devfreq_notifier_devres, %struct.devfreq_notifier_devres* %10, i32 0, i32 0, !dbg !7011
  store %struct.devfreq* %9, %struct.devfreq** %devfreq5, align 8, !dbg !7012
  %11 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !7013
  %12 = load %struct.devfreq_notifier_devres*, %struct.devfreq_notifier_devres** %ptr, align 8, !dbg !7014
  %nb6 = getelementptr inbounds %struct.devfreq_notifier_devres, %struct.devfreq_notifier_devres* %12, i32 0, i32 1, !dbg !7015
  store %struct.notifier_block* %11, %struct.notifier_block** %nb6, align 8, !dbg !7016
  %13 = load i32, i32* %list.addr, align 4, !dbg !7017
  %14 = load %struct.devfreq_notifier_devres*, %struct.devfreq_notifier_devres** %ptr, align 8, !dbg !7018
  %list7 = getelementptr inbounds %struct.devfreq_notifier_devres, %struct.devfreq_notifier_devres* %14, i32 0, i32 2, !dbg !7019
  store i32 %13, i32* %list7, align 8, !dbg !7020
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7021
  %16 = load %struct.devfreq_notifier_devres*, %struct.devfreq_notifier_devres** %ptr, align 8, !dbg !7022
  %17 = bitcast %struct.devfreq_notifier_devres* %16 to i8*, !dbg !7022
  call void @devres_add(%struct.device* %15, i8* %17) #9, !dbg !7023
  store i32 0, i32* %retval, align 4, !dbg !7024
  br label %return, !dbg !7024

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !7025
  ret i32 %18, !dbg !7025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_devfreq_notifier_release(%struct.device* %dev, i8* %res) #0 !dbg !7026 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %this = alloca %struct.devfreq_notifier_devres*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7027, metadata !DIExpression()), !dbg !7028
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !7029, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.declare(metadata %struct.devfreq_notifier_devres** %this, metadata !7031, metadata !DIExpression()), !dbg !7032
  %0 = load i8*, i8** %res.addr, align 8, !dbg !7033
  %1 = bitcast i8* %0 to %struct.devfreq_notifier_devres*, !dbg !7033
  store %struct.devfreq_notifier_devres* %1, %struct.devfreq_notifier_devres** %this, align 8, !dbg !7032
  %2 = load %struct.devfreq_notifier_devres*, %struct.devfreq_notifier_devres** %this, align 8, !dbg !7034
  %devfreq = getelementptr inbounds %struct.devfreq_notifier_devres, %struct.devfreq_notifier_devres* %2, i32 0, i32 0, !dbg !7035
  %3 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !7035
  %4 = load %struct.devfreq_notifier_devres*, %struct.devfreq_notifier_devres** %this, align 8, !dbg !7036
  %nb = getelementptr inbounds %struct.devfreq_notifier_devres, %struct.devfreq_notifier_devres* %4, i32 0, i32 1, !dbg !7037
  %5 = load %struct.notifier_block*, %struct.notifier_block** %nb, align 8, !dbg !7037
  %6 = load %struct.devfreq_notifier_devres*, %struct.devfreq_notifier_devres** %this, align 8, !dbg !7038
  %list = getelementptr inbounds %struct.devfreq_notifier_devres, %struct.devfreq_notifier_devres* %6, i32 0, i32 2, !dbg !7039
  %7 = load i32, i32* %list, align 8, !dbg !7039
  %call = call i32 @devfreq_unregister_notifier(%struct.devfreq* %3, %struct.notifier_block* %5, i32 %7) #9, !dbg !7040
  ret void, !dbg !7041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devm_devfreq_unregister_notifier(%struct.device* %dev, %struct.devfreq* %devfreq, %struct.notifier_block* %nb, i32 %list) #0 !dbg !7042 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  %list.addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7045, metadata !DIExpression()), !dbg !7046
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !7047, metadata !DIExpression()), !dbg !7048
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !7049, metadata !DIExpression()), !dbg !7050
  store i32 %list, i32* %list.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list.addr, metadata !7051, metadata !DIExpression()), !dbg !7052
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7053, metadata !DIExpression()), !dbg !7055
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7055
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !7055
  %2 = bitcast %struct.devfreq* %1 to i8*, !dbg !7055
  %call = call i32 @devres_release(%struct.device* %0, void (%struct.device*, i8*)* @devm_devfreq_notifier_release, i32 (%struct.device*, i8*, i8*)* @devm_devfreq_dev_match, i8* %2) #9, !dbg !7055
  %tobool = icmp ne i32 %call, 0, !dbg !7055
  %lnot = xor i1 %tobool, true, !dbg !7055
  %lnot1 = xor i1 %lnot, true, !dbg !7055
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7055
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7055
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !7056
  %tobool2 = icmp ne i32 %3, 0, !dbg !7056
  %lnot3 = xor i1 %tobool2, true, !dbg !7056
  %lnot5 = xor i1 %lnot3, true, !dbg !7056
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !7056
  %conv = sext i32 %lnot.ext6 to i64, !dbg !7056
  %tobool7 = icmp ne i64 %conv, 0, !dbg !7056
  br i1 %tobool7, label %if.then, label %if.end, !dbg !7055

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7056

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !7058

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !7060

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !7058

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i32 2119, i32 2305, i64 12) #11, !dbg !7062, !srcloc !7064
  br label %do.end10, !dbg !7062

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 254) #11, !dbg !7065, !srcloc !7067
  br label %do.body11, !dbg !7058

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !7068

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !7058

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !7058

if.end:                                           ; preds = %do.end13, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !7055
  %tobool14 = icmp ne i32 %4, 0, !dbg !7055
  %lnot15 = xor i1 %tobool14, true, !dbg !7055
  %lnot17 = xor i1 %lnot15, true, !dbg !7055
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !7055
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !7055
  store i64 %conv19, i64* %tmp, align 8, !dbg !7056
  %5 = load i64, i64* %tmp, align 8, !dbg !7055
  ret void, !dbg !7070
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_qos_read_value(%struct.device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devfreq_notify_transition(%struct.devfreq* %devfreq, %struct.devfreq_freqs* %freqs, i32 %state) #0 !dbg !7071 {
entry:
  %retval = alloca i32, align 4
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %freqs.addr = alloca %struct.devfreq_freqs*, align 8
  %state.addr = alloca i32, align 4
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !7075, metadata !DIExpression()), !dbg !7076
  store %struct.devfreq_freqs* %freqs, %struct.devfreq_freqs** %freqs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq_freqs** %freqs.addr, metadata !7077, metadata !DIExpression()), !dbg !7078
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !7079, metadata !DIExpression()), !dbg !7080
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !7081
  %tobool = icmp ne %struct.devfreq* %0, null, !dbg !7081
  br i1 %tobool, label %if.end, label %if.then, !dbg !7083

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7084
  br label %return, !dbg !7084

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %state.addr, align 4, !dbg !7085
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !7086

sw.bb:                                            ; preds = %if.end
  %2 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !7087
  %transition_notifier_list = getelementptr inbounds %struct.devfreq, %struct.devfreq* %2, i32 0, i32 20, !dbg !7089
  %3 = load %struct.devfreq_freqs*, %struct.devfreq_freqs** %freqs.addr, align 8, !dbg !7090
  %4 = bitcast %struct.devfreq_freqs* %3 to i8*, !dbg !7090
  %call = call i32 @srcu_notifier_call_chain(%struct.srcu_notifier_head* %transition_notifier_list, i64 0, i8* %4) #9, !dbg !7091
  br label %sw.epilog, !dbg !7092

sw.bb1:                                           ; preds = %if.end
  %5 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !7093
  %transition_notifier_list2 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 20, !dbg !7094
  %6 = load %struct.devfreq_freqs*, %struct.devfreq_freqs** %freqs.addr, align 8, !dbg !7095
  %7 = bitcast %struct.devfreq_freqs* %6 to i8*, !dbg !7095
  %call3 = call i32 @srcu_notifier_call_chain(%struct.srcu_notifier_head* %transition_notifier_list2, i64 1, i8* %7) #9, !dbg !7096
  br label %sw.epilog, !dbg !7097

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7098
  br label %return, !dbg !7098

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !7099
  br label %return, !dbg !7099

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7100
  ret i32 %8, !dbg !7100
}

; Function Attrs: noredzone
declare dso_local i32 @srcu_notifier_call_chain(%struct.srcu_notifier_head*, i64, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_devfreq_monitor(%struct.devfreq* %devfreq) #0 !dbg !7101 {
entry:
  %devfreq.addr = alloca %struct.devfreq*, align 8
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !7103, metadata !DIExpression()), !dbg !7104
  ret void, !dbg !7104
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !7105 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !7106, metadata !DIExpression()), !dbg !7107
  %0 = load i32, i32* %m.addr, align 4, !dbg !7108
  %conv = zext i32 %0 to i64, !dbg !7108
  %add = add i64 %conv, 4, !dbg !7109
  %sub = sub i64 %add, 1, !dbg !7110
  %div = sdiv i64 %sub, 4, !dbg !7111
  ret i64 %div, !dbg !7112
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !7113 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7117, metadata !DIExpression()), !dbg !7118
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7119, metadata !DIExpression()), !dbg !7120
  ret i1 true, !dbg !7121
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !7122 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7126, metadata !DIExpression()), !dbg !7127
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7128, metadata !DIExpression()), !dbg !7129
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7130, metadata !DIExpression()), !dbg !7131
  ret void, !dbg !7132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #0 !dbg !7133 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7134, metadata !DIExpression()), !dbg !7135
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7136
  %tobool = icmp ne i8* %0, null, !dbg !7136
  %lnot = xor i1 %tobool, true, !dbg !7136
  %lnot1 = xor i1 %lnot, true, !dbg !7136
  %lnot2 = xor i1 %lnot1, true, !dbg !7136
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7136
  %conv = sext i32 %lnot.ext to i64, !dbg !7136
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7136
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !7137

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !7138
  %2 = ptrtoint i8* %1 to i64, !dbg !7138
  %3 = inttoptr i64 %2 to i8*, !dbg !7138
  %4 = ptrtoint i8* %3 to i64, !dbg !7138
  %cmp = icmp uge i64 %4, -4095, !dbg !7138
  %lnot5 = xor i1 %cmp, true, !dbg !7138
  %lnot7 = xor i1 %lnot5, true, !dbg !7138
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7138
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !7138
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !7137
  br label %lor.end, !dbg !7137

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !7139
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !7140 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7144, metadata !DIExpression()), !dbg !7148
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7150, metadata !DIExpression()), !dbg !7151
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7152, metadata !DIExpression()), !dbg !7153
  %0 = load i64, i64* %size.addr, align 8, !dbg !7154
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !7156
  br i1 %1, label %if.then, label %if.end447, !dbg !7157

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !7158
  %tobool = icmp ne i64 %2, 0, !dbg !7158
  br i1 %tobool, label %if.end, label %if.then1, !dbg !7161

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !7162
  br label %return, !dbg !7162

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !7163
  %cmp = icmp ult i64 %3, 4096, !dbg !7165
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7166

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7167
  br label %return, !dbg !7167

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub = sub i64 %4, 1, !dbg !7168
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !7168
  br i1 %5, label %cond.true, label %cond.false442, !dbg !7168

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub4 = sub i64 %6, 1, !dbg !7168
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !7168
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !7168

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub6 = sub i64 %8, 1, !dbg !7168
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !7168
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !7168

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !7168

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub9 = sub i64 %9, 1, !dbg !7168
  %and = and i64 %sub9, -9223372036854775808, !dbg !7168
  %tobool10 = icmp ne i64 %and, 0, !dbg !7168
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !7168

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !7168

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub13 = sub i64 %10, 1, !dbg !7168
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !7168
  %tobool15 = icmp ne i64 %and14, 0, !dbg !7168
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !7168

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !7168

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub18 = sub i64 %11, 1, !dbg !7168
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !7168
  %tobool20 = icmp ne i64 %and19, 0, !dbg !7168
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !7168

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !7168

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub23 = sub i64 %12, 1, !dbg !7168
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !7168
  %tobool25 = icmp ne i64 %and24, 0, !dbg !7168
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !7168

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !7168

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub28 = sub i64 %13, 1, !dbg !7168
  %and29 = and i64 %sub28, 576460752303423488, !dbg !7168
  %tobool30 = icmp ne i64 %and29, 0, !dbg !7168
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !7168

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !7168

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub33 = sub i64 %14, 1, !dbg !7168
  %and34 = and i64 %sub33, 288230376151711744, !dbg !7168
  %tobool35 = icmp ne i64 %and34, 0, !dbg !7168
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !7168

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !7168

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub38 = sub i64 %15, 1, !dbg !7168
  %and39 = and i64 %sub38, 144115188075855872, !dbg !7168
  %tobool40 = icmp ne i64 %and39, 0, !dbg !7168
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !7168

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !7168

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub43 = sub i64 %16, 1, !dbg !7168
  %and44 = and i64 %sub43, 72057594037927936, !dbg !7168
  %tobool45 = icmp ne i64 %and44, 0, !dbg !7168
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !7168

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !7168

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub48 = sub i64 %17, 1, !dbg !7168
  %and49 = and i64 %sub48, 36028797018963968, !dbg !7168
  %tobool50 = icmp ne i64 %and49, 0, !dbg !7168
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !7168

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !7168

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub53 = sub i64 %18, 1, !dbg !7168
  %and54 = and i64 %sub53, 18014398509481984, !dbg !7168
  %tobool55 = icmp ne i64 %and54, 0, !dbg !7168
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !7168

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !7168

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub58 = sub i64 %19, 1, !dbg !7168
  %and59 = and i64 %sub58, 9007199254740992, !dbg !7168
  %tobool60 = icmp ne i64 %and59, 0, !dbg !7168
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !7168

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !7168

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub63 = sub i64 %20, 1, !dbg !7168
  %and64 = and i64 %sub63, 4503599627370496, !dbg !7168
  %tobool65 = icmp ne i64 %and64, 0, !dbg !7168
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !7168

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !7168

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub68 = sub i64 %21, 1, !dbg !7168
  %and69 = and i64 %sub68, 2251799813685248, !dbg !7168
  %tobool70 = icmp ne i64 %and69, 0, !dbg !7168
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !7168

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !7168

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub73 = sub i64 %22, 1, !dbg !7168
  %and74 = and i64 %sub73, 1125899906842624, !dbg !7168
  %tobool75 = icmp ne i64 %and74, 0, !dbg !7168
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !7168

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !7168

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub78 = sub i64 %23, 1, !dbg !7168
  %and79 = and i64 %sub78, 562949953421312, !dbg !7168
  %tobool80 = icmp ne i64 %and79, 0, !dbg !7168
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !7168

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !7168

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub83 = sub i64 %24, 1, !dbg !7168
  %and84 = and i64 %sub83, 281474976710656, !dbg !7168
  %tobool85 = icmp ne i64 %and84, 0, !dbg !7168
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !7168

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !7168

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub88 = sub i64 %25, 1, !dbg !7168
  %and89 = and i64 %sub88, 140737488355328, !dbg !7168
  %tobool90 = icmp ne i64 %and89, 0, !dbg !7168
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !7168

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !7168

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub93 = sub i64 %26, 1, !dbg !7168
  %and94 = and i64 %sub93, 70368744177664, !dbg !7168
  %tobool95 = icmp ne i64 %and94, 0, !dbg !7168
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !7168

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !7168

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub98 = sub i64 %27, 1, !dbg !7168
  %and99 = and i64 %sub98, 35184372088832, !dbg !7168
  %tobool100 = icmp ne i64 %and99, 0, !dbg !7168
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !7168

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !7168

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub103 = sub i64 %28, 1, !dbg !7168
  %and104 = and i64 %sub103, 17592186044416, !dbg !7168
  %tobool105 = icmp ne i64 %and104, 0, !dbg !7168
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !7168

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !7168

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub108 = sub i64 %29, 1, !dbg !7168
  %and109 = and i64 %sub108, 8796093022208, !dbg !7168
  %tobool110 = icmp ne i64 %and109, 0, !dbg !7168
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !7168

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !7168

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub113 = sub i64 %30, 1, !dbg !7168
  %and114 = and i64 %sub113, 4398046511104, !dbg !7168
  %tobool115 = icmp ne i64 %and114, 0, !dbg !7168
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !7168

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !7168

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub118 = sub i64 %31, 1, !dbg !7168
  %and119 = and i64 %sub118, 2199023255552, !dbg !7168
  %tobool120 = icmp ne i64 %and119, 0, !dbg !7168
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !7168

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !7168

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub123 = sub i64 %32, 1, !dbg !7168
  %and124 = and i64 %sub123, 1099511627776, !dbg !7168
  %tobool125 = icmp ne i64 %and124, 0, !dbg !7168
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !7168

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !7168

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub128 = sub i64 %33, 1, !dbg !7168
  %and129 = and i64 %sub128, 549755813888, !dbg !7168
  %tobool130 = icmp ne i64 %and129, 0, !dbg !7168
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !7168

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !7168

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub133 = sub i64 %34, 1, !dbg !7168
  %and134 = and i64 %sub133, 274877906944, !dbg !7168
  %tobool135 = icmp ne i64 %and134, 0, !dbg !7168
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !7168

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !7168

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub138 = sub i64 %35, 1, !dbg !7168
  %and139 = and i64 %sub138, 137438953472, !dbg !7168
  %tobool140 = icmp ne i64 %and139, 0, !dbg !7168
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !7168

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !7168

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub143 = sub i64 %36, 1, !dbg !7168
  %and144 = and i64 %sub143, 68719476736, !dbg !7168
  %tobool145 = icmp ne i64 %and144, 0, !dbg !7168
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !7168

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !7168

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub148 = sub i64 %37, 1, !dbg !7168
  %and149 = and i64 %sub148, 34359738368, !dbg !7168
  %tobool150 = icmp ne i64 %and149, 0, !dbg !7168
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !7168

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !7168

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub153 = sub i64 %38, 1, !dbg !7168
  %and154 = and i64 %sub153, 17179869184, !dbg !7168
  %tobool155 = icmp ne i64 %and154, 0, !dbg !7168
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !7168

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !7168

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub158 = sub i64 %39, 1, !dbg !7168
  %and159 = and i64 %sub158, 8589934592, !dbg !7168
  %tobool160 = icmp ne i64 %and159, 0, !dbg !7168
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !7168

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !7168

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub163 = sub i64 %40, 1, !dbg !7168
  %and164 = and i64 %sub163, 4294967296, !dbg !7168
  %tobool165 = icmp ne i64 %and164, 0, !dbg !7168
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !7168

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !7168

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub168 = sub i64 %41, 1, !dbg !7168
  %and169 = and i64 %sub168, 2147483648, !dbg !7168
  %tobool170 = icmp ne i64 %and169, 0, !dbg !7168
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !7168

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !7168

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub173 = sub i64 %42, 1, !dbg !7168
  %and174 = and i64 %sub173, 1073741824, !dbg !7168
  %tobool175 = icmp ne i64 %and174, 0, !dbg !7168
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !7168

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !7168

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub178 = sub i64 %43, 1, !dbg !7168
  %and179 = and i64 %sub178, 536870912, !dbg !7168
  %tobool180 = icmp ne i64 %and179, 0, !dbg !7168
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !7168

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !7168

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub183 = sub i64 %44, 1, !dbg !7168
  %and184 = and i64 %sub183, 268435456, !dbg !7168
  %tobool185 = icmp ne i64 %and184, 0, !dbg !7168
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !7168

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !7168

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub188 = sub i64 %45, 1, !dbg !7168
  %and189 = and i64 %sub188, 134217728, !dbg !7168
  %tobool190 = icmp ne i64 %and189, 0, !dbg !7168
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !7168

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !7168

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub193 = sub i64 %46, 1, !dbg !7168
  %and194 = and i64 %sub193, 67108864, !dbg !7168
  %tobool195 = icmp ne i64 %and194, 0, !dbg !7168
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !7168

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !7168

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub198 = sub i64 %47, 1, !dbg !7168
  %and199 = and i64 %sub198, 33554432, !dbg !7168
  %tobool200 = icmp ne i64 %and199, 0, !dbg !7168
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !7168

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !7168

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub203 = sub i64 %48, 1, !dbg !7168
  %and204 = and i64 %sub203, 16777216, !dbg !7168
  %tobool205 = icmp ne i64 %and204, 0, !dbg !7168
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !7168

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !7168

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub208 = sub i64 %49, 1, !dbg !7168
  %and209 = and i64 %sub208, 8388608, !dbg !7168
  %tobool210 = icmp ne i64 %and209, 0, !dbg !7168
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !7168

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !7168

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub213 = sub i64 %50, 1, !dbg !7168
  %and214 = and i64 %sub213, 4194304, !dbg !7168
  %tobool215 = icmp ne i64 %and214, 0, !dbg !7168
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !7168

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !7168

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub218 = sub i64 %51, 1, !dbg !7168
  %and219 = and i64 %sub218, 2097152, !dbg !7168
  %tobool220 = icmp ne i64 %and219, 0, !dbg !7168
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !7168

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !7168

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub223 = sub i64 %52, 1, !dbg !7168
  %and224 = and i64 %sub223, 1048576, !dbg !7168
  %tobool225 = icmp ne i64 %and224, 0, !dbg !7168
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !7168

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !7168

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub228 = sub i64 %53, 1, !dbg !7168
  %and229 = and i64 %sub228, 524288, !dbg !7168
  %tobool230 = icmp ne i64 %and229, 0, !dbg !7168
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !7168

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !7168

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub233 = sub i64 %54, 1, !dbg !7168
  %and234 = and i64 %sub233, 262144, !dbg !7168
  %tobool235 = icmp ne i64 %and234, 0, !dbg !7168
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !7168

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !7168

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub238 = sub i64 %55, 1, !dbg !7168
  %and239 = and i64 %sub238, 131072, !dbg !7168
  %tobool240 = icmp ne i64 %and239, 0, !dbg !7168
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !7168

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !7168

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub243 = sub i64 %56, 1, !dbg !7168
  %and244 = and i64 %sub243, 65536, !dbg !7168
  %tobool245 = icmp ne i64 %and244, 0, !dbg !7168
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !7168

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !7168

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub248 = sub i64 %57, 1, !dbg !7168
  %and249 = and i64 %sub248, 32768, !dbg !7168
  %tobool250 = icmp ne i64 %and249, 0, !dbg !7168
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !7168

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !7168

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub253 = sub i64 %58, 1, !dbg !7168
  %and254 = and i64 %sub253, 16384, !dbg !7168
  %tobool255 = icmp ne i64 %and254, 0, !dbg !7168
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !7168

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !7168

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub258 = sub i64 %59, 1, !dbg !7168
  %and259 = and i64 %sub258, 8192, !dbg !7168
  %tobool260 = icmp ne i64 %and259, 0, !dbg !7168
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !7168

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !7168

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub263 = sub i64 %60, 1, !dbg !7168
  %and264 = and i64 %sub263, 4096, !dbg !7168
  %tobool265 = icmp ne i64 %and264, 0, !dbg !7168
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !7168

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !7168

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub268 = sub i64 %61, 1, !dbg !7168
  %and269 = and i64 %sub268, 2048, !dbg !7168
  %tobool270 = icmp ne i64 %and269, 0, !dbg !7168
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !7168

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !7168

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub273 = sub i64 %62, 1, !dbg !7168
  %and274 = and i64 %sub273, 1024, !dbg !7168
  %tobool275 = icmp ne i64 %and274, 0, !dbg !7168
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !7168

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !7168

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub278 = sub i64 %63, 1, !dbg !7168
  %and279 = and i64 %sub278, 512, !dbg !7168
  %tobool280 = icmp ne i64 %and279, 0, !dbg !7168
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !7168

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !7168

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub283 = sub i64 %64, 1, !dbg !7168
  %and284 = and i64 %sub283, 256, !dbg !7168
  %tobool285 = icmp ne i64 %and284, 0, !dbg !7168
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !7168

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !7168

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub288 = sub i64 %65, 1, !dbg !7168
  %and289 = and i64 %sub288, 128, !dbg !7168
  %tobool290 = icmp ne i64 %and289, 0, !dbg !7168
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !7168

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !7168

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub293 = sub i64 %66, 1, !dbg !7168
  %and294 = and i64 %sub293, 64, !dbg !7168
  %tobool295 = icmp ne i64 %and294, 0, !dbg !7168
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !7168

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !7168

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub298 = sub i64 %67, 1, !dbg !7168
  %and299 = and i64 %sub298, 32, !dbg !7168
  %tobool300 = icmp ne i64 %and299, 0, !dbg !7168
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !7168

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !7168

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub303 = sub i64 %68, 1, !dbg !7168
  %and304 = and i64 %sub303, 16, !dbg !7168
  %tobool305 = icmp ne i64 %and304, 0, !dbg !7168
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !7168

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !7168

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub308 = sub i64 %69, 1, !dbg !7168
  %and309 = and i64 %sub308, 8, !dbg !7168
  %tobool310 = icmp ne i64 %and309, 0, !dbg !7168
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !7168

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !7168

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub313 = sub i64 %70, 1, !dbg !7168
  %and314 = and i64 %sub313, 4, !dbg !7168
  %tobool315 = icmp ne i64 %and314, 0, !dbg !7168
  %71 = zext i1 %tobool315 to i64, !dbg !7168
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !7168
  br label %cond.end, !dbg !7168

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !7168
  br label %cond.end317, !dbg !7168

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !7168
  br label %cond.end319, !dbg !7168

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !7168
  br label %cond.end321, !dbg !7168

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !7168
  br label %cond.end323, !dbg !7168

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !7168
  br label %cond.end325, !dbg !7168

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !7168
  br label %cond.end327, !dbg !7168

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !7168
  br label %cond.end329, !dbg !7168

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !7168
  br label %cond.end331, !dbg !7168

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !7168
  br label %cond.end333, !dbg !7168

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !7168
  br label %cond.end335, !dbg !7168

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !7168
  br label %cond.end337, !dbg !7168

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !7168
  br label %cond.end339, !dbg !7168

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !7168
  br label %cond.end341, !dbg !7168

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !7168
  br label %cond.end343, !dbg !7168

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !7168
  br label %cond.end345, !dbg !7168

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !7168
  br label %cond.end347, !dbg !7168

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !7168
  br label %cond.end349, !dbg !7168

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !7168
  br label %cond.end351, !dbg !7168

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !7168
  br label %cond.end353, !dbg !7168

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !7168
  br label %cond.end355, !dbg !7168

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !7168
  br label %cond.end357, !dbg !7168

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !7168
  br label %cond.end359, !dbg !7168

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !7168
  br label %cond.end361, !dbg !7168

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !7168
  br label %cond.end363, !dbg !7168

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !7168
  br label %cond.end365, !dbg !7168

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !7168
  br label %cond.end367, !dbg !7168

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !7168
  br label %cond.end369, !dbg !7168

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !7168
  br label %cond.end371, !dbg !7168

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !7168
  br label %cond.end373, !dbg !7168

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !7168
  br label %cond.end375, !dbg !7168

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !7168
  br label %cond.end377, !dbg !7168

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !7168
  br label %cond.end379, !dbg !7168

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !7168
  br label %cond.end381, !dbg !7168

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !7168
  br label %cond.end383, !dbg !7168

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !7168
  br label %cond.end385, !dbg !7168

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !7168
  br label %cond.end387, !dbg !7168

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !7168
  br label %cond.end389, !dbg !7168

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !7168
  br label %cond.end391, !dbg !7168

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !7168
  br label %cond.end393, !dbg !7168

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !7168
  br label %cond.end395, !dbg !7168

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !7168
  br label %cond.end397, !dbg !7168

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !7168
  br label %cond.end399, !dbg !7168

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !7168
  br label %cond.end401, !dbg !7168

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !7168
  br label %cond.end403, !dbg !7168

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !7168
  br label %cond.end405, !dbg !7168

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !7168
  br label %cond.end407, !dbg !7168

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !7168
  br label %cond.end409, !dbg !7168

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !7168
  br label %cond.end411, !dbg !7168

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !7168
  br label %cond.end413, !dbg !7168

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !7168
  br label %cond.end415, !dbg !7168

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !7168
  br label %cond.end417, !dbg !7168

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !7168
  br label %cond.end419, !dbg !7168

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !7168
  br label %cond.end421, !dbg !7168

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !7168
  br label %cond.end423, !dbg !7168

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !7168
  br label %cond.end425, !dbg !7168

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !7168
  br label %cond.end427, !dbg !7168

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !7168
  br label %cond.end429, !dbg !7168

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !7168
  br label %cond.end431, !dbg !7168

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !7168
  br label %cond.end433, !dbg !7168

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !7168
  br label %cond.end435, !dbg !7168

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !7168
  br label %cond.end437, !dbg !7168

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !7168
  br label %cond.end440, !dbg !7168

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !7168

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !7168
  br label %cond.end444, !dbg !7168

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !7168
  %sub443 = sub i64 %72, 1, !dbg !7168
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !7168
  br label %cond.end444, !dbg !7168

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !7168
  %sub446 = sub i32 %cond445, 12, !dbg !7169
  %add = add i32 %sub446, 1, !dbg !7170
  store i32 %add, i32* %retval, align 4, !dbg !7171
  br label %return, !dbg !7171

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !7172
  %dec = add i64 %73, -1, !dbg !7172
  store i64 %dec, i64* %size.addr, align 8, !dbg !7172
  %74 = load i64, i64* %size.addr, align 8, !dbg !7173
  %shr = lshr i64 %74, 12, !dbg !7173
  store i64 %shr, i64* %size.addr, align 8, !dbg !7173
  %75 = load i64, i64* %size.addr, align 8, !dbg !7174
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7151
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !7175
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !7176
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #14, !dbg !7175, !srcloc !7177
  store i32 %78, i32* %bitpos.i, align 4, !dbg !7175
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !7178
  %add.i = add i32 %79, 1, !dbg !7179
  store i32 %add.i, i32* %retval, align 4, !dbg !7180
  br label %return, !dbg !7180

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !7181
  ret i32 %80, !dbg !7181
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !7182 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7144, metadata !DIExpression()), !dbg !7186
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7150, metadata !DIExpression()), !dbg !7188
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7189, metadata !DIExpression()), !dbg !7190
  %0 = load i64, i64* %n.addr, align 8, !dbg !7191
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7188
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !7192
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !7193
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #14, !dbg !7192, !srcloc !7177
  store i32 %3, i32* %bitpos.i, align 4, !dbg !7192
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !7194
  %add.i = add i32 %4, 1, !dbg !7195
  %sub = sub i32 %add.i, 1, !dbg !7196
  ret i32 %sub, !dbg !7197
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !7198 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !7202, metadata !DIExpression()), !dbg !7203
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !7204, metadata !DIExpression()), !dbg !7205
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7206, metadata !DIExpression()), !dbg !7207
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7208, metadata !DIExpression()), !dbg !7209
  %0 = load i8*, i8** %object.addr, align 8, !dbg !7210
  ret i8* %0, !dbg !7211
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_qos_remove_notifier(%struct.device*, %struct.notifier_block*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_pm_qos_request_active(%struct.dev_pm_qos_request* %req) #0 !dbg !7212 {
entry:
  %req.addr = alloca %struct.dev_pm_qos_request*, align 8
  store %struct.dev_pm_qos_request* %req, %struct.dev_pm_qos_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_qos_request** %req.addr, metadata !7215, metadata !DIExpression()), !dbg !7216
  %0 = load %struct.dev_pm_qos_request*, %struct.dev_pm_qos_request** %req.addr, align 8, !dbg !7217
  %dev = getelementptr inbounds %struct.dev_pm_qos_request, %struct.dev_pm_qos_request* %0, i32 0, i32 2, !dbg !7218
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7218
  %cmp = icmp ne %struct.device* %1, null, !dbg !7219
  %conv = zext i1 %cmp to i32, !dbg !7219
  ret i32 %conv, !dbg !7220
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_qos_remove_request(%struct.dev_pm_qos_request*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mutex_destroy(%struct.mutex* %lock) #0 !dbg !7221 {
entry:
  %lock.addr = alloca %struct.mutex*, align 8
  store %struct.mutex* %lock, %struct.mutex** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mutex** %lock.addr, metadata !7225, metadata !DIExpression()), !dbg !7226
  ret void, !dbg !7227
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_opp_get_opp_count(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local void @devm_kfree(%struct.device*, i8*) #3

; Function Attrs: noredzone
declare dso_local void @dev_pm_opp_put(%struct.dev_pm_opp*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !7228 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7229, metadata !DIExpression()), !dbg !7230
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  ret i1 true, !dbg !7233
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !7234 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !7239, metadata !DIExpression()), !dbg !7240
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !7241
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !7242
  %1 = load i8*, i8** %name, align 8, !dbg !7242
  ret i8* %1, !dbg !7243
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !7244 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !7247, metadata !DIExpression()), !dbg !7248
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !7249
  %tobool = trunc i8 %0 to i1, !dbg !7249
  %lnot = xor i1 %tobool, true, !dbg !7249
  %lnot1 = xor i1 %lnot, true, !dbg !7249
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7249
  %conv = sext i32 %lnot.ext to i64, !dbg !7249
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7249
  ret i1 %tobool2, !dbg !7250
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kmalloc_array(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !7251 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7252, metadata !DIExpression()), !dbg !7253
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7254, metadata !DIExpression()), !dbg !7255
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7256, metadata !DIExpression()), !dbg !7257
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7258, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !7260, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !7262, metadata !DIExpression()), !dbg !7265
  %0 = load i64, i64* %n.addr, align 8, !dbg !7265
  store i64 %0, i64* %__a, align 8, !dbg !7265
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !7266, metadata !DIExpression()), !dbg !7265
  %1 = load i64, i64* %size.addr, align 8, !dbg !7265
  store i64 %1, i64* %__b, align 8, !dbg !7265
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !7267, metadata !DIExpression()), !dbg !7265
  store i64* %bytes, i64** %__d, align 8, !dbg !7265
  %cmp = icmp eq i64* %__a, %__b, !dbg !7265
  %conv = zext i1 %cmp to i32, !dbg !7265
  %2 = load i64*, i64** %__d, align 8, !dbg !7265
  %cmp1 = icmp eq i64* %__a, %2, !dbg !7265
  %conv2 = zext i1 %cmp1 to i32, !dbg !7265
  %3 = load i64, i64* %__a, align 8, !dbg !7265
  %4 = load i64, i64* %__b, align 8, !dbg !7265
  %5 = load i64*, i64** %__d, align 8, !dbg !7265
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !7265
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !7265
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !7265
  store i64 %8, i64* %5, align 8, !dbg !7265
  %frombool = zext i1 %7 to i8, !dbg !7265
  store i8 %frombool, i8* %tmp, align 1, !dbg !7265
  %9 = load i8, i8* %tmp, align 1, !dbg !7265
  %tobool = trunc i8 %9 to i1, !dbg !7265
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #9, !dbg !7268
  %lnot = xor i1 %call, true, !dbg !7268
  %lnot3 = xor i1 %lnot, true, !dbg !7268
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7268
  %conv4 = sext i32 %lnot.ext to i64, !dbg !7268
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !7268
  br i1 %tobool5, label %if.then, label %if.end, !dbg !7269

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !7270
  br label %return, !dbg !7270

if.end:                                           ; preds = %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7271
  %11 = load i64, i64* %bytes, align 8, !dbg !7272
  %12 = load i32, i32* %flags.addr, align 4, !dbg !7273
  %call6 = call noalias i8* @devm_kmalloc(%struct.device* %10, i64 %11, i32 %12) #9, !dbg !7274
  store i8* %call6, i8** %retval, align 8, !dbg !7275
  br label %return, !dbg !7275

return:                                           ; preds = %if.end, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !7276
  ret i8* %13, !dbg !7276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @qos_notifier_call(%struct.devfreq* %devfreq) #0 !dbg !7277 {
entry:
  %devfreq.addr = alloca %struct.devfreq*, align 8
  %err = alloca i32, align 4
  store %struct.devfreq* %devfreq, %struct.devfreq** %devfreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq.addr, metadata !7278, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7280, metadata !DIExpression()), !dbg !7281
  %0 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !7282
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %0, i32 0, i32 1, !dbg !7283
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !7284
  %1 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !7285
  %call = call i32 @update_devfreq(%struct.devfreq* %1) #9, !dbg !7286
  store i32 %call, i32* %err, align 4, !dbg !7287
  %2 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !7288
  %lock1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %2, i32 0, i32 1, !dbg !7289
  call void @mutex_unlock(%struct.mutex* %lock1) #9, !dbg !7290
  %3 = load i32, i32* %err, align 4, !dbg !7291
  %tobool = icmp ne i32 %3, 0, !dbg !7291
  br i1 %tobool, label %if.then, label %if.end, !dbg !7293

if.then:                                          ; preds = %entry
  %4 = load %struct.devfreq*, %struct.devfreq** %devfreq.addr, align 8, !dbg !7294
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %4, i32 0, i32 2, !dbg !7294
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !7294
  %5 = load %struct.device*, %struct.device** %parent, align 8, !dbg !7294
  %6 = load i32, i32* %err, align 4, !dbg !7294
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %5, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.26, i64 0, i64 0), i32 %6) #10, !dbg !7294
  br label %if.end, !dbg !7294

if.end:                                           ; preds = %if.then, %entry
  ret i32 1, !dbg !7295
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_module(i8* %name, ...) #0 !dbg !7296 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7300, metadata !DIExpression()), !dbg !7301
  ret i32 -38, !dbg !7302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7303 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7306, metadata !DIExpression()), !dbg !7307
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7308, metadata !DIExpression()), !dbg !7309
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7310, metadata !DIExpression()), !dbg !7311
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7312
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7314
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7315
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #9, !dbg !7316
  br i1 %call, label %if.end, label %if.then, !dbg !7317

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !7318

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7319
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7320
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !7321
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !7322
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7323
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7324
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7325
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !7326
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7327
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7328
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !7329
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !7330
  br label %do.body, !dbg !7331

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !7332

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !7334

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7332

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7336
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7336
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !7336
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !7336
  br label %do.end7, !dbg !7336

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !7332

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !7338
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7339 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7342, metadata !DIExpression()), !dbg !7343
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7344, metadata !DIExpression()), !dbg !7345
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7346, metadata !DIExpression()), !dbg !7347
  ret i1 true, !dbg !7348
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devres_alloc_node(void (%struct.device*, i8*)*, i64, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !7349 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7350, metadata !DIExpression()), !dbg !7351
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7352
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !7354
  br i1 %call, label %if.end, label %if.then, !dbg !7355

if.then:                                          ; preds = %entry
  br label %return, !dbg !7356

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7357
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7358
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7358
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7359
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7360
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7360
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !7361
  br label %return, !dbg !7362

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !7363 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7366, metadata !DIExpression()), !dbg !7367
  ret i1 true, !dbg !7368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7369 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7370, metadata !DIExpression()), !dbg !7371
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7372, metadata !DIExpression()), !dbg !7373
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7374
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7375
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7376
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !7377
  br label %do.body, !dbg !7378

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !7379

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !7381

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !7379

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7383
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7383
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7383
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !7383
  br label %do.end5, !dbg !7383

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !7379

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !7385
}

; Function Attrs: noredzone
declare dso_local %struct.class* @__class_create(%struct.module*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noredzone
declare dso_local %struct.workqueue_struct* @alloc_workqueue(i8*, i32, i32, ...) #3

; Function Attrs: noredzone
declare dso_local void @class_destroy(%struct.class*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dentry* @debugfs_create_dir(i8* %name, %struct.dentry* %parent) #0 !dbg !7386 {
entry:
  %name.addr = alloca i8*, align 8
  %parent.addr = alloca %struct.dentry*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7390, metadata !DIExpression()), !dbg !7391
  store %struct.dentry* %parent, %struct.dentry** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dentry** %parent.addr, metadata !7392, metadata !DIExpression()), !dbg !7393
  %call = call i8* @ERR_PTR(i64 -19) #9, !dbg !7394
  %0 = bitcast i8* %call to %struct.dentry*, !dbg !7394
  ret %struct.dentry* %0, !dbg !7395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dentry* @debugfs_create_file(i8* %name, i16 zeroext %mode, %struct.dentry* %parent, i8* %data, %struct.file_operations* %fops) #0 !dbg !7396 {
entry:
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i16, align 2
  %parent.addr = alloca %struct.dentry*, align 8
  %data.addr = alloca i8*, align 8
  %fops.addr = alloca %struct.file_operations*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7399, metadata !DIExpression()), !dbg !7400
  store i16 %mode, i16* %mode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mode.addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  store %struct.dentry* %parent, %struct.dentry** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dentry** %parent.addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7405, metadata !DIExpression()), !dbg !7406
  store %struct.file_operations* %fops, %struct.file_operations** %fops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_operations** %fops.addr, metadata !7407, metadata !DIExpression()), !dbg !7408
  %call = call i8* @ERR_PTR(i64 -19) #9, !dbg !7409
  %0 = bitcast i8* %call to %struct.dentry*, !dbg !7409
  ret %struct.dentry* %0, !dbg !7410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @name_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !7411 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7412, metadata !DIExpression()), !dbg !7413
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7414, metadata !DIExpression()), !dbg !7415
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7416, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7418, metadata !DIExpression()), !dbg !7419
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7420, metadata !DIExpression()), !dbg !7422
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7422
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7422
  store i8* %1, i8** %__mptr, align 8, !dbg !7422
  br label %do.body, !dbg !7422

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7423

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7422
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7422
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7422
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7423
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7422
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7419
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !7425
  %6 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7426
  %dev1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %6, i32 0, i32 2, !dbg !7427
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !7428
  %7 = load %struct.device*, %struct.device** %parent, align 8, !dbg !7428
  %call = call i8* @dev_name(%struct.device* %7) #9, !dbg !7429
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), i8* %call) #9, !dbg !7430
  %conv = sext i32 %call2 to i64, !dbg !7430
  ret i64 %conv, !dbg !7431
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @governor_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !7432 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7433, metadata !DIExpression()), !dbg !7434
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7435, metadata !DIExpression()), !dbg !7436
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7437, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7439, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7441, metadata !DIExpression()), !dbg !7443
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7443
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7443
  store i8* %1, i8** %__mptr, align 8, !dbg !7443
  br label %do.body, !dbg !7443

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7444

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7443
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7443
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7443
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7444
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7443
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7440
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7446
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 4, !dbg !7448
  %6 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !7448
  %tobool = icmp ne %struct.devfreq_governor* %6, null, !dbg !7446
  br i1 %tobool, label %if.end, label %if.then, !dbg !7449

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !7450
  br label %return, !dbg !7450

if.end:                                           ; preds = %do.end
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !7451
  %8 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7452
  %governor1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 4, !dbg !7453
  %9 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor1, align 8, !dbg !7453
  %name = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %9, i32 0, i32 1, !dbg !7454
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !7452
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), i8* %arraydecay) #9, !dbg !7455
  %conv = sext i32 %call to i64, !dbg !7455
  store i64 %conv, i64* %retval, align 8, !dbg !7456
  br label %return, !dbg !7456

return:                                           ; preds = %if.end, %if.then
  %10 = load i64, i64* %retval, align 8, !dbg !7457
  ret i64 %10, !dbg !7457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @governor_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !7458 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %ret = alloca i32, align 4
  %str_governor = alloca [17 x i8], align 16
  %governor = alloca %struct.devfreq_governor*, align 8
  %prev_governor = alloca %struct.devfreq_governor*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7459, metadata !DIExpression()), !dbg !7460
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7461, metadata !DIExpression()), !dbg !7462
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7463, metadata !DIExpression()), !dbg !7464
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7465, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7467, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7469, metadata !DIExpression()), !dbg !7471
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7471
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7471
  store i8* %1, i8** %__mptr, align 8, !dbg !7471
  br label %do.body, !dbg !7471

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7472

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7471
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7471
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7471
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7472
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7471
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7468
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.declare(metadata [17 x i8]* %str_governor, metadata !7476, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.declare(metadata %struct.devfreq_governor** %governor, metadata !7481, metadata !DIExpression()), !dbg !7482
  call void @llvm.dbg.declare(metadata %struct.devfreq_governor** %prev_governor, metadata !7483, metadata !DIExpression()), !dbg !7484
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7485
  %governor1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 4, !dbg !7487
  %6 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor1, align 8, !dbg !7487
  %tobool = icmp ne %struct.devfreq_governor* %6, null, !dbg !7485
  br i1 %tobool, label %if.end, label %if.then, !dbg !7488

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !7489
  br label %return, !dbg !7489

if.end:                                           ; preds = %do.end
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !7490
  %arraydecay = getelementptr inbounds [17 x i8], [17 x i8]* %str_governor, i64 0, i64 0, !dbg !7491
  %call = call i32 (i8*, i8*, ...) @sscanf(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0), i8* %arraydecay) #9, !dbg !7492
  store i32 %call, i32* %ret, align 4, !dbg !7493
  %8 = load i32, i32* %ret, align 4, !dbg !7494
  %cmp = icmp ne i32 %8, 1, !dbg !7496
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7497

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !7498
  br label %return, !dbg !7498

if.end3:                                          ; preds = %if.end
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !7499
  %arraydecay4 = getelementptr inbounds [17 x i8], [17 x i8]* %str_governor, i64 0, i64 0, !dbg !7500
  %call5 = call %struct.devfreq_governor* @try_then_request_governor(i8* %arraydecay4) #9, !dbg !7501
  store %struct.devfreq_governor* %call5, %struct.devfreq_governor** %governor, align 8, !dbg !7502
  %9 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !7503
  %10 = bitcast %struct.devfreq_governor* %9 to i8*, !dbg !7503
  %call6 = call zeroext i1 @IS_ERR(i8* %10) #9, !dbg !7505
  br i1 %call6, label %if.then7, label %if.end9, !dbg !7506

if.then7:                                         ; preds = %if.end3
  %11 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !7507
  %12 = bitcast %struct.devfreq_governor* %11 to i8*, !dbg !7507
  %call8 = call i64 @PTR_ERR(i8* %12) #9, !dbg !7509
  %conv = trunc i64 %call8 to i32, !dbg !7509
  store i32 %conv, i32* %ret, align 4, !dbg !7510
  br label %out, !dbg !7511

if.end9:                                          ; preds = %if.end3
  %13 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7512
  %governor10 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %13, i32 0, i32 4, !dbg !7514
  %14 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor10, align 8, !dbg !7514
  %15 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !7515
  %cmp11 = icmp eq %struct.devfreq_governor* %14, %15, !dbg !7516
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !7517

if.then13:                                        ; preds = %if.end9
  store i32 0, i32* %ret, align 4, !dbg !7518
  br label %out, !dbg !7520

if.else:                                          ; preds = %if.end9
  %16 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7521
  %governor14 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %16, i32 0, i32 4, !dbg !7523
  %17 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor14, align 8, !dbg !7523
  %immutable = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %17, i32 0, i32 2, !dbg !7524
  %18 = load i32, i32* %immutable, align 8, !dbg !7524
  %tobool15 = icmp ne i32 %18, 0, !dbg !7521
  br i1 %tobool15, label %if.then18, label %lor.lhs.false, !dbg !7525

lor.lhs.false:                                    ; preds = %if.else
  %19 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !7526
  %immutable16 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %19, i32 0, i32 2, !dbg !7527
  %20 = load i32, i32* %immutable16, align 8, !dbg !7527
  %tobool17 = icmp ne i32 %20, 0, !dbg !7526
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !7528

if.then18:                                        ; preds = %lor.lhs.false, %if.else
  store i32 -22, i32* %ret, align 4, !dbg !7529
  br label %out, !dbg !7531

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20

if.end20:                                         ; preds = %if.end19
  %21 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7532
  %governor21 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %21, i32 0, i32 4, !dbg !7533
  %22 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor21, align 8, !dbg !7533
  %event_handler = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %22, i32 0, i32 5, !dbg !7534
  %23 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler, align 8, !dbg !7534
  %24 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7535
  %call22 = call i32 %23(%struct.devfreq* %24, i32 2, i8* null) #9, !dbg !7532
  store i32 %call22, i32* %ret, align 4, !dbg !7536
  %25 = load i32, i32* %ret, align 4, !dbg !7537
  %tobool23 = icmp ne i32 %25, 0, !dbg !7537
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !7539

if.then24:                                        ; preds = %if.end20
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7540
  %27 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7540
  %governor25 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %27, i32 0, i32 4, !dbg !7540
  %28 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor25, align 8, !dbg !7540
  %name = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %28, i32 0, i32 1, !dbg !7540
  %arraydecay26 = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !7540
  %29 = load i32, i32* %ret, align 4, !dbg !7540
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %26, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.governor_store, i64 0, i64 0), i8* %arraydecay26, i32 %29) #10, !dbg !7540
  br label %out, !dbg !7542

if.end27:                                         ; preds = %if.end20
  %30 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7543
  %governor28 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %30, i32 0, i32 4, !dbg !7544
  %31 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor28, align 8, !dbg !7544
  store %struct.devfreq_governor* %31, %struct.devfreq_governor** %prev_governor, align 8, !dbg !7545
  %32 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !7546
  %33 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7547
  %governor29 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %33, i32 0, i32 4, !dbg !7548
  store %struct.devfreq_governor* %32, %struct.devfreq_governor** %governor29, align 8, !dbg !7549
  %34 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7550
  %governor_name = getelementptr inbounds %struct.devfreq, %struct.devfreq* %34, i32 0, i32 5, !dbg !7551
  %arraydecay30 = getelementptr inbounds [16 x i8], [16 x i8]* %governor_name, i64 0, i64 0, !dbg !7550
  %35 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !7552
  %name31 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %35, i32 0, i32 1, !dbg !7553
  %arraydecay32 = getelementptr inbounds [16 x i8], [16 x i8]* %name31, i64 0, i64 0, !dbg !7552
  %call33 = call i8* @strncpy(i8* %arraydecay30, i8* %arraydecay32, i64 16) #9, !dbg !7554
  %36 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7555
  %governor34 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %36, i32 0, i32 4, !dbg !7556
  %37 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor34, align 8, !dbg !7556
  %event_handler35 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %37, i32 0, i32 5, !dbg !7557
  %38 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler35, align 8, !dbg !7557
  %39 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7558
  %call36 = call i32 %38(%struct.devfreq* %39, i32 1, i8* null) #9, !dbg !7555
  store i32 %call36, i32* %ret, align 4, !dbg !7559
  %40 = load i32, i32* %ret, align 4, !dbg !7560
  %tobool37 = icmp ne i32 %40, 0, !dbg !7560
  br i1 %tobool37, label %if.then38, label %if.end57, !dbg !7562

if.then38:                                        ; preds = %if.end27
  %41 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7563
  %42 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7563
  %governor39 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %42, i32 0, i32 4, !dbg !7563
  %43 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor39, align 8, !dbg !7563
  %name40 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %43, i32 0, i32 1, !dbg !7563
  %arraydecay41 = getelementptr inbounds [16 x i8], [16 x i8]* %name40, i64 0, i64 0, !dbg !7563
  %44 = load i32, i32* %ret, align 4, !dbg !7563
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %41, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.governor_store, i64 0, i64 0), i8* %arraydecay41, i32 %44) #10, !dbg !7563
  %45 = load %struct.devfreq_governor*, %struct.devfreq_governor** %prev_governor, align 8, !dbg !7565
  %46 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7566
  %governor42 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %46, i32 0, i32 4, !dbg !7567
  store %struct.devfreq_governor* %45, %struct.devfreq_governor** %governor42, align 8, !dbg !7568
  %47 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7569
  %governor_name43 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %47, i32 0, i32 5, !dbg !7570
  %arraydecay44 = getelementptr inbounds [16 x i8], [16 x i8]* %governor_name43, i64 0, i64 0, !dbg !7569
  %48 = load %struct.devfreq_governor*, %struct.devfreq_governor** %prev_governor, align 8, !dbg !7571
  %name45 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %48, i32 0, i32 1, !dbg !7572
  %arraydecay46 = getelementptr inbounds [16 x i8], [16 x i8]* %name45, i64 0, i64 0, !dbg !7571
  %call47 = call i8* @strncpy(i8* %arraydecay44, i8* %arraydecay46, i64 16) #9, !dbg !7573
  %49 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7574
  %governor48 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %49, i32 0, i32 4, !dbg !7575
  %50 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor48, align 8, !dbg !7575
  %event_handler49 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %50, i32 0, i32 5, !dbg !7576
  %51 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler49, align 8, !dbg !7576
  %52 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7577
  %call50 = call i32 %51(%struct.devfreq* %52, i32 1, i8* null) #9, !dbg !7574
  store i32 %call50, i32* %ret, align 4, !dbg !7578
  %53 = load i32, i32* %ret, align 4, !dbg !7579
  %tobool51 = icmp ne i32 %53, 0, !dbg !7579
  br i1 %tobool51, label %if.then52, label %if.end56, !dbg !7581

if.then52:                                        ; preds = %if.then38
  %54 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7582
  %55 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7582
  %governor_name53 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %55, i32 0, i32 5, !dbg !7582
  %arraydecay54 = getelementptr inbounds [16 x i8], [16 x i8]* %governor_name53, i64 0, i64 0, !dbg !7582
  %56 = load i32, i32* %ret, align 4, !dbg !7582
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %54, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.governor_store, i64 0, i64 0), i8* %arraydecay54, i32 %56) #10, !dbg !7582
  %57 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7584
  %governor55 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %57, i32 0, i32 4, !dbg !7585
  store %struct.devfreq_governor* null, %struct.devfreq_governor** %governor55, align 8, !dbg !7586
  br label %if.end56, !dbg !7587

if.end56:                                         ; preds = %if.then52, %if.then38
  br label %if.end57, !dbg !7588

if.end57:                                         ; preds = %if.end56, %if.end27
  br label %out, !dbg !7560

out:                                              ; preds = %if.end57, %if.then24, %if.then18, %if.then13, %if.then7
  call void @llvm.dbg.label(metadata !7589), !dbg !7590
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !7591
  %58 = load i32, i32* %ret, align 4, !dbg !7592
  %tobool58 = icmp ne i32 %58, 0, !dbg !7592
  br i1 %tobool58, label %if.end61, label %if.then59, !dbg !7594

if.then59:                                        ; preds = %out
  %59 = load i64, i64* %count.addr, align 8, !dbg !7595
  %conv60 = trunc i64 %59 to i32, !dbg !7595
  store i32 %conv60, i32* %ret, align 4, !dbg !7596
  br label %if.end61, !dbg !7597

if.end61:                                         ; preds = %if.then59, %out
  %60 = load i32, i32* %ret, align 4, !dbg !7598
  %conv62 = sext i32 %60 to i64, !dbg !7598
  store i64 %conv62, i64* %retval, align 8, !dbg !7599
  br label %return, !dbg !7599

return:                                           ; preds = %if.end61, %if.then2, %if.then
  %61 = load i64, i64* %retval, align 8, !dbg !7600
  ret i64 %61, !dbg !7600
}

; Function Attrs: noredzone
declare dso_local i32 @sscanf(i8*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i8* @strncpy(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @available_governors_show(%struct.device* %d, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !7601 {
entry:
  %retval = alloca i64, align 8
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %count = alloca i64, align 8
  %governor4 = alloca %struct.devfreq_governor*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp8 = alloca %struct.devfreq_governor*, align 8
  %__mptr20 = alloca i8*, align 8
  %tmp24 = alloca %struct.devfreq_governor*, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7602, metadata !DIExpression()), !dbg !7603
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7604, metadata !DIExpression()), !dbg !7605
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7606, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7608, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7610, metadata !DIExpression()), !dbg !7612
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7612
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7612
  store i8* %1, i8** %__mptr, align 8, !dbg !7612
  br label %do.body, !dbg !7612

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7613

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7612
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7612
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7612
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7613
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7612
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7609
  call void @llvm.dbg.declare(metadata i64* %count, metadata !7615, metadata !DIExpression()), !dbg !7616
  store i64 0, i64* %count, align 8, !dbg !7616
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7617
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 4, !dbg !7619
  %6 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !7619
  %tobool = icmp ne %struct.devfreq_governor* %6, null, !dbg !7617
  br i1 %tobool, label %if.end, label %if.then, !dbg !7620

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !7621
  br label %return, !dbg !7621

if.end:                                           ; preds = %do.end
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !7622
  %7 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7623
  %governor1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 4, !dbg !7625
  %8 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor1, align 8, !dbg !7625
  %immutable = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %8, i32 0, i32 2, !dbg !7626
  %9 = load i32, i32* %immutable, align 8, !dbg !7626
  %tobool2 = icmp ne i32 %9, 0, !dbg !7623
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !7627

if.then3:                                         ; preds = %if.end
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !7628
  %11 = load i64, i64* %count, align 8, !dbg !7630
  %arrayidx = getelementptr i8, i8* %10, i64 %11, !dbg !7628
  %12 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7631
  %governor_name = getelementptr inbounds %struct.devfreq, %struct.devfreq* %12, i32 0, i32 5, !dbg !7632
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %governor_name, i64 0, i64 0, !dbg !7631
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %arrayidx, i64 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* %arraydecay) #9, !dbg !7633
  %conv = sext i32 %call to i64, !dbg !7633
  store i64 %conv, i64* %count, align 8, !dbg !7634
  br label %if.end26, !dbg !7635

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.devfreq_governor** %governor4, metadata !7636, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !7639, metadata !DIExpression()), !dbg !7642
  %13 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @devfreq_governor_list, i32 0, i32 0), align 8, !dbg !7642
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !7642
  store i8* %14, i8** %__mptr5, align 8, !dbg !7642
  br label %do.body6, !dbg !7642

do.body6:                                         ; preds = %if.else
  br label %do.end7, !dbg !7643

do.end7:                                          ; preds = %do.body6
  %15 = load i8*, i8** %__mptr5, align 8, !dbg !7642
  %add.ptr9 = getelementptr i8, i8* %15, i64 0, !dbg !7642
  %16 = bitcast i8* %add.ptr9 to %struct.devfreq_governor*, !dbg !7642
  store %struct.devfreq_governor* %16, %struct.devfreq_governor** %tmp8, align 8, !dbg !7643
  %17 = load %struct.devfreq_governor*, %struct.devfreq_governor** %tmp8, align 8, !dbg !7642
  store %struct.devfreq_governor* %17, %struct.devfreq_governor** %governor4, align 8, !dbg !7645
  br label %for.cond, !dbg !7645

for.cond:                                         ; preds = %do.end23, %do.end7
  %18 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor4, align 8, !dbg !7646
  %node = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %18, i32 0, i32 0, !dbg !7646
  %cmp = icmp eq %struct.list_head* %node, @devfreq_governor_list, !dbg !7646
  %lnot = xor i1 %cmp, true, !dbg !7646
  br i1 %lnot, label %for.body, label %for.end, !dbg !7645

for.body:                                         ; preds = %for.cond
  %19 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor4, align 8, !dbg !7648
  %immutable11 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %19, i32 0, i32 2, !dbg !7651
  %20 = load i32, i32* %immutable11, align 8, !dbg !7651
  %tobool12 = icmp ne i32 %20, 0, !dbg !7648
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !7652

if.then13:                                        ; preds = %for.body
  br label %for.inc, !dbg !7653

if.end14:                                         ; preds = %for.body
  %21 = load i8*, i8** %buf.addr, align 8, !dbg !7654
  %22 = load i64, i64* %count, align 8, !dbg !7655
  %arrayidx15 = getelementptr i8, i8* %21, i64 %22, !dbg !7654
  %23 = load i64, i64* %count, align 8, !dbg !7656
  %sub = sub i64 4096, %23, !dbg !7657
  %sub16 = sub i64 %sub, 2, !dbg !7658
  %24 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor4, align 8, !dbg !7659
  %name = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %24, i32 0, i32 1, !dbg !7660
  %arraydecay17 = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !7659
  %call18 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %arrayidx15, i64 %sub16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* %arraydecay17) #9, !dbg !7661
  %conv19 = sext i32 %call18 to i64, !dbg !7661
  %25 = load i64, i64* %count, align 8, !dbg !7662
  %add = add i64 %25, %conv19, !dbg !7662
  store i64 %add, i64* %count, align 8, !dbg !7662
  br label %for.inc, !dbg !7663

for.inc:                                          ; preds = %if.end14, %if.then13
  call void @llvm.dbg.declare(metadata i8** %__mptr20, metadata !7664, metadata !DIExpression()), !dbg !7666
  %26 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor4, align 8, !dbg !7666
  %node21 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %26, i32 0, i32 0, !dbg !7666
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node21, i32 0, i32 0, !dbg !7666
  %27 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7666
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !7666
  store i8* %28, i8** %__mptr20, align 8, !dbg !7666
  br label %do.body22, !dbg !7666

do.body22:                                        ; preds = %for.inc
  br label %do.end23, !dbg !7667

do.end23:                                         ; preds = %do.body22
  %29 = load i8*, i8** %__mptr20, align 8, !dbg !7666
  %add.ptr25 = getelementptr i8, i8* %29, i64 0, !dbg !7666
  %30 = bitcast i8* %add.ptr25 to %struct.devfreq_governor*, !dbg !7666
  store %struct.devfreq_governor* %30, %struct.devfreq_governor** %tmp24, align 8, !dbg !7667
  %31 = load %struct.devfreq_governor*, %struct.devfreq_governor** %tmp24, align 8, !dbg !7666
  store %struct.devfreq_governor* %31, %struct.devfreq_governor** %governor4, align 8, !dbg !7646
  br label %for.cond, !dbg !7646, !llvm.loop !7669

for.end:                                          ; preds = %for.cond
  br label %if.end26

if.end26:                                         ; preds = %for.end, %if.then3
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !7671
  %32 = load i64, i64* %count, align 8, !dbg !7672
  %tobool27 = icmp ne i64 %32, 0, !dbg !7672
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !7674

if.then28:                                        ; preds = %if.end26
  %33 = load i64, i64* %count, align 8, !dbg !7675
  %dec = add i64 %33, -1, !dbg !7675
  store i64 %dec, i64* %count, align 8, !dbg !7675
  br label %if.end29, !dbg !7676

if.end29:                                         ; preds = %if.then28, %if.end26
  %34 = load i8*, i8** %buf.addr, align 8, !dbg !7677
  %35 = load i64, i64* %count, align 8, !dbg !7678
  %arrayidx30 = getelementptr i8, i8* %34, i64 %35, !dbg !7677
  %call31 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0)) #9, !dbg !7679
  %conv32 = sext i32 %call31 to i64, !dbg !7679
  %36 = load i64, i64* %count, align 8, !dbg !7680
  %add33 = add i64 %36, %conv32, !dbg !7680
  store i64 %add33, i64* %count, align 8, !dbg !7680
  %37 = load i64, i64* %count, align 8, !dbg !7681
  store i64 %37, i64* %retval, align 8, !dbg !7682
  br label %return, !dbg !7682

return:                                           ; preds = %if.end29, %if.then
  %38 = load i64, i64* %retval, align 8, !dbg !7683
  ret i64 %38, !dbg !7683
}

; Function Attrs: noredzone
declare dso_local i32 @scnprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @cur_freq_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !7684 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %freq = alloca i64, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7685, metadata !DIExpression()), !dbg !7686
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7687, metadata !DIExpression()), !dbg !7688
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7689, metadata !DIExpression()), !dbg !7690
  call void @llvm.dbg.declare(metadata i64* %freq, metadata !7691, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7693, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7695, metadata !DIExpression()), !dbg !7697
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7697
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7697
  store i8* %1, i8** %__mptr, align 8, !dbg !7697
  br label %do.body, !dbg !7697

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7698

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7697
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7697
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7697
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7698
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7697
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7694
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7700
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 3, !dbg !7702
  %6 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !7702
  %tobool = icmp ne %struct.devfreq_dev_profile* %6, null, !dbg !7700
  br i1 %tobool, label %if.end, label %if.then, !dbg !7703

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !7704
  br label %return, !dbg !7704

if.end:                                           ; preds = %do.end
  %7 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7705
  %profile1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 3, !dbg !7707
  %8 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile1, align 8, !dbg !7707
  %get_cur_freq = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %8, i32 0, i32 5, !dbg !7708
  %9 = load i32 (%struct.device*, i64*)*, i32 (%struct.device*, i64*)** %get_cur_freq, align 8, !dbg !7708
  %tobool2 = icmp ne i32 (%struct.device*, i64*)* %9, null, !dbg !7705
  br i1 %tobool2, label %land.lhs.true, label %if.end9, !dbg !7709

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7710
  %profile3 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %10, i32 0, i32 3, !dbg !7711
  %11 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile3, align 8, !dbg !7711
  %get_cur_freq4 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %11, i32 0, i32 5, !dbg !7712
  %12 = load i32 (%struct.device*, i64*)*, i32 (%struct.device*, i64*)** %get_cur_freq4, align 8, !dbg !7712
  %13 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7713
  %dev5 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %13, i32 0, i32 2, !dbg !7714
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 1, !dbg !7715
  %14 = load %struct.device*, %struct.device** %parent, align 8, !dbg !7715
  %call = call i32 %12(%struct.device* %14, i64* %freq) #9, !dbg !7710
  %tobool6 = icmp ne i32 %call, 0, !dbg !7710
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !7716

if.then7:                                         ; preds = %land.lhs.true
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !7717
  %16 = load i64, i64* %freq, align 8, !dbg !7718
  %call8 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i64 %16) #9, !dbg !7719
  %conv = sext i32 %call8 to i64, !dbg !7719
  store i64 %conv, i64* %retval, align 8, !dbg !7720
  br label %return, !dbg !7720

if.end9:                                          ; preds = %land.lhs.true, %if.end
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !7721
  %18 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7722
  %previous_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %18, i32 0, i32 8, !dbg !7723
  %19 = load i64, i64* %previous_freq, align 8, !dbg !7723
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i64 %19) #9, !dbg !7724
  %conv11 = sext i32 %call10 to i64, !dbg !7724
  store i64 %conv11, i64* %retval, align 8, !dbg !7725
  br label %return, !dbg !7725

return:                                           ; preds = %if.end9, %if.then7, %if.then
  %20 = load i64, i64* %retval, align 8, !dbg !7726
  ret i64 %20, !dbg !7726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @available_frequencies_show(%struct.device* %d, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !7727 {
entry:
  %retval = alloca i64, align 8
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %count = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7730, metadata !DIExpression()), !dbg !7731
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7732, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7734, metadata !DIExpression()), !dbg !7735
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7736, metadata !DIExpression()), !dbg !7738
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7738
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7738
  store i8* %1, i8** %__mptr, align 8, !dbg !7738
  br label %do.body, !dbg !7738

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7739

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7738
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7738
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7738
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7739
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7738
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7735
  call void @llvm.dbg.declare(metadata i64* %count, metadata !7741, metadata !DIExpression()), !dbg !7742
  store i64 0, i64* %count, align 8, !dbg !7742
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7743, metadata !DIExpression()), !dbg !7744
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7745
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 3, !dbg !7747
  %6 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !7747
  %tobool = icmp ne %struct.devfreq_dev_profile* %6, null, !dbg !7745
  br i1 %tobool, label %if.end, label %if.then, !dbg !7748

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !7749
  br label %return, !dbg !7749

if.end:                                           ; preds = %do.end
  %7 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7750
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 1, !dbg !7751
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !7752
  store i32 0, i32* %i, align 4, !dbg !7753
  br label %for.cond, !dbg !7755

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !7756
  %9 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7758
  %profile1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %9, i32 0, i32 3, !dbg !7759
  %10 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile1, align 8, !dbg !7759
  %max_state = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %10, i32 0, i32 8, !dbg !7760
  %11 = load i32, i32* %max_state, align 8, !dbg !7760
  %cmp = icmp ult i32 %8, %11, !dbg !7761
  br i1 %cmp, label %for.body, label %for.end, !dbg !7762

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !7763
  %13 = load i64, i64* %count, align 8, !dbg !7764
  %arrayidx = getelementptr i8, i8* %12, i64 %13, !dbg !7763
  %14 = load i64, i64* %count, align 8, !dbg !7765
  %sub = sub i64 4096, %14, !dbg !7766
  %sub2 = sub i64 %sub, 2, !dbg !7767
  %15 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7768
  %profile3 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %15, i32 0, i32 3, !dbg !7769
  %16 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile3, align 8, !dbg !7769
  %freq_table = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %16, i32 0, i32 7, !dbg !7770
  %17 = load i64*, i64** %freq_table, align 8, !dbg !7770
  %18 = load i32, i32* %i, align 4, !dbg !7771
  %idxprom = sext i32 %18 to i64, !dbg !7768
  %arrayidx4 = getelementptr i64, i64* %17, i64 %idxprom, !dbg !7768
  %19 = load i64, i64* %arrayidx4, align 8, !dbg !7768
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %arrayidx, i64 %sub2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i64 %19) #9, !dbg !7772
  %conv = sext i32 %call to i64, !dbg !7772
  %20 = load i64, i64* %count, align 8, !dbg !7773
  %add = add i64 %20, %conv, !dbg !7773
  store i64 %add, i64* %count, align 8, !dbg !7773
  br label %for.inc, !dbg !7774

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !7775
  %inc = add i32 %21, 1, !dbg !7775
  store i32 %inc, i32* %i, align 4, !dbg !7775
  br label %for.cond, !dbg !7776, !llvm.loop !7777

for.end:                                          ; preds = %for.cond
  %22 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7779
  %lock5 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %22, i32 0, i32 1, !dbg !7780
  call void @mutex_unlock(%struct.mutex* %lock5) #9, !dbg !7781
  %23 = load i64, i64* %count, align 8, !dbg !7782
  %tobool6 = icmp ne i64 %23, 0, !dbg !7782
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7784

if.then7:                                         ; preds = %for.end
  %24 = load i64, i64* %count, align 8, !dbg !7785
  %dec = add i64 %24, -1, !dbg !7785
  store i64 %dec, i64* %count, align 8, !dbg !7785
  br label %if.end8, !dbg !7786

if.end8:                                          ; preds = %if.then7, %for.end
  %25 = load i8*, i8** %buf.addr, align 8, !dbg !7787
  %26 = load i64, i64* %count, align 8, !dbg !7788
  %arrayidx9 = getelementptr i8, i8* %25, i64 %26, !dbg !7787
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0)) #9, !dbg !7789
  %conv11 = sext i32 %call10 to i64, !dbg !7789
  %27 = load i64, i64* %count, align 8, !dbg !7790
  %add12 = add i64 %27, %conv11, !dbg !7790
  store i64 %add12, i64* %count, align 8, !dbg !7790
  %28 = load i64, i64* %count, align 8, !dbg !7791
  store i64 %28, i64* %retval, align 8, !dbg !7792
  br label %return, !dbg !7792

return:                                           ; preds = %if.end8, %if.then
  %29 = load i64, i64* %retval, align 8, !dbg !7793
  ret i64 %29, !dbg !7793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @target_freq_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !7794 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7795, metadata !DIExpression()), !dbg !7796
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7797, metadata !DIExpression()), !dbg !7798
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7799, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7801, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7803, metadata !DIExpression()), !dbg !7805
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7805
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7805
  store i8* %1, i8** %__mptr, align 8, !dbg !7805
  br label %do.body, !dbg !7805

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7806

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7805
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7805
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7805
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7806
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7805
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7802
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !7808
  %6 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7809
  %previous_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %6, i32 0, i32 8, !dbg !7810
  %7 = load i64, i64* %previous_freq, align 8, !dbg !7810
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i64 %7) #9, !dbg !7811
  %conv = sext i32 %call to i64, !dbg !7811
  ret i64 %conv, !dbg !7812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @polling_interval_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !7813 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7814, metadata !DIExpression()), !dbg !7815
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7816, metadata !DIExpression()), !dbg !7817
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7818, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7820, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7822, metadata !DIExpression()), !dbg !7824
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7824
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7824
  store i8* %1, i8** %__mptr, align 8, !dbg !7824
  br label %do.body, !dbg !7824

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7825

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7824
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7824
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7824
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7825
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7824
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7821
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7827
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 3, !dbg !7829
  %6 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !7829
  %tobool = icmp ne %struct.devfreq_dev_profile* %6, null, !dbg !7827
  br i1 %tobool, label %if.end, label %if.then, !dbg !7830

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !7831
  br label %return, !dbg !7831

if.end:                                           ; preds = %do.end
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !7832
  %8 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7833
  %profile1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 3, !dbg !7834
  %9 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile1, align 8, !dbg !7834
  %polling_ms = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %9, i32 0, i32 1, !dbg !7835
  %10 = load i32, i32* %polling_ms, align 8, !dbg !7835
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i64 0, i64 0), i32 %10) #9, !dbg !7836
  %conv = sext i32 %call to i64, !dbg !7836
  store i64 %conv, i64* %retval, align 8, !dbg !7837
  br label %return, !dbg !7837

return:                                           ; preds = %if.end, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !7838
  ret i64 %11, !dbg !7838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @polling_interval_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !7839 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %value = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7840, metadata !DIExpression()), !dbg !7841
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7842, metadata !DIExpression()), !dbg !7843
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7844, metadata !DIExpression()), !dbg !7845
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7846, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7848, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7850, metadata !DIExpression()), !dbg !7852
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7852
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7852
  store i8* %1, i8** %__mptr, align 8, !dbg !7852
  br label %do.body, !dbg !7852

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7853

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7852
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7852
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7852
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7853
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7852
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7849
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7855, metadata !DIExpression()), !dbg !7856
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7857, metadata !DIExpression()), !dbg !7858
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7859
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 4, !dbg !7861
  %6 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !7861
  %tobool = icmp ne %struct.devfreq_governor* %6, null, !dbg !7859
  br i1 %tobool, label %if.end, label %if.then, !dbg !7862

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !7863
  br label %return, !dbg !7863

if.end:                                           ; preds = %do.end
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !7864
  %call = call i32 (i8*, i8*, ...) @sscanf(i8* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i64 0, i64 0), i32* %value) #9, !dbg !7865
  store i32 %call, i32* %ret, align 4, !dbg !7866
  %8 = load i32, i32* %ret, align 4, !dbg !7867
  %cmp = icmp ne i32 %8, 1, !dbg !7869
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !7870

if.then1:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !7871
  br label %return, !dbg !7871

if.end2:                                          ; preds = %if.end
  %9 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7872
  %governor3 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %9, i32 0, i32 4, !dbg !7873
  %10 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor3, align 8, !dbg !7873
  %event_handler = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %10, i32 0, i32 5, !dbg !7874
  %11 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler, align 8, !dbg !7874
  %12 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7875
  %13 = bitcast i32* %value to i8*, !dbg !7876
  %call4 = call i32 %11(%struct.devfreq* %12, i32 3, i8* %13) #9, !dbg !7872
  %14 = load i64, i64* %count.addr, align 8, !dbg !7877
  %conv = trunc i64 %14 to i32, !dbg !7877
  store i32 %conv, i32* %ret, align 4, !dbg !7878
  %15 = load i32, i32* %ret, align 4, !dbg !7879
  %conv5 = sext i32 %15 to i64, !dbg !7879
  store i64 %conv5, i64* %retval, align 8, !dbg !7880
  br label %return, !dbg !7880

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %16 = load i64, i64* %retval, align 8, !dbg !7881
  ret i64 %16, !dbg !7881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @min_freq_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !7882 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %min_freq = alloca i64, align 8
  %max_freq = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7883, metadata !DIExpression()), !dbg !7884
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7885, metadata !DIExpression()), !dbg !7886
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7887, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7889, metadata !DIExpression()), !dbg !7890
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7891, metadata !DIExpression()), !dbg !7893
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7893
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7893
  store i8* %1, i8** %__mptr, align 8, !dbg !7893
  br label %do.body, !dbg !7893

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7894

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7893
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7893
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7893
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7894
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7893
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7890
  call void @llvm.dbg.declare(metadata i64* %min_freq, metadata !7896, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.declare(metadata i64* %max_freq, metadata !7898, metadata !DIExpression()), !dbg !7899
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7900
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 1, !dbg !7901
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !7902
  %6 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7903
  call void @get_freq_range(%struct.devfreq* %6, i64* %min_freq, i64* %max_freq) #9, !dbg !7904
  %7 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7905
  %lock1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 1, !dbg !7906
  call void @mutex_unlock(%struct.mutex* %lock1) #9, !dbg !7907
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !7908
  %9 = load i64, i64* %min_freq, align 8, !dbg !7909
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i64 %9) #9, !dbg !7910
  %conv = sext i32 %call to i64, !dbg !7910
  ret i64 %conv, !dbg !7911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @min_freq_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !7912 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %value = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7913, metadata !DIExpression()), !dbg !7914
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7915, metadata !DIExpression()), !dbg !7916
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7917, metadata !DIExpression()), !dbg !7918
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7919, metadata !DIExpression()), !dbg !7920
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7921, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7923, metadata !DIExpression()), !dbg !7925
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7925
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7925
  store i8* %1, i8** %__mptr, align 8, !dbg !7925
  br label %do.body, !dbg !7925

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7926

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7925
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7925
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7925
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7926
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7925
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7922
  call void @llvm.dbg.declare(metadata i64* %value, metadata !7928, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7930, metadata !DIExpression()), !dbg !7931
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7932
  %user_min_freq_req = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 11, !dbg !7934
  %call = call i32 @dev_pm_qos_request_active(%struct.dev_pm_qos_request* %user_min_freq_req) #9, !dbg !7935
  %tobool = icmp ne i32 %call, 0, !dbg !7935
  br i1 %tobool, label %if.end, label %if.then, !dbg !7936

if.then:                                          ; preds = %do.end
  store i64 -11, i64* %retval, align 8, !dbg !7937
  br label %return, !dbg !7937

if.end:                                           ; preds = %do.end
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !7938
  %call1 = call i32 (i8*, i8*, ...) @sscanf(i8* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i64* %value) #9, !dbg !7939
  store i32 %call1, i32* %ret, align 4, !dbg !7940
  %7 = load i32, i32* %ret, align 4, !dbg !7941
  %cmp = icmp ne i32 %7, 1, !dbg !7943
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7944

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !7945
  br label %return, !dbg !7945

if.end3:                                          ; preds = %if.end
  %8 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7946
  %user_min_freq_req4 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 11, !dbg !7947
  %9 = load i64, i64* %value, align 8, !dbg !7948
  %div = udiv i64 %9, 1000, !dbg !7949
  %conv = trunc i64 %div to i32, !dbg !7948
  %call5 = call i32 @dev_pm_qos_update_request(%struct.dev_pm_qos_request* %user_min_freq_req4, i32 %conv) #9, !dbg !7950
  store i32 %call5, i32* %ret, align 4, !dbg !7951
  %10 = load i32, i32* %ret, align 4, !dbg !7952
  %cmp6 = icmp slt i32 %10, 0, !dbg !7954
  br i1 %cmp6, label %if.then8, label %if.end10, !dbg !7955

if.then8:                                         ; preds = %if.end3
  %11 = load i32, i32* %ret, align 4, !dbg !7956
  %conv9 = sext i32 %11 to i64, !dbg !7956
  store i64 %conv9, i64* %retval, align 8, !dbg !7957
  br label %return, !dbg !7957

if.end10:                                         ; preds = %if.end3
  %12 = load i64, i64* %count.addr, align 8, !dbg !7958
  store i64 %12, i64* %retval, align 8, !dbg !7959
  br label %return, !dbg !7959

return:                                           ; preds = %if.end10, %if.then8, %if.then2, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !7960
  ret i64 %13, !dbg !7960
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_qos_update_request(%struct.dev_pm_qos_request*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @max_freq_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !7961 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %min_freq = alloca i64, align 8
  %max_freq = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7962, metadata !DIExpression()), !dbg !7963
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7964, metadata !DIExpression()), !dbg !7965
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7966, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !7968, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7970, metadata !DIExpression()), !dbg !7972
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7972
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7972
  store i8* %1, i8** %__mptr, align 8, !dbg !7972
  br label %do.body, !dbg !7972

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7973

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7972
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !7972
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !7972
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !7973
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !7972
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !7969
  call void @llvm.dbg.declare(metadata i64* %min_freq, metadata !7975, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.declare(metadata i64* %max_freq, metadata !7977, metadata !DIExpression()), !dbg !7978
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7979
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 1, !dbg !7980
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !7981
  %6 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7982
  call void @get_freq_range(%struct.devfreq* %6, i64* %min_freq, i64* %max_freq) #9, !dbg !7983
  %7 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !7984
  %lock1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 1, !dbg !7985
  call void @mutex_unlock(%struct.mutex* %lock1) #9, !dbg !7986
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !7987
  %9 = load i64, i64* %max_freq, align 8, !dbg !7988
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i64 %9) #9, !dbg !7989
  %conv = sext i32 %call to i64, !dbg !7989
  ret i64 %conv, !dbg !7990
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @max_freq_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !7991 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %value = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7992, metadata !DIExpression()), !dbg !7993
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7994, metadata !DIExpression()), !dbg !7995
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7996, metadata !DIExpression()), !dbg !7997
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7998, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !8000, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8002, metadata !DIExpression()), !dbg !8004
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8004
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8004
  store i8* %1, i8** %__mptr, align 8, !dbg !8004
  br label %do.body, !dbg !8004

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8005

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8004
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !8004
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !8004
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !8005
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !8004
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !8001
  call void @llvm.dbg.declare(metadata i64* %value, metadata !8007, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8009, metadata !DIExpression()), !dbg !8010
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8011
  %user_max_freq_req = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 12, !dbg !8013
  %call = call i32 @dev_pm_qos_request_active(%struct.dev_pm_qos_request* %user_max_freq_req) #9, !dbg !8014
  %tobool = icmp ne i32 %call, 0, !dbg !8014
  br i1 %tobool, label %if.end, label %if.then, !dbg !8015

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !8016
  br label %return, !dbg !8016

if.end:                                           ; preds = %do.end
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !8017
  %call1 = call i32 (i8*, i8*, ...) @sscanf(i8* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i64* %value) #9, !dbg !8018
  store i32 %call1, i32* %ret, align 4, !dbg !8019
  %7 = load i32, i32* %ret, align 4, !dbg !8020
  %cmp = icmp ne i32 %7, 1, !dbg !8022
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8023

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !8024
  br label %return, !dbg !8024

if.end3:                                          ; preds = %if.end
  %8 = load i64, i64* %value, align 8, !dbg !8025
  %tobool4 = icmp ne i64 %8, 0, !dbg !8025
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !8027

if.then5:                                         ; preds = %if.end3
  %9 = load i64, i64* %value, align 8, !dbg !8028
  %add = add i64 %9, 1000, !dbg !8028
  %sub = sub i64 %add, 1, !dbg !8028
  %div = udiv i64 %sub, 1000, !dbg !8028
  store i64 %div, i64* %value, align 8, !dbg !8029
  br label %if.end6, !dbg !8030

if.else:                                          ; preds = %if.end3
  store i64 2147483647, i64* %value, align 8, !dbg !8031
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then5
  %10 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8032
  %user_max_freq_req7 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %10, i32 0, i32 12, !dbg !8033
  %11 = load i64, i64* %value, align 8, !dbg !8034
  %conv = trunc i64 %11 to i32, !dbg !8034
  %call8 = call i32 @dev_pm_qos_update_request(%struct.dev_pm_qos_request* %user_max_freq_req7, i32 %conv) #9, !dbg !8035
  store i32 %call8, i32* %ret, align 4, !dbg !8036
  %12 = load i32, i32* %ret, align 4, !dbg !8037
  %cmp9 = icmp slt i32 %12, 0, !dbg !8039
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !8040

if.then11:                                        ; preds = %if.end6
  %13 = load i32, i32* %ret, align 4, !dbg !8041
  %conv12 = sext i32 %13 to i64, !dbg !8041
  store i64 %conv12, i64* %retval, align 8, !dbg !8042
  br label %return, !dbg !8042

if.end13:                                         ; preds = %if.end6
  %14 = load i64, i64* %count.addr, align 8, !dbg !8043
  store i64 %14, i64* %retval, align 8, !dbg !8044
  br label %return, !dbg !8044

return:                                           ; preds = %if.end13, %if.then11, %if.then2, %if.then
  %15 = load i64, i64* %retval, align 8, !dbg !8045
  ret i64 %15, !dbg !8045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @trans_stat_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !8046 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %len = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %max_state = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8047, metadata !DIExpression()), !dbg !8048
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8049, metadata !DIExpression()), !dbg !8050
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8051, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !8053, metadata !DIExpression()), !dbg !8054
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8055, metadata !DIExpression()), !dbg !8057
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8057
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8057
  store i8* %1, i8** %__mptr, align 8, !dbg !8057
  br label %do.body, !dbg !8057

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8058

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8057
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !8057
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !8057
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !8058
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !8057
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !8054
  call void @llvm.dbg.declare(metadata i64* %len, metadata !8060, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8062, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8064, metadata !DIExpression()), !dbg !8065
  call void @llvm.dbg.declare(metadata i32* %max_state, metadata !8066, metadata !DIExpression()), !dbg !8067
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8068
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 3, !dbg !8070
  %6 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !8070
  %tobool = icmp ne %struct.devfreq_dev_profile* %6, null, !dbg !8068
  br i1 %tobool, label %if.end, label %if.then, !dbg !8071

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !8072
  br label %return, !dbg !8072

if.end:                                           ; preds = %do.end
  %7 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8073
  %profile1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 3, !dbg !8074
  %8 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile1, align 8, !dbg !8074
  %max_state2 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %8, i32 0, i32 8, !dbg !8075
  %9 = load i32, i32* %max_state2, align 8, !dbg !8075
  store i32 %9, i32* %max_state, align 4, !dbg !8076
  %10 = load i32, i32* %max_state, align 4, !dbg !8077
  %cmp = icmp eq i32 %10, 0, !dbg !8079
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !8080

if.then3:                                         ; preds = %if.end
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !8081
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i64 0, i64 0)) #9, !dbg !8082
  %conv = sext i32 %call to i64, !dbg !8082
  store i64 %conv, i64* %retval, align 8, !dbg !8083
  br label %return, !dbg !8083

if.end4:                                          ; preds = %if.end
  %12 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8084
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %12, i32 0, i32 1, !dbg !8085
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !8086
  %13 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8087
  %stop_polling = getelementptr inbounds %struct.devfreq, %struct.devfreq* %13, i32 0, i32 15, !dbg !8089
  %14 = load i8, i8* %stop_polling, align 8, !dbg !8089
  %tobool5 = trunc i8 %14 to i1, !dbg !8089
  br i1 %tobool5, label %if.end10, label %land.lhs.true, !dbg !8090

land.lhs.true:                                    ; preds = %if.end4
  %15 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8091
  %16 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8092
  %previous_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %16, i32 0, i32 8, !dbg !8093
  %17 = load i64, i64* %previous_freq, align 8, !dbg !8093
  %call6 = call i32 @devfreq_update_status(%struct.devfreq* %15, i64 %17) #9, !dbg !8094
  %tobool7 = icmp ne i32 %call6, 0, !dbg !8094
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !8095

if.then8:                                         ; preds = %land.lhs.true
  %18 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8096
  %lock9 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %18, i32 0, i32 1, !dbg !8098
  call void @mutex_unlock(%struct.mutex* %lock9) #9, !dbg !8099
  store i64 0, i64* %retval, align 8, !dbg !8100
  br label %return, !dbg !8100

if.end10:                                         ; preds = %land.lhs.true, %if.end4
  %19 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8101
  %lock11 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %19, i32 0, i32 1, !dbg !8102
  call void @mutex_unlock(%struct.mutex* %lock11) #9, !dbg !8103
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !8104
  %call12 = call i32 (i8*, i8*, ...) @sprintf(i8* %20, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i64 0, i64 0)) #9, !dbg !8105
  %conv13 = sext i32 %call12 to i64, !dbg !8105
  store i64 %conv13, i64* %len, align 8, !dbg !8106
  %21 = load i8*, i8** %buf.addr, align 8, !dbg !8107
  %22 = load i64, i64* %len, align 8, !dbg !8108
  %add.ptr14 = getelementptr i8, i8* %21, i64 %22, !dbg !8109
  %call15 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i64 0, i64 0)) #9, !dbg !8110
  %conv16 = sext i32 %call15 to i64, !dbg !8110
  %23 = load i64, i64* %len, align 8, !dbg !8111
  %add = add i64 %23, %conv16, !dbg !8111
  store i64 %add, i64* %len, align 8, !dbg !8111
  store i32 0, i32* %i, align 4, !dbg !8112
  br label %for.cond, !dbg !8114

for.cond:                                         ; preds = %for.inc, %if.end10
  %24 = load i32, i32* %i, align 4, !dbg !8115
  %25 = load i32, i32* %max_state, align 4, !dbg !8117
  %cmp17 = icmp ult i32 %24, %25, !dbg !8118
  br i1 %cmp17, label %for.body, label %for.end, !dbg !8119

for.body:                                         ; preds = %for.cond
  %26 = load i8*, i8** %buf.addr, align 8, !dbg !8120
  %27 = load i64, i64* %len, align 8, !dbg !8121
  %add.ptr19 = getelementptr i8, i8* %26, i64 %27, !dbg !8122
  %28 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8123
  %profile20 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %28, i32 0, i32 3, !dbg !8124
  %29 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile20, align 8, !dbg !8124
  %freq_table = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %29, i32 0, i32 7, !dbg !8125
  %30 = load i64*, i64** %freq_table, align 8, !dbg !8125
  %31 = load i32, i32* %i, align 4, !dbg !8126
  %idxprom = sext i32 %31 to i64, !dbg !8123
  %arrayidx = getelementptr i64, i64* %30, i64 %idxprom, !dbg !8123
  %32 = load i64, i64* %arrayidx, align 8, !dbg !8123
  %call21 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i64 %32) #9, !dbg !8127
  %conv22 = sext i32 %call21 to i64, !dbg !8127
  %33 = load i64, i64* %len, align 8, !dbg !8128
  %add23 = add i64 %33, %conv22, !dbg !8128
  store i64 %add23, i64* %len, align 8, !dbg !8128
  br label %for.inc, !dbg !8129

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !dbg !8130
  %inc = add i32 %34, 1, !dbg !8130
  store i32 %inc, i32* %i, align 4, !dbg !8130
  br label %for.cond, !dbg !8131, !llvm.loop !8132

for.end:                                          ; preds = %for.cond
  %35 = load i8*, i8** %buf.addr, align 8, !dbg !8134
  %36 = load i64, i64* %len, align 8, !dbg !8135
  %add.ptr24 = getelementptr i8, i8* %35, i64 %36, !dbg !8136
  %call25 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.61, i64 0, i64 0)) #9, !dbg !8137
  %conv26 = sext i32 %call25 to i64, !dbg !8137
  %37 = load i64, i64* %len, align 8, !dbg !8138
  %add27 = add i64 %37, %conv26, !dbg !8138
  store i64 %add27, i64* %len, align 8, !dbg !8138
  store i32 0, i32* %i, align 4, !dbg !8139
  br label %for.cond28, !dbg !8141

for.cond28:                                       ; preds = %for.inc79, %for.end
  %38 = load i32, i32* %i, align 4, !dbg !8142
  %39 = load i32, i32* %max_state, align 4, !dbg !8144
  %cmp29 = icmp ult i32 %38, %39, !dbg !8145
  br i1 %cmp29, label %for.body31, label %for.end81, !dbg !8146

for.body31:                                       ; preds = %for.cond28
  %40 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8147
  %profile32 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %40, i32 0, i32 3, !dbg !8150
  %41 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile32, align 8, !dbg !8150
  %freq_table33 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %41, i32 0, i32 7, !dbg !8151
  %42 = load i64*, i64** %freq_table33, align 8, !dbg !8151
  %43 = load i32, i32* %i, align 4, !dbg !8152
  %idxprom34 = sext i32 %43 to i64, !dbg !8147
  %arrayidx35 = getelementptr i64, i64* %42, i64 %idxprom34, !dbg !8147
  %44 = load i64, i64* %arrayidx35, align 8, !dbg !8147
  %45 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8153
  %previous_freq36 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %45, i32 0, i32 8, !dbg !8154
  %46 = load i64, i64* %previous_freq36, align 8, !dbg !8154
  %cmp37 = icmp eq i64 %44, %46, !dbg !8155
  br i1 %cmp37, label %if.then39, label %if.else, !dbg !8156

if.then39:                                        ; preds = %for.body31
  %47 = load i8*, i8** %buf.addr, align 8, !dbg !8157
  %48 = load i64, i64* %len, align 8, !dbg !8159
  %add.ptr40 = getelementptr i8, i8* %47, i64 %48, !dbg !8160
  %call41 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.62, i64 0, i64 0)) #9, !dbg !8161
  %conv42 = sext i32 %call41 to i64, !dbg !8161
  %49 = load i64, i64* %len, align 8, !dbg !8162
  %add43 = add i64 %49, %conv42, !dbg !8162
  store i64 %add43, i64* %len, align 8, !dbg !8162
  br label %if.end48, !dbg !8163

if.else:                                          ; preds = %for.body31
  %50 = load i8*, i8** %buf.addr, align 8, !dbg !8164
  %51 = load i64, i64* %len, align 8, !dbg !8166
  %add.ptr44 = getelementptr i8, i8* %50, i64 %51, !dbg !8167
  %call45 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.63, i64 0, i64 0)) #9, !dbg !8168
  %conv46 = sext i32 %call45 to i64, !dbg !8168
  %52 = load i64, i64* %len, align 8, !dbg !8169
  %add47 = add i64 %52, %conv46, !dbg !8169
  store i64 %add47, i64* %len, align 8, !dbg !8169
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then39
  %53 = load i8*, i8** %buf.addr, align 8, !dbg !8170
  %54 = load i64, i64* %len, align 8, !dbg !8171
  %add.ptr49 = getelementptr i8, i8* %53, i64 %54, !dbg !8172
  %55 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8173
  %profile50 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %55, i32 0, i32 3, !dbg !8174
  %56 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile50, align 8, !dbg !8174
  %freq_table51 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %56, i32 0, i32 7, !dbg !8175
  %57 = load i64*, i64** %freq_table51, align 8, !dbg !8175
  %58 = load i32, i32* %i, align 4, !dbg !8176
  %idxprom52 = sext i32 %58 to i64, !dbg !8173
  %arrayidx53 = getelementptr i64, i64* %57, i64 %idxprom52, !dbg !8173
  %59 = load i64, i64* %arrayidx53, align 8, !dbg !8173
  %call54 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr49, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i64 0, i64 0), i64 %59) #9, !dbg !8177
  %conv55 = sext i32 %call54 to i64, !dbg !8177
  %60 = load i64, i64* %len, align 8, !dbg !8178
  %add56 = add i64 %60, %conv55, !dbg !8178
  store i64 %add56, i64* %len, align 8, !dbg !8178
  store i32 0, i32* %j, align 4, !dbg !8179
  br label %for.cond57, !dbg !8181

for.cond57:                                       ; preds = %for.inc68, %if.end48
  %61 = load i32, i32* %j, align 4, !dbg !8182
  %62 = load i32, i32* %max_state, align 4, !dbg !8184
  %cmp58 = icmp ult i32 %61, %62, !dbg !8185
  br i1 %cmp58, label %for.body60, label %for.end70, !dbg !8186

for.body60:                                       ; preds = %for.cond57
  %63 = load i8*, i8** %buf.addr, align 8, !dbg !8187
  %64 = load i64, i64* %len, align 8, !dbg !8188
  %add.ptr61 = getelementptr i8, i8* %63, i64 %64, !dbg !8189
  %65 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8190
  %stats = getelementptr inbounds %struct.devfreq, %struct.devfreq* %65, i32 0, i32 19, !dbg !8191
  %trans_table = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats, i32 0, i32 1, !dbg !8192
  %66 = load i32*, i32** %trans_table, align 8, !dbg !8192
  %67 = load i32, i32* %i, align 4, !dbg !8193
  %68 = load i32, i32* %max_state, align 4, !dbg !8194
  %mul = mul i32 %67, %68, !dbg !8195
  %69 = load i32, i32* %j, align 4, !dbg !8196
  %add62 = add i32 %mul, %69, !dbg !8197
  %idxprom63 = zext i32 %add62 to i64, !dbg !8190
  %arrayidx64 = getelementptr i32, i32* %66, i64 %idxprom63, !dbg !8190
  %70 = load i32, i32* %arrayidx64, align 4, !dbg !8190
  %call65 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0), i32 %70) #9, !dbg !8198
  %conv66 = sext i32 %call65 to i64, !dbg !8198
  %71 = load i64, i64* %len, align 8, !dbg !8199
  %add67 = add i64 %71, %conv66, !dbg !8199
  store i64 %add67, i64* %len, align 8, !dbg !8199
  br label %for.inc68, !dbg !8200

for.inc68:                                        ; preds = %for.body60
  %72 = load i32, i32* %j, align 4, !dbg !8201
  %inc69 = add i32 %72, 1, !dbg !8201
  store i32 %inc69, i32* %j, align 4, !dbg !8201
  br label %for.cond57, !dbg !8202, !llvm.loop !8203

for.end70:                                        ; preds = %for.cond57
  %73 = load i8*, i8** %buf.addr, align 8, !dbg !8205
  %74 = load i64, i64* %len, align 8, !dbg !8206
  %add.ptr71 = getelementptr i8, i8* %73, i64 %74, !dbg !8207
  %75 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8208
  %stats72 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %75, i32 0, i32 19, !dbg !8209
  %time_in_state = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats72, i32 0, i32 2, !dbg !8210
  %76 = load i64*, i64** %time_in_state, align 8, !dbg !8210
  %77 = load i32, i32* %i, align 4, !dbg !8211
  %idxprom73 = sext i32 %77 to i64, !dbg !8208
  %arrayidx74 = getelementptr i64, i64* %76, i64 %idxprom73, !dbg !8208
  %78 = load i64, i64* %arrayidx74, align 8, !dbg !8208
  %call75 = call i64 @jiffies64_to_msecs(i64 %78) #9, !dbg !8212
  %call76 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr71, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i64 0, i64 0), i64 %call75) #9, !dbg !8213
  %conv77 = sext i32 %call76 to i64, !dbg !8213
  %79 = load i64, i64* %len, align 8, !dbg !8214
  %add78 = add i64 %79, %conv77, !dbg !8214
  store i64 %add78, i64* %len, align 8, !dbg !8214
  br label %for.inc79, !dbg !8215

for.inc79:                                        ; preds = %for.end70
  %80 = load i32, i32* %i, align 4, !dbg !8216
  %inc80 = add i32 %80, 1, !dbg !8216
  store i32 %inc80, i32* %i, align 4, !dbg !8216
  br label %for.cond28, !dbg !8217, !llvm.loop !8218

for.end81:                                        ; preds = %for.cond28
  %81 = load i8*, i8** %buf.addr, align 8, !dbg !8220
  %82 = load i64, i64* %len, align 8, !dbg !8221
  %add.ptr82 = getelementptr i8, i8* %81, i64 %82, !dbg !8222
  %83 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8223
  %stats83 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %83, i32 0, i32 19, !dbg !8224
  %total_trans = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats83, i32 0, i32 0, !dbg !8225
  %84 = load i32, i32* %total_trans, align 8, !dbg !8225
  %call84 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr82, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.67, i64 0, i64 0), i32 %84) #9, !dbg !8226
  %conv85 = sext i32 %call84 to i64, !dbg !8226
  %85 = load i64, i64* %len, align 8, !dbg !8227
  %add86 = add i64 %85, %conv85, !dbg !8227
  store i64 %add86, i64* %len, align 8, !dbg !8227
  %86 = load i64, i64* %len, align 8, !dbg !8228
  store i64 %86, i64* %retval, align 8, !dbg !8229
  br label %return, !dbg !8229

return:                                           ; preds = %for.end81, %if.then8, %if.then3, %if.then
  %87 = load i64, i64* %retval, align 8, !dbg !8230
  ret i64 %87, !dbg !8230
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @trans_stat_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !8231 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %err = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8232, metadata !DIExpression()), !dbg !8233
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8234, metadata !DIExpression()), !dbg !8235
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !8240, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8242, metadata !DIExpression()), !dbg !8244
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8244
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8244
  store i8* %1, i8** %__mptr, align 8, !dbg !8244
  br label %do.body, !dbg !8244

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8245

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8244
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !8244
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !8244
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !8245
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !8244
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !8241
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8247, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.declare(metadata i32* %value, metadata !8249, metadata !DIExpression()), !dbg !8250
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8251
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 3, !dbg !8253
  %6 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !8253
  %tobool = icmp ne %struct.devfreq_dev_profile* %6, null, !dbg !8251
  br i1 %tobool, label %if.end, label %if.then, !dbg !8254

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !8255
  br label %return, !dbg !8255

if.end:                                           ; preds = %do.end
  %7 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8256
  %profile1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 3, !dbg !8258
  %8 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile1, align 8, !dbg !8258
  %max_state = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %8, i32 0, i32 8, !dbg !8259
  %9 = load i32, i32* %max_state, align 8, !dbg !8259
  %cmp = icmp eq i32 %9, 0, !dbg !8260
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8261

if.then2:                                         ; preds = %if.end
  %10 = load i64, i64* %count.addr, align 8, !dbg !8262
  store i64 %10, i64* %retval, align 8, !dbg !8263
  br label %return, !dbg !8263

if.end3:                                          ; preds = %if.end
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !8264
  %call = call i32 @kstrtoint(i8* %11, i32 10, i32* %value) #9, !dbg !8265
  store i32 %call, i32* %err, align 4, !dbg !8266
  %12 = load i32, i32* %err, align 4, !dbg !8267
  %tobool4 = icmp ne i32 %12, 0, !dbg !8267
  br i1 %tobool4, label %if.then6, label %lor.lhs.false, !dbg !8269

lor.lhs.false:                                    ; preds = %if.end3
  %13 = load i32, i32* %value, align 4, !dbg !8270
  %cmp5 = icmp ne i32 %13, 0, !dbg !8271
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !8272

if.then6:                                         ; preds = %lor.lhs.false, %if.end3
  store i64 -22, i64* %retval, align 8, !dbg !8273
  br label %return, !dbg !8273

if.end7:                                          ; preds = %lor.lhs.false
  %14 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8274
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %14, i32 0, i32 1, !dbg !8275
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !8276
  %15 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8277
  %stats = getelementptr inbounds %struct.devfreq, %struct.devfreq* %15, i32 0, i32 19, !dbg !8278
  %time_in_state = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats, i32 0, i32 2, !dbg !8279
  %16 = load i64*, i64** %time_in_state, align 8, !dbg !8279
  %17 = bitcast i64* %16 to i8*, !dbg !8280
  %18 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8281
  %profile8 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %18, i32 0, i32 3, !dbg !8282
  %19 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile8, align 8, !dbg !8282
  %max_state9 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %19, i32 0, i32 8, !dbg !8283
  %20 = load i32, i32* %max_state9, align 8, !dbg !8283
  %conv = zext i32 %20 to i64, !dbg !8281
  %mul = mul i64 %conv, 8, !dbg !8284
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %mul, i1 false), !dbg !8280
  %21 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8285
  %stats10 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %21, i32 0, i32 19, !dbg !8286
  %trans_table = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats10, i32 0, i32 1, !dbg !8287
  %22 = load i32*, i32** %trans_table, align 8, !dbg !8287
  %23 = bitcast i32* %22 to i8*, !dbg !8288
  %24 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8289
  %profile11 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %24, i32 0, i32 3, !dbg !8290
  %25 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile11, align 8, !dbg !8290
  %max_state12 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %25, i32 0, i32 8, !dbg !8291
  %26 = load i32, i32* %max_state12, align 8, !dbg !8291
  %conv13 = zext i32 %26 to i64, !dbg !8289
  %27 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8292
  %profile14 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %27, i32 0, i32 3, !dbg !8293
  %28 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile14, align 8, !dbg !8293
  %max_state15 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %28, i32 0, i32 8, !dbg !8294
  %29 = load i32, i32* %max_state15, align 8, !dbg !8294
  %conv16 = zext i32 %29 to i64, !dbg !8292
  %call17 = call i64 @array3_size(i64 4, i64 %conv13, i64 %conv16) #9, !dbg !8295
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 %call17, i1 false), !dbg !8288
  %30 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8296
  %stats18 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %30, i32 0, i32 19, !dbg !8297
  %total_trans = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats18, i32 0, i32 0, !dbg !8298
  store i32 0, i32* %total_trans, align 8, !dbg !8299
  %call19 = call i64 @get_jiffies_64() #9, !dbg !8300
  %31 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8301
  %stats20 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %31, i32 0, i32 19, !dbg !8302
  %last_update = getelementptr inbounds %struct.devfreq_stats, %struct.devfreq_stats* %stats20, i32 0, i32 3, !dbg !8303
  store i64 %call19, i64* %last_update, align 8, !dbg !8304
  %32 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8305
  %lock21 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %32, i32 0, i32 1, !dbg !8306
  call void @mutex_unlock(%struct.mutex* %lock21) #9, !dbg !8307
  %33 = load i64, i64* %count.addr, align 8, !dbg !8308
  store i64 %33, i64* %retval, align 8, !dbg !8309
  br label %return, !dbg !8309

return:                                           ; preds = %if.end7, %if.then6, %if.then2, %if.then
  %34 = load i64, i64* %retval, align 8, !dbg !8310
  ret i64 %34, !dbg !8310
}

; Function Attrs: noredzone
declare dso_local i64 @jiffies64_to_msecs(i64) #3

; Function Attrs: noredzone
declare dso_local i32 @kstrtoint(i8*, i32, i32*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @timer_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !8311 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8312, metadata !DIExpression()), !dbg !8313
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8316, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !8318, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8320, metadata !DIExpression()), !dbg !8322
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8322
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8322
  store i8* %1, i8** %__mptr, align 8, !dbg !8322
  br label %do.body, !dbg !8322

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8323

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8322
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !8322
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !8322
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !8323
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !8322
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !8319
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8325
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 3, !dbg !8327
  %6 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !8327
  %tobool = icmp ne %struct.devfreq_dev_profile* %6, null, !dbg !8325
  br i1 %tobool, label %if.end, label %if.then, !dbg !8328

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !8329
  br label %return, !dbg !8329

if.end:                                           ; preds = %do.end
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !8330
  %8 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8331
  %profile1 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 3, !dbg !8332
  %9 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile1, align 8, !dbg !8332
  %timer = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %9, i32 0, i32 2, !dbg !8333
  %10 = load i32, i32* %timer, align 4, !dbg !8333
  %idxprom = zext i32 %10 to i64, !dbg !8334
  %arrayidx = getelementptr [2 x [16 x i8]], [2 x [16 x i8]]* @timer_name, i64 0, i64 %idxprom, !dbg !8334
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx, i64 0, i64 0, !dbg !8334
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), i8* %arraydecay) #9, !dbg !8335
  %conv = sext i32 %call to i64, !dbg !8335
  store i64 %conv, i64* %retval, align 8, !dbg !8336
  br label %return, !dbg !8336

return:                                           ; preds = %if.end, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !8337
  ret i64 %11, !dbg !8337
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @timer_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !8338 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %df = alloca %struct.devfreq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %str_timer = alloca [17 x i8], align 16
  %timer = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8339, metadata !DIExpression()), !dbg !8340
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8341, metadata !DIExpression()), !dbg !8342
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8343, metadata !DIExpression()), !dbg !8344
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !8345, metadata !DIExpression()), !dbg !8346
  call void @llvm.dbg.declare(metadata %struct.devfreq** %df, metadata !8347, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8349, metadata !DIExpression()), !dbg !8351
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8351
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8351
  store i8* %1, i8** %__mptr, align 8, !dbg !8351
  br label %do.body, !dbg !8351

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8352

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8351
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !8351
  %3 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !8351
  store %struct.devfreq* %3, %struct.devfreq** %tmp, align 8, !dbg !8352
  %4 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !8351
  store %struct.devfreq* %4, %struct.devfreq** %df, align 8, !dbg !8348
  call void @llvm.dbg.declare(metadata [17 x i8]* %str_timer, metadata !8354, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.declare(metadata i32* %timer, metadata !8356, metadata !DIExpression()), !dbg !8357
  store i32 -1, i32* %timer, align 4, !dbg !8357
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8358, metadata !DIExpression()), !dbg !8359
  store i32 0, i32* %ret, align 4, !dbg !8359
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8360, metadata !DIExpression()), !dbg !8361
  %5 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8362
  %governor = getelementptr inbounds %struct.devfreq, %struct.devfreq* %5, i32 0, i32 4, !dbg !8364
  %6 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor, align 8, !dbg !8364
  %tobool = icmp ne %struct.devfreq_governor* %6, null, !dbg !8362
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8365

lor.lhs.false:                                    ; preds = %do.end
  %7 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8366
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 3, !dbg !8367
  %8 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !8367
  %tobool1 = icmp ne %struct.devfreq_dev_profile* %8, null, !dbg !8366
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8368

if.then:                                          ; preds = %lor.lhs.false, %do.end
  store i64 -22, i64* %retval, align 8, !dbg !8369
  br label %return, !dbg !8369

if.end:                                           ; preds = %lor.lhs.false
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !8370
  %arraydecay = getelementptr inbounds [17 x i8], [17 x i8]* %str_timer, i64 0, i64 0, !dbg !8371
  %call = call i32 (i8*, i8*, ...) @sscanf(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0), i8* %arraydecay) #9, !dbg !8372
  store i32 %call, i32* %ret, align 4, !dbg !8373
  %10 = load i32, i32* %ret, align 4, !dbg !8374
  %cmp = icmp ne i32 %10, 1, !dbg !8376
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8377

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !8378
  br label %return, !dbg !8378

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8379
  br label %for.cond, !dbg !8381

for.cond:                                         ; preds = %for.inc, %if.end3
  %11 = load i32, i32* %i, align 4, !dbg !8382
  %cmp4 = icmp slt i32 %11, 2, !dbg !8384
  br i1 %cmp4, label %for.body, label %for.end, !dbg !8385

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !8386
  %idxprom = sext i32 %12 to i64, !dbg !8389
  %arrayidx = getelementptr [2 x [16 x i8]], [2 x [16 x i8]]* @timer_name, i64 0, i64 %idxprom, !dbg !8389
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx, i64 0, i64 0, !dbg !8389
  %arraydecay6 = getelementptr inbounds [17 x i8], [17 x i8]* %str_timer, i64 0, i64 0, !dbg !8390
  %call7 = call i32 @strncmp(i8* %arraydecay5, i8* %arraydecay6, i64 16) #9, !dbg !8391
  %tobool8 = icmp ne i32 %call7, 0, !dbg !8391
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !8392

if.then9:                                         ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !8393
  store i32 %13, i32* %timer, align 4, !dbg !8395
  br label %for.end, !dbg !8396

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !8397

for.inc:                                          ; preds = %if.end10
  %14 = load i32, i32* %i, align 4, !dbg !8398
  %inc = add i32 %14, 1, !dbg !8398
  store i32 %inc, i32* %i, align 4, !dbg !8398
  br label %for.cond, !dbg !8399, !llvm.loop !8400

for.end:                                          ; preds = %if.then9, %for.cond
  %15 = load i32, i32* %timer, align 4, !dbg !8402
  %cmp11 = icmp slt i32 %15, 0, !dbg !8404
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8405

if.then12:                                        ; preds = %for.end
  store i32 -22, i32* %ret, align 4, !dbg !8406
  br label %out, !dbg !8408

if.end13:                                         ; preds = %for.end
  %16 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8409
  %profile14 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %16, i32 0, i32 3, !dbg !8411
  %17 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile14, align 8, !dbg !8411
  %timer15 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %17, i32 0, i32 2, !dbg !8412
  %18 = load i32, i32* %timer15, align 4, !dbg !8412
  %19 = load i32, i32* %timer, align 4, !dbg !8413
  %cmp16 = icmp eq i32 %18, %19, !dbg !8414
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !8415

if.then17:                                        ; preds = %if.end13
  store i32 0, i32* %ret, align 4, !dbg !8416
  br label %out, !dbg !8418

if.end18:                                         ; preds = %if.end13
  %20 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8419
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %20, i32 0, i32 1, !dbg !8420
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !8421
  %21 = load i32, i32* %timer, align 4, !dbg !8422
  %22 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8423
  %profile19 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %22, i32 0, i32 3, !dbg !8424
  %23 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile19, align 8, !dbg !8424
  %timer20 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %23, i32 0, i32 2, !dbg !8425
  store i32 %21, i32* %timer20, align 4, !dbg !8426
  %24 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8427
  %lock21 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %24, i32 0, i32 1, !dbg !8428
  call void @mutex_unlock(%struct.mutex* %lock21) #9, !dbg !8429
  %25 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8430
  %governor22 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %25, i32 0, i32 4, !dbg !8431
  %26 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor22, align 8, !dbg !8431
  %event_handler = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %26, i32 0, i32 5, !dbg !8432
  %27 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler, align 8, !dbg !8432
  %28 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8433
  %call23 = call i32 %27(%struct.devfreq* %28, i32 2, i8* null) #9, !dbg !8430
  store i32 %call23, i32* %ret, align 4, !dbg !8434
  %29 = load i32, i32* %ret, align 4, !dbg !8435
  %tobool24 = icmp ne i32 %29, 0, !dbg !8435
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !8437

if.then25:                                        ; preds = %if.end18
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8438
  %31 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8438
  %governor26 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %31, i32 0, i32 4, !dbg !8438
  %32 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor26, align 8, !dbg !8438
  %name = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %32, i32 0, i32 1, !dbg !8438
  %arraydecay27 = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !8438
  %33 = load i32, i32* %ret, align 4, !dbg !8438
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %30, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.timer_store, i64 0, i64 0), i8* %arraydecay27, i32 %33) #10, !dbg !8438
  br label %out, !dbg !8440

if.end28:                                         ; preds = %if.end18
  %34 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8441
  %governor29 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %34, i32 0, i32 4, !dbg !8442
  %35 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor29, align 8, !dbg !8442
  %event_handler30 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %35, i32 0, i32 5, !dbg !8443
  %36 = load i32 (%struct.devfreq*, i32, i8*)*, i32 (%struct.devfreq*, i32, i8*)** %event_handler30, align 8, !dbg !8443
  %37 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8444
  %call31 = call i32 %36(%struct.devfreq* %37, i32 1, i8* null) #9, !dbg !8441
  store i32 %call31, i32* %ret, align 4, !dbg !8445
  %38 = load i32, i32* %ret, align 4, !dbg !8446
  %tobool32 = icmp ne i32 %38, 0, !dbg !8446
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !8448

if.then33:                                        ; preds = %if.end28
  %39 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8449
  %40 = load %struct.devfreq*, %struct.devfreq** %df, align 8, !dbg !8449
  %governor34 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %40, i32 0, i32 4, !dbg !8449
  %41 = load %struct.devfreq_governor*, %struct.devfreq_governor** %governor34, align 8, !dbg !8449
  %name35 = getelementptr inbounds %struct.devfreq_governor, %struct.devfreq_governor* %41, i32 0, i32 1, !dbg !8449
  %arraydecay36 = getelementptr inbounds [16 x i8], [16 x i8]* %name35, i64 0, i64 0, !dbg !8449
  %42 = load i32, i32* %ret, align 4, !dbg !8449
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %39, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.timer_store, i64 0, i64 0), i8* %arraydecay36, i32 %42) #10, !dbg !8449
  br label %if.end37, !dbg !8449

if.end37:                                         ; preds = %if.then33, %if.end28
  br label %out, !dbg !8446

out:                                              ; preds = %if.end37, %if.then25, %if.then17, %if.then12
  call void @llvm.dbg.label(metadata !8450), !dbg !8451
  %43 = load i32, i32* %ret, align 4, !dbg !8452
  %tobool38 = icmp ne i32 %43, 0, !dbg !8452
  br i1 %tobool38, label %cond.true, label %cond.false, !dbg !8452

cond.true:                                        ; preds = %out
  %44 = load i32, i32* %ret, align 4, !dbg !8453
  %conv = sext i32 %44 to i64, !dbg !8453
  br label %cond.end, !dbg !8452

cond.false:                                       ; preds = %out
  %45 = load i64, i64* %count.addr, align 8, !dbg !8454
  br label %cond.end, !dbg !8452

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv, %cond.true ], [ %45, %cond.false ], !dbg !8452
  store i64 %cond, i64* %retval, align 8, !dbg !8455
  br label %return, !dbg !8455

return:                                           ; preds = %cond.end, %if.then2, %if.then
  %46 = load i64, i64* %retval, align 8, !dbg !8456
  ret i64 %46, !dbg !8456
}

; Function Attrs: noredzone
declare dso_local i64 @seq_lseek(%struct.file*, i64, i32) #3

; Function Attrs: noredzone
declare dso_local i64 @seq_read(%struct.file*, i8*, i64, i64*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devfreq_summary_open(%struct.inode* %inode, %struct.file* %file) #0 !dbg !8457 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !8458, metadata !DIExpression()), !dbg !8459
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8460, metadata !DIExpression()), !dbg !8459
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8459
  %1 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !8459
  %i_private = getelementptr inbounds %struct.inode, %struct.inode* %1, i32 0, i32 44, !dbg !8459
  %2 = load i8*, i8** %i_private, align 8, !dbg !8459
  %call = call i32 @single_open(%struct.file* %0, i32 (%struct.seq_file*, i8*)* @devfreq_summary_show, i8* %2) #9, !dbg !8459
  ret i32 %call, !dbg !8459
}

; Function Attrs: noredzone
declare dso_local i32 @single_release(%struct.inode*, %struct.file*) #3

; Function Attrs: noredzone
declare dso_local i32 @single_open(%struct.file*, i32 (%struct.seq_file*, i8*)*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devfreq_summary_show(%struct.seq_file* %s, i8* %data) #0 !dbg !8461 {
entry:
  %s.addr = alloca %struct.seq_file*, align 8
  %data.addr = alloca i8*, align 8
  %devfreq = alloca %struct.devfreq*, align 8
  %p_devfreq = alloca %struct.devfreq*, align 8
  %cur_freq = alloca i64, align 8
  %min_freq = alloca i64, align 8
  %max_freq = alloca i64, align 8
  %polling_ms = alloca i32, align 4
  %timer = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devfreq*, align 8
  %__mptr13 = alloca i8*, align 8
  %tmp17 = alloca %struct.devfreq*, align 8
  store %struct.seq_file* %s, %struct.seq_file** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %s.addr, metadata !8462, metadata !DIExpression()), !dbg !8463
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8464, metadata !DIExpression()), !dbg !8465
  call void @llvm.dbg.declare(metadata %struct.devfreq** %devfreq, metadata !8466, metadata !DIExpression()), !dbg !8467
  call void @llvm.dbg.declare(metadata %struct.devfreq** %p_devfreq, metadata !8468, metadata !DIExpression()), !dbg !8469
  store %struct.devfreq* null, %struct.devfreq** %p_devfreq, align 8, !dbg !8469
  call void @llvm.dbg.declare(metadata i64* %cur_freq, metadata !8470, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.declare(metadata i64* %min_freq, metadata !8472, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.declare(metadata i64* %max_freq, metadata !8474, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.declare(metadata i32* %polling_ms, metadata !8476, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.declare(metadata i32* %timer, metadata !8478, metadata !DIExpression()), !dbg !8479
  %0 = load %struct.seq_file*, %struct.seq_file** %s.addr, align 8, !dbg !8480
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0)) #9, !dbg !8481
  %1 = load %struct.seq_file*, %struct.seq_file** %s.addr, align 8, !dbg !8482
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i64 0, i64 0)) #9, !dbg !8483
  call void @mutex_lock(%struct.mutex* @devfreq_list_lock) #9, !dbg !8484
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8485, metadata !DIExpression()), !dbg !8488
  %2 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @devfreq_list, i32 0, i32 1), align 8, !dbg !8488
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !8488
  store i8* %3, i8** %__mptr, align 8, !dbg !8488
  br label %do.body, !dbg !8488

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8489

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !8488
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !8488
  %5 = bitcast i8* %add.ptr to %struct.devfreq*, !dbg !8488
  store %struct.devfreq* %5, %struct.devfreq** %tmp, align 8, !dbg !8489
  %6 = load %struct.devfreq*, %struct.devfreq** %tmp, align 8, !dbg !8488
  store %struct.devfreq* %6, %struct.devfreq** %devfreq, align 8, !dbg !8491
  br label %for.cond, !dbg !8491

for.cond:                                         ; preds = %do.end16, %do.end
  %7 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !8492
  %node = getelementptr inbounds %struct.devfreq, %struct.devfreq* %7, i32 0, i32 0, !dbg !8492
  %cmp = icmp eq %struct.list_head* %node, @devfreq_list, !dbg !8492
  %lnot = xor i1 %cmp, true, !dbg !8492
  br i1 %lnot, label %for.body, label %for.end, !dbg !8491

for.body:                                         ; preds = %for.cond
  %8 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !8494
  %lock = getelementptr inbounds %struct.devfreq, %struct.devfreq* %8, i32 0, i32 1, !dbg !8496
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !8497
  %9 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !8498
  %previous_freq = getelementptr inbounds %struct.devfreq, %struct.devfreq* %9, i32 0, i32 8, !dbg !8499
  %10 = load i64, i64* %previous_freq, align 8, !dbg !8499
  store i64 %10, i64* %cur_freq, align 8, !dbg !8500
  %11 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !8501
  call void @get_freq_range(%struct.devfreq* %11, i64* %min_freq, i64* %max_freq) #9, !dbg !8502
  %12 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !8503
  %profile = getelementptr inbounds %struct.devfreq, %struct.devfreq* %12, i32 0, i32 3, !dbg !8504
  %13 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile, align 8, !dbg !8504
  %polling_ms1 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %13, i32 0, i32 1, !dbg !8505
  %14 = load i32, i32* %polling_ms1, align 8, !dbg !8505
  store i32 %14, i32* %polling_ms, align 4, !dbg !8506
  %15 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !8507
  %profile2 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %15, i32 0, i32 3, !dbg !8508
  %16 = load %struct.devfreq_dev_profile*, %struct.devfreq_dev_profile** %profile2, align 8, !dbg !8508
  %timer3 = getelementptr inbounds %struct.devfreq_dev_profile, %struct.devfreq_dev_profile* %16, i32 0, i32 2, !dbg !8509
  %17 = load i32, i32* %timer3, align 4, !dbg !8509
  store i32 %17, i32* %timer, align 4, !dbg !8510
  %18 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !8511
  %lock4 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %18, i32 0, i32 1, !dbg !8512
  call void @mutex_unlock(%struct.mutex* %lock4) #9, !dbg !8513
  %19 = load %struct.seq_file*, %struct.seq_file** %s.addr, align 8, !dbg !8514
  %20 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !8515
  %dev = getelementptr inbounds %struct.devfreq, %struct.devfreq* %20, i32 0, i32 2, !dbg !8516
  %call = call i8* @dev_name(%struct.device* %dev) #9, !dbg !8517
  %21 = load %struct.devfreq*, %struct.devfreq** %p_devfreq, align 8, !dbg !8518
  %tobool = icmp ne %struct.devfreq* %21, null, !dbg !8518
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8518

cond.true:                                        ; preds = %for.body
  %22 = load %struct.devfreq*, %struct.devfreq** %p_devfreq, align 8, !dbg !8519
  %dev5 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %22, i32 0, i32 2, !dbg !8520
  %call6 = call i8* @dev_name(%struct.device* %dev5) #9, !dbg !8521
  br label %cond.end, !dbg !8518

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !8518

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call6, %cond.true ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0), %cond.false ], !dbg !8518
  %23 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !8522
  %governor_name = getelementptr inbounds %struct.devfreq, %struct.devfreq* %23, i32 0, i32 5, !dbg !8523
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %governor_name, i64 0, i64 0, !dbg !8522
  %24 = load i32, i32* %polling_ms, align 4, !dbg !8524
  %tobool7 = icmp ne i32 %24, 0, !dbg !8524
  br i1 %tobool7, label %cond.true8, label %cond.false10, !dbg !8524

cond.true8:                                       ; preds = %cond.end
  %25 = load i32, i32* %timer, align 4, !dbg !8525
  %idxprom = zext i32 %25 to i64, !dbg !8526
  %arrayidx = getelementptr [2 x [16 x i8]], [2 x [16 x i8]]* @timer_name, i64 0, i64 %idxprom, !dbg !8526
  %arraydecay9 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx, i64 0, i64 0, !dbg !8526
  br label %cond.end11, !dbg !8524

cond.false10:                                     ; preds = %cond.end
  br label %cond.end11, !dbg !8524

cond.end11:                                       ; preds = %cond.false10, %cond.true8
  %cond12 = phi i8* [ %arraydecay9, %cond.true8 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0), %cond.false10 ], !dbg !8524
  %26 = load i32, i32* %polling_ms, align 4, !dbg !8527
  %27 = load i64, i64* %cur_freq, align 8, !dbg !8528
  %28 = load i64, i64* %min_freq, align 8, !dbg !8529
  %29 = load i64, i64* %max_freq, align 8, !dbg !8530
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %19, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.81, i64 0, i64 0), i8* %call, i8* %cond, i8* %arraydecay, i8* %cond12, i32 %26, i64 %27, i64 %28, i64 %29) #9, !dbg !8531
  br label %for.inc, !dbg !8532

for.inc:                                          ; preds = %cond.end11
  call void @llvm.dbg.declare(metadata i8** %__mptr13, metadata !8533, metadata !DIExpression()), !dbg !8535
  %30 = load %struct.devfreq*, %struct.devfreq** %devfreq, align 8, !dbg !8535
  %node14 = getelementptr inbounds %struct.devfreq, %struct.devfreq* %30, i32 0, i32 0, !dbg !8535
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %node14, i32 0, i32 1, !dbg !8535
  %31 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8535
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !8535
  store i8* %32, i8** %__mptr13, align 8, !dbg !8535
  br label %do.body15, !dbg !8535

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !8536

do.end16:                                         ; preds = %do.body15
  %33 = load i8*, i8** %__mptr13, align 8, !dbg !8535
  %add.ptr18 = getelementptr i8, i8* %33, i64 0, !dbg !8535
  %34 = bitcast i8* %add.ptr18 to %struct.devfreq*, !dbg !8535
  store %struct.devfreq* %34, %struct.devfreq** %tmp17, align 8, !dbg !8536
  %35 = load %struct.devfreq*, %struct.devfreq** %tmp17, align 8, !dbg !8535
  store %struct.devfreq* %35, %struct.devfreq** %devfreq, align 8, !dbg !8492
  br label %for.cond, !dbg !8492, !llvm.loop !8538

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @devfreq_list_lock) #9, !dbg !8540
  ret i32 0, !dbg !8541
}

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #3

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone }
attributes #10 = { cold noredzone }
attributes #11 = { nounwind }
attributes #12 = { noredzone nounwind }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3912, !3913, !3914, !3915}
!llvm.ident = !{!3916}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "devfreq_wq", scope: !2, file: !3, line: 44, type: !2629, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !164, globals: !3841, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/devfreq/devfreq.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !18, !24, !30, !39, !47, !53, !59, !66, !74, !80, !86, !93, !97, !103, !136, !141, !148}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !14, line: 65, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !19, line: 16, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !25, line: 54, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !31, line: 296, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38}
!33 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !40, line: 9, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!41 = !{!42, !43, !44, !45, !46}
!42 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !48, line: 26, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !54, line: 44, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58}
!56 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !60, line: 343, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !67, line: 524, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71, !72, !73}
!69 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!73 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !67, line: 502, baseType: !7, size: 32, elements: !75)
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pm_qos_type", file: !81, line: 41, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "./include/linux/pm_qos.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !84, !85}
!83 = !DIEnumerator(name: "PM_QOS_UNITIALIZED", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "PM_QOS_MAX", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "PM_QOS_MIN", value: 2, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dev_pm_qos_req_type", file: !81, line: 99, baseType: !7, size: 32, elements: !87)
!87 = !{!88, !89, !90, !91, !92}
!88 = !DIEnumerator(name: "DEV_PM_QOS_RESUME_LATENCY", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "DEV_PM_QOS_LATENCY_TOLERANCE", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "DEV_PM_QOS_MIN_FREQUENCY", value: 3, isUnsigned: true)
!91 = !DIEnumerator(name: "DEV_PM_QOS_MAX_FREQUENCY", value: 4, isUnsigned: true)
!92 = !DIEnumerator(name: "DEV_PM_QOS_FLAGS", value: 5, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "freq_qos_req_type", file: !81, line: 80, baseType: !7, size: 32, elements: !94)
!94 = !{!95, !96}
!95 = !DIEnumerator(name: "FREQ_QOS_MIN", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "FREQ_QOS_MAX", value: 2, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devfreq_timer", file: !98, line: 35, baseType: !7, size: 32, elements: !99)
!98 = !DIFile(filename: "./include/linux/devfreq.h", directory: "/home/lizy2001/genbc/linux")
!99 = !{!100, !101, !102}
!100 = !DIEnumerator(name: "DEVFREQ_TIMER_DEFERRABLE", value: 0, isUnsigned: true)
!101 = !DIEnumerator(name: "DEVFREQ_TIMER_DELAYED", value: 1, isUnsigned: true)
!102 = !DIEnumerator(name: "DEVFREQ_TIMER_NUM", value: 2, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !104, line: 30, baseType: !105, size: 64, elements: !106)
!104 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!105 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!106 = !{!107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!107 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!108 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!109 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!110 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!111 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!112 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!113 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!114 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!115 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!116 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!117 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!118 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!119 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!120 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!121 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!122 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!123 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!124 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!125 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!126 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!127 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!128 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!129 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!130 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!131 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!132 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!133 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!134 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!135 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !137, line: 10, baseType: !7, size: 32, elements: !138)
!137 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!138 = !{!139, !140}
!139 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!140 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !142, line: 305, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !104, line: 308, baseType: !7, size: 32, elements: !149)
!149 = !{!150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163}
!150 = !DIEnumerator(name: "WQ_UNBOUND", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "WQ_FREEZABLE", value: 4, isUnsigned: true)
!152 = !DIEnumerator(name: "WQ_MEM_RECLAIM", value: 8, isUnsigned: true)
!153 = !DIEnumerator(name: "WQ_HIGHPRI", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "WQ_CPU_INTENSIVE", value: 32, isUnsigned: true)
!155 = !DIEnumerator(name: "WQ_SYSFS", value: 64, isUnsigned: true)
!156 = !DIEnumerator(name: "WQ_POWER_EFFICIENT", value: 128, isUnsigned: true)
!157 = !DIEnumerator(name: "__WQ_DRAINING", value: 65536, isUnsigned: true)
!158 = !DIEnumerator(name: "__WQ_ORDERED", value: 131072, isUnsigned: true)
!159 = !DIEnumerator(name: "__WQ_LEGACY", value: 262144, isUnsigned: true)
!160 = !DIEnumerator(name: "__WQ_ORDERED_EXPLICIT", value: 524288, isUnsigned: true)
!161 = !DIEnumerator(name: "WQ_MAX_ACTIVE", value: 512, isUnsigned: true)
!162 = !DIEnumerator(name: "WQ_MAX_UNBOUND_PER_CPU", value: 4, isUnsigned: true)
!163 = !DIEnumerator(name: "WQ_DFL_ACTIVE", value: 256, isUnsigned: true)
!164 = !{!165, !166, !167, !169, !174, !176, !177, !404, !3835, !173, !105, !3837, !309, !3839, !3840, !613}
!165 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !168, line: 148, baseType: !7)
!168 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !170, line: 20, baseType: !171)
!170 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !172, line: 26, baseType: !173)
!172 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!173 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !170, line: 21, baseType: !175)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !172, line: 27, baseType: !7)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devfreq", file: !98, line: 172, size: 10432, elements: !179)
!179 = !{!180, !186, !217, !3739, !3768, !3787, !3788, !3789, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3814, !3833, !3834}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !178, file: !98, line: 173, baseType: !181, size: 128)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !168, line: 178, size: 128, elements: !182)
!182 = !{!183, !185}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !181, file: !168, line: 179, baseType: !184, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !181, file: !168, line: 179, baseType: !184, size: 64, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !178, file: !98, line: 175, baseType: !187, size: 192, offset: 128)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !188, line: 53, size: 192, elements: !189)
!188 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!189 = !{!190, !200, !216}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !187, file: !188, line: 54, baseType: !191, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !192, line: 13, baseType: !193)
!192 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !168, line: 175, baseType: !194)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !168, line: 173, size: 64, elements: !195)
!195 = !{!196}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !194, file: !168, line: 174, baseType: !197, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !170, line: 22, baseType: !198)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !172, line: 30, baseType: !199)
!199 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !187, file: !188, line: 55, baseType: !201, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !202, line: 83, baseType: !203)
!202 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !202, line: 71, elements: !204)
!204 = !{!205}
!205 = !DIDerivedType(tag: DW_TAG_member, scope: !203, file: !202, line: 72, baseType: !206)
!206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !203, file: !202, line: 72, elements: !207)
!207 = !{!208}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !206, file: !202, line: 73, baseType: !209)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !202, line: 20, elements: !210)
!210 = !{!211}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !209, file: !202, line: 21, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !213, line: 25, baseType: !214)
!213 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !213, line: 25, elements: !215)
!215 = !{}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !187, file: !188, line: 59, baseType: !181, size: 128, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !178, file: !98, line: 176, baseType: !218, size: 5568, offset: 320)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !60, line: 461, size: 5568, elements: !219)
!219 = !{!220, !3198, !3200, !3203, !3204, !3255, !3346, !3347, !3348, !3349, !3350, !3359, !3536, !3549, !3552, !3553, !3557, !3559, !3560, !3561, !3565, !3571, !3572, !3575, !3690, !3691, !3692, !3693, !3694, !3695, !3727, !3728, !3729, !3732, !3735, !3736, !3737, !3738}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !218, file: !60, line: 462, baseType: !221, size: 512)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !222, line: 64, size: 512, elements: !223)
!222 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!223 = !{!224, !228, !229, !231, !276, !3060, !3188, !3193, !3194, !3195, !3196, !3197}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !221, file: !222, line: 65, baseType: !225, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!227 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !221, file: !222, line: 66, baseType: !181, size: 128, offset: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !221, file: !222, line: 67, baseType: !230, size: 64, offset: 192)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !221, file: !222, line: 68, baseType: !232, size: 64, offset: 256)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !222, line: 192, size: 704, elements: !234)
!234 = !{!235, !236, !237, !238}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !233, file: !222, line: 193, baseType: !181, size: 128)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !233, file: !222, line: 194, baseType: !201, offset: 128)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !233, file: !222, line: 195, baseType: !221, size: 512, offset: 128)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !233, file: !222, line: 196, baseType: !239, size: 64, offset: 640)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !241)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !222, line: 156, size: 192, elements: !242)
!242 = !{!243, !248, !253}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !241, file: !222, line: 157, baseType: !244, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DISubroutineType(types: !247)
!247 = !{!173, !232, !230}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !241, file: !222, line: 158, baseType: !249, size: 64, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DISubroutineType(types: !252)
!252 = !{!225, !232, !230}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !241, file: !222, line: 159, baseType: !254, size: 64, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DISubroutineType(types: !257)
!257 = !{!173, !232, !230, !258}
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !222, line: 148, size: 20736, elements: !260)
!260 = !{!261, !266, !270, !271, !275}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !259, file: !222, line: 149, baseType: !262, size: 192)
!262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 192, elements: !264)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!264 = !{!265}
!265 = !DISubrange(count: 3)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !259, file: !222, line: 150, baseType: !267, size: 4096, offset: 192)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 4096, elements: !268)
!268 = !{!269}
!269 = !DISubrange(count: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !259, file: !222, line: 151, baseType: !173, size: 32, offset: 4288)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !259, file: !222, line: 152, baseType: !272, size: 16384, offset: 4320)
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 16384, elements: !273)
!273 = !{!274}
!274 = !DISubrange(count: 2048)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !259, file: !222, line: 153, baseType: !173, size: 32, offset: 20704)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !221, file: !222, line: 69, baseType: !277, size: 64, offset: 320)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !222, line: 138, size: 448, elements: !279)
!279 = !{!280, !284, !312, !314, !3020, !3050, !3054}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !278, file: !222, line: 139, baseType: !281, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = !DISubroutineType(types: !283)
!283 = !{null, !230}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !278, file: !222, line: 140, baseType: !285, size: 64, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !287)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !288, line: 230, size: 128, elements: !289)
!288 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!289 = !{!290, !305}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !287, file: !288, line: 231, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = !DISubroutineType(types: !293)
!293 = !{!294, !230, !298, !263}
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !168, line: 60, baseType: !295)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !296, line: 73, baseType: !297)
!296 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !296, line: 15, baseType: !105)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !288, line: 30, size: 128, elements: !300)
!300 = !{!301, !302}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !299, file: !288, line: 31, baseType: !225, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !299, file: !288, line: 32, baseType: !303, size: 16, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !168, line: 19, baseType: !304)
!304 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !287, file: !288, line: 232, baseType: !306, size: 64, offset: 64)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = !DISubroutineType(types: !308)
!308 = !{!294, !230, !298, !225, !309}
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !168, line: 55, baseType: !310)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !296, line: 72, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !296, line: 16, baseType: !165)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !278, file: !222, line: 141, baseType: !313, size: 64, offset: 128)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !278, file: !222, line: 142, baseType: !315, size: 64, offset: 192)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !318)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !288, line: 84, size: 320, elements: !319)
!319 = !{!320, !321, !325, !3017, !3018}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !318, file: !288, line: 85, baseType: !225, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !318, file: !288, line: 86, baseType: !322, size: 64, offset: 64)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!303, !230, !298, !173}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !318, file: !288, line: 88, baseType: !326, size: 64, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DISubroutineType(types: !328)
!328 = !{!303, !230, !329, !173}
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !288, line: 168, size: 448, elements: !331)
!331 = !{!332, !333, !334, !335, !3012, !3013}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !330, file: !288, line: 169, baseType: !299, size: 128)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !330, file: !288, line: 170, baseType: !309, size: 64, offset: 128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !330, file: !288, line: 171, baseType: !176, size: 64, offset: 192)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !330, file: !288, line: 172, baseType: !336, size: 64, offset: 256)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!294, !339, !230, !329, !263, !514, !309}
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !31, line: 916, size: 1856, align: 32, elements: !341)
!341 = !{!342, !360, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2995, !2996, !3005, !3006, !3007, !3008, !3009, !3010, !3011}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !340, file: !31, line: 920, baseType: !343, size: 128)
!343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !340, file: !31, line: 917, size: 128, elements: !344)
!344 = !{!345, !351}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !343, file: !31, line: 918, baseType: !346, size: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !347, line: 58, size: 64, elements: !348)
!347 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!348 = !{!349}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !346, file: !347, line: 59, baseType: !350, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !343, file: !31, line: 919, baseType: !352, size: 128, align: 64)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !168, line: 216, size: 128, align: 64, elements: !353)
!353 = !{!354, !356}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !352, file: !168, line: 217, baseType: !355, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !352, file: !168, line: 218, baseType: !357, size: 64, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DISubroutineType(types: !359)
!359 = !{null, !355}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !340, file: !31, line: 921, baseType: !361, size: 128, offset: 128)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !362, line: 8, size: 128, elements: !363)
!362 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!363 = !{!364, !368}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !361, file: !362, line: 9, baseType: !365, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !367, line: 18, flags: DIFlagFwdDecl)
!367 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!368 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !361, file: !362, line: 10, baseType: !369, size: 64, offset: 64)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !367, line: 89, size: 1536, elements: !371)
!371 = !{!372, !373, !383, !391, !392, !411, !2945, !2947, !2959, !2960, !2961, !2962, !2963, !2969, !2970, !2971}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !370, file: !367, line: 91, baseType: !7, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !370, file: !367, line: 92, baseType: !374, size: 32, offset: 32)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !375, line: 277, baseType: !376)
!375 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !375, line: 277, size: 32, elements: !377)
!377 = !{!378}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !376, file: !375, line: 277, baseType: !379, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !375, line: 70, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !375, line: 65, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !380, file: !375, line: 66, baseType: !7, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !370, file: !367, line: 93, baseType: !384, size: 128, offset: 64)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !385, line: 38, size: 128, elements: !386)
!385 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!386 = !{!387, !389}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !384, file: !385, line: 39, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !384, file: !385, line: 39, baseType: !390, size: 64, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !370, file: !367, line: 94, baseType: !369, size: 64, offset: 192)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !370, file: !367, line: 95, baseType: !393, size: 128, offset: 256)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !367, line: 47, size: 128, elements: !394)
!394 = !{!395, !407}
!395 = !DIDerivedType(tag: DW_TAG_member, scope: !393, file: !367, line: 48, baseType: !396, size: 64)
!396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !393, file: !367, line: 48, size: 64, elements: !397)
!397 = !{!398, !403}
!398 = !DIDerivedType(tag: DW_TAG_member, scope: !396, file: !367, line: 49, baseType: !399, size: 64)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !396, file: !367, line: 49, size: 64, elements: !400)
!400 = !{!401, !402}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !399, file: !367, line: 50, baseType: !174, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !399, file: !367, line: 50, baseType: !174, size: 32, offset: 32)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !396, file: !367, line: 52, baseType: !404, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !170, line: 23, baseType: !405)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !172, line: 31, baseType: !406)
!406 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !393, file: !367, line: 54, baseType: !408, size: 64, offset: 64)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !370, file: !367, line: 96, baseType: !412, size: 64, offset: 384)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !31, line: 610, size: 4224, elements: !414)
!414 = !{!415, !416, !417, !425, !432, !433, !579, !2657, !2658, !2659, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2921, !2929, !2930, !2931, !2941, !2942, !2943, !2944}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !413, file: !31, line: 611, baseType: !303, size: 16)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !413, file: !31, line: 612, baseType: !304, size: 16, offset: 16)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !413, file: !31, line: 613, baseType: !418, size: 32, offset: 32)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !419, line: 23, baseType: !420)
!419 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 21, size: 32, elements: !421)
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !420, file: !419, line: 22, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !168, line: 32, baseType: !424)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !296, line: 49, baseType: !7)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !413, file: !31, line: 614, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !419, line: 28, baseType: !427)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 26, size: 32, elements: !428)
!428 = !{!429}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !427, file: !419, line: 27, baseType: !430, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !168, line: 33, baseType: !431)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !296, line: 50, baseType: !7)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !413, file: !31, line: 615, baseType: !7, size: 32, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !413, file: !31, line: 622, baseType: !434, size: 64, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !31, line: 1864, size: 1536, align: 512, elements: !437)
!437 = !{!438, !442, !455, !459, !465, !469, !475, !479, !483, !487, !491, !492, !498, !502, !526, !555, !559, !565, !570, !574, !575}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !436, file: !31, line: 1865, baseType: !439, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DISubroutineType(types: !441)
!441 = !{!369, !412, !369, !7}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !436, file: !31, line: 1866, baseType: !443, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DISubroutineType(types: !445)
!445 = !{!225, !369, !412, !446}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !448, line: 10, size: 128, elements: !449)
!448 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!449 = !{!450, !454}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !447, file: !448, line: 11, baseType: !451, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !176}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !447, file: !448, line: 12, baseType: !176, size: 64, offset: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !436, file: !31, line: 1867, baseType: !456, size: 64, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = !DISubroutineType(types: !458)
!458 = !{!173, !412, !173}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !436, file: !31, line: 1868, baseType: !460, size: 64, offset: 192)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DISubroutineType(types: !462)
!462 = !{!463, !412, !173}
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !31, line: 581, flags: DIFlagFwdDecl)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !436, file: !31, line: 1870, baseType: !466, size: 64, offset: 256)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DISubroutineType(types: !468)
!468 = !{!173, !369, !263, !173}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !436, file: !31, line: 1872, baseType: !470, size: 64, offset: 320)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DISubroutineType(types: !472)
!472 = !{!173, !412, !369, !303, !473}
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !168, line: 30, baseType: !474)
!474 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !436, file: !31, line: 1873, baseType: !476, size: 64, offset: 384)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = !DISubroutineType(types: !478)
!478 = !{!173, !369, !412, !369}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !436, file: !31, line: 1874, baseType: !480, size: 64, offset: 448)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DISubroutineType(types: !482)
!482 = !{!173, !412, !369}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !436, file: !31, line: 1875, baseType: !484, size: 64, offset: 512)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{!173, !412, !369, !225}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !436, file: !31, line: 1876, baseType: !488, size: 64, offset: 576)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DISubroutineType(types: !490)
!490 = !{!173, !412, !369, !303}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !436, file: !31, line: 1877, baseType: !480, size: 64, offset: 640)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !436, file: !31, line: 1878, baseType: !493, size: 64, offset: 704)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DISubroutineType(types: !495)
!495 = !{!173, !412, !369, !303, !496}
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !168, line: 16, baseType: !497)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !168, line: 13, baseType: !174)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !436, file: !31, line: 1879, baseType: !499, size: 64, offset: 768)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DISubroutineType(types: !501)
!501 = !{!173, !412, !369, !412, !369, !7}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !436, file: !31, line: 1881, baseType: !503, size: 64, offset: 832)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DISubroutineType(types: !505)
!505 = !{!173, !369, !506}
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !31, line: 219, size: 640, elements: !508)
!508 = !{!509, !510, !511, !512, !513, !516, !523, !524, !525}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !507, file: !31, line: 220, baseType: !7, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !507, file: !31, line: 221, baseType: !303, size: 16, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !507, file: !31, line: 222, baseType: !418, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !507, file: !31, line: 223, baseType: !426, size: 32, offset: 96)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !507, file: !31, line: 224, baseType: !514, size: 64, offset: 128)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !168, line: 46, baseType: !515)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !296, line: 88, baseType: !199)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !507, file: !31, line: 225, baseType: !517, size: 128, offset: 192)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !518, line: 13, size: 128, elements: !519)
!518 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!519 = !{!520, !522}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !517, file: !518, line: 14, baseType: !521, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !518, line: 8, baseType: !198)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !517, file: !518, line: 15, baseType: !105, size: 64, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !507, file: !31, line: 226, baseType: !517, size: 128, offset: 320)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !507, file: !31, line: 227, baseType: !517, size: 128, offset: 448)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !507, file: !31, line: 234, baseType: !339, size: 64, offset: 576)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !436, file: !31, line: 1882, baseType: !527, size: 64, offset: 896)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DISubroutineType(types: !529)
!529 = !{!173, !530, !532, !174, !7}
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !361)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !534, line: 22, size: 1152, elements: !535)
!534 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!535 = !{!536, !537, !538, !539, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !533, file: !534, line: 23, baseType: !174, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !533, file: !534, line: 24, baseType: !303, size: 16, offset: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !533, file: !534, line: 25, baseType: !7, size: 32, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !533, file: !534, line: 26, baseType: !540, size: 32, offset: 96)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !168, line: 104, baseType: !174)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !533, file: !534, line: 27, baseType: !404, size: 64, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !533, file: !534, line: 28, baseType: !404, size: 64, offset: 192)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !533, file: !534, line: 37, baseType: !404, size: 64, offset: 256)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !533, file: !534, line: 38, baseType: !496, size: 32, offset: 320)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !533, file: !534, line: 39, baseType: !496, size: 32, offset: 352)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !533, file: !534, line: 40, baseType: !418, size: 32, offset: 384)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !533, file: !534, line: 41, baseType: !426, size: 32, offset: 416)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !533, file: !534, line: 42, baseType: !514, size: 64, offset: 448)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !533, file: !534, line: 43, baseType: !517, size: 128, offset: 512)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !533, file: !534, line: 44, baseType: !517, size: 128, offset: 640)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !533, file: !534, line: 45, baseType: !517, size: 128, offset: 768)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !533, file: !534, line: 46, baseType: !517, size: 128, offset: 896)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !533, file: !534, line: 47, baseType: !404, size: 64, offset: 1024)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !533, file: !534, line: 48, baseType: !404, size: 64, offset: 1088)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !436, file: !31, line: 1883, baseType: !556, size: 64, offset: 960)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = !DISubroutineType(types: !558)
!558 = !{!294, !369, !263, !309}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !436, file: !31, line: 1884, baseType: !560, size: 64, offset: 1024)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = !DISubroutineType(types: !562)
!562 = !{!173, !412, !563, !404, !404}
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !31, line: 50, flags: DIFlagFwdDecl)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !436, file: !31, line: 1886, baseType: !566, size: 64, offset: 1088)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DISubroutineType(types: !568)
!568 = !{!173, !412, !569, !173}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !436, file: !31, line: 1887, baseType: !571, size: 64, offset: 1152)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DISubroutineType(types: !573)
!573 = !{!173, !412, !369, !339, !7, !303}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !436, file: !31, line: 1890, baseType: !488, size: 64, offset: 1216)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !436, file: !31, line: 1891, baseType: !576, size: 64, offset: 1280)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DISubroutineType(types: !578)
!578 = !{!173, !412, !463, !173}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !413, file: !31, line: 623, baseType: !580, size: 64, offset: 192)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !31, line: 1416, size: 9472, elements: !582)
!582 = !{!583, !584, !585, !586, !587, !588, !637, !2264, !2346, !2429, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2445, !2449, !2450, !2453, !2454, !2457, !2458, !2459, !2500, !2527, !2528, !2529, !2530, !2531, !2532, !2535, !2537, !2544, !2545, !2547, !2548, !2549, !2608, !2609, !2624, !2625, !2626, !2627, !2628, !2631, !2632, !2633, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !581, file: !31, line: 1417, baseType: !181, size: 128)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !581, file: !31, line: 1418, baseType: !496, size: 32, offset: 128)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !581, file: !31, line: 1419, baseType: !410, size: 8, offset: 160)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !581, file: !31, line: 1420, baseType: !165, size: 64, offset: 192)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !581, file: !31, line: 1421, baseType: !514, size: 64, offset: 256)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !581, file: !31, line: 1422, baseType: !589, size: 64, offset: 320)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !31, line: 2228, size: 576, elements: !591)
!591 = !{!592, !593, !594, !600, !604, !608, !612, !616, !617, !627, !630, !631, !632, !634, !635, !636}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !590, file: !31, line: 2229, baseType: !225, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !590, file: !31, line: 2230, baseType: !173, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !590, file: !31, line: 2238, baseType: !595, size: 64, offset: 128)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DISubroutineType(types: !597)
!597 = !{!173, !598}
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !31, line: 69, flags: DIFlagFwdDecl)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !590, file: !31, line: 2239, baseType: !601, size: 64, offset: 192)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !603)
!603 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !31, line: 70, flags: DIFlagFwdDecl)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !590, file: !31, line: 2240, baseType: !605, size: 64, offset: 256)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = !DISubroutineType(types: !607)
!607 = !{!369, !589, !173, !225, !176}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !590, file: !31, line: 2242, baseType: !609, size: 64, offset: 320)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DISubroutineType(types: !611)
!611 = !{null, !580}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !590, file: !31, line: 2243, baseType: !613, size: 64, offset: 384)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !615, line: 76, flags: DIFlagFwdDecl)
!615 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!616 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !590, file: !31, line: 2244, baseType: !589, size: 64, offset: 448)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !590, file: !31, line: 2245, baseType: !618, size: 64, offset: 512)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !168, line: 182, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !618, file: !168, line: 183, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !168, line: 186, size: 128, elements: !623)
!623 = !{!624, !625}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !622, file: !168, line: 187, baseType: !621, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !622, file: !168, line: 187, baseType: !626, size: 64, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !590, file: !31, line: 2247, baseType: !628, offset: 576)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !629, line: 187, elements: !215)
!629 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!630 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !590, file: !31, line: 2248, baseType: !628, offset: 576)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !590, file: !31, line: 2249, baseType: !628, offset: 576)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !590, file: !31, line: 2250, baseType: !633, offset: 576)
!633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, elements: !264)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !590, file: !31, line: 2252, baseType: !628, offset: 576)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !590, file: !31, line: 2253, baseType: !628, offset: 576)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !590, file: !31, line: 2254, baseType: !628, offset: 576)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !581, file: !31, line: 1423, baseType: !638, size: 64, offset: 384)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !640)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !31, line: 1935, size: 1472, elements: !641)
!641 = !{!642, !646, !650, !651, !655, !661, !665, !666, !667, !671, !675, !676, !677, !678, !684, !689, !690, !733, !734, !735, !736, !2248, !2263}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !640, file: !31, line: 1936, baseType: !643, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!412, !580}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !640, file: !31, line: 1937, baseType: !647, size: 64, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DISubroutineType(types: !649)
!649 = !{null, !412}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !640, file: !31, line: 1938, baseType: !647, size: 64, offset: 128)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !640, file: !31, line: 1940, baseType: !652, size: 64, offset: 192)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DISubroutineType(types: !654)
!654 = !{null, !412, !173}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !640, file: !31, line: 1941, baseType: !656, size: 64, offset: 256)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DISubroutineType(types: !658)
!658 = !{!173, !412, !659}
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !31, line: 289, flags: DIFlagFwdDecl)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !640, file: !31, line: 1942, baseType: !662, size: 64, offset: 320)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DISubroutineType(types: !664)
!664 = !{!173, !412}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !640, file: !31, line: 1943, baseType: !647, size: 64, offset: 384)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !640, file: !31, line: 1944, baseType: !609, size: 64, offset: 448)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !640, file: !31, line: 1945, baseType: !668, size: 64, offset: 512)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DISubroutineType(types: !670)
!670 = !{!173, !580, !173}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !640, file: !31, line: 1946, baseType: !672, size: 64, offset: 576)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{!173, !580}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !640, file: !31, line: 1947, baseType: !672, size: 64, offset: 640)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !640, file: !31, line: 1948, baseType: !672, size: 64, offset: 704)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !640, file: !31, line: 1949, baseType: !672, size: 64, offset: 768)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !640, file: !31, line: 1950, baseType: !679, size: 64, offset: 832)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DISubroutineType(types: !681)
!681 = !{!173, !369, !682}
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !31, line: 57, flags: DIFlagFwdDecl)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !640, file: !31, line: 1951, baseType: !685, size: 64, offset: 896)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{!173, !580, !688, !263}
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !640, file: !31, line: 1952, baseType: !609, size: 64, offset: 960)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !640, file: !31, line: 1954, baseType: !691, size: 64, offset: 1024)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!173, !694, !369}
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !696, line: 16, size: 896, elements: !697)
!696 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!697 = !{!698, !699, !700, !701, !702, !703, !704, !705, !706, !728, !729, !732}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !695, file: !696, line: 17, baseType: !263, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !695, file: !696, line: 18, baseType: !309, size: 64, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !695, file: !696, line: 19, baseType: !309, size: 64, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !695, file: !696, line: 20, baseType: !309, size: 64, offset: 192)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !695, file: !696, line: 21, baseType: !309, size: 64, offset: 256)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !695, file: !696, line: 22, baseType: !514, size: 64, offset: 320)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !695, file: !696, line: 23, baseType: !514, size: 64, offset: 384)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !695, file: !696, line: 24, baseType: !187, size: 192, offset: 448)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !695, file: !696, line: 25, baseType: !707, size: 64, offset: 640)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !696, line: 31, size: 256, elements: !710)
!710 = !{!711, !716, !720, !724}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !709, file: !696, line: 32, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DISubroutineType(types: !714)
!714 = !{!176, !694, !715}
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !709, file: !696, line: 33, baseType: !717, size: 64, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{null, !694, !176}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !709, file: !696, line: 34, baseType: !721, size: 64, offset: 128)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DISubroutineType(types: !723)
!723 = !{!176, !694, !176, !715}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !709, file: !696, line: 35, baseType: !725, size: 64, offset: 192)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DISubroutineType(types: !727)
!727 = !{!173, !694, !176}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !695, file: !696, line: 26, baseType: !173, size: 32, offset: 704)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !695, file: !696, line: 27, baseType: !730, size: 64, offset: 768)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !695, file: !696, line: 28, baseType: !176, size: 64, offset: 832)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !640, file: !31, line: 1955, baseType: !691, size: 64, offset: 1088)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !640, file: !31, line: 1956, baseType: !691, size: 64, offset: 1152)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !640, file: !31, line: 1957, baseType: !691, size: 64, offset: 1216)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !640, file: !31, line: 1963, baseType: !737, size: 64, offset: 1280)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{!173, !580, !740, !167}
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !742, line: 68, size: 512, align: 128, elements: !743)
!742 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!743 = !{!744, !745, !2240, !2247}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !741, file: !742, line: 69, baseType: !165, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, scope: !741, file: !742, line: 77, baseType: !746, size: 320, offset: 64)
!746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !741, file: !742, line: 77, size: 320, elements: !747)
!747 = !{!748, !928, !933, !961, !969, !975, !2232, !2239}
!748 = !DIDerivedType(tag: DW_TAG_member, scope: !746, file: !742, line: 78, baseType: !749, size: 320)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !746, file: !742, line: 78, size: 320, elements: !750)
!750 = !{!751, !752, !926, !927}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !749, file: !742, line: 84, baseType: !181, size: 128)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !749, file: !742, line: 86, baseType: !753, size: 64, offset: 128)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !31, line: 451, size: 1216, align: 64, elements: !755)
!755 = !{!756, !757, !764, !765, !770, !785, !794, !795, !796, !797, !919, !920, !923, !924, !925}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !754, file: !31, line: 452, baseType: !412, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !754, file: !31, line: 453, baseType: !758, size: 128, offset: 64)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !759, line: 292, size: 128, elements: !760)
!759 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!760 = !{!761, !762, !763}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !758, file: !759, line: 293, baseType: !201)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !758, file: !759, line: 295, baseType: !167, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !758, file: !759, line: 296, baseType: !176, size: 64, offset: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !754, file: !31, line: 454, baseType: !167, size: 32, offset: 192)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !754, file: !31, line: 455, baseType: !766, size: 32, offset: 224)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !168, line: 168, baseType: !767)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !168, line: 166, size: 32, elements: !768)
!768 = !{!769}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !767, file: !168, line: 167, baseType: !173, size: 32)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !754, file: !31, line: 460, baseType: !771, size: 128, offset: 256)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !772, line: 125, size: 128, elements: !773)
!772 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!773 = !{!774, !784}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !771, file: !772, line: 126, baseType: !775, size: 64)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !772, line: 31, size: 64, elements: !776)
!776 = !{!777}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !775, file: !772, line: 32, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !772, line: 24, size: 192, align: 64, elements: !780)
!780 = !{!781, !782, !783}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !779, file: !772, line: 25, baseType: !165, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !779, file: !772, line: 26, baseType: !778, size: 64, offset: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !779, file: !772, line: 27, baseType: !778, size: 64, offset: 128)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !771, file: !772, line: 127, baseType: !778, size: 64, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !754, file: !31, line: 461, baseType: !786, size: 256, offset: 384)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !787, line: 35, size: 256, elements: !788)
!787 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!788 = !{!789, !790, !791, !793}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !786, file: !787, line: 36, baseType: !191, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !786, file: !787, line: 42, baseType: !191, size: 64, offset: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !786, file: !787, line: 46, baseType: !792, offset: 128)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !202, line: 29, baseType: !209)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !786, file: !787, line: 47, baseType: !181, size: 128, offset: 128)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !754, file: !31, line: 462, baseType: !165, size: 64, offset: 640)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !754, file: !31, line: 463, baseType: !165, size: 64, offset: 704)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !754, file: !31, line: 464, baseType: !165, size: 64, offset: 768)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !754, file: !31, line: 465, baseType: !798, size: 64, offset: 832)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !800)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !31, line: 367, size: 1408, elements: !801)
!801 = !{!802, !806, !810, !814, !818, !822, !828, !834, !838, !843, !847, !851, !855, !883, !887, !893, !894, !895, !899, !904, !908, !915}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !800, file: !31, line: 368, baseType: !803, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DISubroutineType(types: !805)
!805 = !{!173, !740, !659}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !800, file: !31, line: 369, baseType: !807, size: 64, offset: 64)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DISubroutineType(types: !809)
!809 = !{!173, !339, !740}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !800, file: !31, line: 372, baseType: !811, size: 64, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DISubroutineType(types: !813)
!813 = !{!173, !753, !659}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !800, file: !31, line: 375, baseType: !815, size: 64, offset: 192)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{!173, !740}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !800, file: !31, line: 381, baseType: !819, size: 64, offset: 256)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DISubroutineType(types: !821)
!821 = !{!173, !339, !753, !184, !7}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !800, file: !31, line: 383, baseType: !823, size: 64, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{null, !826}
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !31, line: 290, flags: DIFlagFwdDecl)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !800, file: !31, line: 385, baseType: !829, size: 64, offset: 384)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{!173, !339, !753, !514, !7, !7, !832, !833}
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !800, file: !31, line: 388, baseType: !835, size: 64, offset: 448)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!173, !339, !753, !514, !7, !7, !740, !176}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !800, file: !31, line: 393, baseType: !839, size: 64, offset: 512)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DISubroutineType(types: !841)
!841 = !{!842, !753, !842}
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !168, line: 125, baseType: !404)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !800, file: !31, line: 394, baseType: !844, size: 64, offset: 576)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{null, !740, !7, !7}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !800, file: !31, line: 395, baseType: !848, size: 64, offset: 640)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DISubroutineType(types: !850)
!850 = !{!173, !740, !167}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !800, file: !31, line: 396, baseType: !852, size: 64, offset: 704)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DISubroutineType(types: !854)
!854 = !{null, !740}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !800, file: !31, line: 397, baseType: !856, size: 64, offset: 768)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DISubroutineType(types: !858)
!858 = !{!294, !859, !881}
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !31, line: 320, size: 384, elements: !861)
!861 = !{!862, !863, !864, !868, !869, !870, !873, !874}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !860, file: !31, line: 321, baseType: !339, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !860, file: !31, line: 326, baseType: !514, size: 64, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !860, file: !31, line: 327, baseType: !865, size: 64, offset: 128)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{null, !859, !105, !105}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !860, file: !31, line: 328, baseType: !176, size: 64, offset: 192)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !860, file: !31, line: 329, baseType: !173, size: 32, offset: 256)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !860, file: !31, line: 330, baseType: !871, size: 16, offset: 288)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !170, line: 19, baseType: !872)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !172, line: 24, baseType: !304)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !860, file: !31, line: 331, baseType: !871, size: 16, offset: 304)
!874 = !DIDerivedType(tag: DW_TAG_member, scope: !860, file: !31, line: 332, baseType: !875, size: 64, offset: 320)
!875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !860, file: !31, line: 332, size: 64, elements: !876)
!876 = !{!877, !878}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !875, file: !31, line: 333, baseType: !7, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !875, file: !31, line: 334, baseType: !879, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !31, line: 334, flags: DIFlagFwdDecl)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !31, line: 64, flags: DIFlagFwdDecl)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !800, file: !31, line: 402, baseType: !884, size: 64, offset: 832)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{!173, !753, !740, !740, !5}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !800, file: !31, line: 404, baseType: !888, size: 64, offset: 896)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{!473, !740, !891}
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !892, line: 305, baseType: !7)
!892 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!893 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !800, file: !31, line: 405, baseType: !852, size: 64, offset: 960)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !800, file: !31, line: 406, baseType: !815, size: 64, offset: 1024)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !800, file: !31, line: 407, baseType: !896, size: 64, offset: 1088)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!173, !740, !165, !165}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !800, file: !31, line: 409, baseType: !900, size: 64, offset: 1152)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{null, !740, !903, !903}
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !800, file: !31, line: 410, baseType: !905, size: 64, offset: 1216)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DISubroutineType(types: !907)
!907 = !{!173, !753, !740}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !800, file: !31, line: 413, baseType: !909, size: 64, offset: 1280)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{!173, !912, !339, !914}
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !31, line: 61, flags: DIFlagFwdDecl)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !800, file: !31, line: 415, baseType: !916, size: 64, offset: 1344)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{null, !339}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !754, file: !31, line: 466, baseType: !165, size: 64, offset: 896)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !754, file: !31, line: 467, baseType: !921, size: 32, offset: 960)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !922, line: 8, baseType: !174)
!922 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!923 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !754, file: !31, line: 468, baseType: !201, offset: 992)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !754, file: !31, line: 469, baseType: !181, size: 128, offset: 1024)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !754, file: !31, line: 470, baseType: !176, size: 64, offset: 1152)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !749, file: !742, line: 87, baseType: !165, size: 64, offset: 192)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !749, file: !742, line: 94, baseType: !165, size: 64, offset: 256)
!928 = !DIDerivedType(tag: DW_TAG_member, scope: !746, file: !742, line: 96, baseType: !929, size: 64)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !746, file: !742, line: 96, size: 64, elements: !930)
!930 = !{!931}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !929, file: !742, line: 101, baseType: !932, size: 64)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !168, line: 143, baseType: !404)
!933 = !DIDerivedType(tag: DW_TAG_member, scope: !746, file: !742, line: 103, baseType: !934, size: 320)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !746, file: !742, line: 103, size: 320, elements: !935)
!935 = !{!936, !946, !949, !950}
!936 = !DIDerivedType(tag: DW_TAG_member, scope: !934, file: !742, line: 104, baseType: !937, size: 128)
!937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !934, file: !742, line: 104, size: 128, elements: !938)
!938 = !{!939, !940}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !937, file: !742, line: 105, baseType: !181, size: 128)
!940 = !DIDerivedType(tag: DW_TAG_member, scope: !937, file: !742, line: 106, baseType: !941, size: 128)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !937, file: !742, line: 106, size: 128, elements: !942)
!942 = !{!943, !944, !945}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !941, file: !742, line: 107, baseType: !740, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !941, file: !742, line: 109, baseType: !173, size: 32, offset: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !941, file: !742, line: 110, baseType: !173, size: 32, offset: 96)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !934, file: !742, line: 117, baseType: !947, size: 64, offset: 128)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !742, line: 117, flags: DIFlagFwdDecl)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !934, file: !742, line: 119, baseType: !176, size: 64, offset: 192)
!950 = !DIDerivedType(tag: DW_TAG_member, scope: !934, file: !742, line: 120, baseType: !951, size: 64, offset: 256)
!951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !934, file: !742, line: 120, size: 64, elements: !952)
!952 = !{!953, !954, !955}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !951, file: !742, line: 121, baseType: !176, size: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !951, file: !742, line: 122, baseType: !165, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, scope: !951, file: !742, line: 123, baseType: !956, size: 32)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !951, file: !742, line: 123, size: 32, elements: !957)
!957 = !{!958, !959, !960}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !956, file: !742, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !956, file: !742, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !956, file: !742, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!961 = !DIDerivedType(tag: DW_TAG_member, scope: !746, file: !742, line: 130, baseType: !962, size: 192)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !746, file: !742, line: 130, size: 192, elements: !963)
!963 = !{!964, !965, !966, !967, !968}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !962, file: !742, line: 131, baseType: !165, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !962, file: !742, line: 134, baseType: !410, size: 8, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !962, file: !742, line: 135, baseType: !410, size: 8, offset: 72)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !962, file: !742, line: 136, baseType: !766, size: 32, offset: 96)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !962, file: !742, line: 137, baseType: !7, size: 32, offset: 128)
!969 = !DIDerivedType(tag: DW_TAG_member, scope: !746, file: !742, line: 139, baseType: !970, size: 256)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !746, file: !742, line: 139, size: 256, elements: !971)
!971 = !{!972, !973, !974}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !970, file: !742, line: 140, baseType: !165, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !970, file: !742, line: 141, baseType: !766, size: 32, offset: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !970, file: !742, line: 143, baseType: !181, size: 128, offset: 128)
!975 = !DIDerivedType(tag: DW_TAG_member, scope: !746, file: !742, line: 145, baseType: !976, size: 256)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !746, file: !742, line: 145, size: 256, elements: !977)
!977 = !{!978, !979, !982, !983, !2231}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !976, file: !742, line: 146, baseType: !165, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !976, file: !742, line: 147, baseType: !980, size: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !981, line: 509, baseType: !740)
!981 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!982 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !976, file: !742, line: 148, baseType: !165, size: 64, offset: 128)
!983 = !DIDerivedType(tag: DW_TAG_member, scope: !976, file: !742, line: 149, baseType: !984, size: 64, offset: 192)
!984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !976, file: !742, line: 149, size: 64, elements: !985)
!985 = !{!986, !2230}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !984, file: !742, line: 150, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !742, line: 388, size: 7296, elements: !989)
!989 = !{!990, !2226}
!990 = !DIDerivedType(tag: DW_TAG_member, scope: !988, file: !742, line: 389, baseType: !991, size: 7296)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !988, file: !742, line: 389, size: 7296, elements: !992)
!992 = !{!993, !1031, !1032, !1033, !1037, !1038, !1039, !1040, !1041, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1082, !1090, !1093, !1117, !1118, !2210, !2211, !2214, !2215, !2216, !2219, !2220, !2221, !2224, !2225}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !991, file: !742, line: 390, baseType: !994, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !742, line: 305, size: 1472, elements: !996)
!996 = !{!997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1011, !1012, !1017, !1018, !1021, !1025, !1026, !1027, !1028, !1029}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !995, file: !742, line: 308, baseType: !165, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !995, file: !742, line: 309, baseType: !165, size: 64, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !995, file: !742, line: 313, baseType: !994, size: 64, offset: 128)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !995, file: !742, line: 313, baseType: !994, size: 64, offset: 192)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !995, file: !742, line: 315, baseType: !779, size: 192, align: 64, offset: 256)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !995, file: !742, line: 323, baseType: !165, size: 64, offset: 448)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !995, file: !742, line: 327, baseType: !987, size: 64, offset: 512)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !995, file: !742, line: 333, baseType: !1005, size: 64, offset: 576)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !981, line: 284, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !981, line: 284, size: 64, elements: !1007)
!1007 = !{!1008}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1006, file: !981, line: 284, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1010, line: 19, baseType: !165)
!1010 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !995, file: !742, line: 334, baseType: !165, size: 64, offset: 640)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !995, file: !742, line: 343, baseType: !1013, size: 256, offset: 704)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !995, file: !742, line: 340, size: 256, elements: !1014)
!1014 = !{!1015, !1016}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1013, file: !742, line: 341, baseType: !779, size: 192, align: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1013, file: !742, line: 342, baseType: !165, size: 64, offset: 192)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !995, file: !742, line: 351, baseType: !181, size: 128, offset: 960)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !995, file: !742, line: 353, baseType: !1019, size: 64, offset: 1088)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !742, line: 353, flags: DIFlagFwdDecl)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !995, file: !742, line: 356, baseType: !1022, size: 64, offset: 1152)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!1024 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !742, line: 356, flags: DIFlagFwdDecl)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !995, file: !742, line: 359, baseType: !165, size: 64, offset: 1216)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !995, file: !742, line: 361, baseType: !339, size: 64, offset: 1280)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !995, file: !742, line: 362, baseType: !176, size: 64, offset: 1344)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !995, file: !742, line: 365, baseType: !191, size: 64, offset: 1408)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !995, file: !742, line: 373, baseType: !1030, offset: 1472)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !742, line: 296, elements: !215)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !991, file: !742, line: 391, baseType: !775, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !991, file: !742, line: 392, baseType: !404, size: 64, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !991, file: !742, line: 394, baseType: !1034, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!165, !339, !165, !165, !165, !165}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !991, file: !742, line: 398, baseType: !165, size: 64, offset: 256)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !991, file: !742, line: 399, baseType: !165, size: 64, offset: 320)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !991, file: !742, line: 405, baseType: !165, size: 64, offset: 384)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !991, file: !742, line: 406, baseType: !165, size: 64, offset: 448)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !991, file: !742, line: 407, baseType: !1042, size: 64, offset: 512)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !981, line: 286, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !981, line: 286, size: 64, elements: !1045)
!1045 = !{!1046}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1044, file: !981, line: 286, baseType: !1047, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1010, line: 18, baseType: !165)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !991, file: !742, line: 416, baseType: !766, size: 32, offset: 576)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !991, file: !742, line: 428, baseType: !766, size: 32, offset: 608)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !991, file: !742, line: 437, baseType: !766, size: 32, offset: 640)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !991, file: !742, line: 447, baseType: !766, size: 32, offset: 672)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !991, file: !742, line: 450, baseType: !191, size: 64, offset: 704)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !991, file: !742, line: 452, baseType: !173, size: 32, offset: 768)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !991, file: !742, line: 454, baseType: !201, offset: 800)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !991, file: !742, line: 457, baseType: !786, size: 256, offset: 832)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !991, file: !742, line: 459, baseType: !181, size: 128, offset: 1088)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !991, file: !742, line: 466, baseType: !165, size: 64, offset: 1216)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !991, file: !742, line: 467, baseType: !165, size: 64, offset: 1280)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !991, file: !742, line: 469, baseType: !165, size: 64, offset: 1344)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !991, file: !742, line: 470, baseType: !165, size: 64, offset: 1408)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !991, file: !742, line: 471, baseType: !193, size: 64, offset: 1472)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !991, file: !742, line: 472, baseType: !165, size: 64, offset: 1536)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !991, file: !742, line: 473, baseType: !165, size: 64, offset: 1600)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !991, file: !742, line: 474, baseType: !165, size: 64, offset: 1664)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !991, file: !742, line: 475, baseType: !165, size: 64, offset: 1728)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !991, file: !742, line: 477, baseType: !201, offset: 1792)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !991, file: !742, line: 478, baseType: !165, size: 64, offset: 1792)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !991, file: !742, line: 478, baseType: !165, size: 64, offset: 1856)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !991, file: !742, line: 478, baseType: !165, size: 64, offset: 1920)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !991, file: !742, line: 478, baseType: !165, size: 64, offset: 1984)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !991, file: !742, line: 479, baseType: !165, size: 64, offset: 2048)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !991, file: !742, line: 479, baseType: !165, size: 64, offset: 2112)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !991, file: !742, line: 479, baseType: !165, size: 64, offset: 2176)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !991, file: !742, line: 480, baseType: !165, size: 64, offset: 2240)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !991, file: !742, line: 480, baseType: !165, size: 64, offset: 2304)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !991, file: !742, line: 480, baseType: !165, size: 64, offset: 2368)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !991, file: !742, line: 480, baseType: !165, size: 64, offset: 2432)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !991, file: !742, line: 482, baseType: !1079, size: 2816, offset: 2496)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 2816, elements: !1080)
!1080 = !{!1081}
!1081 = !DISubrange(count: 44)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !991, file: !742, line: 488, baseType: !1083, size: 256, offset: 5312)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1084, line: 60, size: 256, elements: !1085)
!1084 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1085 = !{!1086}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1083, file: !1084, line: 61, baseType: !1087, size: 256)
!1087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 256, elements: !1088)
!1088 = !{!1089}
!1089 = !DISubrange(count: 4)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !991, file: !742, line: 490, baseType: !1091, size: 64, offset: 5568)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !742, line: 490, flags: DIFlagFwdDecl)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !991, file: !742, line: 493, baseType: !1094, size: 896, offset: 5632)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1095, line: 53, baseType: !1096)
!1095 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1095, line: 13, size: 896, elements: !1097)
!1097 = !{!1098, !1099, !1100, !1101, !1104, !1105, !1106, !1107, !1111, !1112, !1113}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1096, file: !1095, line: 18, baseType: !404, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1096, file: !1095, line: 28, baseType: !193, size: 64, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1096, file: !1095, line: 31, baseType: !786, size: 256, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1096, file: !1095, line: 32, baseType: !1102, size: 64, offset: 384)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1095, line: 32, flags: DIFlagFwdDecl)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1096, file: !1095, line: 37, baseType: !304, size: 16, offset: 448)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1096, file: !1095, line: 40, baseType: !187, size: 192, offset: 512)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1096, file: !1095, line: 41, baseType: !176, size: 64, offset: 704)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1096, file: !1095, line: 42, baseType: !1108, size: 64, offset: 768)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1110 = !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1095, line: 42, flags: DIFlagFwdDecl)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1096, file: !1095, line: 44, baseType: !766, size: 32, offset: 832)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1096, file: !1095, line: 50, baseType: !871, size: 16, offset: 864)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1096, file: !1095, line: 51, baseType: !1114, size: 16, offset: 880)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !170, line: 18, baseType: !1115)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !172, line: 23, baseType: !1116)
!1116 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !991, file: !742, line: 495, baseType: !165, size: 64, offset: 6528)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !991, file: !742, line: 497, baseType: !1119, size: 64, offset: 6592)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !742, line: 381, size: 384, elements: !1121)
!1121 = !{!1122, !1123, !2209}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1120, file: !742, line: 382, baseType: !766, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1120, file: !742, line: 383, baseType: !1124, size: 128, offset: 64)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !742, line: 376, size: 128, elements: !1125)
!1125 = !{!1126, !2207}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1124, file: !742, line: 377, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1129, line: 640, size: 48640, elements: !1130)
!1129 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1130 = !{!1131, !1137, !1139, !1140, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1157, !1175, !1186, !1271, !1272, !1273, !1284, !1285, !1287, !1288, !1289, !1290, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1367, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1405, !1407, !1408, !1409, !1421, !1422, !1423, !1424, !1425, !1426, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1450, !1455, !1639, !1640, !1641, !1642, !1646, !1649, !1652, !1655, !1658, !1662, !1763, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1809, !1810, !1811, !1812, !1813, !1818, !1819, !1820, !1823, !1824, !1827, !1830, !1833, !1836, !1878, !1881, !1882, !1961, !1962, !1965, !1966, !1969, !1970, !1971, !1975, !1976, !1977, !1990, !1991, !1992, !2002, !2007, !2010, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1128, file: !1129, line: 646, baseType: !1132, size: 128)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1133, line: 56, size: 128, elements: !1134)
!1133 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1134 = !{!1135, !1136}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1132, file: !1133, line: 57, baseType: !165, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1132, file: !1133, line: 58, baseType: !174, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1128, file: !1129, line: 649, baseType: !1138, size: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1128, file: !1129, line: 657, baseType: !176, size: 64, offset: 192)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1128, file: !1129, line: 658, baseType: !1141, size: 32, offset: 256)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1142, line: 113, baseType: !1143)
!1142 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1142, line: 111, size: 32, elements: !1144)
!1144 = !{!1145}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1143, file: !1142, line: 112, baseType: !766, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1128, file: !1129, line: 660, baseType: !7, size: 32, offset: 288)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1128, file: !1129, line: 661, baseType: !7, size: 32, offset: 320)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1128, file: !1129, line: 684, baseType: !173, size: 32, offset: 352)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1128, file: !1129, line: 686, baseType: !173, size: 32, offset: 384)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1128, file: !1129, line: 687, baseType: !173, size: 32, offset: 416)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1128, file: !1129, line: 688, baseType: !173, size: 32, offset: 448)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1128, file: !1129, line: 689, baseType: !7, size: 32, offset: 480)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1128, file: !1129, line: 691, baseType: !1154, size: 64, offset: 512)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1156 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1129, line: 691, flags: DIFlagFwdDecl)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1128, file: !1129, line: 692, baseType: !1158, size: 832, offset: 576)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1129, line: 451, size: 832, elements: !1159)
!1159 = !{!1160, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1158, file: !1129, line: 453, baseType: !1161, size: 128)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1129, line: 325, size: 128, elements: !1162)
!1162 = !{!1163, !1164}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1161, file: !1129, line: 326, baseType: !165, size: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1161, file: !1129, line: 327, baseType: !174, size: 32, offset: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1158, file: !1129, line: 454, baseType: !779, size: 192, align: 64, offset: 128)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1158, file: !1129, line: 455, baseType: !181, size: 128, offset: 320)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1158, file: !1129, line: 456, baseType: !7, size: 32, offset: 448)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1158, file: !1129, line: 458, baseType: !404, size: 64, offset: 512)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1158, file: !1129, line: 459, baseType: !404, size: 64, offset: 576)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1158, file: !1129, line: 460, baseType: !404, size: 64, offset: 640)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1158, file: !1129, line: 461, baseType: !404, size: 64, offset: 704)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1158, file: !1129, line: 463, baseType: !404, size: 64, offset: 768)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1158, file: !1129, line: 465, baseType: !1174, offset: 832)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1129, line: 415, elements: !215)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1128, file: !1129, line: 693, baseType: !1176, size: 384, offset: 1408)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1129, line: 489, size: 384, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182, !1183, !1184}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1176, file: !1129, line: 490, baseType: !181, size: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1176, file: !1129, line: 491, baseType: !165, size: 64, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1176, file: !1129, line: 492, baseType: !165, size: 64, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1176, file: !1129, line: 493, baseType: !7, size: 32, offset: 256)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1176, file: !1129, line: 494, baseType: !304, size: 16, offset: 288)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1176, file: !1129, line: 495, baseType: !304, size: 16, offset: 304)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1176, file: !1129, line: 497, baseType: !1185, size: 64, offset: 320)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1128, file: !1129, line: 697, baseType: !1187, size: 1792, offset: 1792)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1129, line: 507, size: 1792, elements: !1188)
!1188 = !{!1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1268, !1269}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1187, file: !1129, line: 508, baseType: !779, size: 192, align: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1187, file: !1129, line: 515, baseType: !404, size: 64, offset: 192)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1187, file: !1129, line: 516, baseType: !404, size: 64, offset: 256)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1187, file: !1129, line: 517, baseType: !404, size: 64, offset: 320)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1187, file: !1129, line: 518, baseType: !404, size: 64, offset: 384)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1187, file: !1129, line: 519, baseType: !404, size: 64, offset: 448)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1187, file: !1129, line: 526, baseType: !197, size: 64, offset: 512)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1187, file: !1129, line: 527, baseType: !404, size: 64, offset: 576)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1187, file: !1129, line: 528, baseType: !7, size: 32, offset: 640)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1187, file: !1129, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1187, file: !1129, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1187, file: !1129, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1187, file: !1129, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1187, file: !1129, line: 563, baseType: !1203, size: 512, offset: 704)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !14, line: 118, size: 512, elements: !1204)
!1204 = !{!1205, !1213, !1214, !1219, !1262, !1265, !1266, !1267}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1203, file: !14, line: 119, baseType: !1206, size: 256)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1207, line: 9, size: 256, elements: !1208)
!1207 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1208 = !{!1209, !1210}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1206, file: !1207, line: 10, baseType: !779, size: 192, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1206, file: !1207, line: 11, baseType: !1211, size: 64, offset: 192)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1212, line: 29, baseType: !197)
!1212 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1203, file: !14, line: 120, baseType: !1211, size: 64, offset: 256)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1203, file: !14, line: 121, baseType: !1215, size: 64, offset: 320)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!13, !1218}
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1203, file: !14, line: 122, baseType: !1220, size: 64, offset: 384)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !14, line: 159, size: 512, align: 512, elements: !1222)
!1222 = !{!1223, !1243, !1244, !1247, !1252, !1253, !1257, !1261}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1221, file: !14, line: 160, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !14, line: 214, size: 4608, align: 512, elements: !1226)
!1226 = !{!1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1225, file: !14, line: 215, baseType: !792)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1225, file: !14, line: 216, baseType: !7, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1225, file: !14, line: 217, baseType: !7, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1225, file: !14, line: 218, baseType: !7, size: 32, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1225, file: !14, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1225, file: !14, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1225, file: !14, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1225, file: !14, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1225, file: !14, line: 233, baseType: !1211, size: 64, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1225, file: !14, line: 234, baseType: !1218, size: 64, offset: 192)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1225, file: !14, line: 235, baseType: !1211, size: 64, offset: 256)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1225, file: !14, line: 236, baseType: !1218, size: 64, offset: 320)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1225, file: !14, line: 237, baseType: !1240, size: 4096, offset: 512)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1221, size: 4096, elements: !1241)
!1241 = !{!1242}
!1242 = !DISubrange(count: 8)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1221, file: !14, line: 161, baseType: !7, size: 32, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1221, file: !14, line: 162, baseType: !1245, size: 32, offset: 96)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !168, line: 27, baseType: !1246)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !296, line: 96, baseType: !173)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1221, file: !14, line: 163, baseType: !1248, size: 32, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !375, line: 276, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !375, line: 276, size: 32, elements: !1250)
!1250 = !{!1251}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1249, file: !375, line: 276, baseType: !379, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1221, file: !14, line: 164, baseType: !1218, size: 64, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1221, file: !14, line: 165, baseType: !1254, size: 128, offset: 256)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1207, line: 14, size: 128, elements: !1255)
!1255 = !{!1256}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1254, file: !1207, line: 15, baseType: !771, size: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1221, file: !14, line: 166, baseType: !1258, size: 64, offset: 384)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!1211}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1221, file: !14, line: 167, baseType: !1211, size: 64, offset: 448)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1203, file: !14, line: 123, baseType: !1263, size: 8, offset: 448)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !170, line: 17, baseType: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !172, line: 21, baseType: !410)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1203, file: !14, line: 124, baseType: !1263, size: 8, offset: 456)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1203, file: !14, line: 125, baseType: !1263, size: 8, offset: 464)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1203, file: !14, line: 126, baseType: !1263, size: 8, offset: 472)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1187, file: !1129, line: 572, baseType: !1203, size: 512, offset: 1216)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1187, file: !1129, line: 580, baseType: !1270, size: 64, offset: 1728)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1128, file: !1129, line: 721, baseType: !7, size: 32, offset: 3584)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1128, file: !1129, line: 722, baseType: !173, size: 32, offset: 3616)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1128, file: !1129, line: 723, baseType: !1274, size: 64, offset: 3648)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1277, line: 17, baseType: !1278)
!1277 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1277, line: 17, size: 64, elements: !1279)
!1279 = !{!1280}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1278, file: !1277, line: 17, baseType: !1281, size: 64)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 64, elements: !1282)
!1282 = !{!1283}
!1283 = !DISubrange(count: 1)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1128, file: !1129, line: 724, baseType: !1276, size: 64, offset: 3712)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1128, file: !1129, line: 749, baseType: !1286, offset: 3776)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1129, line: 290, elements: !215)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1128, file: !1129, line: 751, baseType: !181, size: 128, offset: 3776)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1128, file: !1129, line: 757, baseType: !987, size: 64, offset: 3904)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1128, file: !1129, line: 758, baseType: !987, size: 64, offset: 3968)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1128, file: !1129, line: 761, baseType: !1291, size: 320, offset: 4032)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1084, line: 34, size: 320, elements: !1292)
!1292 = !{!1293, !1294}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1291, file: !1084, line: 35, baseType: !404, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1291, file: !1084, line: 36, baseType: !1295, size: 256, offset: 64)
!1295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !994, size: 256, elements: !1088)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1128, file: !1129, line: 766, baseType: !173, size: 32, offset: 4352)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1128, file: !1129, line: 767, baseType: !173, size: 32, offset: 4384)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1128, file: !1129, line: 768, baseType: !173, size: 32, offset: 4416)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1128, file: !1129, line: 770, baseType: !173, size: 32, offset: 4448)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1128, file: !1129, line: 772, baseType: !165, size: 64, offset: 4480)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1128, file: !1129, line: 775, baseType: !7, size: 32, offset: 4544)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1128, file: !1129, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1128, file: !1129, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1128, file: !1129, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1128, file: !1129, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1128, file: !1129, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1128, file: !1129, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1128, file: !1129, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1128, file: !1129, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1128, file: !1129, line: 831, baseType: !165, size: 64, offset: 4672)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1128, file: !1129, line: 833, baseType: !1312, size: 384, offset: 4736)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !19, line: 25, size: 384, elements: !1313)
!1313 = !{!1314, !1319}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1312, file: !19, line: 26, baseType: !1315, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!105, !1318}
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, scope: !1312, file: !19, line: 27, baseType: !1320, size: 320, offset: 64)
!1320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1312, file: !19, line: 27, size: 320, elements: !1321)
!1321 = !{!1322, !1332, !1357}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1320, file: !19, line: 36, baseType: !1323, size: 320)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1320, file: !19, line: 29, size: 320, elements: !1324)
!1324 = !{!1325, !1327, !1328, !1329, !1330, !1331}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1323, file: !19, line: 30, baseType: !1326, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1323, file: !19, line: 31, baseType: !174, size: 32, offset: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1323, file: !19, line: 32, baseType: !174, size: 32, offset: 96)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1323, file: !19, line: 33, baseType: !174, size: 32, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1323, file: !19, line: 34, baseType: !404, size: 64, offset: 192)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1323, file: !19, line: 35, baseType: !1326, size: 64, offset: 256)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1320, file: !19, line: 46, baseType: !1333, size: 192)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1320, file: !19, line: 38, size: 192, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1356}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1333, file: !19, line: 39, baseType: !1245, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1333, file: !19, line: 40, baseType: !18, size: 32, offset: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, scope: !1333, file: !19, line: 41, baseType: !1338, size: 64, offset: 64)
!1338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1333, file: !19, line: 41, size: 64, elements: !1339)
!1339 = !{!1340, !1348}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1338, file: !19, line: 42, baseType: !1341, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1343, line: 7, size: 128, elements: !1344)
!1343 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1344 = !{!1345, !1347}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1342, file: !1343, line: 8, baseType: !1346, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !296, line: 93, baseType: !199)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1342, file: !1343, line: 9, baseType: !199, size: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1338, file: !19, line: 43, baseType: !1349, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1351, line: 7, size: 64, elements: !1352)
!1351 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1352 = !{!1353, !1355}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1350, file: !1351, line: 8, baseType: !1354, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1351, line: 5, baseType: !169)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1350, file: !1351, line: 9, baseType: !169, size: 32, offset: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1333, file: !19, line: 45, baseType: !404, size: 64, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1320, file: !19, line: 54, baseType: !1358, size: 256)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1320, file: !19, line: 48, size: 256, elements: !1359)
!1359 = !{!1360, !1363, !1364, !1365, !1366}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1358, file: !19, line: 49, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !19, line: 14, flags: DIFlagFwdDecl)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1358, file: !19, line: 50, baseType: !173, size: 32, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1358, file: !19, line: 51, baseType: !173, size: 32, offset: 96)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1358, file: !19, line: 52, baseType: !165, size: 64, offset: 128)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1358, file: !19, line: 53, baseType: !165, size: 64, offset: 192)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1128, file: !1129, line: 835, baseType: !1368, size: 32, offset: 5120)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !168, line: 22, baseType: !1369)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !296, line: 28, baseType: !173)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1128, file: !1129, line: 836, baseType: !1368, size: 32, offset: 5152)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1128, file: !1129, line: 840, baseType: !165, size: 64, offset: 5184)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1128, file: !1129, line: 849, baseType: !1127, size: 64, offset: 5248)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1128, file: !1129, line: 852, baseType: !1127, size: 64, offset: 5312)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1128, file: !1129, line: 857, baseType: !181, size: 128, offset: 5376)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1128, file: !1129, line: 858, baseType: !181, size: 128, offset: 5504)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1128, file: !1129, line: 859, baseType: !1127, size: 64, offset: 5632)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1128, file: !1129, line: 867, baseType: !181, size: 128, offset: 5696)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1128, file: !1129, line: 868, baseType: !181, size: 128, offset: 5824)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1128, file: !1129, line: 871, baseType: !1380, size: 64, offset: 5952)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !40, line: 59, size: 768, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386, !1388, !1389, !1396, !1397}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1381, file: !40, line: 61, baseType: !1141, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1381, file: !40, line: 62, baseType: !7, size: 32, offset: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1381, file: !40, line: 63, baseType: !201, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1381, file: !40, line: 65, baseType: !1387, size: 256, offset: 64)
!1387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !618, size: 256, elements: !1088)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1381, file: !40, line: 66, baseType: !618, size: 64, offset: 320)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1381, file: !40, line: 68, baseType: !1390, size: 128, offset: 384)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1391, line: 40, baseType: !1392)
!1391 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1391, line: 36, size: 128, elements: !1393)
!1393 = !{!1394, !1395}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1392, file: !1391, line: 37, baseType: !201)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1392, file: !1391, line: 38, baseType: !181, size: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1381, file: !40, line: 69, baseType: !352, size: 128, align: 64, offset: 512)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1381, file: !40, line: 70, baseType: !1398, size: 128, offset: 640)
!1398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 128, elements: !1282)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !40, line: 54, size: 128, elements: !1400)
!1400 = !{!1401, !1402}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1399, file: !40, line: 55, baseType: !173, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1399, file: !40, line: 56, baseType: !1403, size: 64, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !40, line: 56, flags: DIFlagFwdDecl)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1128, file: !1129, line: 872, baseType: !1406, size: 512, offset: 6016)
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !622, size: 512, elements: !1088)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1128, file: !1129, line: 873, baseType: !181, size: 128, offset: 6528)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1128, file: !1129, line: 874, baseType: !181, size: 128, offset: 6656)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1128, file: !1129, line: 876, baseType: !1410, size: 64, offset: 6784)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1412, line: 26, size: 192, elements: !1413)
!1412 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1413 = !{!1414, !1415}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1411, file: !1412, line: 27, baseType: !7, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1411, file: !1412, line: 28, baseType: !1416, size: 128, offset: 64)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1417, line: 43, size: 128, elements: !1418)
!1417 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1418 = !{!1419, !1420}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1416, file: !1417, line: 44, baseType: !792)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1416, file: !1417, line: 45, baseType: !181, size: 128)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1128, file: !1129, line: 879, baseType: !688, size: 64, offset: 6848)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1128, file: !1129, line: 882, baseType: !688, size: 64, offset: 6912)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1128, file: !1129, line: 884, baseType: !404, size: 64, offset: 6976)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1128, file: !1129, line: 885, baseType: !404, size: 64, offset: 7040)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1128, file: !1129, line: 890, baseType: !404, size: 64, offset: 7104)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1128, file: !1129, line: 891, baseType: !1427, size: 128, offset: 7168)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1129, line: 242, size: 128, elements: !1428)
!1428 = !{!1429, !1430, !1431}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1427, file: !1129, line: 244, baseType: !404, size: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1427, file: !1129, line: 245, baseType: !404, size: 64, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1427, file: !1129, line: 246, baseType: !792, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1128, file: !1129, line: 900, baseType: !165, size: 64, offset: 7296)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1128, file: !1129, line: 901, baseType: !165, size: 64, offset: 7360)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1128, file: !1129, line: 904, baseType: !404, size: 64, offset: 7424)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1128, file: !1129, line: 907, baseType: !404, size: 64, offset: 7488)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1128, file: !1129, line: 910, baseType: !165, size: 64, offset: 7552)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1128, file: !1129, line: 911, baseType: !165, size: 64, offset: 7616)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1128, file: !1129, line: 914, baseType: !1439, size: 640, offset: 7680)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1440, line: 123, size: 640, elements: !1441)
!1440 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1441 = !{!1442, !1448, !1449}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1439, file: !1440, line: 124, baseType: !1443, size: 576)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1444, size: 576, elements: !264)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1440, line: 108, size: 192, elements: !1445)
!1445 = !{!1446, !1447}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1444, file: !1440, line: 109, baseType: !404, size: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1444, file: !1440, line: 110, baseType: !1254, size: 128, offset: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1439, file: !1440, line: 125, baseType: !7, size: 32, offset: 576)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1439, file: !1440, line: 126, baseType: !7, size: 32, offset: 608)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1128, file: !1129, line: 917, baseType: !1451, size: 192, offset: 8320)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1440, line: 134, size: 192, elements: !1452)
!1452 = !{!1453, !1454}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1451, file: !1440, line: 135, baseType: !352, size: 128, align: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1451, file: !1440, line: 136, baseType: !7, size: 32, offset: 128)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1128, file: !1129, line: 923, baseType: !1456, size: 64, offset: 8512)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1459, line: 111, size: 1280, elements: !1460)
!1459 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1460 = !{!1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1480, !1481, !1482, !1483, !1484, !1485, !1592, !1593, !1594, !1595, !1621, !1624, !1634}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1458, file: !1459, line: 112, baseType: !766, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1458, file: !1459, line: 120, baseType: !418, size: 32, offset: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1458, file: !1459, line: 121, baseType: !426, size: 32, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1458, file: !1459, line: 122, baseType: !418, size: 32, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1458, file: !1459, line: 123, baseType: !426, size: 32, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1458, file: !1459, line: 124, baseType: !418, size: 32, offset: 160)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1458, file: !1459, line: 125, baseType: !426, size: 32, offset: 192)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1458, file: !1459, line: 126, baseType: !418, size: 32, offset: 224)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1458, file: !1459, line: 127, baseType: !426, size: 32, offset: 256)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1458, file: !1459, line: 128, baseType: !7, size: 32, offset: 288)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1458, file: !1459, line: 129, baseType: !1472, size: 64, offset: 320)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1473, line: 26, baseType: !1474)
!1473 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1473, line: 24, size: 64, elements: !1475)
!1475 = !{!1476}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1474, file: !1473, line: 25, baseType: !1477, size: 64)
!1477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 64, elements: !1478)
!1478 = !{!1479}
!1479 = !DISubrange(count: 2)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1458, file: !1459, line: 130, baseType: !1472, size: 64, offset: 384)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1458, file: !1459, line: 131, baseType: !1472, size: 64, offset: 448)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1458, file: !1459, line: 132, baseType: !1472, size: 64, offset: 512)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1458, file: !1459, line: 133, baseType: !1472, size: 64, offset: 576)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1458, file: !1459, line: 135, baseType: !410, size: 8, offset: 640)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1458, file: !1459, line: 137, baseType: !1486, size: 64, offset: 704)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1488, line: 189, size: 1664, elements: !1489)
!1488 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1489 = !{!1490, !1491, !1494, !1499, !1500, !1503, !1504, !1509, !1510, !1511, !1512, !1514, !1515, !1516, !1517, !1518, !1556, !1577}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1487, file: !1488, line: 190, baseType: !1141, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1487, file: !1488, line: 191, baseType: !1492, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1488, line: 28, baseType: !1493)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !168, line: 98, baseType: !169)
!1494 = !DIDerivedType(tag: DW_TAG_member, scope: !1487, file: !1488, line: 192, baseType: !1495, size: 192, offset: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1487, file: !1488, line: 192, size: 192, elements: !1496)
!1496 = !{!1497, !1498}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1495, file: !1488, line: 193, baseType: !181, size: 128)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1495, file: !1488, line: 194, baseType: !779, size: 192, align: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1487, file: !1488, line: 199, baseType: !786, size: 256, offset: 256)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1487, file: !1488, line: 200, baseType: !1501, size: 64, offset: 512)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1488, line: 200, flags: DIFlagFwdDecl)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1487, file: !1488, line: 201, baseType: !176, size: 64, offset: 576)
!1504 = !DIDerivedType(tag: DW_TAG_member, scope: !1487, file: !1488, line: 202, baseType: !1505, size: 64, offset: 640)
!1505 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1487, file: !1488, line: 202, size: 64, elements: !1506)
!1506 = !{!1507, !1508}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1505, file: !1488, line: 203, baseType: !521, size: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1505, file: !1488, line: 204, baseType: !521, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1487, file: !1488, line: 206, baseType: !521, size: 64, offset: 704)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1487, file: !1488, line: 207, baseType: !418, size: 32, offset: 768)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1487, file: !1488, line: 208, baseType: !426, size: 32, offset: 800)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1487, file: !1488, line: 209, baseType: !1513, size: 32, offset: 832)
!1513 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1488, line: 31, baseType: !540)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1487, file: !1488, line: 210, baseType: !304, size: 16, offset: 864)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1487, file: !1488, line: 211, baseType: !304, size: 16, offset: 880)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1487, file: !1488, line: 215, baseType: !1116, size: 16, offset: 896)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1487, file: !1488, line: 222, baseType: !165, size: 64, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_member, scope: !1487, file: !1488, line: 239, baseType: !1519, size: 320, offset: 1024)
!1519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1487, file: !1488, line: 239, size: 320, elements: !1520)
!1520 = !{!1521, !1548}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1519, file: !1488, line: 240, baseType: !1522, size: 320)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1488, line: 108, size: 320, elements: !1523)
!1523 = !{!1524, !1525, !1537, !1540, !1547}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1522, file: !1488, line: 110, baseType: !165, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, scope: !1522, file: !1488, line: 111, baseType: !1526, size: 64, offset: 64)
!1526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1522, file: !1488, line: 111, size: 64, elements: !1527)
!1527 = !{!1528, !1536}
!1528 = !DIDerivedType(tag: DW_TAG_member, scope: !1526, file: !1488, line: 112, baseType: !1529, size: 64)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1526, file: !1488, line: 112, size: 64, elements: !1530)
!1530 = !{!1531, !1532}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1529, file: !1488, line: 114, baseType: !871, size: 16)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1529, file: !1488, line: 115, baseType: !1533, size: 48, offset: 16)
!1533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 48, elements: !1534)
!1534 = !{!1535}
!1535 = !DISubrange(count: 6)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1526, file: !1488, line: 121, baseType: !165, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1522, file: !1488, line: 123, baseType: !1538, size: 64, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1488, line: 96, flags: DIFlagFwdDecl)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1522, file: !1488, line: 124, baseType: !1541, size: 64, offset: 192)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1488, line: 102, size: 192, elements: !1543)
!1543 = !{!1544, !1545, !1546}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1542, file: !1488, line: 103, baseType: !352, size: 128, align: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1542, file: !1488, line: 104, baseType: !1141, size: 32, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1542, file: !1488, line: 105, baseType: !473, size: 8, offset: 160)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1522, file: !1488, line: 125, baseType: !225, size: 64, offset: 256)
!1548 = !DIDerivedType(tag: DW_TAG_member, scope: !1519, file: !1488, line: 241, baseType: !1549, size: 320)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1519, file: !1488, line: 241, size: 320, elements: !1550)
!1550 = !{!1551, !1552, !1553, !1554, !1555}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1549, file: !1488, line: 242, baseType: !165, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1549, file: !1488, line: 243, baseType: !165, size: 64, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1549, file: !1488, line: 244, baseType: !1538, size: 64, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1549, file: !1488, line: 245, baseType: !1541, size: 64, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1549, file: !1488, line: 246, baseType: !263, size: 64, offset: 256)
!1556 = !DIDerivedType(tag: DW_TAG_member, scope: !1487, file: !1488, line: 254, baseType: !1557, size: 256, offset: 1344)
!1557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1487, file: !1488, line: 254, size: 256, elements: !1558)
!1558 = !{!1559, !1565}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1557, file: !1488, line: 255, baseType: !1560, size: 256)
!1560 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1488, line: 128, size: 256, elements: !1561)
!1561 = !{!1562, !1563}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1560, file: !1488, line: 129, baseType: !176, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1560, file: !1488, line: 130, baseType: !1564, size: 256)
!1564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 256, elements: !1088)
!1565 = !DIDerivedType(tag: DW_TAG_member, scope: !1557, file: !1488, line: 256, baseType: !1566, size: 256)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1557, file: !1488, line: 256, size: 256, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1566, file: !1488, line: 258, baseType: !181, size: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1566, file: !1488, line: 259, baseType: !1570, size: 128, offset: 128)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1571, line: 22, size: 128, elements: !1572)
!1571 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1572 = !{!1573, !1576}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1570, file: !1571, line: 23, baseType: !1574, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1571, line: 23, flags: DIFlagFwdDecl)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1570, file: !1571, line: 24, baseType: !165, size: 64, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1487, file: !1488, line: 274, baseType: !1578, size: 64, offset: 1600)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1488, line: 170, size: 192, elements: !1580)
!1580 = !{!1581, !1590, !1591}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1579, file: !1488, line: 171, baseType: !1582, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1488, line: 165, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!173, !1486, !1586, !1588, !1486}
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1539)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1560)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1579, file: !1488, line: 172, baseType: !1486, size: 64, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1579, file: !1488, line: 173, baseType: !1538, size: 64, offset: 128)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1458, file: !1459, line: 138, baseType: !1486, size: 64, offset: 768)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1458, file: !1459, line: 139, baseType: !1486, size: 64, offset: 832)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1458, file: !1459, line: 140, baseType: !1486, size: 64, offset: 896)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1458, file: !1459, line: 145, baseType: !1596, size: 64, offset: 960)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1598, line: 13, size: 896, elements: !1599)
!1598 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1599 = !{!1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1597, file: !1598, line: 14, baseType: !1141, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1597, file: !1598, line: 15, baseType: !766, size: 32, offset: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1597, file: !1598, line: 16, baseType: !766, size: 32, offset: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1597, file: !1598, line: 21, baseType: !191, size: 64, offset: 128)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1597, file: !1598, line: 27, baseType: !165, size: 64, offset: 192)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1597, file: !1598, line: 28, baseType: !165, size: 64, offset: 256)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1597, file: !1598, line: 29, baseType: !191, size: 64, offset: 320)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1597, file: !1598, line: 32, baseType: !622, size: 128, offset: 384)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1597, file: !1598, line: 33, baseType: !418, size: 32, offset: 512)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1597, file: !1598, line: 37, baseType: !191, size: 64, offset: 576)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1597, file: !1598, line: 44, baseType: !1611, size: 256, offset: 640)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1612, line: 15, size: 256, elements: !1613)
!1612 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1613 = !{!1614, !1615, !1616, !1617, !1618, !1619, !1620}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1611, file: !1612, line: 16, baseType: !792)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1611, file: !1612, line: 18, baseType: !173, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1611, file: !1612, line: 19, baseType: !173, size: 32, offset: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1611, file: !1612, line: 20, baseType: !173, size: 32, offset: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1611, file: !1612, line: 21, baseType: !173, size: 32, offset: 96)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1611, file: !1612, line: 22, baseType: !165, size: 64, offset: 128)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1611, file: !1612, line: 23, baseType: !165, size: 64, offset: 192)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1458, file: !1459, line: 146, baseType: !1622, size: 64, offset: 1024)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !742, line: 516, flags: DIFlagFwdDecl)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1458, file: !1459, line: 147, baseType: !1625, size: 64, offset: 1088)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1459, line: 25, size: 64, elements: !1627)
!1627 = !{!1628, !1629, !1630}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1626, file: !1459, line: 26, baseType: !766, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1626, file: !1459, line: 27, baseType: !173, size: 32, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1626, file: !1459, line: 28, baseType: !1631, offset: 64)
!1631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, elements: !1632)
!1632 = !{!1633}
!1633 = !DISubrange(count: 0)
!1634 = !DIDerivedType(tag: DW_TAG_member, scope: !1458, file: !1459, line: 149, baseType: !1635, size: 128, offset: 1152)
!1635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1458, file: !1459, line: 149, size: 128, elements: !1636)
!1636 = !{!1637, !1638}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1635, file: !1459, line: 150, baseType: !173, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1635, file: !1459, line: 151, baseType: !352, size: 128, align: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1128, file: !1129, line: 926, baseType: !1456, size: 64, offset: 8576)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1128, file: !1129, line: 929, baseType: !1456, size: 64, offset: 8640)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1128, file: !1129, line: 933, baseType: !1486, size: 64, offset: 8704)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1128, file: !1129, line: 943, baseType: !1643, size: 128, offset: 8768)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !1644)
!1644 = !{!1645}
!1645 = !DISubrange(count: 16)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1128, file: !1129, line: 945, baseType: !1647, size: 64, offset: 8896)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1129, line: 49, flags: DIFlagFwdDecl)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1128, file: !1129, line: 956, baseType: !1650, size: 64, offset: 8960)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1129, line: 45, flags: DIFlagFwdDecl)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1128, file: !1129, line: 959, baseType: !1653, size: 64, offset: 9024)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1129, line: 959, flags: DIFlagFwdDecl)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1128, file: !1129, line: 962, baseType: !1656, size: 64, offset: 9088)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1129, line: 66, flags: DIFlagFwdDecl)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1128, file: !1129, line: 966, baseType: !1659, size: 64, offset: 9152)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1661, line: 35, flags: DIFlagFwdDecl)
!1661 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1128, file: !1129, line: 969, baseType: !1663, size: 64, offset: 9216)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1665, line: 82, size: 7296, elements: !1666)
!1665 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1666 = !{!1667, !1668, !1669, !1670, !1671, !1672, !1673, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1702, !1711, !1712, !1714, !1715, !1716, !1719, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1749, !1750, !1757, !1758, !1759, !1760, !1761, !1762}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1664, file: !1665, line: 83, baseType: !1141, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1664, file: !1665, line: 84, baseType: !766, size: 32, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1664, file: !1665, line: 85, baseType: !173, size: 32, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1664, file: !1665, line: 86, baseType: !181, size: 128, offset: 128)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1664, file: !1665, line: 88, baseType: !1390, size: 128, offset: 256)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1664, file: !1665, line: 91, baseType: !1127, size: 64, offset: 384)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1664, file: !1665, line: 94, baseType: !1674, size: 192, offset: 448)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1675, line: 30, size: 192, elements: !1676)
!1675 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1676 = !{!1677, !1678}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1674, file: !1675, line: 31, baseType: !181, size: 128)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1674, file: !1675, line: 32, baseType: !1679, size: 64, offset: 128)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1680, line: 25, baseType: !1681)
!1680 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1680, line: 23, size: 64, elements: !1682)
!1682 = !{!1683}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1681, file: !1680, line: 24, baseType: !1281, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1664, file: !1665, line: 97, baseType: !618, size: 64, offset: 640)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1664, file: !1665, line: 100, baseType: !173, size: 32, offset: 704)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1664, file: !1665, line: 106, baseType: !173, size: 32, offset: 736)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1664, file: !1665, line: 107, baseType: !1127, size: 64, offset: 768)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1664, file: !1665, line: 110, baseType: !173, size: 32, offset: 832)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1664, file: !1665, line: 111, baseType: !7, size: 32, offset: 864)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1664, file: !1665, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1664, file: !1665, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1664, file: !1665, line: 128, baseType: !173, size: 32, offset: 928)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1664, file: !1665, line: 129, baseType: !181, size: 128, offset: 960)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1664, file: !1665, line: 132, baseType: !1203, size: 512, offset: 1088)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1664, file: !1665, line: 133, baseType: !1211, size: 64, offset: 1600)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1664, file: !1665, line: 140, baseType: !1697, size: 256, offset: 1664)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1698, size: 256, elements: !1478)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1665, line: 38, size: 128, elements: !1699)
!1699 = !{!1700, !1701}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1698, file: !1665, line: 39, baseType: !404, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1698, file: !1665, line: 40, baseType: !404, size: 64, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1664, file: !1665, line: 146, baseType: !1703, size: 192, offset: 1920)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1665, line: 66, size: 192, elements: !1704)
!1704 = !{!1705}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1703, file: !1665, line: 67, baseType: !1706, size: 192)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1665, line: 47, size: 192, elements: !1707)
!1707 = !{!1708, !1709, !1710}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1706, file: !1665, line: 48, baseType: !193, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1706, file: !1665, line: 49, baseType: !193, size: 64, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1706, file: !1665, line: 50, baseType: !193, size: 64, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1664, file: !1665, line: 150, baseType: !1439, size: 640, offset: 2112)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1664, file: !1665, line: 153, baseType: !1713, size: 256, offset: 2752)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, size: 256, elements: !1088)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1664, file: !1665, line: 159, baseType: !1380, size: 64, offset: 3008)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1664, file: !1665, line: 162, baseType: !173, size: 32, offset: 3072)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1664, file: !1665, line: 164, baseType: !1717, size: 64, offset: 3136)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1665, line: 164, flags: DIFlagFwdDecl)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1664, file: !1665, line: 175, baseType: !1720, size: 32, offset: 3200)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !375, line: 805, baseType: !1721)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !375, line: 798, size: 32, elements: !1722)
!1722 = !{!1723, !1724}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1721, file: !375, line: 803, baseType: !374, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1721, file: !375, line: 804, baseType: !201, offset: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1664, file: !1665, line: 176, baseType: !404, size: 64, offset: 3264)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1664, file: !1665, line: 176, baseType: !404, size: 64, offset: 3328)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1664, file: !1665, line: 176, baseType: !404, size: 64, offset: 3392)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1664, file: !1665, line: 176, baseType: !404, size: 64, offset: 3456)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1664, file: !1665, line: 177, baseType: !404, size: 64, offset: 3520)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1664, file: !1665, line: 178, baseType: !404, size: 64, offset: 3584)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1664, file: !1665, line: 179, baseType: !1427, size: 128, offset: 3648)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1664, file: !1665, line: 180, baseType: !165, size: 64, offset: 3776)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1664, file: !1665, line: 180, baseType: !165, size: 64, offset: 3840)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1664, file: !1665, line: 180, baseType: !165, size: 64, offset: 3904)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1664, file: !1665, line: 180, baseType: !165, size: 64, offset: 3968)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1664, file: !1665, line: 181, baseType: !165, size: 64, offset: 4032)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1664, file: !1665, line: 181, baseType: !165, size: 64, offset: 4096)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1664, file: !1665, line: 181, baseType: !165, size: 64, offset: 4160)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1664, file: !1665, line: 181, baseType: !165, size: 64, offset: 4224)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1664, file: !1665, line: 182, baseType: !165, size: 64, offset: 4288)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1664, file: !1665, line: 182, baseType: !165, size: 64, offset: 4352)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1664, file: !1665, line: 182, baseType: !165, size: 64, offset: 4416)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1664, file: !1665, line: 182, baseType: !165, size: 64, offset: 4480)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1664, file: !1665, line: 183, baseType: !165, size: 64, offset: 4544)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1664, file: !1665, line: 183, baseType: !165, size: 64, offset: 4608)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1664, file: !1665, line: 184, baseType: !1747, offset: 4672)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1748, line: 12, elements: !215)
!1748 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1664, file: !1665, line: 192, baseType: !406, size: 64, offset: 4672)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1664, file: !1665, line: 203, baseType: !1751, size: 2048, offset: 4736)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, size: 2048, elements: !1644)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1753, line: 43, size: 128, elements: !1754)
!1753 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1754 = !{!1755, !1756}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1752, file: !1753, line: 44, baseType: !311, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1752, file: !1753, line: 45, baseType: !311, size: 64, offset: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1664, file: !1665, line: 220, baseType: !473, size: 8, offset: 6784)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1664, file: !1665, line: 221, baseType: !1116, size: 16, offset: 6800)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1664, file: !1665, line: 222, baseType: !1116, size: 16, offset: 6816)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1664, file: !1665, line: 224, baseType: !987, size: 64, offset: 6848)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1664, file: !1665, line: 227, baseType: !187, size: 192, offset: 6912)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1664, file: !1665, line: 233, baseType: !187, size: 192, offset: 7104)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1128, file: !1129, line: 970, baseType: !1764, size: 64, offset: 9280)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1665, line: 20, size: 16576, elements: !1766)
!1766 = !{!1767, !1768, !1769, !1770}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1765, file: !1665, line: 21, baseType: !201)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1765, file: !1665, line: 22, baseType: !1141, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1765, file: !1665, line: 23, baseType: !1390, size: 128, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1765, file: !1665, line: 24, baseType: !1771, size: 16384, offset: 192)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1772, size: 16384, elements: !268)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1675, line: 49, size: 256, elements: !1773)
!1773 = !{!1774}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1772, file: !1675, line: 50, baseType: !1775, size: 256)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1675, line: 35, size: 256, elements: !1776)
!1776 = !{!1777, !1784, !1785, !1791}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1775, file: !1675, line: 37, baseType: !1778, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1779, line: 19, baseType: !1780)
!1779 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1779, line: 18, baseType: !1782)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{null, !173}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1775, file: !1675, line: 38, baseType: !165, size: 64, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1775, file: !1675, line: 44, baseType: !1786, size: 64, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1779, line: 22, baseType: !1787)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1779, line: 21, baseType: !1789)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{null}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1775, file: !1675, line: 46, baseType: !1679, size: 64, offset: 192)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1128, file: !1129, line: 971, baseType: !1679, size: 64, offset: 9344)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1128, file: !1129, line: 972, baseType: !1679, size: 64, offset: 9408)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1128, file: !1129, line: 974, baseType: !1679, size: 64, offset: 9472)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1128, file: !1129, line: 975, baseType: !1674, size: 192, offset: 9536)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1128, file: !1129, line: 976, baseType: !165, size: 64, offset: 9728)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1128, file: !1129, line: 977, baseType: !309, size: 64, offset: 9792)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1128, file: !1129, line: 978, baseType: !7, size: 32, offset: 9856)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1128, file: !1129, line: 980, baseType: !355, size: 64, offset: 9920)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1128, file: !1129, line: 989, baseType: !1801, size: 128, offset: 9984)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1802, line: 35, size: 128, elements: !1803)
!1802 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1803 = !{!1804, !1805, !1806}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1801, file: !1802, line: 36, baseType: !173, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1801, file: !1802, line: 37, baseType: !766, size: 32, offset: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1801, file: !1802, line: 38, baseType: !1807, size: 64, offset: 64)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1802, line: 23, flags: DIFlagFwdDecl)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1128, file: !1129, line: 992, baseType: !404, size: 64, offset: 10112)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1128, file: !1129, line: 993, baseType: !404, size: 64, offset: 10176)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1128, file: !1129, line: 996, baseType: !201, offset: 10240)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1128, file: !1129, line: 999, baseType: !792, offset: 10240)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1128, file: !1129, line: 1001, baseType: !1814, size: 64, offset: 10240)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1129, line: 636, size: 64, elements: !1815)
!1815 = !{!1816}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1814, file: !1129, line: 637, baseType: !1817, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1128, file: !1129, line: 1005, baseType: !771, size: 128, offset: 10304)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1128, file: !1129, line: 1007, baseType: !1127, size: 64, offset: 10432)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1128, file: !1129, line: 1009, baseType: !1821, size: 64, offset: 10496)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1129, line: 1009, flags: DIFlagFwdDecl)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1128, file: !1129, line: 1043, baseType: !176, size: 64, offset: 10560)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1128, file: !1129, line: 1046, baseType: !1825, size: 64, offset: 10624)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1129, line: 41, flags: DIFlagFwdDecl)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1128, file: !1129, line: 1050, baseType: !1828, size: 64, offset: 10688)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1129, line: 42, flags: DIFlagFwdDecl)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1128, file: !1129, line: 1054, baseType: !1831, size: 64, offset: 10752)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1129, line: 55, flags: DIFlagFwdDecl)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1128, file: !1129, line: 1056, baseType: !1834, size: 64, offset: 10816)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1129, line: 40, flags: DIFlagFwdDecl)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1128, file: !1129, line: 1058, baseType: !1837, size: 64, offset: 10880)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1839, line: 99, size: 704, elements: !1840)
!1839 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1840 = !{!1841, !1842, !1843, !1844, !1845, !1846, !1847, !1866, !1867}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1838, file: !1839, line: 100, baseType: !191, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1838, file: !1839, line: 101, baseType: !766, size: 32, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1838, file: !1839, line: 102, baseType: !766, size: 32, offset: 96)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1838, file: !1839, line: 105, baseType: !201, offset: 128)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1838, file: !1839, line: 107, baseType: !304, size: 16, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1838, file: !1839, line: 109, baseType: !758, size: 128, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1838, file: !1839, line: 110, baseType: !1848, size: 64, offset: 320)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1839, line: 73, size: 448, elements: !1850)
!1850 = !{!1851, !1854, !1855, !1860, !1865}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1849, file: !1839, line: 74, baseType: !1852, size: 64)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1839, line: 74, flags: DIFlagFwdDecl)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1849, file: !1839, line: 75, baseType: !1837, size: 64, offset: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1839, line: 83, baseType: !1856, size: 128, offset: 128)
!1856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1839, line: 83, size: 128, elements: !1857)
!1857 = !{!1858, !1859}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1856, file: !1839, line: 84, baseType: !181, size: 128)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1856, file: !1839, line: 85, baseType: !947, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1839, line: 87, baseType: !1861, size: 128, offset: 256)
!1861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1839, line: 87, size: 128, elements: !1862)
!1862 = !{!1863, !1864}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1861, file: !1839, line: 88, baseType: !622, size: 128)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1861, file: !1839, line: 89, baseType: !352, size: 128, align: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1849, file: !1839, line: 92, baseType: !7, size: 32, offset: 384)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1838, file: !1839, line: 111, baseType: !618, size: 64, offset: 384)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1838, file: !1839, line: 113, baseType: !1868, size: 256, offset: 448)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !104, line: 102, size: 256, elements: !1869)
!1869 = !{!1870, !1871, !1872}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1868, file: !104, line: 103, baseType: !191, size: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1868, file: !104, line: 104, baseType: !181, size: 128, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1868, file: !104, line: 105, baseType: !1873, size: 64, offset: 192)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !104, line: 21, baseType: !1874)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{null, !1877}
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1128, file: !1129, line: 1061, baseType: !1879, size: 64, offset: 10944)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1129, line: 43, flags: DIFlagFwdDecl)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1128, file: !1129, line: 1064, baseType: !165, size: 64, offset: 11008)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1128, file: !1129, line: 1065, baseType: !1883, size: 64, offset: 11072)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1675, line: 14, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1675, line: 12, size: 384, elements: !1886)
!1886 = !{!1887}
!1887 = !DIDerivedType(tag: DW_TAG_member, scope: !1885, file: !1675, line: 13, baseType: !1888, size: 384)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1885, file: !1675, line: 13, size: 384, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1888, file: !1675, line: 13, baseType: !173, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1888, file: !1675, line: 13, baseType: !173, size: 32, offset: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1888, file: !1675, line: 13, baseType: !173, size: 32, offset: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1888, file: !1675, line: 13, baseType: !1894, size: 256, offset: 128)
!1894 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1895, line: 32, size: 256, elements: !1896)
!1895 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1896 = !{!1897, !1902, !1915, !1921, !1930, !1950, !1955}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1894, file: !1895, line: 37, baseType: !1898, size: 64)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1894, file: !1895, line: 34, size: 64, elements: !1899)
!1899 = !{!1900, !1901}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1898, file: !1895, line: 35, baseType: !1369, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1898, file: !1895, line: 36, baseType: !424, size: 32, offset: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1894, file: !1895, line: 45, baseType: !1903, size: 192)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1894, file: !1895, line: 40, size: 192, elements: !1904)
!1904 = !{!1905, !1907, !1908, !1914}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1903, file: !1895, line: 41, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !296, line: 95, baseType: !173)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1903, file: !1895, line: 42, baseType: !173, size: 32, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1903, file: !1895, line: 43, baseType: !1909, size: 64, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1895, line: 11, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1895, line: 8, size: 64, elements: !1911)
!1911 = !{!1912, !1913}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1910, file: !1895, line: 9, baseType: !173, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1910, file: !1895, line: 10, baseType: !176, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1903, file: !1895, line: 44, baseType: !173, size: 32, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1894, file: !1895, line: 52, baseType: !1916, size: 128)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1894, file: !1895, line: 48, size: 128, elements: !1917)
!1917 = !{!1918, !1919, !1920}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1916, file: !1895, line: 49, baseType: !1369, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1916, file: !1895, line: 50, baseType: !424, size: 32, offset: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1916, file: !1895, line: 51, baseType: !1909, size: 64, offset: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1894, file: !1895, line: 61, baseType: !1922, size: 256)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1894, file: !1895, line: 55, size: 256, elements: !1923)
!1923 = !{!1924, !1925, !1926, !1927, !1929}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1922, file: !1895, line: 56, baseType: !1369, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1922, file: !1895, line: 57, baseType: !424, size: 32, offset: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1922, file: !1895, line: 58, baseType: !173, size: 32, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1922, file: !1895, line: 59, baseType: !1928, size: 64, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !296, line: 94, baseType: !297)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1922, file: !1895, line: 60, baseType: !1928, size: 64, offset: 192)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1894, file: !1895, line: 95, baseType: !1931, size: 256)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1894, file: !1895, line: 64, size: 256, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !1931, file: !1895, line: 65, baseType: !176, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, scope: !1931, file: !1895, line: 77, baseType: !1935, size: 192, offset: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1931, file: !1895, line: 77, size: 192, elements: !1936)
!1936 = !{!1937, !1938, !1945}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !1935, file: !1895, line: 82, baseType: !1116, size: 16)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !1935, file: !1895, line: 88, baseType: !1939, size: 192)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1935, file: !1895, line: 84, size: 192, elements: !1940)
!1940 = !{!1941, !1943, !1944}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !1939, file: !1895, line: 85, baseType: !1942, size: 64)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !1241)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !1939, file: !1895, line: 86, baseType: !176, size: 64, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !1939, file: !1895, line: 87, baseType: !176, size: 64, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !1935, file: !1895, line: 93, baseType: !1946, size: 96)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1935, file: !1895, line: 90, size: 96, elements: !1947)
!1947 = !{!1948, !1949}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !1946, file: !1895, line: 91, baseType: !1942, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !1946, file: !1895, line: 92, baseType: !175, size: 32, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1894, file: !1895, line: 101, baseType: !1951, size: 128)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1894, file: !1895, line: 98, size: 128, elements: !1952)
!1952 = !{!1953, !1954}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !1951, file: !1895, line: 99, baseType: !105, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !1951, file: !1895, line: 100, baseType: !173, size: 32, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1894, file: !1895, line: 108, baseType: !1956, size: 128)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1894, file: !1895, line: 104, size: 128, elements: !1957)
!1957 = !{!1958, !1959, !1960}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !1956, file: !1895, line: 105, baseType: !176, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !1956, file: !1895, line: 106, baseType: !173, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !1956, file: !1895, line: 107, baseType: !7, size: 32, offset: 96)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1128, file: !1129, line: 1067, baseType: !1747, offset: 11136)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1128, file: !1129, line: 1099, baseType: !1963, size: 64, offset: 11136)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1129, line: 56, flags: DIFlagFwdDecl)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1128, file: !1129, line: 1103, baseType: !181, size: 128, offset: 11200)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1128, file: !1129, line: 1104, baseType: !1967, size: 64, offset: 11328)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1129, line: 46, flags: DIFlagFwdDecl)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1128, file: !1129, line: 1105, baseType: !187, size: 192, offset: 11392)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1128, file: !1129, line: 1106, baseType: !7, size: 32, offset: 11584)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1128, file: !1129, line: 1109, baseType: !1972, size: 128, offset: 11648)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1973, size: 128, elements: !1478)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!1974 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1129, line: 51, flags: DIFlagFwdDecl)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1128, file: !1129, line: 1110, baseType: !187, size: 192, offset: 11776)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1128, file: !1129, line: 1111, baseType: !181, size: 128, offset: 11968)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1128, file: !1129, line: 1173, baseType: !1978, size: 64, offset: 12096)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !1980, line: 62, size: 256, align: 256, elements: !1981)
!1980 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!1981 = !{!1982, !1983, !1984, !1989}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !1979, file: !1980, line: 75, baseType: !175, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !1979, file: !1980, line: 90, baseType: !175, size: 32, offset: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !1979, file: !1980, line: 124, baseType: !1985, size: 64, offset: 64)
!1985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1979, file: !1980, line: 109, size: 64, elements: !1986)
!1986 = !{!1987, !1988}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !1985, file: !1980, line: 110, baseType: !405, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1985, file: !1980, line: 112, baseType: !405, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1979, file: !1980, line: 144, baseType: !175, size: 32, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1128, file: !1129, line: 1174, baseType: !174, size: 32, offset: 12160)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1128, file: !1129, line: 1179, baseType: !165, size: 64, offset: 12224)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1128, file: !1129, line: 1182, baseType: !1993, size: 128, offset: 12288)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1084, line: 76, size: 128, elements: !1994)
!1994 = !{!1995, !2000, !2001}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1993, file: !1084, line: 85, baseType: !1996, size: 64)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !1997, line: 7, size: 64, elements: !1998)
!1997 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!1998 = !{!1999}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !1996, file: !1997, line: 12, baseType: !1278, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !1993, file: !1084, line: 88, baseType: !473, size: 8, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !1993, file: !1084, line: 95, baseType: !473, size: 8, offset: 72)
!2002 = !DIDerivedType(tag: DW_TAG_member, scope: !1128, file: !1129, line: 1184, baseType: !2003, size: 128, offset: 12416)
!2003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1128, file: !1129, line: 1184, size: 128, elements: !2004)
!2004 = !{!2005, !2006}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2003, file: !1129, line: 1185, baseType: !1141, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2003, file: !1129, line: 1186, baseType: !352, size: 128, align: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1128, file: !1129, line: 1190, baseType: !2008, size: 64, offset: 12544)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1129, line: 53, flags: DIFlagFwdDecl)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1128, file: !1129, line: 1192, baseType: !2011, size: 128, offset: 12608)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1084, line: 64, size: 128, elements: !2012)
!2012 = !{!2013, !2014, !2015}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2011, file: !1084, line: 65, baseType: !740, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2011, file: !1084, line: 67, baseType: !175, size: 32, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2011, file: !1084, line: 68, baseType: !175, size: 32, offset: 96)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1128, file: !1129, line: 1206, baseType: !173, size: 32, offset: 12736)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1128, file: !1129, line: 1207, baseType: !173, size: 32, offset: 12768)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1128, file: !1129, line: 1209, baseType: !165, size: 64, offset: 12800)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1128, file: !1129, line: 1219, baseType: !404, size: 64, offset: 12864)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1128, file: !1129, line: 1220, baseType: !404, size: 64, offset: 12928)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1128, file: !1129, line: 1317, baseType: !173, size: 32, offset: 12992)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1128, file: !1129, line: 1319, baseType: !1127, size: 64, offset: 13056)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1128, file: !1129, line: 1322, baseType: !2024, size: 64, offset: 13120)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !1129, line: 1322, flags: DIFlagFwdDecl)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1128, file: !1129, line: 1326, baseType: !1141, size: 32, offset: 13184)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1128, file: !1129, line: 1342, baseType: !176, size: 64, offset: 13248)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1128, file: !1129, line: 1343, baseType: !405, size: 64, offset: 13312)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1128, file: !1129, line: 1344, baseType: !404, size: 64, offset: 13376)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1128, file: !1129, line: 1345, baseType: !405, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1128, file: !1129, line: 1346, baseType: !405, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1128, file: !1129, line: 1347, baseType: !405, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1128, file: !1129, line: 1348, baseType: !352, size: 128, align: 64, offset: 13504)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1128, file: !1129, line: 1358, baseType: !2035, size: 34816, offset: 13824)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2036, line: 485, size: 34816, elements: !2037)
!2036 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2037 = !{!2038, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2067, !2068, !2069, !2070, !2071, !2072, !2075, !2076, !2077}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2035, file: !2036, line: 487, baseType: !2039, size: 192)
!2039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2040, size: 192, elements: !264)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2041, line: 16, size: 64, elements: !2042)
!2041 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2042 = !{!2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2040, file: !2041, line: 17, baseType: !871, size: 16)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2040, file: !2041, line: 18, baseType: !871, size: 16, offset: 16)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2040, file: !2041, line: 19, baseType: !871, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2040, file: !2041, line: 19, baseType: !871, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2040, file: !2041, line: 19, baseType: !871, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2040, file: !2041, line: 19, baseType: !871, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2040, file: !2041, line: 19, baseType: !871, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2040, file: !2041, line: 20, baseType: !871, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2040, file: !2041, line: 20, baseType: !871, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2040, file: !2041, line: 20, baseType: !871, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2040, file: !2041, line: 20, baseType: !871, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2040, file: !2041, line: 20, baseType: !871, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2040, file: !2041, line: 20, baseType: !871, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2035, file: !2036, line: 491, baseType: !165, size: 64, offset: 192)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2035, file: !2036, line: 495, baseType: !304, size: 16, offset: 256)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2035, file: !2036, line: 496, baseType: !304, size: 16, offset: 272)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2035, file: !2036, line: 497, baseType: !304, size: 16, offset: 288)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2035, file: !2036, line: 498, baseType: !304, size: 16, offset: 304)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2035, file: !2036, line: 502, baseType: !165, size: 64, offset: 320)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2035, file: !2036, line: 503, baseType: !165, size: 64, offset: 384)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2035, file: !2036, line: 514, baseType: !2064, size: 256, offset: 448)
!2064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2065, size: 256, elements: !1088)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2036, line: 483, flags: DIFlagFwdDecl)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2035, file: !2036, line: 516, baseType: !165, size: 64, offset: 704)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2035, file: !2036, line: 518, baseType: !165, size: 64, offset: 768)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2035, file: !2036, line: 520, baseType: !165, size: 64, offset: 832)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2035, file: !2036, line: 521, baseType: !165, size: 64, offset: 896)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2035, file: !2036, line: 522, baseType: !165, size: 64, offset: 960)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2035, file: !2036, line: 528, baseType: !2073, size: 64, offset: 1024)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2036, line: 10, flags: DIFlagFwdDecl)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2035, file: !2036, line: 535, baseType: !165, size: 64, offset: 1088)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2035, file: !2036, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2035, file: !2036, line: 540, baseType: !2078, size: 33280, offset: 1536)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2079, line: 317, size: 33280, elements: !2080)
!2079 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2080 = !{!2081, !2082, !2083}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2078, file: !2079, line: 330, baseType: !7, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2078, file: !2079, line: 337, baseType: !165, size: 64, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2078, file: !2079, line: 348, baseType: !2084, size: 32768, offset: 512)
!2084 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2079, line: 304, size: 32768, elements: !2085)
!2085 = !{!2086, !2101, !2140, !2190, !2203}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2084, file: !2079, line: 305, baseType: !2087, size: 896)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2079, line: 12, size: 896, elements: !2088)
!2088 = !{!2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2100}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2087, file: !2079, line: 13, baseType: !174, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2087, file: !2079, line: 14, baseType: !174, size: 32, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2087, file: !2079, line: 15, baseType: !174, size: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2087, file: !2079, line: 16, baseType: !174, size: 32, offset: 96)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2087, file: !2079, line: 17, baseType: !174, size: 32, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2087, file: !2079, line: 18, baseType: !174, size: 32, offset: 160)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2087, file: !2079, line: 19, baseType: !174, size: 32, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2087, file: !2079, line: 22, baseType: !2097, size: 640, offset: 224)
!2097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 640, elements: !2098)
!2098 = !{!2099}
!2099 = !DISubrange(count: 20)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2087, file: !2079, line: 25, baseType: !174, size: 32, offset: 864)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2084, file: !2079, line: 306, baseType: !2102, size: 4096, align: 128)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2079, line: 34, size: 4096, align: 128, elements: !2103)
!2103 = !{!2104, !2105, !2106, !2107, !2108, !2123, !2124, !2125, !2129, !2131, !2135}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2102, file: !2079, line: 35, baseType: !871, size: 16)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2102, file: !2079, line: 36, baseType: !871, size: 16, offset: 16)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2102, file: !2079, line: 37, baseType: !871, size: 16, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2102, file: !2079, line: 38, baseType: !871, size: 16, offset: 48)
!2108 = !DIDerivedType(tag: DW_TAG_member, scope: !2102, file: !2079, line: 39, baseType: !2109, size: 128, offset: 64)
!2109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2102, file: !2079, line: 39, size: 128, elements: !2110)
!2110 = !{!2111, !2116}
!2111 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !2079, line: 40, baseType: !2112, size: 128)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2109, file: !2079, line: 40, size: 128, elements: !2113)
!2113 = !{!2114, !2115}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2112, file: !2079, line: 41, baseType: !404, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2112, file: !2079, line: 42, baseType: !404, size: 64, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !2079, line: 44, baseType: !2117, size: 128)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2109, file: !2079, line: 44, size: 128, elements: !2118)
!2118 = !{!2119, !2120, !2121, !2122}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2117, file: !2079, line: 45, baseType: !174, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2117, file: !2079, line: 46, baseType: !174, size: 32, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2117, file: !2079, line: 47, baseType: !174, size: 32, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2117, file: !2079, line: 48, baseType: !174, size: 32, offset: 96)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2102, file: !2079, line: 51, baseType: !174, size: 32, offset: 192)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2102, file: !2079, line: 52, baseType: !174, size: 32, offset: 224)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2102, file: !2079, line: 55, baseType: !2126, size: 1024, offset: 256)
!2126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 1024, elements: !2127)
!2127 = !{!2128}
!2128 = !DISubrange(count: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2102, file: !2079, line: 58, baseType: !2130, size: 2048, offset: 1280)
!2130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 2048, elements: !268)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2102, file: !2079, line: 60, baseType: !2132, size: 384, offset: 3328)
!2132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 384, elements: !2133)
!2133 = !{!2134}
!2134 = !DISubrange(count: 12)
!2135 = !DIDerivedType(tag: DW_TAG_member, scope: !2102, file: !2079, line: 62, baseType: !2136, size: 384, offset: 3712)
!2136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2102, file: !2079, line: 62, size: 384, elements: !2137)
!2137 = !{!2138, !2139}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2136, file: !2079, line: 63, baseType: !2132, size: 384)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2136, file: !2079, line: 64, baseType: !2132, size: 384)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2084, file: !2079, line: 307, baseType: !2141, size: 1088)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2079, line: 79, size: 1088, elements: !2142)
!2142 = !{!2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2189}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2141, file: !2079, line: 80, baseType: !174, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2141, file: !2079, line: 81, baseType: !174, size: 32, offset: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2141, file: !2079, line: 82, baseType: !174, size: 32, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2141, file: !2079, line: 83, baseType: !174, size: 32, offset: 96)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2141, file: !2079, line: 84, baseType: !174, size: 32, offset: 128)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2141, file: !2079, line: 85, baseType: !174, size: 32, offset: 160)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2141, file: !2079, line: 86, baseType: !174, size: 32, offset: 192)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2141, file: !2079, line: 88, baseType: !2097, size: 640, offset: 224)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2141, file: !2079, line: 89, baseType: !1263, size: 8, offset: 864)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2141, file: !2079, line: 90, baseType: !1263, size: 8, offset: 872)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2141, file: !2079, line: 91, baseType: !1263, size: 8, offset: 880)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2141, file: !2079, line: 92, baseType: !1263, size: 8, offset: 888)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2141, file: !2079, line: 93, baseType: !1263, size: 8, offset: 896)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2141, file: !2079, line: 94, baseType: !1263, size: 8, offset: 904)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2141, file: !2079, line: 95, baseType: !2158, size: 64, offset: 960)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2160, line: 11, size: 128, elements: !2161)
!2160 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2161 = !{!2162, !2163}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2159, file: !2160, line: 12, baseType: !105, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2159, file: !2160, line: 13, baseType: !2164, size: 64, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2166, line: 56, size: 1344, elements: !2167)
!2166 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2167 = !{!2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2165, file: !2166, line: 61, baseType: !165, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2165, file: !2166, line: 62, baseType: !165, size: 64, offset: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2165, file: !2166, line: 63, baseType: !165, size: 64, offset: 128)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2165, file: !2166, line: 64, baseType: !165, size: 64, offset: 192)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2165, file: !2166, line: 65, baseType: !165, size: 64, offset: 256)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2165, file: !2166, line: 66, baseType: !165, size: 64, offset: 320)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2165, file: !2166, line: 68, baseType: !165, size: 64, offset: 384)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2165, file: !2166, line: 69, baseType: !165, size: 64, offset: 448)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2165, file: !2166, line: 70, baseType: !165, size: 64, offset: 512)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2165, file: !2166, line: 71, baseType: !165, size: 64, offset: 576)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2165, file: !2166, line: 72, baseType: !165, size: 64, offset: 640)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2165, file: !2166, line: 73, baseType: !165, size: 64, offset: 704)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2165, file: !2166, line: 74, baseType: !165, size: 64, offset: 768)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2165, file: !2166, line: 75, baseType: !165, size: 64, offset: 832)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2165, file: !2166, line: 76, baseType: !165, size: 64, offset: 896)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2165, file: !2166, line: 81, baseType: !165, size: 64, offset: 960)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2165, file: !2166, line: 83, baseType: !165, size: 64, offset: 1024)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2165, file: !2166, line: 84, baseType: !165, size: 64, offset: 1088)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2165, file: !2166, line: 85, baseType: !165, size: 64, offset: 1152)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2165, file: !2166, line: 86, baseType: !165, size: 64, offset: 1216)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2165, file: !2166, line: 87, baseType: !165, size: 64, offset: 1280)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2141, file: !2079, line: 96, baseType: !174, size: 32, offset: 1024)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2084, file: !2079, line: 308, baseType: !2191, size: 4608, align: 512)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2079, line: 289, size: 4608, align: 512, elements: !2192)
!2192 = !{!2193, !2194, !2201}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2191, file: !2079, line: 290, baseType: !2102, size: 4096, align: 128)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2191, file: !2079, line: 291, baseType: !2195, size: 512, offset: 4096)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2079, line: 268, size: 512, elements: !2196)
!2196 = !{!2197, !2198, !2199}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2195, file: !2079, line: 269, baseType: !404, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2195, file: !2079, line: 270, baseType: !404, size: 64, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2195, file: !2079, line: 271, baseType: !2200, size: 384, offset: 128)
!2200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 384, elements: !1534)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2191, file: !2079, line: 292, baseType: !2202, offset: 4608)
!2202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1263, elements: !1632)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2084, file: !2079, line: 309, baseType: !2204, size: 32768)
!2204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1263, size: 32768, elements: !2205)
!2205 = !{!2206}
!2206 = !DISubrange(count: 4096)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1124, file: !742, line: 378, baseType: !2208, size: 64, offset: 64)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1120, file: !742, line: 384, baseType: !1411, size: 192, offset: 192)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !991, file: !742, line: 500, baseType: !201, offset: 6656)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !991, file: !742, line: 501, baseType: !2212, size: 64, offset: 6656)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !742, line: 387, flags: DIFlagFwdDecl)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !991, file: !742, line: 516, baseType: !1622, size: 64, offset: 6720)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !991, file: !742, line: 519, baseType: !339, size: 64, offset: 6784)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !991, file: !742, line: 521, baseType: !2217, size: 64, offset: 6848)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !742, line: 521, flags: DIFlagFwdDecl)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !991, file: !742, line: 545, baseType: !766, size: 32, offset: 6912)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !991, file: !742, line: 548, baseType: !473, size: 8, offset: 6944)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !991, file: !742, line: 550, baseType: !2222, offset: 6952)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2223, line: 142, elements: !215)
!2223 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !991, file: !742, line: 554, baseType: !1868, size: 256, offset: 6976)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !991, file: !742, line: 557, baseType: !174, size: 32, offset: 7232)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !988, file: !742, line: 565, baseType: !2227, offset: 7296)
!2227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, elements: !2228)
!2228 = !{!2229}
!2229 = !DISubrange(count: -1)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !984, file: !742, line: 151, baseType: !766, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !976, file: !742, line: 156, baseType: !201, offset: 256)
!2232 = !DIDerivedType(tag: DW_TAG_member, scope: !746, file: !742, line: 159, baseType: !2233, size: 128)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !746, file: !742, line: 159, size: 128, elements: !2234)
!2234 = !{!2235, !2238}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2233, file: !742, line: 161, baseType: !2236, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !742, line: 161, flags: DIFlagFwdDecl)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2233, file: !742, line: 162, baseType: !176, size: 64, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !746, file: !742, line: 176, baseType: !352, size: 128, align: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, scope: !741, file: !742, line: 179, baseType: !2241, size: 32, offset: 384)
!2241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !741, file: !742, line: 179, size: 32, elements: !2242)
!2242 = !{!2243, !2244, !2245, !2246}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2241, file: !742, line: 184, baseType: !766, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2241, file: !742, line: 192, baseType: !7, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2241, file: !742, line: 194, baseType: !7, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2241, file: !742, line: 195, baseType: !173, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !741, file: !742, line: 199, baseType: !766, size: 32, offset: 416)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !640, file: !31, line: 1964, baseType: !2249, size: 64, offset: 1344)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = !DISubroutineType(types: !2251)
!2251 = !{!105, !580, !2252}
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2254, line: 12, size: 256, elements: !2255)
!2254 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2255 = !{!2256, !2257, !2258, !2259, !2260}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2253, file: !2254, line: 13, baseType: !167, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2253, file: !2254, line: 16, baseType: !173, size: 32, offset: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2253, file: !2254, line: 23, baseType: !165, size: 64, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2253, file: !2254, line: 30, baseType: !165, size: 64, offset: 128)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2253, file: !2254, line: 33, baseType: !2261, size: 64, offset: 192)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !742, line: 27, flags: DIFlagFwdDecl)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !640, file: !31, line: 1966, baseType: !2249, size: 64, offset: 1408)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !581, file: !31, line: 1424, baseType: !2265, size: 64, offset: 448)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2267)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !25, line: 322, size: 704, elements: !2268)
!2268 = !{!2269, !2315, !2319, !2323, !2324, !2325, !2326, !2327, !2332, !2337, !2341}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2267, file: !25, line: 323, baseType: !2270, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!173, !2273}
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !25, line: 294, size: 1600, elements: !2275)
!2275 = !{!2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2300, !2301, !2302}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2274, file: !25, line: 295, baseType: !622, size: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2274, file: !25, line: 296, baseType: !181, size: 128, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2274, file: !25, line: 297, baseType: !181, size: 128, offset: 256)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2274, file: !25, line: 298, baseType: !181, size: 128, offset: 384)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2274, file: !25, line: 299, baseType: !187, size: 192, offset: 512)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2274, file: !25, line: 300, baseType: !201, offset: 704)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2274, file: !25, line: 301, baseType: !766, size: 32, offset: 704)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2274, file: !25, line: 302, baseType: !580, size: 64, offset: 768)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2274, file: !25, line: 303, baseType: !2285, size: 64, offset: 832)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !25, line: 68, size: 64, elements: !2286)
!2286 = !{!2287, !2299}
!2287 = !DIDerivedType(tag: DW_TAG_member, scope: !2285, file: !25, line: 69, baseType: !2288, size: 32)
!2288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2285, file: !25, line: 69, size: 32, elements: !2289)
!2289 = !{!2290, !2291, !2292}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2288, file: !25, line: 70, baseType: !418, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2288, file: !25, line: 71, baseType: !426, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2288, file: !25, line: 72, baseType: !2293, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2294, line: 24, baseType: !2295)
!2294 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2294, line: 22, size: 32, elements: !2296)
!2296 = !{!2297}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2295, file: !2294, line: 23, baseType: !2298, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2294, line: 20, baseType: !424)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2285, file: !25, line: 74, baseType: !24, size: 32, offset: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2274, file: !25, line: 304, baseType: !514, size: 64, offset: 896)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2274, file: !25, line: 305, baseType: !165, size: 64, offset: 960)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2274, file: !25, line: 306, baseType: !2303, size: 576, offset: 1024)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !25, line: 205, size: 576, elements: !2304)
!2304 = !{!2305, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2303, file: !25, line: 206, baseType: !2306, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !25, line: 66, baseType: !199)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2303, file: !25, line: 207, baseType: !2306, size: 64, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2303, file: !25, line: 208, baseType: !2306, size: 64, offset: 128)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2303, file: !25, line: 209, baseType: !2306, size: 64, offset: 192)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2303, file: !25, line: 210, baseType: !2306, size: 64, offset: 256)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2303, file: !25, line: 211, baseType: !2306, size: 64, offset: 320)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2303, file: !25, line: 212, baseType: !2306, size: 64, offset: 384)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2303, file: !25, line: 213, baseType: !521, size: 64, offset: 448)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2303, file: !25, line: 214, baseType: !521, size: 64, offset: 512)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2267, file: !25, line: 324, baseType: !2316, size: 64, offset: 64)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!2273, !580, !173}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2267, file: !25, line: 325, baseType: !2320, size: 64, offset: 128)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{null, !2273}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2267, file: !25, line: 326, baseType: !2270, size: 64, offset: 192)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2267, file: !25, line: 327, baseType: !2270, size: 64, offset: 256)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2267, file: !25, line: 328, baseType: !2270, size: 64, offset: 320)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2267, file: !25, line: 329, baseType: !668, size: 64, offset: 384)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2267, file: !25, line: 332, baseType: !2328, size: 64, offset: 448)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{!2331, !412}
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2267, file: !25, line: 333, baseType: !2333, size: 64, offset: 512)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{!173, !412, !2336}
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2267, file: !25, line: 335, baseType: !2338, size: 64, offset: 576)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{!173, !412, !2331}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2267, file: !25, line: 337, baseType: !2342, size: 64, offset: 640)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = !DISubroutineType(types: !2344)
!2344 = !{!173, !580, !2345}
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !581, file: !31, line: 1425, baseType: !2347, size: 64, offset: 512)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 64)
!2348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2349)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !25, line: 428, size: 704, elements: !2350)
!2350 = !{!2351, !2355, !2356, !2360, !2361, !2362, !2377, !2400, !2404, !2405, !2428}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2349, file: !25, line: 429, baseType: !2352, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{!173, !580, !173, !173, !530}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2349, file: !25, line: 430, baseType: !668, size: 64, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2349, file: !25, line: 431, baseType: !2357, size: 64, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{!173, !580, !7}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2349, file: !25, line: 432, baseType: !2357, size: 64, offset: 192)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2349, file: !25, line: 433, baseType: !668, size: 64, offset: 256)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2349, file: !25, line: 434, baseType: !2363, size: 64, offset: 320)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = !DISubroutineType(types: !2365)
!2365 = !{!173, !580, !173, !2366}
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !25, line: 415, size: 256, elements: !2368)
!2368 = !{!2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2367, file: !25, line: 416, baseType: !173, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2367, file: !25, line: 417, baseType: !7, size: 32, offset: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2367, file: !25, line: 418, baseType: !7, size: 32, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2367, file: !25, line: 420, baseType: !7, size: 32, offset: 96)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2367, file: !25, line: 421, baseType: !7, size: 32, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2367, file: !25, line: 422, baseType: !7, size: 32, offset: 160)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2367, file: !25, line: 423, baseType: !7, size: 32, offset: 192)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2367, file: !25, line: 424, baseType: !7, size: 32, offset: 224)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2349, file: !25, line: 435, baseType: !2378, size: 64, offset: 384)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{!173, !580, !2285, !2381}
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !25, line: 343, size: 960, elements: !2383)
!2383 = !{!2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2382, file: !25, line: 344, baseType: !173, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2382, file: !25, line: 345, baseType: !404, size: 64, offset: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2382, file: !25, line: 346, baseType: !404, size: 64, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2382, file: !25, line: 347, baseType: !404, size: 64, offset: 192)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2382, file: !25, line: 348, baseType: !404, size: 64, offset: 256)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2382, file: !25, line: 349, baseType: !404, size: 64, offset: 320)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2382, file: !25, line: 350, baseType: !404, size: 64, offset: 384)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2382, file: !25, line: 351, baseType: !197, size: 64, offset: 448)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2382, file: !25, line: 353, baseType: !197, size: 64, offset: 512)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2382, file: !25, line: 354, baseType: !173, size: 32, offset: 576)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2382, file: !25, line: 355, baseType: !173, size: 32, offset: 608)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2382, file: !25, line: 356, baseType: !404, size: 64, offset: 640)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2382, file: !25, line: 357, baseType: !404, size: 64, offset: 704)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2382, file: !25, line: 358, baseType: !404, size: 64, offset: 768)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2382, file: !25, line: 359, baseType: !197, size: 64, offset: 832)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2382, file: !25, line: 360, baseType: !173, size: 32, offset: 896)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2349, file: !25, line: 436, baseType: !2401, size: 64, offset: 448)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DISubroutineType(types: !2403)
!2403 = !{!173, !580, !2345, !2381}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2349, file: !25, line: 438, baseType: !2378, size: 64, offset: 512)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2349, file: !25, line: 439, baseType: !2406, size: 64, offset: 576)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!173, !580, !2409}
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !25, line: 409, size: 1408, elements: !2411)
!2411 = !{!2412, !2413}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2410, file: !25, line: 410, baseType: !7, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2410, file: !25, line: 411, baseType: !2414, size: 1344, offset: 64)
!2414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2415, size: 1344, elements: !264)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !25, line: 395, size: 448, elements: !2416)
!2416 = !{!2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2427}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2415, file: !25, line: 396, baseType: !7, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2415, file: !25, line: 397, baseType: !7, size: 32, offset: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2415, file: !25, line: 399, baseType: !7, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2415, file: !25, line: 400, baseType: !7, size: 32, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2415, file: !25, line: 401, baseType: !7, size: 32, offset: 128)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2415, file: !25, line: 402, baseType: !7, size: 32, offset: 160)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2415, file: !25, line: 403, baseType: !7, size: 32, offset: 192)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2415, file: !25, line: 404, baseType: !406, size: 64, offset: 256)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2415, file: !25, line: 405, baseType: !2426, size: 64, offset: 320)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !168, line: 126, baseType: !404)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2415, file: !25, line: 406, baseType: !2426, size: 64, offset: 384)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2349, file: !25, line: 440, baseType: !2357, size: 64, offset: 640)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !581, file: !31, line: 1426, baseType: !2430, size: 64, offset: 576)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2432)
!2432 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !31, line: 49, flags: DIFlagFwdDecl)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !581, file: !31, line: 1427, baseType: !165, size: 64, offset: 640)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !581, file: !31, line: 1428, baseType: !165, size: 64, offset: 704)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !581, file: !31, line: 1429, baseType: !165, size: 64, offset: 768)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !581, file: !31, line: 1430, baseType: !369, size: 64, offset: 832)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !581, file: !31, line: 1431, baseType: !786, size: 256, offset: 896)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !581, file: !31, line: 1432, baseType: !173, size: 32, offset: 1152)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !581, file: !31, line: 1433, baseType: !766, size: 32, offset: 1184)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !581, file: !31, line: 1437, baseType: !2441, size: 64, offset: 1216)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2444)
!2444 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !31, line: 1437, flags: DIFlagFwdDecl)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !581, file: !31, line: 1449, baseType: !2446, size: 64, offset: 1280)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !385, line: 34, size: 64, elements: !2447)
!2447 = !{!2448}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2446, file: !385, line: 35, baseType: !388, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !581, file: !31, line: 1450, baseType: !181, size: 128, offset: 1344)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !581, file: !31, line: 1451, baseType: !2451, size: 64, offset: 1472)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !31, line: 699, flags: DIFlagFwdDecl)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !581, file: !31, line: 1452, baseType: !1834, size: 64, offset: 1536)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !581, file: !31, line: 1453, baseType: !2455, size: 64, offset: 1600)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64)
!2456 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !31, line: 1453, flags: DIFlagFwdDecl)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !581, file: !31, line: 1454, baseType: !622, size: 128, offset: 1664)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !581, file: !31, line: 1455, baseType: !7, size: 32, offset: 1792)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !581, file: !31, line: 1456, baseType: !2460, size: 2432, offset: 1856)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !25, line: 518, size: 2432, elements: !2461)
!2461 = !{!2462, !2463, !2464, !2466, !2498}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2460, file: !25, line: 519, baseType: !7, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2460, file: !25, line: 520, baseType: !786, size: 256, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2460, file: !25, line: 521, baseType: !2465, size: 192, offset: 320)
!2465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !412, size: 192, elements: !264)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2460, file: !25, line: 522, baseType: !2467, size: 1728, offset: 512)
!2467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2468, size: 1728, elements: !264)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !25, line: 222, size: 576, elements: !2469)
!2469 = !{!2470, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2468, file: !25, line: 223, baseType: !2471, size: 64)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !25, line: 443, size: 256, elements: !2473)
!2473 = !{!2474, !2475, !2488, !2489}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2472, file: !25, line: 444, baseType: !173, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2472, file: !25, line: 445, baseType: !2476, size: 64, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2478)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !25, line: 310, size: 512, elements: !2479)
!2479 = !{!2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2478, file: !25, line: 311, baseType: !668, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2478, file: !25, line: 312, baseType: !668, size: 64, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2478, file: !25, line: 313, baseType: !668, size: 64, offset: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2478, file: !25, line: 314, baseType: !668, size: 64, offset: 192)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2478, file: !25, line: 315, baseType: !2270, size: 64, offset: 256)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2478, file: !25, line: 316, baseType: !2270, size: 64, offset: 320)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2478, file: !25, line: 317, baseType: !2270, size: 64, offset: 384)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2478, file: !25, line: 318, baseType: !2342, size: 64, offset: 448)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2472, file: !25, line: 446, baseType: !613, size: 64, offset: 128)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2472, file: !25, line: 447, baseType: !2471, size: 64, offset: 192)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2468, file: !25, line: 224, baseType: !173, size: 32, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2468, file: !25, line: 226, baseType: !181, size: 128, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2468, file: !25, line: 227, baseType: !165, size: 64, offset: 256)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2468, file: !25, line: 228, baseType: !7, size: 32, offset: 320)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2468, file: !25, line: 229, baseType: !7, size: 32, offset: 352)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2468, file: !25, line: 230, baseType: !2306, size: 64, offset: 384)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2468, file: !25, line: 231, baseType: !2306, size: 64, offset: 448)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2468, file: !25, line: 232, baseType: !176, size: 64, offset: 512)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2460, file: !25, line: 523, baseType: !2499, size: 192, offset: 2240)
!2499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2476, size: 192, elements: !264)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !581, file: !31, line: 1458, baseType: !2501, size: 2112, offset: 4288)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !31, line: 1410, size: 2112, elements: !2502)
!2502 = !{!2503, !2504, !2505}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2501, file: !31, line: 1411, baseType: !173, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2501, file: !31, line: 1412, baseType: !1390, size: 128, offset: 64)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2501, file: !31, line: 1413, baseType: !2506, size: 1920, offset: 192)
!2506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2507, size: 1920, elements: !264)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2508, line: 12, size: 640, elements: !2509)
!2508 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2509 = !{!2510, !2518, !2520, !2525, !2526}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2507, file: !2508, line: 13, baseType: !2511, size: 320)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2512, line: 17, size: 320, elements: !2513)
!2512 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2513 = !{!2514, !2515, !2516, !2517}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2511, file: !2512, line: 18, baseType: !173, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2511, file: !2512, line: 19, baseType: !173, size: 32, offset: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2511, file: !2512, line: 20, baseType: !1390, size: 128, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2511, file: !2512, line: 22, baseType: !352, size: 128, align: 64, offset: 192)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2507, file: !2508, line: 14, baseType: !2519, size: 64, offset: 320)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2507, file: !2508, line: 15, baseType: !2521, size: 64, offset: 384)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2522, line: 16, size: 64, elements: !2523)
!2522 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2523 = !{!2524}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2521, file: !2522, line: 17, baseType: !1127, size: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2507, file: !2508, line: 16, baseType: !1390, size: 128, offset: 448)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2507, file: !2508, line: 17, baseType: !766, size: 32, offset: 576)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !581, file: !31, line: 1465, baseType: !176, size: 64, offset: 6400)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !581, file: !31, line: 1468, baseType: !174, size: 32, offset: 6464)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !581, file: !31, line: 1470, baseType: !521, size: 64, offset: 6528)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !581, file: !31, line: 1471, baseType: !521, size: 64, offset: 6592)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !581, file: !31, line: 1473, baseType: !175, size: 32, offset: 6656)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !581, file: !31, line: 1474, baseType: !2533, size: 64, offset: 6720)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !31, line: 603, flags: DIFlagFwdDecl)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !581, file: !31, line: 1477, baseType: !2536, size: 256, offset: 6784)
!2536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !2127)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !581, file: !31, line: 1478, baseType: !2538, size: 128, offset: 7040)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2539, line: 18, baseType: !2540)
!2539 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2539, line: 16, size: 128, elements: !2541)
!2541 = !{!2542}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2540, file: !2539, line: 17, baseType: !2543, size: 128)
!2543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1264, size: 128, elements: !1644)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !581, file: !31, line: 1480, baseType: !7, size: 32, offset: 7168)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !581, file: !31, line: 1481, baseType: !2546, size: 32, offset: 7200)
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !168, line: 150, baseType: !7)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !581, file: !31, line: 1487, baseType: !187, size: 192, offset: 7232)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !581, file: !31, line: 1493, baseType: !225, size: 64, offset: 7424)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !581, file: !31, line: 1495, baseType: !2550, size: 64, offset: 7488)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2552)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !367, line: 135, size: 1024, align: 512, elements: !2553)
!2553 = !{!2554, !2558, !2559, !2566, !2572, !2576, !2580, !2584, !2585, !2589, !2593, !2598, !2602}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2552, file: !367, line: 136, baseType: !2555, size: 64)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DISubroutineType(types: !2557)
!2557 = !{!173, !369, !7}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2552, file: !367, line: 137, baseType: !2555, size: 64, offset: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2552, file: !367, line: 138, baseType: !2560, size: 64, offset: 128)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!173, !2563, !2565}
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 64)
!2564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !370)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2552, file: !367, line: 139, baseType: !2567, size: 64, offset: 192)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{!173, !2563, !7, !225, !2570}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !393)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2552, file: !367, line: 141, baseType: !2573, size: 64, offset: 256)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = !DISubroutineType(types: !2575)
!2575 = !{!173, !2563}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2552, file: !367, line: 142, baseType: !2577, size: 64, offset: 320)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!173, !369}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2552, file: !367, line: 143, baseType: !2581, size: 64, offset: 384)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = !DISubroutineType(types: !2583)
!2583 = !{null, !369}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2552, file: !367, line: 144, baseType: !2581, size: 64, offset: 448)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2552, file: !367, line: 145, baseType: !2586, size: 64, offset: 512)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2587 = !DISubroutineType(types: !2588)
!2588 = !{null, !369, !412}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2552, file: !367, line: 146, baseType: !2590, size: 64, offset: 576)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = !DISubroutineType(types: !2592)
!2592 = !{!263, !369, !263, !173}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2552, file: !367, line: 147, baseType: !2594, size: 64, offset: 640)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!365, !2597}
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2552, file: !367, line: 148, baseType: !2599, size: 64, offset: 704)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64)
!2600 = !DISubroutineType(types: !2601)
!2601 = !{!173, !530, !473}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2552, file: !367, line: 149, baseType: !2603, size: 64, offset: 768)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{!369, !369, !2606}
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !413)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !581, file: !31, line: 1500, baseType: !173, size: 32, offset: 7552)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !581, file: !31, line: 1502, baseType: !2610, size: 448, offset: 7616)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2254, line: 60, size: 448, elements: !2611)
!2611 = !{!2612, !2617, !2618, !2619, !2620, !2621, !2622}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2610, file: !2254, line: 61, baseType: !2613, size: 64)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{!165, !2616, !2252}
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2610, file: !2254, line: 63, baseType: !2613, size: 64, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2610, file: !2254, line: 66, baseType: !105, size: 64, offset: 128)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2610, file: !2254, line: 67, baseType: !173, size: 32, offset: 192)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2610, file: !2254, line: 68, baseType: !7, size: 32, offset: 224)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2610, file: !2254, line: 71, baseType: !181, size: 128, offset: 256)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2610, file: !2254, line: 77, baseType: !2623, size: 64, offset: 384)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !581, file: !31, line: 1505, baseType: !191, size: 64, offset: 8064)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !581, file: !31, line: 1508, baseType: !191, size: 64, offset: 8128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !581, file: !31, line: 1511, baseType: !173, size: 32, offset: 8192)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !581, file: !31, line: 1514, baseType: !921, size: 32, offset: 8224)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !581, file: !31, line: 1517, baseType: !2629, size: 64, offset: 8256)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !104, line: 18, flags: DIFlagFwdDecl)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !581, file: !31, line: 1518, baseType: !618, size: 64, offset: 8320)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !581, file: !31, line: 1525, baseType: !1622, size: 64, offset: 8384)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !581, file: !31, line: 1532, baseType: !2634, size: 64, offset: 8448)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2635, line: 52, size: 64, elements: !2636)
!2635 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2636 = !{!2637}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2634, file: !2635, line: 53, baseType: !2638, size: 64)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2635, line: 40, size: 256, elements: !2640)
!2640 = !{!2641, !2642, !2647}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2639, file: !2635, line: 42, baseType: !201)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2639, file: !2635, line: 44, baseType: !2643, size: 192)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2635, line: 28, size: 192, elements: !2644)
!2644 = !{!2645, !2646}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2643, file: !2635, line: 29, baseType: !181, size: 128)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2643, file: !2635, line: 31, baseType: !105, size: 64, offset: 128)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2639, file: !2635, line: 49, baseType: !105, size: 64, offset: 192)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !581, file: !31, line: 1533, baseType: !2634, size: 64, offset: 8512)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !581, file: !31, line: 1534, baseType: !352, size: 128, align: 64, offset: 8576)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !581, file: !31, line: 1535, baseType: !1868, size: 256, offset: 8704)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !581, file: !31, line: 1537, baseType: !187, size: 192, offset: 8960)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !581, file: !31, line: 1542, baseType: !173, size: 32, offset: 9152)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !581, file: !31, line: 1545, baseType: !201, offset: 9184)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !581, file: !31, line: 1546, baseType: !181, size: 128, offset: 9216)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !581, file: !31, line: 1548, baseType: !201, offset: 9344)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !581, file: !31, line: 1549, baseType: !181, size: 128, offset: 9344)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !413, file: !31, line: 624, baseType: !753, size: 64, offset: 256)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !413, file: !31, line: 631, baseType: !165, size: 64, offset: 320)
!2659 = !DIDerivedType(tag: DW_TAG_member, scope: !413, file: !31, line: 639, baseType: !2660, size: 32, offset: 384)
!2660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !413, file: !31, line: 639, size: 32, elements: !2661)
!2661 = !{!2662, !2664}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2660, file: !31, line: 640, baseType: !2663, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2660, file: !31, line: 641, baseType: !7, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !413, file: !31, line: 643, baseType: !496, size: 32, offset: 416)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !413, file: !31, line: 644, baseType: !514, size: 64, offset: 448)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !413, file: !31, line: 645, baseType: !517, size: 128, offset: 512)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !413, file: !31, line: 646, baseType: !517, size: 128, offset: 640)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !413, file: !31, line: 647, baseType: !517, size: 128, offset: 768)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !413, file: !31, line: 648, baseType: !201, offset: 896)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !413, file: !31, line: 649, baseType: !304, size: 16, offset: 896)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !413, file: !31, line: 650, baseType: !1263, size: 8, offset: 912)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !413, file: !31, line: 651, baseType: !1263, size: 8, offset: 920)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !413, file: !31, line: 652, baseType: !2426, size: 64, offset: 960)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !413, file: !31, line: 659, baseType: !165, size: 64, offset: 1024)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !413, file: !31, line: 660, baseType: !786, size: 256, offset: 1088)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !413, file: !31, line: 662, baseType: !165, size: 64, offset: 1344)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !413, file: !31, line: 663, baseType: !165, size: 64, offset: 1408)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !413, file: !31, line: 665, baseType: !622, size: 128, offset: 1472)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !413, file: !31, line: 666, baseType: !181, size: 128, offset: 1600)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !413, file: !31, line: 675, baseType: !181, size: 128, offset: 1728)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !413, file: !31, line: 676, baseType: !181, size: 128, offset: 1856)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !413, file: !31, line: 677, baseType: !181, size: 128, offset: 1984)
!2684 = !DIDerivedType(tag: DW_TAG_member, scope: !413, file: !31, line: 678, baseType: !2685, size: 128, offset: 2112)
!2685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !413, file: !31, line: 678, size: 128, elements: !2686)
!2686 = !{!2687, !2688}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2685, file: !31, line: 679, baseType: !618, size: 64)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2685, file: !31, line: 680, baseType: !352, size: 128, align: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !413, file: !31, line: 682, baseType: !193, size: 64, offset: 2240)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !413, file: !31, line: 683, baseType: !193, size: 64, offset: 2304)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !413, file: !31, line: 684, baseType: !766, size: 32, offset: 2368)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !413, file: !31, line: 685, baseType: !766, size: 32, offset: 2400)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !413, file: !31, line: 686, baseType: !766, size: 32, offset: 2432)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !413, file: !31, line: 688, baseType: !766, size: 32, offset: 2464)
!2695 = !DIDerivedType(tag: DW_TAG_member, scope: !413, file: !31, line: 690, baseType: !2696, size: 64, offset: 2496)
!2696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !413, file: !31, line: 690, size: 64, elements: !2697)
!2697 = !{!2698, !2920}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2696, file: !31, line: 691, baseType: !2699, size: 64)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2701)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !31, line: 1822, size: 2048, elements: !2702)
!2702 = !{!2703, !2704, !2708, !2712, !2716, !2717, !2718, !2722, !2735, !2736, !2744, !2748, !2749, !2753, !2754, !2758, !2763, !2764, !2768, !2772, !2880, !2884, !2885, !2889, !2890, !2894, !2898, !2903, !2907, !2911, !2915, !2919}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2701, file: !31, line: 1823, baseType: !613, size: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2701, file: !31, line: 1824, baseType: !2705, size: 64, offset: 64)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{!514, !339, !514, !173}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2701, file: !31, line: 1825, baseType: !2709, size: 64, offset: 128)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{!294, !339, !263, !309, !715}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2701, file: !31, line: 1826, baseType: !2713, size: 64, offset: 192)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!294, !339, !225, !309, !715}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2701, file: !31, line: 1827, baseType: !856, size: 64, offset: 256)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2701, file: !31, line: 1828, baseType: !856, size: 64, offset: 320)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2701, file: !31, line: 1829, baseType: !2719, size: 64, offset: 384)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{!173, !859, !473}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2701, file: !31, line: 1830, baseType: !2723, size: 64, offset: 448)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!173, !339, !2726}
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !31, line: 1776, size: 128, elements: !2728)
!2728 = !{!2729, !2734}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2727, file: !31, line: 1777, baseType: !2730, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !31, line: 1773, baseType: !2731)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!173, !2726, !225, !173, !514, !404, !7}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2727, file: !31, line: 1778, baseType: !514, size: 64, offset: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2701, file: !31, line: 1831, baseType: !2723, size: 64, offset: 512)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2701, file: !31, line: 1832, baseType: !2737, size: 64, offset: 576)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DISubroutineType(types: !2739)
!2739 = !{!2740, !339, !2742}
!2740 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2741, line: 52, baseType: !7)
!2741 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !31, line: 56, flags: DIFlagFwdDecl)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2701, file: !31, line: 1833, baseType: !2745, size: 64, offset: 640)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{!105, !339, !7, !165}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2701, file: !31, line: 1834, baseType: !2745, size: 64, offset: 704)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2701, file: !31, line: 1835, baseType: !2750, size: 64, offset: 768)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!173, !339, !994}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2701, file: !31, line: 1836, baseType: !165, size: 64, offset: 832)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2701, file: !31, line: 1837, baseType: !2755, size: 64, offset: 896)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!173, !412, !339}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2701, file: !31, line: 1838, baseType: !2759, size: 64, offset: 960)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = !DISubroutineType(types: !2761)
!2761 = !{!173, !339, !2762}
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !31, line: 1007, baseType: !176)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2701, file: !31, line: 1839, baseType: !2755, size: 64, offset: 1024)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2701, file: !31, line: 1840, baseType: !2765, size: 64, offset: 1088)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DISubroutineType(types: !2767)
!2767 = !{!173, !339, !514, !514, !173}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2701, file: !31, line: 1841, baseType: !2769, size: 64, offset: 1152)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!173, !173, !339, !173}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2701, file: !31, line: 1842, baseType: !2773, size: 64, offset: 1216)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!173, !339, !173, !2776}
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !31, line: 1062, size: 1664, elements: !2778)
!2778 = !{!2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2810, !2811, !2812, !2825, !2856}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2777, file: !31, line: 1063, baseType: !2776, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2777, file: !31, line: 1064, baseType: !181, size: 128, offset: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2777, file: !31, line: 1065, baseType: !622, size: 128, offset: 192)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2777, file: !31, line: 1066, baseType: !181, size: 128, offset: 320)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2777, file: !31, line: 1069, baseType: !181, size: 128, offset: 448)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2777, file: !31, line: 1072, baseType: !2762, size: 64, offset: 576)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2777, file: !31, line: 1073, baseType: !7, size: 32, offset: 640)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2777, file: !31, line: 1074, baseType: !410, size: 8, offset: 672)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2777, file: !31, line: 1075, baseType: !7, size: 32, offset: 704)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2777, file: !31, line: 1076, baseType: !173, size: 32, offset: 736)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2777, file: !31, line: 1077, baseType: !1390, size: 128, offset: 768)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2777, file: !31, line: 1078, baseType: !339, size: 64, offset: 896)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2777, file: !31, line: 1079, baseType: !514, size: 64, offset: 960)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2777, file: !31, line: 1080, baseType: !514, size: 64, offset: 1024)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2777, file: !31, line: 1082, baseType: !2794, size: 64, offset: 1088)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !31, line: 1314, size: 320, elements: !2796)
!2796 = !{!2797, !2805, !2806, !2807, !2808, !2809}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2795, file: !31, line: 1315, baseType: !2798)
!2798 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2799, line: 20, baseType: !2800)
!2799 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2799, line: 11, elements: !2801)
!2801 = !{!2802}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2800, file: !2799, line: 12, baseType: !2803)
!2803 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !213, line: 33, baseType: !2804)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !213, line: 31, elements: !215)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2795, file: !31, line: 1316, baseType: !173, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2795, file: !31, line: 1317, baseType: !173, size: 32, offset: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2795, file: !31, line: 1318, baseType: !2794, size: 64, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2795, file: !31, line: 1319, baseType: !339, size: 64, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2795, file: !31, line: 1320, baseType: !352, size: 128, align: 64, offset: 192)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2777, file: !31, line: 1084, baseType: !165, size: 64, offset: 1152)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2777, file: !31, line: 1085, baseType: !165, size: 64, offset: 1216)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2777, file: !31, line: 1087, baseType: !2813, size: 64, offset: 1280)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2815)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !31, line: 1011, size: 128, elements: !2816)
!2816 = !{!2817, !2821}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2815, file: !31, line: 1012, baseType: !2818, size: 64)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DISubroutineType(types: !2820)
!2820 = !{null, !2776, !2776}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2815, file: !31, line: 1013, baseType: !2822, size: 64, offset: 64)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{null, !2776}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2777, file: !31, line: 1088, baseType: !2826, size: 64, offset: 1344)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2828)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !31, line: 1016, size: 512, elements: !2829)
!2829 = !{!2830, !2834, !2838, !2839, !2843, !2847, !2851, !2855}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2828, file: !31, line: 1017, baseType: !2831, size: 64)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{!2762, !2762}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2828, file: !31, line: 1018, baseType: !2835, size: 64, offset: 64)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DISubroutineType(types: !2837)
!2837 = !{null, !2762}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2828, file: !31, line: 1019, baseType: !2822, size: 64, offset: 128)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2828, file: !31, line: 1020, baseType: !2840, size: 64, offset: 192)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{!173, !2776, !173}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2828, file: !31, line: 1021, baseType: !2844, size: 64, offset: 256)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!473, !2776}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2828, file: !31, line: 1022, baseType: !2848, size: 64, offset: 320)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{!173, !2776, !173, !184}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2828, file: !31, line: 1023, baseType: !2852, size: 64, offset: 384)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{null, !2776, !833}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2828, file: !31, line: 1024, baseType: !2844, size: 64, offset: 448)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2777, file: !31, line: 1097, baseType: !2857, size: 256, offset: 1408)
!2857 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2777, file: !31, line: 1089, size: 256, elements: !2858)
!2858 = !{!2859, !2868, !2874}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2857, file: !31, line: 1090, baseType: !2860, size: 256)
!2860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2861, line: 10, size: 256, elements: !2862)
!2861 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2862 = !{!2863, !2864, !2867}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2860, file: !2861, line: 11, baseType: !174, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2860, file: !2861, line: 12, baseType: !2865, size: 64, offset: 64)
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 64)
!2866 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2861, line: 5, flags: DIFlagFwdDecl)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2860, file: !2861, line: 13, baseType: !181, size: 128, offset: 128)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2857, file: !31, line: 1091, baseType: !2869, size: 64)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2861, line: 17, size: 64, elements: !2870)
!2870 = !{!2871}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2869, file: !2861, line: 18, baseType: !2872, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2861, line: 16, flags: DIFlagFwdDecl)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2857, file: !31, line: 1096, baseType: !2875, size: 192)
!2875 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2857, file: !31, line: 1092, size: 192, elements: !2876)
!2876 = !{!2877, !2878, !2879}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2875, file: !31, line: 1093, baseType: !181, size: 128)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2875, file: !31, line: 1094, baseType: !173, size: 32, offset: 128)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2875, file: !31, line: 1095, baseType: !7, size: 32, offset: 160)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2701, file: !31, line: 1843, baseType: !2881, size: 64, offset: 1280)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{!294, !339, !740, !173, !309, !715, !173}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2701, file: !31, line: 1844, baseType: !1034, size: 64, offset: 1344)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2701, file: !31, line: 1845, baseType: !2886, size: 64, offset: 1408)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{!173, !173}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2701, file: !31, line: 1846, baseType: !2773, size: 64, offset: 1472)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2701, file: !31, line: 1847, baseType: !2891, size: 64, offset: 1536)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!294, !2008, !339, !715, !309, !7}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2701, file: !31, line: 1848, baseType: !2895, size: 64, offset: 1600)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!294, !339, !715, !2008, !309, !7}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2701, file: !31, line: 1849, baseType: !2899, size: 64, offset: 1664)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = !DISubroutineType(types: !2901)
!2901 = !{!173, !339, !105, !2902, !833}
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2701, file: !31, line: 1850, baseType: !2904, size: 64, offset: 1728)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = !DISubroutineType(types: !2906)
!2906 = !{!105, !339, !173, !514, !514}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2701, file: !31, line: 1852, baseType: !2908, size: 64, offset: 1792)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!2909 = !DISubroutineType(types: !2910)
!2910 = !{null, !694, !339}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2701, file: !31, line: 1856, baseType: !2912, size: 64, offset: 1856)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{!294, !339, !514, !339, !514, !309, !7}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2701, file: !31, line: 1858, baseType: !2916, size: 64, offset: 1920)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DISubroutineType(types: !2918)
!2918 = !{!514, !339, !514, !339, !514, !514, !7}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2701, file: !31, line: 1861, baseType: !2765, size: 64, offset: 1984)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2696, file: !31, line: 692, baseType: !647, size: 64)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !413, file: !31, line: 694, baseType: !2922, size: 64, offset: 2560)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !31, line: 1100, size: 384, elements: !2924)
!2924 = !{!2925, !2926, !2927, !2928}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2923, file: !31, line: 1101, baseType: !201)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2923, file: !31, line: 1102, baseType: !181, size: 128)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2923, file: !31, line: 1103, baseType: !181, size: 128, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2923, file: !31, line: 1104, baseType: !181, size: 128, offset: 256)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !413, file: !31, line: 695, baseType: !754, size: 1216, align: 64, offset: 2624)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !413, file: !31, line: 696, baseType: !181, size: 128, offset: 3840)
!2931 = !DIDerivedType(tag: DW_TAG_member, scope: !413, file: !31, line: 697, baseType: !2932, size: 64, offset: 3968)
!2932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !413, file: !31, line: 697, size: 64, elements: !2933)
!2933 = !{!2934, !2935, !2936, !2939, !2940}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2932, file: !31, line: 698, baseType: !2008, size: 64)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2932, file: !31, line: 699, baseType: !2451, size: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2932, file: !31, line: 700, baseType: !2937, size: 64)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !31, line: 700, flags: DIFlagFwdDecl)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2932, file: !31, line: 701, baseType: !263, size: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2932, file: !31, line: 702, baseType: !7, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !413, file: !31, line: 705, baseType: !175, size: 32, offset: 4032)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !413, file: !31, line: 708, baseType: !175, size: 32, offset: 4064)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !413, file: !31, line: 709, baseType: !2533, size: 64, offset: 4096)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !413, file: !31, line: 720, baseType: !176, size: 64, offset: 4160)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !370, file: !367, line: 98, baseType: !2946, size: 256, offset: 448)
!2946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 256, elements: !2127)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !370, file: !367, line: 101, baseType: !2948, size: 32, offset: 704)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !2949, line: 25, size: 32, elements: !2950)
!2949 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!2950 = !{!2951}
!2951 = !DIDerivedType(tag: DW_TAG_member, scope: !2948, file: !2949, line: 26, baseType: !2952, size: 32)
!2952 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2948, file: !2949, line: 26, size: 32, elements: !2953)
!2953 = !{!2954}
!2954 = !DIDerivedType(tag: DW_TAG_member, scope: !2952, file: !2949, line: 30, baseType: !2955, size: 32)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2952, file: !2949, line: 30, size: 32, elements: !2956)
!2956 = !{!2957, !2958}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2955, file: !2949, line: 31, baseType: !201)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2955, file: !2949, line: 32, baseType: !173, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !370, file: !367, line: 102, baseType: !2550, size: 64, offset: 768)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !370, file: !367, line: 103, baseType: !580, size: 64, offset: 832)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !370, file: !367, line: 104, baseType: !165, size: 64, offset: 896)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !370, file: !367, line: 105, baseType: !176, size: 64, offset: 960)
!2963 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 107, baseType: !2964, size: 128, offset: 1024)
!2964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 107, size: 128, elements: !2965)
!2965 = !{!2966, !2967}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !2964, file: !367, line: 108, baseType: !181, size: 128)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !2964, file: !367, line: 109, baseType: !2968, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !370, file: !367, line: 111, baseType: !181, size: 128, offset: 1152)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !370, file: !367, line: 112, baseType: !181, size: 128, offset: 1280)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !370, file: !367, line: 120, baseType: !2972, size: 128, offset: 1408)
!2972 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 116, size: 128, elements: !2973)
!2973 = !{!2974, !2975, !2976}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !2972, file: !367, line: 117, baseType: !622, size: 128)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !2972, file: !367, line: 118, baseType: !384, size: 128)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !2972, file: !367, line: 119, baseType: !352, size: 128, align: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !340, file: !31, line: 922, baseType: !412, size: 64, offset: 256)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !340, file: !31, line: 923, baseType: !2699, size: 64, offset: 320)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !340, file: !31, line: 929, baseType: !201, offset: 384)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !340, file: !31, line: 930, baseType: !30, size: 32, offset: 384)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !340, file: !31, line: 931, baseType: !191, size: 64, offset: 448)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !340, file: !31, line: 932, baseType: !7, size: 32, offset: 512)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !340, file: !31, line: 933, baseType: !2546, size: 32, offset: 544)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !340, file: !31, line: 934, baseType: !187, size: 192, offset: 576)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !340, file: !31, line: 935, baseType: !514, size: 64, offset: 768)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !340, file: !31, line: 936, baseType: !2987, size: 192, offset: 832)
!2987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !31, line: 885, size: 192, elements: !2988)
!2988 = !{!2989, !2990, !2991, !2992, !2993, !2994}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2987, file: !31, line: 886, baseType: !2798)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2987, file: !31, line: 887, baseType: !1380, size: 64)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !2987, file: !31, line: 888, baseType: !39, size: 32, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2987, file: !31, line: 889, baseType: !418, size: 32, offset: 96)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2987, file: !31, line: 889, baseType: !418, size: 32, offset: 128)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !2987, file: !31, line: 890, baseType: !173, size: 32, offset: 160)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !340, file: !31, line: 937, baseType: !1456, size: 64, offset: 1024)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !340, file: !31, line: 938, baseType: !2997, size: 256, offset: 1088)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !31, line: 896, size: 256, elements: !2998)
!2998 = !{!2999, !3000, !3001, !3002, !3003, !3004}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2997, file: !31, line: 897, baseType: !165, size: 64)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2997, file: !31, line: 898, baseType: !7, size: 32, offset: 64)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !2997, file: !31, line: 899, baseType: !7, size: 32, offset: 96)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2997, file: !31, line: 902, baseType: !7, size: 32, offset: 128)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !2997, file: !31, line: 903, baseType: !7, size: 32, offset: 160)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !2997, file: !31, line: 904, baseType: !514, size: 64, offset: 192)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !340, file: !31, line: 940, baseType: !404, size: 64, offset: 1344)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !340, file: !31, line: 945, baseType: !176, size: 64, offset: 1408)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !340, file: !31, line: 949, baseType: !181, size: 128, offset: 1472)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !340, file: !31, line: 950, baseType: !181, size: 128, offset: 1600)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !340, file: !31, line: 952, baseType: !753, size: 64, offset: 1728)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !340, file: !31, line: 953, baseType: !921, size: 32, offset: 1792)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !340, file: !31, line: 954, baseType: !921, size: 32, offset: 1824)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !330, file: !288, line: 174, baseType: !336, size: 64, offset: 320)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !330, file: !288, line: 176, baseType: !3014, size: 64, offset: 384)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!173, !339, !230, !329, !994}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !318, file: !288, line: 90, baseType: !313, size: 64, offset: 192)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !318, file: !288, line: 91, baseType: !3019, size: 64, offset: 256)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !278, file: !222, line: 143, baseType: !3021, size: 64, offset: 256)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!3024, !230}
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3026)
!3026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !48, line: 39, size: 384, elements: !3027)
!3027 = !{!3028, !3029, !3033, !3037, !3045, !3049}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3026, file: !48, line: 40, baseType: !47, size: 32)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3026, file: !48, line: 41, baseType: !3030, size: 64, offset: 64)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = !DISubroutineType(types: !3032)
!3032 = !{!473}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3026, file: !48, line: 42, baseType: !3034, size: 64, offset: 128)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3035 = !DISubroutineType(types: !3036)
!3036 = !{!176}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3026, file: !48, line: 43, baseType: !3038, size: 64, offset: 192)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!3041, !3043}
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !48, line: 19, flags: DIFlagFwdDecl)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3026, file: !48, line: 44, baseType: !3046, size: 64, offset: 256)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = !DISubroutineType(types: !3048)
!3048 = !{!3041}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3026, file: !48, line: 45, baseType: !451, size: 64, offset: 320)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !278, file: !222, line: 144, baseType: !3051, size: 64, offset: 320)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DISubroutineType(types: !3053)
!3053 = !{!3041, !230}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !278, file: !222, line: 145, baseType: !3055, size: 64, offset: 384)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 64)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{null, !230, !3058, !3059}
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !221, file: !222, line: 70, baseType: !3061, size: 64, offset: 384)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !3063, line: 123, size: 1024, elements: !3064)
!3063 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!3064 = !{!3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3181, !3182, !3183, !3184, !3185}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3062, file: !3063, line: 124, baseType: !766, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3062, file: !3063, line: 125, baseType: !766, size: 32, offset: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3062, file: !3063, line: 135, baseType: !3061, size: 64, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3062, file: !3063, line: 136, baseType: !225, size: 64, offset: 128)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3062, file: !3063, line: 138, baseType: !779, size: 192, align: 64, offset: 192)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3062, file: !3063, line: 140, baseType: !3041, size: 64, offset: 384)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3062, file: !3063, line: 141, baseType: !7, size: 32, offset: 448)
!3072 = !DIDerivedType(tag: DW_TAG_member, scope: !3062, file: !3063, line: 142, baseType: !3073, size: 256, offset: 512)
!3073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3062, file: !3063, line: 142, size: 256, elements: !3074)
!3074 = !{!3075, !3121, !3125}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3073, file: !3063, line: 143, baseType: !3076, size: 192)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !3063, line: 91, size: 192, elements: !3077)
!3077 = !{!3078, !3079, !3080}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3076, file: !3063, line: 92, baseType: !165, size: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3076, file: !3063, line: 94, baseType: !775, size: 64, offset: 64)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3076, file: !3063, line: 100, baseType: !3081, size: 64, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !3063, line: 180, size: 704, elements: !3083)
!3083 = !{!3084, !3085, !3086, !3093, !3094, !3095, !3119, !3120}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3082, file: !3063, line: 182, baseType: !3061, size: 64)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3082, file: !3063, line: 183, baseType: !7, size: 32, offset: 64)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3082, file: !3063, line: 186, baseType: !3087, size: 192, offset: 128)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3088, line: 19, size: 192, elements: !3089)
!3088 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3089 = !{!3090, !3091, !3092}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3087, file: !3088, line: 20, baseType: !758, size: 128)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3087, file: !3088, line: 21, baseType: !7, size: 32, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3087, file: !3088, line: 22, baseType: !7, size: 32, offset: 160)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3082, file: !3063, line: 187, baseType: !174, size: 32, offset: 320)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3082, file: !3063, line: 188, baseType: !174, size: 32, offset: 352)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3082, file: !3063, line: 189, baseType: !3096, size: 64, offset: 384)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !3063, line: 168, size: 320, elements: !3098)
!3098 = !{!3099, !3103, !3107, !3111, !3115}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3097, file: !3063, line: 169, baseType: !3100, size: 64)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DISubroutineType(types: !3102)
!3102 = !{!173, !694, !3081}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3097, file: !3063, line: 171, baseType: !3104, size: 64, offset: 64)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3105 = !DISubroutineType(types: !3106)
!3106 = !{!173, !3061, !225, !303}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3097, file: !3063, line: 173, baseType: !3108, size: 64, offset: 128)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 64)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{!173, !3061}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3097, file: !3063, line: 174, baseType: !3112, size: 64, offset: 192)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 64)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{!173, !3061, !3061, !225}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3097, file: !3063, line: 176, baseType: !3116, size: 64, offset: 256)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!173, !694, !3061, !3081}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3082, file: !3063, line: 192, baseType: !181, size: 128, offset: 448)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3082, file: !3063, line: 194, baseType: !1390, size: 128, offset: 576)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3073, file: !3063, line: 144, baseType: !3122, size: 64)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !3063, line: 103, size: 64, elements: !3123)
!3123 = !{!3124}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3122, file: !3063, line: 104, baseType: !3061, size: 64)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3073, file: !3063, line: 145, baseType: !3126, size: 256)
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !3063, line: 107, size: 256, elements: !3127)
!3127 = !{!3128, !3176, !3179, !3180}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3126, file: !3063, line: 108, baseType: !3129, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3131)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !3063, line: 217, size: 768, elements: !3132)
!3132 = !{!3133, !3153, !3157, !3158, !3159, !3160, !3161, !3165, !3166, !3167, !3168, !3172}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3131, file: !3063, line: 222, baseType: !3134, size: 64)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{!173, !3137}
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !3063, line: 197, size: 1088, elements: !3139)
!3139 = !{!3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3138, file: !3063, line: 199, baseType: !3061, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3138, file: !3063, line: 200, baseType: !339, size: 64, offset: 64)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3138, file: !3063, line: 201, baseType: !694, size: 64, offset: 128)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3138, file: !3063, line: 202, baseType: !176, size: 64, offset: 192)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3138, file: !3063, line: 205, baseType: !187, size: 192, offset: 256)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3138, file: !3063, line: 206, baseType: !187, size: 192, offset: 448)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3138, file: !3063, line: 207, baseType: !173, size: 32, offset: 640)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3138, file: !3063, line: 208, baseType: !181, size: 128, offset: 704)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3138, file: !3063, line: 209, baseType: !263, size: 64, offset: 832)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3138, file: !3063, line: 211, baseType: !309, size: 64, offset: 896)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3138, file: !3063, line: 212, baseType: !473, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3138, file: !3063, line: 213, baseType: !473, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3138, file: !3063, line: 214, baseType: !1022, size: 64, offset: 1024)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3131, file: !3063, line: 223, baseType: !3154, size: 64, offset: 64)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{null, !3137}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3131, file: !3063, line: 236, baseType: !725, size: 64, offset: 128)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3131, file: !3063, line: 238, baseType: !712, size: 64, offset: 192)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3131, file: !3063, line: 239, baseType: !721, size: 64, offset: 256)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3131, file: !3063, line: 240, baseType: !717, size: 64, offset: 320)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3131, file: !3063, line: 242, baseType: !3162, size: 64, offset: 384)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!294, !3137, !263, !309, !514}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3131, file: !3063, line: 252, baseType: !309, size: 64, offset: 448)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3131, file: !3063, line: 259, baseType: !473, size: 8, offset: 512)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3131, file: !3063, line: 260, baseType: !3162, size: 64, offset: 576)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3131, file: !3063, line: 263, baseType: !3169, size: 64, offset: 640)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!2740, !3137, !2742}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3131, file: !3063, line: 266, baseType: !3173, size: 64, offset: 704)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{!173, !3137, !994}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3126, file: !3063, line: 109, baseType: !3177, size: 64, offset: 64)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !3063, line: 31, flags: DIFlagFwdDecl)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3126, file: !3063, line: 110, baseType: !514, size: 64, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3126, file: !3063, line: 111, baseType: !3061, size: 64, offset: 192)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3062, file: !3063, line: 148, baseType: !176, size: 64, offset: 768)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3062, file: !3063, line: 154, baseType: !404, size: 64, offset: 832)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3062, file: !3063, line: 156, baseType: !304, size: 16, offset: 896)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3062, file: !3063, line: 157, baseType: !303, size: 16, offset: 912)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3062, file: !3063, line: 158, baseType: !3186, size: 64, offset: 960)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !3063, line: 32, flags: DIFlagFwdDecl)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !221, file: !222, line: 71, baseType: !3189, size: 32, offset: 448)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3190, line: 19, size: 32, elements: !3191)
!3190 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3191 = !{!3192}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3189, file: !3190, line: 20, baseType: !1141, size: 32)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !221, file: !222, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !221, file: !222, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !221, file: !222, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !221, file: !222, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !221, file: !222, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !218, file: !60, line: 463, baseType: !3199, size: 64, offset: 512)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !218, file: !60, line: 465, baseType: !3201, size: 64, offset: 576)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !60, line: 36, flags: DIFlagFwdDecl)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !218, file: !60, line: 467, baseType: !225, size: 64, offset: 640)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !218, file: !60, line: 468, baseType: !3205, size: 64, offset: 704)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3207)
!3207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !60, line: 87, size: 384, elements: !3208)
!3208 = !{!3209, !3210, !3211, !3215, !3220, !3224}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3207, file: !60, line: 88, baseType: !225, size: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3207, file: !60, line: 89, baseType: !315, size: 64, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3207, file: !60, line: 90, baseType: !3212, size: 64, offset: 128)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DISubroutineType(types: !3214)
!3214 = !{!173, !3199, !258}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3207, file: !60, line: 91, baseType: !3216, size: 64, offset: 192)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 64)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{!263, !3199, !3219, !3058, !3059}
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3207, file: !60, line: 93, baseType: !3221, size: 64, offset: 256)
!3221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3222, size: 64)
!3222 = !DISubroutineType(types: !3223)
!3223 = !{null, !3199}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3207, file: !60, line: 95, baseType: !3225, size: 64, offset: 320)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3227)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !67, line: 278, size: 1472, elements: !3228)
!3228 = !{!3229, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3227, file: !67, line: 279, baseType: !3230, size: 64)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{!173, !3199}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3227, file: !67, line: 280, baseType: !3221, size: 64, offset: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3227, file: !67, line: 281, baseType: !3230, size: 64, offset: 128)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3227, file: !67, line: 282, baseType: !3230, size: 64, offset: 192)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3227, file: !67, line: 283, baseType: !3230, size: 64, offset: 256)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3227, file: !67, line: 284, baseType: !3230, size: 64, offset: 320)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3227, file: !67, line: 285, baseType: !3230, size: 64, offset: 384)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3227, file: !67, line: 286, baseType: !3230, size: 64, offset: 448)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3227, file: !67, line: 287, baseType: !3230, size: 64, offset: 512)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3227, file: !67, line: 288, baseType: !3230, size: 64, offset: 576)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3227, file: !67, line: 289, baseType: !3230, size: 64, offset: 640)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3227, file: !67, line: 290, baseType: !3230, size: 64, offset: 704)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3227, file: !67, line: 291, baseType: !3230, size: 64, offset: 768)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3227, file: !67, line: 292, baseType: !3230, size: 64, offset: 832)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3227, file: !67, line: 293, baseType: !3230, size: 64, offset: 896)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3227, file: !67, line: 294, baseType: !3230, size: 64, offset: 960)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3227, file: !67, line: 295, baseType: !3230, size: 64, offset: 1024)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3227, file: !67, line: 296, baseType: !3230, size: 64, offset: 1088)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3227, file: !67, line: 297, baseType: !3230, size: 64, offset: 1152)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3227, file: !67, line: 298, baseType: !3230, size: 64, offset: 1216)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3227, file: !67, line: 299, baseType: !3230, size: 64, offset: 1280)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3227, file: !67, line: 300, baseType: !3230, size: 64, offset: 1344)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3227, file: !67, line: 301, baseType: !3230, size: 64, offset: 1408)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !218, file: !60, line: 470, baseType: !3256, size: 64, offset: 768)
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 64)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3258, line: 82, size: 1408, elements: !3259)
!3258 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3259 = !{!3260, !3261, !3262, !3263, !3264, !3265, !3266, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3341, !3344, !3345}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3257, file: !3258, line: 83, baseType: !225, size: 64)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3257, file: !3258, line: 84, baseType: !225, size: 64, offset: 64)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3257, file: !3258, line: 85, baseType: !3199, size: 64, offset: 128)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3257, file: !3258, line: 86, baseType: !315, size: 64, offset: 192)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3257, file: !3258, line: 87, baseType: !315, size: 64, offset: 256)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3257, file: !3258, line: 88, baseType: !315, size: 64, offset: 320)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3257, file: !3258, line: 90, baseType: !3267, size: 64, offset: 384)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 64)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{!173, !3199, !3270}
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !54, line: 95, size: 1152, elements: !3272)
!3272 = !{!3273, !3274, !3275, !3276, !3277, !3278, !3279, !3292, !3305, !3306, !3307, !3308, !3309, !3317, !3318, !3319, !3320, !3321, !3322}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3271, file: !54, line: 96, baseType: !225, size: 64)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3271, file: !54, line: 97, baseType: !3256, size: 64, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3271, file: !54, line: 99, baseType: !613, size: 64, offset: 128)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3271, file: !54, line: 100, baseType: !225, size: 64, offset: 192)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3271, file: !54, line: 102, baseType: !473, size: 8, offset: 256)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3271, file: !54, line: 103, baseType: !53, size: 32, offset: 288)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3271, file: !54, line: 105, baseType: !3280, size: 64, offset: 320)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3282)
!3282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3283, line: 262, size: 1600, elements: !3284)
!3283 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3284 = !{!3285, !3286, !3287, !3291}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3282, file: !3283, line: 263, baseType: !2536, size: 256)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3282, file: !3283, line: 264, baseType: !2536, size: 256, offset: 256)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3282, file: !3283, line: 265, baseType: !3288, size: 1024, offset: 512)
!3288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 1024, elements: !3289)
!3289 = !{!3290}
!3290 = !DISubrange(count: 128)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3282, file: !3283, line: 266, baseType: !3041, size: 64, offset: 1536)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3271, file: !54, line: 106, baseType: !3293, size: 64, offset: 384)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3295)
!3295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3283, line: 210, size: 256, elements: !3296)
!3296 = !{!3297, !3301, !3303, !3304}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3295, file: !3283, line: 211, baseType: !3298, size: 72)
!3298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1264, size: 72, elements: !3299)
!3299 = !{!3300}
!3300 = !DISubrange(count: 9)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3295, file: !3283, line: 212, baseType: !3302, size: 64, offset: 128)
!3302 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3283, line: 14, baseType: !165)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3295, file: !3283, line: 213, baseType: !175, size: 32, offset: 192)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3295, file: !3283, line: 214, baseType: !175, size: 32, offset: 224)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3271, file: !54, line: 108, baseType: !3230, size: 64, offset: 448)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3271, file: !54, line: 109, baseType: !3221, size: 64, offset: 512)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3271, file: !54, line: 110, baseType: !3230, size: 64, offset: 576)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3271, file: !54, line: 111, baseType: !3221, size: 64, offset: 640)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3271, file: !54, line: 112, baseType: !3310, size: 64, offset: 704)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{!173, !3199, !3313}
!3313 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !67, line: 52, baseType: !3314)
!3314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !67, line: 50, size: 32, elements: !3315)
!3315 = !{!3316}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3314, file: !67, line: 51, baseType: !173, size: 32)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3271, file: !54, line: 113, baseType: !3230, size: 64, offset: 768)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3271, file: !54, line: 114, baseType: !315, size: 64, offset: 832)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3271, file: !54, line: 115, baseType: !315, size: 64, offset: 896)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3271, file: !54, line: 117, baseType: !3225, size: 64, offset: 960)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3271, file: !54, line: 118, baseType: !3221, size: 64, offset: 1024)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3271, file: !54, line: 120, baseType: !3323, size: 64, offset: 1088)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !54, line: 120, flags: DIFlagFwdDecl)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3257, file: !3258, line: 91, baseType: !3212, size: 64, offset: 448)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3257, file: !3258, line: 92, baseType: !3230, size: 64, offset: 512)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3257, file: !3258, line: 93, baseType: !3221, size: 64, offset: 576)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3257, file: !3258, line: 94, baseType: !3230, size: 64, offset: 640)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3257, file: !3258, line: 95, baseType: !3221, size: 64, offset: 704)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3257, file: !3258, line: 97, baseType: !3230, size: 64, offset: 768)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3257, file: !3258, line: 98, baseType: !3230, size: 64, offset: 832)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3257, file: !3258, line: 100, baseType: !3310, size: 64, offset: 896)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3257, file: !3258, line: 101, baseType: !3230, size: 64, offset: 960)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3257, file: !3258, line: 103, baseType: !3230, size: 64, offset: 1024)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3257, file: !3258, line: 105, baseType: !3230, size: 64, offset: 1088)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3257, file: !3258, line: 107, baseType: !3225, size: 64, offset: 1152)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3257, file: !3258, line: 109, baseType: !3338, size: 64, offset: 1216)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3340)
!3340 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3258, line: 109, flags: DIFlagFwdDecl)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3257, file: !3258, line: 111, baseType: !3342, size: 64, offset: 1280)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3258, line: 111, flags: DIFlagFwdDecl)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3257, file: !3258, line: 112, baseType: !628, offset: 1344)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3257, file: !3258, line: 114, baseType: !473, size: 8, offset: 1344)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !218, file: !60, line: 471, baseType: !3270, size: 64, offset: 832)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !218, file: !60, line: 473, baseType: !176, size: 64, offset: 896)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !218, file: !60, line: 475, baseType: !176, size: 64, offset: 960)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !218, file: !60, line: 480, baseType: !187, size: 192, offset: 1024)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !218, file: !60, line: 484, baseType: !3351, size: 576, offset: 1216)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !60, line: 361, size: 576, elements: !3352)
!3352 = !{!3353, !3354, !3355, !3356, !3357, !3358}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3351, file: !60, line: 362, baseType: !181, size: 128)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3351, file: !60, line: 363, baseType: !181, size: 128, offset: 128)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3351, file: !60, line: 364, baseType: !181, size: 128, offset: 256)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3351, file: !60, line: 365, baseType: !181, size: 128, offset: 384)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3351, file: !60, line: 366, baseType: !473, size: 8, offset: 512)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3351, file: !60, line: 367, baseType: !59, size: 32, offset: 544)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !218, file: !60, line: 485, baseType: !3360, size: 2304, offset: 1792)
!3360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !67, line: 565, size: 2304, elements: !3361)
!3361 = !{!3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3457, !3461}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3360, file: !67, line: 566, baseType: !3313, size: 32)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3360, file: !67, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3360, file: !67, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3360, file: !67, line: 569, baseType: !473, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3360, file: !67, line: 570, baseType: !473, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3360, file: !67, line: 571, baseType: !473, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3360, file: !67, line: 572, baseType: !473, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3360, file: !67, line: 573, baseType: !473, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3360, file: !67, line: 574, baseType: !473, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3360, file: !67, line: 575, baseType: !473, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3360, file: !67, line: 576, baseType: !473, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3360, file: !67, line: 577, baseType: !174, size: 32, offset: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3360, file: !67, line: 578, baseType: !201, offset: 96)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3360, file: !67, line: 580, baseType: !181, size: 128, offset: 128)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3360, file: !67, line: 581, baseType: !1411, size: 192, offset: 256)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3360, file: !67, line: 582, baseType: !3378, size: 64, offset: 448)
!3378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3379, size: 64)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3380, line: 43, size: 1472, elements: !3381)
!3380 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3381 = !{!3382, !3383, !3384, !3385, !3386, !3389, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414}
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3379, file: !3380, line: 44, baseType: !225, size: 64)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3379, file: !3380, line: 45, baseType: !173, size: 32, offset: 64)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3379, file: !3380, line: 46, baseType: !181, size: 128, offset: 128)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3379, file: !3380, line: 47, baseType: !201, offset: 256)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3379, file: !3380, line: 48, baseType: !3387, size: 64, offset: 256)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !67, line: 533, flags: DIFlagFwdDecl)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3379, file: !3380, line: 49, baseType: !3390, size: 320, offset: 320)
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3391, line: 11, size: 320, elements: !3392)
!3391 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3392 = !{!3393, !3394, !3395, !3400}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3390, file: !3391, line: 16, baseType: !622, size: 128)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3390, file: !3391, line: 17, baseType: !165, size: 64, offset: 128)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3390, file: !3391, line: 18, baseType: !3396, size: 64, offset: 192)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{null, !3399}
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3390, file: !3391, line: 19, baseType: !174, size: 32, offset: 256)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3379, file: !3380, line: 50, baseType: !165, size: 64, offset: 640)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3379, file: !3380, line: 51, baseType: !1211, size: 64, offset: 704)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3379, file: !3380, line: 52, baseType: !1211, size: 64, offset: 768)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3379, file: !3380, line: 53, baseType: !1211, size: 64, offset: 832)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3379, file: !3380, line: 54, baseType: !1211, size: 64, offset: 896)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3379, file: !3380, line: 55, baseType: !1211, size: 64, offset: 960)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3379, file: !3380, line: 56, baseType: !165, size: 64, offset: 1024)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3379, file: !3380, line: 57, baseType: !165, size: 64, offset: 1088)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3379, file: !3380, line: 58, baseType: !165, size: 64, offset: 1152)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3379, file: !3380, line: 59, baseType: !165, size: 64, offset: 1216)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3379, file: !3380, line: 60, baseType: !165, size: 64, offset: 1280)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3379, file: !3380, line: 61, baseType: !3199, size: 64, offset: 1344)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3379, file: !3380, line: 62, baseType: !473, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3379, file: !3380, line: 63, baseType: !473, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3360, file: !67, line: 583, baseType: !473, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3360, file: !67, line: 584, baseType: !473, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3360, file: !67, line: 585, baseType: !473, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3360, file: !67, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3360, file: !67, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3360, file: !67, line: 592, baseType: !1203, size: 512, offset: 576)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3360, file: !67, line: 593, baseType: !404, size: 64, offset: 1088)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3360, file: !67, line: 594, baseType: !1868, size: 256, offset: 1152)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3360, file: !67, line: 595, baseType: !1390, size: 128, offset: 1408)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3360, file: !67, line: 596, baseType: !3387, size: 64, offset: 1536)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3360, file: !67, line: 597, baseType: !766, size: 32, offset: 1600)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3360, file: !67, line: 598, baseType: !766, size: 32, offset: 1632)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3360, file: !67, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3360, file: !67, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3360, file: !67, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3360, file: !67, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3360, file: !67, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3360, file: !67, line: 604, baseType: !473, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3360, file: !67, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3360, file: !67, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3360, file: !67, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3360, file: !67, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3360, file: !67, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3360, file: !67, line: 610, baseType: !7, size: 32, offset: 1696)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3360, file: !67, line: 611, baseType: !66, size: 32, offset: 1728)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3360, file: !67, line: 612, baseType: !74, size: 32, offset: 1760)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3360, file: !67, line: 613, baseType: !173, size: 32, offset: 1792)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3360, file: !67, line: 614, baseType: !173, size: 32, offset: 1824)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3360, file: !67, line: 615, baseType: !404, size: 64, offset: 1856)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3360, file: !67, line: 616, baseType: !404, size: 64, offset: 1920)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3360, file: !67, line: 617, baseType: !404, size: 64, offset: 1984)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3360, file: !67, line: 618, baseType: !404, size: 64, offset: 2048)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3360, file: !67, line: 620, baseType: !3448, size: 64, offset: 2112)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !67, line: 536, size: 256, elements: !3450)
!3450 = !{!3451, !3452, !3453, !3454}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3449, file: !67, line: 537, baseType: !201)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3449, file: !67, line: 538, baseType: !7, size: 32)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3449, file: !67, line: 540, baseType: !181, size: 128, offset: 64)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3449, file: !67, line: 543, baseType: !3455, size: 64, offset: 192)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !67, line: 534, flags: DIFlagFwdDecl)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3360, file: !67, line: 621, baseType: !3458, size: 64, offset: 2176)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = !DISubroutineType(types: !3460)
!3460 = !{null, !3199, !169}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3360, file: !67, line: 622, baseType: !3462, size: 64, offset: 2240)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !81, line: 117, size: 2304, elements: !3464)
!3464 = !{!3465, !3494, !3495, !3502, !3507, !3534, !3535}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "resume_latency", scope: !3463, file: !81, line: 118, baseType: !3466, size: 320)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_constraints", file: !81, line: 52, size: 320, elements: !3467)
!3467 = !{!3468, !3473, !3474, !3475, !3476, !3477}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3466, file: !81, line: 53, baseType: !3469, size: 128)
!3469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_head", file: !3470, line: 79, size: 128, elements: !3471)
!3470 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!3471 = !{!3472}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !3469, file: !3470, line: 80, baseType: !181, size: 128)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "target_value", scope: !3466, file: !81, line: 54, baseType: !169, size: 32, offset: 128)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !3466, file: !81, line: 55, baseType: !169, size: 32, offset: 160)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "no_constraint_value", scope: !3466, file: !81, line: 56, baseType: !169, size: 32, offset: 192)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3466, file: !81, line: 57, baseType: !80, size: 32, offset: 224)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "notifiers", scope: !3466, file: !81, line: 58, baseType: !3478, size: 64, offset: 256)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3480, line: 65, size: 320, elements: !3481)
!3480 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3481 = !{!3482, !3483}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3479, file: !3480, line: 66, baseType: !786, size: 256)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3479, file: !3480, line: 67, baseType: !3484, size: 64, offset: 256)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3480, line: 54, size: 192, elements: !3486)
!3486 = !{!3487, !3492, !3493}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3485, file: !3480, line: 55, baseType: !3488, size: 64)
!3488 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3480, line: 51, baseType: !3489)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{!173, !3484, !165, !176}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3485, file: !3480, line: 56, baseType: !3484, size: 64, offset: 64)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3485, file: !3480, line: 57, baseType: !173, size: 32, offset: 128)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "latency_tolerance", scope: !3463, file: !81, line: 119, baseType: !3466, size: 320, offset: 320)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !3463, file: !81, line: 120, baseType: !3496, size: 1280, offset: 640)
!3496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "freq_constraints", file: !81, line: 85, size: 1280, elements: !3497)
!3497 = !{!3498, !3499, !3500, !3501}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "min_freq", scope: !3496, file: !81, line: 86, baseType: !3466, size: 320)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "min_freq_notifiers", scope: !3496, file: !81, line: 87, baseType: !3479, size: 320, offset: 320)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "max_freq", scope: !3496, file: !81, line: 88, baseType: !3466, size: 320, offset: 640)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "max_freq_notifiers", scope: !3496, file: !81, line: 89, baseType: !3479, size: 320, offset: 960)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3463, file: !81, line: 121, baseType: !3503, size: 192, offset: 1920)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_flags", file: !81, line: 71, size: 192, elements: !3504)
!3504 = !{!3505, !3506}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3503, file: !81, line: 72, baseType: !181, size: 128)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "effective_flags", scope: !3503, file: !81, line: 73, baseType: !169, size: 32, offset: 128)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "resume_latency_req", scope: !3463, file: !81, line: 122, baseType: !3508, size: 64, offset: 2112)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos_request", file: !81, line: 107, size: 576, elements: !3510)
!3510 = !{!3511, !3512, !3533}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3509, file: !81, line: 108, baseType: !86, size: 32)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3509, file: !81, line: 113, baseType: !3513, size: 448, offset: 64)
!3513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3509, file: !81, line: 109, size: 448, elements: !3514)
!3514 = !{!3515, !3521, !3526}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "pnode", scope: !3513, file: !81, line: 110, baseType: !3516, size: 320)
!3516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !3470, line: 83, size: 320, elements: !3517)
!3517 = !{!3518, !3519, !3520}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3516, file: !3470, line: 84, baseType: !173, size: 32)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !3516, file: !3470, line: 85, baseType: !181, size: 128, offset: 64)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !3516, file: !3470, line: 86, baseType: !181, size: 128, offset: 192)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "flr", scope: !3513, file: !81, line: 111, baseType: !3522, size: 192)
!3522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_qos_flags_request", file: !81, line: 66, size: 192, elements: !3523)
!3523 = !{!3524, !3525}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3522, file: !81, line: 67, baseType: !181, size: 128)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3522, file: !81, line: 68, baseType: !169, size: 32, offset: 128)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !3513, file: !81, line: 112, baseType: !3527, size: 448)
!3527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "freq_qos_request", file: !81, line: 92, size: 448, elements: !3528)
!3528 = !{!3529, !3530, !3531}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3527, file: !81, line: 93, baseType: !93, size: 32)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "pnode", scope: !3527, file: !81, line: 94, baseType: !3516, size: 320, offset: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3527, file: !81, line: 95, baseType: !3532, size: 64, offset: 384)
!3532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3509, file: !81, line: 114, baseType: !3199, size: 64, offset: 512)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "latency_tolerance_req", scope: !3463, file: !81, line: 123, baseType: !3508, size: 64, offset: 2176)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "flags_req", scope: !3463, file: !81, line: 124, baseType: !3508, size: 64, offset: 2240)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !218, file: !60, line: 486, baseType: !3537, size: 64, offset: 4096)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !67, line: 642, size: 1792, elements: !3539)
!3539 = !{!3540, !3541, !3542, !3546, !3547, !3548}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3538, file: !67, line: 643, baseType: !3227, size: 1472)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3538, file: !67, line: 644, baseType: !3230, size: 64, offset: 1472)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3538, file: !67, line: 645, baseType: !3543, size: 64, offset: 1536)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{null, !3199, !473}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3538, file: !67, line: 646, baseType: !3230, size: 64, offset: 1600)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3538, file: !67, line: 647, baseType: !3221, size: 64, offset: 1664)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3538, file: !67, line: 648, baseType: !3221, size: 64, offset: 1728)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !218, file: !60, line: 493, baseType: !3550, size: 64, offset: 4160)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !60, line: 493, flags: DIFlagFwdDecl)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !218, file: !60, line: 499, baseType: !181, size: 128, offset: 4224)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !218, file: !60, line: 502, baseType: !3554, size: 64, offset: 4352)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3556)
!3556 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !60, line: 502, flags: DIFlagFwdDecl)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !218, file: !60, line: 504, baseType: !3558, size: 64, offset: 4416)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !218, file: !60, line: 505, baseType: !404, size: 64, offset: 4480)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !218, file: !60, line: 510, baseType: !404, size: 64, offset: 4544)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !218, file: !60, line: 511, baseType: !3562, size: 64, offset: 4608)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3564)
!3564 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !60, line: 511, flags: DIFlagFwdDecl)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !218, file: !60, line: 513, baseType: !3566, size: 64, offset: 4672)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !60, line: 288, size: 128, elements: !3568)
!3568 = !{!3569, !3570}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3567, file: !60, line: 293, baseType: !7, size: 32)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3567, file: !60, line: 294, baseType: !165, size: 64, offset: 64)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !218, file: !60, line: 515, baseType: !181, size: 128, offset: 4736)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !218, file: !60, line: 526, baseType: !3573, offset: 4864)
!3573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3574, line: 5, elements: !215)
!3574 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !218, file: !60, line: 528, baseType: !3576, size: 64, offset: 4864)
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3578, line: 51, size: 1344, elements: !3579)
!3578 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3579 = !{!3580, !3581, !3583, !3584, !3674, !3683, !3684, !3685, !3686, !3687, !3688, !3689}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3577, file: !3578, line: 52, baseType: !225, size: 64)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3577, file: !3578, line: 53, baseType: !3582, size: 32, offset: 64)
!3582 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3578, line: 28, baseType: !174)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3577, file: !3578, line: 54, baseType: !225, size: 64, offset: 128)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3577, file: !3578, line: 55, baseType: !3585, size: 192, offset: 192)
!3585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3586, line: 17, size: 192, elements: !3587)
!3586 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3587 = !{!3588, !3590, !3673}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3585, file: !3586, line: 18, baseType: !3589, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3585, file: !3586, line: 19, baseType: !3591, size: 64, offset: 64)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3593)
!3593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3586, line: 110, size: 1152, elements: !3594)
!3594 = !{!3595, !3599, !3603, !3609, !3615, !3619, !3623, !3628, !3632, !3633, !3637, !3641, !3645, !3656, !3657, !3658, !3659, !3669}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3593, file: !3586, line: 111, baseType: !3596, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{!3589, !3589}
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3593, file: !3586, line: 112, baseType: !3600, size: 64, offset: 64)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64)
!3601 = !DISubroutineType(types: !3602)
!3602 = !{null, !3589}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3593, file: !3586, line: 113, baseType: !3604, size: 64, offset: 128)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{!473, !3607}
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3585)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3593, file: !3586, line: 114, baseType: !3610, size: 64, offset: 192)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{!3041, !3607, !3613}
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !218)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3593, file: !3586, line: 116, baseType: !3616, size: 64, offset: 256)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DISubroutineType(types: !3618)
!3618 = !{!473, !3607, !225}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3593, file: !3586, line: 118, baseType: !3620, size: 64, offset: 320)
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3621, size: 64)
!3621 = !DISubroutineType(types: !3622)
!3622 = !{!173, !3607, !225, !7, !176, !309}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3593, file: !3586, line: 123, baseType: !3624, size: 64, offset: 384)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DISubroutineType(types: !3626)
!3626 = !{!173, !3607, !225, !3627, !309}
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3593, file: !3586, line: 126, baseType: !3629, size: 64, offset: 448)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!225, !3607}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3593, file: !3586, line: 127, baseType: !3629, size: 64, offset: 512)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3593, file: !3586, line: 128, baseType: !3634, size: 64, offset: 576)
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3635, size: 64)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{!3589, !3607}
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3593, file: !3586, line: 130, baseType: !3638, size: 64, offset: 640)
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 64)
!3639 = !DISubroutineType(types: !3640)
!3640 = !{!3589, !3607, !3589}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3593, file: !3586, line: 133, baseType: !3642, size: 64, offset: 704)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{!3589, !3607, !225}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3593, file: !3586, line: 135, baseType: !3646, size: 64, offset: 768)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = !DISubroutineType(types: !3648)
!3648 = !{!173, !3607, !225, !225, !7, !7, !3649}
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 64)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3586, line: 43, size: 640, elements: !3651)
!3651 = !{!3652, !3653, !3654}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3650, file: !3586, line: 44, baseType: !3589, size: 64)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3650, file: !3586, line: 45, baseType: !7, size: 32, offset: 64)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3650, file: !3586, line: 46, baseType: !3655, size: 512, offset: 128)
!3655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 512, elements: !1241)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3593, file: !3586, line: 140, baseType: !3638, size: 64, offset: 832)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3593, file: !3586, line: 143, baseType: !3634, size: 64, offset: 896)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3593, file: !3586, line: 145, baseType: !3596, size: 64, offset: 960)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3593, file: !3586, line: 146, baseType: !3660, size: 64, offset: 1024)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = !DISubroutineType(types: !3662)
!3662 = !{!173, !3607, !3663}
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3586, line: 29, size: 128, elements: !3665)
!3665 = !{!3666, !3667, !3668}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3664, file: !3586, line: 30, baseType: !7, size: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3664, file: !3586, line: 31, baseType: !7, size: 32, offset: 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3664, file: !3586, line: 32, baseType: !3607, size: 64, offset: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3593, file: !3586, line: 148, baseType: !3670, size: 64, offset: 1088)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{!173, !3607, !3199}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3585, file: !3586, line: 20, baseType: !3199, size: 64, offset: 128)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3577, file: !3578, line: 57, baseType: !3675, size: 64, offset: 384)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3578, line: 31, size: 704, elements: !3677)
!3677 = !{!3678, !3679, !3680, !3681, !3682}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3676, file: !3578, line: 32, baseType: !263, size: 64)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3676, file: !3578, line: 33, baseType: !173, size: 32, offset: 64)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3676, file: !3578, line: 34, baseType: !176, size: 64, offset: 128)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3676, file: !3578, line: 35, baseType: !3675, size: 64, offset: 192)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3676, file: !3578, line: 43, baseType: !330, size: 448, offset: 256)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3577, file: !3578, line: 58, baseType: !3675, size: 64, offset: 448)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3577, file: !3578, line: 59, baseType: !3576, size: 64, offset: 512)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3577, file: !3578, line: 60, baseType: !3576, size: 64, offset: 576)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3577, file: !3578, line: 61, baseType: !3576, size: 64, offset: 640)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3577, file: !3578, line: 63, baseType: !221, size: 512, offset: 704)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3577, file: !3578, line: 65, baseType: !165, size: 64, offset: 1216)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3577, file: !3578, line: 66, baseType: !176, size: 64, offset: 1280)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !218, file: !60, line: 529, baseType: !3589, size: 64, offset: 4928)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !218, file: !60, line: 534, baseType: !496, size: 32, offset: 4992)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !218, file: !60, line: 535, baseType: !174, size: 32, offset: 5024)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !218, file: !60, line: 537, baseType: !201, offset: 5056)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !218, file: !60, line: 538, baseType: !181, size: 128, offset: 5056)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !218, file: !60, line: 540, baseType: !3696, size: 64, offset: 5184)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3698, line: 54, size: 960, elements: !3699)
!3698 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3699 = !{!3700, !3701, !3702, !3703, !3704, !3705, !3706, !3710, !3714, !3715, !3716, !3717, !3721, !3725, !3726}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3697, file: !3698, line: 55, baseType: !225, size: 64)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3697, file: !3698, line: 56, baseType: !613, size: 64, offset: 64)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3697, file: !3698, line: 58, baseType: !315, size: 64, offset: 128)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3697, file: !3698, line: 59, baseType: !315, size: 64, offset: 192)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3697, file: !3698, line: 60, baseType: !230, size: 64, offset: 256)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3697, file: !3698, line: 62, baseType: !3212, size: 64, offset: 320)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3697, file: !3698, line: 63, baseType: !3707, size: 64, offset: 384)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3708, size: 64)
!3708 = !DISubroutineType(types: !3709)
!3709 = !{!263, !3199, !3219}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3697, file: !3698, line: 65, baseType: !3711, size: 64, offset: 448)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{null, !3696}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3697, file: !3698, line: 66, baseType: !3221, size: 64, offset: 512)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3697, file: !3698, line: 68, baseType: !3230, size: 64, offset: 576)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3697, file: !3698, line: 70, baseType: !3024, size: 64, offset: 640)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3697, file: !3698, line: 71, baseType: !3718, size: 64, offset: 704)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{!3041, !3199}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3697, file: !3698, line: 73, baseType: !3722, size: 64, offset: 768)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{null, !3199, !3058, !3059}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3697, file: !3698, line: 75, baseType: !3225, size: 64, offset: 832)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3697, file: !3698, line: 77, baseType: !3342, size: 64, offset: 896)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !218, file: !60, line: 541, baseType: !315, size: 64, offset: 5248)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !218, file: !60, line: 543, baseType: !3221, size: 64, offset: 5312)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !218, file: !60, line: 544, baseType: !3730, size: 64, offset: 5376)
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 64)
!3731 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !60, line: 45, flags: DIFlagFwdDecl)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !218, file: !60, line: 545, baseType: !3733, size: 64, offset: 5440)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !60, line: 47, flags: DIFlagFwdDecl)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !218, file: !60, line: 547, baseType: !473, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !218, file: !60, line: 548, baseType: !473, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !218, file: !60, line: 549, baseType: !473, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !218, file: !60, line: 550, baseType: !473, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !178, file: !98, line: 177, baseType: !3740, size: 64, offset: 5888)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devfreq_dev_profile", file: !98, line: 104, size: 512, elements: !3742)
!3742 = !{!3743, !3744, !3745, !3746, !3750, !3761, !3765, !3766, !3767}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "initial_freq", scope: !3741, file: !98, line: 105, baseType: !165, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "polling_ms", scope: !3741, file: !98, line: 106, baseType: !7, size: 32, offset: 64)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3741, file: !98, line: 107, baseType: !97, size: 32, offset: 96)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3741, file: !98, line: 109, baseType: !3747, size: 64, offset: 128)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!173, !3199, !166, !174}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "get_dev_status", scope: !3741, file: !98, line: 110, baseType: !3751, size: 64, offset: 192)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!173, !3199, !3754}
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 64)
!3755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devfreq_dev_status", file: !98, line: 59, size: 256, elements: !3756)
!3756 = !{!3757, !3758, !3759, !3760}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3755, file: !98, line: 61, baseType: !165, size: 64)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "busy_time", scope: !3755, file: !98, line: 62, baseType: !165, size: 64, offset: 64)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "current_frequency", scope: !3755, file: !98, line: 63, baseType: !165, size: 64, offset: 128)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3755, file: !98, line: 64, baseType: !176, size: 64, offset: 192)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "get_cur_freq", scope: !3741, file: !98, line: 112, baseType: !3762, size: 64, offset: 256)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{!173, !3199, !166}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !3741, file: !98, line: 113, baseType: !3221, size: 64, offset: 320)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "freq_table", scope: !3741, file: !98, line: 115, baseType: !166, size: 64, offset: 384)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "max_state", scope: !3741, file: !98, line: 116, baseType: !7, size: 32, offset: 448)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "governor", scope: !178, file: !98, line: 178, baseType: !3769, size: 64, offset: 5952)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3771)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devfreq_governor", file: !3772, line: 49, size: 448, elements: !3773)
!3772 = !DIFile(filename: "drivers/devfreq/governor.h", directory: "/home/lizy2001/genbc/linux")
!3773 = !{!3774, !3775, !3777, !3778, !3779, !3783}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3771, file: !3772, line: 50, baseType: !181, size: 128)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3771, file: !3772, line: 52, baseType: !3776, size: 128, offset: 128)
!3776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 128, elements: !1644)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "immutable", scope: !3771, file: !3772, line: 53, baseType: !2663, size: 32, offset: 256)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_driven", scope: !3771, file: !3772, line: 54, baseType: !2663, size: 32, offset: 288)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "get_target_freq", scope: !3771, file: !3772, line: 55, baseType: !3780, size: 64, offset: 320)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!173, !177, !166}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !3771, file: !3772, line: 56, baseType: !3784, size: 64, offset: 384)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!173, !177, !7, !176}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "governor_name", scope: !178, file: !98, line: 179, baseType: !1643, size: 128, offset: 6016)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !178, file: !98, line: 180, baseType: !3485, size: 192, offset: 6144)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !178, file: !98, line: 181, baseType: !3790, size: 704, offset: 6336)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !104, line: 115, size: 704, elements: !3791)
!3791 = !{!3792, !3793, !3794, !3795}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3790, file: !104, line: 116, baseType: !1868, size: 256)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3790, file: !104, line: 117, baseType: !3390, size: 320, offset: 256)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3790, file: !104, line: 120, baseType: !2629, size: 64, offset: 576)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3790, file: !104, line: 121, baseType: !173, size: 32, offset: 640)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "previous_freq", scope: !178, file: !98, line: 183, baseType: !165, size: 64, offset: 7040)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "last_status", scope: !178, file: !98, line: 184, baseType: !3755, size: 256, offset: 7104)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !178, file: !98, line: 186, baseType: !176, size: 64, offset: 7360)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "user_min_freq_req", scope: !178, file: !98, line: 188, baseType: !3509, size: 576, offset: 7424)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "user_max_freq_req", scope: !178, file: !98, line: 189, baseType: !3509, size: 576, offset: 8000)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_min_freq", scope: !178, file: !98, line: 190, baseType: !165, size: 64, offset: 8576)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_max_freq", scope: !178, file: !98, line: 191, baseType: !165, size: 64, offset: 8640)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "stop_polling", scope: !178, file: !98, line: 192, baseType: !473, size: 8, offset: 8704)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_freq", scope: !178, file: !98, line: 194, baseType: !165, size: 64, offset: 8768)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "resume_freq", scope: !178, file: !98, line: 195, baseType: !165, size: 64, offset: 8832)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_count", scope: !178, file: !98, line: 196, baseType: !766, size: 32, offset: 8896)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !178, file: !98, line: 199, baseType: !3808, size: 256, offset: 8960)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devfreq_stats", file: !98, line: 126, size: 256, elements: !3809)
!3809 = !{!3810, !3811, !3812, !3813}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "total_trans", scope: !3808, file: !98, line: 127, baseType: !7, size: 32)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "trans_table", scope: !3808, file: !98, line: 128, baseType: !2519, size: 64, offset: 64)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "time_in_state", scope: !3808, file: !98, line: 129, baseType: !3558, size: 64, offset: 128)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "last_update", scope: !3808, file: !98, line: 130, baseType: !404, size: 64, offset: 192)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "transition_notifier_list", scope: !178, file: !98, line: 201, baseType: !3815, size: 832, offset: 9216)
!3815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_notifier_head", file: !3480, line: 74, size: 832, elements: !3816)
!3816 = !{!3817, !3818, !3832}
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3815, file: !3480, line: 75, baseType: !187, size: 192)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !3815, file: !3480, line: 76, baseType: !3819, size: 576, offset: 192)
!3819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !3820, line: 16, size: 576, elements: !3821)
!3820 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!3821 = !{!3822, !3824, !3825, !3826, !3827, !3828, !3829, !3831}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !3819, file: !3820, line: 17, baseType: !3823, size: 32)
!3823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 32, elements: !1478)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !3819, file: !3820, line: 18, baseType: !1116, size: 16, offset: 32)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !3819, file: !3820, line: 19, baseType: !1263, size: 8, offset: 48)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !3819, file: !3820, line: 20, baseType: !1263, size: 8, offset: 56)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !3819, file: !3820, line: 21, baseType: !1416, size: 128, offset: 64)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !3819, file: !3820, line: 23, baseType: !355, size: 64, offset: 192)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !3819, file: !3820, line: 24, baseType: !3830, size: 64, offset: 256)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !3819, file: !3820, line: 25, baseType: !1868, size: 256, offset: 320)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3815, file: !3480, line: 77, baseType: !3484, size: 64, offset: 768)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "nb_min", scope: !178, file: !98, line: 203, baseType: !3485, size: 192, offset: 10048)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "nb_max", scope: !178, file: !98, line: 204, baseType: !3485, size: 192, offset: 10240)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !184)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3838, size: 64)
!3838 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !173)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3841 = !{!3842, !3847, !3849, !0, !3851, !3853, !3855, !3857, !3862, !3865, !3867, !3870, !3884, !3886, !3888, !3890, !3892, !3894, !3896, !3898, !3900, !3902, !3904, !3908, !3910}
!3842 = !DIGlobalVariableExpression(var: !3843, expr: !DIExpression())
!3843 = distinct !DIGlobalVariable(name: "__key", scope: !3844, file: !3, line: 776, type: !628, isLocal: true, isDefinition: true)
!3844 = distinct !DISubprogram(name: "devfreq_add_device", scope: !3, file: !3, line: 746, type: !3845, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!3845 = !DISubroutineType(types: !3846)
!3846 = !{!177, !3199, !3740, !225, !176}
!3847 = !DIGlobalVariableExpression(var: !3848, expr: !DIExpression())
!3848 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_devfreq_init252", scope: !2, file: !3, line: 1880, type: !176, isLocal: true, isDefinition: true)
!3849 = !DIGlobalVariableExpression(var: !3850, expr: !DIExpression())
!3850 = distinct !DIGlobalVariable(name: "devfreq_class", scope: !2, file: !3, line: 36, type: !3696, isLocal: true, isDefinition: true)
!3851 = !DIGlobalVariableExpression(var: !3852, expr: !DIExpression())
!3852 = distinct !DIGlobalVariable(name: "devfreq_list_lock", scope: !2, file: !3, line: 50, type: !187, isLocal: true, isDefinition: true)
!3853 = !DIGlobalVariableExpression(var: !3854, expr: !DIExpression())
!3854 = distinct !DIGlobalVariable(name: "devfreq_list", scope: !2, file: !3, line: 49, type: !181, isLocal: true, isDefinition: true)
!3855 = !DIGlobalVariableExpression(var: !3856, expr: !DIExpression())
!3856 = distinct !DIGlobalVariable(name: "devfreq_governor_list", scope: !2, file: !3, line: 47, type: !181, isLocal: true, isDefinition: true)
!3857 = !DIGlobalVariableExpression(var: !3858, expr: !DIExpression())
!3858 = distinct !DIGlobalVariable(name: "__key", scope: !3859, file: !3, line: 1859, type: !628, isLocal: true, isDefinition: true)
!3859 = distinct !DISubprogram(name: "devfreq_init", scope: !3, file: !3, line: 1857, type: !3860, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!173}
!3862 = !DIGlobalVariableExpression(var: !3863, expr: !DIExpression())
!3863 = distinct !DIGlobalVariable(name: "devfreq_groups", scope: !2, file: !3, line: 1778, type: !3864, isLocal: true, isDefinition: true)
!3864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !1478)
!3865 = !DIGlobalVariableExpression(var: !3866, expr: !DIExpression())
!3866 = distinct !DIGlobalVariable(name: "devfreq_group", scope: !2, file: !3, line: 1778, type: !317, isLocal: true, isDefinition: true)
!3867 = !DIGlobalVariableExpression(var: !3868, expr: !DIExpression())
!3868 = distinct !DIGlobalVariable(name: "devfreq_attrs", scope: !2, file: !3, line: 1764, type: !3869, isLocal: true, isDefinition: true)
!3869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 768, elements: !2133)
!3870 = !DIGlobalVariableExpression(var: !3871, expr: !DIExpression())
!3871 = distinct !DIGlobalVariable(name: "dev_attr_name", scope: !2, file: !3, line: 1313, type: !3872, isLocal: true, isDefinition: true)
!3872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !60, line: 99, size: 256, elements: !3873)
!3873 = !{!3874, !3875, !3880}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3872, file: !60, line: 100, baseType: !299, size: 128)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3872, file: !60, line: 101, baseType: !3876, size: 64, offset: 128)
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!294, !3199, !3879, !263}
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3872, file: !60, line: 103, baseType: !3881, size: 64, offset: 192)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{!294, !3199, !3879, !225, !309}
!3884 = !DIGlobalVariableExpression(var: !3885, expr: !DIExpression())
!3885 = distinct !DIGlobalVariable(name: "dev_attr_governor", scope: !2, file: !3, line: 1387, type: !3872, isLocal: true, isDefinition: true)
!3886 = !DIGlobalVariableExpression(var: !3887, expr: !DIExpression())
!3887 = distinct !DIGlobalVariable(name: "dev_attr_available_governors", scope: !2, file: !3, line: 1433, type: !3872, isLocal: true, isDefinition: true)
!3888 = !DIGlobalVariableExpression(var: !3889, expr: !DIExpression())
!3889 = distinct !DIGlobalVariable(name: "dev_attr_cur_freq", scope: !2, file: !3, line: 1450, type: !3872, isLocal: true, isDefinition: true)
!3890 = !DIGlobalVariableExpression(var: !3891, expr: !DIExpression())
!3891 = distinct !DIGlobalVariable(name: "dev_attr_available_frequencies", scope: !2, file: !3, line: 1615, type: !3872, isLocal: true, isDefinition: true)
!3892 = !DIGlobalVariableExpression(var: !3893, expr: !DIExpression())
!3893 = distinct !DIGlobalVariable(name: "dev_attr_target_freq", scope: !2, file: !3, line: 1459, type: !3872, isLocal: true, isDefinition: true)
!3894 = !DIGlobalVariableExpression(var: !3895, expr: !DIExpression())
!3895 = distinct !DIGlobalVariable(name: "dev_attr_polling_interval", scope: !2, file: !3, line: 1492, type: !3872, isLocal: true, isDefinition: true)
!3896 = !DIGlobalVariableExpression(var: !3897, expr: !DIExpression())
!3897 = distinct !DIGlobalVariable(name: "dev_attr_min_freq", scope: !2, file: !3, line: 1533, type: !3872, isLocal: true, isDefinition: true)
!3898 = !DIGlobalVariableExpression(var: !3899, expr: !DIExpression())
!3899 = distinct !DIGlobalVariable(name: "dev_attr_max_freq", scope: !2, file: !3, line: 1587, type: !3872, isLocal: true, isDefinition: true)
!3900 = !DIGlobalVariableExpression(var: !3901, expr: !DIExpression())
!3901 = distinct !DIGlobalVariable(name: "dev_attr_trans_stat", scope: !2, file: !3, line: 1699, type: !3872, isLocal: true, isDefinition: true)
!3902 = !DIGlobalVariableExpression(var: !3903, expr: !DIExpression())
!3903 = distinct !DIGlobalVariable(name: "dev_attr_timer", scope: !2, file: !3, line: 1762, type: !3872, isLocal: true, isDefinition: true)
!3904 = !DIGlobalVariableExpression(var: !3905, expr: !DIExpression())
!3905 = distinct !DIGlobalVariable(name: "timer_name", scope: !2, file: !3, line: 52, type: !3906, isLocal: true, isDefinition: true)
!3906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 256, elements: !3907)
!3907 = !{!1479, !1645}
!3908 = !DIGlobalVariableExpression(var: !3909, expr: !DIExpression())
!3909 = distinct !DIGlobalVariable(name: "devfreq_debugfs", scope: !2, file: !3, line: 37, type: !369, isLocal: true, isDefinition: true)
!3910 = !DIGlobalVariableExpression(var: !3911, expr: !DIExpression())
!3911 = distinct !DIGlobalVariable(name: "devfreq_summary_fops", scope: !2, file: !3, line: 1855, type: !2700, isLocal: true, isDefinition: true)
!3912 = !{i32 7, !"Dwarf Version", i32 4}
!3913 = !{i32 2, !"Debug Info Version", i32 3}
!3914 = !{i32 1, !"wchar_size", i32 2}
!3915 = !{i32 1, !"Code Model", i32 2}
!3916 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!3917 = distinct !DISubprogram(name: "devfreq_update_status", scope: !3, file: !3, line: 216, type: !3918, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{!173, !177, !165}
!3920 = !DILocalVariable(name: "devfreq", arg: 1, scope: !3917, file: !3, line: 216, type: !177)
!3921 = !DILocation(line: 216, column: 43, scope: !3917)
!3922 = !DILocalVariable(name: "freq", arg: 2, scope: !3917, file: !3, line: 216, type: !165)
!3923 = !DILocation(line: 216, column: 66, scope: !3917)
!3924 = !DILocalVariable(name: "lev", scope: !3917, file: !3, line: 218, type: !173)
!3925 = !DILocation(line: 218, column: 6, scope: !3917)
!3926 = !DILocalVariable(name: "prev_lev", scope: !3917, file: !3, line: 218, type: !173)
!3927 = !DILocation(line: 218, column: 11, scope: !3917)
!3928 = !DILocalVariable(name: "ret", scope: !3917, file: !3, line: 218, type: !173)
!3929 = !DILocation(line: 218, column: 21, scope: !3917)
!3930 = !DILocalVariable(name: "cur_time", scope: !3917, file: !3, line: 219, type: !404)
!3931 = !DILocation(line: 219, column: 6, scope: !3917)
!3932 = !DILocation(line: 221, column: 2, scope: !3917)
!3933 = !DILocation(line: 221, column: 2, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 221, column: 2)
!3935 = !DILocation(line: 222, column: 13, scope: !3917)
!3936 = !DILocation(line: 222, column: 11, scope: !3917)
!3937 = !DILocation(line: 225, column: 7, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 225, column: 6)
!3939 = !DILocation(line: 225, column: 16, scope: !3938)
!3940 = !DILocation(line: 225, column: 6, scope: !3917)
!3941 = !DILocation(line: 226, column: 3, scope: !3938)
!3942 = !DILocation(line: 228, column: 36, scope: !3917)
!3943 = !DILocation(line: 228, column: 45, scope: !3917)
!3944 = !DILocation(line: 228, column: 54, scope: !3917)
!3945 = !DILocation(line: 228, column: 13, scope: !3917)
!3946 = !DILocation(line: 228, column: 11, scope: !3917)
!3947 = !DILocation(line: 229, column: 6, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 229, column: 6)
!3949 = !DILocation(line: 229, column: 15, scope: !3948)
!3950 = !DILocation(line: 229, column: 6, scope: !3917)
!3951 = !DILocation(line: 230, column: 9, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 229, column: 20)
!3953 = !DILocation(line: 230, column: 7, scope: !3952)
!3954 = !DILocation(line: 231, column: 3, scope: !3952)
!3955 = !DILocation(line: 235, column: 4, scope: !3917)
!3956 = !DILocation(line: 235, column: 15, scope: !3917)
!3957 = !DILocation(line: 235, column: 24, scope: !3917)
!3958 = !DILocation(line: 235, column: 30, scope: !3917)
!3959 = !DILocation(line: 235, column: 13, scope: !3917)
!3960 = !DILocation(line: 234, column: 2, scope: !3917)
!3961 = !DILocation(line: 234, column: 11, scope: !3917)
!3962 = !DILocation(line: 234, column: 17, scope: !3917)
!3963 = !DILocation(line: 234, column: 31, scope: !3917)
!3964 = !DILocation(line: 234, column: 41, scope: !3917)
!3965 = !DILocation(line: 237, column: 31, scope: !3917)
!3966 = !DILocation(line: 237, column: 40, scope: !3917)
!3967 = !DILocation(line: 237, column: 8, scope: !3917)
!3968 = !DILocation(line: 237, column: 6, scope: !3917)
!3969 = !DILocation(line: 238, column: 6, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 238, column: 6)
!3971 = !DILocation(line: 238, column: 10, scope: !3970)
!3972 = !DILocation(line: 238, column: 6, scope: !3917)
!3973 = !DILocation(line: 239, column: 9, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 238, column: 15)
!3975 = !DILocation(line: 239, column: 7, scope: !3974)
!3976 = !DILocation(line: 240, column: 3, scope: !3974)
!3977 = !DILocation(line: 243, column: 6, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 243, column: 6)
!3979 = !DILocation(line: 243, column: 13, scope: !3978)
!3980 = !DILocation(line: 243, column: 10, scope: !3978)
!3981 = !DILocation(line: 243, column: 6, scope: !3917)
!3982 = !DILocation(line: 244, column: 3, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 243, column: 23)
!3984 = !DILocation(line: 244, column: 12, scope: !3983)
!3985 = !DILocation(line: 244, column: 18, scope: !3983)
!3986 = !DILocation(line: 245, column: 5, scope: !3983)
!3987 = !DILocation(line: 245, column: 16, scope: !3983)
!3988 = !DILocation(line: 245, column: 25, scope: !3983)
!3989 = !DILocation(line: 245, column: 34, scope: !3983)
!3990 = !DILocation(line: 245, column: 14, scope: !3983)
!3991 = !DILocation(line: 245, column: 47, scope: !3983)
!3992 = !DILocation(line: 245, column: 45, scope: !3983)
!3993 = !DILocation(line: 245, column: 51, scope: !3983)
!3994 = !DILocation(line: 246, column: 3, scope: !3983)
!3995 = !DILocation(line: 246, column: 12, scope: !3983)
!3996 = !DILocation(line: 246, column: 18, scope: !3983)
!3997 = !DILocation(line: 246, column: 29, scope: !3983)
!3998 = !DILocation(line: 247, column: 2, scope: !3983)
!3999 = !DILabel(scope: !3917, name: "out", file: !3, line: 249)
!4000 = !DILocation(line: 249, column: 1, scope: !3917)
!4001 = !DILocation(line: 250, column: 31, scope: !3917)
!4002 = !DILocation(line: 250, column: 2, scope: !3917)
!4003 = !DILocation(line: 250, column: 11, scope: !3917)
!4004 = !DILocation(line: 250, column: 17, scope: !3917)
!4005 = !DILocation(line: 250, column: 29, scope: !3917)
!4006 = !DILocation(line: 251, column: 9, scope: !3917)
!4007 = !DILocation(line: 251, column: 2, scope: !3917)
!4008 = distinct !DISubprogram(name: "get_jiffies_64", scope: !4009, file: !4009, line: 85, type: !4010, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4009 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!4010 = !DISubroutineType(types: !4011)
!4011 = !{!404}
!4012 = !DILocation(line: 87, column: 14, scope: !4008)
!4013 = !DILocation(line: 87, column: 2, scope: !4008)
!4014 = distinct !DISubprogram(name: "devfreq_get_freq_level", scope: !3, file: !3, line: 164, type: !3918, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4015 = !DILocalVariable(name: "devfreq", arg: 1, scope: !4014, file: !3, line: 164, type: !177)
!4016 = !DILocation(line: 164, column: 51, scope: !4014)
!4017 = !DILocalVariable(name: "freq", arg: 2, scope: !4014, file: !3, line: 164, type: !165)
!4018 = !DILocation(line: 164, column: 74, scope: !4014)
!4019 = !DILocalVariable(name: "lev", scope: !4014, file: !3, line: 166, type: !173)
!4020 = !DILocation(line: 166, column: 6, scope: !4014)
!4021 = !DILocation(line: 168, column: 11, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 168, column: 2)
!4023 = !DILocation(line: 168, column: 7, scope: !4022)
!4024 = !DILocation(line: 168, column: 16, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 168, column: 2)
!4026 = !DILocation(line: 168, column: 22, scope: !4025)
!4027 = !DILocation(line: 168, column: 31, scope: !4025)
!4028 = !DILocation(line: 168, column: 40, scope: !4025)
!4029 = !DILocation(line: 168, column: 20, scope: !4025)
!4030 = !DILocation(line: 168, column: 2, scope: !4022)
!4031 = !DILocation(line: 169, column: 7, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 169, column: 7)
!4033 = !DILocation(line: 169, column: 15, scope: !4032)
!4034 = !DILocation(line: 169, column: 24, scope: !4032)
!4035 = !DILocation(line: 169, column: 33, scope: !4032)
!4036 = !DILocation(line: 169, column: 44, scope: !4032)
!4037 = !DILocation(line: 169, column: 12, scope: !4032)
!4038 = !DILocation(line: 169, column: 7, scope: !4025)
!4039 = !DILocation(line: 170, column: 11, scope: !4032)
!4040 = !DILocation(line: 170, column: 4, scope: !4032)
!4041 = !DILocation(line: 169, column: 47, scope: !4032)
!4042 = !DILocation(line: 168, column: 54, scope: !4025)
!4043 = !DILocation(line: 168, column: 2, scope: !4025)
!4044 = distinct !{!4044, !4030, !4045}
!4045 = !DILocation(line: 170, column: 11, scope: !4022)
!4046 = !DILocation(line: 172, column: 2, scope: !4014)
!4047 = !DILocation(line: 173, column: 1, scope: !4014)
!4048 = distinct !DISubprogram(name: "update_devfreq", scope: !3, file: !3, line: 394, type: !4049, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{!173, !177}
!4051 = !DILocalVariable(name: "devfreq", arg: 1, scope: !4048, file: !3, line: 394, type: !177)
!4052 = !DILocation(line: 394, column: 36, scope: !4048)
!4053 = !DILocalVariable(name: "freq", scope: !4048, file: !3, line: 396, type: !165)
!4054 = !DILocation(line: 396, column: 16, scope: !4048)
!4055 = !DILocalVariable(name: "min_freq", scope: !4048, file: !3, line: 396, type: !165)
!4056 = !DILocation(line: 396, column: 22, scope: !4048)
!4057 = !DILocalVariable(name: "max_freq", scope: !4048, file: !3, line: 396, type: !165)
!4058 = !DILocation(line: 396, column: 32, scope: !4048)
!4059 = !DILocalVariable(name: "err", scope: !4048, file: !3, line: 397, type: !173)
!4060 = !DILocation(line: 397, column: 6, scope: !4048)
!4061 = !DILocalVariable(name: "flags", scope: !4048, file: !3, line: 398, type: !174)
!4062 = !DILocation(line: 398, column: 6, scope: !4048)
!4063 = !DILocation(line: 400, column: 2, scope: !4048)
!4064 = !DILocation(line: 400, column: 2, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 400, column: 2)
!4066 = !DILocation(line: 402, column: 7, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 402, column: 6)
!4068 = !DILocation(line: 402, column: 16, scope: !4067)
!4069 = !DILocation(line: 402, column: 6, scope: !4048)
!4070 = !DILocation(line: 403, column: 3, scope: !4067)
!4071 = !DILocation(line: 406, column: 8, scope: !4048)
!4072 = !DILocation(line: 406, column: 17, scope: !4048)
!4073 = !DILocation(line: 406, column: 27, scope: !4048)
!4074 = !DILocation(line: 406, column: 43, scope: !4048)
!4075 = !DILocation(line: 406, column: 6, scope: !4048)
!4076 = !DILocation(line: 407, column: 6, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 407, column: 6)
!4078 = !DILocation(line: 407, column: 6, scope: !4048)
!4079 = !DILocation(line: 408, column: 10, scope: !4077)
!4080 = !DILocation(line: 408, column: 3, scope: !4077)
!4081 = !DILocation(line: 409, column: 17, scope: !4048)
!4082 = !DILocation(line: 409, column: 2, scope: !4048)
!4083 = !DILocation(line: 411, column: 6, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 411, column: 6)
!4085 = !DILocation(line: 411, column: 13, scope: !4084)
!4086 = !DILocation(line: 411, column: 11, scope: !4084)
!4087 = !DILocation(line: 411, column: 6, scope: !4048)
!4088 = !DILocation(line: 412, column: 10, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 411, column: 23)
!4090 = !DILocation(line: 412, column: 8, scope: !4089)
!4091 = !DILocation(line: 413, column: 9, scope: !4089)
!4092 = !DILocation(line: 414, column: 2, scope: !4089)
!4093 = !DILocation(line: 415, column: 6, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 415, column: 6)
!4095 = !DILocation(line: 415, column: 13, scope: !4094)
!4096 = !DILocation(line: 415, column: 11, scope: !4094)
!4097 = !DILocation(line: 415, column: 6, scope: !4048)
!4098 = !DILocation(line: 416, column: 10, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 415, column: 23)
!4100 = !DILocation(line: 416, column: 8, scope: !4099)
!4101 = !DILocation(line: 417, column: 9, scope: !4099)
!4102 = !DILocation(line: 418, column: 2, scope: !4099)
!4103 = !DILocation(line: 420, column: 28, scope: !4048)
!4104 = !DILocation(line: 420, column: 37, scope: !4048)
!4105 = !DILocation(line: 420, column: 43, scope: !4048)
!4106 = !DILocation(line: 420, column: 9, scope: !4048)
!4107 = !DILocation(line: 420, column: 2, scope: !4048)
!4108 = !DILocation(line: 422, column: 1, scope: !4048)
!4109 = distinct !DISubprogram(name: "get_freq_range", scope: !3, file: !3, line: 119, type: !4110, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{null, !177, !166, !166}
!4112 = !DILocalVariable(name: "devfreq", arg: 1, scope: !4109, file: !3, line: 119, type: !177)
!4113 = !DILocation(line: 119, column: 44, scope: !4109)
!4114 = !DILocalVariable(name: "min_freq", arg: 2, scope: !4109, file: !3, line: 120, type: !166)
!4115 = !DILocation(line: 120, column: 22, scope: !4109)
!4116 = !DILocalVariable(name: "max_freq", arg: 3, scope: !4109, file: !3, line: 121, type: !166)
!4117 = !DILocation(line: 121, column: 22, scope: !4109)
!4118 = !DILocalVariable(name: "freq_table", scope: !4109, file: !3, line: 123, type: !166)
!4119 = !DILocation(line: 123, column: 17, scope: !4109)
!4120 = !DILocation(line: 123, column: 30, scope: !4109)
!4121 = !DILocation(line: 123, column: 39, scope: !4109)
!4122 = !DILocation(line: 123, column: 48, scope: !4109)
!4123 = !DILocalVariable(name: "qos_min_freq", scope: !4109, file: !3, line: 124, type: !169)
!4124 = !DILocation(line: 124, column: 6, scope: !4109)
!4125 = !DILocalVariable(name: "qos_max_freq", scope: !4109, file: !3, line: 124, type: !169)
!4126 = !DILocation(line: 124, column: 20, scope: !4109)
!4127 = !DILocation(line: 126, column: 2, scope: !4109)
!4128 = !DILocation(line: 126, column: 2, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 126, column: 2)
!4130 = !DILocation(line: 133, column: 6, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 133, column: 6)
!4132 = !DILocation(line: 133, column: 22, scope: !4131)
!4133 = !DILocation(line: 133, column: 33, scope: !4131)
!4134 = !DILocation(line: 133, column: 42, scope: !4131)
!4135 = !DILocation(line: 133, column: 51, scope: !4131)
!4136 = !DILocation(line: 133, column: 61, scope: !4131)
!4137 = !DILocation(line: 133, column: 20, scope: !4131)
!4138 = !DILocation(line: 133, column: 6, scope: !4109)
!4139 = !DILocation(line: 134, column: 15, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 133, column: 67)
!4141 = !DILocation(line: 134, column: 4, scope: !4140)
!4142 = !DILocation(line: 134, column: 13, scope: !4140)
!4143 = !DILocation(line: 135, column: 15, scope: !4140)
!4144 = !DILocation(line: 135, column: 26, scope: !4140)
!4145 = !DILocation(line: 135, column: 35, scope: !4140)
!4146 = !DILocation(line: 135, column: 44, scope: !4140)
!4147 = !DILocation(line: 135, column: 54, scope: !4140)
!4148 = !DILocation(line: 135, column: 4, scope: !4140)
!4149 = !DILocation(line: 135, column: 13, scope: !4140)
!4150 = !DILocation(line: 136, column: 2, scope: !4140)
!4151 = !DILocation(line: 137, column: 15, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 136, column: 9)
!4153 = !DILocation(line: 137, column: 26, scope: !4152)
!4154 = !DILocation(line: 137, column: 35, scope: !4152)
!4155 = !DILocation(line: 137, column: 44, scope: !4152)
!4156 = !DILocation(line: 137, column: 54, scope: !4152)
!4157 = !DILocation(line: 137, column: 4, scope: !4152)
!4158 = !DILocation(line: 137, column: 13, scope: !4152)
!4159 = !DILocation(line: 138, column: 15, scope: !4152)
!4160 = !DILocation(line: 138, column: 4, scope: !4152)
!4161 = !DILocation(line: 138, column: 13, scope: !4152)
!4162 = !DILocation(line: 142, column: 39, scope: !4109)
!4163 = !DILocation(line: 142, column: 48, scope: !4109)
!4164 = !DILocation(line: 142, column: 52, scope: !4109)
!4165 = !DILocation(line: 142, column: 17, scope: !4109)
!4166 = !DILocation(line: 142, column: 15, scope: !4109)
!4167 = !DILocation(line: 144, column: 39, scope: !4109)
!4168 = !DILocation(line: 144, column: 48, scope: !4109)
!4169 = !DILocation(line: 144, column: 52, scope: !4109)
!4170 = !DILocation(line: 144, column: 17, scope: !4109)
!4171 = !DILocation(line: 144, column: 15, scope: !4109)
!4172 = !DILocalVariable(name: "__UNIQUE_ID___x204", scope: !4173, file: !3, line: 146, type: !165)
!4173 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 146, column: 14)
!4174 = !DILocation(line: 146, column: 14, scope: !4173)
!4175 = !DILocalVariable(name: "__UNIQUE_ID___y205", scope: !4173, file: !3, line: 146, type: !165)
!4176 = !DILocation(line: 146, column: 3, scope: !4109)
!4177 = !DILocation(line: 146, column: 12, scope: !4109)
!4178 = !DILocation(line: 147, column: 6, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 147, column: 6)
!4180 = !DILocation(line: 147, column: 19, scope: !4179)
!4181 = !DILocation(line: 147, column: 6, scope: !4109)
!4182 = !DILocalVariable(name: "__UNIQUE_ID___x206", scope: !4183, file: !3, line: 148, type: !165)
!4183 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 148, column: 15)
!4184 = !DILocation(line: 148, column: 15, scope: !4183)
!4185 = !DILocalVariable(name: "__UNIQUE_ID___y207", scope: !4183, file: !3, line: 148, type: !165)
!4186 = !DILocation(line: 148, column: 4, scope: !4179)
!4187 = !DILocation(line: 148, column: 13, scope: !4179)
!4188 = !DILocation(line: 148, column: 3, scope: !4179)
!4189 = !DILocalVariable(name: "__UNIQUE_ID___x208", scope: !4190, file: !3, line: 152, type: !165)
!4190 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 152, column: 14)
!4191 = !DILocation(line: 152, column: 14, scope: !4190)
!4192 = !DILocalVariable(name: "__UNIQUE_ID___y209", scope: !4190, file: !3, line: 152, type: !165)
!4193 = !DILocation(line: 152, column: 3, scope: !4109)
!4194 = !DILocation(line: 152, column: 12, scope: !4109)
!4195 = !DILocalVariable(name: "__UNIQUE_ID___x210", scope: !4196, file: !3, line: 153, type: !165)
!4196 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 153, column: 14)
!4197 = !DILocation(line: 153, column: 14, scope: !4196)
!4198 = !DILocalVariable(name: "__UNIQUE_ID___y211", scope: !4196, file: !3, line: 153, type: !165)
!4199 = !DILocation(line: 153, column: 3, scope: !4109)
!4200 = !DILocation(line: 153, column: 12, scope: !4109)
!4201 = !DILocation(line: 155, column: 7, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 155, column: 6)
!4203 = !DILocation(line: 155, column: 6, scope: !4202)
!4204 = !DILocation(line: 155, column: 19, scope: !4202)
!4205 = !DILocation(line: 155, column: 18, scope: !4202)
!4206 = !DILocation(line: 155, column: 16, scope: !4202)
!4207 = !DILocation(line: 155, column: 6, scope: !4109)
!4208 = !DILocation(line: 156, column: 16, scope: !4202)
!4209 = !DILocation(line: 156, column: 15, scope: !4202)
!4210 = !DILocation(line: 156, column: 4, scope: !4202)
!4211 = !DILocation(line: 156, column: 13, scope: !4202)
!4212 = !DILocation(line: 156, column: 3, scope: !4202)
!4213 = !DILocation(line: 157, column: 1, scope: !4109)
!4214 = distinct !DISubprogram(name: "devfreq_set_target", scope: !3, file: !3, line: 347, type: !4215, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{!173, !177, !165, !174}
!4217 = !DILocalVariable(name: "devfreq", arg: 1, scope: !4214, file: !3, line: 347, type: !177)
!4218 = !DILocation(line: 347, column: 47, scope: !4214)
!4219 = !DILocalVariable(name: "new_freq", arg: 2, scope: !4214, file: !3, line: 347, type: !165)
!4220 = !DILocation(line: 347, column: 70, scope: !4214)
!4221 = !DILocalVariable(name: "flags", arg: 3, scope: !4214, file: !3, line: 348, type: !174)
!4222 = !DILocation(line: 348, column: 14, scope: !4214)
!4223 = !DILocalVariable(name: "freqs", scope: !4214, file: !3, line: 350, type: !4224)
!4224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devfreq_freqs", file: !98, line: 207, size: 128, elements: !4225)
!4225 = !{!4226, !4227}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "old", scope: !4224, file: !98, line: 208, baseType: !165, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "new", scope: !4224, file: !98, line: 209, baseType: !165, size: 64, offset: 64)
!4228 = !DILocation(line: 350, column: 23, scope: !4214)
!4229 = !DILocalVariable(name: "cur_freq", scope: !4214, file: !3, line: 351, type: !165)
!4230 = !DILocation(line: 351, column: 16, scope: !4214)
!4231 = !DILocalVariable(name: "err", scope: !4214, file: !3, line: 352, type: !173)
!4232 = !DILocation(line: 352, column: 6, scope: !4214)
!4233 = !DILocation(line: 354, column: 6, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 354, column: 6)
!4235 = !DILocation(line: 354, column: 15, scope: !4234)
!4236 = !DILocation(line: 354, column: 24, scope: !4234)
!4237 = !DILocation(line: 354, column: 6, scope: !4214)
!4238 = !DILocation(line: 355, column: 3, scope: !4234)
!4239 = !DILocation(line: 355, column: 12, scope: !4234)
!4240 = !DILocation(line: 355, column: 21, scope: !4234)
!4241 = !DILocation(line: 355, column: 34, scope: !4234)
!4242 = !DILocation(line: 355, column: 43, scope: !4234)
!4243 = !DILocation(line: 355, column: 47, scope: !4234)
!4244 = !DILocation(line: 357, column: 14, scope: !4234)
!4245 = !DILocation(line: 357, column: 23, scope: !4234)
!4246 = !DILocation(line: 357, column: 12, scope: !4234)
!4247 = !DILocation(line: 359, column: 14, scope: !4214)
!4248 = !DILocation(line: 359, column: 8, scope: !4214)
!4249 = !DILocation(line: 359, column: 12, scope: !4214)
!4250 = !DILocation(line: 360, column: 14, scope: !4214)
!4251 = !DILocation(line: 360, column: 8, scope: !4214)
!4252 = !DILocation(line: 360, column: 12, scope: !4214)
!4253 = !DILocation(line: 361, column: 28, scope: !4214)
!4254 = !DILocation(line: 361, column: 2, scope: !4214)
!4255 = !DILocation(line: 363, column: 8, scope: !4214)
!4256 = !DILocation(line: 363, column: 17, scope: !4214)
!4257 = !DILocation(line: 363, column: 26, scope: !4214)
!4258 = !DILocation(line: 363, column: 33, scope: !4214)
!4259 = !DILocation(line: 363, column: 42, scope: !4214)
!4260 = !DILocation(line: 363, column: 46, scope: !4214)
!4261 = !DILocation(line: 363, column: 65, scope: !4214)
!4262 = !DILocation(line: 363, column: 6, scope: !4214)
!4263 = !DILocation(line: 364, column: 6, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 364, column: 6)
!4265 = !DILocation(line: 364, column: 6, scope: !4214)
!4266 = !DILocation(line: 365, column: 15, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 364, column: 11)
!4268 = !DILocation(line: 365, column: 9, scope: !4267)
!4269 = !DILocation(line: 365, column: 13, scope: !4267)
!4270 = !DILocation(line: 366, column: 29, scope: !4267)
!4271 = !DILocation(line: 366, column: 3, scope: !4267)
!4272 = !DILocation(line: 367, column: 10, scope: !4267)
!4273 = !DILocation(line: 367, column: 3, scope: !4267)
!4274 = !DILocation(line: 370, column: 14, scope: !4214)
!4275 = !DILocation(line: 370, column: 8, scope: !4214)
!4276 = !DILocation(line: 370, column: 12, scope: !4214)
!4277 = !DILocation(line: 371, column: 28, scope: !4214)
!4278 = !DILocation(line: 371, column: 2, scope: !4214)
!4279 = !DILocation(line: 373, column: 28, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 373, column: 6)
!4281 = !DILocation(line: 373, column: 37, scope: !4280)
!4282 = !DILocation(line: 373, column: 6, scope: !4280)
!4283 = !DILocation(line: 373, column: 6, scope: !4214)
!4284 = !DILocation(line: 374, column: 3, scope: !4280)
!4285 = !DILocation(line: 377, column: 27, scope: !4214)
!4286 = !DILocation(line: 377, column: 2, scope: !4214)
!4287 = !DILocation(line: 377, column: 11, scope: !4214)
!4288 = !DILocation(line: 377, column: 25, scope: !4214)
!4289 = !DILocation(line: 379, column: 6, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 379, column: 6)
!4291 = !DILocation(line: 379, column: 15, scope: !4290)
!4292 = !DILocation(line: 379, column: 6, scope: !4214)
!4293 = !DILocation(line: 380, column: 26, scope: !4290)
!4294 = !DILocation(line: 380, column: 3, scope: !4290)
!4295 = !DILocation(line: 380, column: 12, scope: !4290)
!4296 = !DILocation(line: 380, column: 24, scope: !4290)
!4297 = !DILocation(line: 382, column: 9, scope: !4214)
!4298 = !DILocation(line: 382, column: 2, scope: !4214)
!4299 = !DILocation(line: 383, column: 1, scope: !4214)
!4300 = distinct !DISubprogram(name: "devfreq_monitor_start", scope: !3, file: !3, line: 457, type: !4301, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{null, !177}
!4303 = !DILocalVariable(name: "m", arg: 1, scope: !4304, file: !4009, line: 363, type: !2663)
!4304 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !4009, file: !4009, line: 363, type: !4305, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{!165, !2663}
!4307 = !DILocation(line: 363, column: 74, scope: !4304, inlinedAt: !4308)
!4308 = distinct !DILocation(line: 475, column: 4, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 473, column: 6)
!4310 = !DILocalVariable(name: "devfreq", arg: 1, scope: !4300, file: !3, line: 457, type: !177)
!4311 = !DILocation(line: 457, column: 44, scope: !4300)
!4312 = !DILocation(line: 459, column: 6, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 459, column: 6)
!4314 = !DILocation(line: 459, column: 15, scope: !4313)
!4315 = !DILocation(line: 459, column: 25, scope: !4313)
!4316 = !DILocation(line: 459, column: 6, scope: !4300)
!4317 = !DILocation(line: 460, column: 3, scope: !4313)
!4318 = !DILocation(line: 462, column: 10, scope: !4300)
!4319 = !DILocation(line: 462, column: 19, scope: !4300)
!4320 = !DILocation(line: 462, column: 28, scope: !4300)
!4321 = !DILocation(line: 462, column: 2, scope: !4300)
!4322 = !DILocation(line: 464, column: 3, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 462, column: 35)
!4324 = !DILocation(line: 464, column: 3, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 464, column: 3)
!4326 = !DILocation(line: 464, column: 3, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4325, file: !3, line: 464, column: 3)
!4328 = !DILocation(line: 465, column: 3, scope: !4323)
!4329 = !DILocation(line: 467, column: 3, scope: !4323)
!4330 = !DILocation(line: 467, column: 3, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 467, column: 3)
!4332 = !DILocation(line: 467, column: 3, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 467, column: 3)
!4334 = !DILocation(line: 468, column: 3, scope: !4323)
!4335 = !DILocation(line: 470, column: 3, scope: !4323)
!4336 = !DILocation(line: 473, column: 6, scope: !4309)
!4337 = !DILocation(line: 473, column: 15, scope: !4309)
!4338 = !DILocation(line: 473, column: 24, scope: !4309)
!4339 = !DILocation(line: 473, column: 6, scope: !4300)
!4340 = !DILocation(line: 474, column: 22, scope: !4309)
!4341 = !DILocation(line: 474, column: 35, scope: !4309)
!4342 = !DILocation(line: 474, column: 44, scope: !4309)
!4343 = !DILocation(line: 475, column: 21, scope: !4309)
!4344 = !DILocation(line: 475, column: 30, scope: !4309)
!4345 = !DILocation(line: 475, column: 39, scope: !4309)
!4346 = !DILocation(line: 365, column: 27, scope: !4347, inlinedAt: !4308)
!4347 = distinct !DILexicalBlock(scope: !4304, file: !4009, line: 365, column: 6)
!4348 = !DILocation(line: 365, column: 6, scope: !4347, inlinedAt: !4308)
!4349 = !DILocation(line: 365, column: 6, scope: !4304, inlinedAt: !4308)
!4350 = !DILocation(line: 366, column: 12, scope: !4351, inlinedAt: !4308)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !4009, line: 366, column: 7)
!4352 = distinct !DILexicalBlock(scope: !4347, file: !4009, line: 365, column: 31)
!4353 = !DILocation(line: 366, column: 14, scope: !4351, inlinedAt: !4308)
!4354 = !DILocation(line: 366, column: 7, scope: !4352, inlinedAt: !4308)
!4355 = !DILocation(line: 367, column: 4, scope: !4351, inlinedAt: !4308)
!4356 = !DILocation(line: 368, column: 28, scope: !4352, inlinedAt: !4308)
!4357 = !DILocation(line: 368, column: 10, scope: !4352, inlinedAt: !4308)
!4358 = !DILocation(line: 368, column: 3, scope: !4352, inlinedAt: !4308)
!4359 = !DILocation(line: 370, column: 29, scope: !4360, inlinedAt: !4308)
!4360 = distinct !DILexicalBlock(scope: !4347, file: !4009, line: 369, column: 9)
!4361 = !DILocation(line: 370, column: 10, scope: !4360, inlinedAt: !4308)
!4362 = !DILocation(line: 370, column: 3, scope: !4360, inlinedAt: !4308)
!4363 = !DILocation(line: 372, column: 1, scope: !4304, inlinedAt: !4308)
!4364 = !DILocation(line: 474, column: 3, scope: !4309)
!4365 = !DILocation(line: 476, column: 1, scope: !4300)
!4366 = distinct !DISubprogram(name: "__init_work", scope: !104, file: !104, line: 215, type: !4367, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4367 = !DISubroutineType(types: !4368)
!4368 = !{null, !1877, !173}
!4369 = !DILocalVariable(name: "work", arg: 1, scope: !4366, file: !104, line: 215, type: !1877)
!4370 = !DILocation(line: 215, column: 52, scope: !4366)
!4371 = !DILocalVariable(name: "onstack", arg: 2, scope: !4366, file: !104, line: 215, type: !173)
!4372 = !DILocation(line: 215, column: 62, scope: !4366)
!4373 = !DILocation(line: 215, column: 73, scope: !4366)
!4374 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !4375, file: !4375, line: 33, type: !4376, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4375 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!4376 = !DISubroutineType(types: !4377)
!4377 = !{null, !184}
!4378 = !DILocalVariable(name: "list", arg: 1, scope: !4374, file: !4375, line: 33, type: !184)
!4379 = !DILocation(line: 33, column: 53, scope: !4374)
!4380 = !DILocation(line: 35, column: 2, scope: !4374)
!4381 = !DILocation(line: 35, column: 2, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4374, file: !4375, line: 35, column: 2)
!4383 = !DILocation(line: 35, column: 2, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4382, file: !4375, line: 35, column: 2)
!4385 = !DILocation(line: 35, column: 2, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4382, file: !4375, line: 35, column: 2)
!4387 = !DILocation(line: 36, column: 15, scope: !4374)
!4388 = !DILocation(line: 36, column: 2, scope: !4374)
!4389 = !DILocation(line: 36, column: 8, scope: !4374)
!4390 = !DILocation(line: 36, column: 13, scope: !4374)
!4391 = !DILocation(line: 37, column: 1, scope: !4374)
!4392 = distinct !DISubprogram(name: "devfreq_monitor", scope: !3, file: !3, line: 430, type: !1875, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4393 = !DILocation(line: 363, column: 74, scope: !4304, inlinedAt: !4394)
!4394 = distinct !DILocation(line: 442, column: 5, scope: !4392)
!4395 = !DILocalVariable(name: "work", arg: 1, scope: !4392, file: !3, line: 430, type: !1877)
!4396 = !DILocation(line: 430, column: 49, scope: !4392)
!4397 = !DILocalVariable(name: "err", scope: !4392, file: !3, line: 432, type: !173)
!4398 = !DILocation(line: 432, column: 6, scope: !4392)
!4399 = !DILocalVariable(name: "devfreq", scope: !4392, file: !3, line: 433, type: !177)
!4400 = !DILocation(line: 433, column: 18, scope: !4392)
!4401 = !DILocalVariable(name: "__mptr", scope: !4402, file: !3, line: 433, type: !176)
!4402 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 433, column: 28)
!4403 = !DILocation(line: 433, column: 28, scope: !4402)
!4404 = !DILocation(line: 433, column: 28, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 433, column: 28)
!4406 = !DILocation(line: 436, column: 14, scope: !4392)
!4407 = !DILocation(line: 436, column: 23, scope: !4392)
!4408 = !DILocation(line: 436, column: 2, scope: !4392)
!4409 = !DILocation(line: 437, column: 23, scope: !4392)
!4410 = !DILocation(line: 437, column: 8, scope: !4392)
!4411 = !DILocation(line: 437, column: 6, scope: !4392)
!4412 = !DILocation(line: 438, column: 6, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 438, column: 6)
!4414 = !DILocation(line: 438, column: 6, scope: !4392)
!4415 = !DILocation(line: 439, column: 3, scope: !4413)
!4416 = !DILocation(line: 441, column: 21, scope: !4392)
!4417 = !DILocation(line: 441, column: 34, scope: !4392)
!4418 = !DILocation(line: 441, column: 43, scope: !4392)
!4419 = !DILocation(line: 442, column: 22, scope: !4392)
!4420 = !DILocation(line: 442, column: 31, scope: !4392)
!4421 = !DILocation(line: 442, column: 40, scope: !4392)
!4422 = !DILocation(line: 365, column: 27, scope: !4347, inlinedAt: !4394)
!4423 = !DILocation(line: 365, column: 6, scope: !4347, inlinedAt: !4394)
!4424 = !DILocation(line: 365, column: 6, scope: !4304, inlinedAt: !4394)
!4425 = !DILocation(line: 366, column: 12, scope: !4351, inlinedAt: !4394)
!4426 = !DILocation(line: 366, column: 14, scope: !4351, inlinedAt: !4394)
!4427 = !DILocation(line: 366, column: 7, scope: !4352, inlinedAt: !4394)
!4428 = !DILocation(line: 367, column: 4, scope: !4351, inlinedAt: !4394)
!4429 = !DILocation(line: 368, column: 28, scope: !4352, inlinedAt: !4394)
!4430 = !DILocation(line: 368, column: 10, scope: !4352, inlinedAt: !4394)
!4431 = !DILocation(line: 368, column: 3, scope: !4352, inlinedAt: !4394)
!4432 = !DILocation(line: 370, column: 29, scope: !4360, inlinedAt: !4394)
!4433 = !DILocation(line: 370, column: 10, scope: !4360, inlinedAt: !4394)
!4434 = !DILocation(line: 370, column: 3, scope: !4360, inlinedAt: !4394)
!4435 = !DILocation(line: 372, column: 1, scope: !4304, inlinedAt: !4394)
!4436 = !DILocation(line: 441, column: 2, scope: !4392)
!4437 = !DILocation(line: 443, column: 16, scope: !4392)
!4438 = !DILocation(line: 443, column: 25, scope: !4392)
!4439 = !DILocation(line: 443, column: 2, scope: !4392)
!4440 = !DILocation(line: 445, column: 24, scope: !4392)
!4441 = !DILocation(line: 445, column: 2, scope: !4392)
!4442 = !DILocation(line: 446, column: 1, scope: !4392)
!4443 = distinct !DISubprogram(name: "queue_delayed_work", scope: !104, file: !104, line: 518, type: !4444, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4444 = !DISubroutineType(types: !4445)
!4445 = !{!473, !2629, !4446, !165}
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!4447 = !DILocalVariable(name: "wq", arg: 1, scope: !4443, file: !104, line: 518, type: !2629)
!4448 = !DILocation(line: 518, column: 64, scope: !4443)
!4449 = !DILocalVariable(name: "dwork", arg: 2, scope: !4443, file: !104, line: 519, type: !4446)
!4450 = !DILocation(line: 519, column: 32, scope: !4443)
!4451 = !DILocalVariable(name: "delay", arg: 3, scope: !4443, file: !104, line: 520, type: !165)
!4452 = !DILocation(line: 520, column: 25, scope: !4443)
!4453 = !DILocation(line: 522, column: 49, scope: !4443)
!4454 = !DILocation(line: 522, column: 53, scope: !4443)
!4455 = !DILocation(line: 522, column: 60, scope: !4443)
!4456 = !DILocation(line: 522, column: 9, scope: !4443)
!4457 = !DILocation(line: 522, column: 2, scope: !4443)
!4458 = distinct !DISubprogram(name: "devfreq_monitor_stop", scope: !3, file: !3, line: 487, type: !4301, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4459 = !DILocalVariable(name: "devfreq", arg: 1, scope: !4458, file: !3, line: 487, type: !177)
!4460 = !DILocation(line: 487, column: 43, scope: !4458)
!4461 = !DILocation(line: 489, column: 6, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 489, column: 6)
!4463 = !DILocation(line: 489, column: 15, scope: !4462)
!4464 = !DILocation(line: 489, column: 25, scope: !4462)
!4465 = !DILocation(line: 489, column: 6, scope: !4458)
!4466 = !DILocation(line: 490, column: 3, scope: !4462)
!4467 = !DILocation(line: 492, column: 28, scope: !4458)
!4468 = !DILocation(line: 492, column: 37, scope: !4458)
!4469 = !DILocation(line: 492, column: 2, scope: !4458)
!4470 = !DILocation(line: 493, column: 1, scope: !4458)
!4471 = distinct !DISubprogram(name: "devfreq_monitor_suspend", scope: !3, file: !3, line: 508, type: !4301, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4472 = !DILocalVariable(name: "devfreq", arg: 1, scope: !4471, file: !3, line: 508, type: !177)
!4473 = !DILocation(line: 508, column: 46, scope: !4471)
!4474 = !DILocation(line: 510, column: 14, scope: !4471)
!4475 = !DILocation(line: 510, column: 23, scope: !4471)
!4476 = !DILocation(line: 510, column: 2, scope: !4471)
!4477 = !DILocation(line: 511, column: 6, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 511, column: 6)
!4479 = !DILocation(line: 511, column: 15, scope: !4478)
!4480 = !DILocation(line: 511, column: 6, scope: !4471)
!4481 = !DILocation(line: 512, column: 17, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 511, column: 29)
!4483 = !DILocation(line: 512, column: 26, scope: !4482)
!4484 = !DILocation(line: 512, column: 3, scope: !4482)
!4485 = !DILocation(line: 513, column: 3, scope: !4482)
!4486 = !DILocation(line: 516, column: 24, scope: !4471)
!4487 = !DILocation(line: 516, column: 33, scope: !4471)
!4488 = !DILocation(line: 516, column: 42, scope: !4471)
!4489 = !DILocation(line: 516, column: 2, scope: !4471)
!4490 = !DILocation(line: 517, column: 2, scope: !4471)
!4491 = !DILocation(line: 517, column: 11, scope: !4471)
!4492 = !DILocation(line: 517, column: 24, scope: !4471)
!4493 = !DILocation(line: 518, column: 16, scope: !4471)
!4494 = !DILocation(line: 518, column: 25, scope: !4471)
!4495 = !DILocation(line: 518, column: 2, scope: !4471)
!4496 = !DILocation(line: 520, column: 6, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 520, column: 6)
!4498 = !DILocation(line: 520, column: 15, scope: !4497)
!4499 = !DILocation(line: 520, column: 25, scope: !4497)
!4500 = !DILocation(line: 520, column: 6, scope: !4471)
!4501 = !DILocation(line: 521, column: 3, scope: !4497)
!4502 = !DILocation(line: 523, column: 28, scope: !4471)
!4503 = !DILocation(line: 523, column: 37, scope: !4471)
!4504 = !DILocation(line: 523, column: 2, scope: !4471)
!4505 = !DILocation(line: 524, column: 1, scope: !4471)
!4506 = distinct !DISubprogram(name: "devfreq_monitor_resume", scope: !3, file: !3, line: 535, type: !4301, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4507 = !DILocation(line: 363, column: 74, scope: !4304, inlinedAt: !4508)
!4508 = distinct !DILocation(line: 549, column: 4, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 546, column: 6)
!4510 = !DILocalVariable(name: "devfreq", arg: 1, scope: !4506, file: !3, line: 535, type: !177)
!4511 = !DILocation(line: 535, column: 45, scope: !4506)
!4512 = !DILocalVariable(name: "freq", scope: !4506, file: !3, line: 537, type: !165)
!4513 = !DILocation(line: 537, column: 16, scope: !4506)
!4514 = !DILocation(line: 539, column: 14, scope: !4506)
!4515 = !DILocation(line: 539, column: 23, scope: !4506)
!4516 = !DILocation(line: 539, column: 2, scope: !4506)
!4517 = !DILocation(line: 540, column: 7, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 540, column: 6)
!4519 = !DILocation(line: 540, column: 16, scope: !4518)
!4520 = !DILocation(line: 540, column: 6, scope: !4506)
!4521 = !DILocation(line: 541, column: 3, scope: !4518)
!4522 = !DILocation(line: 543, column: 6, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 543, column: 6)
!4524 = !DILocation(line: 543, column: 15, scope: !4523)
!4525 = !DILocation(line: 543, column: 25, scope: !4523)
!4526 = !DILocation(line: 543, column: 6, scope: !4506)
!4527 = !DILocation(line: 544, column: 3, scope: !4523)
!4528 = !DILocation(line: 546, column: 7, scope: !4509)
!4529 = !DILocation(line: 546, column: 44, scope: !4509)
!4530 = !DILocation(line: 547, column: 4, scope: !4509)
!4531 = !DILocation(line: 547, column: 13, scope: !4509)
!4532 = !DILocation(line: 547, column: 22, scope: !4509)
!4533 = !DILocation(line: 546, column: 6, scope: !4506)
!4534 = !DILocation(line: 548, column: 22, scope: !4509)
!4535 = !DILocation(line: 548, column: 35, scope: !4509)
!4536 = !DILocation(line: 548, column: 44, scope: !4509)
!4537 = !DILocation(line: 549, column: 21, scope: !4509)
!4538 = !DILocation(line: 549, column: 30, scope: !4509)
!4539 = !DILocation(line: 549, column: 39, scope: !4509)
!4540 = !DILocation(line: 365, column: 27, scope: !4347, inlinedAt: !4508)
!4541 = !DILocation(line: 365, column: 6, scope: !4347, inlinedAt: !4508)
!4542 = !DILocation(line: 365, column: 6, scope: !4304, inlinedAt: !4508)
!4543 = !DILocation(line: 366, column: 12, scope: !4351, inlinedAt: !4508)
!4544 = !DILocation(line: 366, column: 14, scope: !4351, inlinedAt: !4508)
!4545 = !DILocation(line: 366, column: 7, scope: !4352, inlinedAt: !4508)
!4546 = !DILocation(line: 367, column: 4, scope: !4351, inlinedAt: !4508)
!4547 = !DILocation(line: 368, column: 28, scope: !4352, inlinedAt: !4508)
!4548 = !DILocation(line: 368, column: 10, scope: !4352, inlinedAt: !4508)
!4549 = !DILocation(line: 368, column: 3, scope: !4352, inlinedAt: !4508)
!4550 = !DILocation(line: 370, column: 29, scope: !4360, inlinedAt: !4508)
!4551 = !DILocation(line: 370, column: 10, scope: !4360, inlinedAt: !4508)
!4552 = !DILocation(line: 370, column: 3, scope: !4360, inlinedAt: !4508)
!4553 = !DILocation(line: 372, column: 1, scope: !4304, inlinedAt: !4508)
!4554 = !DILocation(line: 548, column: 3, scope: !4509)
!4555 = !DILabel(scope: !4506, name: "out_update", file: !3, line: 551)
!4556 = !DILocation(line: 551, column: 1, scope: !4506)
!4557 = !DILocation(line: 552, column: 31, scope: !4506)
!4558 = !DILocation(line: 552, column: 2, scope: !4506)
!4559 = !DILocation(line: 552, column: 11, scope: !4506)
!4560 = !DILocation(line: 552, column: 17, scope: !4506)
!4561 = !DILocation(line: 552, column: 29, scope: !4506)
!4562 = !DILocation(line: 553, column: 2, scope: !4506)
!4563 = !DILocation(line: 553, column: 11, scope: !4506)
!4564 = !DILocation(line: 553, column: 24, scope: !4506)
!4565 = !DILocation(line: 555, column: 6, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 555, column: 6)
!4567 = !DILocation(line: 555, column: 15, scope: !4566)
!4568 = !DILocation(line: 555, column: 24, scope: !4566)
!4569 = !DILocation(line: 555, column: 37, scope: !4566)
!4570 = !DILocation(line: 556, column: 4, scope: !4566)
!4571 = !DILocation(line: 556, column: 13, scope: !4566)
!4572 = !DILocation(line: 556, column: 22, scope: !4566)
!4573 = !DILocation(line: 556, column: 35, scope: !4566)
!4574 = !DILocation(line: 556, column: 44, scope: !4566)
!4575 = !DILocation(line: 556, column: 48, scope: !4566)
!4576 = !DILocation(line: 555, column: 6, scope: !4506)
!4577 = !DILocation(line: 557, column: 28, scope: !4566)
!4578 = !DILocation(line: 557, column: 3, scope: !4566)
!4579 = !DILocation(line: 557, column: 12, scope: !4566)
!4580 = !DILocation(line: 557, column: 26, scope: !4566)
!4581 = !DILocation(line: 556, column: 61, scope: !4566)
!4582 = !DILabel(scope: !4506, name: "out", file: !3, line: 559)
!4583 = !DILocation(line: 559, column: 1, scope: !4506)
!4584 = !DILocation(line: 560, column: 16, scope: !4506)
!4585 = !DILocation(line: 560, column: 25, scope: !4506)
!4586 = !DILocation(line: 560, column: 2, scope: !4506)
!4587 = !DILocation(line: 561, column: 1, scope: !4506)
!4588 = distinct !DISubprogram(name: "test_bit", scope: !4589, file: !4589, line: 132, type: !4590, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4589 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!473, !105, !4592}
!4592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4593, size: 64)
!4593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4594)
!4594 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !165)
!4595 = !DILocalVariable(name: "nr", arg: 1, scope: !4596, file: !4597, line: 210, type: !105)
!4596 = distinct !DISubprogram(name: "variable_test_bit", scope: !4597, file: !4597, line: 210, type: !4590, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4597 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!4598 = !DILocation(line: 210, column: 52, scope: !4596, inlinedAt: !4599)
!4599 = distinct !DILocation(line: 135, column: 9, scope: !4588)
!4600 = !DILocalVariable(name: "addr", arg: 2, scope: !4596, file: !4597, line: 210, type: !4592)
!4601 = !DILocation(line: 210, column: 86, scope: !4596, inlinedAt: !4599)
!4602 = !DILocalVariable(name: "oldbit", scope: !4596, file: !4597, line: 212, type: !473)
!4603 = !DILocation(line: 212, column: 7, scope: !4596, inlinedAt: !4599)
!4604 = !DILocalVariable(name: "nr", arg: 1, scope: !4605, file: !4597, line: 204, type: !105)
!4605 = distinct !DISubprogram(name: "constant_test_bit", scope: !4597, file: !4597, line: 204, type: !4590, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4606 = !DILocation(line: 204, column: 52, scope: !4605, inlinedAt: !4607)
!4607 = distinct !DILocation(line: 135, column: 9, scope: !4588)
!4608 = !DILocalVariable(name: "addr", arg: 2, scope: !4605, file: !4597, line: 204, type: !4592)
!4609 = !DILocation(line: 204, column: 86, scope: !4605, inlinedAt: !4607)
!4610 = !DILocalVariable(name: "v", arg: 1, scope: !4611, file: !4612, line: 69, type: !4615)
!4611 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !4612, file: !4612, line: 69, type: !4613, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4612 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4613 = !DISubroutineType(types: !4614)
!4614 = !{null, !4615, !309}
!4615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4616, size: 64)
!4616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4617)
!4617 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4618 = !DILocation(line: 69, column: 73, scope: !4611, inlinedAt: !4619)
!4619 = distinct !DILocation(line: 134, column: 2, scope: !4588)
!4620 = !DILocalVariable(name: "size", arg: 2, scope: !4611, file: !4612, line: 69, type: !309)
!4621 = !DILocation(line: 69, column: 83, scope: !4611, inlinedAt: !4619)
!4622 = !DILocalVariable(name: "nr", arg: 1, scope: !4588, file: !4589, line: 132, type: !105)
!4623 = !DILocation(line: 132, column: 34, scope: !4588)
!4624 = !DILocalVariable(name: "addr", arg: 2, scope: !4588, file: !4589, line: 132, type: !4592)
!4625 = !DILocation(line: 132, column: 68, scope: !4588)
!4626 = !DILocation(line: 134, column: 25, scope: !4588)
!4627 = !DILocation(line: 134, column: 32, scope: !4588)
!4628 = !DILocation(line: 134, column: 30, scope: !4588)
!4629 = !DILocation(line: 71, column: 19, scope: !4611, inlinedAt: !4619)
!4630 = !DILocation(line: 71, column: 22, scope: !4611, inlinedAt: !4619)
!4631 = !DILocation(line: 71, column: 2, scope: !4611, inlinedAt: !4619)
!4632 = !DILocation(line: 72, column: 2, scope: !4611, inlinedAt: !4619)
!4633 = !DILocation(line: 135, column: 9, scope: !4588)
!4634 = !DILocation(line: 206, column: 19, scope: !4605, inlinedAt: !4607)
!4635 = !DILocation(line: 206, column: 22, scope: !4605, inlinedAt: !4607)
!4636 = !DILocation(line: 206, column: 15, scope: !4605, inlinedAt: !4607)
!4637 = !DILocation(line: 207, column: 4, scope: !4605, inlinedAt: !4607)
!4638 = !DILocation(line: 207, column: 9, scope: !4605, inlinedAt: !4607)
!4639 = !DILocation(line: 207, column: 12, scope: !4605, inlinedAt: !4607)
!4640 = !DILocation(line: 206, column: 44, scope: !4605, inlinedAt: !4607)
!4641 = !DILocation(line: 207, column: 37, scope: !4605, inlinedAt: !4607)
!4642 = !DILocation(line: 217, column: 33, scope: !4596, inlinedAt: !4599)
!4643 = !DILocation(line: 217, column: 46, scope: !4596, inlinedAt: !4599)
!4644 = !DILocation(line: 214, column: 2, scope: !4596, inlinedAt: !4599)
!4645 = !{i32 -2147150153, i32 -2147150093}
!4646 = !DILocation(line: 219, column: 9, scope: !4596, inlinedAt: !4599)
!4647 = !DILocation(line: 135, column: 2, scope: !4588)
!4648 = distinct !DISubprogram(name: "devfreq_update_interval", scope: !3, file: !3, line: 572, type: !4649, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{null, !177, !2519}
!4651 = !DILocation(line: 363, column: 74, scope: !4304, inlinedAt: !4652)
!4652 = distinct !DILocation(line: 607, column: 5, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 605, column: 7)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 601, column: 29)
!4655 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 601, column: 6)
!4656 = !DILocation(line: 363, column: 74, scope: !4304, inlinedAt: !4657)
!4657 = distinct !DILocation(line: 596, column: 4, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 594, column: 18)
!4659 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 594, column: 6)
!4660 = !DILocalVariable(name: "devfreq", arg: 1, scope: !4648, file: !3, line: 572, type: !177)
!4661 = !DILocation(line: 572, column: 46, scope: !4648)
!4662 = !DILocalVariable(name: "delay", arg: 2, scope: !4648, file: !3, line: 572, type: !2519)
!4663 = !DILocation(line: 572, column: 69, scope: !4648)
!4664 = !DILocalVariable(name: "cur_delay", scope: !4648, file: !3, line: 574, type: !7)
!4665 = !DILocation(line: 574, column: 15, scope: !4648)
!4666 = !DILocation(line: 574, column: 27, scope: !4648)
!4667 = !DILocation(line: 574, column: 36, scope: !4648)
!4668 = !DILocation(line: 574, column: 45, scope: !4648)
!4669 = !DILocalVariable(name: "new_delay", scope: !4648, file: !3, line: 575, type: !7)
!4670 = !DILocation(line: 575, column: 15, scope: !4648)
!4671 = !DILocation(line: 575, column: 28, scope: !4648)
!4672 = !DILocation(line: 575, column: 27, scope: !4648)
!4673 = !DILocation(line: 577, column: 14, scope: !4648)
!4674 = !DILocation(line: 577, column: 23, scope: !4648)
!4675 = !DILocation(line: 577, column: 2, scope: !4648)
!4676 = !DILocation(line: 578, column: 33, scope: !4648)
!4677 = !DILocation(line: 578, column: 2, scope: !4648)
!4678 = !DILocation(line: 578, column: 11, scope: !4648)
!4679 = !DILocation(line: 578, column: 20, scope: !4648)
!4680 = !DILocation(line: 578, column: 31, scope: !4648)
!4681 = !DILocation(line: 580, column: 6, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 580, column: 6)
!4683 = !DILocation(line: 580, column: 15, scope: !4682)
!4684 = !DILocation(line: 580, column: 6, scope: !4648)
!4685 = !DILocation(line: 581, column: 3, scope: !4682)
!4686 = !DILocation(line: 583, column: 6, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 583, column: 6)
!4688 = !DILocation(line: 583, column: 15, scope: !4687)
!4689 = !DILocation(line: 583, column: 25, scope: !4687)
!4690 = !DILocation(line: 583, column: 6, scope: !4648)
!4691 = !DILocation(line: 584, column: 3, scope: !4687)
!4692 = !DILocation(line: 587, column: 7, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 587, column: 6)
!4694 = !DILocation(line: 587, column: 6, scope: !4648)
!4695 = !DILocation(line: 588, column: 17, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 587, column: 18)
!4697 = !DILocation(line: 588, column: 26, scope: !4696)
!4698 = !DILocation(line: 588, column: 3, scope: !4696)
!4699 = !DILocation(line: 589, column: 29, scope: !4696)
!4700 = !DILocation(line: 589, column: 38, scope: !4696)
!4701 = !DILocation(line: 589, column: 3, scope: !4696)
!4702 = !DILocation(line: 590, column: 3, scope: !4696)
!4703 = !DILocation(line: 594, column: 7, scope: !4659)
!4704 = !DILocation(line: 594, column: 6, scope: !4648)
!4705 = !DILocation(line: 595, column: 22, scope: !4658)
!4706 = !DILocation(line: 595, column: 35, scope: !4658)
!4707 = !DILocation(line: 595, column: 44, scope: !4658)
!4708 = !DILocation(line: 596, column: 21, scope: !4658)
!4709 = !DILocation(line: 596, column: 30, scope: !4658)
!4710 = !DILocation(line: 596, column: 39, scope: !4658)
!4711 = !DILocation(line: 365, column: 27, scope: !4347, inlinedAt: !4657)
!4712 = !DILocation(line: 365, column: 6, scope: !4347, inlinedAt: !4657)
!4713 = !DILocation(line: 365, column: 6, scope: !4304, inlinedAt: !4657)
!4714 = !DILocation(line: 366, column: 12, scope: !4351, inlinedAt: !4657)
!4715 = !DILocation(line: 366, column: 14, scope: !4351, inlinedAt: !4657)
!4716 = !DILocation(line: 366, column: 7, scope: !4352, inlinedAt: !4657)
!4717 = !DILocation(line: 367, column: 4, scope: !4351, inlinedAt: !4657)
!4718 = !DILocation(line: 368, column: 28, scope: !4352, inlinedAt: !4657)
!4719 = !DILocation(line: 368, column: 10, scope: !4352, inlinedAt: !4657)
!4720 = !DILocation(line: 368, column: 3, scope: !4352, inlinedAt: !4657)
!4721 = !DILocation(line: 370, column: 29, scope: !4360, inlinedAt: !4657)
!4722 = !DILocation(line: 370, column: 10, scope: !4360, inlinedAt: !4657)
!4723 = !DILocation(line: 370, column: 3, scope: !4360, inlinedAt: !4657)
!4724 = !DILocation(line: 372, column: 1, scope: !4304, inlinedAt: !4657)
!4725 = !DILocation(line: 595, column: 3, scope: !4658)
!4726 = !DILocation(line: 597, column: 3, scope: !4658)
!4727 = !DILocation(line: 601, column: 6, scope: !4655)
!4728 = !DILocation(line: 601, column: 18, scope: !4655)
!4729 = !DILocation(line: 601, column: 16, scope: !4655)
!4730 = !DILocation(line: 601, column: 6, scope: !4648)
!4731 = !DILocation(line: 602, column: 17, scope: !4654)
!4732 = !DILocation(line: 602, column: 26, scope: !4654)
!4733 = !DILocation(line: 602, column: 3, scope: !4654)
!4734 = !DILocation(line: 603, column: 29, scope: !4654)
!4735 = !DILocation(line: 603, column: 38, scope: !4654)
!4736 = !DILocation(line: 603, column: 3, scope: !4654)
!4737 = !DILocation(line: 604, column: 15, scope: !4654)
!4738 = !DILocation(line: 604, column: 24, scope: !4654)
!4739 = !DILocation(line: 604, column: 3, scope: !4654)
!4740 = !DILocation(line: 605, column: 8, scope: !4653)
!4741 = !DILocation(line: 605, column: 17, scope: !4653)
!4742 = !DILocation(line: 605, column: 7, scope: !4654)
!4743 = !DILocation(line: 606, column: 23, scope: !4653)
!4744 = !DILocation(line: 606, column: 36, scope: !4653)
!4745 = !DILocation(line: 606, column: 45, scope: !4653)
!4746 = !DILocation(line: 607, column: 22, scope: !4653)
!4747 = !DILocation(line: 607, column: 31, scope: !4653)
!4748 = !DILocation(line: 607, column: 40, scope: !4653)
!4749 = !DILocation(line: 365, column: 27, scope: !4347, inlinedAt: !4652)
!4750 = !DILocation(line: 365, column: 6, scope: !4347, inlinedAt: !4652)
!4751 = !DILocation(line: 365, column: 6, scope: !4304, inlinedAt: !4652)
!4752 = !DILocation(line: 366, column: 12, scope: !4351, inlinedAt: !4652)
!4753 = !DILocation(line: 366, column: 14, scope: !4351, inlinedAt: !4652)
!4754 = !DILocation(line: 366, column: 7, scope: !4352, inlinedAt: !4652)
!4755 = !DILocation(line: 367, column: 4, scope: !4351, inlinedAt: !4652)
!4756 = !DILocation(line: 368, column: 28, scope: !4352, inlinedAt: !4652)
!4757 = !DILocation(line: 368, column: 10, scope: !4352, inlinedAt: !4652)
!4758 = !DILocation(line: 368, column: 3, scope: !4352, inlinedAt: !4652)
!4759 = !DILocation(line: 370, column: 29, scope: !4360, inlinedAt: !4652)
!4760 = !DILocation(line: 370, column: 10, scope: !4360, inlinedAt: !4652)
!4761 = !DILocation(line: 370, column: 3, scope: !4360, inlinedAt: !4652)
!4762 = !DILocation(line: 372, column: 1, scope: !4304, inlinedAt: !4652)
!4763 = !DILocation(line: 606, column: 4, scope: !4653)
!4764 = !DILocation(line: 608, column: 2, scope: !4654)
!4765 = !DILabel(scope: !4648, name: "out", file: !3, line: 609)
!4766 = !DILocation(line: 609, column: 1, scope: !4648)
!4767 = !DILocation(line: 610, column: 16, scope: !4648)
!4768 = !DILocation(line: 610, column: 25, scope: !4648)
!4769 = !DILocation(line: 610, column: 2, scope: !4648)
!4770 = !DILocation(line: 611, column: 1, scope: !4648)
!4771 = !DILocalVariable(name: "v", arg: 1, scope: !4772, file: !4773, line: 39, type: !4776)
!4772 = distinct !DISubprogram(name: "arch_atomic_set", scope: !4773, file: !4773, line: 39, type: !4774, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4773 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!4774 = !DISubroutineType(types: !4775)
!4775 = !{null, !4776, !173}
!4776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!4777 = !DILocation(line: 39, column: 55, scope: !4772, inlinedAt: !4778)
!4778 = distinct !DILocation(line: 46, column: 2, scope: !4779, inlinedAt: !4781)
!4779 = distinct !DISubprogram(name: "atomic_set", scope: !4780, file: !4780, line: 43, type: !4774, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4780 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4781 = distinct !DILocation(line: 817, column: 2, scope: !3844)
!4782 = !DILocalVariable(name: "i", arg: 2, scope: !4772, file: !4773, line: 39, type: !173)
!4783 = !DILocation(line: 39, column: 62, scope: !4772, inlinedAt: !4778)
!4784 = !DILocalVariable(name: "v", arg: 1, scope: !4785, file: !4612, line: 84, type: !4615)
!4785 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !4612, file: !4612, line: 84, type: !4613, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!4786 = !DILocation(line: 84, column: 74, scope: !4785, inlinedAt: !4787)
!4787 = distinct !DILocation(line: 45, column: 2, scope: !4779, inlinedAt: !4781)
!4788 = !DILocalVariable(name: "size", arg: 2, scope: !4785, file: !4612, line: 84, type: !309)
!4789 = !DILocation(line: 84, column: 84, scope: !4785, inlinedAt: !4787)
!4790 = !DILocalVariable(name: "v", arg: 1, scope: !4779, file: !4780, line: 43, type: !4776)
!4791 = !DILocation(line: 43, column: 22, scope: !4779, inlinedAt: !4781)
!4792 = !DILocalVariable(name: "i", arg: 2, scope: !4779, file: !4780, line: 43, type: !173)
!4793 = !DILocation(line: 43, column: 29, scope: !4779, inlinedAt: !4781)
!4794 = !DILocalVariable(name: "dev", arg: 1, scope: !3844, file: !3, line: 746, type: !3199)
!4795 = !DILocation(line: 746, column: 51, scope: !3844)
!4796 = !DILocalVariable(name: "profile", arg: 2, scope: !3844, file: !3, line: 747, type: !3740)
!4797 = !DILocation(line: 747, column: 36, scope: !3844)
!4798 = !DILocalVariable(name: "governor_name", arg: 3, scope: !3844, file: !3, line: 748, type: !225)
!4799 = !DILocation(line: 748, column: 20, scope: !3844)
!4800 = !DILocalVariable(name: "data", arg: 4, scope: !3844, file: !3, line: 749, type: !176)
!4801 = !DILocation(line: 749, column: 14, scope: !3844)
!4802 = !DILocalVariable(name: "devfreq", scope: !3844, file: !3, line: 751, type: !177)
!4803 = !DILocation(line: 751, column: 18, scope: !3844)
!4804 = !DILocalVariable(name: "governor", scope: !3844, file: !3, line: 752, type: !3840)
!4805 = !DILocation(line: 752, column: 27, scope: !3844)
!4806 = !DILocalVariable(name: "err", scope: !3844, file: !3, line: 753, type: !173)
!4807 = !DILocation(line: 753, column: 6, scope: !3844)
!4808 = !DILocation(line: 755, column: 7, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 755, column: 6)
!4810 = !DILocation(line: 755, column: 11, scope: !4809)
!4811 = !DILocation(line: 755, column: 15, scope: !4809)
!4812 = !DILocation(line: 755, column: 23, scope: !4809)
!4813 = !DILocation(line: 755, column: 27, scope: !4809)
!4814 = !DILocation(line: 755, column: 6, scope: !3844)
!4815 = !DILocation(line: 756, column: 3, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 755, column: 42)
!4817 = !DILocation(line: 757, column: 10, scope: !4816)
!4818 = !DILocation(line: 757, column: 3, scope: !4816)
!4819 = !DILocation(line: 760, column: 2, scope: !3844)
!4820 = !DILocation(line: 761, column: 32, scope: !3844)
!4821 = !DILocation(line: 761, column: 12, scope: !3844)
!4822 = !DILocation(line: 761, column: 10, scope: !3844)
!4823 = !DILocation(line: 762, column: 2, scope: !3844)
!4824 = !DILocation(line: 763, column: 14, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 763, column: 6)
!4826 = !DILocation(line: 763, column: 7, scope: !4825)
!4827 = !DILocation(line: 763, column: 6, scope: !3844)
!4828 = !DILocation(line: 764, column: 3, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 763, column: 24)
!4830 = !DILocation(line: 766, column: 7, scope: !4829)
!4831 = !DILocation(line: 767, column: 3, scope: !4829)
!4832 = !DILocation(line: 770, column: 12, scope: !3844)
!4833 = !DILocation(line: 770, column: 10, scope: !3844)
!4834 = !DILocation(line: 771, column: 7, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 771, column: 6)
!4836 = !DILocation(line: 771, column: 6, scope: !3844)
!4837 = !DILocation(line: 772, column: 7, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 771, column: 16)
!4839 = !DILocation(line: 773, column: 3, scope: !4838)
!4840 = !DILocation(line: 776, column: 2, scope: !3844)
!4841 = !DILocation(line: 776, column: 2, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 776, column: 2)
!4843 = !DILocation(line: 777, column: 14, scope: !3844)
!4844 = !DILocation(line: 777, column: 23, scope: !3844)
!4845 = !DILocation(line: 777, column: 2, scope: !3844)
!4846 = !DILocation(line: 778, column: 24, scope: !3844)
!4847 = !DILocation(line: 778, column: 2, scope: !3844)
!4848 = !DILocation(line: 778, column: 11, scope: !3844)
!4849 = !DILocation(line: 778, column: 15, scope: !3844)
!4850 = !DILocation(line: 778, column: 22, scope: !3844)
!4851 = !DILocation(line: 779, column: 23, scope: !3844)
!4852 = !DILocation(line: 779, column: 2, scope: !3844)
!4853 = !DILocation(line: 779, column: 11, scope: !3844)
!4854 = !DILocation(line: 779, column: 15, scope: !3844)
!4855 = !DILocation(line: 779, column: 21, scope: !3844)
!4856 = !DILocation(line: 780, column: 2, scope: !3844)
!4857 = !DILocation(line: 780, column: 11, scope: !3844)
!4858 = !DILocation(line: 780, column: 15, scope: !3844)
!4859 = !DILocation(line: 780, column: 23, scope: !3844)
!4860 = !DILocation(line: 781, column: 18, scope: !3844)
!4861 = !DILocation(line: 781, column: 27, scope: !3844)
!4862 = !DILocation(line: 781, column: 2, scope: !3844)
!4863 = !DILocation(line: 782, column: 21, scope: !3844)
!4864 = !DILocation(line: 782, column: 2, scope: !3844)
!4865 = !DILocation(line: 782, column: 11, scope: !3844)
!4866 = !DILocation(line: 782, column: 19, scope: !3844)
!4867 = !DILocation(line: 783, column: 10, scope: !3844)
!4868 = !DILocation(line: 783, column: 19, scope: !3844)
!4869 = !DILocation(line: 783, column: 34, scope: !3844)
!4870 = !DILocation(line: 783, column: 2, scope: !3844)
!4871 = !DILocation(line: 784, column: 27, scope: !3844)
!4872 = !DILocation(line: 784, column: 36, scope: !3844)
!4873 = !DILocation(line: 784, column: 2, scope: !3844)
!4874 = !DILocation(line: 784, column: 11, scope: !3844)
!4875 = !DILocation(line: 784, column: 25, scope: !3844)
!4876 = !DILocation(line: 785, column: 43, scope: !3844)
!4877 = !DILocation(line: 785, column: 52, scope: !3844)
!4878 = !DILocation(line: 785, column: 2, scope: !3844)
!4879 = !DILocation(line: 785, column: 11, scope: !3844)
!4880 = !DILocation(line: 785, column: 23, scope: !3844)
!4881 = !DILocation(line: 785, column: 41, scope: !3844)
!4882 = !DILocation(line: 786, column: 18, scope: !3844)
!4883 = !DILocation(line: 786, column: 2, scope: !3844)
!4884 = !DILocation(line: 786, column: 11, scope: !3844)
!4885 = !DILocation(line: 786, column: 16, scope: !3844)
!4886 = !DILocation(line: 787, column: 2, scope: !3844)
!4887 = !DILocation(line: 787, column: 11, scope: !3844)
!4888 = !DILocation(line: 787, column: 14, scope: !3844)
!4889 = !DILocation(line: 787, column: 28, scope: !3844)
!4890 = !DILocation(line: 789, column: 6, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 789, column: 6)
!4892 = !DILocation(line: 789, column: 15, scope: !4891)
!4893 = !DILocation(line: 789, column: 24, scope: !4891)
!4894 = !DILocation(line: 789, column: 30, scope: !4891)
!4895 = !DILocation(line: 790, column: 3, scope: !4891)
!4896 = !DILocation(line: 790, column: 6, scope: !4891)
!4897 = !DILocation(line: 790, column: 15, scope: !4891)
!4898 = !DILocation(line: 790, column: 24, scope: !4891)
!4899 = !DILocation(line: 790, column: 30, scope: !4891)
!4900 = !DILocation(line: 789, column: 6, scope: !3844)
!4901 = !DILocation(line: 791, column: 3, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 790, column: 52)
!4903 = !DILocation(line: 794, column: 7, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 794, column: 6)
!4905 = !DILocation(line: 794, column: 16, scope: !4904)
!4906 = !DILocation(line: 794, column: 25, scope: !4904)
!4907 = !DILocation(line: 794, column: 35, scope: !4904)
!4908 = !DILocation(line: 794, column: 39, scope: !4904)
!4909 = !DILocation(line: 794, column: 48, scope: !4904)
!4910 = !DILocation(line: 794, column: 57, scope: !4904)
!4911 = !DILocation(line: 794, column: 6, scope: !3844)
!4912 = !DILocation(line: 795, column: 17, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 794, column: 69)
!4914 = !DILocation(line: 795, column: 26, scope: !4913)
!4915 = !DILocation(line: 795, column: 3, scope: !4913)
!4916 = !DILocation(line: 796, column: 24, scope: !4913)
!4917 = !DILocation(line: 796, column: 9, scope: !4913)
!4918 = !DILocation(line: 796, column: 7, scope: !4913)
!4919 = !DILocation(line: 797, column: 7, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 797, column: 7)
!4921 = !DILocation(line: 797, column: 11, scope: !4920)
!4922 = !DILocation(line: 797, column: 7, scope: !4913)
!4923 = !DILocation(line: 798, column: 4, scope: !4920)
!4924 = !DILocation(line: 799, column: 15, scope: !4913)
!4925 = !DILocation(line: 799, column: 24, scope: !4913)
!4926 = !DILocation(line: 799, column: 3, scope: !4913)
!4927 = !DILocation(line: 800, column: 2, scope: !4913)
!4928 = !DILocation(line: 802, column: 54, scope: !3844)
!4929 = !DILocation(line: 802, column: 30, scope: !3844)
!4930 = !DILocation(line: 802, column: 2, scope: !3844)
!4931 = !DILocation(line: 802, column: 11, scope: !3844)
!4932 = !DILocation(line: 802, column: 28, scope: !3844)
!4933 = !DILocation(line: 803, column: 7, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 803, column: 6)
!4935 = !DILocation(line: 803, column: 16, scope: !4934)
!4936 = !DILocation(line: 803, column: 6, scope: !3844)
!4937 = !DILocation(line: 804, column: 17, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 803, column: 34)
!4939 = !DILocation(line: 804, column: 26, scope: !4938)
!4940 = !DILocation(line: 804, column: 3, scope: !4938)
!4941 = !DILocation(line: 805, column: 7, scope: !4938)
!4942 = !DILocation(line: 806, column: 3, scope: !4938)
!4943 = !DILocation(line: 809, column: 54, scope: !3844)
!4944 = !DILocation(line: 809, column: 30, scope: !3844)
!4945 = !DILocation(line: 809, column: 2, scope: !3844)
!4946 = !DILocation(line: 809, column: 11, scope: !3844)
!4947 = !DILocation(line: 809, column: 28, scope: !3844)
!4948 = !DILocation(line: 810, column: 7, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 810, column: 6)
!4950 = !DILocation(line: 810, column: 16, scope: !4949)
!4951 = !DILocation(line: 810, column: 6, scope: !3844)
!4952 = !DILocation(line: 811, column: 17, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 810, column: 34)
!4954 = !DILocation(line: 811, column: 26, scope: !4953)
!4955 = !DILocation(line: 811, column: 3, scope: !4953)
!4956 = !DILocation(line: 812, column: 7, scope: !4953)
!4957 = !DILocation(line: 813, column: 3, scope: !4953)
!4958 = !DILocation(line: 816, column: 58, scope: !3844)
!4959 = !DILocation(line: 816, column: 26, scope: !3844)
!4960 = !DILocation(line: 816, column: 2, scope: !3844)
!4961 = !DILocation(line: 816, column: 11, scope: !3844)
!4962 = !DILocation(line: 816, column: 24, scope: !3844)
!4963 = !DILocation(line: 817, column: 14, scope: !3844)
!4964 = !DILocation(line: 817, column: 23, scope: !3844)
!4965 = !DILocation(line: 45, column: 26, scope: !4779, inlinedAt: !4781)
!4966 = !DILocation(line: 86, column: 20, scope: !4785, inlinedAt: !4787)
!4967 = !DILocation(line: 86, column: 23, scope: !4785, inlinedAt: !4787)
!4968 = !DILocation(line: 86, column: 2, scope: !4785, inlinedAt: !4787)
!4969 = !DILocation(line: 87, column: 2, scope: !4785, inlinedAt: !4787)
!4970 = !DILocation(line: 46, column: 18, scope: !4779, inlinedAt: !4781)
!4971 = !DILocation(line: 46, column: 21, scope: !4779, inlinedAt: !4781)
!4972 = !DILocation(line: 41, column: 2, scope: !4973, inlinedAt: !4778)
!4973 = distinct !DILexicalBlock(scope: !4772, file: !4773, line: 41, column: 2)
!4974 = !DILocation(line: 819, column: 16, scope: !3844)
!4975 = !DILocation(line: 819, column: 25, scope: !3844)
!4976 = !DILocation(line: 819, column: 45, scope: !3844)
!4977 = !DILocation(line: 819, column: 36, scope: !3844)
!4978 = !DILocation(line: 819, column: 2, scope: !3844)
!4979 = !DILocation(line: 820, column: 25, scope: !3844)
!4980 = !DILocation(line: 820, column: 34, scope: !3844)
!4981 = !DILocation(line: 820, column: 8, scope: !3844)
!4982 = !DILocation(line: 820, column: 6, scope: !3844)
!4983 = !DILocation(line: 821, column: 6, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 821, column: 6)
!4985 = !DILocation(line: 821, column: 6, scope: !3844)
!4986 = !DILocation(line: 822, column: 17, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4984, file: !3, line: 821, column: 11)
!4988 = !DILocation(line: 822, column: 26, scope: !4987)
!4989 = !DILocation(line: 822, column: 3, scope: !4987)
!4990 = !DILocation(line: 823, column: 15, scope: !4987)
!4991 = !DILocation(line: 823, column: 24, scope: !4987)
!4992 = !DILocation(line: 823, column: 3, scope: !4987)
!4993 = !DILocation(line: 824, column: 3, scope: !4987)
!4994 = !DILocation(line: 827, column: 45, scope: !3844)
!4995 = !DILocation(line: 827, column: 54, scope: !3844)
!4996 = !DILocation(line: 829, column: 9, scope: !3844)
!4997 = !DILocation(line: 829, column: 18, scope: !3844)
!4998 = !DILocation(line: 829, column: 27, scope: !3844)
!4999 = !DILocation(line: 830, column: 9, scope: !3844)
!5000 = !DILocation(line: 830, column: 18, scope: !3844)
!5001 = !DILocation(line: 830, column: 27, scope: !3844)
!5002 = !DILocation(line: 828, column: 4, scope: !3844)
!5003 = !DILocation(line: 827, column: 31, scope: !3844)
!5004 = !DILocation(line: 827, column: 2, scope: !3844)
!5005 = !DILocation(line: 827, column: 11, scope: !3844)
!5006 = !DILocation(line: 827, column: 17, scope: !3844)
!5007 = !DILocation(line: 827, column: 29, scope: !3844)
!5008 = !DILocation(line: 832, column: 7, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 832, column: 6)
!5010 = !DILocation(line: 832, column: 16, scope: !5009)
!5011 = !DILocation(line: 832, column: 22, scope: !5009)
!5012 = !DILocation(line: 832, column: 6, scope: !3844)
!5013 = !DILocation(line: 833, column: 17, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 832, column: 35)
!5015 = !DILocation(line: 833, column: 26, scope: !5014)
!5016 = !DILocation(line: 833, column: 3, scope: !5014)
!5017 = !DILocation(line: 834, column: 7, scope: !5014)
!5018 = !DILocation(line: 835, column: 3, scope: !5014)
!5019 = !DILocation(line: 838, column: 47, scope: !3844)
!5020 = !DILocation(line: 838, column: 56, scope: !3844)
!5021 = !DILocation(line: 839, column: 4, scope: !3844)
!5022 = !DILocation(line: 839, column: 13, scope: !3844)
!5023 = !DILocation(line: 839, column: 22, scope: !3844)
!5024 = !DILocation(line: 838, column: 33, scope: !3844)
!5025 = !DILocation(line: 838, column: 2, scope: !3844)
!5026 = !DILocation(line: 838, column: 11, scope: !3844)
!5027 = !DILocation(line: 838, column: 17, scope: !3844)
!5028 = !DILocation(line: 838, column: 31, scope: !3844)
!5029 = !DILocation(line: 842, column: 7, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 842, column: 6)
!5031 = !DILocation(line: 842, column: 16, scope: !5030)
!5032 = !DILocation(line: 842, column: 22, scope: !5030)
!5033 = !DILocation(line: 842, column: 6, scope: !3844)
!5034 = !DILocation(line: 843, column: 17, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 842, column: 37)
!5036 = !DILocation(line: 843, column: 26, scope: !5035)
!5037 = !DILocation(line: 843, column: 3, scope: !5035)
!5038 = !DILocation(line: 844, column: 7, scope: !5035)
!5039 = !DILocation(line: 845, column: 3, scope: !5035)
!5040 = !DILocation(line: 848, column: 2, scope: !3844)
!5041 = !DILocation(line: 848, column: 11, scope: !3844)
!5042 = !DILocation(line: 848, column: 17, scope: !3844)
!5043 = !DILocation(line: 848, column: 29, scope: !3844)
!5044 = !DILocation(line: 849, column: 31, scope: !3844)
!5045 = !DILocation(line: 849, column: 2, scope: !3844)
!5046 = !DILocation(line: 849, column: 11, scope: !3844)
!5047 = !DILocation(line: 849, column: 17, scope: !3844)
!5048 = !DILocation(line: 849, column: 29, scope: !3844)
!5049 = !DILocation(line: 851, column: 27, scope: !3844)
!5050 = !DILocation(line: 851, column: 36, scope: !3844)
!5051 = !DILocation(line: 851, column: 2, scope: !3844)
!5052 = !DILocation(line: 853, column: 16, scope: !3844)
!5053 = !DILocation(line: 853, column: 25, scope: !3844)
!5054 = !DILocation(line: 853, column: 2, scope: !3844)
!5055 = !DILocation(line: 855, column: 31, scope: !3844)
!5056 = !DILocation(line: 855, column: 37, scope: !3844)
!5057 = !DILocation(line: 855, column: 46, scope: !3844)
!5058 = !DILocation(line: 855, column: 8, scope: !3844)
!5059 = !DILocation(line: 855, column: 6, scope: !3844)
!5060 = !DILocation(line: 857, column: 6, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 857, column: 6)
!5062 = !DILocation(line: 857, column: 10, scope: !5061)
!5063 = !DILocation(line: 857, column: 6, scope: !3844)
!5064 = !DILocation(line: 858, column: 3, scope: !5061)
!5065 = !DILocation(line: 859, column: 31, scope: !3844)
!5066 = !DILocation(line: 859, column: 37, scope: !3844)
!5067 = !DILocation(line: 859, column: 46, scope: !3844)
!5068 = !DILocation(line: 859, column: 8, scope: !3844)
!5069 = !DILocation(line: 859, column: 6, scope: !3844)
!5070 = !DILocation(line: 862, column: 6, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 862, column: 6)
!5072 = !DILocation(line: 862, column: 10, scope: !5071)
!5073 = !DILocation(line: 862, column: 6, scope: !3844)
!5074 = !DILocation(line: 863, column: 3, scope: !5071)
!5075 = !DILocation(line: 865, column: 2, scope: !3844)
!5076 = !DILocation(line: 865, column: 11, scope: !3844)
!5077 = !DILocation(line: 865, column: 18, scope: !3844)
!5078 = !DILocation(line: 865, column: 32, scope: !3844)
!5079 = !DILocation(line: 866, column: 32, scope: !3844)
!5080 = !DILocation(line: 866, column: 41, scope: !3844)
!5081 = !DILocation(line: 866, column: 45, scope: !3844)
!5082 = !DILocation(line: 866, column: 54, scope: !3844)
!5083 = !DILocation(line: 866, column: 63, scope: !3844)
!5084 = !DILocation(line: 866, column: 8, scope: !3844)
!5085 = !DILocation(line: 866, column: 6, scope: !3844)
!5086 = !DILocation(line: 868, column: 6, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 868, column: 6)
!5088 = !DILocation(line: 868, column: 6, scope: !3844)
!5089 = !DILocation(line: 869, column: 3, scope: !5087)
!5090 = !DILocation(line: 871, column: 2, scope: !3844)
!5091 = !DILocation(line: 871, column: 11, scope: !3844)
!5092 = !DILocation(line: 871, column: 18, scope: !3844)
!5093 = !DILocation(line: 871, column: 32, scope: !3844)
!5094 = !DILocation(line: 872, column: 32, scope: !3844)
!5095 = !DILocation(line: 872, column: 41, scope: !3844)
!5096 = !DILocation(line: 872, column: 45, scope: !3844)
!5097 = !DILocation(line: 872, column: 54, scope: !3844)
!5098 = !DILocation(line: 872, column: 63, scope: !3844)
!5099 = !DILocation(line: 872, column: 8, scope: !3844)
!5100 = !DILocation(line: 872, column: 6, scope: !3844)
!5101 = !DILocation(line: 874, column: 6, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 874, column: 6)
!5103 = !DILocation(line: 874, column: 6, scope: !3844)
!5104 = !DILocation(line: 875, column: 3, scope: !5102)
!5105 = !DILocation(line: 877, column: 2, scope: !3844)
!5106 = !DILocation(line: 879, column: 39, scope: !3844)
!5107 = !DILocation(line: 879, column: 48, scope: !3844)
!5108 = !DILocation(line: 879, column: 13, scope: !3844)
!5109 = !DILocation(line: 879, column: 11, scope: !3844)
!5110 = !DILocation(line: 880, column: 13, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 880, column: 6)
!5112 = !DILocation(line: 880, column: 6, scope: !5111)
!5113 = !DILocation(line: 880, column: 6, scope: !3844)
!5114 = !DILocation(line: 881, column: 3, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 880, column: 24)
!5116 = !DILocation(line: 883, column: 17, scope: !5115)
!5117 = !DILocation(line: 883, column: 9, scope: !5115)
!5118 = !DILocation(line: 883, column: 7, scope: !5115)
!5119 = !DILocation(line: 884, column: 3, scope: !5115)
!5120 = !DILocation(line: 887, column: 22, scope: !3844)
!5121 = !DILocation(line: 887, column: 2, scope: !3844)
!5122 = !DILocation(line: 887, column: 11, scope: !3844)
!5123 = !DILocation(line: 887, column: 20, scope: !3844)
!5124 = !DILocation(line: 888, column: 8, scope: !3844)
!5125 = !DILocation(line: 888, column: 17, scope: !3844)
!5126 = !DILocation(line: 888, column: 27, scope: !3844)
!5127 = !DILocation(line: 888, column: 41, scope: !3844)
!5128 = !DILocation(line: 888, column: 6, scope: !3844)
!5129 = !DILocation(line: 890, column: 6, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 890, column: 6)
!5131 = !DILocation(line: 890, column: 6, scope: !3844)
!5132 = !DILocation(line: 891, column: 3, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 890, column: 11)
!5134 = !DILocation(line: 893, column: 3, scope: !5133)
!5135 = !DILocation(line: 896, column: 12, scope: !3844)
!5136 = !DILocation(line: 896, column: 21, scope: !3844)
!5137 = !DILocation(line: 896, column: 2, scope: !3844)
!5138 = !DILocation(line: 898, column: 2, scope: !3844)
!5139 = !DILocation(line: 900, column: 9, scope: !3844)
!5140 = !DILocation(line: 900, column: 2, scope: !3844)
!5141 = !DILabel(scope: !3844, name: "err_init", file: !3, line: 902)
!5142 = !DILocation(line: 902, column: 1, scope: !3844)
!5143 = !DILocation(line: 903, column: 2, scope: !3844)
!5144 = !DILabel(scope: !3844, name: "err_devfreq", file: !3, line: 904)
!5145 = !DILocation(line: 904, column: 1, scope: !3844)
!5146 = !DILocation(line: 905, column: 24, scope: !3844)
!5147 = !DILocation(line: 905, column: 2, scope: !3844)
!5148 = !DILocation(line: 906, column: 10, scope: !3844)
!5149 = !DILocation(line: 906, column: 2, scope: !3844)
!5150 = !DILabel(scope: !3844, name: "err_dev", file: !3, line: 907)
!5151 = !DILocation(line: 907, column: 1, scope: !3844)
!5152 = !DILocation(line: 908, column: 8, scope: !3844)
!5153 = !DILocation(line: 908, column: 2, scope: !3844)
!5154 = !DILabel(scope: !3844, name: "err_out", file: !3, line: 909)
!5155 = !DILocation(line: 909, column: 1, scope: !3844)
!5156 = !DILocation(line: 910, column: 17, scope: !3844)
!5157 = !DILocation(line: 910, column: 9, scope: !3844)
!5158 = !DILocation(line: 910, column: 2, scope: !3844)
!5159 = !DILocation(line: 911, column: 1, scope: !3844)
!5160 = distinct !DISubprogram(name: "ERR_PTR", scope: !5161, file: !5161, line: 24, type: !5162, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5161 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5162 = !DISubroutineType(types: !5163)
!5163 = !{!176, !105}
!5164 = !DILocalVariable(name: "error", arg: 1, scope: !5160, file: !5161, line: 24, type: !105)
!5165 = !DILocation(line: 24, column: 48, scope: !5160)
!5166 = !DILocation(line: 26, column: 18, scope: !5160)
!5167 = !DILocation(line: 26, column: 9, scope: !5160)
!5168 = !DILocation(line: 26, column: 2, scope: !5160)
!5169 = distinct !DISubprogram(name: "find_device_devfreq", scope: !3, file: !3, line: 64, type: !5170, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5170 = !DISubroutineType(types: !5171)
!5171 = !{!177, !3199}
!5172 = !DILocalVariable(name: "dev", arg: 1, scope: !5169, file: !3, line: 64, type: !3199)
!5173 = !DILocation(line: 64, column: 59, scope: !5169)
!5174 = !DILocalVariable(name: "tmp_devfreq", scope: !5169, file: !3, line: 66, type: !177)
!5175 = !DILocation(line: 66, column: 18, scope: !5169)
!5176 = !DILocation(line: 68, column: 2, scope: !5169)
!5177 = !DILocation(line: 68, column: 2, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 68, column: 2)
!5179 = !DILocation(line: 70, column: 21, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 70, column: 6)
!5181 = !DILocation(line: 70, column: 6, scope: !5180)
!5182 = !DILocation(line: 70, column: 6, scope: !5169)
!5183 = !DILocation(line: 71, column: 3, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 70, column: 27)
!5185 = !DILocation(line: 72, column: 10, scope: !5184)
!5186 = !DILocation(line: 72, column: 3, scope: !5184)
!5187 = !DILocalVariable(name: "__mptr", scope: !5188, file: !3, line: 75, type: !176)
!5188 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 75, column: 2)
!5189 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 75, column: 2)
!5190 = !DILocation(line: 75, column: 2, scope: !5188)
!5191 = !DILocation(line: 75, column: 2, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 75, column: 2)
!5193 = !DILocation(line: 75, column: 2, scope: !5189)
!5194 = !DILocation(line: 75, column: 2, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 75, column: 2)
!5196 = !DILocation(line: 76, column: 7, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5198, file: !3, line: 76, column: 7)
!5198 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 75, column: 56)
!5199 = !DILocation(line: 76, column: 20, scope: !5197)
!5200 = !DILocation(line: 76, column: 24, scope: !5197)
!5201 = !DILocation(line: 76, column: 34, scope: !5197)
!5202 = !DILocation(line: 76, column: 31, scope: !5197)
!5203 = !DILocation(line: 76, column: 7, scope: !5198)
!5204 = !DILocation(line: 77, column: 11, scope: !5197)
!5205 = !DILocation(line: 77, column: 4, scope: !5197)
!5206 = !DILocation(line: 78, column: 2, scope: !5198)
!5207 = !DILocalVariable(name: "__mptr", scope: !5208, file: !3, line: 75, type: !176)
!5208 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 75, column: 2)
!5209 = !DILocation(line: 75, column: 2, scope: !5208)
!5210 = !DILocation(line: 75, column: 2, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 75, column: 2)
!5212 = distinct !{!5212, !5193, !5213}
!5213 = !DILocation(line: 78, column: 2, scope: !5189)
!5214 = !DILocation(line: 80, column: 9, scope: !5169)
!5215 = !DILocation(line: 80, column: 2, scope: !5169)
!5216 = !DILocation(line: 81, column: 1, scope: !5169)
!5217 = distinct !DISubprogram(name: "IS_ERR", scope: !5161, file: !5161, line: 34, type: !5218, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5218 = !DISubroutineType(types: !5219)
!5219 = !{!473, !3041}
!5220 = !DILocalVariable(name: "ptr", arg: 1, scope: !5217, file: !5161, line: 34, type: !3041)
!5221 = !DILocation(line: 34, column: 60, scope: !5217)
!5222 = !DILocation(line: 36, column: 9, scope: !5217)
!5223 = !DILocation(line: 36, column: 2, scope: !5217)
!5224 = distinct !DISubprogram(name: "kzalloc", scope: !142, file: !142, line: 662, type: !5225, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5225 = !DISubroutineType(types: !5226)
!5226 = !{!176, !309, !167}
!5227 = !DILocalVariable(name: "s", arg: 1, scope: !5228, file: !142, line: 445, type: !947)
!5228 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !142, file: !142, line: 445, type: !5229, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5229 = !DISubroutineType(types: !5230)
!5230 = !{!176, !947, !167, !309}
!5231 = !DILocation(line: 445, column: 72, scope: !5228, inlinedAt: !5232)
!5232 = distinct !DILocation(line: 552, column: 10, scope: !5233, inlinedAt: !5236)
!5233 = distinct !DILexicalBlock(scope: !5234, file: !142, line: 540, column: 34)
!5234 = distinct !DILexicalBlock(scope: !5235, file: !142, line: 540, column: 6)
!5235 = distinct !DISubprogram(name: "kmalloc", scope: !142, file: !142, line: 538, type: !5225, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5236 = distinct !DILocation(line: 664, column: 9, scope: !5224)
!5237 = !DILocalVariable(name: "flags", arg: 2, scope: !5228, file: !142, line: 446, type: !167)
!5238 = !DILocation(line: 446, column: 9, scope: !5228, inlinedAt: !5232)
!5239 = !DILocalVariable(name: "size", arg: 3, scope: !5228, file: !142, line: 446, type: !309)
!5240 = !DILocation(line: 446, column: 23, scope: !5228, inlinedAt: !5232)
!5241 = !DILocalVariable(name: "ret", scope: !5228, file: !142, line: 448, type: !176)
!5242 = !DILocation(line: 448, column: 8, scope: !5228, inlinedAt: !5232)
!5243 = !DILocalVariable(name: "flags", arg: 1, scope: !5244, file: !142, line: 318, type: !167)
!5244 = distinct !DISubprogram(name: "kmalloc_type", scope: !142, file: !142, line: 318, type: !5245, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5245 = !DISubroutineType(types: !5246)
!5246 = !{!141, !167}
!5247 = !DILocation(line: 318, column: 67, scope: !5244, inlinedAt: !5248)
!5248 = distinct !DILocation(line: 553, column: 20, scope: !5233, inlinedAt: !5236)
!5249 = !DILocalVariable(name: "size", arg: 1, scope: !5250, file: !142, line: 346, type: !309)
!5250 = distinct !DISubprogram(name: "kmalloc_index", scope: !142, file: !142, line: 346, type: !5251, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5251 = !DISubroutineType(types: !5252)
!5252 = !{!7, !309}
!5253 = !DILocation(line: 346, column: 58, scope: !5250, inlinedAt: !5254)
!5254 = distinct !DILocation(line: 547, column: 11, scope: !5233, inlinedAt: !5236)
!5255 = !DILocalVariable(name: "size", arg: 1, scope: !5256, file: !142, line: 472, type: !309)
!5256 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !142, file: !142, line: 472, type: !5257, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5257 = !DISubroutineType(types: !5258)
!5258 = !{!176, !309, !167, !7}
!5259 = !DILocation(line: 472, column: 28, scope: !5256, inlinedAt: !5260)
!5260 = distinct !DILocation(line: 481, column: 9, scope: !5261, inlinedAt: !5262)
!5261 = distinct !DISubprogram(name: "kmalloc_large", scope: !142, file: !142, line: 478, type: !5225, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5262 = distinct !DILocation(line: 545, column: 11, scope: !5263, inlinedAt: !5236)
!5263 = distinct !DILexicalBlock(scope: !5233, file: !142, line: 544, column: 7)
!5264 = !DILocalVariable(name: "flags", arg: 2, scope: !5256, file: !142, line: 472, type: !167)
!5265 = !DILocation(line: 472, column: 40, scope: !5256, inlinedAt: !5260)
!5266 = !DILocalVariable(name: "order", arg: 3, scope: !5256, file: !142, line: 472, type: !7)
!5267 = !DILocation(line: 472, column: 60, scope: !5256, inlinedAt: !5260)
!5268 = !DILocalVariable(name: "size", arg: 1, scope: !5261, file: !142, line: 478, type: !309)
!5269 = !DILocation(line: 478, column: 51, scope: !5261, inlinedAt: !5262)
!5270 = !DILocalVariable(name: "flags", arg: 2, scope: !5261, file: !142, line: 478, type: !167)
!5271 = !DILocation(line: 478, column: 63, scope: !5261, inlinedAt: !5262)
!5272 = !DILocalVariable(name: "order", scope: !5261, file: !142, line: 480, type: !7)
!5273 = !DILocation(line: 480, column: 15, scope: !5261, inlinedAt: !5262)
!5274 = !DILocalVariable(name: "size", arg: 1, scope: !5235, file: !142, line: 538, type: !309)
!5275 = !DILocation(line: 538, column: 45, scope: !5235, inlinedAt: !5236)
!5276 = !DILocalVariable(name: "flags", arg: 2, scope: !5235, file: !142, line: 538, type: !167)
!5277 = !DILocation(line: 538, column: 57, scope: !5235, inlinedAt: !5236)
!5278 = !DILocalVariable(name: "index", scope: !5233, file: !142, line: 542, type: !7)
!5279 = !DILocation(line: 542, column: 16, scope: !5233, inlinedAt: !5236)
!5280 = !DILocalVariable(name: "size", arg: 1, scope: !5224, file: !142, line: 662, type: !309)
!5281 = !DILocation(line: 662, column: 36, scope: !5224)
!5282 = !DILocalVariable(name: "flags", arg: 2, scope: !5224, file: !142, line: 662, type: !167)
!5283 = !DILocation(line: 662, column: 48, scope: !5224)
!5284 = !DILocation(line: 664, column: 17, scope: !5224)
!5285 = !DILocation(line: 664, column: 23, scope: !5224)
!5286 = !DILocation(line: 664, column: 29, scope: !5224)
!5287 = !DILocation(line: 540, column: 27, scope: !5234, inlinedAt: !5236)
!5288 = !DILocation(line: 540, column: 6, scope: !5234, inlinedAt: !5236)
!5289 = !DILocation(line: 540, column: 6, scope: !5235, inlinedAt: !5236)
!5290 = !DILocation(line: 544, column: 7, scope: !5263, inlinedAt: !5236)
!5291 = !DILocation(line: 544, column: 12, scope: !5263, inlinedAt: !5236)
!5292 = !DILocation(line: 544, column: 7, scope: !5233, inlinedAt: !5236)
!5293 = !DILocation(line: 545, column: 25, scope: !5263, inlinedAt: !5236)
!5294 = !DILocation(line: 545, column: 31, scope: !5263, inlinedAt: !5236)
!5295 = !DILocation(line: 480, column: 33, scope: !5261, inlinedAt: !5262)
!5296 = !DILocation(line: 480, column: 23, scope: !5261, inlinedAt: !5262)
!5297 = !DILocation(line: 481, column: 29, scope: !5261, inlinedAt: !5262)
!5298 = !DILocation(line: 481, column: 35, scope: !5261, inlinedAt: !5262)
!5299 = !DILocation(line: 481, column: 42, scope: !5261, inlinedAt: !5262)
!5300 = !DILocation(line: 474, column: 23, scope: !5256, inlinedAt: !5260)
!5301 = !DILocation(line: 474, column: 29, scope: !5256, inlinedAt: !5260)
!5302 = !DILocation(line: 474, column: 36, scope: !5256, inlinedAt: !5260)
!5303 = !DILocation(line: 474, column: 9, scope: !5256, inlinedAt: !5260)
!5304 = !DILocation(line: 545, column: 4, scope: !5263, inlinedAt: !5236)
!5305 = !DILocation(line: 547, column: 25, scope: !5233, inlinedAt: !5236)
!5306 = !DILocation(line: 348, column: 7, scope: !5307, inlinedAt: !5254)
!5307 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 348, column: 6)
!5308 = !DILocation(line: 348, column: 6, scope: !5250, inlinedAt: !5254)
!5309 = !DILocation(line: 349, column: 3, scope: !5307, inlinedAt: !5254)
!5310 = !DILocation(line: 351, column: 6, scope: !5311, inlinedAt: !5254)
!5311 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 351, column: 6)
!5312 = !DILocation(line: 351, column: 11, scope: !5311, inlinedAt: !5254)
!5313 = !DILocation(line: 351, column: 6, scope: !5250, inlinedAt: !5254)
!5314 = !DILocation(line: 352, column: 3, scope: !5311, inlinedAt: !5254)
!5315 = !DILocation(line: 354, column: 32, scope: !5316, inlinedAt: !5254)
!5316 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 354, column: 6)
!5317 = !DILocation(line: 354, column: 37, scope: !5316, inlinedAt: !5254)
!5318 = !DILocation(line: 354, column: 42, scope: !5316, inlinedAt: !5254)
!5319 = !DILocation(line: 354, column: 45, scope: !5316, inlinedAt: !5254)
!5320 = !DILocation(line: 354, column: 50, scope: !5316, inlinedAt: !5254)
!5321 = !DILocation(line: 354, column: 6, scope: !5250, inlinedAt: !5254)
!5322 = !DILocation(line: 355, column: 3, scope: !5316, inlinedAt: !5254)
!5323 = !DILocation(line: 356, column: 32, scope: !5324, inlinedAt: !5254)
!5324 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 356, column: 6)
!5325 = !DILocation(line: 356, column: 37, scope: !5324, inlinedAt: !5254)
!5326 = !DILocation(line: 356, column: 43, scope: !5324, inlinedAt: !5254)
!5327 = !DILocation(line: 356, column: 46, scope: !5324, inlinedAt: !5254)
!5328 = !DILocation(line: 356, column: 51, scope: !5324, inlinedAt: !5254)
!5329 = !DILocation(line: 356, column: 6, scope: !5250, inlinedAt: !5254)
!5330 = !DILocation(line: 357, column: 3, scope: !5324, inlinedAt: !5254)
!5331 = !DILocation(line: 358, column: 6, scope: !5332, inlinedAt: !5254)
!5332 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 358, column: 6)
!5333 = !DILocation(line: 358, column: 11, scope: !5332, inlinedAt: !5254)
!5334 = !DILocation(line: 358, column: 6, scope: !5250, inlinedAt: !5254)
!5335 = !DILocation(line: 358, column: 26, scope: !5332, inlinedAt: !5254)
!5336 = !DILocation(line: 359, column: 6, scope: !5337, inlinedAt: !5254)
!5337 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 359, column: 6)
!5338 = !DILocation(line: 359, column: 11, scope: !5337, inlinedAt: !5254)
!5339 = !DILocation(line: 359, column: 6, scope: !5250, inlinedAt: !5254)
!5340 = !DILocation(line: 359, column: 26, scope: !5337, inlinedAt: !5254)
!5341 = !DILocation(line: 360, column: 6, scope: !5342, inlinedAt: !5254)
!5342 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 360, column: 6)
!5343 = !DILocation(line: 360, column: 11, scope: !5342, inlinedAt: !5254)
!5344 = !DILocation(line: 360, column: 6, scope: !5250, inlinedAt: !5254)
!5345 = !DILocation(line: 360, column: 26, scope: !5342, inlinedAt: !5254)
!5346 = !DILocation(line: 361, column: 6, scope: !5347, inlinedAt: !5254)
!5347 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 361, column: 6)
!5348 = !DILocation(line: 361, column: 11, scope: !5347, inlinedAt: !5254)
!5349 = !DILocation(line: 361, column: 6, scope: !5250, inlinedAt: !5254)
!5350 = !DILocation(line: 361, column: 26, scope: !5347, inlinedAt: !5254)
!5351 = !DILocation(line: 362, column: 6, scope: !5352, inlinedAt: !5254)
!5352 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 362, column: 6)
!5353 = !DILocation(line: 362, column: 11, scope: !5352, inlinedAt: !5254)
!5354 = !DILocation(line: 362, column: 6, scope: !5250, inlinedAt: !5254)
!5355 = !DILocation(line: 362, column: 26, scope: !5352, inlinedAt: !5254)
!5356 = !DILocation(line: 363, column: 6, scope: !5357, inlinedAt: !5254)
!5357 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 363, column: 6)
!5358 = !DILocation(line: 363, column: 11, scope: !5357, inlinedAt: !5254)
!5359 = !DILocation(line: 363, column: 6, scope: !5250, inlinedAt: !5254)
!5360 = !DILocation(line: 363, column: 26, scope: !5357, inlinedAt: !5254)
!5361 = !DILocation(line: 364, column: 6, scope: !5362, inlinedAt: !5254)
!5362 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 364, column: 6)
!5363 = !DILocation(line: 364, column: 11, scope: !5362, inlinedAt: !5254)
!5364 = !DILocation(line: 364, column: 6, scope: !5250, inlinedAt: !5254)
!5365 = !DILocation(line: 364, column: 26, scope: !5362, inlinedAt: !5254)
!5366 = !DILocation(line: 365, column: 6, scope: !5367, inlinedAt: !5254)
!5367 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 365, column: 6)
!5368 = !DILocation(line: 365, column: 11, scope: !5367, inlinedAt: !5254)
!5369 = !DILocation(line: 365, column: 6, scope: !5250, inlinedAt: !5254)
!5370 = !DILocation(line: 365, column: 26, scope: !5367, inlinedAt: !5254)
!5371 = !DILocation(line: 366, column: 6, scope: !5372, inlinedAt: !5254)
!5372 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 366, column: 6)
!5373 = !DILocation(line: 366, column: 11, scope: !5372, inlinedAt: !5254)
!5374 = !DILocation(line: 366, column: 6, scope: !5250, inlinedAt: !5254)
!5375 = !DILocation(line: 366, column: 26, scope: !5372, inlinedAt: !5254)
!5376 = !DILocation(line: 367, column: 6, scope: !5377, inlinedAt: !5254)
!5377 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 367, column: 6)
!5378 = !DILocation(line: 367, column: 11, scope: !5377, inlinedAt: !5254)
!5379 = !DILocation(line: 367, column: 6, scope: !5250, inlinedAt: !5254)
!5380 = !DILocation(line: 367, column: 26, scope: !5377, inlinedAt: !5254)
!5381 = !DILocation(line: 368, column: 6, scope: !5382, inlinedAt: !5254)
!5382 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 368, column: 6)
!5383 = !DILocation(line: 368, column: 11, scope: !5382, inlinedAt: !5254)
!5384 = !DILocation(line: 368, column: 6, scope: !5250, inlinedAt: !5254)
!5385 = !DILocation(line: 368, column: 26, scope: !5382, inlinedAt: !5254)
!5386 = !DILocation(line: 369, column: 6, scope: !5387, inlinedAt: !5254)
!5387 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 369, column: 6)
!5388 = !DILocation(line: 369, column: 11, scope: !5387, inlinedAt: !5254)
!5389 = !DILocation(line: 369, column: 6, scope: !5250, inlinedAt: !5254)
!5390 = !DILocation(line: 369, column: 26, scope: !5387, inlinedAt: !5254)
!5391 = !DILocation(line: 370, column: 6, scope: !5392, inlinedAt: !5254)
!5392 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 370, column: 6)
!5393 = !DILocation(line: 370, column: 11, scope: !5392, inlinedAt: !5254)
!5394 = !DILocation(line: 370, column: 6, scope: !5250, inlinedAt: !5254)
!5395 = !DILocation(line: 370, column: 26, scope: !5392, inlinedAt: !5254)
!5396 = !DILocation(line: 371, column: 6, scope: !5397, inlinedAt: !5254)
!5397 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 371, column: 6)
!5398 = !DILocation(line: 371, column: 11, scope: !5397, inlinedAt: !5254)
!5399 = !DILocation(line: 371, column: 6, scope: !5250, inlinedAt: !5254)
!5400 = !DILocation(line: 371, column: 26, scope: !5397, inlinedAt: !5254)
!5401 = !DILocation(line: 372, column: 6, scope: !5402, inlinedAt: !5254)
!5402 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 372, column: 6)
!5403 = !DILocation(line: 372, column: 11, scope: !5402, inlinedAt: !5254)
!5404 = !DILocation(line: 372, column: 6, scope: !5250, inlinedAt: !5254)
!5405 = !DILocation(line: 372, column: 26, scope: !5402, inlinedAt: !5254)
!5406 = !DILocation(line: 373, column: 6, scope: !5407, inlinedAt: !5254)
!5407 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 373, column: 6)
!5408 = !DILocation(line: 373, column: 11, scope: !5407, inlinedAt: !5254)
!5409 = !DILocation(line: 373, column: 6, scope: !5250, inlinedAt: !5254)
!5410 = !DILocation(line: 373, column: 26, scope: !5407, inlinedAt: !5254)
!5411 = !DILocation(line: 374, column: 6, scope: !5412, inlinedAt: !5254)
!5412 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 374, column: 6)
!5413 = !DILocation(line: 374, column: 11, scope: !5412, inlinedAt: !5254)
!5414 = !DILocation(line: 374, column: 6, scope: !5250, inlinedAt: !5254)
!5415 = !DILocation(line: 374, column: 26, scope: !5412, inlinedAt: !5254)
!5416 = !DILocation(line: 375, column: 6, scope: !5417, inlinedAt: !5254)
!5417 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 375, column: 6)
!5418 = !DILocation(line: 375, column: 11, scope: !5417, inlinedAt: !5254)
!5419 = !DILocation(line: 375, column: 6, scope: !5250, inlinedAt: !5254)
!5420 = !DILocation(line: 375, column: 27, scope: !5417, inlinedAt: !5254)
!5421 = !DILocation(line: 376, column: 6, scope: !5422, inlinedAt: !5254)
!5422 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 376, column: 6)
!5423 = !DILocation(line: 376, column: 11, scope: !5422, inlinedAt: !5254)
!5424 = !DILocation(line: 376, column: 6, scope: !5250, inlinedAt: !5254)
!5425 = !DILocation(line: 376, column: 32, scope: !5422, inlinedAt: !5254)
!5426 = !DILocation(line: 377, column: 6, scope: !5427, inlinedAt: !5254)
!5427 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 377, column: 6)
!5428 = !DILocation(line: 377, column: 11, scope: !5427, inlinedAt: !5254)
!5429 = !DILocation(line: 377, column: 6, scope: !5250, inlinedAt: !5254)
!5430 = !DILocation(line: 377, column: 32, scope: !5427, inlinedAt: !5254)
!5431 = !DILocation(line: 378, column: 6, scope: !5432, inlinedAt: !5254)
!5432 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 378, column: 6)
!5433 = !DILocation(line: 378, column: 11, scope: !5432, inlinedAt: !5254)
!5434 = !DILocation(line: 378, column: 6, scope: !5250, inlinedAt: !5254)
!5435 = !DILocation(line: 378, column: 32, scope: !5432, inlinedAt: !5254)
!5436 = !DILocation(line: 379, column: 6, scope: !5437, inlinedAt: !5254)
!5437 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 379, column: 6)
!5438 = !DILocation(line: 379, column: 11, scope: !5437, inlinedAt: !5254)
!5439 = !DILocation(line: 379, column: 6, scope: !5250, inlinedAt: !5254)
!5440 = !DILocation(line: 379, column: 33, scope: !5437, inlinedAt: !5254)
!5441 = !DILocation(line: 380, column: 6, scope: !5442, inlinedAt: !5254)
!5442 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 380, column: 6)
!5443 = !DILocation(line: 380, column: 11, scope: !5442, inlinedAt: !5254)
!5444 = !DILocation(line: 380, column: 6, scope: !5250, inlinedAt: !5254)
!5445 = !DILocation(line: 380, column: 33, scope: !5442, inlinedAt: !5254)
!5446 = !DILocation(line: 381, column: 6, scope: !5447, inlinedAt: !5254)
!5447 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 381, column: 6)
!5448 = !DILocation(line: 381, column: 11, scope: !5447, inlinedAt: !5254)
!5449 = !DILocation(line: 381, column: 6, scope: !5250, inlinedAt: !5254)
!5450 = !DILocation(line: 381, column: 33, scope: !5447, inlinedAt: !5254)
!5451 = !DILocation(line: 382, column: 2, scope: !5452, inlinedAt: !5254)
!5452 = distinct !DILexicalBlock(scope: !5453, file: !142, line: 382, column: 2)
!5453 = distinct !DILexicalBlock(scope: !5250, file: !142, line: 382, column: 2)
!5454 = !{i32 -2143244509, i32 -2143244480, i32 -2143244434, i32 -2143244376, i32 -2143244322, i32 -2143244268, i32 -2143244213, i32 -2143244182}
!5455 = !DILocation(line: 382, column: 2, scope: !5456, inlinedAt: !5254)
!5456 = distinct !DILexicalBlock(scope: !5457, file: !142, line: 382, column: 2)
!5457 = distinct !DILexicalBlock(scope: !5453, file: !142, line: 382, column: 2)
!5458 = !{i32 -2143243739, i32 -2143243732, i32 -2143243678, i32 -2143243647, i32 -2143243617}
!5459 = !DILocation(line: 382, column: 2, scope: !5457, inlinedAt: !5254)
!5460 = !DILocation(line: 386, column: 1, scope: !5250, inlinedAt: !5254)
!5461 = !DILocation(line: 547, column: 9, scope: !5233, inlinedAt: !5236)
!5462 = !DILocation(line: 549, column: 8, scope: !5463, inlinedAt: !5236)
!5463 = distinct !DILexicalBlock(scope: !5233, file: !142, line: 549, column: 7)
!5464 = !DILocation(line: 549, column: 7, scope: !5233, inlinedAt: !5236)
!5465 = !DILocation(line: 550, column: 4, scope: !5463, inlinedAt: !5236)
!5466 = !DILocation(line: 553, column: 33, scope: !5233, inlinedAt: !5236)
!5467 = !DILocation(line: 325, column: 6, scope: !5468, inlinedAt: !5248)
!5468 = distinct !DILexicalBlock(scope: !5244, file: !142, line: 325, column: 6)
!5469 = !DILocation(line: 325, column: 6, scope: !5244, inlinedAt: !5248)
!5470 = !DILocation(line: 326, column: 3, scope: !5468, inlinedAt: !5248)
!5471 = !DILocation(line: 332, column: 9, scope: !5244, inlinedAt: !5248)
!5472 = !DILocation(line: 332, column: 15, scope: !5244, inlinedAt: !5248)
!5473 = !DILocation(line: 332, column: 2, scope: !5244, inlinedAt: !5248)
!5474 = !DILocation(line: 336, column: 1, scope: !5244, inlinedAt: !5248)
!5475 = !DILocation(line: 553, column: 5, scope: !5233, inlinedAt: !5236)
!5476 = !DILocation(line: 553, column: 41, scope: !5233, inlinedAt: !5236)
!5477 = !DILocation(line: 554, column: 5, scope: !5233, inlinedAt: !5236)
!5478 = !DILocation(line: 554, column: 12, scope: !5233, inlinedAt: !5236)
!5479 = !DILocation(line: 448, column: 31, scope: !5228, inlinedAt: !5232)
!5480 = !DILocation(line: 448, column: 34, scope: !5228, inlinedAt: !5232)
!5481 = !DILocation(line: 448, column: 14, scope: !5228, inlinedAt: !5232)
!5482 = !DILocation(line: 450, column: 22, scope: !5228, inlinedAt: !5232)
!5483 = !DILocation(line: 450, column: 25, scope: !5228, inlinedAt: !5232)
!5484 = !DILocation(line: 450, column: 30, scope: !5228, inlinedAt: !5232)
!5485 = !DILocation(line: 450, column: 36, scope: !5228, inlinedAt: !5232)
!5486 = !DILocation(line: 450, column: 8, scope: !5228, inlinedAt: !5232)
!5487 = !DILocation(line: 450, column: 6, scope: !5228, inlinedAt: !5232)
!5488 = !DILocation(line: 451, column: 9, scope: !5228, inlinedAt: !5232)
!5489 = !DILocation(line: 552, column: 3, scope: !5233, inlinedAt: !5236)
!5490 = !DILocation(line: 557, column: 19, scope: !5235, inlinedAt: !5236)
!5491 = !DILocation(line: 557, column: 25, scope: !5235, inlinedAt: !5236)
!5492 = !DILocation(line: 557, column: 9, scope: !5235, inlinedAt: !5236)
!5493 = !DILocation(line: 557, column: 2, scope: !5235, inlinedAt: !5236)
!5494 = !DILocation(line: 558, column: 1, scope: !5235, inlinedAt: !5236)
!5495 = !DILocation(line: 664, column: 2, scope: !5224)
!5496 = distinct !DISubprogram(name: "devfreq_dev_release", scope: !3, file: !3, line: 698, type: !3222, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5497 = !DILocalVariable(name: "dev", arg: 1, scope: !5496, file: !3, line: 698, type: !3199)
!5498 = !DILocation(line: 698, column: 48, scope: !5496)
!5499 = !DILocalVariable(name: "devfreq", scope: !5496, file: !3, line: 700, type: !177)
!5500 = !DILocation(line: 700, column: 18, scope: !5496)
!5501 = !DILocalVariable(name: "__mptr", scope: !5502, file: !3, line: 700, type: !176)
!5502 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 700, column: 28)
!5503 = !DILocation(line: 700, column: 28, scope: !5502)
!5504 = !DILocation(line: 700, column: 28, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 700, column: 28)
!5506 = !DILocalVariable(name: "err", scope: !5496, file: !3, line: 701, type: !173)
!5507 = !DILocation(line: 701, column: 6, scope: !5496)
!5508 = !DILocation(line: 703, column: 2, scope: !5496)
!5509 = !DILocation(line: 704, column: 12, scope: !5496)
!5510 = !DILocation(line: 704, column: 21, scope: !5496)
!5511 = !DILocation(line: 704, column: 2, scope: !5496)
!5512 = !DILocation(line: 705, column: 2, scope: !5496)
!5513 = !DILocation(line: 707, column: 35, scope: !5496)
!5514 = !DILocation(line: 707, column: 44, scope: !5496)
!5515 = !DILocation(line: 707, column: 48, scope: !5496)
!5516 = !DILocation(line: 707, column: 57, scope: !5496)
!5517 = !DILocation(line: 707, column: 66, scope: !5496)
!5518 = !DILocation(line: 707, column: 8, scope: !5496)
!5519 = !DILocation(line: 707, column: 6, scope: !5496)
!5520 = !DILocation(line: 709, column: 6, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 709, column: 6)
!5522 = !DILocation(line: 709, column: 10, scope: !5521)
!5523 = !DILocation(line: 709, column: 13, scope: !5521)
!5524 = !DILocation(line: 709, column: 17, scope: !5521)
!5525 = !DILocation(line: 709, column: 6, scope: !5496)
!5526 = !DILocation(line: 710, column: 3, scope: !5521)
!5527 = !DILocation(line: 712, column: 35, scope: !5496)
!5528 = !DILocation(line: 712, column: 44, scope: !5496)
!5529 = !DILocation(line: 712, column: 48, scope: !5496)
!5530 = !DILocation(line: 712, column: 57, scope: !5496)
!5531 = !DILocation(line: 712, column: 66, scope: !5496)
!5532 = !DILocation(line: 712, column: 8, scope: !5496)
!5533 = !DILocation(line: 712, column: 6, scope: !5496)
!5534 = !DILocation(line: 714, column: 6, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 714, column: 6)
!5536 = !DILocation(line: 714, column: 10, scope: !5535)
!5537 = !DILocation(line: 714, column: 13, scope: !5535)
!5538 = !DILocation(line: 714, column: 17, scope: !5535)
!5539 = !DILocation(line: 714, column: 6, scope: !5496)
!5540 = !DILocation(line: 715, column: 3, scope: !5535)
!5541 = !DILocation(line: 718, column: 33, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 718, column: 6)
!5543 = !DILocation(line: 718, column: 42, scope: !5542)
!5544 = !DILocation(line: 718, column: 6, scope: !5542)
!5545 = !DILocation(line: 718, column: 6, scope: !5496)
!5546 = !DILocation(line: 719, column: 36, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5542, file: !3, line: 718, column: 62)
!5548 = !DILocation(line: 719, column: 45, scope: !5547)
!5549 = !DILocation(line: 719, column: 9, scope: !5547)
!5550 = !DILocation(line: 719, column: 7, scope: !5547)
!5551 = !DILocation(line: 720, column: 7, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 720, column: 7)
!5553 = !DILocation(line: 720, column: 11, scope: !5552)
!5554 = !DILocation(line: 720, column: 7, scope: !5547)
!5555 = !DILocation(line: 721, column: 4, scope: !5552)
!5556 = !DILocation(line: 723, column: 2, scope: !5547)
!5557 = !DILocation(line: 724, column: 33, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 724, column: 6)
!5559 = !DILocation(line: 724, column: 42, scope: !5558)
!5560 = !DILocation(line: 724, column: 6, scope: !5558)
!5561 = !DILocation(line: 724, column: 6, scope: !5496)
!5562 = !DILocation(line: 725, column: 36, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5558, file: !3, line: 724, column: 62)
!5564 = !DILocation(line: 725, column: 45, scope: !5563)
!5565 = !DILocation(line: 725, column: 9, scope: !5563)
!5566 = !DILocation(line: 725, column: 7, scope: !5563)
!5567 = !DILocation(line: 726, column: 7, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 726, column: 7)
!5569 = !DILocation(line: 726, column: 11, scope: !5568)
!5570 = !DILocation(line: 726, column: 7, scope: !5563)
!5571 = !DILocation(line: 727, column: 4, scope: !5568)
!5572 = !DILocation(line: 729, column: 2, scope: !5563)
!5573 = !DILocation(line: 731, column: 6, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 731, column: 6)
!5575 = !DILocation(line: 731, column: 15, scope: !5574)
!5576 = !DILocation(line: 731, column: 24, scope: !5574)
!5577 = !DILocation(line: 731, column: 6, scope: !5496)
!5578 = !DILocation(line: 732, column: 3, scope: !5574)
!5579 = !DILocation(line: 732, column: 12, scope: !5574)
!5580 = !DILocation(line: 732, column: 21, scope: !5574)
!5581 = !DILocation(line: 732, column: 26, scope: !5574)
!5582 = !DILocation(line: 732, column: 35, scope: !5574)
!5583 = !DILocation(line: 732, column: 39, scope: !5574)
!5584 = !DILocation(line: 734, column: 17, scope: !5496)
!5585 = !DILocation(line: 734, column: 26, scope: !5496)
!5586 = !DILocation(line: 734, column: 2, scope: !5496)
!5587 = !DILocation(line: 735, column: 8, scope: !5496)
!5588 = !DILocation(line: 735, column: 2, scope: !5496)
!5589 = !DILocation(line: 736, column: 1, scope: !5496)
!5590 = distinct !DISubprogram(name: "devfreq_notifier_call", scope: !3, file: !3, line: 623, type: !3490, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5591 = !DILocalVariable(name: "nb", arg: 1, scope: !5590, file: !3, line: 623, type: !3484)
!5592 = !DILocation(line: 623, column: 57, scope: !5590)
!5593 = !DILocalVariable(name: "type", arg: 2, scope: !5590, file: !3, line: 623, type: !165)
!5594 = !DILocation(line: 623, column: 75, scope: !5590)
!5595 = !DILocalVariable(name: "devp", arg: 3, scope: !5590, file: !3, line: 624, type: !176)
!5596 = !DILocation(line: 624, column: 12, scope: !5590)
!5597 = !DILocalVariable(name: "devfreq", scope: !5590, file: !3, line: 626, type: !177)
!5598 = !DILocation(line: 626, column: 18, scope: !5590)
!5599 = !DILocalVariable(name: "__mptr", scope: !5600, file: !3, line: 626, type: !176)
!5600 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 626, column: 28)
!5601 = !DILocation(line: 626, column: 28, scope: !5600)
!5602 = !DILocation(line: 626, column: 28, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5600, file: !3, line: 626, column: 28)
!5604 = !DILocalVariable(name: "err", scope: !5590, file: !3, line: 627, type: !173)
!5605 = !DILocation(line: 627, column: 6, scope: !5590)
!5606 = !DILocation(line: 629, column: 14, scope: !5590)
!5607 = !DILocation(line: 629, column: 23, scope: !5590)
!5608 = !DILocation(line: 629, column: 2, scope: !5590)
!5609 = !DILocation(line: 631, column: 54, scope: !5590)
!5610 = !DILocation(line: 631, column: 30, scope: !5590)
!5611 = !DILocation(line: 631, column: 2, scope: !5590)
!5612 = !DILocation(line: 631, column: 11, scope: !5590)
!5613 = !DILocation(line: 631, column: 28, scope: !5590)
!5614 = !DILocation(line: 632, column: 7, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 632, column: 6)
!5616 = !DILocation(line: 632, column: 16, scope: !5615)
!5617 = !DILocation(line: 632, column: 6, scope: !5590)
!5618 = !DILocation(line: 633, column: 3, scope: !5615)
!5619 = !DILocation(line: 635, column: 54, scope: !5590)
!5620 = !DILocation(line: 635, column: 30, scope: !5590)
!5621 = !DILocation(line: 635, column: 2, scope: !5590)
!5622 = !DILocation(line: 635, column: 11, scope: !5590)
!5623 = !DILocation(line: 635, column: 28, scope: !5590)
!5624 = !DILocation(line: 636, column: 7, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 636, column: 6)
!5626 = !DILocation(line: 636, column: 16, scope: !5625)
!5627 = !DILocation(line: 636, column: 6, scope: !5590)
!5628 = !DILocation(line: 637, column: 3, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 636, column: 34)
!5630 = !DILocation(line: 637, column: 12, scope: !5629)
!5631 = !DILocation(line: 637, column: 29, scope: !5629)
!5632 = !DILocation(line: 638, column: 3, scope: !5629)
!5633 = !DILocation(line: 641, column: 23, scope: !5590)
!5634 = !DILocation(line: 641, column: 8, scope: !5590)
!5635 = !DILocation(line: 641, column: 6, scope: !5590)
!5636 = !DILocation(line: 641, column: 2, scope: !5590)
!5637 = !DILabel(scope: !5590, name: "out", file: !3, line: 643)
!5638 = !DILocation(line: 643, column: 1, scope: !5590)
!5639 = !DILocation(line: 644, column: 16, scope: !5590)
!5640 = !DILocation(line: 644, column: 25, scope: !5590)
!5641 = !DILocation(line: 644, column: 2, scope: !5590)
!5642 = !DILocation(line: 645, column: 6, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 645, column: 6)
!5644 = !DILocation(line: 645, column: 6, scope: !5590)
!5645 = !DILocation(line: 646, column: 3, scope: !5643)
!5646 = !DILocation(line: 650, column: 2, scope: !5590)
!5647 = distinct !DISubprogram(name: "set_freq_table", scope: !3, file: !3, line: 175, type: !4049, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5648 = !DILocalVariable(name: "devfreq", arg: 1, scope: !5647, file: !3, line: 175, type: !177)
!5649 = !DILocation(line: 175, column: 43, scope: !5647)
!5650 = !DILocalVariable(name: "profile", scope: !5647, file: !3, line: 177, type: !3740)
!5651 = !DILocation(line: 177, column: 30, scope: !5647)
!5652 = !DILocation(line: 177, column: 40, scope: !5647)
!5653 = !DILocation(line: 177, column: 49, scope: !5647)
!5654 = !DILocalVariable(name: "opp", scope: !5647, file: !3, line: 178, type: !5655)
!5655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5656, size: 64)
!5656 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_opp", file: !5657, line: 20, flags: DIFlagFwdDecl)
!5657 = !DIFile(filename: "./include/linux/pm_opp.h", directory: "/home/lizy2001/genbc/linux")
!5658 = !DILocation(line: 178, column: 21, scope: !5647)
!5659 = !DILocalVariable(name: "freq", scope: !5647, file: !3, line: 179, type: !165)
!5660 = !DILocation(line: 179, column: 16, scope: !5647)
!5661 = !DILocalVariable(name: "i", scope: !5647, file: !3, line: 180, type: !173)
!5662 = !DILocation(line: 180, column: 6, scope: !5647)
!5663 = !DILocalVariable(name: "count", scope: !5647, file: !3, line: 180, type: !173)
!5664 = !DILocation(line: 180, column: 9, scope: !5647)
!5665 = !DILocation(line: 183, column: 35, scope: !5647)
!5666 = !DILocation(line: 183, column: 44, scope: !5647)
!5667 = !DILocation(line: 183, column: 48, scope: !5647)
!5668 = !DILocation(line: 183, column: 10, scope: !5647)
!5669 = !DILocation(line: 183, column: 8, scope: !5647)
!5670 = !DILocation(line: 184, column: 6, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 184, column: 6)
!5672 = !DILocation(line: 184, column: 12, scope: !5671)
!5673 = !DILocation(line: 184, column: 6, scope: !5647)
!5674 = !DILocation(line: 185, column: 3, scope: !5671)
!5675 = !DILocation(line: 187, column: 23, scope: !5647)
!5676 = !DILocation(line: 187, column: 2, scope: !5647)
!5677 = !DILocation(line: 187, column: 11, scope: !5647)
!5678 = !DILocation(line: 187, column: 21, scope: !5647)
!5679 = !DILocation(line: 188, column: 37, scope: !5647)
!5680 = !DILocation(line: 188, column: 46, scope: !5647)
!5681 = !DILocation(line: 188, column: 50, scope: !5647)
!5682 = !DILocation(line: 189, column: 6, scope: !5647)
!5683 = !DILocation(line: 189, column: 15, scope: !5647)
!5684 = !DILocation(line: 188, column: 24, scope: !5647)
!5685 = !DILocation(line: 188, column: 2, scope: !5647)
!5686 = !DILocation(line: 188, column: 11, scope: !5647)
!5687 = !DILocation(line: 188, column: 22, scope: !5647)
!5688 = !DILocation(line: 192, column: 7, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 192, column: 6)
!5690 = !DILocation(line: 192, column: 16, scope: !5689)
!5691 = !DILocation(line: 192, column: 6, scope: !5647)
!5692 = !DILocation(line: 193, column: 3, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 192, column: 28)
!5694 = !DILocation(line: 193, column: 12, scope: !5693)
!5695 = !DILocation(line: 193, column: 22, scope: !5693)
!5696 = !DILocation(line: 194, column: 3, scope: !5693)
!5697 = !DILocation(line: 197, column: 9, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 197, column: 2)
!5699 = !DILocation(line: 197, column: 19, scope: !5698)
!5700 = !DILocation(line: 197, column: 7, scope: !5698)
!5701 = !DILocation(line: 197, column: 24, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 197, column: 2)
!5703 = !DILocation(line: 197, column: 28, scope: !5702)
!5704 = !DILocation(line: 197, column: 37, scope: !5702)
!5705 = !DILocation(line: 197, column: 26, scope: !5702)
!5706 = !DILocation(line: 197, column: 2, scope: !5698)
!5707 = !DILocation(line: 198, column: 35, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 197, column: 61)
!5709 = !DILocation(line: 198, column: 44, scope: !5708)
!5710 = !DILocation(line: 198, column: 48, scope: !5708)
!5711 = !DILocation(line: 198, column: 9, scope: !5708)
!5712 = !DILocation(line: 198, column: 7, scope: !5708)
!5713 = !DILocation(line: 199, column: 14, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 199, column: 7)
!5715 = !DILocation(line: 199, column: 7, scope: !5714)
!5716 = !DILocation(line: 199, column: 7, scope: !5708)
!5717 = !DILocation(line: 200, column: 15, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 199, column: 20)
!5719 = !DILocation(line: 200, column: 24, scope: !5718)
!5720 = !DILocation(line: 200, column: 28, scope: !5718)
!5721 = !DILocation(line: 200, column: 36, scope: !5718)
!5722 = !DILocation(line: 200, column: 45, scope: !5718)
!5723 = !DILocation(line: 200, column: 4, scope: !5718)
!5724 = !DILocation(line: 201, column: 4, scope: !5718)
!5725 = !DILocation(line: 201, column: 13, scope: !5718)
!5726 = !DILocation(line: 201, column: 23, scope: !5718)
!5727 = !DILocation(line: 202, column: 19, scope: !5718)
!5728 = !DILocation(line: 202, column: 11, scope: !5718)
!5729 = !DILocation(line: 202, column: 4, scope: !5718)
!5730 = !DILocation(line: 204, column: 18, scope: !5708)
!5731 = !DILocation(line: 204, column: 3, scope: !5708)
!5732 = !DILocation(line: 205, column: 28, scope: !5708)
!5733 = !DILocation(line: 205, column: 3, scope: !5708)
!5734 = !DILocation(line: 205, column: 12, scope: !5708)
!5735 = !DILocation(line: 205, column: 23, scope: !5708)
!5736 = !DILocation(line: 205, column: 26, scope: !5708)
!5737 = !DILocation(line: 206, column: 2, scope: !5708)
!5738 = !DILocation(line: 197, column: 49, scope: !5702)
!5739 = !DILocation(line: 197, column: 57, scope: !5702)
!5740 = !DILocation(line: 197, column: 2, scope: !5702)
!5741 = distinct !{!5741, !5706, !5742}
!5742 = !DILocation(line: 206, column: 2, scope: !5698)
!5743 = !DILocation(line: 208, column: 2, scope: !5647)
!5744 = !DILocation(line: 209, column: 1, scope: !5647)
!5745 = distinct !DISubprogram(name: "find_available_min_freq", scope: !3, file: !3, line: 83, type: !5746, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5746 = !DISubroutineType(types: !5747)
!5747 = !{!165, !177}
!5748 = !DILocalVariable(name: "devfreq", arg: 1, scope: !5745, file: !3, line: 83, type: !177)
!5749 = !DILocation(line: 83, column: 62, scope: !5745)
!5750 = !DILocalVariable(name: "opp", scope: !5745, file: !3, line: 85, type: !5655)
!5751 = !DILocation(line: 85, column: 21, scope: !5745)
!5752 = !DILocalVariable(name: "min_freq", scope: !5745, file: !3, line: 86, type: !165)
!5753 = !DILocation(line: 86, column: 16, scope: !5745)
!5754 = !DILocation(line: 88, column: 34, scope: !5745)
!5755 = !DILocation(line: 88, column: 43, scope: !5745)
!5756 = !DILocation(line: 88, column: 47, scope: !5745)
!5757 = !DILocation(line: 88, column: 8, scope: !5745)
!5758 = !DILocation(line: 88, column: 6, scope: !5745)
!5759 = !DILocation(line: 89, column: 13, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 89, column: 6)
!5761 = !DILocation(line: 89, column: 6, scope: !5760)
!5762 = !DILocation(line: 89, column: 6, scope: !5745)
!5763 = !DILocation(line: 90, column: 12, scope: !5760)
!5764 = !DILocation(line: 90, column: 3, scope: !5760)
!5765 = !DILocation(line: 92, column: 18, scope: !5760)
!5766 = !DILocation(line: 92, column: 3, scope: !5760)
!5767 = !DILocation(line: 94, column: 9, scope: !5745)
!5768 = !DILocation(line: 94, column: 2, scope: !5745)
!5769 = distinct !DISubprogram(name: "find_available_max_freq", scope: !3, file: !3, line: 97, type: !5746, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5770 = !DILocalVariable(name: "devfreq", arg: 1, scope: !5769, file: !3, line: 97, type: !177)
!5771 = !DILocation(line: 97, column: 62, scope: !5769)
!5772 = !DILocalVariable(name: "opp", scope: !5769, file: !3, line: 99, type: !5655)
!5773 = !DILocation(line: 99, column: 21, scope: !5769)
!5774 = !DILocalVariable(name: "max_freq", scope: !5769, file: !3, line: 100, type: !165)
!5775 = !DILocation(line: 100, column: 16, scope: !5769)
!5776 = !DILocation(line: 102, column: 35, scope: !5769)
!5777 = !DILocation(line: 102, column: 44, scope: !5769)
!5778 = !DILocation(line: 102, column: 48, scope: !5769)
!5779 = !DILocation(line: 102, column: 8, scope: !5769)
!5780 = !DILocation(line: 102, column: 6, scope: !5769)
!5781 = !DILocation(line: 103, column: 13, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5769, file: !3, line: 103, column: 6)
!5783 = !DILocation(line: 103, column: 6, scope: !5782)
!5784 = !DILocation(line: 103, column: 6, scope: !5769)
!5785 = !DILocation(line: 104, column: 12, scope: !5782)
!5786 = !DILocation(line: 104, column: 3, scope: !5782)
!5787 = !DILocation(line: 106, column: 18, scope: !5782)
!5788 = !DILocation(line: 106, column: 3, scope: !5782)
!5789 = !DILocation(line: 108, column: 9, scope: !5769)
!5790 = !DILocation(line: 108, column: 2, scope: !5769)
!5791 = distinct !DISubprogram(name: "dev_name", scope: !60, file: !60, line: 609, type: !5792, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5792 = !DISubroutineType(types: !5793)
!5793 = !{!225, !3613}
!5794 = !DILocalVariable(name: "dev", arg: 1, scope: !5791, file: !60, line: 609, type: !3613)
!5795 = !DILocation(line: 609, column: 57, scope: !5791)
!5796 = !DILocation(line: 612, column: 6, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5791, file: !60, line: 612, column: 6)
!5798 = !DILocation(line: 612, column: 11, scope: !5797)
!5799 = !DILocation(line: 612, column: 6, scope: !5791)
!5800 = !DILocation(line: 613, column: 10, scope: !5797)
!5801 = !DILocation(line: 613, column: 15, scope: !5797)
!5802 = !DILocation(line: 613, column: 3, scope: !5797)
!5803 = !DILocation(line: 615, column: 23, scope: !5791)
!5804 = !DILocation(line: 615, column: 28, scope: !5791)
!5805 = !DILocation(line: 615, column: 9, scope: !5791)
!5806 = !DILocation(line: 615, column: 2, scope: !5791)
!5807 = !DILocation(line: 616, column: 1, scope: !5791)
!5808 = distinct !DISubprogram(name: "devm_kzalloc", scope: !60, file: !60, line: 215, type: !5809, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5809 = !DISubroutineType(types: !5810)
!5810 = !{!176, !3199, !309, !167}
!5811 = !DILocalVariable(name: "dev", arg: 1, scope: !5808, file: !60, line: 215, type: !3199)
!5812 = !DILocation(line: 215, column: 49, scope: !5808)
!5813 = !DILocalVariable(name: "size", arg: 2, scope: !5808, file: !60, line: 215, type: !309)
!5814 = !DILocation(line: 215, column: 61, scope: !5808)
!5815 = !DILocalVariable(name: "gfp", arg: 3, scope: !5808, file: !60, line: 215, type: !167)
!5816 = !DILocation(line: 215, column: 73, scope: !5808)
!5817 = !DILocation(line: 217, column: 22, scope: !5808)
!5818 = !DILocation(line: 217, column: 27, scope: !5808)
!5819 = !DILocation(line: 217, column: 33, scope: !5808)
!5820 = !DILocation(line: 217, column: 37, scope: !5808)
!5821 = !DILocation(line: 217, column: 9, scope: !5808)
!5822 = !DILocation(line: 217, column: 2, scope: !5808)
!5823 = distinct !DISubprogram(name: "array3_size", scope: !5824, file: !5824, line: 285, type: !5825, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5824 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!309, !309, !309, !309}
!5827 = !DILocalVariable(name: "a", arg: 1, scope: !5823, file: !5824, line: 285, type: !309)
!5828 = !DILocation(line: 285, column: 54, scope: !5823)
!5829 = !DILocalVariable(name: "b", arg: 2, scope: !5823, file: !5824, line: 285, type: !309)
!5830 = !DILocation(line: 285, column: 64, scope: !5823)
!5831 = !DILocalVariable(name: "c", arg: 3, scope: !5823, file: !5824, line: 285, type: !309)
!5832 = !DILocation(line: 285, column: 74, scope: !5823)
!5833 = !DILocalVariable(name: "bytes", scope: !5823, file: !5824, line: 287, type: !309)
!5834 = !DILocation(line: 287, column: 9, scope: !5823)
!5835 = !DILocalVariable(name: "__a", scope: !5836, file: !5824, line: 289, type: !309)
!5836 = distinct !DILexicalBlock(scope: !5837, file: !5824, line: 289, column: 6)
!5837 = distinct !DILexicalBlock(scope: !5823, file: !5824, line: 289, column: 6)
!5838 = !DILocation(line: 289, column: 6, scope: !5836)
!5839 = !DILocalVariable(name: "__b", scope: !5836, file: !5824, line: 289, type: !309)
!5840 = !DILocalVariable(name: "__d", scope: !5836, file: !5824, line: 289, type: !5841)
!5841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!5842 = !DILocation(line: 289, column: 6, scope: !5837)
!5843 = !DILocation(line: 289, column: 6, scope: !5823)
!5844 = !DILocation(line: 290, column: 3, scope: !5837)
!5845 = !DILocalVariable(name: "__a", scope: !5846, file: !5824, line: 291, type: !309)
!5846 = distinct !DILexicalBlock(scope: !5847, file: !5824, line: 291, column: 6)
!5847 = distinct !DILexicalBlock(scope: !5823, file: !5824, line: 291, column: 6)
!5848 = !DILocation(line: 291, column: 6, scope: !5846)
!5849 = !DILocalVariable(name: "__b", scope: !5846, file: !5824, line: 291, type: !309)
!5850 = !DILocalVariable(name: "__d", scope: !5846, file: !5824, line: 291, type: !5841)
!5851 = !DILocation(line: 291, column: 6, scope: !5847)
!5852 = !DILocation(line: 291, column: 6, scope: !5823)
!5853 = !DILocation(line: 292, column: 3, scope: !5847)
!5854 = !DILocation(line: 294, column: 9, scope: !5823)
!5855 = !DILocation(line: 294, column: 2, scope: !5823)
!5856 = !DILocation(line: 295, column: 1, scope: !5823)
!5857 = distinct !DISubprogram(name: "devm_kcalloc", scope: !60, file: !60, line: 229, type: !5858, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5858 = !DISubroutineType(types: !5859)
!5859 = !{!176, !3199, !309, !309, !167}
!5860 = !DILocalVariable(name: "dev", arg: 1, scope: !5857, file: !60, line: 229, type: !3199)
!5861 = !DILocation(line: 229, column: 49, scope: !5857)
!5862 = !DILocalVariable(name: "n", arg: 2, scope: !5857, file: !60, line: 230, type: !309)
!5863 = !DILocation(line: 230, column: 13, scope: !5857)
!5864 = !DILocalVariable(name: "size", arg: 3, scope: !5857, file: !60, line: 230, type: !309)
!5865 = !DILocation(line: 230, column: 23, scope: !5857)
!5866 = !DILocalVariable(name: "flags", arg: 4, scope: !5857, file: !60, line: 230, type: !167)
!5867 = !DILocation(line: 230, column: 35, scope: !5857)
!5868 = !DILocation(line: 232, column: 28, scope: !5857)
!5869 = !DILocation(line: 232, column: 33, scope: !5857)
!5870 = !DILocation(line: 232, column: 36, scope: !5857)
!5871 = !DILocation(line: 232, column: 42, scope: !5857)
!5872 = !DILocation(line: 232, column: 48, scope: !5857)
!5873 = !DILocation(line: 232, column: 9, scope: !5857)
!5874 = !DILocation(line: 232, column: 2, scope: !5857)
!5875 = distinct !DISubprogram(name: "qos_min_notifier_call", scope: !3, file: !3, line: 676, type: !3490, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5876 = !DILocalVariable(name: "nb", arg: 1, scope: !5875, file: !3, line: 676, type: !3484)
!5877 = !DILocation(line: 676, column: 57, scope: !5875)
!5878 = !DILocalVariable(name: "val", arg: 2, scope: !5875, file: !3, line: 677, type: !165)
!5879 = !DILocation(line: 677, column: 21, scope: !5875)
!5880 = !DILocalVariable(name: "ptr", arg: 3, scope: !5875, file: !3, line: 677, type: !176)
!5881 = !DILocation(line: 677, column: 32, scope: !5875)
!5882 = !DILocalVariable(name: "__mptr", scope: !5883, file: !3, line: 679, type: !176)
!5883 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 679, column: 27)
!5884 = !DILocation(line: 679, column: 27, scope: !5883)
!5885 = !DILocation(line: 679, column: 27, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5883, file: !3, line: 679, column: 27)
!5887 = !DILocation(line: 679, column: 9, scope: !5875)
!5888 = !DILocation(line: 679, column: 2, scope: !5875)
!5889 = distinct !DISubprogram(name: "qos_max_notifier_call", scope: !3, file: !3, line: 686, type: !3490, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5890 = !DILocalVariable(name: "nb", arg: 1, scope: !5889, file: !3, line: 686, type: !3484)
!5891 = !DILocation(line: 686, column: 57, scope: !5889)
!5892 = !DILocalVariable(name: "val", arg: 2, scope: !5889, file: !3, line: 687, type: !165)
!5893 = !DILocation(line: 687, column: 21, scope: !5889)
!5894 = !DILocalVariable(name: "ptr", arg: 3, scope: !5889, file: !3, line: 687, type: !176)
!5895 = !DILocation(line: 687, column: 32, scope: !5889)
!5896 = !DILocalVariable(name: "__mptr", scope: !5897, file: !3, line: 689, type: !176)
!5897 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 689, column: 27)
!5898 = !DILocation(line: 689, column: 27, scope: !5897)
!5899 = !DILocation(line: 689, column: 27, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 689, column: 27)
!5901 = !DILocation(line: 689, column: 9, scope: !5889)
!5902 = !DILocation(line: 689, column: 2, scope: !5889)
!5903 = distinct !DISubprogram(name: "try_then_request_governor", scope: !3, file: !3, line: 292, type: !5904, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5904 = !DISubroutineType(types: !5905)
!5905 = !{!3840, !225}
!5906 = !DILocalVariable(name: "name", arg: 1, scope: !5903, file: !3, line: 292, type: !225)
!5907 = !DILocation(line: 292, column: 71, scope: !5903)
!5908 = !DILocalVariable(name: "governor", scope: !5903, file: !3, line: 294, type: !3840)
!5909 = !DILocation(line: 294, column: 27, scope: !5903)
!5910 = !DILocalVariable(name: "err", scope: !5903, file: !3, line: 295, type: !173)
!5911 = !DILocation(line: 295, column: 6, scope: !5903)
!5912 = !DILocation(line: 297, column: 2, scope: !5903)
!5913 = !DILocation(line: 297, column: 2, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 297, column: 2)
!5915 = !DILocation(line: 299, column: 21, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 299, column: 6)
!5917 = !DILocation(line: 299, column: 6, scope: !5916)
!5918 = !DILocation(line: 299, column: 6, scope: !5903)
!5919 = !DILocation(line: 300, column: 3, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 299, column: 28)
!5921 = !DILocation(line: 301, column: 10, scope: !5920)
!5922 = !DILocation(line: 301, column: 3, scope: !5920)
!5923 = !DILocation(line: 304, column: 35, scope: !5903)
!5924 = !DILocation(line: 304, column: 13, scope: !5903)
!5925 = !DILocation(line: 304, column: 11, scope: !5903)
!5926 = !DILocation(line: 305, column: 13, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 305, column: 6)
!5928 = !DILocation(line: 305, column: 6, scope: !5927)
!5929 = !DILocation(line: 305, column: 6, scope: !5903)
!5930 = !DILocation(line: 306, column: 3, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 305, column: 24)
!5932 = !DILocation(line: 308, column: 16, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 308, column: 7)
!5934 = !DILocation(line: 308, column: 8, scope: !5933)
!5935 = !DILocation(line: 308, column: 7, scope: !5931)
!5936 = !DILocation(line: 310, column: 10, scope: !5933)
!5937 = !DILocation(line: 310, column: 8, scope: !5933)
!5938 = !DILocation(line: 310, column: 4, scope: !5933)
!5939 = !DILocation(line: 312, column: 40, scope: !5933)
!5940 = !DILocation(line: 312, column: 10, scope: !5933)
!5941 = !DILocation(line: 312, column: 8, scope: !5933)
!5942 = !DILocation(line: 314, column: 3, scope: !5931)
!5943 = !DILocation(line: 315, column: 7, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 315, column: 7)
!5945 = !DILocation(line: 315, column: 7, scope: !5931)
!5946 = !DILocation(line: 316, column: 12, scope: !5944)
!5947 = !DILocation(line: 316, column: 16, scope: !5944)
!5948 = !DILocation(line: 316, column: 11, scope: !5944)
!5949 = !DILocation(line: 316, column: 31, scope: !5944)
!5950 = !DILocation(line: 316, column: 23, scope: !5944)
!5951 = !DILocation(line: 316, column: 38, scope: !5944)
!5952 = !DILocation(line: 316, column: 4, scope: !5944)
!5953 = !DILocation(line: 318, column: 36, scope: !5931)
!5954 = !DILocation(line: 318, column: 14, scope: !5931)
!5955 = !DILocation(line: 318, column: 12, scope: !5931)
!5956 = !DILocation(line: 319, column: 2, scope: !5931)
!5957 = !DILocation(line: 321, column: 9, scope: !5903)
!5958 = !DILocation(line: 321, column: 2, scope: !5903)
!5959 = !DILocation(line: 322, column: 1, scope: !5903)
!5960 = distinct !DISubprogram(name: "PTR_ERR", scope: !5161, file: !5161, line: 29, type: !5961, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5961 = !DISubroutineType(types: !5962)
!5962 = !{!105, !3041}
!5963 = !DILocalVariable(name: "ptr", arg: 1, scope: !5960, file: !5161, line: 29, type: !3041)
!5964 = !DILocation(line: 29, column: 61, scope: !5960)
!5965 = !DILocation(line: 31, column: 16, scope: !5960)
!5966 = !DILocation(line: 31, column: 9, scope: !5960)
!5967 = !DILocation(line: 31, column: 2, scope: !5960)
!5968 = distinct !DISubprogram(name: "list_add", scope: !4375, file: !4375, line: 84, type: !5969, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5969 = !DISubroutineType(types: !5970)
!5970 = !{null, !184, !184}
!5971 = !DILocalVariable(name: "new", arg: 1, scope: !5968, file: !4375, line: 84, type: !184)
!5972 = !DILocation(line: 84, column: 47, scope: !5968)
!5973 = !DILocalVariable(name: "head", arg: 2, scope: !5968, file: !4375, line: 84, type: !184)
!5974 = !DILocation(line: 84, column: 70, scope: !5968)
!5975 = !DILocation(line: 86, column: 13, scope: !5968)
!5976 = !DILocation(line: 86, column: 18, scope: !5968)
!5977 = !DILocation(line: 86, column: 24, scope: !5968)
!5978 = !DILocation(line: 86, column: 30, scope: !5968)
!5979 = !DILocation(line: 86, column: 2, scope: !5968)
!5980 = !DILocation(line: 87, column: 1, scope: !5968)
!5981 = distinct !DISubprogram(name: "devfreq_remove_device", scope: !3, file: !3, line: 920, type: !4049, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!5982 = !DILocalVariable(name: "devfreq", arg: 1, scope: !5981, file: !3, line: 920, type: !177)
!5983 = !DILocation(line: 920, column: 43, scope: !5981)
!5984 = !DILocation(line: 922, column: 7, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 922, column: 6)
!5986 = !DILocation(line: 922, column: 6, scope: !5981)
!5987 = !DILocation(line: 923, column: 3, scope: !5985)
!5988 = !DILocation(line: 925, column: 6, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 925, column: 6)
!5990 = !DILocation(line: 925, column: 15, scope: !5989)
!5991 = !DILocation(line: 925, column: 6, scope: !5981)
!5992 = !DILocation(line: 926, column: 3, scope: !5989)
!5993 = !DILocation(line: 926, column: 12, scope: !5989)
!5994 = !DILocation(line: 926, column: 22, scope: !5989)
!5995 = !DILocation(line: 926, column: 36, scope: !5989)
!5996 = !DILocation(line: 928, column: 21, scope: !5981)
!5997 = !DILocation(line: 928, column: 30, scope: !5981)
!5998 = !DILocation(line: 928, column: 2, scope: !5981)
!5999 = !DILocation(line: 930, column: 2, scope: !5981)
!6000 = !DILocation(line: 931, column: 1, scope: !5981)
!6001 = distinct !DISubprogram(name: "devm_devfreq_add_device", scope: !3, file: !3, line: 961, type: !3845, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6002 = !DILocalVariable(name: "dev", arg: 1, scope: !6001, file: !3, line: 961, type: !3199)
!6003 = !DILocation(line: 961, column: 56, scope: !6001)
!6004 = !DILocalVariable(name: "profile", arg: 2, scope: !6001, file: !3, line: 962, type: !3740)
!6005 = !DILocation(line: 962, column: 34, scope: !6001)
!6006 = !DILocalVariable(name: "governor_name", arg: 3, scope: !6001, file: !3, line: 963, type: !225)
!6007 = !DILocation(line: 963, column: 18, scope: !6001)
!6008 = !DILocalVariable(name: "data", arg: 4, scope: !6001, file: !3, line: 964, type: !176)
!6009 = !DILocation(line: 964, column: 12, scope: !6001)
!6010 = !DILocalVariable(name: "ptr", scope: !6001, file: !3, line: 966, type: !3839)
!6011 = !DILocation(line: 966, column: 19, scope: !6001)
!6012 = !DILocalVariable(name: "devfreq", scope: !6001, file: !3, line: 966, type: !177)
!6013 = !DILocation(line: 966, column: 25, scope: !6001)
!6014 = !DILocation(line: 968, column: 8, scope: !6001)
!6015 = !DILocation(line: 968, column: 6, scope: !6001)
!6016 = !DILocation(line: 969, column: 7, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 969, column: 6)
!6018 = !DILocation(line: 969, column: 6, scope: !6001)
!6019 = !DILocation(line: 970, column: 10, scope: !6017)
!6020 = !DILocation(line: 970, column: 3, scope: !6017)
!6021 = !DILocation(line: 972, column: 31, scope: !6001)
!6022 = !DILocation(line: 972, column: 36, scope: !6001)
!6023 = !DILocation(line: 972, column: 45, scope: !6001)
!6024 = !DILocation(line: 972, column: 60, scope: !6001)
!6025 = !DILocation(line: 972, column: 12, scope: !6001)
!6026 = !DILocation(line: 972, column: 10, scope: !6001)
!6027 = !DILocation(line: 973, column: 13, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 973, column: 6)
!6029 = !DILocation(line: 973, column: 6, scope: !6028)
!6030 = !DILocation(line: 973, column: 6, scope: !6001)
!6031 = !DILocation(line: 974, column: 15, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 973, column: 23)
!6033 = !DILocation(line: 974, column: 3, scope: !6032)
!6034 = !DILocation(line: 975, column: 10, scope: !6032)
!6035 = !DILocation(line: 975, column: 3, scope: !6032)
!6036 = !DILocation(line: 978, column: 9, scope: !6001)
!6037 = !DILocation(line: 978, column: 3, scope: !6001)
!6038 = !DILocation(line: 978, column: 7, scope: !6001)
!6039 = !DILocation(line: 979, column: 13, scope: !6001)
!6040 = !DILocation(line: 979, column: 18, scope: !6001)
!6041 = !DILocation(line: 979, column: 2, scope: !6001)
!6042 = !DILocation(line: 981, column: 9, scope: !6001)
!6043 = !DILocation(line: 981, column: 2, scope: !6001)
!6044 = !DILocation(line: 982, column: 1, scope: !6001)
!6045 = distinct !DISubprogram(name: "devres_alloc", scope: !60, file: !60, line: 178, type: !6046, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{!176, !6048, !309, !167}
!6048 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_release_t", file: !60, line: 165, baseType: !6049)
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6050, size: 64)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{null, !3199, !176}
!6052 = !DILocalVariable(name: "release", arg: 1, scope: !6045, file: !60, line: 178, type: !6048)
!6053 = !DILocation(line: 178, column: 47, scope: !6045)
!6054 = !DILocalVariable(name: "size", arg: 2, scope: !6045, file: !60, line: 178, type: !309)
!6055 = !DILocation(line: 178, column: 63, scope: !6045)
!6056 = !DILocalVariable(name: "gfp", arg: 3, scope: !6045, file: !60, line: 178, type: !167)
!6057 = !DILocation(line: 178, column: 75, scope: !6045)
!6058 = !DILocation(line: 180, column: 27, scope: !6045)
!6059 = !DILocation(line: 180, column: 36, scope: !6045)
!6060 = !DILocation(line: 180, column: 42, scope: !6045)
!6061 = !DILocation(line: 180, column: 9, scope: !6045)
!6062 = !DILocation(line: 180, column: 2, scope: !6045)
!6063 = distinct !DISubprogram(name: "devm_devfreq_dev_release", scope: !3, file: !3, line: 944, type: !6050, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6064 = !DILocalVariable(name: "dev", arg: 1, scope: !6063, file: !3, line: 944, type: !3199)
!6065 = !DILocation(line: 944, column: 53, scope: !6063)
!6066 = !DILocalVariable(name: "res", arg: 2, scope: !6063, file: !3, line: 944, type: !176)
!6067 = !DILocation(line: 944, column: 64, scope: !6063)
!6068 = !DILocation(line: 946, column: 44, scope: !6063)
!6069 = !DILocation(line: 946, column: 25, scope: !6063)
!6070 = !DILocation(line: 946, column: 24, scope: !6063)
!6071 = !DILocation(line: 946, column: 2, scope: !6063)
!6072 = !DILocation(line: 947, column: 1, scope: !6063)
!6073 = distinct !DISubprogram(name: "devfreq_get_devfreq_by_node", scope: !3, file: !3, line: 992, type: !6074, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6074 = !DISubroutineType(types: !6075)
!6075 = !{!177, !3576}
!6076 = !DILocalVariable(name: "node", arg: 1, scope: !6073, file: !3, line: 992, type: !3576)
!6077 = !DILocation(line: 992, column: 65, scope: !6073)
!6078 = !DILocalVariable(name: "devfreq", scope: !6073, file: !3, line: 994, type: !177)
!6079 = !DILocation(line: 994, column: 18, scope: !6073)
!6080 = !DILocation(line: 996, column: 7, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 996, column: 6)
!6082 = !DILocation(line: 996, column: 6, scope: !6073)
!6083 = !DILocation(line: 997, column: 10, scope: !6081)
!6084 = !DILocation(line: 997, column: 3, scope: !6081)
!6085 = !DILocation(line: 999, column: 2, scope: !6073)
!6086 = !DILocalVariable(name: "__mptr", scope: !6087, file: !3, line: 1000, type: !176)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 1000, column: 2)
!6088 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 1000, column: 2)
!6089 = !DILocation(line: 1000, column: 2, scope: !6087)
!6090 = !DILocation(line: 1000, column: 2, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 1000, column: 2)
!6092 = !DILocation(line: 1000, column: 2, scope: !6088)
!6093 = !DILocation(line: 1000, column: 2, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 1000, column: 2)
!6095 = !DILocation(line: 1001, column: 7, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 1001, column: 7)
!6097 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 1000, column: 52)
!6098 = !DILocation(line: 1001, column: 16, scope: !6096)
!6099 = !DILocation(line: 1001, column: 20, scope: !6096)
!6100 = !DILocation(line: 1002, column: 4, scope: !6096)
!6101 = !DILocation(line: 1002, column: 7, scope: !6096)
!6102 = !DILocation(line: 1002, column: 16, scope: !6096)
!6103 = !DILocation(line: 1002, column: 20, scope: !6096)
!6104 = !DILocation(line: 1002, column: 28, scope: !6096)
!6105 = !DILocation(line: 1002, column: 39, scope: !6096)
!6106 = !DILocation(line: 1002, column: 36, scope: !6096)
!6107 = !DILocation(line: 1001, column: 7, scope: !6097)
!6108 = !DILocation(line: 1003, column: 4, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 1002, column: 45)
!6110 = !DILocation(line: 1004, column: 11, scope: !6109)
!6111 = !DILocation(line: 1004, column: 4, scope: !6109)
!6112 = !DILocation(line: 1006, column: 2, scope: !6097)
!6113 = !DILocalVariable(name: "__mptr", scope: !6114, file: !3, line: 1000, type: !176)
!6114 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 1000, column: 2)
!6115 = !DILocation(line: 1000, column: 2, scope: !6114)
!6116 = !DILocation(line: 1000, column: 2, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 1000, column: 2)
!6118 = distinct !{!6118, !6092, !6119}
!6119 = !DILocation(line: 1006, column: 2, scope: !6088)
!6120 = !DILocation(line: 1007, column: 2, scope: !6073)
!6121 = !DILocation(line: 1009, column: 9, scope: !6073)
!6122 = !DILocation(line: 1009, column: 2, scope: !6073)
!6123 = !DILocation(line: 1010, column: 1, scope: !6073)
!6124 = distinct !DISubprogram(name: "devfreq_get_devfreq_by_phandle", scope: !3, file: !3, line: 1020, type: !6125, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6125 = !DISubroutineType(types: !6126)
!6126 = !{!177, !3199, !225, !173}
!6127 = !DILocalVariable(name: "dev", arg: 1, scope: !6124, file: !3, line: 1020, type: !3199)
!6128 = !DILocation(line: 1020, column: 63, scope: !6124)
!6129 = !DILocalVariable(name: "phandle_name", arg: 2, scope: !6124, file: !3, line: 1021, type: !225)
!6130 = !DILocation(line: 1021, column: 18, scope: !6124)
!6131 = !DILocalVariable(name: "index", arg: 3, scope: !6124, file: !3, line: 1021, type: !173)
!6132 = !DILocation(line: 1021, column: 36, scope: !6124)
!6133 = !DILocalVariable(name: "node", scope: !6124, file: !3, line: 1023, type: !3576)
!6134 = !DILocation(line: 1023, column: 22, scope: !6124)
!6135 = !DILocalVariable(name: "devfreq", scope: !6124, file: !3, line: 1024, type: !177)
!6136 = !DILocation(line: 1024, column: 18, scope: !6124)
!6137 = !DILocation(line: 1026, column: 7, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 1026, column: 6)
!6139 = !DILocation(line: 1026, column: 11, scope: !6138)
!6140 = !DILocation(line: 1026, column: 15, scope: !6138)
!6141 = !DILocation(line: 1026, column: 6, scope: !6124)
!6142 = !DILocation(line: 1027, column: 10, scope: !6138)
!6143 = !DILocation(line: 1027, column: 3, scope: !6138)
!6144 = !DILocation(line: 1029, column: 7, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 1029, column: 6)
!6146 = !DILocation(line: 1029, column: 12, scope: !6145)
!6147 = !DILocation(line: 1029, column: 6, scope: !6124)
!6148 = !DILocation(line: 1030, column: 10, scope: !6145)
!6149 = !DILocation(line: 1030, column: 3, scope: !6145)
!6150 = !DILocation(line: 1032, column: 26, scope: !6124)
!6151 = !DILocation(line: 1032, column: 31, scope: !6124)
!6152 = !DILocation(line: 1032, column: 40, scope: !6124)
!6153 = !DILocation(line: 1032, column: 54, scope: !6124)
!6154 = !DILocation(line: 1032, column: 9, scope: !6124)
!6155 = !DILocation(line: 1032, column: 7, scope: !6124)
!6156 = !DILocation(line: 1033, column: 7, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 1033, column: 6)
!6158 = !DILocation(line: 1033, column: 6, scope: !6124)
!6159 = !DILocation(line: 1034, column: 10, scope: !6157)
!6160 = !DILocation(line: 1034, column: 3, scope: !6157)
!6161 = !DILocation(line: 1036, column: 40, scope: !6124)
!6162 = !DILocation(line: 1036, column: 12, scope: !6124)
!6163 = !DILocation(line: 1036, column: 10, scope: !6124)
!6164 = !DILocation(line: 1037, column: 14, scope: !6124)
!6165 = !DILocation(line: 1037, column: 2, scope: !6124)
!6166 = !DILocation(line: 1039, column: 9, scope: !6124)
!6167 = !DILocation(line: 1039, column: 2, scope: !6124)
!6168 = !DILocation(line: 1040, column: 1, scope: !6124)
!6169 = distinct !DISubprogram(name: "of_node_put", scope: !3578, file: !3578, line: 129, type: !6170, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{null, !3576}
!6172 = !DILocalVariable(name: "node", arg: 1, scope: !6169, file: !3578, line: 129, type: !3576)
!6173 = !DILocation(line: 129, column: 52, scope: !6169)
!6174 = !DILocation(line: 129, column: 60, scope: !6169)
!6175 = distinct !DISubprogram(name: "devm_devfreq_remove_device", scope: !3, file: !3, line: 1062, type: !6176, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6176 = !DISubroutineType(types: !6177)
!6177 = !{null, !3199, !177}
!6178 = !DILocalVariable(name: "dev", arg: 1, scope: !6175, file: !3, line: 1062, type: !3199)
!6179 = !DILocation(line: 1062, column: 48, scope: !6175)
!6180 = !DILocalVariable(name: "devfreq", arg: 2, scope: !6175, file: !3, line: 1062, type: !177)
!6181 = !DILocation(line: 1062, column: 69, scope: !6175)
!6182 = !DILocalVariable(name: "__ret_warn_on", scope: !6183, file: !3, line: 1064, type: !173)
!6183 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 1064, column: 2)
!6184 = !DILocation(line: 1064, column: 2, scope: !6183)
!6185 = !DILocation(line: 1064, column: 2, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1064, column: 2)
!6187 = !DILocation(line: 1064, column: 2, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 1064, column: 2)
!6189 = !DILocation(line: 1064, column: 2, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 1064, column: 2)
!6191 = !DILocation(line: 1064, column: 2, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 1064, column: 2)
!6193 = !{i32 -2142682808, i32 -2142682779, i32 -2142682733, i32 -2142682675, i32 -2142682621, i32 -2142682567, i32 -2142682512, i32 -2142682481}
!6194 = !DILocation(line: 1064, column: 2, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 1064, column: 2)
!6196 = !{i32 -2142682073, i32 -2142682066, i32 -2142682014, i32 -2142681983, i32 -2142681953}
!6197 = !DILocation(line: 1064, column: 2, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 1064, column: 2)
!6199 = !DILocation(line: 1066, column: 1, scope: !6175)
!6200 = distinct !DISubprogram(name: "devm_devfreq_dev_match", scope: !3, file: !3, line: 934, type: !6201, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6201 = !DISubroutineType(types: !6202)
!6202 = !{!173, !3199, !176, !176}
!6203 = !DILocalVariable(name: "dev", arg: 1, scope: !6200, file: !3, line: 934, type: !3199)
!6204 = !DILocation(line: 934, column: 50, scope: !6200)
!6205 = !DILocalVariable(name: "res", arg: 2, scope: !6200, file: !3, line: 934, type: !176)
!6206 = !DILocation(line: 934, column: 61, scope: !6200)
!6207 = !DILocalVariable(name: "data", arg: 3, scope: !6200, file: !3, line: 934, type: !176)
!6208 = !DILocation(line: 934, column: 72, scope: !6200)
!6209 = !DILocalVariable(name: "r", scope: !6200, file: !3, line: 936, type: !3839)
!6210 = !DILocation(line: 936, column: 19, scope: !6200)
!6211 = !DILocation(line: 936, column: 23, scope: !6200)
!6212 = !DILocalVariable(name: "__ret_warn_on", scope: !6213, file: !3, line: 938, type: !173)
!6213 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 938, column: 6)
!6214 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 938, column: 6)
!6215 = !DILocation(line: 938, column: 6, scope: !6213)
!6216 = !DILocation(line: 938, column: 6, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 938, column: 6)
!6218 = !DILocation(line: 938, column: 6, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 938, column: 6)
!6220 = !DILocation(line: 938, column: 6, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 938, column: 6)
!6222 = !DILocation(line: 938, column: 6, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 938, column: 6)
!6224 = !{i32 -2142688843, i32 -2142688814, i32 -2142688768, i32 -2142688710, i32 -2142688656, i32 -2142688602, i32 -2142688547, i32 -2142688516}
!6225 = !DILocation(line: 938, column: 6, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 938, column: 6)
!6227 = !{i32 -2142688109, i32 -2142688102, i32 -2142688050, i32 -2142688019, i32 -2142687989}
!6228 = !DILocation(line: 938, column: 6, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 938, column: 6)
!6230 = !DILocation(line: 938, column: 6, scope: !6214)
!6231 = !DILocation(line: 938, column: 6, scope: !6200)
!6232 = !DILocation(line: 939, column: 3, scope: !6214)
!6233 = !DILocation(line: 941, column: 10, scope: !6200)
!6234 = !DILocation(line: 941, column: 9, scope: !6200)
!6235 = !DILocation(line: 941, column: 15, scope: !6200)
!6236 = !DILocation(line: 941, column: 12, scope: !6200)
!6237 = !DILocation(line: 941, column: 2, scope: !6200)
!6238 = !DILocation(line: 942, column: 1, scope: !6200)
!6239 = distinct !DISubprogram(name: "devfreq_suspend_device", scope: !3, file: !3, line: 1077, type: !4049, scopeLine: 1078, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6240 = !DILocalVariable(name: "i", arg: 1, scope: !6241, file: !4773, line: 163, type: !173)
!6241 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !4773, file: !4773, line: 163, type: !6242, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6242 = !DISubroutineType(types: !6243)
!6243 = !{!173, !173, !4776}
!6244 = !DILocation(line: 163, column: 55, scope: !6241, inlinedAt: !6245)
!6245 = distinct !DILocation(line: 286, column: 9, scope: !6246, inlinedAt: !6250)
!6246 = distinct !DISubprogram(name: "arch_atomic_inc_return", scope: !6247, file: !6247, line: 284, type: !6248, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6247 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!6248 = !DISubroutineType(types: !6249)
!6249 = !{!173, !4776}
!6250 = distinct !DILocation(line: 251, column: 9, scope: !6251, inlinedAt: !6252)
!6251 = distinct !DISubprogram(name: "atomic_inc_return", scope: !4780, file: !4780, line: 248, type: !6248, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6252 = distinct !DILocation(line: 1084, column: 6, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1084, column: 6)
!6254 = !DILocalVariable(name: "v", arg: 2, scope: !6241, file: !4773, line: 163, type: !4776)
!6255 = !DILocation(line: 163, column: 68, scope: !6241, inlinedAt: !6245)
!6256 = !DILocalVariable(name: "__ret", scope: !6257, file: !4773, line: 165, type: !173)
!6257 = distinct !DILexicalBlock(scope: !6241, file: !4773, line: 165, column: 13)
!6258 = !DILocation(line: 165, column: 13, scope: !6257, inlinedAt: !6245)
!6259 = !DILocalVariable(name: "v", arg: 1, scope: !6246, file: !6247, line: 284, type: !4776)
!6260 = !DILocation(line: 284, column: 34, scope: !6246, inlinedAt: !6250)
!6261 = !DILocalVariable(name: "v", arg: 1, scope: !6262, file: !4612, line: 99, type: !4615)
!6262 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !4612, file: !4612, line: 99, type: !4613, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6263 = !DILocation(line: 99, column: 79, scope: !6262, inlinedAt: !6264)
!6264 = distinct !DILocation(line: 250, column: 2, scope: !6251, inlinedAt: !6252)
!6265 = !DILocalVariable(name: "size", arg: 2, scope: !6262, file: !4612, line: 99, type: !309)
!6266 = !DILocation(line: 99, column: 89, scope: !6262, inlinedAt: !6264)
!6267 = !DILocalVariable(name: "v", arg: 1, scope: !6251, file: !4780, line: 248, type: !4776)
!6268 = !DILocation(line: 248, column: 29, scope: !6251, inlinedAt: !6252)
!6269 = !DILocalVariable(name: "devfreq", arg: 1, scope: !6239, file: !3, line: 1077, type: !177)
!6270 = !DILocation(line: 1077, column: 44, scope: !6239)
!6271 = !DILocalVariable(name: "ret", scope: !6239, file: !3, line: 1079, type: !173)
!6272 = !DILocation(line: 1079, column: 6, scope: !6239)
!6273 = !DILocation(line: 1081, column: 7, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1081, column: 6)
!6275 = !DILocation(line: 1081, column: 6, scope: !6239)
!6276 = !DILocation(line: 1082, column: 3, scope: !6274)
!6277 = !DILocation(line: 1084, column: 25, scope: !6253)
!6278 = !DILocation(line: 1084, column: 34, scope: !6253)
!6279 = !DILocation(line: 250, column: 31, scope: !6251, inlinedAt: !6252)
!6280 = !DILocation(line: 101, column: 20, scope: !6262, inlinedAt: !6264)
!6281 = !DILocation(line: 101, column: 23, scope: !6262, inlinedAt: !6264)
!6282 = !DILocation(line: 101, column: 2, scope: !6262, inlinedAt: !6264)
!6283 = !DILocation(line: 102, column: 2, scope: !6262, inlinedAt: !6264)
!6284 = !DILocation(line: 251, column: 32, scope: !6251, inlinedAt: !6252)
!6285 = !DILocation(line: 286, column: 35, scope: !6246, inlinedAt: !6250)
!6286 = !DILocation(line: 165, column: 9, scope: !6241, inlinedAt: !6245)
!6287 = !{i32 -2146422490}
!6288 = !DILocation(line: 165, column: 11, scope: !6241, inlinedAt: !6245)
!6289 = !DILocation(line: 1084, column: 49, scope: !6253)
!6290 = !DILocation(line: 1084, column: 6, scope: !6239)
!6291 = !DILocation(line: 1085, column: 3, scope: !6253)
!6292 = !DILocation(line: 1087, column: 6, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1087, column: 6)
!6294 = !DILocation(line: 1087, column: 15, scope: !6293)
!6295 = !DILocation(line: 1087, column: 6, scope: !6239)
!6296 = !DILocation(line: 1088, column: 9, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 1087, column: 25)
!6298 = !DILocation(line: 1088, column: 18, scope: !6297)
!6299 = !DILocation(line: 1088, column: 28, scope: !6297)
!6300 = !DILocation(line: 1088, column: 42, scope: !6297)
!6301 = !DILocation(line: 1088, column: 7, scope: !6297)
!6302 = !DILocation(line: 1090, column: 7, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 1090, column: 7)
!6304 = !DILocation(line: 1090, column: 7, scope: !6297)
!6305 = !DILocation(line: 1091, column: 11, scope: !6303)
!6306 = !DILocation(line: 1091, column: 4, scope: !6303)
!6307 = !DILocation(line: 1092, column: 2, scope: !6297)
!6308 = !DILocation(line: 1094, column: 6, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1094, column: 6)
!6310 = !DILocation(line: 1094, column: 15, scope: !6309)
!6311 = !DILocation(line: 1094, column: 6, scope: !6239)
!6312 = !DILocation(line: 1095, column: 15, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 1094, column: 29)
!6314 = !DILocation(line: 1095, column: 24, scope: !6313)
!6315 = !DILocation(line: 1095, column: 3, scope: !6313)
!6316 = !DILocation(line: 1096, column: 28, scope: !6313)
!6317 = !DILocation(line: 1096, column: 37, scope: !6313)
!6318 = !DILocation(line: 1096, column: 46, scope: !6313)
!6319 = !DILocation(line: 1096, column: 9, scope: !6313)
!6320 = !DILocation(line: 1096, column: 7, scope: !6313)
!6321 = !DILocation(line: 1097, column: 17, scope: !6313)
!6322 = !DILocation(line: 1097, column: 26, scope: !6313)
!6323 = !DILocation(line: 1097, column: 3, scope: !6313)
!6324 = !DILocation(line: 1098, column: 7, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 1098, column: 7)
!6326 = !DILocation(line: 1098, column: 7, scope: !6313)
!6327 = !DILocation(line: 1099, column: 11, scope: !6325)
!6328 = !DILocation(line: 1099, column: 4, scope: !6325)
!6329 = !DILocation(line: 1100, column: 2, scope: !6313)
!6330 = !DILocation(line: 1102, column: 2, scope: !6239)
!6331 = !DILocation(line: 1103, column: 1, scope: !6239)
!6332 = distinct !DISubprogram(name: "devfreq_resume_device", scope: !3, file: !3, line: 1114, type: !4049, scopeLine: 1115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6333 = !DILocation(line: 163, column: 55, scope: !6241, inlinedAt: !6334)
!6334 = distinct !DILocation(line: 178, column: 9, scope: !6335, inlinedAt: !6336)
!6335 = distinct !DISubprogram(name: "arch_atomic_sub_return", scope: !4773, file: !4773, line: 176, type: !6242, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6336 = distinct !DILocation(line: 457, column: 9, scope: !6337, inlinedAt: !6338)
!6337 = distinct !DISubprogram(name: "arch_atomic_dec_return", scope: !6247, file: !6247, line: 455, type: !6248, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6338 = distinct !DILocation(line: 341, column: 9, scope: !6339, inlinedAt: !6340)
!6339 = distinct !DISubprogram(name: "atomic_dec_return", scope: !4780, file: !4780, line: 338, type: !6248, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6340 = distinct !DILocation(line: 1121, column: 6, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1121, column: 6)
!6342 = !DILocation(line: 163, column: 68, scope: !6241, inlinedAt: !6334)
!6343 = !DILocation(line: 165, column: 13, scope: !6257, inlinedAt: !6334)
!6344 = !DILocalVariable(name: "i", arg: 1, scope: !6335, file: !4773, line: 176, type: !173)
!6345 = !DILocation(line: 176, column: 55, scope: !6335, inlinedAt: !6336)
!6346 = !DILocalVariable(name: "v", arg: 2, scope: !6335, file: !4773, line: 176, type: !4776)
!6347 = !DILocation(line: 176, column: 68, scope: !6335, inlinedAt: !6336)
!6348 = !DILocalVariable(name: "v", arg: 1, scope: !6337, file: !6247, line: 455, type: !4776)
!6349 = !DILocation(line: 455, column: 34, scope: !6337, inlinedAt: !6338)
!6350 = !DILocation(line: 99, column: 79, scope: !6262, inlinedAt: !6351)
!6351 = distinct !DILocation(line: 340, column: 2, scope: !6339, inlinedAt: !6340)
!6352 = !DILocation(line: 99, column: 89, scope: !6262, inlinedAt: !6351)
!6353 = !DILocalVariable(name: "v", arg: 1, scope: !6339, file: !4780, line: 338, type: !4776)
!6354 = !DILocation(line: 338, column: 29, scope: !6339, inlinedAt: !6340)
!6355 = !DILocalVariable(name: "devfreq", arg: 1, scope: !6332, file: !3, line: 1114, type: !177)
!6356 = !DILocation(line: 1114, column: 43, scope: !6332)
!6357 = !DILocalVariable(name: "ret", scope: !6332, file: !3, line: 1116, type: !173)
!6358 = !DILocation(line: 1116, column: 6, scope: !6332)
!6359 = !DILocation(line: 1118, column: 7, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1118, column: 6)
!6361 = !DILocation(line: 1118, column: 6, scope: !6332)
!6362 = !DILocation(line: 1119, column: 3, scope: !6360)
!6363 = !DILocation(line: 1121, column: 25, scope: !6341)
!6364 = !DILocation(line: 1121, column: 34, scope: !6341)
!6365 = !DILocation(line: 340, column: 31, scope: !6339, inlinedAt: !6340)
!6366 = !DILocation(line: 101, column: 20, scope: !6262, inlinedAt: !6351)
!6367 = !DILocation(line: 101, column: 23, scope: !6262, inlinedAt: !6351)
!6368 = !DILocation(line: 101, column: 2, scope: !6262, inlinedAt: !6351)
!6369 = !DILocation(line: 102, column: 2, scope: !6262, inlinedAt: !6351)
!6370 = !DILocation(line: 341, column: 32, scope: !6339, inlinedAt: !6340)
!6371 = !DILocation(line: 457, column: 35, scope: !6337, inlinedAt: !6338)
!6372 = !DILocation(line: 178, column: 33, scope: !6335, inlinedAt: !6336)
!6373 = !DILocation(line: 178, column: 32, scope: !6335, inlinedAt: !6336)
!6374 = !DILocation(line: 178, column: 36, scope: !6335, inlinedAt: !6336)
!6375 = !DILocation(line: 165, column: 9, scope: !6241, inlinedAt: !6334)
!6376 = !DILocation(line: 165, column: 11, scope: !6241, inlinedAt: !6334)
!6377 = !DILocation(line: 1121, column: 49, scope: !6341)
!6378 = !DILocation(line: 1121, column: 6, scope: !6332)
!6379 = !DILocation(line: 1122, column: 3, scope: !6341)
!6380 = !DILocation(line: 1124, column: 6, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1124, column: 6)
!6382 = !DILocation(line: 1124, column: 15, scope: !6381)
!6383 = !DILocation(line: 1124, column: 6, scope: !6332)
!6384 = !DILocation(line: 1125, column: 15, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 1124, column: 28)
!6386 = !DILocation(line: 1125, column: 24, scope: !6385)
!6387 = !DILocation(line: 1125, column: 3, scope: !6385)
!6388 = !DILocation(line: 1126, column: 28, scope: !6385)
!6389 = !DILocation(line: 1126, column: 37, scope: !6385)
!6390 = !DILocation(line: 1126, column: 46, scope: !6385)
!6391 = !DILocation(line: 1126, column: 9, scope: !6385)
!6392 = !DILocation(line: 1126, column: 7, scope: !6385)
!6393 = !DILocation(line: 1127, column: 17, scope: !6385)
!6394 = !DILocation(line: 1127, column: 26, scope: !6385)
!6395 = !DILocation(line: 1127, column: 3, scope: !6385)
!6396 = !DILocation(line: 1128, column: 7, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 1128, column: 7)
!6398 = !DILocation(line: 1128, column: 7, scope: !6385)
!6399 = !DILocation(line: 1129, column: 11, scope: !6397)
!6400 = !DILocation(line: 1129, column: 4, scope: !6397)
!6401 = !DILocation(line: 1130, column: 2, scope: !6385)
!6402 = !DILocation(line: 1132, column: 6, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1132, column: 6)
!6404 = !DILocation(line: 1132, column: 15, scope: !6403)
!6405 = !DILocation(line: 1132, column: 6, scope: !6332)
!6406 = !DILocation(line: 1133, column: 9, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 1132, column: 25)
!6408 = !DILocation(line: 1133, column: 18, scope: !6407)
!6409 = !DILocation(line: 1133, column: 28, scope: !6407)
!6410 = !DILocation(line: 1133, column: 42, scope: !6407)
!6411 = !DILocation(line: 1133, column: 7, scope: !6407)
!6412 = !DILocation(line: 1135, column: 7, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6407, file: !3, line: 1135, column: 7)
!6414 = !DILocation(line: 1135, column: 7, scope: !6407)
!6415 = !DILocation(line: 1136, column: 11, scope: !6413)
!6416 = !DILocation(line: 1136, column: 4, scope: !6413)
!6417 = !DILocation(line: 1137, column: 2, scope: !6407)
!6418 = !DILocation(line: 1139, column: 2, scope: !6332)
!6419 = !DILocation(line: 1140, column: 1, scope: !6332)
!6420 = distinct !DISubprogram(name: "devfreq_suspend", scope: !3, file: !3, line: 1151, type: !1789, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6421 = !DILocalVariable(name: "devfreq", scope: !6420, file: !3, line: 1153, type: !177)
!6422 = !DILocation(line: 1153, column: 18, scope: !6420)
!6423 = !DILocalVariable(name: "ret", scope: !6420, file: !3, line: 1154, type: !173)
!6424 = !DILocation(line: 1154, column: 6, scope: !6420)
!6425 = !DILocation(line: 1156, column: 2, scope: !6420)
!6426 = !DILocalVariable(name: "__mptr", scope: !6427, file: !3, line: 1157, type: !176)
!6427 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 1157, column: 2)
!6428 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 1157, column: 2)
!6429 = !DILocation(line: 1157, column: 2, scope: !6427)
!6430 = !DILocation(line: 1157, column: 2, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 1157, column: 2)
!6432 = !DILocation(line: 1157, column: 2, scope: !6428)
!6433 = !DILocation(line: 1157, column: 2, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 1157, column: 2)
!6435 = !DILocation(line: 1158, column: 32, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 1157, column: 52)
!6437 = !DILocation(line: 1158, column: 9, scope: !6436)
!6438 = !DILocation(line: 1158, column: 7, scope: !6436)
!6439 = !DILocation(line: 1159, column: 7, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 1159, column: 7)
!6441 = !DILocation(line: 1159, column: 7, scope: !6436)
!6442 = !DILocation(line: 1160, column: 4, scope: !6440)
!6443 = !DILocation(line: 1162, column: 2, scope: !6436)
!6444 = !DILocalVariable(name: "__mptr", scope: !6445, file: !3, line: 1157, type: !176)
!6445 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 1157, column: 2)
!6446 = !DILocation(line: 1157, column: 2, scope: !6445)
!6447 = !DILocation(line: 1157, column: 2, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 1157, column: 2)
!6449 = distinct !{!6449, !6432, !6450}
!6450 = !DILocation(line: 1162, column: 2, scope: !6428)
!6451 = !DILocation(line: 1163, column: 2, scope: !6420)
!6452 = !DILocation(line: 1164, column: 1, scope: !6420)
!6453 = distinct !DISubprogram(name: "devfreq_resume", scope: !3, file: !3, line: 1172, type: !1789, scopeLine: 1173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6454 = !DILocalVariable(name: "devfreq", scope: !6453, file: !3, line: 1174, type: !177)
!6455 = !DILocation(line: 1174, column: 18, scope: !6453)
!6456 = !DILocalVariable(name: "ret", scope: !6453, file: !3, line: 1175, type: !173)
!6457 = !DILocation(line: 1175, column: 6, scope: !6453)
!6458 = !DILocation(line: 1177, column: 2, scope: !6453)
!6459 = !DILocalVariable(name: "__mptr", scope: !6460, file: !3, line: 1178, type: !176)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 1178, column: 2)
!6461 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 1178, column: 2)
!6462 = !DILocation(line: 1178, column: 2, scope: !6460)
!6463 = !DILocation(line: 1178, column: 2, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1178, column: 2)
!6465 = !DILocation(line: 1178, column: 2, scope: !6461)
!6466 = !DILocation(line: 1178, column: 2, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 1178, column: 2)
!6468 = !DILocation(line: 1179, column: 31, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 1178, column: 52)
!6470 = !DILocation(line: 1179, column: 9, scope: !6469)
!6471 = !DILocation(line: 1179, column: 7, scope: !6469)
!6472 = !DILocation(line: 1180, column: 7, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6469, file: !3, line: 1180, column: 7)
!6474 = !DILocation(line: 1180, column: 7, scope: !6469)
!6475 = !DILocation(line: 1181, column: 4, scope: !6473)
!6476 = !DILocation(line: 1183, column: 2, scope: !6469)
!6477 = !DILocalVariable(name: "__mptr", scope: !6478, file: !3, line: 1178, type: !176)
!6478 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 1178, column: 2)
!6479 = !DILocation(line: 1178, column: 2, scope: !6478)
!6480 = !DILocation(line: 1178, column: 2, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 1178, column: 2)
!6482 = distinct !{!6482, !6465, !6483}
!6483 = !DILocation(line: 1183, column: 2, scope: !6461)
!6484 = !DILocation(line: 1184, column: 2, scope: !6453)
!6485 = !DILocation(line: 1185, column: 1, scope: !6453)
!6486 = distinct !DISubprogram(name: "devfreq_add_governor", scope: !3, file: !3, line: 1191, type: !6487, scopeLine: 1192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6487 = !DISubroutineType(types: !6488)
!6488 = !{!173, !3840}
!6489 = !DILocalVariable(name: "governor", arg: 1, scope: !6486, file: !3, line: 1191, type: !3840)
!6490 = !DILocation(line: 1191, column: 51, scope: !6486)
!6491 = !DILocalVariable(name: "g", scope: !6486, file: !3, line: 1193, type: !3840)
!6492 = !DILocation(line: 1193, column: 27, scope: !6486)
!6493 = !DILocalVariable(name: "devfreq", scope: !6486, file: !3, line: 1194, type: !177)
!6494 = !DILocation(line: 1194, column: 18, scope: !6486)
!6495 = !DILocalVariable(name: "err", scope: !6486, file: !3, line: 1195, type: !173)
!6496 = !DILocation(line: 1195, column: 6, scope: !6486)
!6497 = !DILocation(line: 1197, column: 7, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 1197, column: 6)
!6499 = !DILocation(line: 1197, column: 6, scope: !6486)
!6500 = !DILocation(line: 1198, column: 3, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 1197, column: 17)
!6502 = !DILocation(line: 1199, column: 3, scope: !6501)
!6503 = !DILocation(line: 1202, column: 2, scope: !6486)
!6504 = !DILocation(line: 1203, column: 28, scope: !6486)
!6505 = !DILocation(line: 1203, column: 38, scope: !6486)
!6506 = !DILocation(line: 1203, column: 6, scope: !6486)
!6507 = !DILocation(line: 1203, column: 4, scope: !6486)
!6508 = !DILocation(line: 1204, column: 14, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 1204, column: 6)
!6510 = !DILocation(line: 1204, column: 7, scope: !6509)
!6511 = !DILocation(line: 1204, column: 6, scope: !6486)
!6512 = !DILocation(line: 1205, column: 3, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1204, column: 18)
!6514 = !DILocation(line: 1207, column: 7, scope: !6513)
!6515 = !DILocation(line: 1208, column: 3, scope: !6513)
!6516 = !DILocation(line: 1211, column: 12, scope: !6486)
!6517 = !DILocation(line: 1211, column: 22, scope: !6486)
!6518 = !DILocation(line: 1211, column: 2, scope: !6486)
!6519 = !DILocalVariable(name: "__mptr", scope: !6520, file: !3, line: 1213, type: !176)
!6520 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 1213, column: 2)
!6521 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 1213, column: 2)
!6522 = !DILocation(line: 1213, column: 2, scope: !6520)
!6523 = !DILocation(line: 1213, column: 2, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 1213, column: 2)
!6525 = !DILocation(line: 1213, column: 2, scope: !6521)
!6526 = !DILocation(line: 1213, column: 2, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 1213, column: 2)
!6528 = !DILocalVariable(name: "ret", scope: !6529, file: !3, line: 1214, type: !173)
!6529 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1213, column: 52)
!6530 = !DILocation(line: 1214, column: 7, scope: !6529)
!6531 = !DILocalVariable(name: "dev", scope: !6529, file: !3, line: 1215, type: !3199)
!6532 = !DILocation(line: 1215, column: 18, scope: !6529)
!6533 = !DILocation(line: 1215, column: 24, scope: !6529)
!6534 = !DILocation(line: 1215, column: 33, scope: !6529)
!6535 = !DILocation(line: 1215, column: 37, scope: !6529)
!6536 = !DILocation(line: 1217, column: 16, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 1217, column: 7)
!6538 = !DILocation(line: 1217, column: 25, scope: !6537)
!6539 = !DILocation(line: 1217, column: 40, scope: !6537)
!6540 = !DILocation(line: 1217, column: 50, scope: !6537)
!6541 = !DILocation(line: 1217, column: 8, scope: !6537)
!6542 = !DILocation(line: 1217, column: 7, scope: !6529)
!6543 = !DILocation(line: 1220, column: 8, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1220, column: 8)
!6545 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 1218, column: 28)
!6546 = !DILocation(line: 1220, column: 17, scope: !6544)
!6547 = !DILocation(line: 1220, column: 8, scope: !6545)
!6548 = !DILocation(line: 1221, column: 5, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 1220, column: 27)
!6550 = !DILocation(line: 1224, column: 11, scope: !6549)
!6551 = !DILocation(line: 1224, column: 20, scope: !6549)
!6552 = !DILocation(line: 1224, column: 30, scope: !6549)
!6553 = !DILocation(line: 1224, column: 44, scope: !6549)
!6554 = !DILocation(line: 1224, column: 9, scope: !6549)
!6555 = !DILocation(line: 1226, column: 9, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 1226, column: 9)
!6557 = !DILocation(line: 1226, column: 9, scope: !6549)
!6558 = !DILocation(line: 1227, column: 6, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 1226, column: 14)
!6560 = !DILocation(line: 1231, column: 5, scope: !6559)
!6561 = !DILocation(line: 1233, column: 4, scope: !6549)
!6562 = !DILocation(line: 1234, column: 24, scope: !6545)
!6563 = !DILocation(line: 1234, column: 4, scope: !6545)
!6564 = !DILocation(line: 1234, column: 13, scope: !6545)
!6565 = !DILocation(line: 1234, column: 22, scope: !6545)
!6566 = !DILocation(line: 1235, column: 10, scope: !6545)
!6567 = !DILocation(line: 1235, column: 19, scope: !6545)
!6568 = !DILocation(line: 1235, column: 29, scope: !6545)
!6569 = !DILocation(line: 1235, column: 43, scope: !6545)
!6570 = !DILocation(line: 1235, column: 8, scope: !6545)
!6571 = !DILocation(line: 1237, column: 8, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1237, column: 8)
!6573 = !DILocation(line: 1237, column: 8, scope: !6545)
!6574 = !DILocation(line: 1238, column: 5, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 1237, column: 13)
!6576 = !DILocation(line: 1241, column: 4, scope: !6575)
!6577 = !DILocation(line: 1242, column: 3, scope: !6545)
!6578 = !DILocation(line: 1243, column: 2, scope: !6529)
!6579 = !DILocalVariable(name: "__mptr", scope: !6580, file: !3, line: 1213, type: !176)
!6580 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1213, column: 2)
!6581 = !DILocation(line: 1213, column: 2, scope: !6580)
!6582 = !DILocation(line: 1213, column: 2, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 1213, column: 2)
!6584 = distinct !{!6584, !6525, !6585}
!6585 = !DILocation(line: 1243, column: 2, scope: !6521)
!6586 = !DILabel(scope: !6486, name: "err_out", file: !3, line: 1245)
!6587 = !DILocation(line: 1245, column: 1, scope: !6486)
!6588 = !DILocation(line: 1246, column: 2, scope: !6486)
!6589 = !DILocation(line: 1248, column: 9, scope: !6486)
!6590 = !DILocation(line: 1248, column: 2, scope: !6486)
!6591 = !DILocation(line: 1249, column: 1, scope: !6486)
!6592 = distinct !DISubprogram(name: "find_devfreq_governor", scope: !3, file: !3, line: 262, type: !5904, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6593 = !DILocalVariable(name: "name", arg: 1, scope: !6592, file: !3, line: 262, type: !225)
!6594 = !DILocation(line: 262, column: 67, scope: !6592)
!6595 = !DILocalVariable(name: "tmp_governor", scope: !6592, file: !3, line: 264, type: !3840)
!6596 = !DILocation(line: 264, column: 27, scope: !6592)
!6597 = !DILocation(line: 266, column: 2, scope: !6592)
!6598 = !DILocation(line: 266, column: 2, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 266, column: 2)
!6600 = !DILocation(line: 268, column: 21, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 268, column: 6)
!6602 = !DILocation(line: 268, column: 6, scope: !6601)
!6603 = !DILocation(line: 268, column: 6, scope: !6592)
!6604 = !DILocation(line: 269, column: 3, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 268, column: 28)
!6606 = !DILocation(line: 270, column: 10, scope: !6605)
!6607 = !DILocation(line: 270, column: 3, scope: !6605)
!6608 = !DILocalVariable(name: "__mptr", scope: !6609, file: !3, line: 273, type: !176)
!6609 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 273, column: 2)
!6610 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 273, column: 2)
!6611 = !DILocation(line: 273, column: 2, scope: !6609)
!6612 = !DILocation(line: 273, column: 2, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 273, column: 2)
!6614 = !DILocation(line: 273, column: 2, scope: !6610)
!6615 = !DILocation(line: 273, column: 2, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 273, column: 2)
!6617 = !DILocation(line: 274, column: 16, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 274, column: 7)
!6619 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 273, column: 66)
!6620 = !DILocation(line: 274, column: 30, scope: !6618)
!6621 = !DILocation(line: 274, column: 36, scope: !6618)
!6622 = !DILocation(line: 274, column: 8, scope: !6618)
!6623 = !DILocation(line: 274, column: 7, scope: !6619)
!6624 = !DILocation(line: 275, column: 11, scope: !6618)
!6625 = !DILocation(line: 275, column: 4, scope: !6618)
!6626 = !DILocation(line: 276, column: 2, scope: !6619)
!6627 = !DILocalVariable(name: "__mptr", scope: !6628, file: !3, line: 273, type: !176)
!6628 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 273, column: 2)
!6629 = !DILocation(line: 273, column: 2, scope: !6628)
!6630 = !DILocation(line: 273, column: 2, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 273, column: 2)
!6632 = distinct !{!6632, !6614, !6633}
!6633 = !DILocation(line: 276, column: 2, scope: !6610)
!6634 = !DILocation(line: 278, column: 9, scope: !6592)
!6635 = !DILocation(line: 278, column: 2, scope: !6592)
!6636 = !DILocation(line: 279, column: 1, scope: !6592)
!6637 = distinct !DISubprogram(name: "devfreq_remove_governor", scope: !3, file: !3, line: 1256, type: !6487, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6638 = !DILocalVariable(name: "governor", arg: 1, scope: !6637, file: !3, line: 1256, type: !3840)
!6639 = !DILocation(line: 1256, column: 54, scope: !6637)
!6640 = !DILocalVariable(name: "g", scope: !6637, file: !3, line: 1258, type: !3840)
!6641 = !DILocation(line: 1258, column: 27, scope: !6637)
!6642 = !DILocalVariable(name: "devfreq", scope: !6637, file: !3, line: 1259, type: !177)
!6643 = !DILocation(line: 1259, column: 18, scope: !6637)
!6644 = !DILocalVariable(name: "err", scope: !6637, file: !3, line: 1260, type: !173)
!6645 = !DILocation(line: 1260, column: 6, scope: !6637)
!6646 = !DILocation(line: 1262, column: 7, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1262, column: 6)
!6648 = !DILocation(line: 1262, column: 6, scope: !6637)
!6649 = !DILocation(line: 1263, column: 3, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 1262, column: 17)
!6651 = !DILocation(line: 1264, column: 3, scope: !6650)
!6652 = !DILocation(line: 1267, column: 2, scope: !6637)
!6653 = !DILocation(line: 1268, column: 28, scope: !6637)
!6654 = !DILocation(line: 1268, column: 38, scope: !6637)
!6655 = !DILocation(line: 1268, column: 6, scope: !6637)
!6656 = !DILocation(line: 1268, column: 4, scope: !6637)
!6657 = !DILocation(line: 1269, column: 13, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1269, column: 6)
!6659 = !DILocation(line: 1269, column: 6, scope: !6658)
!6660 = !DILocation(line: 1269, column: 6, scope: !6637)
!6661 = !DILocation(line: 1270, column: 3, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 1269, column: 17)
!6663 = !DILocation(line: 1272, column: 17, scope: !6662)
!6664 = !DILocation(line: 1272, column: 9, scope: !6662)
!6665 = !DILocation(line: 1272, column: 7, scope: !6662)
!6666 = !DILocation(line: 1273, column: 3, scope: !6662)
!6667 = !DILocalVariable(name: "__mptr", scope: !6668, file: !3, line: 1275, type: !176)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 1275, column: 2)
!6669 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1275, column: 2)
!6670 = !DILocation(line: 1275, column: 2, scope: !6668)
!6671 = !DILocation(line: 1275, column: 2, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1275, column: 2)
!6673 = !DILocation(line: 1275, column: 2, scope: !6669)
!6674 = !DILocation(line: 1275, column: 2, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 1275, column: 2)
!6676 = !DILocalVariable(name: "ret", scope: !6677, file: !3, line: 1276, type: !173)
!6677 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 1275, column: 52)
!6678 = !DILocation(line: 1276, column: 7, scope: !6677)
!6679 = !DILocalVariable(name: "dev", scope: !6677, file: !3, line: 1277, type: !3199)
!6680 = !DILocation(line: 1277, column: 18, scope: !6677)
!6681 = !DILocation(line: 1277, column: 24, scope: !6677)
!6682 = !DILocation(line: 1277, column: 33, scope: !6677)
!6683 = !DILocation(line: 1277, column: 37, scope: !6677)
!6684 = !DILocation(line: 1279, column: 16, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 1279, column: 7)
!6686 = !DILocation(line: 1279, column: 25, scope: !6685)
!6687 = !DILocation(line: 1279, column: 40, scope: !6685)
!6688 = !DILocation(line: 1279, column: 50, scope: !6685)
!6689 = !DILocation(line: 1279, column: 8, scope: !6685)
!6690 = !DILocation(line: 1279, column: 7, scope: !6677)
!6691 = !DILocation(line: 1282, column: 9, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 1282, column: 8)
!6693 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 1280, column: 28)
!6694 = !DILocation(line: 1282, column: 18, scope: !6692)
!6695 = !DILocation(line: 1282, column: 8, scope: !6693)
!6696 = !DILocation(line: 1283, column: 5, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6692, file: !3, line: 1282, column: 28)
!6698 = !DILocation(line: 1285, column: 5, scope: !6697)
!6699 = !DILocation(line: 1288, column: 10, scope: !6693)
!6700 = !DILocation(line: 1288, column: 19, scope: !6693)
!6701 = !DILocation(line: 1288, column: 29, scope: !6693)
!6702 = !DILocation(line: 1288, column: 43, scope: !6693)
!6703 = !DILocation(line: 1288, column: 8, scope: !6693)
!6704 = !DILocation(line: 1290, column: 8, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 1290, column: 8)
!6706 = !DILocation(line: 1290, column: 8, scope: !6693)
!6707 = !DILocation(line: 1291, column: 5, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 1290, column: 13)
!6709 = !DILocation(line: 1294, column: 4, scope: !6708)
!6710 = !DILocation(line: 1295, column: 4, scope: !6693)
!6711 = !DILocation(line: 1295, column: 13, scope: !6693)
!6712 = !DILocation(line: 1295, column: 22, scope: !6693)
!6713 = !DILocation(line: 1296, column: 3, scope: !6693)
!6714 = !DILocation(line: 1297, column: 2, scope: !6677)
!6715 = !DILocalVariable(name: "__mptr", scope: !6716, file: !3, line: 1275, type: !176)
!6716 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 1275, column: 2)
!6717 = !DILocation(line: 1275, column: 2, scope: !6716)
!6718 = !DILocation(line: 1275, column: 2, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 1275, column: 2)
!6720 = distinct !{!6720, !6673, !6721}
!6721 = !DILocation(line: 1297, column: 2, scope: !6669)
!6722 = !DILocation(line: 1299, column: 12, scope: !6637)
!6723 = !DILocation(line: 1299, column: 22, scope: !6637)
!6724 = !DILocation(line: 1299, column: 2, scope: !6637)
!6725 = !DILabel(scope: !6637, name: "err_out", file: !3, line: 1300)
!6726 = !DILocation(line: 1300, column: 1, scope: !6637)
!6727 = !DILocation(line: 1301, column: 2, scope: !6637)
!6728 = !DILocation(line: 1303, column: 9, scope: !6637)
!6729 = !DILocation(line: 1303, column: 2, scope: !6637)
!6730 = !DILocation(line: 1304, column: 1, scope: !6637)
!6731 = distinct !DISubprogram(name: "list_del", scope: !4375, file: !4375, line: 144, type: !4376, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6732 = !DILocalVariable(name: "entry", arg: 1, scope: !6731, file: !4375, line: 144, type: !184)
!6733 = !DILocation(line: 144, column: 47, scope: !6731)
!6734 = !DILocation(line: 146, column: 19, scope: !6731)
!6735 = !DILocation(line: 146, column: 2, scope: !6731)
!6736 = !DILocation(line: 147, column: 2, scope: !6731)
!6737 = !DILocation(line: 147, column: 9, scope: !6731)
!6738 = !DILocation(line: 147, column: 14, scope: !6731)
!6739 = !DILocation(line: 148, column: 2, scope: !6731)
!6740 = !DILocation(line: 148, column: 9, scope: !6731)
!6741 = !DILocation(line: 148, column: 14, scope: !6731)
!6742 = !DILocation(line: 149, column: 1, scope: !6731)
!6743 = !DILocation(line: 1859, column: 18, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1859, column: 18)
!6745 = !DILocation(line: 1859, column: 16, scope: !3859)
!6746 = !DILocation(line: 1860, column: 13, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1860, column: 6)
!6748 = !DILocation(line: 1860, column: 6, scope: !6747)
!6749 = !DILocation(line: 1860, column: 6, scope: !3859)
!6750 = !DILocation(line: 1861, column: 3, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 1860, column: 29)
!6752 = !DILocation(line: 1862, column: 18, scope: !6751)
!6753 = !DILocation(line: 1862, column: 10, scope: !6751)
!6754 = !DILocation(line: 1862, column: 3, scope: !6751)
!6755 = !DILocation(line: 1865, column: 15, scope: !3859)
!6756 = !DILocation(line: 1865, column: 13, scope: !3859)
!6757 = !DILocation(line: 1866, column: 7, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1866, column: 6)
!6759 = !DILocation(line: 1866, column: 6, scope: !3859)
!6760 = !DILocation(line: 1867, column: 17, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 1866, column: 19)
!6762 = !DILocation(line: 1867, column: 3, scope: !6761)
!6763 = !DILocation(line: 1868, column: 3, scope: !6761)
!6764 = !DILocation(line: 1869, column: 3, scope: !6761)
!6765 = !DILocation(line: 1871, column: 2, scope: !3859)
!6766 = !DILocation(line: 1871, column: 17, scope: !3859)
!6767 = !DILocation(line: 1871, column: 28, scope: !3859)
!6768 = !DILocation(line: 1873, column: 20, scope: !3859)
!6769 = !DILocation(line: 1873, column: 18, scope: !3859)
!6770 = !DILocation(line: 1875, column: 5, scope: !3859)
!6771 = !DILocation(line: 1874, column: 2, scope: !3859)
!6772 = !DILocation(line: 1878, column: 2, scope: !3859)
!6773 = !DILocation(line: 1879, column: 1, scope: !3859)
!6774 = distinct !DISubprogram(name: "devfreq_recommended_opp", scope: !3, file: !3, line: 1897, type: !6775, scopeLine: 1900, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6775 = !DISubroutineType(types: !6776)
!6776 = !{!5655, !3199, !166, !174}
!6777 = !DILocalVariable(name: "dev", arg: 1, scope: !6774, file: !3, line: 1897, type: !3199)
!6778 = !DILocation(line: 1897, column: 59, scope: !6774)
!6779 = !DILocalVariable(name: "freq", arg: 2, scope: !6774, file: !3, line: 1898, type: !166)
!6780 = !DILocation(line: 1898, column: 24, scope: !6774)
!6781 = !DILocalVariable(name: "flags", arg: 3, scope: !6774, file: !3, line: 1899, type: !174)
!6782 = !DILocation(line: 1899, column: 13, scope: !6774)
!6783 = !DILocalVariable(name: "opp", scope: !6774, file: !3, line: 1901, type: !5655)
!6784 = !DILocation(line: 1901, column: 21, scope: !6774)
!6785 = !DILocation(line: 1903, column: 6, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 1903, column: 6)
!6787 = !DILocation(line: 1903, column: 12, scope: !6786)
!6788 = !DILocation(line: 1903, column: 6, scope: !6774)
!6789 = !DILocation(line: 1905, column: 36, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 1903, column: 46)
!6791 = !DILocation(line: 1905, column: 41, scope: !6790)
!6792 = !DILocation(line: 1905, column: 9, scope: !6790)
!6793 = !DILocation(line: 1905, column: 7, scope: !6790)
!6794 = !DILocation(line: 1908, column: 7, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6790, file: !3, line: 1908, column: 7)
!6796 = !DILocation(line: 1908, column: 14, scope: !6795)
!6797 = !DILocation(line: 1908, column: 11, scope: !6795)
!6798 = !DILocation(line: 1908, column: 7, scope: !6790)
!6799 = !DILocation(line: 1909, column: 36, scope: !6795)
!6800 = !DILocation(line: 1909, column: 41, scope: !6795)
!6801 = !DILocation(line: 1909, column: 10, scope: !6795)
!6802 = !DILocation(line: 1909, column: 8, scope: !6795)
!6803 = !DILocation(line: 1909, column: 4, scope: !6795)
!6804 = !DILocation(line: 1910, column: 2, scope: !6790)
!6805 = !DILocation(line: 1912, column: 35, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 1910, column: 9)
!6807 = !DILocation(line: 1912, column: 40, scope: !6806)
!6808 = !DILocation(line: 1912, column: 9, scope: !6806)
!6809 = !DILocation(line: 1912, column: 7, scope: !6806)
!6810 = !DILocation(line: 1915, column: 7, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 1915, column: 7)
!6812 = !DILocation(line: 1915, column: 14, scope: !6811)
!6813 = !DILocation(line: 1915, column: 11, scope: !6811)
!6814 = !DILocation(line: 1915, column: 7, scope: !6806)
!6815 = !DILocation(line: 1916, column: 37, scope: !6811)
!6816 = !DILocation(line: 1916, column: 42, scope: !6811)
!6817 = !DILocation(line: 1916, column: 10, scope: !6811)
!6818 = !DILocation(line: 1916, column: 8, scope: !6811)
!6819 = !DILocation(line: 1916, column: 4, scope: !6811)
!6820 = !DILocation(line: 1919, column: 9, scope: !6774)
!6821 = !DILocation(line: 1919, column: 2, scope: !6774)
!6822 = distinct !DISubprogram(name: "devfreq_register_opp_notifier", scope: !3, file: !3, line: 1930, type: !6823, scopeLine: 1931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6823 = !DISubroutineType(types: !6824)
!6824 = !{!173, !3199, !177}
!6825 = !DILocalVariable(name: "dev", arg: 1, scope: !6822, file: !3, line: 1930, type: !3199)
!6826 = !DILocation(line: 1930, column: 50, scope: !6822)
!6827 = !DILocalVariable(name: "devfreq", arg: 2, scope: !6822, file: !3, line: 1930, type: !177)
!6828 = !DILocation(line: 1930, column: 71, scope: !6822)
!6829 = !DILocation(line: 1932, column: 38, scope: !6822)
!6830 = !DILocation(line: 1932, column: 44, scope: !6822)
!6831 = !DILocation(line: 1932, column: 53, scope: !6822)
!6832 = !DILocation(line: 1932, column: 9, scope: !6822)
!6833 = !DILocation(line: 1932, column: 2, scope: !6822)
!6834 = distinct !DISubprogram(name: "devfreq_unregister_opp_notifier", scope: !3, file: !3, line: 1946, type: !6823, scopeLine: 1947, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6835 = !DILocalVariable(name: "dev", arg: 1, scope: !6834, file: !3, line: 1946, type: !3199)
!6836 = !DILocation(line: 1946, column: 52, scope: !6834)
!6837 = !DILocalVariable(name: "devfreq", arg: 2, scope: !6834, file: !3, line: 1946, type: !177)
!6838 = !DILocation(line: 1946, column: 73, scope: !6834)
!6839 = !DILocation(line: 1948, column: 40, scope: !6834)
!6840 = !DILocation(line: 1948, column: 46, scope: !6834)
!6841 = !DILocation(line: 1948, column: 55, scope: !6834)
!6842 = !DILocation(line: 1948, column: 9, scope: !6834)
!6843 = !DILocation(line: 1948, column: 2, scope: !6834)
!6844 = distinct !DISubprogram(name: "devm_devfreq_register_opp_notifier", scope: !3, file: !3, line: 1963, type: !6823, scopeLine: 1965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6845 = !DILocalVariable(name: "dev", arg: 1, scope: !6844, file: !3, line: 1963, type: !3199)
!6846 = !DILocation(line: 1963, column: 55, scope: !6844)
!6847 = !DILocalVariable(name: "devfreq", arg: 2, scope: !6844, file: !3, line: 1964, type: !177)
!6848 = !DILocation(line: 1964, column: 28, scope: !6844)
!6849 = !DILocalVariable(name: "ptr", scope: !6844, file: !3, line: 1966, type: !3839)
!6850 = !DILocation(line: 1966, column: 19, scope: !6844)
!6851 = !DILocalVariable(name: "ret", scope: !6844, file: !3, line: 1967, type: !173)
!6852 = !DILocation(line: 1967, column: 6, scope: !6844)
!6853 = !DILocation(line: 1969, column: 8, scope: !6844)
!6854 = !DILocation(line: 1969, column: 6, scope: !6844)
!6855 = !DILocation(line: 1970, column: 7, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6844, file: !3, line: 1970, column: 6)
!6857 = !DILocation(line: 1970, column: 6, scope: !6844)
!6858 = !DILocation(line: 1971, column: 3, scope: !6856)
!6859 = !DILocation(line: 1973, column: 38, scope: !6844)
!6860 = !DILocation(line: 1973, column: 43, scope: !6844)
!6861 = !DILocation(line: 1973, column: 8, scope: !6844)
!6862 = !DILocation(line: 1973, column: 6, scope: !6844)
!6863 = !DILocation(line: 1974, column: 6, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6844, file: !3, line: 1974, column: 6)
!6865 = !DILocation(line: 1974, column: 6, scope: !6844)
!6866 = !DILocation(line: 1975, column: 15, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 1974, column: 11)
!6868 = !DILocation(line: 1975, column: 3, scope: !6867)
!6869 = !DILocation(line: 1976, column: 10, scope: !6867)
!6870 = !DILocation(line: 1976, column: 3, scope: !6867)
!6871 = !DILocation(line: 1979, column: 9, scope: !6844)
!6872 = !DILocation(line: 1979, column: 3, scope: !6844)
!6873 = !DILocation(line: 1979, column: 7, scope: !6844)
!6874 = !DILocation(line: 1980, column: 13, scope: !6844)
!6875 = !DILocation(line: 1980, column: 18, scope: !6844)
!6876 = !DILocation(line: 1980, column: 2, scope: !6844)
!6877 = !DILocation(line: 1982, column: 2, scope: !6844)
!6878 = !DILocation(line: 1983, column: 1, scope: !6844)
!6879 = distinct !DISubprogram(name: "devm_devfreq_opp_release", scope: !3, file: !3, line: 1952, type: !6050, scopeLine: 1953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6880 = !DILocalVariable(name: "dev", arg: 1, scope: !6879, file: !3, line: 1952, type: !3199)
!6881 = !DILocation(line: 1952, column: 53, scope: !6879)
!6882 = !DILocalVariable(name: "res", arg: 2, scope: !6879, file: !3, line: 1952, type: !176)
!6883 = !DILocation(line: 1952, column: 64, scope: !6879)
!6884 = !DILocation(line: 1954, column: 34, scope: !6879)
!6885 = !DILocation(line: 1954, column: 59, scope: !6879)
!6886 = !DILocation(line: 1954, column: 40, scope: !6879)
!6887 = !DILocation(line: 1954, column: 39, scope: !6879)
!6888 = !DILocation(line: 1954, column: 2, scope: !6879)
!6889 = !DILocation(line: 1955, column: 1, scope: !6879)
!6890 = distinct !DISubprogram(name: "devm_devfreq_unregister_opp_notifier", scope: !3, file: !3, line: 1992, type: !6176, scopeLine: 1994, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6891 = !DILocalVariable(name: "dev", arg: 1, scope: !6890, file: !3, line: 1992, type: !3199)
!6892 = !DILocation(line: 1992, column: 58, scope: !6890)
!6893 = !DILocalVariable(name: "devfreq", arg: 2, scope: !6890, file: !3, line: 1993, type: !177)
!6894 = !DILocation(line: 1993, column: 23, scope: !6890)
!6895 = !DILocalVariable(name: "__ret_warn_on", scope: !6896, file: !3, line: 1995, type: !173)
!6896 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 1995, column: 2)
!6897 = !DILocation(line: 1995, column: 2, scope: !6896)
!6898 = !DILocation(line: 1995, column: 2, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 1995, column: 2)
!6900 = !DILocation(line: 1995, column: 2, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 1995, column: 2)
!6902 = !DILocation(line: 1995, column: 2, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 1995, column: 2)
!6904 = !DILocation(line: 1995, column: 2, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 1995, column: 2)
!6906 = !{i32 -2142614038, i32 -2142614009, i32 -2142613963, i32 -2142613905, i32 -2142613851, i32 -2142613797, i32 -2142613742, i32 -2142613711}
!6907 = !DILocation(line: 1995, column: 2, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 1995, column: 2)
!6909 = !{i32 -2142613303, i32 -2142613296, i32 -2142613244, i32 -2142613213, i32 -2142613183}
!6910 = !DILocation(line: 1995, column: 2, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 1995, column: 2)
!6912 = !DILocation(line: 1997, column: 1, scope: !6890)
!6913 = distinct !DISubprogram(name: "devfreq_register_notifier", scope: !3, file: !3, line: 2006, type: !6914, scopeLine: 2009, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{!173, !177, !3484, !7}
!6916 = !DILocalVariable(name: "devfreq", arg: 1, scope: !6913, file: !3, line: 2006, type: !177)
!6917 = !DILocation(line: 2006, column: 47, scope: !6913)
!6918 = !DILocalVariable(name: "nb", arg: 2, scope: !6913, file: !3, line: 2007, type: !3484)
!6919 = !DILocation(line: 2007, column: 33, scope: !6913)
!6920 = !DILocalVariable(name: "list", arg: 3, scope: !6913, file: !3, line: 2008, type: !7)
!6921 = !DILocation(line: 2008, column: 23, scope: !6913)
!6922 = !DILocalVariable(name: "ret", scope: !6913, file: !3, line: 2010, type: !173)
!6923 = !DILocation(line: 2010, column: 6, scope: !6913)
!6924 = !DILocation(line: 2012, column: 7, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 2012, column: 6)
!6926 = !DILocation(line: 2012, column: 6, scope: !6913)
!6927 = !DILocation(line: 2013, column: 3, scope: !6925)
!6928 = !DILocation(line: 2015, column: 10, scope: !6913)
!6929 = !DILocation(line: 2015, column: 2, scope: !6913)
!6930 = !DILocation(line: 2018, column: 6, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 2015, column: 16)
!6932 = !DILocation(line: 2018, column: 15, scope: !6931)
!6933 = !DILocation(line: 2018, column: 41, scope: !6931)
!6934 = !DILocation(line: 2017, column: 9, scope: !6931)
!6935 = !DILocation(line: 2017, column: 7, scope: !6931)
!6936 = !DILocation(line: 2019, column: 3, scope: !6931)
!6937 = !DILocation(line: 2021, column: 7, scope: !6931)
!6938 = !DILocation(line: 2022, column: 2, scope: !6931)
!6939 = !DILocation(line: 2024, column: 9, scope: !6913)
!6940 = !DILocation(line: 2024, column: 2, scope: !6913)
!6941 = !DILocation(line: 2025, column: 1, scope: !6913)
!6942 = distinct !DISubprogram(name: "devfreq_unregister_notifier", scope: !3, file: !3, line: 2034, type: !6914, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6943 = !DILocalVariable(name: "devfreq", arg: 1, scope: !6942, file: !3, line: 2034, type: !177)
!6944 = !DILocation(line: 2034, column: 49, scope: !6942)
!6945 = !DILocalVariable(name: "nb", arg: 2, scope: !6942, file: !3, line: 2035, type: !3484)
!6946 = !DILocation(line: 2035, column: 28, scope: !6942)
!6947 = !DILocalVariable(name: "list", arg: 3, scope: !6942, file: !3, line: 2036, type: !7)
!6948 = !DILocation(line: 2036, column: 18, scope: !6942)
!6949 = !DILocalVariable(name: "ret", scope: !6942, file: !3, line: 2038, type: !173)
!6950 = !DILocation(line: 2038, column: 6, scope: !6942)
!6951 = !DILocation(line: 2040, column: 7, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 2040, column: 6)
!6953 = !DILocation(line: 2040, column: 6, scope: !6942)
!6954 = !DILocation(line: 2041, column: 3, scope: !6952)
!6955 = !DILocation(line: 2043, column: 10, scope: !6942)
!6956 = !DILocation(line: 2043, column: 2, scope: !6942)
!6957 = !DILocation(line: 2046, column: 6, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 2043, column: 16)
!6959 = !DILocation(line: 2046, column: 15, scope: !6958)
!6960 = !DILocation(line: 2046, column: 41, scope: !6958)
!6961 = !DILocation(line: 2045, column: 9, scope: !6958)
!6962 = !DILocation(line: 2045, column: 7, scope: !6958)
!6963 = !DILocation(line: 2047, column: 3, scope: !6958)
!6964 = !DILocation(line: 2049, column: 7, scope: !6958)
!6965 = !DILocation(line: 2050, column: 2, scope: !6958)
!6966 = !DILocation(line: 2052, column: 9, scope: !6942)
!6967 = !DILocation(line: 2052, column: 2, scope: !6942)
!6968 = !DILocation(line: 2053, column: 1, scope: !6942)
!6969 = distinct !DISubprogram(name: "devm_devfreq_register_notifier", scope: !3, file: !3, line: 2077, type: !6970, scopeLine: 2081, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!6970 = !DISubroutineType(types: !6971)
!6971 = !{!173, !3199, !177, !3484, !7}
!6972 = !DILocalVariable(name: "dev", arg: 1, scope: !6969, file: !3, line: 2077, type: !3199)
!6973 = !DILocation(line: 2077, column: 51, scope: !6969)
!6974 = !DILocalVariable(name: "devfreq", arg: 2, scope: !6969, file: !3, line: 2078, type: !177)
!6975 = !DILocation(line: 2078, column: 21, scope: !6969)
!6976 = !DILocalVariable(name: "nb", arg: 3, scope: !6969, file: !3, line: 2079, type: !3484)
!6977 = !DILocation(line: 2079, column: 28, scope: !6969)
!6978 = !DILocalVariable(name: "list", arg: 4, scope: !6969, file: !3, line: 2080, type: !7)
!6979 = !DILocation(line: 2080, column: 18, scope: !6969)
!6980 = !DILocalVariable(name: "ptr", scope: !6969, file: !3, line: 2082, type: !6981)
!6981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6982, size: 64)
!6982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devfreq_notifier_devres", file: !3, line: 2056, size: 192, elements: !6983)
!6983 = !{!6984, !6985, !6986}
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "devfreq", scope: !6982, file: !3, line: 2057, baseType: !177, size: 64)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !6982, file: !3, line: 2058, baseType: !3484, size: 64, offset: 64)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6982, file: !3, line: 2059, baseType: !7, size: 32, offset: 128)
!6987 = !DILocation(line: 2082, column: 34, scope: !6969)
!6988 = !DILocalVariable(name: "ret", scope: !6969, file: !3, line: 2083, type: !173)
!6989 = !DILocation(line: 2083, column: 6, scope: !6969)
!6990 = !DILocation(line: 2085, column: 8, scope: !6969)
!6991 = !DILocation(line: 2085, column: 6, scope: !6969)
!6992 = !DILocation(line: 2087, column: 7, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 2087, column: 6)
!6994 = !DILocation(line: 2087, column: 6, scope: !6969)
!6995 = !DILocation(line: 2088, column: 3, scope: !6993)
!6996 = !DILocation(line: 2090, column: 34, scope: !6969)
!6997 = !DILocation(line: 2090, column: 43, scope: !6969)
!6998 = !DILocation(line: 2090, column: 47, scope: !6969)
!6999 = !DILocation(line: 2090, column: 8, scope: !6969)
!7000 = !DILocation(line: 2090, column: 6, scope: !6969)
!7001 = !DILocation(line: 2091, column: 6, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 2091, column: 6)
!7003 = !DILocation(line: 2091, column: 6, scope: !6969)
!7004 = !DILocation(line: 2092, column: 15, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 2091, column: 11)
!7006 = !DILocation(line: 2092, column: 3, scope: !7005)
!7007 = !DILocation(line: 2093, column: 10, scope: !7005)
!7008 = !DILocation(line: 2093, column: 3, scope: !7005)
!7009 = !DILocation(line: 2096, column: 17, scope: !6969)
!7010 = !DILocation(line: 2096, column: 2, scope: !6969)
!7011 = !DILocation(line: 2096, column: 7, scope: !6969)
!7012 = !DILocation(line: 2096, column: 15, scope: !6969)
!7013 = !DILocation(line: 2097, column: 12, scope: !6969)
!7014 = !DILocation(line: 2097, column: 2, scope: !6969)
!7015 = !DILocation(line: 2097, column: 7, scope: !6969)
!7016 = !DILocation(line: 2097, column: 10, scope: !6969)
!7017 = !DILocation(line: 2098, column: 14, scope: !6969)
!7018 = !DILocation(line: 2098, column: 2, scope: !6969)
!7019 = !DILocation(line: 2098, column: 7, scope: !6969)
!7020 = !DILocation(line: 2098, column: 12, scope: !6969)
!7021 = !DILocation(line: 2099, column: 13, scope: !6969)
!7022 = !DILocation(line: 2099, column: 18, scope: !6969)
!7023 = !DILocation(line: 2099, column: 2, scope: !6969)
!7024 = !DILocation(line: 2101, column: 2, scope: !6969)
!7025 = !DILocation(line: 2102, column: 1, scope: !6969)
!7026 = distinct !DISubprogram(name: "devm_devfreq_notifier_release", scope: !3, file: !3, line: 2062, type: !6050, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7027 = !DILocalVariable(name: "dev", arg: 1, scope: !7026, file: !3, line: 2062, type: !3199)
!7028 = !DILocation(line: 2062, column: 58, scope: !7026)
!7029 = !DILocalVariable(name: "res", arg: 2, scope: !7026, file: !3, line: 2062, type: !176)
!7030 = !DILocation(line: 2062, column: 69, scope: !7026)
!7031 = !DILocalVariable(name: "this", scope: !7026, file: !3, line: 2064, type: !6981)
!7032 = !DILocation(line: 2064, column: 34, scope: !7026)
!7033 = !DILocation(line: 2064, column: 41, scope: !7026)
!7034 = !DILocation(line: 2066, column: 30, scope: !7026)
!7035 = !DILocation(line: 2066, column: 36, scope: !7026)
!7036 = !DILocation(line: 2066, column: 45, scope: !7026)
!7037 = !DILocation(line: 2066, column: 51, scope: !7026)
!7038 = !DILocation(line: 2066, column: 55, scope: !7026)
!7039 = !DILocation(line: 2066, column: 61, scope: !7026)
!7040 = !DILocation(line: 2066, column: 2, scope: !7026)
!7041 = !DILocation(line: 2067, column: 1, scope: !7026)
!7042 = distinct !DISubprogram(name: "devm_devfreq_unregister_notifier", scope: !3, file: !3, line: 2113, type: !7043, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7043 = !DISubroutineType(types: !7044)
!7044 = !{null, !3199, !177, !3484, !7}
!7045 = !DILocalVariable(name: "dev", arg: 1, scope: !7042, file: !3, line: 2113, type: !3199)
!7046 = !DILocation(line: 2113, column: 54, scope: !7042)
!7047 = !DILocalVariable(name: "devfreq", arg: 2, scope: !7042, file: !3, line: 2114, type: !177)
!7048 = !DILocation(line: 2114, column: 27, scope: !7042)
!7049 = !DILocalVariable(name: "nb", arg: 3, scope: !7042, file: !3, line: 2115, type: !3484)
!7050 = !DILocation(line: 2115, column: 34, scope: !7042)
!7051 = !DILocalVariable(name: "list", arg: 4, scope: !7042, file: !3, line: 2116, type: !7)
!7052 = !DILocation(line: 2116, column: 24, scope: !7042)
!7053 = !DILocalVariable(name: "__ret_warn_on", scope: !7054, file: !3, line: 2118, type: !173)
!7054 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 2118, column: 2)
!7055 = !DILocation(line: 2118, column: 2, scope: !7054)
!7056 = !DILocation(line: 2118, column: 2, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 2118, column: 2)
!7058 = !DILocation(line: 2118, column: 2, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7057, file: !3, line: 2118, column: 2)
!7060 = !DILocation(line: 2118, column: 2, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 2118, column: 2)
!7062 = !DILocation(line: 2118, column: 2, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 2118, column: 2)
!7064 = !{i32 -2142611842, i32 -2142611813, i32 -2142611767, i32 -2142611709, i32 -2142611655, i32 -2142611601, i32 -2142611546, i32 -2142611515}
!7065 = !DILocation(line: 2118, column: 2, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 2118, column: 2)
!7067 = !{i32 -2142611107, i32 -2142611100, i32 -2142611048, i32 -2142611017, i32 -2142610987}
!7068 = !DILocation(line: 2118, column: 2, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 2118, column: 2)
!7070 = !DILocation(line: 2120, column: 1, scope: !7042)
!7071 = distinct !DISubprogram(name: "devfreq_notify_transition", scope: !3, file: !3, line: 324, type: !7072, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7072 = !DISubroutineType(types: !7073)
!7073 = !{!173, !177, !7074, !7}
!7074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64)
!7075 = !DILocalVariable(name: "devfreq", arg: 1, scope: !7071, file: !3, line: 324, type: !177)
!7076 = !DILocation(line: 324, column: 54, scope: !7071)
!7077 = !DILocalVariable(name: "freqs", arg: 2, scope: !7071, file: !3, line: 325, type: !7074)
!7078 = !DILocation(line: 325, column: 25, scope: !7071)
!7079 = !DILocalVariable(name: "state", arg: 3, scope: !7071, file: !3, line: 325, type: !7)
!7080 = !DILocation(line: 325, column: 45, scope: !7071)
!7081 = !DILocation(line: 327, column: 7, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 327, column: 6)
!7083 = !DILocation(line: 327, column: 6, scope: !7071)
!7084 = !DILocation(line: 328, column: 3, scope: !7082)
!7085 = !DILocation(line: 330, column: 10, scope: !7071)
!7086 = !DILocation(line: 330, column: 2, scope: !7071)
!7087 = !DILocation(line: 332, column: 29, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 330, column: 17)
!7089 = !DILocation(line: 332, column: 38, scope: !7088)
!7090 = !DILocation(line: 333, column: 24, scope: !7088)
!7091 = !DILocation(line: 332, column: 3, scope: !7088)
!7092 = !DILocation(line: 334, column: 3, scope: !7088)
!7093 = !DILocation(line: 337, column: 29, scope: !7088)
!7094 = !DILocation(line: 337, column: 38, scope: !7088)
!7095 = !DILocation(line: 338, column: 25, scope: !7088)
!7096 = !DILocation(line: 337, column: 3, scope: !7088)
!7097 = !DILocation(line: 339, column: 3, scope: !7088)
!7098 = !DILocation(line: 341, column: 3, scope: !7088)
!7099 = !DILocation(line: 344, column: 2, scope: !7071)
!7100 = !DILocation(line: 345, column: 1, scope: !7071)
!7101 = distinct !DISubprogram(name: "trace_devfreq_monitor", scope: !7102, file: !7102, line: 11, type: !4301, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7102 = !DIFile(filename: "./include/trace/events/devfreq.h", directory: "/home/lizy2001/genbc/linux")
!7103 = !DILocalVariable(name: "devfreq", arg: 1, scope: !7101, file: !7102, line: 11, type: !177)
!7104 = !DILocation(line: 11, column: 1, scope: !7101)
!7105 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !4009, file: !4009, line: 308, type: !4305, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7106 = !DILocalVariable(name: "m", arg: 1, scope: !7105, file: !4009, line: 308, type: !2663)
!7107 = !DILocation(line: 308, column: 66, scope: !7105)
!7108 = !DILocation(line: 310, column: 10, scope: !7105)
!7109 = !DILocation(line: 310, column: 12, scope: !7105)
!7110 = !DILocation(line: 310, column: 34, scope: !7105)
!7111 = !DILocation(line: 310, column: 39, scope: !7105)
!7112 = !DILocation(line: 310, column: 2, scope: !7105)
!7113 = distinct !DISubprogram(name: "kasan_check_read", scope: !7114, file: !7114, line: 34, type: !7115, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7114 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7115 = !DISubroutineType(types: !7116)
!7116 = !{!473, !4615, !7}
!7117 = !DILocalVariable(name: "p", arg: 1, scope: !7113, file: !7114, line: 34, type: !4615)
!7118 = !DILocation(line: 34, column: 58, scope: !7113)
!7119 = !DILocalVariable(name: "size", arg: 2, scope: !7113, file: !7114, line: 34, type: !7)
!7120 = !DILocation(line: 34, column: 74, scope: !7113)
!7121 = !DILocation(line: 36, column: 2, scope: !7113)
!7122 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7123, file: !7123, line: 178, type: !7124, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7123 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7124 = !DISubroutineType(types: !7125)
!7125 = !{null, !4615, !309, !173}
!7126 = !DILocalVariable(name: "ptr", arg: 1, scope: !7122, file: !7123, line: 178, type: !4615)
!7127 = !DILocation(line: 178, column: 60, scope: !7122)
!7128 = !DILocalVariable(name: "size", arg: 2, scope: !7122, file: !7123, line: 178, type: !309)
!7129 = !DILocation(line: 178, column: 72, scope: !7122)
!7130 = !DILocalVariable(name: "type", arg: 3, scope: !7122, file: !7123, line: 179, type: !173)
!7131 = !DILocation(line: 179, column: 15, scope: !7122)
!7132 = !DILocation(line: 179, column: 23, scope: !7122)
!7133 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !5161, file: !5161, line: 39, type: !5218, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7134 = !DILocalVariable(name: "ptr", arg: 1, scope: !7133, file: !5161, line: 39, type: !3041)
!7135 = !DILocation(line: 39, column: 68, scope: !7133)
!7136 = !DILocation(line: 41, column: 9, scope: !7133)
!7137 = !DILocation(line: 41, column: 24, scope: !7133)
!7138 = !DILocation(line: 41, column: 27, scope: !7133)
!7139 = !DILocation(line: 41, column: 2, scope: !7133)
!7140 = distinct !DISubprogram(name: "get_order", scope: !7141, file: !7141, line: 29, type: !7142, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7141 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!7142 = !DISubroutineType(types: !7143)
!7143 = !{!173, !165}
!7144 = !DILocalVariable(name: "x", arg: 1, scope: !7145, file: !4597, line: 366, type: !405)
!7145 = distinct !DISubprogram(name: "fls64", scope: !4597, file: !4597, line: 366, type: !7146, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7146 = !DISubroutineType(types: !7147)
!7147 = !{!173, !405}
!7148 = !DILocation(line: 366, column: 40, scope: !7145, inlinedAt: !7149)
!7149 = distinct !DILocation(line: 46, column: 9, scope: !7140)
!7150 = !DILocalVariable(name: "bitpos", scope: !7145, file: !4597, line: 368, type: !173)
!7151 = !DILocation(line: 368, column: 6, scope: !7145, inlinedAt: !7149)
!7152 = !DILocalVariable(name: "size", arg: 1, scope: !7140, file: !7141, line: 29, type: !165)
!7153 = !DILocation(line: 29, column: 63, scope: !7140)
!7154 = !DILocation(line: 31, column: 27, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7140, file: !7141, line: 31, column: 6)
!7156 = !DILocation(line: 31, column: 6, scope: !7155)
!7157 = !DILocation(line: 31, column: 6, scope: !7140)
!7158 = !DILocation(line: 32, column: 8, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !7141, line: 32, column: 7)
!7160 = distinct !DILexicalBlock(scope: !7155, file: !7141, line: 31, column: 34)
!7161 = !DILocation(line: 32, column: 7, scope: !7160)
!7162 = !DILocation(line: 33, column: 4, scope: !7159)
!7163 = !DILocation(line: 35, column: 7, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7160, file: !7141, line: 35, column: 7)
!7165 = !DILocation(line: 35, column: 12, scope: !7164)
!7166 = !DILocation(line: 35, column: 7, scope: !7160)
!7167 = !DILocation(line: 36, column: 4, scope: !7164)
!7168 = !DILocation(line: 38, column: 10, scope: !7160)
!7169 = !DILocation(line: 38, column: 28, scope: !7160)
!7170 = !DILocation(line: 38, column: 41, scope: !7160)
!7171 = !DILocation(line: 38, column: 3, scope: !7160)
!7172 = !DILocation(line: 41, column: 6, scope: !7140)
!7173 = !DILocation(line: 42, column: 7, scope: !7140)
!7174 = !DILocation(line: 46, column: 15, scope: !7140)
!7175 = !DILocation(line: 374, column: 2, scope: !7145, inlinedAt: !7149)
!7176 = !DILocation(line: 376, column: 14, scope: !7145, inlinedAt: !7149)
!7177 = !{i32 292820}
!7178 = !DILocation(line: 377, column: 9, scope: !7145, inlinedAt: !7149)
!7179 = !DILocation(line: 377, column: 16, scope: !7145, inlinedAt: !7149)
!7180 = !DILocation(line: 46, column: 2, scope: !7140)
!7181 = !DILocation(line: 48, column: 1, scope: !7140)
!7182 = distinct !DISubprogram(name: "__ilog2_u64", scope: !7183, file: !7183, line: 30, type: !7184, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7183 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!7184 = !DISubroutineType(types: !7185)
!7185 = !{!173, !404}
!7186 = !DILocation(line: 366, column: 40, scope: !7145, inlinedAt: !7187)
!7187 = distinct !DILocation(line: 32, column: 9, scope: !7182)
!7188 = !DILocation(line: 368, column: 6, scope: !7145, inlinedAt: !7187)
!7189 = !DILocalVariable(name: "n", arg: 1, scope: !7182, file: !7183, line: 30, type: !404)
!7190 = !DILocation(line: 30, column: 21, scope: !7182)
!7191 = !DILocation(line: 32, column: 15, scope: !7182)
!7192 = !DILocation(line: 374, column: 2, scope: !7145, inlinedAt: !7187)
!7193 = !DILocation(line: 376, column: 14, scope: !7145, inlinedAt: !7187)
!7194 = !DILocation(line: 377, column: 9, scope: !7145, inlinedAt: !7187)
!7195 = !DILocation(line: 377, column: 16, scope: !7145, inlinedAt: !7187)
!7196 = !DILocation(line: 32, column: 18, scope: !7182)
!7197 = !DILocation(line: 32, column: 2, scope: !7182)
!7198 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !7199, file: !7199, line: 137, type: !7200, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7199 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!7200 = !DISubroutineType(types: !7201)
!7201 = !{!176, !947, !3041, !309, !167}
!7202 = !DILocalVariable(name: "s", arg: 1, scope: !7198, file: !7199, line: 137, type: !947)
!7203 = !DILocation(line: 137, column: 54, scope: !7198)
!7204 = !DILocalVariable(name: "object", arg: 2, scope: !7198, file: !7199, line: 137, type: !3041)
!7205 = !DILocation(line: 137, column: 69, scope: !7198)
!7206 = !DILocalVariable(name: "size", arg: 3, scope: !7198, file: !7199, line: 138, type: !309)
!7207 = !DILocation(line: 138, column: 12, scope: !7198)
!7208 = !DILocalVariable(name: "flags", arg: 4, scope: !7198, file: !7199, line: 138, type: !167)
!7209 = !DILocation(line: 138, column: 24, scope: !7198)
!7210 = !DILocation(line: 140, column: 17, scope: !7198)
!7211 = !DILocation(line: 140, column: 2, scope: !7198)
!7212 = distinct !DISubprogram(name: "dev_pm_qos_request_active", scope: !81, file: !81, line: 134, type: !7213, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7213 = !DISubroutineType(types: !7214)
!7214 = !{!173, !3508}
!7215 = !DILocalVariable(name: "req", arg: 1, scope: !7212, file: !81, line: 134, type: !3508)
!7216 = !DILocation(line: 134, column: 72, scope: !7212)
!7217 = !DILocation(line: 136, column: 9, scope: !7212)
!7218 = !DILocation(line: 136, column: 14, scope: !7212)
!7219 = !DILocation(line: 136, column: 18, scope: !7212)
!7220 = !DILocation(line: 136, column: 2, scope: !7212)
!7221 = distinct !DISubprogram(name: "mutex_destroy", scope: !188, file: !188, line: 103, type: !7222, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7222 = !DISubroutineType(types: !7223)
!7223 = !{null, !7224}
!7224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!7225 = !DILocalVariable(name: "lock", arg: 1, scope: !7221, file: !188, line: 103, type: !7224)
!7226 = !DILocation(line: 103, column: 48, scope: !7221)
!7227 = !DILocation(line: 103, column: 55, scope: !7221)
!7228 = distinct !DISubprogram(name: "kasan_check_write", scope: !7114, file: !7114, line: 38, type: !7115, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7229 = !DILocalVariable(name: "p", arg: 1, scope: !7228, file: !7114, line: 38, type: !4615)
!7230 = !DILocation(line: 38, column: 59, scope: !7228)
!7231 = !DILocalVariable(name: "size", arg: 2, scope: !7228, file: !7114, line: 38, type: !7)
!7232 = !DILocation(line: 38, column: 75, scope: !7228)
!7233 = !DILocation(line: 40, column: 2, scope: !7228)
!7234 = distinct !DISubprogram(name: "kobject_name", scope: !222, file: !222, line: 88, type: !7235, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7235 = !DISubroutineType(types: !7236)
!7236 = !{!225, !7237}
!7237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7238, size: 64)
!7238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !221)
!7239 = !DILocalVariable(name: "kobj", arg: 1, scope: !7234, file: !222, line: 88, type: !7237)
!7240 = !DILocation(line: 88, column: 62, scope: !7234)
!7241 = !DILocation(line: 90, column: 9, scope: !7234)
!7242 = !DILocation(line: 90, column: 15, scope: !7234)
!7243 = !DILocation(line: 90, column: 2, scope: !7234)
!7244 = distinct !DISubprogram(name: "__must_check_overflow", scope: !5824, file: !5824, line: 52, type: !7245, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7245 = !DISubroutineType(types: !7246)
!7246 = !{!473, !473}
!7247 = !DILocalVariable(name: "overflow", arg: 1, scope: !7244, file: !5824, line: 52, type: !473)
!7248 = !DILocation(line: 52, column: 60, scope: !7244)
!7249 = !DILocation(line: 54, column: 9, scope: !7244)
!7250 = !DILocation(line: 54, column: 2, scope: !7244)
!7251 = distinct !DISubprogram(name: "devm_kmalloc_array", scope: !60, file: !60, line: 219, type: !5858, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7252 = !DILocalVariable(name: "dev", arg: 1, scope: !7251, file: !60, line: 219, type: !3199)
!7253 = !DILocation(line: 219, column: 55, scope: !7251)
!7254 = !DILocalVariable(name: "n", arg: 2, scope: !7251, file: !60, line: 220, type: !309)
!7255 = !DILocation(line: 220, column: 19, scope: !7251)
!7256 = !DILocalVariable(name: "size", arg: 3, scope: !7251, file: !60, line: 220, type: !309)
!7257 = !DILocation(line: 220, column: 29, scope: !7251)
!7258 = !DILocalVariable(name: "flags", arg: 4, scope: !7251, file: !60, line: 220, type: !167)
!7259 = !DILocation(line: 220, column: 41, scope: !7251)
!7260 = !DILocalVariable(name: "bytes", scope: !7251, file: !60, line: 222, type: !309)
!7261 = !DILocation(line: 222, column: 9, scope: !7251)
!7262 = !DILocalVariable(name: "__a", scope: !7263, file: !60, line: 224, type: !309)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !60, line: 224, column: 6)
!7264 = distinct !DILexicalBlock(scope: !7251, file: !60, line: 224, column: 6)
!7265 = !DILocation(line: 224, column: 6, scope: !7263)
!7266 = !DILocalVariable(name: "__b", scope: !7263, file: !60, line: 224, type: !309)
!7267 = !DILocalVariable(name: "__d", scope: !7263, file: !60, line: 224, type: !5841)
!7268 = !DILocation(line: 224, column: 6, scope: !7264)
!7269 = !DILocation(line: 224, column: 6, scope: !7251)
!7270 = !DILocation(line: 225, column: 3, scope: !7264)
!7271 = !DILocation(line: 227, column: 22, scope: !7251)
!7272 = !DILocation(line: 227, column: 27, scope: !7251)
!7273 = !DILocation(line: 227, column: 34, scope: !7251)
!7274 = !DILocation(line: 227, column: 9, scope: !7251)
!7275 = !DILocation(line: 227, column: 2, scope: !7251)
!7276 = !DILocation(line: 228, column: 1, scope: !7251)
!7277 = distinct !DISubprogram(name: "qos_notifier_call", scope: !3, file: !3, line: 657, type: !4049, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7278 = !DILocalVariable(name: "devfreq", arg: 1, scope: !7277, file: !3, line: 657, type: !177)
!7279 = !DILocation(line: 657, column: 46, scope: !7277)
!7280 = !DILocalVariable(name: "err", scope: !7277, file: !3, line: 659, type: !173)
!7281 = !DILocation(line: 659, column: 6, scope: !7277)
!7282 = !DILocation(line: 661, column: 14, scope: !7277)
!7283 = !DILocation(line: 661, column: 23, scope: !7277)
!7284 = !DILocation(line: 661, column: 2, scope: !7277)
!7285 = !DILocation(line: 662, column: 23, scope: !7277)
!7286 = !DILocation(line: 662, column: 8, scope: !7277)
!7287 = !DILocation(line: 662, column: 6, scope: !7277)
!7288 = !DILocation(line: 663, column: 16, scope: !7277)
!7289 = !DILocation(line: 663, column: 25, scope: !7277)
!7290 = !DILocation(line: 663, column: 2, scope: !7277)
!7291 = !DILocation(line: 664, column: 6, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 664, column: 6)
!7293 = !DILocation(line: 664, column: 6, scope: !7277)
!7294 = !DILocation(line: 665, column: 3, scope: !7292)
!7295 = !DILocation(line: 669, column: 2, scope: !7277)
!7296 = distinct !DISubprogram(name: "request_module", scope: !7297, file: !7297, line: 30, type: !7298, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7297 = !DIFile(filename: "./include/linux/kmod.h", directory: "/home/lizy2001/genbc/linux")
!7298 = !DISubroutineType(types: !7299)
!7299 = !{!173, !225, null}
!7300 = !DILocalVariable(name: "name", arg: 1, scope: !7296, file: !7297, line: 30, type: !225)
!7301 = !DILocation(line: 30, column: 46, scope: !7296)
!7302 = !DILocation(line: 30, column: 59, scope: !7296)
!7303 = distinct !DISubprogram(name: "__list_add", scope: !4375, file: !4375, line: 63, type: !7304, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7304 = !DISubroutineType(types: !7305)
!7305 = !{null, !184, !184, !184}
!7306 = !DILocalVariable(name: "new", arg: 1, scope: !7303, file: !4375, line: 63, type: !184)
!7307 = !DILocation(line: 63, column: 49, scope: !7303)
!7308 = !DILocalVariable(name: "prev", arg: 2, scope: !7303, file: !4375, line: 64, type: !184)
!7309 = !DILocation(line: 64, column: 28, scope: !7303)
!7310 = !DILocalVariable(name: "next", arg: 3, scope: !7303, file: !4375, line: 65, type: !184)
!7311 = !DILocation(line: 65, column: 28, scope: !7303)
!7312 = !DILocation(line: 67, column: 24, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7303, file: !4375, line: 67, column: 6)
!7314 = !DILocation(line: 67, column: 29, scope: !7313)
!7315 = !DILocation(line: 67, column: 35, scope: !7313)
!7316 = !DILocation(line: 67, column: 7, scope: !7313)
!7317 = !DILocation(line: 67, column: 6, scope: !7303)
!7318 = !DILocation(line: 68, column: 3, scope: !7313)
!7319 = !DILocation(line: 70, column: 15, scope: !7303)
!7320 = !DILocation(line: 70, column: 2, scope: !7303)
!7321 = !DILocation(line: 70, column: 8, scope: !7303)
!7322 = !DILocation(line: 70, column: 13, scope: !7303)
!7323 = !DILocation(line: 71, column: 14, scope: !7303)
!7324 = !DILocation(line: 71, column: 2, scope: !7303)
!7325 = !DILocation(line: 71, column: 7, scope: !7303)
!7326 = !DILocation(line: 71, column: 12, scope: !7303)
!7327 = !DILocation(line: 72, column: 14, scope: !7303)
!7328 = !DILocation(line: 72, column: 2, scope: !7303)
!7329 = !DILocation(line: 72, column: 7, scope: !7303)
!7330 = !DILocation(line: 72, column: 12, scope: !7303)
!7331 = !DILocation(line: 73, column: 2, scope: !7303)
!7332 = !DILocation(line: 73, column: 2, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7303, file: !4375, line: 73, column: 2)
!7334 = !DILocation(line: 73, column: 2, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7333, file: !4375, line: 73, column: 2)
!7336 = !DILocation(line: 73, column: 2, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7333, file: !4375, line: 73, column: 2)
!7338 = !DILocation(line: 74, column: 1, scope: !7303)
!7339 = distinct !DISubprogram(name: "__list_add_valid", scope: !4375, file: !4375, line: 45, type: !7340, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7340 = !DISubroutineType(types: !7341)
!7341 = !{!473, !184, !184, !184}
!7342 = !DILocalVariable(name: "new", arg: 1, scope: !7339, file: !4375, line: 45, type: !184)
!7343 = !DILocation(line: 45, column: 55, scope: !7339)
!7344 = !DILocalVariable(name: "prev", arg: 2, scope: !7339, file: !4375, line: 46, type: !184)
!7345 = !DILocation(line: 46, column: 23, scope: !7339)
!7346 = !DILocalVariable(name: "next", arg: 3, scope: !7339, file: !4375, line: 47, type: !184)
!7347 = !DILocation(line: 47, column: 23, scope: !7339)
!7348 = !DILocation(line: 49, column: 2, scope: !7339)
!7349 = distinct !DISubprogram(name: "__list_del_entry", scope: !4375, file: !4375, line: 130, type: !4376, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7350 = !DILocalVariable(name: "entry", arg: 1, scope: !7349, file: !4375, line: 130, type: !184)
!7351 = !DILocation(line: 130, column: 55, scope: !7349)
!7352 = !DILocation(line: 132, column: 30, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7349, file: !4375, line: 132, column: 6)
!7354 = !DILocation(line: 132, column: 7, scope: !7353)
!7355 = !DILocation(line: 132, column: 6, scope: !7349)
!7356 = !DILocation(line: 133, column: 3, scope: !7353)
!7357 = !DILocation(line: 135, column: 13, scope: !7349)
!7358 = !DILocation(line: 135, column: 20, scope: !7349)
!7359 = !DILocation(line: 135, column: 26, scope: !7349)
!7360 = !DILocation(line: 135, column: 33, scope: !7349)
!7361 = !DILocation(line: 135, column: 2, scope: !7349)
!7362 = !DILocation(line: 136, column: 1, scope: !7349)
!7363 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !4375, file: !4375, line: 51, type: !7364, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{!473, !184}
!7366 = !DILocalVariable(name: "entry", arg: 1, scope: !7363, file: !4375, line: 51, type: !184)
!7367 = !DILocation(line: 51, column: 61, scope: !7363)
!7368 = !DILocation(line: 53, column: 2, scope: !7363)
!7369 = distinct !DISubprogram(name: "__list_del", scope: !4375, file: !4375, line: 110, type: !5969, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7370 = !DILocalVariable(name: "prev", arg: 1, scope: !7369, file: !4375, line: 110, type: !184)
!7371 = !DILocation(line: 110, column: 50, scope: !7369)
!7372 = !DILocalVariable(name: "next", arg: 2, scope: !7369, file: !4375, line: 110, type: !184)
!7373 = !DILocation(line: 110, column: 75, scope: !7369)
!7374 = !DILocation(line: 112, column: 15, scope: !7369)
!7375 = !DILocation(line: 112, column: 2, scope: !7369)
!7376 = !DILocation(line: 112, column: 8, scope: !7369)
!7377 = !DILocation(line: 112, column: 13, scope: !7369)
!7378 = !DILocation(line: 113, column: 2, scope: !7369)
!7379 = !DILocation(line: 113, column: 2, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7369, file: !4375, line: 113, column: 2)
!7381 = !DILocation(line: 113, column: 2, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7380, file: !4375, line: 113, column: 2)
!7383 = !DILocation(line: 113, column: 2, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7380, file: !4375, line: 113, column: 2)
!7385 = !DILocation(line: 114, column: 1, scope: !7369)
!7386 = distinct !DISubprogram(name: "debugfs_create_dir", scope: !7387, file: !7387, line: 196, type: !7388, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7387 = !DIFile(filename: "./include/linux/debugfs.h", directory: "/home/lizy2001/genbc/linux")
!7388 = !DISubroutineType(types: !7389)
!7389 = !{!369, !225, !369}
!7390 = !DILocalVariable(name: "name", arg: 1, scope: !7386, file: !7387, line: 196, type: !225)
!7391 = !DILocation(line: 196, column: 61, scope: !7386)
!7392 = !DILocalVariable(name: "parent", arg: 2, scope: !7386, file: !7387, line: 197, type: !369)
!7393 = !DILocation(line: 197, column: 22, scope: !7386)
!7394 = !DILocation(line: 199, column: 9, scope: !7386)
!7395 = !DILocation(line: 199, column: 2, scope: !7386)
!7396 = distinct !DISubprogram(name: "debugfs_create_file", scope: !7387, file: !7387, line: 175, type: !7397, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7397 = !DISubroutineType(types: !7398)
!7398 = !{!369, !225, !303, !369, !176, !2699}
!7399 = !DILocalVariable(name: "name", arg: 1, scope: !7396, file: !7387, line: 175, type: !225)
!7400 = !DILocation(line: 175, column: 62, scope: !7396)
!7401 = !DILocalVariable(name: "mode", arg: 2, scope: !7396, file: !7387, line: 175, type: !303)
!7402 = !DILocation(line: 175, column: 76, scope: !7396)
!7403 = !DILocalVariable(name: "parent", arg: 3, scope: !7396, file: !7387, line: 176, type: !369)
!7404 = !DILocation(line: 176, column: 21, scope: !7396)
!7405 = !DILocalVariable(name: "data", arg: 4, scope: !7396, file: !7387, line: 176, type: !176)
!7406 = !DILocation(line: 176, column: 35, scope: !7396)
!7407 = !DILocalVariable(name: "fops", arg: 5, scope: !7396, file: !7387, line: 177, type: !2699)
!7408 = !DILocation(line: 177, column: 36, scope: !7396)
!7409 = !DILocation(line: 179, column: 9, scope: !7396)
!7410 = !DILocation(line: 179, column: 2, scope: !7396)
!7411 = distinct !DISubprogram(name: "name_show", scope: !3, file: !3, line: 1307, type: !3877, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7412 = !DILocalVariable(name: "dev", arg: 1, scope: !7411, file: !3, line: 1307, type: !3199)
!7413 = !DILocation(line: 1307, column: 41, scope: !7411)
!7414 = !DILocalVariable(name: "attr", arg: 2, scope: !7411, file: !3, line: 1308, type: !3879)
!7415 = !DILocation(line: 1308, column: 29, scope: !7411)
!7416 = !DILocalVariable(name: "buf", arg: 3, scope: !7411, file: !3, line: 1308, type: !263)
!7417 = !DILocation(line: 1308, column: 41, scope: !7411)
!7418 = !DILocalVariable(name: "df", scope: !7411, file: !3, line: 1310, type: !177)
!7419 = !DILocation(line: 1310, column: 18, scope: !7411)
!7420 = !DILocalVariable(name: "__mptr", scope: !7421, file: !3, line: 1310, type: !176)
!7421 = distinct !DILexicalBlock(scope: !7411, file: !3, line: 1310, column: 23)
!7422 = !DILocation(line: 1310, column: 23, scope: !7421)
!7423 = !DILocation(line: 1310, column: 23, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 1310, column: 23)
!7425 = !DILocation(line: 1311, column: 17, scope: !7411)
!7426 = !DILocation(line: 1311, column: 39, scope: !7411)
!7427 = !DILocation(line: 1311, column: 43, scope: !7411)
!7428 = !DILocation(line: 1311, column: 47, scope: !7411)
!7429 = !DILocation(line: 1311, column: 30, scope: !7411)
!7430 = !DILocation(line: 1311, column: 9, scope: !7411)
!7431 = !DILocation(line: 1311, column: 2, scope: !7411)
!7432 = distinct !DISubprogram(name: "governor_show", scope: !3, file: !3, line: 1315, type: !3877, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7433 = !DILocalVariable(name: "dev", arg: 1, scope: !7432, file: !3, line: 1315, type: !3199)
!7434 = !DILocation(line: 1315, column: 45, scope: !7432)
!7435 = !DILocalVariable(name: "attr", arg: 2, scope: !7432, file: !3, line: 1316, type: !3879)
!7436 = !DILocation(line: 1316, column: 34, scope: !7432)
!7437 = !DILocalVariable(name: "buf", arg: 3, scope: !7432, file: !3, line: 1316, type: !263)
!7438 = !DILocation(line: 1316, column: 46, scope: !7432)
!7439 = !DILocalVariable(name: "df", scope: !7432, file: !3, line: 1318, type: !177)
!7440 = !DILocation(line: 1318, column: 18, scope: !7432)
!7441 = !DILocalVariable(name: "__mptr", scope: !7442, file: !3, line: 1318, type: !176)
!7442 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 1318, column: 23)
!7443 = !DILocation(line: 1318, column: 23, scope: !7442)
!7444 = !DILocation(line: 1318, column: 23, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 1318, column: 23)
!7446 = !DILocation(line: 1320, column: 7, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 1320, column: 6)
!7448 = !DILocation(line: 1320, column: 11, scope: !7447)
!7449 = !DILocation(line: 1320, column: 6, scope: !7432)
!7450 = !DILocation(line: 1321, column: 3, scope: !7447)
!7451 = !DILocation(line: 1323, column: 17, scope: !7432)
!7452 = !DILocation(line: 1323, column: 30, scope: !7432)
!7453 = !DILocation(line: 1323, column: 34, scope: !7432)
!7454 = !DILocation(line: 1323, column: 44, scope: !7432)
!7455 = !DILocation(line: 1323, column: 9, scope: !7432)
!7456 = !DILocation(line: 1323, column: 2, scope: !7432)
!7457 = !DILocation(line: 1324, column: 1, scope: !7432)
!7458 = distinct !DISubprogram(name: "governor_store", scope: !3, file: !3, line: 1326, type: !3882, scopeLine: 1328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7459 = !DILocalVariable(name: "dev", arg: 1, scope: !7458, file: !3, line: 1326, type: !3199)
!7460 = !DILocation(line: 1326, column: 46, scope: !7458)
!7461 = !DILocalVariable(name: "attr", arg: 2, scope: !7458, file: !3, line: 1326, type: !3879)
!7462 = !DILocation(line: 1326, column: 76, scope: !7458)
!7463 = !DILocalVariable(name: "buf", arg: 3, scope: !7458, file: !3, line: 1327, type: !225)
!7464 = !DILocation(line: 1327, column: 22, scope: !7458)
!7465 = !DILocalVariable(name: "count", arg: 4, scope: !7458, file: !3, line: 1327, type: !309)
!7466 = !DILocation(line: 1327, column: 34, scope: !7458)
!7467 = !DILocalVariable(name: "df", scope: !7458, file: !3, line: 1329, type: !177)
!7468 = !DILocation(line: 1329, column: 18, scope: !7458)
!7469 = !DILocalVariable(name: "__mptr", scope: !7470, file: !3, line: 1329, type: !176)
!7470 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1329, column: 23)
!7471 = !DILocation(line: 1329, column: 23, scope: !7470)
!7472 = !DILocation(line: 1329, column: 23, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7470, file: !3, line: 1329, column: 23)
!7474 = !DILocalVariable(name: "ret", scope: !7458, file: !3, line: 1330, type: !173)
!7475 = !DILocation(line: 1330, column: 6, scope: !7458)
!7476 = !DILocalVariable(name: "str_governor", scope: !7458, file: !3, line: 1331, type: !7477)
!7477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 136, elements: !7478)
!7478 = !{!7479}
!7479 = !DISubrange(count: 17)
!7480 = !DILocation(line: 1331, column: 7, scope: !7458)
!7481 = !DILocalVariable(name: "governor", scope: !7458, file: !3, line: 1332, type: !3769)
!7482 = !DILocation(line: 1332, column: 33, scope: !7458)
!7483 = !DILocalVariable(name: "prev_governor", scope: !7458, file: !3, line: 1332, type: !3769)
!7484 = !DILocation(line: 1332, column: 44, scope: !7458)
!7485 = !DILocation(line: 1334, column: 7, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1334, column: 6)
!7487 = !DILocation(line: 1334, column: 11, scope: !7486)
!7488 = !DILocation(line: 1334, column: 6, scope: !7458)
!7489 = !DILocation(line: 1335, column: 3, scope: !7486)
!7490 = !DILocation(line: 1337, column: 15, scope: !7458)
!7491 = !DILocation(line: 1337, column: 59, scope: !7458)
!7492 = !DILocation(line: 1337, column: 8, scope: !7458)
!7493 = !DILocation(line: 1337, column: 6, scope: !7458)
!7494 = !DILocation(line: 1338, column: 6, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1338, column: 6)
!7496 = !DILocation(line: 1338, column: 10, scope: !7495)
!7497 = !DILocation(line: 1338, column: 6, scope: !7458)
!7498 = !DILocation(line: 1339, column: 3, scope: !7495)
!7499 = !DILocation(line: 1341, column: 2, scope: !7458)
!7500 = !DILocation(line: 1342, column: 39, scope: !7458)
!7501 = !DILocation(line: 1342, column: 13, scope: !7458)
!7502 = !DILocation(line: 1342, column: 11, scope: !7458)
!7503 = !DILocation(line: 1343, column: 13, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1343, column: 6)
!7505 = !DILocation(line: 1343, column: 6, scope: !7504)
!7506 = !DILocation(line: 1343, column: 6, scope: !7458)
!7507 = !DILocation(line: 1344, column: 17, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 1343, column: 24)
!7509 = !DILocation(line: 1344, column: 9, scope: !7508)
!7510 = !DILocation(line: 1344, column: 7, scope: !7508)
!7511 = !DILocation(line: 1345, column: 3, scope: !7508)
!7512 = !DILocation(line: 1347, column: 6, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1347, column: 6)
!7514 = !DILocation(line: 1347, column: 10, scope: !7513)
!7515 = !DILocation(line: 1347, column: 22, scope: !7513)
!7516 = !DILocation(line: 1347, column: 19, scope: !7513)
!7517 = !DILocation(line: 1347, column: 6, scope: !7458)
!7518 = !DILocation(line: 1348, column: 7, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1347, column: 32)
!7520 = !DILocation(line: 1349, column: 3, scope: !7519)
!7521 = !DILocation(line: 1350, column: 13, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1350, column: 13)
!7523 = !DILocation(line: 1350, column: 17, scope: !7522)
!7524 = !DILocation(line: 1350, column: 27, scope: !7522)
!7525 = !DILocation(line: 1350, column: 37, scope: !7522)
!7526 = !DILocation(line: 1350, column: 40, scope: !7522)
!7527 = !DILocation(line: 1350, column: 50, scope: !7522)
!7528 = !DILocation(line: 1350, column: 13, scope: !7513)
!7529 = !DILocation(line: 1351, column: 7, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7522, file: !3, line: 1350, column: 61)
!7531 = !DILocation(line: 1352, column: 3, scope: !7530)
!7532 = !DILocation(line: 1355, column: 8, scope: !7458)
!7533 = !DILocation(line: 1355, column: 12, scope: !7458)
!7534 = !DILocation(line: 1355, column: 22, scope: !7458)
!7535 = !DILocation(line: 1355, column: 36, scope: !7458)
!7536 = !DILocation(line: 1355, column: 6, scope: !7458)
!7537 = !DILocation(line: 1356, column: 6, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1356, column: 6)
!7539 = !DILocation(line: 1356, column: 6, scope: !7458)
!7540 = !DILocation(line: 1357, column: 3, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 1356, column: 11)
!7542 = !DILocation(line: 1359, column: 3, scope: !7541)
!7543 = !DILocation(line: 1362, column: 18, scope: !7458)
!7544 = !DILocation(line: 1362, column: 22, scope: !7458)
!7545 = !DILocation(line: 1362, column: 16, scope: !7458)
!7546 = !DILocation(line: 1363, column: 17, scope: !7458)
!7547 = !DILocation(line: 1363, column: 2, scope: !7458)
!7548 = !DILocation(line: 1363, column: 6, scope: !7458)
!7549 = !DILocation(line: 1363, column: 15, scope: !7458)
!7550 = !DILocation(line: 1364, column: 10, scope: !7458)
!7551 = !DILocation(line: 1364, column: 14, scope: !7458)
!7552 = !DILocation(line: 1364, column: 29, scope: !7458)
!7553 = !DILocation(line: 1364, column: 39, scope: !7458)
!7554 = !DILocation(line: 1364, column: 2, scope: !7458)
!7555 = !DILocation(line: 1365, column: 8, scope: !7458)
!7556 = !DILocation(line: 1365, column: 12, scope: !7458)
!7557 = !DILocation(line: 1365, column: 22, scope: !7458)
!7558 = !DILocation(line: 1365, column: 36, scope: !7458)
!7559 = !DILocation(line: 1365, column: 6, scope: !7458)
!7560 = !DILocation(line: 1366, column: 6, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1366, column: 6)
!7562 = !DILocation(line: 1366, column: 6, scope: !7458)
!7563 = !DILocation(line: 1367, column: 3, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 1366, column: 11)
!7565 = !DILocation(line: 1369, column: 18, scope: !7564)
!7566 = !DILocation(line: 1369, column: 3, scope: !7564)
!7567 = !DILocation(line: 1369, column: 7, scope: !7564)
!7568 = !DILocation(line: 1369, column: 16, scope: !7564)
!7569 = !DILocation(line: 1370, column: 11, scope: !7564)
!7570 = !DILocation(line: 1370, column: 15, scope: !7564)
!7571 = !DILocation(line: 1370, column: 30, scope: !7564)
!7572 = !DILocation(line: 1370, column: 45, scope: !7564)
!7573 = !DILocation(line: 1370, column: 3, scope: !7564)
!7574 = !DILocation(line: 1372, column: 9, scope: !7564)
!7575 = !DILocation(line: 1372, column: 13, scope: !7564)
!7576 = !DILocation(line: 1372, column: 23, scope: !7564)
!7577 = !DILocation(line: 1372, column: 37, scope: !7564)
!7578 = !DILocation(line: 1372, column: 7, scope: !7564)
!7579 = !DILocation(line: 1373, column: 7, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 1373, column: 7)
!7581 = !DILocation(line: 1373, column: 7, scope: !7564)
!7582 = !DILocation(line: 1374, column: 4, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 1373, column: 12)
!7584 = !DILocation(line: 1377, column: 4, scope: !7583)
!7585 = !DILocation(line: 1377, column: 8, scope: !7583)
!7586 = !DILocation(line: 1377, column: 17, scope: !7583)
!7587 = !DILocation(line: 1378, column: 3, scope: !7583)
!7588 = !DILocation(line: 1379, column: 2, scope: !7564)
!7589 = !DILabel(scope: !7458, name: "out", file: !3, line: 1380)
!7590 = !DILocation(line: 1380, column: 1, scope: !7458)
!7591 = !DILocation(line: 1381, column: 2, scope: !7458)
!7592 = !DILocation(line: 1383, column: 7, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1383, column: 6)
!7594 = !DILocation(line: 1383, column: 6, scope: !7458)
!7595 = !DILocation(line: 1384, column: 9, scope: !7593)
!7596 = !DILocation(line: 1384, column: 7, scope: !7593)
!7597 = !DILocation(line: 1384, column: 3, scope: !7593)
!7598 = !DILocation(line: 1385, column: 9, scope: !7458)
!7599 = !DILocation(line: 1385, column: 2, scope: !7458)
!7600 = !DILocation(line: 1386, column: 1, scope: !7458)
!7601 = distinct !DISubprogram(name: "available_governors_show", scope: !3, file: !3, line: 1389, type: !3877, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7602 = !DILocalVariable(name: "d", arg: 1, scope: !7601, file: !3, line: 1389, type: !3199)
!7603 = !DILocation(line: 1389, column: 56, scope: !7601)
!7604 = !DILocalVariable(name: "attr", arg: 2, scope: !7601, file: !3, line: 1390, type: !3879)
!7605 = !DILocation(line: 1390, column: 31, scope: !7601)
!7606 = !DILocalVariable(name: "buf", arg: 3, scope: !7601, file: !3, line: 1391, type: !263)
!7607 = !DILocation(line: 1391, column: 12, scope: !7601)
!7608 = !DILocalVariable(name: "df", scope: !7601, file: !3, line: 1393, type: !177)
!7609 = !DILocation(line: 1393, column: 18, scope: !7601)
!7610 = !DILocalVariable(name: "__mptr", scope: !7611, file: !3, line: 1393, type: !176)
!7611 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 1393, column: 23)
!7612 = !DILocation(line: 1393, column: 23, scope: !7611)
!7613 = !DILocation(line: 1393, column: 23, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 1393, column: 23)
!7615 = !DILocalVariable(name: "count", scope: !7601, file: !3, line: 1394, type: !294)
!7616 = !DILocation(line: 1394, column: 10, scope: !7601)
!7617 = !DILocation(line: 1396, column: 7, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 1396, column: 6)
!7619 = !DILocation(line: 1396, column: 11, scope: !7618)
!7620 = !DILocation(line: 1396, column: 6, scope: !7601)
!7621 = !DILocation(line: 1397, column: 3, scope: !7618)
!7622 = !DILocation(line: 1399, column: 2, scope: !7601)
!7623 = !DILocation(line: 1405, column: 6, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 1405, column: 6)
!7625 = !DILocation(line: 1405, column: 10, scope: !7624)
!7626 = !DILocation(line: 1405, column: 20, scope: !7624)
!7627 = !DILocation(line: 1405, column: 6, scope: !7601)
!7628 = !DILocation(line: 1406, column: 22, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 1405, column: 31)
!7630 = !DILocation(line: 1406, column: 26, scope: !7629)
!7631 = !DILocation(line: 1407, column: 14, scope: !7629)
!7632 = !DILocation(line: 1407, column: 18, scope: !7629)
!7633 = !DILocation(line: 1406, column: 11, scope: !7629)
!7634 = !DILocation(line: 1406, column: 9, scope: !7629)
!7635 = !DILocation(line: 1412, column: 2, scope: !7629)
!7636 = !DILocalVariable(name: "governor", scope: !7637, file: !3, line: 1413, type: !3840)
!7637 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 1412, column: 9)
!7638 = !DILocation(line: 1413, column: 28, scope: !7637)
!7639 = !DILocalVariable(name: "__mptr", scope: !7640, file: !3, line: 1415, type: !176)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 1415, column: 3)
!7641 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 1415, column: 3)
!7642 = !DILocation(line: 1415, column: 3, scope: !7640)
!7643 = !DILocation(line: 1415, column: 3, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 1415, column: 3)
!7645 = !DILocation(line: 1415, column: 3, scope: !7641)
!7646 = !DILocation(line: 1415, column: 3, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 1415, column: 3)
!7648 = !DILocation(line: 1416, column: 8, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1416, column: 8)
!7650 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 1415, column: 63)
!7651 = !DILocation(line: 1416, column: 18, scope: !7649)
!7652 = !DILocation(line: 1416, column: 8, scope: !7650)
!7653 = !DILocation(line: 1417, column: 5, scope: !7649)
!7654 = !DILocation(line: 1418, column: 24, scope: !7650)
!7655 = !DILocation(line: 1418, column: 28, scope: !7650)
!7656 = !DILocation(line: 1418, column: 49, scope: !7650)
!7657 = !DILocation(line: 1418, column: 47, scope: !7650)
!7658 = !DILocation(line: 1418, column: 55, scope: !7650)
!7659 = !DILocation(line: 1419, column: 16, scope: !7650)
!7660 = !DILocation(line: 1419, column: 26, scope: !7650)
!7661 = !DILocation(line: 1418, column: 13, scope: !7650)
!7662 = !DILocation(line: 1418, column: 10, scope: !7650)
!7663 = !DILocation(line: 1420, column: 3, scope: !7650)
!7664 = !DILocalVariable(name: "__mptr", scope: !7665, file: !3, line: 1415, type: !176)
!7665 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 1415, column: 3)
!7666 = !DILocation(line: 1415, column: 3, scope: !7665)
!7667 = !DILocation(line: 1415, column: 3, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 1415, column: 3)
!7669 = distinct !{!7669, !7645, !7670}
!7670 = !DILocation(line: 1420, column: 3, scope: !7641)
!7671 = !DILocation(line: 1423, column: 2, scope: !7601)
!7672 = !DILocation(line: 1426, column: 6, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 1426, column: 6)
!7674 = !DILocation(line: 1426, column: 6, scope: !7601)
!7675 = !DILocation(line: 1427, column: 8, scope: !7673)
!7676 = !DILocation(line: 1427, column: 3, scope: !7673)
!7677 = !DILocation(line: 1429, column: 20, scope: !7601)
!7678 = !DILocation(line: 1429, column: 24, scope: !7601)
!7679 = !DILocation(line: 1429, column: 11, scope: !7601)
!7680 = !DILocation(line: 1429, column: 8, scope: !7601)
!7681 = !DILocation(line: 1431, column: 9, scope: !7601)
!7682 = !DILocation(line: 1431, column: 2, scope: !7601)
!7683 = !DILocation(line: 1432, column: 1, scope: !7601)
!7684 = distinct !DISubprogram(name: "cur_freq_show", scope: !3, file: !3, line: 1435, type: !3877, scopeLine: 1437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7685 = !DILocalVariable(name: "dev", arg: 1, scope: !7684, file: !3, line: 1435, type: !3199)
!7686 = !DILocation(line: 1435, column: 45, scope: !7684)
!7687 = !DILocalVariable(name: "attr", arg: 2, scope: !7684, file: !3, line: 1435, type: !3879)
!7688 = !DILocation(line: 1435, column: 75, scope: !7684)
!7689 = !DILocalVariable(name: "buf", arg: 3, scope: !7684, file: !3, line: 1436, type: !263)
!7690 = !DILocation(line: 1436, column: 15, scope: !7684)
!7691 = !DILocalVariable(name: "freq", scope: !7684, file: !3, line: 1438, type: !165)
!7692 = !DILocation(line: 1438, column: 16, scope: !7684)
!7693 = !DILocalVariable(name: "df", scope: !7684, file: !3, line: 1439, type: !177)
!7694 = !DILocation(line: 1439, column: 18, scope: !7684)
!7695 = !DILocalVariable(name: "__mptr", scope: !7696, file: !3, line: 1439, type: !176)
!7696 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 1439, column: 23)
!7697 = !DILocation(line: 1439, column: 23, scope: !7696)
!7698 = !DILocation(line: 1439, column: 23, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 1439, column: 23)
!7700 = !DILocation(line: 1441, column: 7, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 1441, column: 6)
!7702 = !DILocation(line: 1441, column: 11, scope: !7701)
!7703 = !DILocation(line: 1441, column: 6, scope: !7684)
!7704 = !DILocation(line: 1442, column: 3, scope: !7701)
!7705 = !DILocation(line: 1444, column: 6, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 1444, column: 6)
!7707 = !DILocation(line: 1444, column: 10, scope: !7706)
!7708 = !DILocation(line: 1444, column: 19, scope: !7706)
!7709 = !DILocation(line: 1444, column: 32, scope: !7706)
!7710 = !DILocation(line: 1445, column: 4, scope: !7706)
!7711 = !DILocation(line: 1445, column: 8, scope: !7706)
!7712 = !DILocation(line: 1445, column: 17, scope: !7706)
!7713 = !DILocation(line: 1445, column: 30, scope: !7706)
!7714 = !DILocation(line: 1445, column: 34, scope: !7706)
!7715 = !DILocation(line: 1445, column: 38, scope: !7706)
!7716 = !DILocation(line: 1444, column: 6, scope: !7684)
!7717 = !DILocation(line: 1446, column: 18, scope: !7706)
!7718 = !DILocation(line: 1446, column: 32, scope: !7706)
!7719 = !DILocation(line: 1446, column: 10, scope: !7706)
!7720 = !DILocation(line: 1446, column: 3, scope: !7706)
!7721 = !DILocation(line: 1448, column: 17, scope: !7684)
!7722 = !DILocation(line: 1448, column: 31, scope: !7684)
!7723 = !DILocation(line: 1448, column: 35, scope: !7684)
!7724 = !DILocation(line: 1448, column: 9, scope: !7684)
!7725 = !DILocation(line: 1448, column: 2, scope: !7684)
!7726 = !DILocation(line: 1449, column: 1, scope: !7684)
!7727 = distinct !DISubprogram(name: "available_frequencies_show", scope: !3, file: !3, line: 1589, type: !3877, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7728 = !DILocalVariable(name: "d", arg: 1, scope: !7727, file: !3, line: 1589, type: !3199)
!7729 = !DILocation(line: 1589, column: 58, scope: !7727)
!7730 = !DILocalVariable(name: "attr", arg: 2, scope: !7727, file: !3, line: 1590, type: !3879)
!7731 = !DILocation(line: 1590, column: 33, scope: !7727)
!7732 = !DILocalVariable(name: "buf", arg: 3, scope: !7727, file: !3, line: 1591, type: !263)
!7733 = !DILocation(line: 1591, column: 14, scope: !7727)
!7734 = !DILocalVariable(name: "df", scope: !7727, file: !3, line: 1593, type: !177)
!7735 = !DILocation(line: 1593, column: 18, scope: !7727)
!7736 = !DILocalVariable(name: "__mptr", scope: !7737, file: !3, line: 1593, type: !176)
!7737 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 1593, column: 23)
!7738 = !DILocation(line: 1593, column: 23, scope: !7737)
!7739 = !DILocation(line: 1593, column: 23, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 1593, column: 23)
!7741 = !DILocalVariable(name: "count", scope: !7727, file: !3, line: 1594, type: !294)
!7742 = !DILocation(line: 1594, column: 10, scope: !7727)
!7743 = !DILocalVariable(name: "i", scope: !7727, file: !3, line: 1595, type: !173)
!7744 = !DILocation(line: 1595, column: 6, scope: !7727)
!7745 = !DILocation(line: 1597, column: 7, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 1597, column: 6)
!7747 = !DILocation(line: 1597, column: 11, scope: !7746)
!7748 = !DILocation(line: 1597, column: 6, scope: !7727)
!7749 = !DILocation(line: 1598, column: 3, scope: !7746)
!7750 = !DILocation(line: 1600, column: 14, scope: !7727)
!7751 = !DILocation(line: 1600, column: 18, scope: !7727)
!7752 = !DILocation(line: 1600, column: 2, scope: !7727)
!7753 = !DILocation(line: 1602, column: 9, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 1602, column: 2)
!7755 = !DILocation(line: 1602, column: 7, scope: !7754)
!7756 = !DILocation(line: 1602, column: 14, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 1602, column: 2)
!7758 = !DILocation(line: 1602, column: 18, scope: !7757)
!7759 = !DILocation(line: 1602, column: 22, scope: !7757)
!7760 = !DILocation(line: 1602, column: 31, scope: !7757)
!7761 = !DILocation(line: 1602, column: 16, scope: !7757)
!7762 = !DILocation(line: 1602, column: 2, scope: !7754)
!7763 = !DILocation(line: 1603, column: 23, scope: !7757)
!7764 = !DILocation(line: 1603, column: 27, scope: !7757)
!7765 = !DILocation(line: 1603, column: 48, scope: !7757)
!7766 = !DILocation(line: 1603, column: 46, scope: !7757)
!7767 = !DILocation(line: 1603, column: 54, scope: !7757)
!7768 = !DILocation(line: 1604, column: 13, scope: !7757)
!7769 = !DILocation(line: 1604, column: 17, scope: !7757)
!7770 = !DILocation(line: 1604, column: 26, scope: !7757)
!7771 = !DILocation(line: 1604, column: 37, scope: !7757)
!7772 = !DILocation(line: 1603, column: 12, scope: !7757)
!7773 = !DILocation(line: 1603, column: 9, scope: !7757)
!7774 = !DILocation(line: 1603, column: 3, scope: !7757)
!7775 = !DILocation(line: 1602, column: 43, scope: !7757)
!7776 = !DILocation(line: 1602, column: 2, scope: !7757)
!7777 = distinct !{!7777, !7762, !7778}
!7778 = !DILocation(line: 1604, column: 39, scope: !7754)
!7779 = !DILocation(line: 1606, column: 16, scope: !7727)
!7780 = !DILocation(line: 1606, column: 20, scope: !7727)
!7781 = !DILocation(line: 1606, column: 2, scope: !7727)
!7782 = !DILocation(line: 1608, column: 6, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 1608, column: 6)
!7784 = !DILocation(line: 1608, column: 6, scope: !7727)
!7785 = !DILocation(line: 1609, column: 8, scope: !7783)
!7786 = !DILocation(line: 1609, column: 3, scope: !7783)
!7787 = !DILocation(line: 1611, column: 20, scope: !7727)
!7788 = !DILocation(line: 1611, column: 24, scope: !7727)
!7789 = !DILocation(line: 1611, column: 11, scope: !7727)
!7790 = !DILocation(line: 1611, column: 8, scope: !7727)
!7791 = !DILocation(line: 1613, column: 9, scope: !7727)
!7792 = !DILocation(line: 1613, column: 2, scope: !7727)
!7793 = !DILocation(line: 1614, column: 1, scope: !7727)
!7794 = distinct !DISubprogram(name: "target_freq_show", scope: !3, file: !3, line: 1452, type: !3877, scopeLine: 1454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7795 = !DILocalVariable(name: "dev", arg: 1, scope: !7794, file: !3, line: 1452, type: !3199)
!7796 = !DILocation(line: 1452, column: 48, scope: !7794)
!7797 = !DILocalVariable(name: "attr", arg: 2, scope: !7794, file: !3, line: 1453, type: !3879)
!7798 = !DILocation(line: 1453, column: 30, scope: !7794)
!7799 = !DILocalVariable(name: "buf", arg: 3, scope: !7794, file: !3, line: 1453, type: !263)
!7800 = !DILocation(line: 1453, column: 42, scope: !7794)
!7801 = !DILocalVariable(name: "df", scope: !7794, file: !3, line: 1455, type: !177)
!7802 = !DILocation(line: 1455, column: 18, scope: !7794)
!7803 = !DILocalVariable(name: "__mptr", scope: !7804, file: !3, line: 1455, type: !176)
!7804 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 1455, column: 23)
!7805 = !DILocation(line: 1455, column: 23, scope: !7804)
!7806 = !DILocation(line: 1455, column: 23, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 1455, column: 23)
!7808 = !DILocation(line: 1457, column: 17, scope: !7794)
!7809 = !DILocation(line: 1457, column: 31, scope: !7794)
!7810 = !DILocation(line: 1457, column: 35, scope: !7794)
!7811 = !DILocation(line: 1457, column: 9, scope: !7794)
!7812 = !DILocation(line: 1457, column: 2, scope: !7794)
!7813 = distinct !DISubprogram(name: "polling_interval_show", scope: !3, file: !3, line: 1461, type: !3877, scopeLine: 1463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7814 = !DILocalVariable(name: "dev", arg: 1, scope: !7813, file: !3, line: 1461, type: !3199)
!7815 = !DILocation(line: 1461, column: 53, scope: !7813)
!7816 = !DILocalVariable(name: "attr", arg: 2, scope: !7813, file: !3, line: 1462, type: !3879)
!7817 = !DILocation(line: 1462, column: 35, scope: !7813)
!7818 = !DILocalVariable(name: "buf", arg: 3, scope: !7813, file: !3, line: 1462, type: !263)
!7819 = !DILocation(line: 1462, column: 47, scope: !7813)
!7820 = !DILocalVariable(name: "df", scope: !7813, file: !3, line: 1464, type: !177)
!7821 = !DILocation(line: 1464, column: 18, scope: !7813)
!7822 = !DILocalVariable(name: "__mptr", scope: !7823, file: !3, line: 1464, type: !176)
!7823 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 1464, column: 23)
!7824 = !DILocation(line: 1464, column: 23, scope: !7823)
!7825 = !DILocation(line: 1464, column: 23, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 1464, column: 23)
!7827 = !DILocation(line: 1466, column: 7, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 1466, column: 6)
!7829 = !DILocation(line: 1466, column: 11, scope: !7828)
!7830 = !DILocation(line: 1466, column: 6, scope: !7813)
!7831 = !DILocation(line: 1467, column: 3, scope: !7828)
!7832 = !DILocation(line: 1469, column: 17, scope: !7813)
!7833 = !DILocation(line: 1469, column: 30, scope: !7813)
!7834 = !DILocation(line: 1469, column: 34, scope: !7813)
!7835 = !DILocation(line: 1469, column: 43, scope: !7813)
!7836 = !DILocation(line: 1469, column: 9, scope: !7813)
!7837 = !DILocation(line: 1469, column: 2, scope: !7813)
!7838 = !DILocation(line: 1470, column: 1, scope: !7813)
!7839 = distinct !DISubprogram(name: "polling_interval_store", scope: !3, file: !3, line: 1472, type: !3882, scopeLine: 1475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7840 = !DILocalVariable(name: "dev", arg: 1, scope: !7839, file: !3, line: 1472, type: !3199)
!7841 = !DILocation(line: 1472, column: 54, scope: !7839)
!7842 = !DILocalVariable(name: "attr", arg: 2, scope: !7839, file: !3, line: 1473, type: !3879)
!7843 = !DILocation(line: 1473, column: 36, scope: !7839)
!7844 = !DILocalVariable(name: "buf", arg: 3, scope: !7839, file: !3, line: 1474, type: !225)
!7845 = !DILocation(line: 1474, column: 23, scope: !7839)
!7846 = !DILocalVariable(name: "count", arg: 4, scope: !7839, file: !3, line: 1474, type: !309)
!7847 = !DILocation(line: 1474, column: 35, scope: !7839)
!7848 = !DILocalVariable(name: "df", scope: !7839, file: !3, line: 1476, type: !177)
!7849 = !DILocation(line: 1476, column: 18, scope: !7839)
!7850 = !DILocalVariable(name: "__mptr", scope: !7851, file: !3, line: 1476, type: !176)
!7851 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1476, column: 23)
!7852 = !DILocation(line: 1476, column: 23, scope: !7851)
!7853 = !DILocation(line: 1476, column: 23, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 1476, column: 23)
!7855 = !DILocalVariable(name: "value", scope: !7839, file: !3, line: 1477, type: !7)
!7856 = !DILocation(line: 1477, column: 15, scope: !7839)
!7857 = !DILocalVariable(name: "ret", scope: !7839, file: !3, line: 1478, type: !173)
!7858 = !DILocation(line: 1478, column: 6, scope: !7839)
!7859 = !DILocation(line: 1480, column: 7, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1480, column: 6)
!7861 = !DILocation(line: 1480, column: 11, scope: !7860)
!7862 = !DILocation(line: 1480, column: 6, scope: !7839)
!7863 = !DILocation(line: 1481, column: 3, scope: !7860)
!7864 = !DILocation(line: 1483, column: 15, scope: !7839)
!7865 = !DILocation(line: 1483, column: 8, scope: !7839)
!7866 = !DILocation(line: 1483, column: 6, scope: !7839)
!7867 = !DILocation(line: 1484, column: 6, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1484, column: 6)
!7869 = !DILocation(line: 1484, column: 10, scope: !7868)
!7870 = !DILocation(line: 1484, column: 6, scope: !7839)
!7871 = !DILocation(line: 1485, column: 3, scope: !7868)
!7872 = !DILocation(line: 1487, column: 2, scope: !7839)
!7873 = !DILocation(line: 1487, column: 6, scope: !7839)
!7874 = !DILocation(line: 1487, column: 16, scope: !7839)
!7875 = !DILocation(line: 1487, column: 30, scope: !7839)
!7876 = !DILocation(line: 1487, column: 63, scope: !7839)
!7877 = !DILocation(line: 1488, column: 8, scope: !7839)
!7878 = !DILocation(line: 1488, column: 6, scope: !7839)
!7879 = !DILocation(line: 1490, column: 9, scope: !7839)
!7880 = !DILocation(line: 1490, column: 2, scope: !7839)
!7881 = !DILocation(line: 1491, column: 1, scope: !7839)
!7882 = distinct !DISubprogram(name: "min_freq_show", scope: !3, file: !3, line: 1521, type: !3877, scopeLine: 1523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7883 = !DILocalVariable(name: "dev", arg: 1, scope: !7882, file: !3, line: 1521, type: !3199)
!7884 = !DILocation(line: 1521, column: 45, scope: !7882)
!7885 = !DILocalVariable(name: "attr", arg: 2, scope: !7882, file: !3, line: 1521, type: !3879)
!7886 = !DILocation(line: 1521, column: 75, scope: !7882)
!7887 = !DILocalVariable(name: "buf", arg: 3, scope: !7882, file: !3, line: 1522, type: !263)
!7888 = !DILocation(line: 1522, column: 15, scope: !7882)
!7889 = !DILocalVariable(name: "df", scope: !7882, file: !3, line: 1524, type: !177)
!7890 = !DILocation(line: 1524, column: 18, scope: !7882)
!7891 = !DILocalVariable(name: "__mptr", scope: !7892, file: !3, line: 1524, type: !176)
!7892 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 1524, column: 23)
!7893 = !DILocation(line: 1524, column: 23, scope: !7892)
!7894 = !DILocation(line: 1524, column: 23, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 1524, column: 23)
!7896 = !DILocalVariable(name: "min_freq", scope: !7882, file: !3, line: 1525, type: !165)
!7897 = !DILocation(line: 1525, column: 16, scope: !7882)
!7898 = !DILocalVariable(name: "max_freq", scope: !7882, file: !3, line: 1525, type: !165)
!7899 = !DILocation(line: 1525, column: 26, scope: !7882)
!7900 = !DILocation(line: 1527, column: 14, scope: !7882)
!7901 = !DILocation(line: 1527, column: 18, scope: !7882)
!7902 = !DILocation(line: 1527, column: 2, scope: !7882)
!7903 = !DILocation(line: 1528, column: 17, scope: !7882)
!7904 = !DILocation(line: 1528, column: 2, scope: !7882)
!7905 = !DILocation(line: 1529, column: 16, scope: !7882)
!7906 = !DILocation(line: 1529, column: 20, scope: !7882)
!7907 = !DILocation(line: 1529, column: 2, scope: !7882)
!7908 = !DILocation(line: 1531, column: 17, scope: !7882)
!7909 = !DILocation(line: 1531, column: 31, scope: !7882)
!7910 = !DILocation(line: 1531, column: 9, scope: !7882)
!7911 = !DILocation(line: 1531, column: 2, scope: !7882)
!7912 = distinct !DISubprogram(name: "min_freq_store", scope: !3, file: !3, line: 1494, type: !3882, scopeLine: 1496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7913 = !DILocalVariable(name: "dev", arg: 1, scope: !7912, file: !3, line: 1494, type: !3199)
!7914 = !DILocation(line: 1494, column: 46, scope: !7912)
!7915 = !DILocalVariable(name: "attr", arg: 2, scope: !7912, file: !3, line: 1494, type: !3879)
!7916 = !DILocation(line: 1494, column: 76, scope: !7912)
!7917 = !DILocalVariable(name: "buf", arg: 3, scope: !7912, file: !3, line: 1495, type: !225)
!7918 = !DILocation(line: 1495, column: 22, scope: !7912)
!7919 = !DILocalVariable(name: "count", arg: 4, scope: !7912, file: !3, line: 1495, type: !309)
!7920 = !DILocation(line: 1495, column: 34, scope: !7912)
!7921 = !DILocalVariable(name: "df", scope: !7912, file: !3, line: 1497, type: !177)
!7922 = !DILocation(line: 1497, column: 18, scope: !7912)
!7923 = !DILocalVariable(name: "__mptr", scope: !7924, file: !3, line: 1497, type: !176)
!7924 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 1497, column: 23)
!7925 = !DILocation(line: 1497, column: 23, scope: !7924)
!7926 = !DILocation(line: 1497, column: 23, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7924, file: !3, line: 1497, column: 23)
!7928 = !DILocalVariable(name: "value", scope: !7912, file: !3, line: 1498, type: !165)
!7929 = !DILocation(line: 1498, column: 16, scope: !7912)
!7930 = !DILocalVariable(name: "ret", scope: !7912, file: !3, line: 1499, type: !173)
!7931 = !DILocation(line: 1499, column: 6, scope: !7912)
!7932 = !DILocation(line: 1505, column: 34, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 1505, column: 6)
!7934 = !DILocation(line: 1505, column: 38, scope: !7933)
!7935 = !DILocation(line: 1505, column: 7, scope: !7933)
!7936 = !DILocation(line: 1505, column: 6, scope: !7912)
!7937 = !DILocation(line: 1506, column: 3, scope: !7933)
!7938 = !DILocation(line: 1508, column: 15, scope: !7912)
!7939 = !DILocation(line: 1508, column: 8, scope: !7912)
!7940 = !DILocation(line: 1508, column: 6, scope: !7912)
!7941 = !DILocation(line: 1509, column: 6, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 1509, column: 6)
!7943 = !DILocation(line: 1509, column: 10, scope: !7942)
!7944 = !DILocation(line: 1509, column: 6, scope: !7912)
!7945 = !DILocation(line: 1510, column: 3, scope: !7942)
!7946 = !DILocation(line: 1513, column: 35, scope: !7912)
!7947 = !DILocation(line: 1513, column: 39, scope: !7912)
!7948 = !DILocation(line: 1514, column: 6, scope: !7912)
!7949 = !DILocation(line: 1514, column: 12, scope: !7912)
!7950 = !DILocation(line: 1513, column: 8, scope: !7912)
!7951 = !DILocation(line: 1513, column: 6, scope: !7912)
!7952 = !DILocation(line: 1515, column: 6, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 1515, column: 6)
!7954 = !DILocation(line: 1515, column: 10, scope: !7953)
!7955 = !DILocation(line: 1515, column: 6, scope: !7912)
!7956 = !DILocation(line: 1516, column: 10, scope: !7953)
!7957 = !DILocation(line: 1516, column: 3, scope: !7953)
!7958 = !DILocation(line: 1518, column: 9, scope: !7912)
!7959 = !DILocation(line: 1518, column: 2, scope: !7912)
!7960 = !DILocation(line: 1519, column: 1, scope: !7912)
!7961 = distinct !DISubprogram(name: "max_freq_show", scope: !3, file: !3, line: 1575, type: !3877, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7962 = !DILocalVariable(name: "dev", arg: 1, scope: !7961, file: !3, line: 1575, type: !3199)
!7963 = !DILocation(line: 1575, column: 45, scope: !7961)
!7964 = !DILocalVariable(name: "attr", arg: 2, scope: !7961, file: !3, line: 1575, type: !3879)
!7965 = !DILocation(line: 1575, column: 75, scope: !7961)
!7966 = !DILocalVariable(name: "buf", arg: 3, scope: !7961, file: !3, line: 1576, type: !263)
!7967 = !DILocation(line: 1576, column: 15, scope: !7961)
!7968 = !DILocalVariable(name: "df", scope: !7961, file: !3, line: 1578, type: !177)
!7969 = !DILocation(line: 1578, column: 18, scope: !7961)
!7970 = !DILocalVariable(name: "__mptr", scope: !7971, file: !3, line: 1578, type: !176)
!7971 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 1578, column: 23)
!7972 = !DILocation(line: 1578, column: 23, scope: !7971)
!7973 = !DILocation(line: 1578, column: 23, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 1578, column: 23)
!7975 = !DILocalVariable(name: "min_freq", scope: !7961, file: !3, line: 1579, type: !165)
!7976 = !DILocation(line: 1579, column: 16, scope: !7961)
!7977 = !DILocalVariable(name: "max_freq", scope: !7961, file: !3, line: 1579, type: !165)
!7978 = !DILocation(line: 1579, column: 26, scope: !7961)
!7979 = !DILocation(line: 1581, column: 14, scope: !7961)
!7980 = !DILocation(line: 1581, column: 18, scope: !7961)
!7981 = !DILocation(line: 1581, column: 2, scope: !7961)
!7982 = !DILocation(line: 1582, column: 17, scope: !7961)
!7983 = !DILocation(line: 1582, column: 2, scope: !7961)
!7984 = !DILocation(line: 1583, column: 16, scope: !7961)
!7985 = !DILocation(line: 1583, column: 20, scope: !7961)
!7986 = !DILocation(line: 1583, column: 2, scope: !7961)
!7987 = !DILocation(line: 1585, column: 17, scope: !7961)
!7988 = !DILocation(line: 1585, column: 31, scope: !7961)
!7989 = !DILocation(line: 1585, column: 9, scope: !7961)
!7990 = !DILocation(line: 1585, column: 2, scope: !7961)
!7991 = distinct !DISubprogram(name: "max_freq_store", scope: !3, file: !3, line: 1535, type: !3882, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!7992 = !DILocalVariable(name: "dev", arg: 1, scope: !7991, file: !3, line: 1535, type: !3199)
!7993 = !DILocation(line: 1535, column: 46, scope: !7991)
!7994 = !DILocalVariable(name: "attr", arg: 2, scope: !7991, file: !3, line: 1535, type: !3879)
!7995 = !DILocation(line: 1535, column: 76, scope: !7991)
!7996 = !DILocalVariable(name: "buf", arg: 3, scope: !7991, file: !3, line: 1536, type: !225)
!7997 = !DILocation(line: 1536, column: 22, scope: !7991)
!7998 = !DILocalVariable(name: "count", arg: 4, scope: !7991, file: !3, line: 1536, type: !309)
!7999 = !DILocation(line: 1536, column: 34, scope: !7991)
!8000 = !DILocalVariable(name: "df", scope: !7991, file: !3, line: 1538, type: !177)
!8001 = !DILocation(line: 1538, column: 18, scope: !7991)
!8002 = !DILocalVariable(name: "__mptr", scope: !8003, file: !3, line: 1538, type: !176)
!8003 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 1538, column: 23)
!8004 = !DILocation(line: 1538, column: 23, scope: !8003)
!8005 = !DILocation(line: 1538, column: 23, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 1538, column: 23)
!8007 = !DILocalVariable(name: "value", scope: !7991, file: !3, line: 1539, type: !165)
!8008 = !DILocation(line: 1539, column: 16, scope: !7991)
!8009 = !DILocalVariable(name: "ret", scope: !7991, file: !3, line: 1540, type: !173)
!8010 = !DILocation(line: 1540, column: 6, scope: !7991)
!8011 = !DILocation(line: 1546, column: 34, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 1546, column: 6)
!8013 = !DILocation(line: 1546, column: 38, scope: !8012)
!8014 = !DILocation(line: 1546, column: 7, scope: !8012)
!8015 = !DILocation(line: 1546, column: 6, scope: !7991)
!8016 = !DILocation(line: 1547, column: 3, scope: !8012)
!8017 = !DILocation(line: 1549, column: 15, scope: !7991)
!8018 = !DILocation(line: 1549, column: 8, scope: !7991)
!8019 = !DILocation(line: 1549, column: 6, scope: !7991)
!8020 = !DILocation(line: 1550, column: 6, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 1550, column: 6)
!8022 = !DILocation(line: 1550, column: 10, scope: !8021)
!8023 = !DILocation(line: 1550, column: 6, scope: !7991)
!8024 = !DILocation(line: 1551, column: 3, scope: !8021)
!8025 = !DILocation(line: 1563, column: 6, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 1563, column: 6)
!8027 = !DILocation(line: 1563, column: 6, scope: !7991)
!8028 = !DILocation(line: 1564, column: 11, scope: !8026)
!8029 = !DILocation(line: 1564, column: 9, scope: !8026)
!8030 = !DILocation(line: 1564, column: 3, scope: !8026)
!8031 = !DILocation(line: 1566, column: 9, scope: !8026)
!8032 = !DILocation(line: 1568, column: 35, scope: !7991)
!8033 = !DILocation(line: 1568, column: 39, scope: !7991)
!8034 = !DILocation(line: 1568, column: 58, scope: !7991)
!8035 = !DILocation(line: 1568, column: 8, scope: !7991)
!8036 = !DILocation(line: 1568, column: 6, scope: !7991)
!8037 = !DILocation(line: 1569, column: 6, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 1569, column: 6)
!8039 = !DILocation(line: 1569, column: 10, scope: !8038)
!8040 = !DILocation(line: 1569, column: 6, scope: !7991)
!8041 = !DILocation(line: 1570, column: 10, scope: !8038)
!8042 = !DILocation(line: 1570, column: 3, scope: !8038)
!8043 = !DILocation(line: 1572, column: 9, scope: !7991)
!8044 = !DILocation(line: 1572, column: 2, scope: !7991)
!8045 = !DILocation(line: 1573, column: 1, scope: !7991)
!8046 = distinct !DISubprogram(name: "trans_stat_show", scope: !3, file: !3, line: 1617, type: !3877, scopeLine: 1619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!8047 = !DILocalVariable(name: "dev", arg: 1, scope: !8046, file: !3, line: 1617, type: !3199)
!8048 = !DILocation(line: 1617, column: 47, scope: !8046)
!8049 = !DILocalVariable(name: "attr", arg: 2, scope: !8046, file: !3, line: 1618, type: !3879)
!8050 = !DILocation(line: 1618, column: 36, scope: !8046)
!8051 = !DILocalVariable(name: "buf", arg: 3, scope: !8046, file: !3, line: 1618, type: !263)
!8052 = !DILocation(line: 1618, column: 48, scope: !8046)
!8053 = !DILocalVariable(name: "df", scope: !8046, file: !3, line: 1620, type: !177)
!8054 = !DILocation(line: 1620, column: 18, scope: !8046)
!8055 = !DILocalVariable(name: "__mptr", scope: !8056, file: !3, line: 1620, type: !176)
!8056 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 1620, column: 23)
!8057 = !DILocation(line: 1620, column: 23, scope: !8056)
!8058 = !DILocation(line: 1620, column: 23, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 1620, column: 23)
!8060 = !DILocalVariable(name: "len", scope: !8046, file: !3, line: 1621, type: !294)
!8061 = !DILocation(line: 1621, column: 10, scope: !8046)
!8062 = !DILocalVariable(name: "i", scope: !8046, file: !3, line: 1622, type: !173)
!8063 = !DILocation(line: 1622, column: 6, scope: !8046)
!8064 = !DILocalVariable(name: "j", scope: !8046, file: !3, line: 1622, type: !173)
!8065 = !DILocation(line: 1622, column: 9, scope: !8046)
!8066 = !DILocalVariable(name: "max_state", scope: !8046, file: !3, line: 1623, type: !7)
!8067 = !DILocation(line: 1623, column: 15, scope: !8046)
!8068 = !DILocation(line: 1625, column: 7, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 1625, column: 6)
!8070 = !DILocation(line: 1625, column: 11, scope: !8069)
!8071 = !DILocation(line: 1625, column: 6, scope: !8046)
!8072 = !DILocation(line: 1626, column: 3, scope: !8069)
!8073 = !DILocation(line: 1627, column: 14, scope: !8046)
!8074 = !DILocation(line: 1627, column: 18, scope: !8046)
!8075 = !DILocation(line: 1627, column: 27, scope: !8046)
!8076 = !DILocation(line: 1627, column: 12, scope: !8046)
!8077 = !DILocation(line: 1629, column: 6, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 1629, column: 6)
!8079 = !DILocation(line: 1629, column: 16, scope: !8078)
!8080 = !DILocation(line: 1629, column: 6, scope: !8046)
!8081 = !DILocation(line: 1630, column: 18, scope: !8078)
!8082 = !DILocation(line: 1630, column: 10, scope: !8078)
!8083 = !DILocation(line: 1630, column: 3, scope: !8078)
!8084 = !DILocation(line: 1632, column: 14, scope: !8046)
!8085 = !DILocation(line: 1632, column: 18, scope: !8046)
!8086 = !DILocation(line: 1632, column: 2, scope: !8046)
!8087 = !DILocation(line: 1633, column: 7, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 1633, column: 6)
!8089 = !DILocation(line: 1633, column: 11, scope: !8088)
!8090 = !DILocation(line: 1633, column: 24, scope: !8088)
!8091 = !DILocation(line: 1634, column: 26, scope: !8088)
!8092 = !DILocation(line: 1634, column: 30, scope: !8088)
!8093 = !DILocation(line: 1634, column: 34, scope: !8088)
!8094 = !DILocation(line: 1634, column: 4, scope: !8088)
!8095 = !DILocation(line: 1633, column: 6, scope: !8046)
!8096 = !DILocation(line: 1635, column: 17, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 1634, column: 50)
!8098 = !DILocation(line: 1635, column: 21, scope: !8097)
!8099 = !DILocation(line: 1635, column: 3, scope: !8097)
!8100 = !DILocation(line: 1636, column: 3, scope: !8097)
!8101 = !DILocation(line: 1638, column: 16, scope: !8046)
!8102 = !DILocation(line: 1638, column: 20, scope: !8046)
!8103 = !DILocation(line: 1638, column: 2, scope: !8046)
!8104 = !DILocation(line: 1640, column: 16, scope: !8046)
!8105 = !DILocation(line: 1640, column: 8, scope: !8046)
!8106 = !DILocation(line: 1640, column: 6, scope: !8046)
!8107 = !DILocation(line: 1641, column: 17, scope: !8046)
!8108 = !DILocation(line: 1641, column: 23, scope: !8046)
!8109 = !DILocation(line: 1641, column: 21, scope: !8046)
!8110 = !DILocation(line: 1641, column: 9, scope: !8046)
!8111 = !DILocation(line: 1641, column: 6, scope: !8046)
!8112 = !DILocation(line: 1642, column: 9, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 1642, column: 2)
!8114 = !DILocation(line: 1642, column: 7, scope: !8113)
!8115 = !DILocation(line: 1642, column: 14, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8113, file: !3, line: 1642, column: 2)
!8117 = !DILocation(line: 1642, column: 18, scope: !8116)
!8118 = !DILocation(line: 1642, column: 16, scope: !8116)
!8119 = !DILocation(line: 1642, column: 2, scope: !8113)
!8120 = !DILocation(line: 1643, column: 18, scope: !8116)
!8121 = !DILocation(line: 1643, column: 24, scope: !8116)
!8122 = !DILocation(line: 1643, column: 22, scope: !8116)
!8123 = !DILocation(line: 1644, column: 5, scope: !8116)
!8124 = !DILocation(line: 1644, column: 9, scope: !8116)
!8125 = !DILocation(line: 1644, column: 18, scope: !8116)
!8126 = !DILocation(line: 1644, column: 29, scope: !8116)
!8127 = !DILocation(line: 1643, column: 10, scope: !8116)
!8128 = !DILocation(line: 1643, column: 7, scope: !8116)
!8129 = !DILocation(line: 1643, column: 3, scope: !8116)
!8130 = !DILocation(line: 1642, column: 30, scope: !8116)
!8131 = !DILocation(line: 1642, column: 2, scope: !8116)
!8132 = distinct !{!8132, !8119, !8133}
!8133 = !DILocation(line: 1644, column: 31, scope: !8113)
!8134 = !DILocation(line: 1646, column: 17, scope: !8046)
!8135 = !DILocation(line: 1646, column: 23, scope: !8046)
!8136 = !DILocation(line: 1646, column: 21, scope: !8046)
!8137 = !DILocation(line: 1646, column: 9, scope: !8046)
!8138 = !DILocation(line: 1646, column: 6, scope: !8046)
!8139 = !DILocation(line: 1648, column: 9, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 1648, column: 2)
!8141 = !DILocation(line: 1648, column: 7, scope: !8140)
!8142 = !DILocation(line: 1648, column: 14, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 1648, column: 2)
!8144 = !DILocation(line: 1648, column: 18, scope: !8143)
!8145 = !DILocation(line: 1648, column: 16, scope: !8143)
!8146 = !DILocation(line: 1648, column: 2, scope: !8140)
!8147 = !DILocation(line: 1649, column: 7, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 1649, column: 7)
!8149 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 1648, column: 34)
!8150 = !DILocation(line: 1649, column: 11, scope: !8148)
!8151 = !DILocation(line: 1649, column: 20, scope: !8148)
!8152 = !DILocation(line: 1649, column: 31, scope: !8148)
!8153 = !DILocation(line: 1650, column: 9, scope: !8148)
!8154 = !DILocation(line: 1650, column: 13, scope: !8148)
!8155 = !DILocation(line: 1650, column: 6, scope: !8148)
!8156 = !DILocation(line: 1649, column: 7, scope: !8149)
!8157 = !DILocation(line: 1651, column: 19, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 1650, column: 28)
!8159 = !DILocation(line: 1651, column: 25, scope: !8158)
!8160 = !DILocation(line: 1651, column: 23, scope: !8158)
!8161 = !DILocation(line: 1651, column: 11, scope: !8158)
!8162 = !DILocation(line: 1651, column: 8, scope: !8158)
!8163 = !DILocation(line: 1652, column: 3, scope: !8158)
!8164 = !DILocation(line: 1653, column: 19, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 1652, column: 10)
!8166 = !DILocation(line: 1653, column: 25, scope: !8165)
!8167 = !DILocation(line: 1653, column: 23, scope: !8165)
!8168 = !DILocation(line: 1653, column: 11, scope: !8165)
!8169 = !DILocation(line: 1653, column: 8, scope: !8165)
!8170 = !DILocation(line: 1655, column: 18, scope: !8149)
!8171 = !DILocation(line: 1655, column: 24, scope: !8149)
!8172 = !DILocation(line: 1655, column: 22, scope: !8149)
!8173 = !DILocation(line: 1656, column: 5, scope: !8149)
!8174 = !DILocation(line: 1656, column: 9, scope: !8149)
!8175 = !DILocation(line: 1656, column: 18, scope: !8149)
!8176 = !DILocation(line: 1656, column: 29, scope: !8149)
!8177 = !DILocation(line: 1655, column: 10, scope: !8149)
!8178 = !DILocation(line: 1655, column: 7, scope: !8149)
!8179 = !DILocation(line: 1657, column: 10, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 1657, column: 3)
!8181 = !DILocation(line: 1657, column: 8, scope: !8180)
!8182 = !DILocation(line: 1657, column: 15, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 1657, column: 3)
!8184 = !DILocation(line: 1657, column: 19, scope: !8183)
!8185 = !DILocation(line: 1657, column: 17, scope: !8183)
!8186 = !DILocation(line: 1657, column: 3, scope: !8180)
!8187 = !DILocation(line: 1658, column: 19, scope: !8183)
!8188 = !DILocation(line: 1658, column: 25, scope: !8183)
!8189 = !DILocation(line: 1658, column: 23, scope: !8183)
!8190 = !DILocation(line: 1659, column: 5, scope: !8183)
!8191 = !DILocation(line: 1659, column: 9, scope: !8183)
!8192 = !DILocation(line: 1659, column: 15, scope: !8183)
!8193 = !DILocation(line: 1659, column: 28, scope: !8183)
!8194 = !DILocation(line: 1659, column: 32, scope: !8183)
!8195 = !DILocation(line: 1659, column: 30, scope: !8183)
!8196 = !DILocation(line: 1659, column: 45, scope: !8183)
!8197 = !DILocation(line: 1659, column: 43, scope: !8183)
!8198 = !DILocation(line: 1658, column: 11, scope: !8183)
!8199 = !DILocation(line: 1658, column: 8, scope: !8183)
!8200 = !DILocation(line: 1658, column: 4, scope: !8183)
!8201 = !DILocation(line: 1657, column: 31, scope: !8183)
!8202 = !DILocation(line: 1657, column: 3, scope: !8183)
!8203 = distinct !{!8203, !8186, !8204}
!8204 = !DILocation(line: 1659, column: 47, scope: !8180)
!8205 = !DILocation(line: 1661, column: 18, scope: !8149)
!8206 = !DILocation(line: 1661, column: 24, scope: !8149)
!8207 = !DILocation(line: 1661, column: 22, scope: !8149)
!8208 = !DILocation(line: 1662, column: 23, scope: !8149)
!8209 = !DILocation(line: 1662, column: 27, scope: !8149)
!8210 = !DILocation(line: 1662, column: 33, scope: !8149)
!8211 = !DILocation(line: 1662, column: 47, scope: !8149)
!8212 = !DILocation(line: 1662, column: 4, scope: !8149)
!8213 = !DILocation(line: 1661, column: 10, scope: !8149)
!8214 = !DILocation(line: 1661, column: 7, scope: !8149)
!8215 = !DILocation(line: 1663, column: 2, scope: !8149)
!8216 = !DILocation(line: 1648, column: 30, scope: !8143)
!8217 = !DILocation(line: 1648, column: 2, scope: !8143)
!8218 = distinct !{!8218, !8146, !8219}
!8219 = !DILocation(line: 1663, column: 2, scope: !8140)
!8220 = !DILocation(line: 1665, column: 17, scope: !8046)
!8221 = !DILocation(line: 1665, column: 23, scope: !8046)
!8222 = !DILocation(line: 1665, column: 21, scope: !8046)
!8223 = !DILocation(line: 1666, column: 6, scope: !8046)
!8224 = !DILocation(line: 1666, column: 10, scope: !8046)
!8225 = !DILocation(line: 1666, column: 16, scope: !8046)
!8226 = !DILocation(line: 1665, column: 9, scope: !8046)
!8227 = !DILocation(line: 1665, column: 6, scope: !8046)
!8228 = !DILocation(line: 1667, column: 9, scope: !8046)
!8229 = !DILocation(line: 1667, column: 2, scope: !8046)
!8230 = !DILocation(line: 1668, column: 1, scope: !8046)
!8231 = distinct !DISubprogram(name: "trans_stat_store", scope: !3, file: !3, line: 1670, type: !3882, scopeLine: 1673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!8232 = !DILocalVariable(name: "dev", arg: 1, scope: !8231, file: !3, line: 1670, type: !3199)
!8233 = !DILocation(line: 1670, column: 48, scope: !8231)
!8234 = !DILocalVariable(name: "attr", arg: 2, scope: !8231, file: !3, line: 1671, type: !3879)
!8235 = !DILocation(line: 1671, column: 30, scope: !8231)
!8236 = !DILocalVariable(name: "buf", arg: 3, scope: !8231, file: !3, line: 1672, type: !225)
!8237 = !DILocation(line: 1672, column: 17, scope: !8231)
!8238 = !DILocalVariable(name: "count", arg: 4, scope: !8231, file: !3, line: 1672, type: !309)
!8239 = !DILocation(line: 1672, column: 29, scope: !8231)
!8240 = !DILocalVariable(name: "df", scope: !8231, file: !3, line: 1674, type: !177)
!8241 = !DILocation(line: 1674, column: 18, scope: !8231)
!8242 = !DILocalVariable(name: "__mptr", scope: !8243, file: !3, line: 1674, type: !176)
!8243 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 1674, column: 23)
!8244 = !DILocation(line: 1674, column: 23, scope: !8243)
!8245 = !DILocation(line: 1674, column: 23, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 1674, column: 23)
!8247 = !DILocalVariable(name: "err", scope: !8231, file: !3, line: 1675, type: !173)
!8248 = !DILocation(line: 1675, column: 6, scope: !8231)
!8249 = !DILocalVariable(name: "value", scope: !8231, file: !3, line: 1675, type: !173)
!8250 = !DILocation(line: 1675, column: 11, scope: !8231)
!8251 = !DILocation(line: 1677, column: 7, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 1677, column: 6)
!8253 = !DILocation(line: 1677, column: 11, scope: !8252)
!8254 = !DILocation(line: 1677, column: 6, scope: !8231)
!8255 = !DILocation(line: 1678, column: 3, scope: !8252)
!8256 = !DILocation(line: 1680, column: 6, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 1680, column: 6)
!8258 = !DILocation(line: 1680, column: 10, scope: !8257)
!8259 = !DILocation(line: 1680, column: 19, scope: !8257)
!8260 = !DILocation(line: 1680, column: 29, scope: !8257)
!8261 = !DILocation(line: 1680, column: 6, scope: !8231)
!8262 = !DILocation(line: 1681, column: 10, scope: !8257)
!8263 = !DILocation(line: 1681, column: 3, scope: !8257)
!8264 = !DILocation(line: 1683, column: 18, scope: !8231)
!8265 = !DILocation(line: 1683, column: 8, scope: !8231)
!8266 = !DILocation(line: 1683, column: 6, scope: !8231)
!8267 = !DILocation(line: 1684, column: 6, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 1684, column: 6)
!8269 = !DILocation(line: 1684, column: 10, scope: !8268)
!8270 = !DILocation(line: 1684, column: 13, scope: !8268)
!8271 = !DILocation(line: 1684, column: 19, scope: !8268)
!8272 = !DILocation(line: 1684, column: 6, scope: !8231)
!8273 = !DILocation(line: 1685, column: 3, scope: !8268)
!8274 = !DILocation(line: 1687, column: 14, scope: !8231)
!8275 = !DILocation(line: 1687, column: 18, scope: !8231)
!8276 = !DILocation(line: 1687, column: 2, scope: !8231)
!8277 = !DILocation(line: 1688, column: 9, scope: !8231)
!8278 = !DILocation(line: 1688, column: 13, scope: !8231)
!8279 = !DILocation(line: 1688, column: 19, scope: !8231)
!8280 = !DILocation(line: 1688, column: 2, scope: !8231)
!8281 = !DILocation(line: 1688, column: 38, scope: !8231)
!8282 = !DILocation(line: 1688, column: 42, scope: !8231)
!8283 = !DILocation(line: 1688, column: 51, scope: !8231)
!8284 = !DILocation(line: 1688, column: 61, scope: !8231)
!8285 = !DILocation(line: 1690, column: 9, scope: !8231)
!8286 = !DILocation(line: 1690, column: 13, scope: !8231)
!8287 = !DILocation(line: 1690, column: 19, scope: !8231)
!8288 = !DILocation(line: 1690, column: 2, scope: !8231)
!8289 = !DILocation(line: 1691, column: 6, scope: !8231)
!8290 = !DILocation(line: 1691, column: 10, scope: !8231)
!8291 = !DILocation(line: 1691, column: 19, scope: !8231)
!8292 = !DILocation(line: 1692, column: 6, scope: !8231)
!8293 = !DILocation(line: 1692, column: 10, scope: !8231)
!8294 = !DILocation(line: 1692, column: 19, scope: !8231)
!8295 = !DILocation(line: 1690, column: 35, scope: !8231)
!8296 = !DILocation(line: 1693, column: 2, scope: !8231)
!8297 = !DILocation(line: 1693, column: 6, scope: !8231)
!8298 = !DILocation(line: 1693, column: 12, scope: !8231)
!8299 = !DILocation(line: 1693, column: 24, scope: !8231)
!8300 = !DILocation(line: 1694, column: 26, scope: !8231)
!8301 = !DILocation(line: 1694, column: 2, scope: !8231)
!8302 = !DILocation(line: 1694, column: 6, scope: !8231)
!8303 = !DILocation(line: 1694, column: 12, scope: !8231)
!8304 = !DILocation(line: 1694, column: 24, scope: !8231)
!8305 = !DILocation(line: 1695, column: 16, scope: !8231)
!8306 = !DILocation(line: 1695, column: 20, scope: !8231)
!8307 = !DILocation(line: 1695, column: 2, scope: !8231)
!8308 = !DILocation(line: 1697, column: 9, scope: !8231)
!8309 = !DILocation(line: 1697, column: 2, scope: !8231)
!8310 = !DILocation(line: 1698, column: 1, scope: !8231)
!8311 = distinct !DISubprogram(name: "timer_show", scope: !3, file: !3, line: 1701, type: !3877, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!8312 = !DILocalVariable(name: "dev", arg: 1, scope: !8311, file: !3, line: 1701, type: !3199)
!8313 = !DILocation(line: 1701, column: 42, scope: !8311)
!8314 = !DILocalVariable(name: "attr", arg: 2, scope: !8311, file: !3, line: 1702, type: !3879)
!8315 = !DILocation(line: 1702, column: 34, scope: !8311)
!8316 = !DILocalVariable(name: "buf", arg: 3, scope: !8311, file: !3, line: 1702, type: !263)
!8317 = !DILocation(line: 1702, column: 46, scope: !8311)
!8318 = !DILocalVariable(name: "df", scope: !8311, file: !3, line: 1704, type: !177)
!8319 = !DILocation(line: 1704, column: 18, scope: !8311)
!8320 = !DILocalVariable(name: "__mptr", scope: !8321, file: !3, line: 1704, type: !176)
!8321 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 1704, column: 23)
!8322 = !DILocation(line: 1704, column: 23, scope: !8321)
!8323 = !DILocation(line: 1704, column: 23, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 1704, column: 23)
!8325 = !DILocation(line: 1706, column: 7, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 1706, column: 6)
!8327 = !DILocation(line: 1706, column: 11, scope: !8326)
!8328 = !DILocation(line: 1706, column: 6, scope: !8311)
!8329 = !DILocation(line: 1707, column: 3, scope: !8326)
!8330 = !DILocation(line: 1709, column: 17, scope: !8311)
!8331 = !DILocation(line: 1709, column: 41, scope: !8311)
!8332 = !DILocation(line: 1709, column: 45, scope: !8311)
!8333 = !DILocation(line: 1709, column: 54, scope: !8311)
!8334 = !DILocation(line: 1709, column: 30, scope: !8311)
!8335 = !DILocation(line: 1709, column: 9, scope: !8311)
!8336 = !DILocation(line: 1709, column: 2, scope: !8311)
!8337 = !DILocation(line: 1710, column: 1, scope: !8311)
!8338 = distinct !DISubprogram(name: "timer_store", scope: !3, file: !3, line: 1712, type: !3882, scopeLine: 1714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!8339 = !DILocalVariable(name: "dev", arg: 1, scope: !8338, file: !3, line: 1712, type: !3199)
!8340 = !DILocation(line: 1712, column: 43, scope: !8338)
!8341 = !DILocalVariable(name: "attr", arg: 2, scope: !8338, file: !3, line: 1712, type: !3879)
!8342 = !DILocation(line: 1712, column: 73, scope: !8338)
!8343 = !DILocalVariable(name: "buf", arg: 3, scope: !8338, file: !3, line: 1713, type: !225)
!8344 = !DILocation(line: 1713, column: 22, scope: !8338)
!8345 = !DILocalVariable(name: "count", arg: 4, scope: !8338, file: !3, line: 1713, type: !309)
!8346 = !DILocation(line: 1713, column: 34, scope: !8338)
!8347 = !DILocalVariable(name: "df", scope: !8338, file: !3, line: 1715, type: !177)
!8348 = !DILocation(line: 1715, column: 18, scope: !8338)
!8349 = !DILocalVariable(name: "__mptr", scope: !8350, file: !3, line: 1715, type: !176)
!8350 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 1715, column: 23)
!8351 = !DILocation(line: 1715, column: 23, scope: !8350)
!8352 = !DILocation(line: 1715, column: 23, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8350, file: !3, line: 1715, column: 23)
!8354 = !DILocalVariable(name: "str_timer", scope: !8338, file: !3, line: 1716, type: !7477)
!8355 = !DILocation(line: 1716, column: 7, scope: !8338)
!8356 = !DILocalVariable(name: "timer", scope: !8338, file: !3, line: 1717, type: !173)
!8357 = !DILocation(line: 1717, column: 6, scope: !8338)
!8358 = !DILocalVariable(name: "ret", scope: !8338, file: !3, line: 1718, type: !173)
!8359 = !DILocation(line: 1718, column: 6, scope: !8338)
!8360 = !DILocalVariable(name: "i", scope: !8338, file: !3, line: 1718, type: !173)
!8361 = !DILocation(line: 1718, column: 15, scope: !8338)
!8362 = !DILocation(line: 1720, column: 7, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 1720, column: 6)
!8364 = !DILocation(line: 1720, column: 11, scope: !8363)
!8365 = !DILocation(line: 1720, column: 20, scope: !8363)
!8366 = !DILocation(line: 1720, column: 24, scope: !8363)
!8367 = !DILocation(line: 1720, column: 28, scope: !8363)
!8368 = !DILocation(line: 1720, column: 6, scope: !8338)
!8369 = !DILocation(line: 1721, column: 3, scope: !8363)
!8370 = !DILocation(line: 1723, column: 15, scope: !8338)
!8371 = !DILocation(line: 1723, column: 28, scope: !8338)
!8372 = !DILocation(line: 1723, column: 8, scope: !8338)
!8373 = !DILocation(line: 1723, column: 6, scope: !8338)
!8374 = !DILocation(line: 1724, column: 6, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 1724, column: 6)
!8376 = !DILocation(line: 1724, column: 10, scope: !8375)
!8377 = !DILocation(line: 1724, column: 6, scope: !8338)
!8378 = !DILocation(line: 1725, column: 3, scope: !8375)
!8379 = !DILocation(line: 1727, column: 9, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 1727, column: 2)
!8381 = !DILocation(line: 1727, column: 7, scope: !8380)
!8382 = !DILocation(line: 1727, column: 14, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 1727, column: 2)
!8384 = !DILocation(line: 1727, column: 16, scope: !8383)
!8385 = !DILocation(line: 1727, column: 2, scope: !8380)
!8386 = !DILocation(line: 1728, column: 27, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 1728, column: 7)
!8388 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 1727, column: 42)
!8389 = !DILocation(line: 1728, column: 16, scope: !8387)
!8390 = !DILocation(line: 1728, column: 31, scope: !8387)
!8391 = !DILocation(line: 1728, column: 8, scope: !8387)
!8392 = !DILocation(line: 1728, column: 7, scope: !8388)
!8393 = !DILocation(line: 1729, column: 12, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 1728, column: 61)
!8395 = !DILocation(line: 1729, column: 10, scope: !8394)
!8396 = !DILocation(line: 1730, column: 4, scope: !8394)
!8397 = !DILocation(line: 1732, column: 2, scope: !8388)
!8398 = !DILocation(line: 1727, column: 38, scope: !8383)
!8399 = !DILocation(line: 1727, column: 2, scope: !8383)
!8400 = distinct !{!8400, !8385, !8401}
!8401 = !DILocation(line: 1732, column: 2, scope: !8380)
!8402 = !DILocation(line: 1734, column: 6, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 1734, column: 6)
!8404 = !DILocation(line: 1734, column: 12, scope: !8403)
!8405 = !DILocation(line: 1734, column: 6, scope: !8338)
!8406 = !DILocation(line: 1735, column: 7, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 1734, column: 17)
!8408 = !DILocation(line: 1736, column: 3, scope: !8407)
!8409 = !DILocation(line: 1739, column: 6, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 1739, column: 6)
!8411 = !DILocation(line: 1739, column: 10, scope: !8410)
!8412 = !DILocation(line: 1739, column: 19, scope: !8410)
!8413 = !DILocation(line: 1739, column: 28, scope: !8410)
!8414 = !DILocation(line: 1739, column: 25, scope: !8410)
!8415 = !DILocation(line: 1739, column: 6, scope: !8338)
!8416 = !DILocation(line: 1740, column: 7, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 1739, column: 35)
!8418 = !DILocation(line: 1741, column: 3, scope: !8417)
!8419 = !DILocation(line: 1744, column: 14, scope: !8338)
!8420 = !DILocation(line: 1744, column: 18, scope: !8338)
!8421 = !DILocation(line: 1744, column: 2, scope: !8338)
!8422 = !DILocation(line: 1745, column: 23, scope: !8338)
!8423 = !DILocation(line: 1745, column: 2, scope: !8338)
!8424 = !DILocation(line: 1745, column: 6, scope: !8338)
!8425 = !DILocation(line: 1745, column: 15, scope: !8338)
!8426 = !DILocation(line: 1745, column: 21, scope: !8338)
!8427 = !DILocation(line: 1746, column: 16, scope: !8338)
!8428 = !DILocation(line: 1746, column: 20, scope: !8338)
!8429 = !DILocation(line: 1746, column: 2, scope: !8338)
!8430 = !DILocation(line: 1748, column: 8, scope: !8338)
!8431 = !DILocation(line: 1748, column: 12, scope: !8338)
!8432 = !DILocation(line: 1748, column: 22, scope: !8338)
!8433 = !DILocation(line: 1748, column: 36, scope: !8338)
!8434 = !DILocation(line: 1748, column: 6, scope: !8338)
!8435 = !DILocation(line: 1749, column: 6, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 1749, column: 6)
!8437 = !DILocation(line: 1749, column: 6, scope: !8338)
!8438 = !DILocation(line: 1750, column: 3, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 1749, column: 11)
!8440 = !DILocation(line: 1752, column: 3, scope: !8439)
!8441 = !DILocation(line: 1755, column: 8, scope: !8338)
!8442 = !DILocation(line: 1755, column: 12, scope: !8338)
!8443 = !DILocation(line: 1755, column: 22, scope: !8338)
!8444 = !DILocation(line: 1755, column: 36, scope: !8338)
!8445 = !DILocation(line: 1755, column: 6, scope: !8338)
!8446 = !DILocation(line: 1756, column: 6, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 1756, column: 6)
!8448 = !DILocation(line: 1756, column: 6, scope: !8338)
!8449 = !DILocation(line: 1757, column: 3, scope: !8447)
!8450 = !DILabel(scope: !8338, name: "out", file: !3, line: 1759)
!8451 = !DILocation(line: 1759, column: 1, scope: !8338)
!8452 = !DILocation(line: 1760, column: 9, scope: !8338)
!8453 = !DILocation(line: 1760, column: 15, scope: !8338)
!8454 = !DILocation(line: 1760, column: 21, scope: !8338)
!8455 = !DILocation(line: 1760, column: 2, scope: !8338)
!8456 = !DILocation(line: 1761, column: 1, scope: !8338)
!8457 = distinct !DISubprogram(name: "devfreq_summary_open", scope: !3, file: !3, line: 1855, type: !2756, scopeLine: 1855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!8458 = !DILocalVariable(name: "inode", arg: 1, scope: !8457, file: !3, line: 1855, type: !412)
!8459 = !DILocation(line: 1855, column: 1, scope: !8457)
!8460 = !DILocalVariable(name: "file", arg: 2, scope: !8457, file: !3, line: 1855, type: !339)
!8461 = distinct !DISubprogram(name: "devfreq_summary_show", scope: !3, file: !3, line: 1790, type: !726, scopeLine: 1791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !215)
!8462 = !DILocalVariable(name: "s", arg: 1, scope: !8461, file: !3, line: 1790, type: !694)
!8463 = !DILocation(line: 1790, column: 50, scope: !8461)
!8464 = !DILocalVariable(name: "data", arg: 2, scope: !8461, file: !3, line: 1790, type: !176)
!8465 = !DILocation(line: 1790, column: 59, scope: !8461)
!8466 = !DILocalVariable(name: "devfreq", scope: !8461, file: !3, line: 1792, type: !177)
!8467 = !DILocation(line: 1792, column: 18, scope: !8461)
!8468 = !DILocalVariable(name: "p_devfreq", scope: !8461, file: !3, line: 1793, type: !177)
!8469 = !DILocation(line: 1793, column: 18, scope: !8461)
!8470 = !DILocalVariable(name: "cur_freq", scope: !8461, file: !3, line: 1794, type: !165)
!8471 = !DILocation(line: 1794, column: 16, scope: !8461)
!8472 = !DILocalVariable(name: "min_freq", scope: !8461, file: !3, line: 1794, type: !165)
!8473 = !DILocation(line: 1794, column: 26, scope: !8461)
!8474 = !DILocalVariable(name: "max_freq", scope: !8461, file: !3, line: 1794, type: !165)
!8475 = !DILocation(line: 1794, column: 36, scope: !8461)
!8476 = !DILocalVariable(name: "polling_ms", scope: !8461, file: !3, line: 1795, type: !7)
!8477 = !DILocation(line: 1795, column: 15, scope: !8461)
!8478 = !DILocalVariable(name: "timer", scope: !8461, file: !3, line: 1796, type: !7)
!8479 = !DILocation(line: 1796, column: 15, scope: !8461)
!8480 = !DILocation(line: 1798, column: 13, scope: !8461)
!8481 = !DILocation(line: 1798, column: 2, scope: !8461)
!8482 = !DILocation(line: 1807, column: 13, scope: !8461)
!8483 = !DILocation(line: 1807, column: 2, scope: !8461)
!8484 = !DILocation(line: 1817, column: 2, scope: !8461)
!8485 = !DILocalVariable(name: "__mptr", scope: !8486, file: !3, line: 1819, type: !176)
!8486 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 1819, column: 2)
!8487 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 1819, column: 2)
!8488 = !DILocation(line: 1819, column: 2, scope: !8486)
!8489 = !DILocation(line: 1819, column: 2, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8486, file: !3, line: 1819, column: 2)
!8491 = !DILocation(line: 1819, column: 2, scope: !8487)
!8492 = !DILocation(line: 1819, column: 2, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 1819, column: 2)
!8494 = !DILocation(line: 1832, column: 15, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8493, file: !3, line: 1819, column: 60)
!8496 = !DILocation(line: 1832, column: 24, scope: !8495)
!8497 = !DILocation(line: 1832, column: 3, scope: !8495)
!8498 = !DILocation(line: 1833, column: 14, scope: !8495)
!8499 = !DILocation(line: 1833, column: 23, scope: !8495)
!8500 = !DILocation(line: 1833, column: 12, scope: !8495)
!8501 = !DILocation(line: 1834, column: 18, scope: !8495)
!8502 = !DILocation(line: 1834, column: 3, scope: !8495)
!8503 = !DILocation(line: 1835, column: 16, scope: !8495)
!8504 = !DILocation(line: 1835, column: 25, scope: !8495)
!8505 = !DILocation(line: 1835, column: 34, scope: !8495)
!8506 = !DILocation(line: 1835, column: 14, scope: !8495)
!8507 = !DILocation(line: 1836, column: 11, scope: !8495)
!8508 = !DILocation(line: 1836, column: 20, scope: !8495)
!8509 = !DILocation(line: 1836, column: 29, scope: !8495)
!8510 = !DILocation(line: 1836, column: 9, scope: !8495)
!8511 = !DILocation(line: 1837, column: 17, scope: !8495)
!8512 = !DILocation(line: 1837, column: 26, scope: !8495)
!8513 = !DILocation(line: 1837, column: 3, scope: !8495)
!8514 = !DILocation(line: 1839, column: 14, scope: !8495)
!8515 = !DILocation(line: 1841, column: 14, scope: !8495)
!8516 = !DILocation(line: 1841, column: 23, scope: !8495)
!8517 = !DILocation(line: 1841, column: 4, scope: !8495)
!8518 = !DILocation(line: 1842, column: 4, scope: !8495)
!8519 = !DILocation(line: 1842, column: 26, scope: !8495)
!8520 = !DILocation(line: 1842, column: 37, scope: !8495)
!8521 = !DILocation(line: 1842, column: 16, scope: !8495)
!8522 = !DILocation(line: 1843, column: 4, scope: !8495)
!8523 = !DILocation(line: 1843, column: 13, scope: !8495)
!8524 = !DILocation(line: 1844, column: 4, scope: !8495)
!8525 = !DILocation(line: 1844, column: 28, scope: !8495)
!8526 = !DILocation(line: 1844, column: 17, scope: !8495)
!8527 = !DILocation(line: 1845, column: 4, scope: !8495)
!8528 = !DILocation(line: 1846, column: 4, scope: !8495)
!8529 = !DILocation(line: 1847, column: 4, scope: !8495)
!8530 = !DILocation(line: 1848, column: 4, scope: !8495)
!8531 = !DILocation(line: 1839, column: 3, scope: !8495)
!8532 = !DILocation(line: 1849, column: 2, scope: !8495)
!8533 = !DILocalVariable(name: "__mptr", scope: !8534, file: !3, line: 1819, type: !176)
!8534 = distinct !DILexicalBlock(scope: !8493, file: !3, line: 1819, column: 2)
!8535 = !DILocation(line: 1819, column: 2, scope: !8534)
!8536 = !DILocation(line: 1819, column: 2, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 1819, column: 2)
!8538 = distinct !{!8538, !8491, !8539}
!8539 = !DILocation(line: 1849, column: 2, scope: !8487)
!8540 = !DILocation(line: 1851, column: 2, scope: !8461)
!8541 = !DILocation(line: 1853, column: 2, scope: !8461)
