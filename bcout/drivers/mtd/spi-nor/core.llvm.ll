; ModuleID = '../bcout/drivers/mtd/spi-nor/core.llvm.bc'
source_filename = "drivers/mtd/spi-nor/core.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_spi_nor_driver_init6:\09\09\09"
module asm ".long\09spi_nor_driver_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.lock_class_key = type {}
%struct.spi_mem_driver = type { %struct.spi_driver, i32 (%struct.spi_mem*)*, i32 (%struct.spi_mem*)*, void (%struct.spi_mem*)* }
%struct.spi_driver = type { %struct.spi_device_id*, i32 (%struct.spi_device*)*, i32 (%struct.spi_device*)*, void (%struct.spi_device*)*, %struct.device_driver }
%struct.spi_device_id = type { [32 x i8], i64 }
%struct.spi_device = type { %struct.device, %struct.spi_controller*, %struct.spi_controller*, i32, i8, i8, i8, i32, i32, i8*, i8*, [32 x i8], i8*, i32, %struct.gpio_desc*, %struct.spi_delay, %struct.spi_statistics }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.67, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.67 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.65, %struct.list_head, %struct.list_head, %union.anon.66 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.63 }
%union.anon.63 = type { %struct.anon.64 }
%struct.anon.64 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.55, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.55 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.56, i32 }
%union.anon.56 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type { i8, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, %struct.mtd_ooblayout_ops*, %struct.mtd_pairing_scheme*, i32, i32, i32, %struct.mtd_erase_region_info*, i32 (%struct.mtd_info*, %struct.erase_info*)*, i32 (%struct.mtd_info*, i64, i64, i64*, i8**, i64*)*, i32 (%struct.mtd_info*, i64, i64)*, i32 (%struct.mtd_info*, i64, i64, i64*, i8*)*, i32 (%struct.mtd_info*, i64, i64, i64*, i8*)*, i32 (%struct.mtd_info*, i64, i64, i64*, i8*)*, i32 (%struct.mtd_info*, i64, %struct.mtd_oob_ops*)*, i32 (%struct.mtd_info*, i64, %struct.mtd_oob_ops*)*, i32 (%struct.mtd_info*, i64, i64*, %struct.otp_info*)*, i32 (%struct.mtd_info*, i64, i64, i64*, i8*)*, i32 (%struct.mtd_info*, i64, i64*, %struct.otp_info*)*, i32 (%struct.mtd_info*, i64, i64, i64*, i8*)*, i32 (%struct.mtd_info*, i64, i64, i64*, i8*)*, i32 (%struct.mtd_info*, i64, i64)*, i32 (%struct.mtd_info*, %struct.kvec*, i64, i64, i64*)*, void (%struct.mtd_info*)*, i32 (%struct.mtd_info*, i64, i64)*, i32 (%struct.mtd_info*, i64, i64)*, i32 (%struct.mtd_info*, i64, i64)*, i32 (%struct.mtd_info*, i64)*, i32 (%struct.mtd_info*, i64)*, i32 (%struct.mtd_info*, i64)*, i32 (%struct.mtd_info*, i64, i64)*, i32 (%struct.mtd_info*)*, void (%struct.mtd_info*)*, void (%struct.mtd_info*)*, i32 (%struct.mtd_info*)*, void (%struct.mtd_info*)*, i8, %struct.notifier_block, %struct.mtd_ecc_stats, i32, i8*, %struct.module*, %struct.device, i32, %struct.mtd_debug_info, %struct.nvmem_device*, %struct.mtd_info*, %struct.list_head, %union.anon.68 }
%struct.mtd_ooblayout_ops = type { i32 (%struct.mtd_info*, i32, %struct.mtd_oob_region*)*, i32 (%struct.mtd_info*, i32, %struct.mtd_oob_region*)* }
%struct.mtd_oob_region = type { i32, i32 }
%struct.mtd_pairing_scheme = type { i32, i32 (%struct.mtd_info*, i32, %struct.mtd_pairing_info*)*, i32 (%struct.mtd_info*, %struct.mtd_pairing_info*)* }
%struct.mtd_pairing_info = type { i32, i32 }
%struct.mtd_erase_region_info = type { i64, i32, i32, i64* }
%struct.erase_info = type { i64, i64, i64 }
%struct.mtd_oob_ops = type { i32, i64, i64, i64, i64, i32, i8*, i8* }
%struct.otp_info = type { i32, i32, i32 }
%struct.kvec = type { i8*, i64 }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.mtd_ecc_stats = type { i32, i32, i32, i32 }
%struct.mtd_debug_info = type { %struct.dentry*, i8*, i8* }
%struct.nvmem_device = type opaque
%union.anon.68 = type { %struct.mtd_part }
%struct.mtd_part = type { %struct.list_head, i64, i64, i32 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.48, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.34, %union.anon.35, i32 }
%struct.request_queue = type opaque
%union.anon.34 = type { %struct.list_head }
%union.anon.35 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.36 }
%struct.anon.36 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.40 }
%struct.anon.40 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.47, i32, [12 x i8] }
%union.anon.47 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.48 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.49, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.52 }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { i64, i64 }
%union.anon.52 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.65 = type { %struct.list_head }
%union.anon.66 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.57, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.58, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.59, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.62, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.57 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.58 = type { %struct.callback_head }
%union.anon.59 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.62 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.60 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.60 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.spi_controller = type { %struct.device, %struct.list_head, i16, i16, i16, i32, i32, i32, i32, i32, i16, i8, i64 (%struct.spi_device*)*, i64 (%struct.spi_device*)*, %struct.mutex, %struct.spinlock, %struct.mutex, i8, i32 (%struct.spi_device*)*, i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)*, i32 (%struct.spi_device*, %struct.spi_message*)*, void (%struct.spi_device*)*, i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, i8, %struct.kthread_worker*, %struct.kthread_work, %struct.spinlock, %struct.list_head, %struct.spi_message*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.completion, i64, i32 (%struct.spi_controller*)*, i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*)*, i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*)*, void (%struct.spi_device*, i1)*, i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, void (%struct.spi_controller*, %struct.spi_message*)*, %struct.spi_controller_mem_ops*, %struct.spi_delay, %struct.spi_delay, %struct.spi_delay, i32*, %struct.gpio_desc**, i8, i8, i8, %struct.spi_statistics, %struct.dma_chan*, %struct.dma_chan*, i8*, i8*, i32 (%struct.spi_controller*, i32)*, i8, i64 }
%struct.spi_transfer = type { i8*, i8*, i32, i64, i64, %struct.sg_table, %struct.sg_table, i8, i8, i16, %struct.spi_delay, %struct.spi_delay, %struct.spi_delay, i32, i32, i32, i32, %struct.ptp_system_timestamp*, i8, %struct.list_head, i16 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.ptp_system_timestamp = type { %struct.timespec64, %struct.timespec64 }
%struct.kthread_worker = type { i32, %struct.raw_spinlock, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.kthread_work* }
%struct.kthread_work = type { %struct.list_head, void (%struct.kthread_work*)*, %struct.kthread_worker*, i32 }
%struct.spi_message = type { %struct.list_head, %struct.spi_device*, i8, void (i8*)*, i8*, i32, i32, i32, %struct.list_head, i8*, %struct.list_head }
%struct.spi_controller_mem_ops = type { i32 (%struct.spi_mem*, %struct.spi_mem_op*)*, i1 (%struct.spi_mem*, %struct.spi_mem_op*)*, i32 (%struct.spi_mem*, %struct.spi_mem_op*)*, i8* (%struct.spi_mem*)*, i32 (%struct.spi_mem_dirmap_desc*)*, void (%struct.spi_mem_dirmap_desc*)*, i64 (%struct.spi_mem_dirmap_desc*, i64, i64, i8*)*, i64 (%struct.spi_mem_dirmap_desc*, i64, i64, i8*)* }
%struct.spi_mem = type { %struct.spi_device*, i8*, i8* }
%struct.spi_mem_op = type { %struct.anon.69, %struct.anon.70, %struct.anon.71, %struct.anon.72 }
%struct.anon.69 = type { i8, i8, i8, i16 }
%struct.anon.70 = type { i8, i8, i8, i64 }
%struct.anon.71 = type { i8, i8, i8 }
%struct.anon.72 = type { i8, i8, i32, i32, %union.anon.73 }
%union.anon.73 = type { i8* }
%struct.spi_mem_dirmap_desc = type { %struct.spi_mem*, %struct.spi_mem_dirmap_info, i32, i8* }
%struct.spi_mem_dirmap_info = type { %struct.spi_mem_op, i64, i64 }
%struct.dma_chan = type opaque
%struct.gpio_desc = type opaque
%struct.spi_delay = type { i16, i8 }
%struct.spi_statistics = type { %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [17 x i64], i64 }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.spi_nor_manufacturer = type { i8*, %struct.flash_info*, i32, %struct.spi_nor_fixups* }
%struct.flash_info = type { i8*, [6 x i8], i8, i32, i16, i16, i16, i32, %struct.spi_nor_fixups* }
%struct.spi_nor_fixups = type { void (%struct.spi_nor*)*, i32 (%struct.spi_nor*, %struct.sfdp_parameter_header*, %struct.sfdp_bfpt*, %struct.spi_nor_flash_parameter*)*, void (%struct.spi_nor*)* }
%struct.spi_nor = type { %struct.mtd_info, %struct.mutex, %struct.device*, %struct.spi_mem*, i8*, i64, %struct.flash_info*, %struct.spi_nor_manufacturer*, i32, i8, i8, i8, i8, i8, i32, i32, i32, i8, i32, %struct.spi_nor_controller_ops*, %struct.spi_nor_flash_parameter*, %struct.anon.74, i8* }
%struct.spi_nor_controller_ops = type { i32 (%struct.spi_nor*)*, void (%struct.spi_nor*)*, i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)*, {}*, i64 (%struct.spi_nor*, i64, i64, i8*)*, i32 (%struct.spi_nor*, i64)* }
%struct.anon.74 = type { %struct.spi_mem_dirmap_desc*, %struct.spi_mem_dirmap_desc* }
%struct.sfdp_parameter_header = type { i8, i8, i8, i8, [3 x i8], i8 }
%struct.sfdp_bfpt = type { [20 x i32] }
%struct.spi_nor_flash_parameter = type { i64, i32, %struct.spi_nor_hwcaps, [15 x %struct.spi_nor_read_command], [7 x %struct.spi_nor_pp_command], %struct.spi_nor_erase_map, i32 (%struct.spi_nor*)*, i32 (%struct.spi_nor*, i1)*, i32 (%struct.spi_nor*, i32)*, i32 (%struct.spi_nor*, %struct.spi_nor_hwcaps*)*, %struct.spi_nor_locking_ops* }
%struct.spi_nor_hwcaps = type { i32 }
%struct.spi_nor_read_command = type { i8, i8, i8, i32 }
%struct.spi_nor_pp_command = type { i8, i32 }
%struct.spi_nor_erase_map = type { %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region, [4 x %struct.spi_nor_erase_type], i8 }
%struct.spi_nor_erase_region = type { i64, i64 }
%struct.spi_nor_erase_type = type { i32, i32, i32, i8, i8 }
%struct.spi_nor_locking_ops = type { i32 (%struct.spi_nor*, i64, i64)*, i32 (%struct.spi_nor*, i64, i64)*, i32 (%struct.spi_nor*, i64, i64)* }
%struct.kmem_cache = type opaque
%struct.spi_nor_erase_command = type { %struct.list_head, i32, i32, i8 }
%struct.flash_platform_data = type { i8*, %struct.mtd_partition*, i32, i8* }
%struct.mtd_partition = type opaque
%struct.mtd_part_parser_data = type opaque

@spi_nor_convert_3to4_read.spi_nor_3to4_read = internal constant [11 x [2 x i8]] [[2 x i8] c"\03\13", [2 x i8] c"\0B\0C", [2 x i8] c";<", [2 x i8] c"\BB\BC", [2 x i8] c"kl", [2 x i8] c"\EB\EC", [2 x i8] c"\8B|", [2 x i8] c"\CB\CC", [2 x i8] c"\0D\0E", [2 x i8] c"\BD\BE", [2 x i8] c"\ED\EE"], align 16, !dbg !0
@spi_nor_hwcaps_read2cmd.hwcaps_read2cmd = internal constant [15 x [2 x i32]] [[2 x i32] [i32 1, i32 0], [2 x i32] [i32 2, i32 1], [2 x i32] [i32 4, i32 2], [2 x i32] [i32 8, i32 3], [2 x i32] [i32 16, i32 4], [2 x i32] [i32 32, i32 5], [2 x i32] [i32 64, i32 6], [2 x i32] [i32 128, i32 7], [2 x i32] [i32 256, i32 8], [2 x i32] [i32 512, i32 9], [2 x i32] [i32 1024, i32 10], [2 x i32] [i32 2048, i32 11], [2 x i32] [i32 4096, i32 12], [2 x i32] [i32 8192, i32 13], [2 x i32] [i32 16384, i32 14]], align 16, !dbg !4089
@spi_nor_scan.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4098
@.str = private unnamed_addr constant [11 x i8] c"&nor->lock\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"broken-flash-reset\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"%s (%lld Kbytes)\0A\00", align 1
@__UNIQUE_ID___addressable_spi_nor_driver_init250 = internal global i8* bitcast (i32 ()* @spi_nor_driver_init to i8*), section ".discard.addressable", align 8, !dbg !4617
@spi_nor_driver = internal global %struct.spi_mem_driver { %struct.spi_driver { %struct.spi_device_id* getelementptr inbounds ([54 x %struct.spi_device_id], [54 x %struct.spi_device_id]* @spi_nor_dev_ids, i32 0, i32 0), i32 (%struct.spi_device*)* null, i32 (%struct.spi_device*)* null, void (%struct.spi_device*)* null, %struct.device_driver { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* getelementptr inbounds ([2 x %struct.of_device_id], [2 x %struct.of_device_id]* @spi_nor_of_table, i32 0, i32 0), %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* null, void (%struct.device*)* null, %struct.driver_private* null } }, i32 (%struct.spi_mem*)* @spi_nor_probe, i32 (%struct.spi_mem*)* @spi_nor_remove, void (%struct.spi_mem*)* @spi_nor_shutdown }, align 8, !dbg !4673
@__exitcall_spi_nor_driver_exit = internal global void ()* @spi_nor_driver_exit, section ".exitcall.exit", align 8, !dbg !4619
@__UNIQUE_ID_file251 = internal constant [41 x i8] c"spi_nor.file=drivers/mtd/spi-nor/spi-nor\00", section ".modinfo", align 1, !dbg !4624
@__UNIQUE_ID_license252 = internal constant [23 x i8] c"spi_nor.license=GPL v2\00", section ".modinfo", align 1, !dbg !4629
@__UNIQUE_ID_author253 = internal constant [48 x i8] c"spi_nor.author=Huang Shijie <shijie8@gmail.com>\00", section ".modinfo", align 1, !dbg !4634
@__UNIQUE_ID_author254 = internal constant [29 x i8] c"spi_nor.author=Mike Lavender\00", section ".modinfo", align 1, !dbg !4639
@__UNIQUE_ID_description255 = internal constant [42 x i8] c"spi_nor.description=framework for SPI NOR\00", section ".modinfo", align 1, !dbg !4644
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@jiffies = external dso_local global i64, align 8
@.str.3 = private unnamed_addr constant [27 x i8] c"drivers/mtd/spi-nor/core.c\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"Erase Error occurred\0A\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"Programming Error occurred\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Erase operation failed.\0A\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"Program operation failed.\0A\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"Attempted to modify a protected sector.\0A\00", align 1
@.str.9 = private unnamed_addr constant [50 x i8] c"\013spi-nor: please fill all the necessary fields!\0A\00", align 1
@.str.10 = private unnamed_addr constant [90 x i8] c"nor->spimem and nor->controller_ops are mutually exclusive, please set just one of them.\0A\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"found %s, expected %s\0A\00", align 1
@manufacturers = internal global [17 x %struct.spi_nor_manufacturer*] [%struct.spi_nor_manufacturer* @spi_nor_atmel, %struct.spi_nor_manufacturer* @spi_nor_catalyst, %struct.spi_nor_manufacturer* @spi_nor_eon, %struct.spi_nor_manufacturer* @spi_nor_esmt, %struct.spi_nor_manufacturer* @spi_nor_everspin, %struct.spi_nor_manufacturer* @spi_nor_fujitsu, %struct.spi_nor_manufacturer* @spi_nor_gigadevice, %struct.spi_nor_manufacturer* @spi_nor_intel, %struct.spi_nor_manufacturer* @spi_nor_issi, %struct.spi_nor_manufacturer* @spi_nor_macronix, %struct.spi_nor_manufacturer* @spi_nor_micron, %struct.spi_nor_manufacturer* @spi_nor_st, %struct.spi_nor_manufacturer* @spi_nor_spansion, %struct.spi_nor_manufacturer* @spi_nor_sst, %struct.spi_nor_manufacturer* @spi_nor_winbond, %struct.spi_nor_manufacturer* @spi_nor_xilinx, %struct.spi_nor_manufacturer* @spi_nor_xmc], align 16, !dbg !4649
@spi_nor_atmel = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_catalyst = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_eon = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_esmt = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_everspin = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_fujitsu = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_gigadevice = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_intel = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_issi = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_macronix = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_micron = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_st = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_spansion = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_sst = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_winbond = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_xilinx = external dso_local constant %struct.spi_nor_manufacturer, align 8
@spi_nor_xmc = external dso_local constant %struct.spi_nor_manufacturer, align 8
@.str.12 = private unnamed_addr constant [35 x i8] c"unrecognized JEDEC id bytes: %*ph\0A\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"spi-nor:%*phN\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"m25p,fast-read\00", align 1
@spi_nor_hwcaps_pp2cmd.hwcaps_pp2cmd = internal constant [7 x [2 x i32]] [[2 x i32] [i32 65536, i32 0], [2 x i32] [i32 131072, i32 1], [2 x i32] [i32 262144, i32 2], [2 x i32] [i32 524288, i32 3], [2 x i32] [i32 1048576, i32 4], [2 x i32] [i32 2097152, i32 5], [2 x i32] [i32 4194304, i32 6]], align 16, !dbg !4652
@spi_nor_sr_locking_ops = internal constant %struct.spi_nor_locking_ops { i32 (%struct.spi_nor*, i64, i64)* @spi_nor_sr_lock, i32 (%struct.spi_nor*, i64, i64)* @spi_nor_sr_unlock, i32 (%struct.spi_nor*, i64, i64)* @spi_nor_sr_is_locked }, align 8, !dbg !4657
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.15 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"resume() failed\0A\00", align 1
@spi_nor_convert_3to4_program.spi_nor_3to4_program = internal constant [5 x [2 x i8]] [[2 x i8] c"\02\12", [2 x i8] c"24", [2 x i8] c"8>", [2 x i8] c"\82\84", [2 x i8] c"\C2\8E"], align 1, !dbg !4659
@spi_nor_convert_3to4_erase.spi_nor_3to4_erase = internal constant [3 x [2 x i8]] [[2 x i8] c" !", [2 x i8] c"R\\", [2 x i8] c"\D8\DC"], align 1, !dbg !4665
@spi_nor_init.__warned = internal global i8 0, section ".data.once", align 1, !dbg !4670
@.str.17 = private unnamed_addr constant [62 x i8] c"enabling reset hack; may not recover from unexpected reboots\0A\00", align 1
@spi_nor_dev_ids = internal constant [54 x %struct.spi_device_id] [%struct.spi_device_id { [32 x i8] c"spi-nor\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"s25sl064a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"w25x16\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25px64\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"at25df321a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"at25df641\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"at26df081a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"mx25l4005a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"mx25l1606e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"mx25l6405d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"mx25l12805d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"mx25l25635e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"mx66l51235l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"n25q064\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"n25q128a11\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"n25q128a13\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"n25q512a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"s25fl256s1\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"s25fl512s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"s25sl12801\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"s25fl008k\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"s25fl064k\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"sst25vf040b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"sst25vf016b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"sst25vf032b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"sst25wf040\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p40\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p16\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p32\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p64\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p128\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"w25x80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"w25x32\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"w25q32\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"w25q32dw\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"w25q80bl\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"w25q128\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"w25q256\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p05-nonjedec\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p10-nonjedec\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p20-nonjedec\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p40-nonjedec\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p80-nonjedec\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p16-nonjedec\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p32-nonjedec\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p64-nonjedec\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"m25p128-nonjedec\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"mr25h128\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"mr25h256\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"mr25h10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id { [32 x i8] c"mr25h40\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.spi_device_id zeroinitializer], align 16, !dbg !4700
@.str.18 = private unnamed_addr constant [8 x i8] c"spi-nor\00", align 1
@spi_nor_of_table = internal constant [2 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"jedec,spi-nor\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* null }, %struct.of_device_id zeroinitializer], align 16, !dbg !4705
@__const.spi_nor_probe.hwcaps = private unnamed_addr constant %struct.spi_nor_hwcaps { i32 8355839 }, align 4
@.str.19 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@llvm.used = appending global [8 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_spi_nor_driver_init250 to i8*), i8* bitcast (void ()* @spi_nor_driver_exit to i8*), i8* bitcast (void ()** @__exitcall_spi_nor_driver_exit to i8*), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_file251, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_license252, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_author253, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_author254, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_description255, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @spi_nor_read_data(%struct.spi_nor* %nor, i64 %from, i64 %len, i8* %buf) #0 !dbg !4716 {
entry:
  %retval = alloca i64, align 8
  %nor.addr = alloca %struct.spi_nor*, align 8
  %from.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !4717, metadata !DIExpression()), !dbg !4718
  store i64 %from, i64* %from.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %from.addr, metadata !4719, metadata !DIExpression()), !dbg !4720
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !4721, metadata !DIExpression()), !dbg !4722
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4723, metadata !DIExpression()), !dbg !4724
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4725
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !4727
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !4727
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !4725
  br i1 %tobool, label %if.then, label %if.end, !dbg !4728

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4729
  %3 = load i64, i64* %from.addr, align 8, !dbg !4730
  %4 = load i64, i64* %len.addr, align 8, !dbg !4731
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !4732
  %call = call i64 @spi_nor_spimem_read_data(%struct.spi_nor* %2, i64 %3, i64 %4, i8* %5) #9, !dbg !4733
  store i64 %call, i64* %retval, align 8, !dbg !4734
  br label %return, !dbg !4734

if.end:                                           ; preds = %entry
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4735
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 19, !dbg !4736
  %7 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !4736
  %read = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %7, i32 0, i32 4, !dbg !4737
  %read1 = bitcast {}** %read to i64 (%struct.spi_nor*, i64, i64, i8*)**, !dbg !4737
  %8 = load i64 (%struct.spi_nor*, i64, i64, i8*)*, i64 (%struct.spi_nor*, i64, i64, i8*)** %read1, align 8, !dbg !4737
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4738
  %10 = load i64, i64* %from.addr, align 8, !dbg !4739
  %11 = load i64, i64* %len.addr, align 8, !dbg !4740
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !4741
  %call2 = call i64 %8(%struct.spi_nor* %9, i64 %10, i64 %11, i8* %12) #9, !dbg !4735
  store i64 %call2, i64* %retval, align 8, !dbg !4742
  br label %return, !dbg !4742

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !4743
  ret i64 %13, !dbg !4743
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_nor_spimem_read_data(%struct.spi_nor* %nor, i64 %from, i64 %len, i8* %buf) #0 !dbg !4744 {
entry:
  %retval = alloca i64, align 8
  %nor.addr = alloca %struct.spi_nor*, align 8
  %from.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %op = alloca %struct.spi_mem_op, align 8
  %usebouncebuf = alloca i8, align 1
  %nbytes18 = alloca i64, align 8
  %error = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !4745, metadata !DIExpression()), !dbg !4746
  store i64 %from, i64* %from.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %from.addr, metadata !4747, metadata !DIExpression()), !dbg !4748
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !4749, metadata !DIExpression()), !dbg !4750
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4751, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !4753, metadata !DIExpression()), !dbg !4754
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !4755
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !4755
  store i8 1, i8* %nbytes, align 8, !dbg !4755
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !4755
  store i8 1, i8* %buswidth, align 1, !dbg !4755
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !4755
  %bf.load = load i8, i8* %dtr, align 2, !dbg !4755
  %bf.clear = and i8 %bf.load, -2, !dbg !4755
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !4755
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !4755
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4755
  %read_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 11, !dbg !4755
  %1 = load i8, i8* %read_opcode, align 2, !dbg !4755
  %conv = zext i8 %1 to i16, !dbg !4755
  store i16 %conv, i16* %opcode, align 4, !dbg !4755
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !4755
  %nbytes1 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !4755
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4755
  %addr_width = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 9, !dbg !4755
  %3 = load i8, i8* %addr_width, align 4, !dbg !4755
  store i8 %3, i8* %nbytes1, align 8, !dbg !4755
  %buswidth2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !4755
  store i8 1, i8* %buswidth2, align 1, !dbg !4755
  %dtr3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !4755
  %bf.load4 = load i8, i8* %dtr3, align 2, !dbg !4755
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !4755
  store i8 %bf.clear5, i8* %dtr3, align 2, !dbg !4755
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !4755
  %4 = load i64, i64* %from.addr, align 8, !dbg !4755
  store i64 %4, i64* %val, align 8, !dbg !4755
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !4755
  %nbytes6 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !4755
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4755
  %read_dummy = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 12, !dbg !4755
  %6 = load i8, i8* %read_dummy, align 1, !dbg !4755
  store i8 %6, i8* %nbytes6, align 8, !dbg !4755
  %buswidth7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !4755
  store i8 1, i8* %buswidth7, align 1, !dbg !4755
  %dtr8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !4755
  %bf.load9 = load i8, i8* %dtr8, align 2, !dbg !4755
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !4755
  store i8 %bf.clear10, i8* %dtr8, align 2, !dbg !4755
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4755
  %buswidth11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !4755
  store i8 1, i8* %buswidth11, align 8, !dbg !4755
  %dtr12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !4755
  %bf.load13 = load i8, i8* %dtr12, align 1, !dbg !4755
  %bf.clear14 = and i8 %bf.load13, -2, !dbg !4755
  store i8 %bf.clear14, i8* %dtr12, align 1, !dbg !4755
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !4755
  store i32 1, i32* %dir, align 4, !dbg !4755
  %nbytes15 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !4755
  %7 = load i64, i64* %len.addr, align 8, !dbg !4755
  %conv16 = trunc i64 %7 to i32, !dbg !4755
  store i32 %conv16, i32* %nbytes15, align 8, !dbg !4755
  %buf17 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !4755
  %in = bitcast %union.anon.73* %buf17 to i8**, !dbg !4755
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !4755
  store i8* %8, i8** %in, align 8, !dbg !4755
  call void @llvm.dbg.declare(metadata i8* %usebouncebuf, metadata !4756, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.declare(metadata i64* %nbytes18, metadata !4758, metadata !DIExpression()), !dbg !4759
  call void @llvm.dbg.declare(metadata i32* %error, metadata !4760, metadata !DIExpression()), !dbg !4761
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4762
  %read_proto = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 14, !dbg !4763
  %10 = load i32, i32* %read_proto, align 4, !dbg !4763
  %call = call zeroext i8 @spi_nor_get_protocol_inst_nbits(i32 %10) #9, !dbg !4764
  %cmd19 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !4765
  %buswidth20 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd19, i32 0, i32 1, !dbg !4766
  store i8 %call, i8* %buswidth20, align 1, !dbg !4767
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4768
  %read_proto21 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %11, i32 0, i32 14, !dbg !4769
  %12 = load i32, i32* %read_proto21, align 4, !dbg !4769
  %call22 = call zeroext i8 @spi_nor_get_protocol_addr_nbits(i32 %12) #9, !dbg !4770
  %addr23 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !4771
  %buswidth24 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr23, i32 0, i32 1, !dbg !4772
  store i8 %call22, i8* %buswidth24, align 1, !dbg !4773
  %addr25 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !4774
  %buswidth26 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr25, i32 0, i32 1, !dbg !4775
  %13 = load i8, i8* %buswidth26, align 1, !dbg !4775
  %dummy27 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !4776
  %buswidth28 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy27, i32 0, i32 1, !dbg !4777
  store i8 %13, i8* %buswidth28, align 1, !dbg !4778
  %14 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4779
  %read_proto29 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %14, i32 0, i32 14, !dbg !4780
  %15 = load i32, i32* %read_proto29, align 4, !dbg !4780
  %call30 = call zeroext i8 @spi_nor_get_protocol_data_nbits(i32 %15) #9, !dbg !4781
  %data31 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4782
  %buswidth32 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data31, i32 0, i32 0, !dbg !4783
  store i8 %call30, i8* %buswidth32, align 8, !dbg !4784
  %16 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4785
  %read_dummy33 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %16, i32 0, i32 12, !dbg !4786
  %17 = load i8, i8* %read_dummy33, align 1, !dbg !4786
  %conv34 = zext i8 %17 to i32, !dbg !4785
  %dummy35 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !4787
  %buswidth36 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy35, i32 0, i32 1, !dbg !4788
  %18 = load i8, i8* %buswidth36, align 1, !dbg !4788
  %conv37 = zext i8 %18 to i32, !dbg !4789
  %mul = mul i32 %conv34, %conv37, !dbg !4790
  %div = sdiv i32 %mul, 8, !dbg !4791
  %conv38 = trunc i32 %div to i8, !dbg !4792
  %dummy39 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !4793
  %nbytes40 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy39, i32 0, i32 0, !dbg !4794
  store i8 %conv38, i8* %nbytes40, align 8, !dbg !4795
  %19 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4796
  %call41 = call zeroext i1 @spi_nor_spimem_bounce(%struct.spi_nor* %19, %struct.spi_mem_op* %op) #9, !dbg !4797
  %frombool = zext i1 %call41 to i8, !dbg !4798
  store i8 %frombool, i8* %usebouncebuf, align 1, !dbg !4798
  %20 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4799
  %dirmap = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %20, i32 0, i32 21, !dbg !4801
  %rdesc = getelementptr inbounds %struct.anon.74, %struct.anon.74* %dirmap, i32 0, i32 0, !dbg !4802
  %21 = load %struct.spi_mem_dirmap_desc*, %struct.spi_mem_dirmap_desc** %rdesc, align 8, !dbg !4802
  %tobool = icmp ne %struct.spi_mem_dirmap_desc* %21, null, !dbg !4799
  br i1 %tobool, label %if.then, label %if.else, !dbg !4803

if.then:                                          ; preds = %entry
  %22 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4804
  %dirmap42 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %22, i32 0, i32 21, !dbg !4806
  %rdesc43 = getelementptr inbounds %struct.anon.74, %struct.anon.74* %dirmap42, i32 0, i32 0, !dbg !4807
  %23 = load %struct.spi_mem_dirmap_desc*, %struct.spi_mem_dirmap_desc** %rdesc43, align 8, !dbg !4807
  %addr44 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !4808
  %val45 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr44, i32 0, i32 3, !dbg !4809
  %24 = load i64, i64* %val45, align 8, !dbg !4809
  %data46 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4810
  %nbytes47 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data46, i32 0, i32 3, !dbg !4811
  %25 = load i32, i32* %nbytes47, align 8, !dbg !4811
  %conv48 = zext i32 %25 to i64, !dbg !4812
  %data49 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4813
  %buf50 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data49, i32 0, i32 4, !dbg !4814
  %in51 = bitcast %union.anon.73* %buf50 to i8**, !dbg !4815
  %26 = load i8*, i8** %in51, align 8, !dbg !4815
  %call52 = call i64 @spi_mem_dirmap_read(%struct.spi_mem_dirmap_desc* %23, i64 %24, i64 %conv48, i8* %26) #9, !dbg !4816
  store i64 %call52, i64* %nbytes18, align 8, !dbg !4817
  br label %if.end60, !dbg !4818

if.else:                                          ; preds = %entry
  %27 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4819
  %call53 = call i32 @spi_nor_spimem_exec_op(%struct.spi_nor* %27, %struct.spi_mem_op* %op) #9, !dbg !4821
  store i32 %call53, i32* %error, align 4, !dbg !4822
  %28 = load i32, i32* %error, align 4, !dbg !4823
  %tobool54 = icmp ne i32 %28, 0, !dbg !4823
  br i1 %tobool54, label %if.then55, label %if.end, !dbg !4825

if.then55:                                        ; preds = %if.else
  %29 = load i32, i32* %error, align 4, !dbg !4826
  %conv56 = sext i32 %29 to i64, !dbg !4826
  store i64 %conv56, i64* %retval, align 8, !dbg !4827
  br label %return, !dbg !4827

if.end:                                           ; preds = %if.else
  %data57 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4828
  %nbytes58 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data57, i32 0, i32 3, !dbg !4829
  %30 = load i32, i32* %nbytes58, align 8, !dbg !4829
  %conv59 = zext i32 %30 to i64, !dbg !4830
  store i64 %conv59, i64* %nbytes18, align 8, !dbg !4831
  br label %if.end60

if.end60:                                         ; preds = %if.end, %if.then
  %31 = load i8, i8* %usebouncebuf, align 1, !dbg !4832
  %tobool61 = trunc i8 %31 to i1, !dbg !4832
  br i1 %tobool61, label %land.lhs.true, label %if.end68, !dbg !4834

land.lhs.true:                                    ; preds = %if.end60
  %32 = load i64, i64* %nbytes18, align 8, !dbg !4835
  %cmp = icmp sgt i64 %32, 0, !dbg !4836
  br i1 %cmp, label %if.then64, label %if.end68, !dbg !4837

if.then64:                                        ; preds = %land.lhs.true
  %33 = load i8*, i8** %buf.addr, align 8, !dbg !4838
  %data65 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4839
  %buf66 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data65, i32 0, i32 4, !dbg !4840
  %in67 = bitcast %union.anon.73* %buf66 to i8**, !dbg !4841
  %34 = load i8*, i8** %in67, align 8, !dbg !4841
  %35 = load i64, i64* %nbytes18, align 8, !dbg !4842
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 %35, i1 false), !dbg !4843
  br label %if.end68, !dbg !4843

if.end68:                                         ; preds = %if.then64, %land.lhs.true, %if.end60
  %36 = load i64, i64* %nbytes18, align 8, !dbg !4844
  store i64 %36, i64* %retval, align 8, !dbg !4845
  br label %return, !dbg !4845

return:                                           ; preds = %if.end68, %if.then55
  %37 = load i64, i64* %retval, align 8, !dbg !4846
  ret i64 %37, !dbg !4846
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @spi_nor_write_data(%struct.spi_nor* %nor, i64 %to, i64 %len, i8* %buf) #0 !dbg !4847 {
entry:
  %retval = alloca i64, align 8
  %nor.addr = alloca %struct.spi_nor*, align 8
  %to.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !4848, metadata !DIExpression()), !dbg !4849
  store i64 %to, i64* %to.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %to.addr, metadata !4850, metadata !DIExpression()), !dbg !4851
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !4852, metadata !DIExpression()), !dbg !4853
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4854, metadata !DIExpression()), !dbg !4855
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4856
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !4858
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !4858
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !4856
  br i1 %tobool, label %if.then, label %if.end, !dbg !4859

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4860
  %3 = load i64, i64* %to.addr, align 8, !dbg !4861
  %4 = load i64, i64* %len.addr, align 8, !dbg !4862
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !4863
  %call = call i64 @spi_nor_spimem_write_data(%struct.spi_nor* %2, i64 %3, i64 %4, i8* %5) #9, !dbg !4864
  store i64 %call, i64* %retval, align 8, !dbg !4865
  br label %return, !dbg !4865

if.end:                                           ; preds = %entry
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4866
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 19, !dbg !4867
  %7 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !4867
  %write = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %7, i32 0, i32 5, !dbg !4868
  %8 = load i64 (%struct.spi_nor*, i64, i64, i8*)*, i64 (%struct.spi_nor*, i64, i64, i8*)** %write, align 8, !dbg !4868
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4869
  %10 = load i64, i64* %to.addr, align 8, !dbg !4870
  %11 = load i64, i64* %len.addr, align 8, !dbg !4871
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !4872
  %call1 = call i64 %8(%struct.spi_nor* %9, i64 %10, i64 %11, i8* %12) #9, !dbg !4866
  store i64 %call1, i64* %retval, align 8, !dbg !4873
  br label %return, !dbg !4873

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !4874
  ret i64 %13, !dbg !4874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_nor_spimem_write_data(%struct.spi_nor* %nor, i64 %to, i64 %len, i8* %buf) #0 !dbg !4875 {
entry:
  %retval = alloca i64, align 8
  %nor.addr = alloca %struct.spi_nor*, align 8
  %to.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %op = alloca %struct.spi_mem_op, align 8
  %nbytes18 = alloca i64, align 8
  %error = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !4876, metadata !DIExpression()), !dbg !4877
  store i64 %to, i64* %to.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %to.addr, metadata !4878, metadata !DIExpression()), !dbg !4879
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !4880, metadata !DIExpression()), !dbg !4881
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4882, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !4884, metadata !DIExpression()), !dbg !4885
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !4886
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !4886
  store i8 1, i8* %nbytes, align 8, !dbg !4886
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !4886
  store i8 1, i8* %buswidth, align 1, !dbg !4886
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !4886
  %bf.load = load i8, i8* %dtr, align 2, !dbg !4886
  %bf.clear = and i8 %bf.load, -2, !dbg !4886
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !4886
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !4886
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4886
  %program_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 13, !dbg !4886
  %1 = load i8, i8* %program_opcode, align 8, !dbg !4886
  %conv = zext i8 %1 to i16, !dbg !4886
  store i16 %conv, i16* %opcode, align 4, !dbg !4886
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !4886
  %nbytes1 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !4886
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4886
  %addr_width = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 9, !dbg !4886
  %3 = load i8, i8* %addr_width, align 4, !dbg !4886
  store i8 %3, i8* %nbytes1, align 8, !dbg !4886
  %buswidth2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !4886
  store i8 1, i8* %buswidth2, align 1, !dbg !4886
  %dtr3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !4886
  %bf.load4 = load i8, i8* %dtr3, align 2, !dbg !4886
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !4886
  store i8 %bf.clear5, i8* %dtr3, align 2, !dbg !4886
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !4886
  %4 = load i64, i64* %to.addr, align 8, !dbg !4886
  store i64 %4, i64* %val, align 8, !dbg !4886
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !4886
  %nbytes6 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !4886
  store i8 0, i8* %nbytes6, align 8, !dbg !4886
  %buswidth7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !4886
  store i8 0, i8* %buswidth7, align 1, !dbg !4886
  %dtr8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !4886
  %bf.load9 = load i8, i8* %dtr8, align 2, !dbg !4886
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !4886
  store i8 %bf.clear10, i8* %dtr8, align 2, !dbg !4886
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4886
  %buswidth11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !4886
  store i8 1, i8* %buswidth11, align 8, !dbg !4886
  %dtr12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !4886
  %bf.load13 = load i8, i8* %dtr12, align 1, !dbg !4886
  %bf.clear14 = and i8 %bf.load13, -2, !dbg !4886
  store i8 %bf.clear14, i8* %dtr12, align 1, !dbg !4886
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !4886
  store i32 2, i32* %dir, align 4, !dbg !4886
  %nbytes15 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !4886
  %5 = load i64, i64* %len.addr, align 8, !dbg !4886
  %conv16 = trunc i64 %5 to i32, !dbg !4886
  store i32 %conv16, i32* %nbytes15, align 8, !dbg !4886
  %buf17 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !4886
  %out = bitcast %union.anon.73* %buf17 to i8**, !dbg !4886
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !4886
  store i8* %6, i8** %out, align 8, !dbg !4886
  call void @llvm.dbg.declare(metadata i64* %nbytes18, metadata !4887, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.declare(metadata i32* %error, metadata !4889, metadata !DIExpression()), !dbg !4890
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4891
  %write_proto = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 15, !dbg !4892
  %8 = load i32, i32* %write_proto, align 8, !dbg !4892
  %call = call zeroext i8 @spi_nor_get_protocol_inst_nbits(i32 %8) #9, !dbg !4893
  %cmd19 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !4894
  %buswidth20 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd19, i32 0, i32 1, !dbg !4895
  store i8 %call, i8* %buswidth20, align 1, !dbg !4896
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4897
  %write_proto21 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 15, !dbg !4898
  %10 = load i32, i32* %write_proto21, align 8, !dbg !4898
  %call22 = call zeroext i8 @spi_nor_get_protocol_addr_nbits(i32 %10) #9, !dbg !4899
  %addr23 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !4900
  %buswidth24 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr23, i32 0, i32 1, !dbg !4901
  store i8 %call22, i8* %buswidth24, align 1, !dbg !4902
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4903
  %write_proto25 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %11, i32 0, i32 15, !dbg !4904
  %12 = load i32, i32* %write_proto25, align 8, !dbg !4904
  %call26 = call zeroext i8 @spi_nor_get_protocol_data_nbits(i32 %12) #9, !dbg !4905
  %data27 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4906
  %buswidth28 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data27, i32 0, i32 0, !dbg !4907
  store i8 %call26, i8* %buswidth28, align 8, !dbg !4908
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4909
  %program_opcode29 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %13, i32 0, i32 13, !dbg !4911
  %14 = load i8, i8* %program_opcode29, align 8, !dbg !4911
  %conv30 = zext i8 %14 to i32, !dbg !4909
  %cmp = icmp eq i32 %conv30, 173, !dbg !4912
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4913

land.lhs.true:                                    ; preds = %entry
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4914
  %sst_write_second = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %15, i32 0, i32 17, !dbg !4915
  %16 = load i8, i8* %sst_write_second, align 8, !dbg !4915
  %tobool = trunc i8 %16 to i1, !dbg !4915
  br i1 %tobool, label %if.then, label %if.end, !dbg !4916

if.then:                                          ; preds = %land.lhs.true
  %addr33 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !4917
  %nbytes34 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr33, i32 0, i32 0, !dbg !4918
  store i8 0, i8* %nbytes34, align 8, !dbg !4919
  br label %if.end, !dbg !4920

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4921
  %call35 = call zeroext i1 @spi_nor_spimem_bounce(%struct.spi_nor* %17, %struct.spi_mem_op* %op) #9, !dbg !4923
  br i1 %call35, label %if.then36, label %if.end40, !dbg !4924

if.then36:                                        ; preds = %if.end
  %18 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4925
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %18, i32 0, i32 4, !dbg !4926
  %19 = load i8*, i8** %bouncebuf, align 8, !dbg !4926
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !4927
  %data37 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4928
  %nbytes38 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data37, i32 0, i32 3, !dbg !4929
  %21 = load i32, i32* %nbytes38, align 8, !dbg !4929
  %conv39 = zext i32 %21 to i64, !dbg !4930
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %20, i64 %conv39, i1 false), !dbg !4931
  br label %if.end40, !dbg !4931

if.end40:                                         ; preds = %if.then36, %if.end
  %22 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4932
  %dirmap = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %22, i32 0, i32 21, !dbg !4934
  %wdesc = getelementptr inbounds %struct.anon.74, %struct.anon.74* %dirmap, i32 0, i32 1, !dbg !4935
  %23 = load %struct.spi_mem_dirmap_desc*, %struct.spi_mem_dirmap_desc** %wdesc, align 8, !dbg !4935
  %tobool41 = icmp ne %struct.spi_mem_dirmap_desc* %23, null, !dbg !4932
  br i1 %tobool41, label %if.then42, label %if.else, !dbg !4936

if.then42:                                        ; preds = %if.end40
  %24 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4937
  %dirmap43 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %24, i32 0, i32 21, !dbg !4939
  %wdesc44 = getelementptr inbounds %struct.anon.74, %struct.anon.74* %dirmap43, i32 0, i32 1, !dbg !4940
  %25 = load %struct.spi_mem_dirmap_desc*, %struct.spi_mem_dirmap_desc** %wdesc44, align 8, !dbg !4940
  %addr45 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !4941
  %val46 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr45, i32 0, i32 3, !dbg !4942
  %26 = load i64, i64* %val46, align 8, !dbg !4942
  %data47 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4943
  %nbytes48 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data47, i32 0, i32 3, !dbg !4944
  %27 = load i32, i32* %nbytes48, align 8, !dbg !4944
  %conv49 = zext i32 %27 to i64, !dbg !4945
  %data50 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4946
  %buf51 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data50, i32 0, i32 4, !dbg !4947
  %out52 = bitcast %union.anon.73* %buf51 to i8**, !dbg !4948
  %28 = load i8*, i8** %out52, align 8, !dbg !4948
  %call53 = call i64 @spi_mem_dirmap_write(%struct.spi_mem_dirmap_desc* %25, i64 %26, i64 %conv49, i8* %28) #9, !dbg !4949
  store i64 %call53, i64* %nbytes18, align 8, !dbg !4950
  br label %if.end62, !dbg !4951

if.else:                                          ; preds = %if.end40
  %29 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4952
  %call54 = call i32 @spi_nor_spimem_exec_op(%struct.spi_nor* %29, %struct.spi_mem_op* %op) #9, !dbg !4954
  store i32 %call54, i32* %error, align 4, !dbg !4955
  %30 = load i32, i32* %error, align 4, !dbg !4956
  %tobool55 = icmp ne i32 %30, 0, !dbg !4956
  br i1 %tobool55, label %if.then56, label %if.end58, !dbg !4958

if.then56:                                        ; preds = %if.else
  %31 = load i32, i32* %error, align 4, !dbg !4959
  %conv57 = sext i32 %31 to i64, !dbg !4959
  store i64 %conv57, i64* %retval, align 8, !dbg !4960
  br label %return, !dbg !4960

if.end58:                                         ; preds = %if.else
  %data59 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !4961
  %nbytes60 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data59, i32 0, i32 3, !dbg !4962
  %32 = load i32, i32* %nbytes60, align 8, !dbg !4962
  %conv61 = zext i32 %32 to i64, !dbg !4963
  store i64 %conv61, i64* %nbytes18, align 8, !dbg !4964
  br label %if.end62

if.end62:                                         ; preds = %if.end58, %if.then42
  %33 = load i64, i64* %nbytes18, align 8, !dbg !4965
  store i64 %33, i64* %retval, align 8, !dbg !4966
  br label %return, !dbg !4966

return:                                           ; preds = %if.end62, %if.then56
  %34 = load i64, i64* %retval, align 8, !dbg !4967
  ret i64 %34, !dbg !4967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_write_enable(%struct.spi_nor* %nor) #0 !dbg !4968 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !4969, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4971, metadata !DIExpression()), !dbg !4972
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4973
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !4975
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !4975
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !4973
  br i1 %tobool, label %if.then, label %if.else, !dbg !4976

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !4977, metadata !DIExpression()), !dbg !4979
  %2 = bitcast %struct.spi_mem_op* %op to i8*, !dbg !4979
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false), !dbg !4979
  %3 = bitcast i8* %2 to %struct.spi_mem_op*, !dbg !4979
  %4 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %3, i32 0, i32 0, !dbg !4979
  %5 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 0, !dbg !4979
  store i8 1, i8* %5, align 8, !dbg !4979
  %6 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 1, !dbg !4979
  store i8 1, i8* %6, align 1, !dbg !4979
  %7 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 3, !dbg !4979
  store i16 6, i16* %7, align 4, !dbg !4979
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4980
  %spimem1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 3, !dbg !4981
  %9 = load %struct.spi_mem*, %struct.spi_mem** %spimem1, align 8, !dbg !4981
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %9, %struct.spi_mem_op* %op) #9, !dbg !4982
  store i32 %call, i32* %ret, align 4, !dbg !4983
  br label %if.end, !dbg !4984

if.else:                                          ; preds = %entry
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4985
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 19, !dbg !4987
  %11 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !4987
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %11, i32 0, i32 3, !dbg !4988
  %12 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !4988
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !4989
  %call2 = call i32 %12(%struct.spi_nor* %13, i8 zeroext 6, i8* null, i64 0) #9, !dbg !4985
  store i32 %call2, i32* %ret, align 4, !dbg !4990
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !4991
  %tobool3 = icmp ne i32 %14, 0, !dbg !4991
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4993

if.then4:                                         ; preds = %if.end
  br label %if.end5, !dbg !4994

if.end5:                                          ; preds = %if.then4, %if.end
  %15 = load i32, i32* %ret, align 4, !dbg !4995
  ret i32 %15, !dbg !4996
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noredzone
declare dso_local i32 @spi_mem_exec_op(%struct.spi_mem*, %struct.spi_mem_op*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_write_disable(%struct.spi_nor* %nor) #0 !dbg !4997 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !4998, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5000, metadata !DIExpression()), !dbg !5001
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5002
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !5004
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !5004
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !5002
  br i1 %tobool, label %if.then, label %if.else, !dbg !5005

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !5006, metadata !DIExpression()), !dbg !5008
  %2 = bitcast %struct.spi_mem_op* %op to i8*, !dbg !5008
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false), !dbg !5008
  %3 = bitcast i8* %2 to %struct.spi_mem_op*, !dbg !5008
  %4 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %3, i32 0, i32 0, !dbg !5008
  %5 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 0, !dbg !5008
  store i8 1, i8* %5, align 8, !dbg !5008
  %6 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 1, !dbg !5008
  store i8 1, i8* %6, align 1, !dbg !5008
  %7 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 3, !dbg !5008
  store i16 4, i16* %7, align 4, !dbg !5008
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5009
  %spimem1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 3, !dbg !5010
  %9 = load %struct.spi_mem*, %struct.spi_mem** %spimem1, align 8, !dbg !5010
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %9, %struct.spi_mem_op* %op) #9, !dbg !5011
  store i32 %call, i32* %ret, align 4, !dbg !5012
  br label %if.end, !dbg !5013

if.else:                                          ; preds = %entry
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5014
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 19, !dbg !5016
  %11 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !5016
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %11, i32 0, i32 3, !dbg !5017
  %12 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !5017
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5018
  %call2 = call i32 %12(%struct.spi_nor* %13, i8 zeroext 4, i8* null, i64 0) #9, !dbg !5014
  store i32 %call2, i32* %ret, align 4, !dbg !5019
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !5020
  %tobool3 = icmp ne i32 %14, 0, !dbg !5020
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !5022

if.then4:                                         ; preds = %if.end
  br label %if.end5, !dbg !5023

if.end5:                                          ; preds = %if.then4, %if.end
  %15 = load i32, i32* %ret, align 4, !dbg !5024
  ret i32 %15, !dbg !5025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_set_4byte_addr_mode(%struct.spi_nor* %nor, i1 zeroext %enable) #0 !dbg !5026 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %enable.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5027, metadata !DIExpression()), !dbg !5028
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !5029, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5031, metadata !DIExpression()), !dbg !5032
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5033
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !5035
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !5035
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !5033
  br i1 %tobool, label %if.then, label %if.else, !dbg !5036

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !5037, metadata !DIExpression()), !dbg !5039
  %2 = bitcast %struct.spi_mem_op* %op to i8*, !dbg !5039
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false), !dbg !5039
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !5040
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !5040
  store i8 1, i8* %nbytes, align 8, !dbg !5040
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !5040
  store i8 1, i8* %buswidth, align 1, !dbg !5040
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !5040
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !5040
  %3 = load i8, i8* %enable.addr, align 1, !dbg !5040
  %tobool1 = trunc i8 %3 to i1, !dbg !5040
  %4 = zext i1 %tobool1 to i64, !dbg !5040
  %cond = select i1 %tobool1, i32 183, i32 233, !dbg !5040
  %conv = trunc i32 %cond to i16, !dbg !5040
  store i16 %conv, i16* %opcode, align 4, !dbg !5040
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !5040
  %dtr4 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !5040
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !5040
  %dtr7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !5040
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !5040
  %dtr9 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !5040
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5041
  %spimem11 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 3, !dbg !5042
  %6 = load %struct.spi_mem*, %struct.spi_mem** %spimem11, align 8, !dbg !5042
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %6, %struct.spi_mem_op* %op) #9, !dbg !5043
  store i32 %call, i32* %ret, align 4, !dbg !5044
  br label %if.end, !dbg !5045

if.else:                                          ; preds = %entry
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5046
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 19, !dbg !5048
  %8 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !5048
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %8, i32 0, i32 3, !dbg !5049
  %9 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !5049
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5050
  %11 = load i8, i8* %enable.addr, align 1, !dbg !5051
  %tobool12 = trunc i8 %11 to i1, !dbg !5051
  %12 = zext i1 %tobool12 to i64, !dbg !5051
  %cond14 = select i1 %tobool12, i32 183, i32 233, !dbg !5051
  %conv15 = trunc i32 %cond14 to i8, !dbg !5051
  %call16 = call i32 %9(%struct.spi_nor* %10, i8 zeroext %conv15, i8* null, i64 0) #9, !dbg !5046
  store i32 %call16, i32* %ret, align 4, !dbg !5052
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %ret, align 4, !dbg !5053
  %tobool17 = icmp ne i32 %13, 0, !dbg !5053
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !5055

if.then18:                                        ; preds = %if.end
  br label %if.end19, !dbg !5056

if.end19:                                         ; preds = %if.then18, %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !5057
  ret i32 %14, !dbg !5058
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_write_ear(%struct.spi_nor* %nor, i8 zeroext %ear) #0 !dbg !5059 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ear.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5062, metadata !DIExpression()), !dbg !5063
  store i8 %ear, i8* %ear.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ear.addr, metadata !5064, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5066, metadata !DIExpression()), !dbg !5067
  %0 = load i8, i8* %ear.addr, align 1, !dbg !5068
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5069
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 4, !dbg !5070
  %2 = load i8*, i8** %bouncebuf, align 8, !dbg !5070
  %arrayidx = getelementptr i8, i8* %2, i64 0, !dbg !5069
  store i8 %0, i8* %arrayidx, align 1, !dbg !5071
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5072
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 3, !dbg !5074
  %4 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !5074
  %tobool = icmp ne %struct.spi_mem* %4, null, !dbg !5072
  br i1 %tobool, label %if.then, label %if.else, !dbg !5075

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !5076, metadata !DIExpression()), !dbg !5078
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !5079
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !5079
  store i8 1, i8* %nbytes, align 8, !dbg !5079
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !5079
  store i8 1, i8* %buswidth, align 1, !dbg !5079
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !5079
  %bf.load = load i8, i8* %dtr, align 2, !dbg !5079
  %bf.clear = and i8 %bf.load, -2, !dbg !5079
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !5079
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !5079
  store i16 197, i16* %opcode, align 4, !dbg !5079
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !5079
  %nbytes1 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !5079
  store i8 0, i8* %nbytes1, align 8, !dbg !5079
  %buswidth2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !5079
  store i8 0, i8* %buswidth2, align 1, !dbg !5079
  %dtr3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !5079
  %bf.load4 = load i8, i8* %dtr3, align 2, !dbg !5079
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !5079
  store i8 %bf.clear5, i8* %dtr3, align 2, !dbg !5079
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !5079
  store i64 0, i64* %val, align 8, !dbg !5079
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !5079
  %nbytes6 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !5079
  store i8 0, i8* %nbytes6, align 8, !dbg !5079
  %buswidth7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !5079
  store i8 0, i8* %buswidth7, align 1, !dbg !5079
  %dtr8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !5079
  %bf.load9 = load i8, i8* %dtr8, align 2, !dbg !5079
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !5079
  store i8 %bf.clear10, i8* %dtr8, align 2, !dbg !5079
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !5079
  %buswidth11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !5079
  store i8 1, i8* %buswidth11, align 8, !dbg !5079
  %dtr12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !5079
  %bf.load13 = load i8, i8* %dtr12, align 1, !dbg !5079
  %bf.clear14 = and i8 %bf.load13, -2, !dbg !5079
  store i8 %bf.clear14, i8* %dtr12, align 1, !dbg !5079
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !5079
  store i32 2, i32* %dir, align 4, !dbg !5079
  %nbytes15 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !5079
  store i32 1, i32* %nbytes15, align 8, !dbg !5079
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !5079
  %out = bitcast %union.anon.73* %buf to i8**, !dbg !5079
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5079
  %bouncebuf16 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 4, !dbg !5079
  %6 = load i8*, i8** %bouncebuf16, align 8, !dbg !5079
  store i8* %6, i8** %out, align 8, !dbg !5079
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5080
  %spimem17 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 3, !dbg !5081
  %8 = load %struct.spi_mem*, %struct.spi_mem** %spimem17, align 8, !dbg !5081
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %8, %struct.spi_mem_op* %op) #9, !dbg !5082
  store i32 %call, i32* %ret, align 4, !dbg !5083
  br label %if.end, !dbg !5084

if.else:                                          ; preds = %entry
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5085
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 19, !dbg !5087
  %10 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !5087
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %10, i32 0, i32 3, !dbg !5088
  %11 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !5088
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5089
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5090
  %bouncebuf18 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %13, i32 0, i32 4, !dbg !5091
  %14 = load i8*, i8** %bouncebuf18, align 8, !dbg !5091
  %call19 = call i32 %11(%struct.spi_nor* %12, i8 zeroext -59, i8* %14, i64 1) #9, !dbg !5085
  store i32 %call19, i32* %ret, align 4, !dbg !5092
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load i32, i32* %ret, align 4, !dbg !5093
  %tobool20 = icmp ne i32 %15, 0, !dbg !5093
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !5095

if.then21:                                        ; preds = %if.end
  br label %if.end22, !dbg !5096

if.end22:                                         ; preds = %if.then21, %if.end
  %16 = load i32, i32* %ret, align 4, !dbg !5097
  ret i32 %16, !dbg !5098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_xread_sr(%struct.spi_nor* %nor, i8* %sr) #0 !dbg !5099 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5102, metadata !DIExpression()), !dbg !5103
  store i8* %sr, i8** %sr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sr.addr, metadata !5104, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5106, metadata !DIExpression()), !dbg !5107
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5108
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !5110
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !5110
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !5108
  br i1 %tobool, label %if.then, label %if.else, !dbg !5111

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !5112, metadata !DIExpression()), !dbg !5114
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !5115
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !5115
  store i8 1, i8* %nbytes, align 8, !dbg !5115
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !5115
  store i8 1, i8* %buswidth, align 1, !dbg !5115
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !5115
  %bf.load = load i8, i8* %dtr, align 2, !dbg !5115
  %bf.clear = and i8 %bf.load, -2, !dbg !5115
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !5115
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !5115
  store i16 215, i16* %opcode, align 4, !dbg !5115
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !5115
  %nbytes1 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !5115
  store i8 0, i8* %nbytes1, align 8, !dbg !5115
  %buswidth2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !5115
  store i8 0, i8* %buswidth2, align 1, !dbg !5115
  %dtr3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !5115
  %bf.load4 = load i8, i8* %dtr3, align 2, !dbg !5115
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !5115
  store i8 %bf.clear5, i8* %dtr3, align 2, !dbg !5115
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !5115
  store i64 0, i64* %val, align 8, !dbg !5115
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !5115
  %nbytes6 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !5115
  store i8 0, i8* %nbytes6, align 8, !dbg !5115
  %buswidth7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !5115
  store i8 0, i8* %buswidth7, align 1, !dbg !5115
  %dtr8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !5115
  %bf.load9 = load i8, i8* %dtr8, align 2, !dbg !5115
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !5115
  store i8 %bf.clear10, i8* %dtr8, align 2, !dbg !5115
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !5115
  %buswidth11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !5115
  store i8 1, i8* %buswidth11, align 8, !dbg !5115
  %dtr12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !5115
  %bf.load13 = load i8, i8* %dtr12, align 1, !dbg !5115
  %bf.clear14 = and i8 %bf.load13, -2, !dbg !5115
  store i8 %bf.clear14, i8* %dtr12, align 1, !dbg !5115
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !5115
  store i32 1, i32* %dir, align 4, !dbg !5115
  %nbytes15 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !5115
  store i32 1, i32* %nbytes15, align 8, !dbg !5115
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !5115
  %in = bitcast %union.anon.73* %buf to i8**, !dbg !5115
  %2 = load i8*, i8** %sr.addr, align 8, !dbg !5115
  store i8* %2, i8** %in, align 8, !dbg !5115
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5116
  %spimem16 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 3, !dbg !5117
  %4 = load %struct.spi_mem*, %struct.spi_mem** %spimem16, align 8, !dbg !5117
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %4, %struct.spi_mem_op* %op) #9, !dbg !5118
  store i32 %call, i32* %ret, align 4, !dbg !5119
  br label %if.end, !dbg !5120

if.else:                                          ; preds = %entry
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5121
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 19, !dbg !5123
  %6 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !5123
  %read_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %6, i32 0, i32 2, !dbg !5124
  %7 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %read_reg, align 8, !dbg !5124
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5125
  %9 = load i8*, i8** %sr.addr, align 8, !dbg !5126
  %call17 = call i32 %7(%struct.spi_nor* %8, i8 zeroext -41, i8* %9, i64 1) #9, !dbg !5121
  store i32 %call17, i32* %ret, align 4, !dbg !5127
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %ret, align 4, !dbg !5128
  %tobool18 = icmp ne i32 %10, 0, !dbg !5128
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !5130

if.then19:                                        ; preds = %if.end
  br label %if.end20, !dbg !5131

if.end20:                                         ; preds = %if.then19, %if.end
  %11 = load i32, i32* %ret, align 4, !dbg !5132
  ret i32 %11, !dbg !5133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_wait_till_ready(%struct.spi_nor* %nor) #0 !dbg !5134 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5135, metadata !DIExpression()), !dbg !5136
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5137
  %call = call i32 @spi_nor_wait_till_ready_with_timeout(%struct.spi_nor* %0, i64 10000) #9, !dbg !5138
  ret i32 %call, !dbg !5139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_wait_till_ready_with_timeout(%struct.spi_nor* %nor, i64 %timeout_jiffies) #0 !dbg !5140 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %timeout_jiffies.addr = alloca i64, align 8
  %deadline = alloca i64, align 8
  %timeout = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5143, metadata !DIExpression()), !dbg !5144
  store i64 %timeout_jiffies, i64* %timeout_jiffies.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timeout_jiffies.addr, metadata !5145, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.declare(metadata i64* %deadline, metadata !5147, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !5149, metadata !DIExpression()), !dbg !5150
  store i32 0, i32* %timeout, align 4, !dbg !5150
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5151, metadata !DIExpression()), !dbg !5152
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !5153
  %1 = load i64, i64* %timeout_jiffies.addr, align 8, !dbg !5154
  %add = add i64 %0, %1, !dbg !5155
  store i64 %add, i64* %deadline, align 8, !dbg !5156
  br label %while.cond, !dbg !5157

while.cond:                                       ; preds = %if.end6, %entry
  %2 = load i32, i32* %timeout, align 4, !dbg !5158
  %tobool = icmp ne i32 %2, 0, !dbg !5159
  %lnot = xor i1 %tobool, true, !dbg !5159
  br i1 %lnot, label %while.body, label %while.end, !dbg !5157

while.body:                                       ; preds = %while.cond
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !5160
  %4 = load i64, i64* %deadline, align 8, !dbg !5160
  %sub = sub i64 %3, %4, !dbg !5160
  %cmp = icmp sge i64 %sub, 0, !dbg !5160
  br i1 %cmp, label %if.then, label %if.end, !dbg !5163

if.then:                                          ; preds = %while.body
  store i32 1, i32* %timeout, align 4, !dbg !5164
  br label %if.end, !dbg !5165

if.end:                                           ; preds = %if.then, %while.body
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5166
  %call = call i32 @spi_nor_ready(%struct.spi_nor* %5) #9, !dbg !5167
  store i32 %call, i32* %ret, align 4, !dbg !5168
  %6 = load i32, i32* %ret, align 4, !dbg !5169
  %cmp1 = icmp slt i32 %6, 0, !dbg !5171
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5172

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %ret, align 4, !dbg !5173
  store i32 %7, i32* %retval, align 4, !dbg !5174
  br label %return, !dbg !5174

if.end3:                                          ; preds = %if.end
  %8 = load i32, i32* %ret, align 4, !dbg !5175
  %tobool4 = icmp ne i32 %8, 0, !dbg !5175
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5177

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !5178
  br label %return, !dbg !5178

if.end6:                                          ; preds = %if.end3
  call void @___might_sleep(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 694, i32 0) #9, !dbg !5179
  %call7 = call i32 @_cond_resched() #9, !dbg !5179
  store i32 %call7, i32* %tmp, align 4, !dbg !5179
  %9 = load i32, i32* %tmp, align 4, !dbg !5179
  br label %while.cond, !dbg !5157, !llvm.loop !5181

while.end:                                        ; preds = %while.cond
  store i32 -110, i32* %retval, align 4, !dbg !5183
  br label %return, !dbg !5183

return:                                           ; preds = %while.end, %if.then5, %if.then2
  %10 = load i32, i32* %retval, align 4, !dbg !5184
  ret i32 %10, !dbg !5184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @spi_nor_convert_3to4_read(i8 zeroext %opcode) #0 !dbg !2 {
entry:
  %opcode.addr = alloca i8, align 1
  store i8 %opcode, i8* %opcode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode.addr, metadata !5185, metadata !DIExpression()), !dbg !5186
  %0 = load i8, i8* %opcode.addr, align 1, !dbg !5187
  %call = call zeroext i8 @spi_nor_convert_opcode(i8 zeroext %0, [2 x i8]* getelementptr inbounds ([11 x [2 x i8]], [11 x [2 x i8]]* @spi_nor_convert_3to4_read.spi_nor_3to4_read, i64 0, i64 0), i64 11) #9, !dbg !5188
  ret i8 %call, !dbg !5189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @spi_nor_convert_opcode(i8 zeroext %opcode, [2 x i8]* %table, i64 %size) #0 !dbg !5190 {
entry:
  %retval = alloca i8, align 1
  %opcode.addr = alloca i8, align 1
  %table.addr = alloca [2 x i8]*, align 8
  %size.addr = alloca i64, align 8
  %i = alloca i64, align 8
  store i8 %opcode, i8* %opcode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode.addr, metadata !5195, metadata !DIExpression()), !dbg !5196
  store [2 x i8]* %table, [2 x i8]** %table.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i8]** %table.addr, metadata !5197, metadata !DIExpression()), !dbg !5198
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5199, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5201, metadata !DIExpression()), !dbg !5202
  store i64 0, i64* %i, align 8, !dbg !5203
  br label %for.cond, !dbg !5205

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !5206
  %1 = load i64, i64* %size.addr, align 8, !dbg !5208
  %cmp = icmp ult i64 %0, %1, !dbg !5209
  br i1 %cmp, label %for.body, label %for.end, !dbg !5210

for.body:                                         ; preds = %for.cond
  %2 = load [2 x i8]*, [2 x i8]** %table.addr, align 8, !dbg !5211
  %3 = load i64, i64* %i, align 8, !dbg !5213
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %2, i64 %3, !dbg !5211
  %arrayidx1 = getelementptr [2 x i8], [2 x i8]* %arrayidx, i64 0, i64 0, !dbg !5211
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !5211
  %conv = zext i8 %4 to i32, !dbg !5211
  %5 = load i8, i8* %opcode.addr, align 1, !dbg !5214
  %conv2 = zext i8 %5 to i32, !dbg !5214
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !5215
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5216

if.then:                                          ; preds = %for.body
  %6 = load [2 x i8]*, [2 x i8]** %table.addr, align 8, !dbg !5217
  %7 = load i64, i64* %i, align 8, !dbg !5218
  %arrayidx5 = getelementptr [2 x i8], [2 x i8]* %6, i64 %7, !dbg !5217
  %arrayidx6 = getelementptr [2 x i8], [2 x i8]* %arrayidx5, i64 0, i64 1, !dbg !5217
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !5217
  store i8 %8, i8* %retval, align 1, !dbg !5219
  br label %return, !dbg !5219

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5214

for.inc:                                          ; preds = %if.end
  %9 = load i64, i64* %i, align 8, !dbg !5220
  %inc = add i64 %9, 1, !dbg !5220
  store i64 %inc, i64* %i, align 8, !dbg !5220
  br label %for.cond, !dbg !5221, !llvm.loop !5222

for.end:                                          ; preds = %for.cond
  %10 = load i8, i8* %opcode.addr, align 1, !dbg !5224
  store i8 %10, i8* %retval, align 1, !dbg !5225
  br label %return, !dbg !5225

return:                                           ; preds = %for.end, %if.then
  %11 = load i8, i8* %retval, align 1, !dbg !5226
  ret i8 %11, !dbg !5226
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_lock_and_prep(%struct.spi_nor* %nor) #0 !dbg !5227 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5228, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5230, metadata !DIExpression()), !dbg !5231
  store i32 0, i32* %ret, align 4, !dbg !5231
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5232
  %lock = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 1, !dbg !5233
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !5234
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5235
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 19, !dbg !5237
  %2 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !5237
  %tobool = icmp ne %struct.spi_nor_controller_ops* %2, null, !dbg !5235
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !5238

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5239
  %controller_ops1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 19, !dbg !5240
  %4 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops1, align 8, !dbg !5240
  %prepare = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %4, i32 0, i32 0, !dbg !5241
  %5 = load i32 (%struct.spi_nor*)*, i32 (%struct.spi_nor*)** %prepare, align 8, !dbg !5241
  %tobool2 = icmp ne i32 (%struct.spi_nor*)* %5, null, !dbg !5239
  br i1 %tobool2, label %if.then, label %if.end8, !dbg !5242

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5243
  %controller_ops3 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 19, !dbg !5245
  %7 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops3, align 8, !dbg !5245
  %prepare4 = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %7, i32 0, i32 0, !dbg !5246
  %8 = load i32 (%struct.spi_nor*)*, i32 (%struct.spi_nor*)** %prepare4, align 8, !dbg !5246
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5247
  %call = call i32 %8(%struct.spi_nor* %9) #9, !dbg !5243
  store i32 %call, i32* %ret, align 4, !dbg !5248
  %10 = load i32, i32* %ret, align 4, !dbg !5249
  %tobool5 = icmp ne i32 %10, 0, !dbg !5249
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !5251

if.then6:                                         ; preds = %if.then
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5252
  %lock7 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %11, i32 0, i32 1, !dbg !5254
  call void @mutex_unlock(%struct.mutex* %lock7) #9, !dbg !5255
  %12 = load i32, i32* %ret, align 4, !dbg !5256
  store i32 %12, i32* %retval, align 4, !dbg !5257
  br label %return, !dbg !5257

if.end:                                           ; preds = %if.then
  br label %if.end8, !dbg !5258

if.end8:                                          ; preds = %if.end, %land.lhs.true, %entry
  %13 = load i32, i32* %ret, align 4, !dbg !5259
  store i32 %13, i32* %retval, align 4, !dbg !5260
  br label %return, !dbg !5260

return:                                           ; preds = %if.end8, %if.then6
  %14 = load i32, i32* %retval, align 4, !dbg !5261
  ret i32 %14, !dbg !5261
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_nor_unlock_and_unprep(%struct.spi_nor* %nor) #0 !dbg !5262 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5263, metadata !DIExpression()), !dbg !5264
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5265
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 19, !dbg !5267
  %1 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !5267
  %tobool = icmp ne %struct.spi_nor_controller_ops* %1, null, !dbg !5265
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5268

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5269
  %controller_ops1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 19, !dbg !5270
  %3 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops1, align 8, !dbg !5270
  %unprepare = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %3, i32 0, i32 1, !dbg !5271
  %4 = load void (%struct.spi_nor*)*, void (%struct.spi_nor*)** %unprepare, align 8, !dbg !5271
  %tobool2 = icmp ne void (%struct.spi_nor*)* %4, null, !dbg !5269
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5272

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5273
  %controller_ops3 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 19, !dbg !5274
  %6 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops3, align 8, !dbg !5274
  %unprepare4 = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %6, i32 0, i32 1, !dbg !5275
  %7 = load void (%struct.spi_nor*)*, void (%struct.spi_nor*)** %unprepare4, align 8, !dbg !5275
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5276
  call void %7(%struct.spi_nor* %8) #9, !dbg !5273
  br label %if.end, !dbg !5273

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5277
  %lock = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 1, !dbg !5278
  call void @mutex_unlock(%struct.mutex* %lock) #9, !dbg !5279
  ret void, !dbg !5280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.spi_nor_erase_region* @spi_nor_region_next(%struct.spi_nor_erase_region* %region) #0 !dbg !5281 {
entry:
  %retval = alloca %struct.spi_nor_erase_region*, align 8
  %region.addr = alloca %struct.spi_nor_erase_region*, align 8
  store %struct.spi_nor_erase_region* %region, %struct.spi_nor_erase_region** %region.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_region** %region.addr, metadata !5284, metadata !DIExpression()), !dbg !5285
  %0 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region.addr, align 8, !dbg !5286
  %call = call i64 @spi_nor_region_is_last(%struct.spi_nor_erase_region* %0) #9, !dbg !5288
  %tobool = icmp ne i64 %call, 0, !dbg !5288
  br i1 %tobool, label %if.then, label %if.end, !dbg !5289

if.then:                                          ; preds = %entry
  store %struct.spi_nor_erase_region* null, %struct.spi_nor_erase_region** %retval, align 8, !dbg !5290
  br label %return, !dbg !5290

if.end:                                           ; preds = %entry
  %1 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region.addr, align 8, !dbg !5291
  %incdec.ptr = getelementptr %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %1, i32 1, !dbg !5291
  store %struct.spi_nor_erase_region* %incdec.ptr, %struct.spi_nor_erase_region** %region.addr, align 8, !dbg !5291
  %2 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region.addr, align 8, !dbg !5292
  store %struct.spi_nor_erase_region* %2, %struct.spi_nor_erase_region** %retval, align 8, !dbg !5293
  br label %return, !dbg !5293

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %retval, align 8, !dbg !5294
  ret %struct.spi_nor_erase_region* %3, !dbg !5294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_nor_region_is_last(%struct.spi_nor_erase_region* %region) #0 !dbg !5295 {
entry:
  %region.addr = alloca %struct.spi_nor_erase_region*, align 8
  store %struct.spi_nor_erase_region* %region, %struct.spi_nor_erase_region** %region.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_region** %region.addr, metadata !5300, metadata !DIExpression()), !dbg !5301
  %0 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region.addr, align 8, !dbg !5302
  %offset = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %0, i32 0, i32 0, !dbg !5303
  %1 = load i64, i64* %offset, align 8, !dbg !5303
  %and = and i64 %1, 16, !dbg !5304
  ret i64 %and, !dbg !5305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_sr1_bit6_quad_enable(%struct.spi_nor* %nor) #0 !dbg !5306 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5307, metadata !DIExpression()), !dbg !5308
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5309, metadata !DIExpression()), !dbg !5310
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5311
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5312
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 4, !dbg !5313
  %2 = load i8*, i8** %bouncebuf, align 8, !dbg !5313
  %call = call i32 @spi_nor_read_sr(%struct.spi_nor* %0, i8* %2) #9, !dbg !5314
  store i32 %call, i32* %ret, align 4, !dbg !5315
  %3 = load i32, i32* %ret, align 4, !dbg !5316
  %tobool = icmp ne i32 %3, 0, !dbg !5316
  br i1 %tobool, label %if.then, label %if.end, !dbg !5318

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !5319
  store i32 %4, i32* %retval, align 4, !dbg !5320
  br label %return, !dbg !5320

if.end:                                           ; preds = %entry
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5321
  %bouncebuf1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 4, !dbg !5323
  %6 = load i8*, i8** %bouncebuf1, align 8, !dbg !5323
  %arrayidx = getelementptr i8, i8* %6, i64 0, !dbg !5321
  %7 = load i8, i8* %arrayidx, align 1, !dbg !5321
  %conv = zext i8 %7 to i64, !dbg !5321
  %and = and i64 %conv, 64, !dbg !5324
  %tobool2 = icmp ne i64 %and, 0, !dbg !5324
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5325

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5326
  br label %return, !dbg !5326

if.end4:                                          ; preds = %if.end
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5327
  %bouncebuf5 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 4, !dbg !5328
  %9 = load i8*, i8** %bouncebuf5, align 8, !dbg !5328
  %arrayidx6 = getelementptr i8, i8* %9, i64 0, !dbg !5327
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !5329
  %conv7 = zext i8 %10 to i64, !dbg !5329
  %or = or i64 %conv7, 64, !dbg !5329
  %conv8 = trunc i64 %or to i8, !dbg !5329
  store i8 %conv8, i8* %arrayidx6, align 1, !dbg !5329
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5330
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5331
  %bouncebuf9 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %12, i32 0, i32 4, !dbg !5332
  %13 = load i8*, i8** %bouncebuf9, align 8, !dbg !5332
  %arrayidx10 = getelementptr i8, i8* %13, i64 0, !dbg !5331
  %14 = load i8, i8* %arrayidx10, align 1, !dbg !5331
  %call11 = call i32 @spi_nor_write_sr1_and_check(%struct.spi_nor* %11, i8 zeroext %14) #9, !dbg !5333
  store i32 %call11, i32* %retval, align 4, !dbg !5334
  br label %return, !dbg !5334

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !5335
  ret i32 %15, !dbg !5335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_read_sr(%struct.spi_nor* %nor, i8* %sr) #0 !dbg !5336 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5337, metadata !DIExpression()), !dbg !5338
  store i8* %sr, i8** %sr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sr.addr, metadata !5339, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5341, metadata !DIExpression()), !dbg !5342
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5343
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !5345
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !5345
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !5343
  br i1 %tobool, label %if.then, label %if.else, !dbg !5346

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !5347, metadata !DIExpression()), !dbg !5349
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !5350
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !5350
  store i8 1, i8* %nbytes, align 8, !dbg !5350
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !5350
  store i8 1, i8* %buswidth, align 1, !dbg !5350
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !5350
  %bf.load = load i8, i8* %dtr, align 2, !dbg !5350
  %bf.clear = and i8 %bf.load, -2, !dbg !5350
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !5350
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !5350
  store i16 5, i16* %opcode, align 4, !dbg !5350
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !5350
  %nbytes1 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !5350
  store i8 0, i8* %nbytes1, align 8, !dbg !5350
  %buswidth2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !5350
  store i8 0, i8* %buswidth2, align 1, !dbg !5350
  %dtr3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !5350
  %bf.load4 = load i8, i8* %dtr3, align 2, !dbg !5350
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !5350
  store i8 %bf.clear5, i8* %dtr3, align 2, !dbg !5350
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !5350
  store i64 0, i64* %val, align 8, !dbg !5350
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !5350
  %nbytes6 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !5350
  store i8 0, i8* %nbytes6, align 8, !dbg !5350
  %buswidth7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !5350
  store i8 0, i8* %buswidth7, align 1, !dbg !5350
  %dtr8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !5350
  %bf.load9 = load i8, i8* %dtr8, align 2, !dbg !5350
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !5350
  store i8 %bf.clear10, i8* %dtr8, align 2, !dbg !5350
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !5350
  %buswidth11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !5350
  store i8 1, i8* %buswidth11, align 8, !dbg !5350
  %dtr12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !5350
  %bf.load13 = load i8, i8* %dtr12, align 1, !dbg !5350
  %bf.clear14 = and i8 %bf.load13, -2, !dbg !5350
  store i8 %bf.clear14, i8* %dtr12, align 1, !dbg !5350
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !5350
  store i32 1, i32* %dir, align 4, !dbg !5350
  %nbytes15 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !5350
  store i32 1, i32* %nbytes15, align 8, !dbg !5350
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !5350
  %in = bitcast %union.anon.73* %buf to i8**, !dbg !5350
  %2 = load i8*, i8** %sr.addr, align 8, !dbg !5350
  store i8* %2, i8** %in, align 8, !dbg !5350
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5351
  %spimem16 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 3, !dbg !5352
  %4 = load %struct.spi_mem*, %struct.spi_mem** %spimem16, align 8, !dbg !5352
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %4, %struct.spi_mem_op* %op) #9, !dbg !5353
  store i32 %call, i32* %ret, align 4, !dbg !5354
  br label %if.end, !dbg !5355

if.else:                                          ; preds = %entry
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5356
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 19, !dbg !5358
  %6 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !5358
  %read_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %6, i32 0, i32 2, !dbg !5359
  %7 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %read_reg, align 8, !dbg !5359
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5360
  %9 = load i8*, i8** %sr.addr, align 8, !dbg !5361
  %call17 = call i32 %7(%struct.spi_nor* %8, i8 zeroext 5, i8* %9, i64 1) #9, !dbg !5356
  store i32 %call17, i32* %ret, align 4, !dbg !5362
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %ret, align 4, !dbg !5363
  %tobool18 = icmp ne i32 %10, 0, !dbg !5363
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !5365

if.then19:                                        ; preds = %if.end
  br label %if.end20, !dbg !5366

if.end20:                                         ; preds = %if.then19, %if.end
  %11 = load i32, i32* %ret, align 4, !dbg !5367
  ret i32 %11, !dbg !5368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_write_sr1_and_check(%struct.spi_nor* %nor, i8 zeroext %sr1) #0 !dbg !5369 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sr1.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5370, metadata !DIExpression()), !dbg !5371
  store i8 %sr1, i8* %sr1.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sr1.addr, metadata !5372, metadata !DIExpression()), !dbg !5373
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5374, metadata !DIExpression()), !dbg !5375
  %0 = load i8, i8* %sr1.addr, align 1, !dbg !5376
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5377
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 4, !dbg !5378
  %2 = load i8*, i8** %bouncebuf, align 8, !dbg !5378
  %arrayidx = getelementptr i8, i8* %2, i64 0, !dbg !5377
  store i8 %0, i8* %arrayidx, align 1, !dbg !5379
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5380
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5381
  %bouncebuf1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 4, !dbg !5382
  %5 = load i8*, i8** %bouncebuf1, align 8, !dbg !5382
  %call = call i32 @spi_nor_write_sr(%struct.spi_nor* %3, i8* %5, i64 1) #9, !dbg !5383
  store i32 %call, i32* %ret, align 4, !dbg !5384
  %6 = load i32, i32* %ret, align 4, !dbg !5385
  %tobool = icmp ne i32 %6, 0, !dbg !5385
  br i1 %tobool, label %if.then, label %if.end, !dbg !5387

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %ret, align 4, !dbg !5388
  store i32 %7, i32* %retval, align 4, !dbg !5389
  br label %return, !dbg !5389

if.end:                                           ; preds = %entry
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5390
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5391
  %bouncebuf2 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 4, !dbg !5392
  %10 = load i8*, i8** %bouncebuf2, align 8, !dbg !5392
  %call3 = call i32 @spi_nor_read_sr(%struct.spi_nor* %8, i8* %10) #9, !dbg !5393
  store i32 %call3, i32* %ret, align 4, !dbg !5394
  %11 = load i32, i32* %ret, align 4, !dbg !5395
  %tobool4 = icmp ne i32 %11, 0, !dbg !5395
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5397

if.then5:                                         ; preds = %if.end
  %12 = load i32, i32* %ret, align 4, !dbg !5398
  store i32 %12, i32* %retval, align 4, !dbg !5399
  br label %return, !dbg !5399

if.end6:                                          ; preds = %if.end
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5400
  %bouncebuf7 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %13, i32 0, i32 4, !dbg !5402
  %14 = load i8*, i8** %bouncebuf7, align 8, !dbg !5402
  %arrayidx8 = getelementptr i8, i8* %14, i64 0, !dbg !5400
  %15 = load i8, i8* %arrayidx8, align 1, !dbg !5400
  %conv = zext i8 %15 to i32, !dbg !5400
  %16 = load i8, i8* %sr1.addr, align 1, !dbg !5403
  %conv9 = zext i8 %16 to i32, !dbg !5403
  %cmp = icmp ne i32 %conv, %conv9, !dbg !5404
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !5405

if.then11:                                        ; preds = %if.end6
  store i32 -5, i32* %retval, align 4, !dbg !5406
  br label %return, !dbg !5406

if.end12:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !5408
  br label %return, !dbg !5408

return:                                           ; preds = %if.end12, %if.then11, %if.then5, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !5409
  ret i32 %17, !dbg !5409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_sr2_bit1_quad_enable(%struct.spi_nor* %nor) #0 !dbg !5410 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5411, metadata !DIExpression()), !dbg !5412
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5413, metadata !DIExpression()), !dbg !5414
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5415
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 18, !dbg !5417
  %1 = load i32, i32* %flags, align 4, !dbg !5417
  %and = and i32 %1, 1024, !dbg !5418
  %tobool = icmp ne i32 %and, 0, !dbg !5418
  br i1 %tobool, label %if.then, label %if.end, !dbg !5419

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5420
  %call = call i32 @spi_nor_write_16bit_cr_and_check(%struct.spi_nor* %2, i8 zeroext 2) #9, !dbg !5421
  store i32 %call, i32* %retval, align 4, !dbg !5422
  br label %return, !dbg !5422

if.end:                                           ; preds = %entry
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5423
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5424
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 4, !dbg !5425
  %5 = load i8*, i8** %bouncebuf, align 8, !dbg !5425
  %call1 = call i32 @spi_nor_read_cr(%struct.spi_nor* %3, i8* %5) #9, !dbg !5426
  store i32 %call1, i32* %ret, align 4, !dbg !5427
  %6 = load i32, i32* %ret, align 4, !dbg !5428
  %tobool2 = icmp ne i32 %6, 0, !dbg !5428
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5430

if.then3:                                         ; preds = %if.end
  %7 = load i32, i32* %ret, align 4, !dbg !5431
  store i32 %7, i32* %retval, align 4, !dbg !5432
  br label %return, !dbg !5432

if.end4:                                          ; preds = %if.end
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5433
  %bouncebuf5 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 4, !dbg !5435
  %9 = load i8*, i8** %bouncebuf5, align 8, !dbg !5435
  %arrayidx = getelementptr i8, i8* %9, i64 0, !dbg !5433
  %10 = load i8, i8* %arrayidx, align 1, !dbg !5433
  %conv = zext i8 %10 to i64, !dbg !5433
  %and6 = and i64 %conv, 2, !dbg !5436
  %tobool7 = icmp ne i64 %and6, 0, !dbg !5436
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !5437

if.then8:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !5438
  br label %return, !dbg !5438

if.end9:                                          ; preds = %if.end4
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5439
  %bouncebuf10 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %11, i32 0, i32 4, !dbg !5440
  %12 = load i8*, i8** %bouncebuf10, align 8, !dbg !5440
  %arrayidx11 = getelementptr i8, i8* %12, i64 0, !dbg !5439
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !5441
  %conv12 = zext i8 %13 to i64, !dbg !5441
  %or = or i64 %conv12, 2, !dbg !5441
  %conv13 = trunc i64 %or to i8, !dbg !5441
  store i8 %conv13, i8* %arrayidx11, align 1, !dbg !5441
  %14 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5442
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5443
  %bouncebuf14 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %15, i32 0, i32 4, !dbg !5444
  %16 = load i8*, i8** %bouncebuf14, align 8, !dbg !5444
  %arrayidx15 = getelementptr i8, i8* %16, i64 0, !dbg !5443
  %17 = load i8, i8* %arrayidx15, align 1, !dbg !5443
  %call16 = call i32 @spi_nor_write_16bit_cr_and_check(%struct.spi_nor* %14, i8 zeroext %17) #9, !dbg !5445
  store i32 %call16, i32* %retval, align 4, !dbg !5446
  br label %return, !dbg !5446

return:                                           ; preds = %if.end9, %if.then8, %if.then3, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !5447
  ret i32 %18, !dbg !5447
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_write_16bit_cr_and_check(%struct.spi_nor* %nor, i8 zeroext %cr) #0 !dbg !5448 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %cr.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %sr_cr = alloca i8*, align 8
  %sr_written = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5449, metadata !DIExpression()), !dbg !5450
  store i8 %cr, i8* %cr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cr.addr, metadata !5451, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5453, metadata !DIExpression()), !dbg !5454
  call void @llvm.dbg.declare(metadata i8** %sr_cr, metadata !5455, metadata !DIExpression()), !dbg !5456
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5457
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 4, !dbg !5458
  %1 = load i8*, i8** %bouncebuf, align 8, !dbg !5458
  store i8* %1, i8** %sr_cr, align 8, !dbg !5456
  call void @llvm.dbg.declare(metadata i8* %sr_written, metadata !5459, metadata !DIExpression()), !dbg !5460
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5461
  %3 = load i8*, i8** %sr_cr, align 8, !dbg !5462
  %call = call i32 @spi_nor_read_sr(%struct.spi_nor* %2, i8* %3) #9, !dbg !5463
  store i32 %call, i32* %ret, align 4, !dbg !5464
  %4 = load i32, i32* %ret, align 4, !dbg !5465
  %tobool = icmp ne i32 %4, 0, !dbg !5465
  br i1 %tobool, label %if.then, label %if.end, !dbg !5467

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !5468
  store i32 %5, i32* %retval, align 4, !dbg !5469
  br label %return, !dbg !5469

if.end:                                           ; preds = %entry
  %6 = load i8, i8* %cr.addr, align 1, !dbg !5470
  %7 = load i8*, i8** %sr_cr, align 8, !dbg !5471
  %arrayidx = getelementptr i8, i8* %7, i64 1, !dbg !5471
  store i8 %6, i8* %arrayidx, align 1, !dbg !5472
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5473
  %9 = load i8*, i8** %sr_cr, align 8, !dbg !5474
  %call1 = call i32 @spi_nor_write_sr(%struct.spi_nor* %8, i8* %9, i64 2) #9, !dbg !5475
  store i32 %call1, i32* %ret, align 4, !dbg !5476
  %10 = load i32, i32* %ret, align 4, !dbg !5477
  %tobool2 = icmp ne i32 %10, 0, !dbg !5477
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5479

if.then3:                                         ; preds = %if.end
  %11 = load i32, i32* %ret, align 4, !dbg !5480
  store i32 %11, i32* %retval, align 4, !dbg !5481
  br label %return, !dbg !5481

if.end4:                                          ; preds = %if.end
  %12 = load i8*, i8** %sr_cr, align 8, !dbg !5482
  %arrayidx5 = getelementptr i8, i8* %12, i64 0, !dbg !5482
  %13 = load i8, i8* %arrayidx5, align 1, !dbg !5482
  store i8 %13, i8* %sr_written, align 1, !dbg !5483
  %14 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5484
  %15 = load i8*, i8** %sr_cr, align 8, !dbg !5485
  %call6 = call i32 @spi_nor_read_sr(%struct.spi_nor* %14, i8* %15) #9, !dbg !5486
  store i32 %call6, i32* %ret, align 4, !dbg !5487
  %16 = load i32, i32* %ret, align 4, !dbg !5488
  %tobool7 = icmp ne i32 %16, 0, !dbg !5488
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !5490

if.then8:                                         ; preds = %if.end4
  %17 = load i32, i32* %ret, align 4, !dbg !5491
  store i32 %17, i32* %retval, align 4, !dbg !5492
  br label %return, !dbg !5492

if.end9:                                          ; preds = %if.end4
  %18 = load i8, i8* %sr_written, align 1, !dbg !5493
  %conv = zext i8 %18 to i32, !dbg !5493
  %19 = load i8*, i8** %sr_cr, align 8, !dbg !5495
  %arrayidx10 = getelementptr i8, i8* %19, i64 0, !dbg !5495
  %20 = load i8, i8* %arrayidx10, align 1, !dbg !5495
  %conv11 = zext i8 %20 to i32, !dbg !5495
  %cmp = icmp ne i32 %conv, %conv11, !dbg !5496
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !5497

if.then13:                                        ; preds = %if.end9
  store i32 -5, i32* %retval, align 4, !dbg !5498
  br label %return, !dbg !5498

if.end14:                                         ; preds = %if.end9
  %21 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5500
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %21, i32 0, i32 18, !dbg !5502
  %22 = load i32, i32* %flags, align 4, !dbg !5502
  %and = and i32 %22, 1024, !dbg !5503
  %tobool15 = icmp ne i32 %and, 0, !dbg !5503
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !5504

if.then16:                                        ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !5505
  br label %return, !dbg !5505

if.end17:                                         ; preds = %if.end14
  %23 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5506
  %24 = load i8*, i8** %sr_cr, align 8, !dbg !5507
  %arrayidx18 = getelementptr i8, i8* %24, i64 1, !dbg !5507
  %call19 = call i32 @spi_nor_read_cr(%struct.spi_nor* %23, i8* %arrayidx18) #9, !dbg !5508
  store i32 %call19, i32* %ret, align 4, !dbg !5509
  %25 = load i32, i32* %ret, align 4, !dbg !5510
  %tobool20 = icmp ne i32 %25, 0, !dbg !5510
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !5512

if.then21:                                        ; preds = %if.end17
  %26 = load i32, i32* %ret, align 4, !dbg !5513
  store i32 %26, i32* %retval, align 4, !dbg !5514
  br label %return, !dbg !5514

if.end22:                                         ; preds = %if.end17
  %27 = load i8, i8* %cr.addr, align 1, !dbg !5515
  %conv23 = zext i8 %27 to i32, !dbg !5515
  %28 = load i8*, i8** %sr_cr, align 8, !dbg !5517
  %arrayidx24 = getelementptr i8, i8* %28, i64 1, !dbg !5517
  %29 = load i8, i8* %arrayidx24, align 1, !dbg !5517
  %conv25 = zext i8 %29 to i32, !dbg !5517
  %cmp26 = icmp ne i32 %conv23, %conv25, !dbg !5518
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !5519

if.then28:                                        ; preds = %if.end22
  store i32 -5, i32* %retval, align 4, !dbg !5520
  br label %return, !dbg !5520

if.end29:                                         ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !5522
  br label %return, !dbg !5522

return:                                           ; preds = %if.end29, %if.then28, %if.then21, %if.then16, %if.then13, %if.then8, %if.then3, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !5523
  ret i32 %30, !dbg !5523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_read_cr(%struct.spi_nor* %nor, i8* %cr) #0 !dbg !5524 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %cr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5525, metadata !DIExpression()), !dbg !5526
  store i8* %cr, i8** %cr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cr.addr, metadata !5527, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5529, metadata !DIExpression()), !dbg !5530
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5531
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !5533
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !5533
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !5531
  br i1 %tobool, label %if.then, label %if.else, !dbg !5534

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !5535, metadata !DIExpression()), !dbg !5537
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !5538
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !5538
  store i8 1, i8* %nbytes, align 8, !dbg !5538
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !5538
  store i8 1, i8* %buswidth, align 1, !dbg !5538
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !5538
  %bf.load = load i8, i8* %dtr, align 2, !dbg !5538
  %bf.clear = and i8 %bf.load, -2, !dbg !5538
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !5538
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !5538
  store i16 53, i16* %opcode, align 4, !dbg !5538
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !5538
  %nbytes1 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !5538
  store i8 0, i8* %nbytes1, align 8, !dbg !5538
  %buswidth2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !5538
  store i8 0, i8* %buswidth2, align 1, !dbg !5538
  %dtr3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !5538
  %bf.load4 = load i8, i8* %dtr3, align 2, !dbg !5538
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !5538
  store i8 %bf.clear5, i8* %dtr3, align 2, !dbg !5538
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !5538
  store i64 0, i64* %val, align 8, !dbg !5538
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !5538
  %nbytes6 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !5538
  store i8 0, i8* %nbytes6, align 8, !dbg !5538
  %buswidth7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !5538
  store i8 0, i8* %buswidth7, align 1, !dbg !5538
  %dtr8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !5538
  %bf.load9 = load i8, i8* %dtr8, align 2, !dbg !5538
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !5538
  store i8 %bf.clear10, i8* %dtr8, align 2, !dbg !5538
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !5538
  %buswidth11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !5538
  store i8 1, i8* %buswidth11, align 8, !dbg !5538
  %dtr12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !5538
  %bf.load13 = load i8, i8* %dtr12, align 1, !dbg !5538
  %bf.clear14 = and i8 %bf.load13, -2, !dbg !5538
  store i8 %bf.clear14, i8* %dtr12, align 1, !dbg !5538
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !5538
  store i32 1, i32* %dir, align 4, !dbg !5538
  %nbytes15 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !5538
  store i32 1, i32* %nbytes15, align 8, !dbg !5538
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !5538
  %in = bitcast %union.anon.73* %buf to i8**, !dbg !5538
  %2 = load i8*, i8** %cr.addr, align 8, !dbg !5538
  store i8* %2, i8** %in, align 8, !dbg !5538
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5539
  %spimem16 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 3, !dbg !5540
  %4 = load %struct.spi_mem*, %struct.spi_mem** %spimem16, align 8, !dbg !5540
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %4, %struct.spi_mem_op* %op) #9, !dbg !5541
  store i32 %call, i32* %ret, align 4, !dbg !5542
  br label %if.end, !dbg !5543

if.else:                                          ; preds = %entry
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5544
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 19, !dbg !5546
  %6 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !5546
  %read_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %6, i32 0, i32 2, !dbg !5547
  %7 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %read_reg, align 8, !dbg !5547
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5548
  %9 = load i8*, i8** %cr.addr, align 8, !dbg !5549
  %call17 = call i32 %7(%struct.spi_nor* %8, i8 zeroext 53, i8* %9, i64 1) #9, !dbg !5544
  store i32 %call17, i32* %ret, align 4, !dbg !5550
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %ret, align 4, !dbg !5551
  %tobool18 = icmp ne i32 %10, 0, !dbg !5551
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !5553

if.then19:                                        ; preds = %if.end
  br label %if.end20, !dbg !5554

if.end20:                                         ; preds = %if.then19, %if.end
  %11 = load i32, i32* %ret, align 4, !dbg !5555
  ret i32 %11, !dbg !5556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_sr2_bit7_quad_enable(%struct.spi_nor* %nor) #0 !dbg !5557 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sr2 = alloca i8*, align 8
  %ret = alloca i32, align 4
  %sr2_written = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5558, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.declare(metadata i8** %sr2, metadata !5560, metadata !DIExpression()), !dbg !5561
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5562
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 4, !dbg !5563
  %1 = load i8*, i8** %bouncebuf, align 8, !dbg !5563
  store i8* %1, i8** %sr2, align 8, !dbg !5561
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5564, metadata !DIExpression()), !dbg !5565
  call void @llvm.dbg.declare(metadata i8* %sr2_written, metadata !5566, metadata !DIExpression()), !dbg !5567
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5568
  %3 = load i8*, i8** %sr2, align 8, !dbg !5569
  %call = call i32 @spi_nor_read_sr2(%struct.spi_nor* %2, i8* %3) #9, !dbg !5570
  store i32 %call, i32* %ret, align 4, !dbg !5571
  %4 = load i32, i32* %ret, align 4, !dbg !5572
  %tobool = icmp ne i32 %4, 0, !dbg !5572
  br i1 %tobool, label %if.then, label %if.end, !dbg !5574

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !5575
  store i32 %5, i32* %retval, align 4, !dbg !5576
  br label %return, !dbg !5576

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %sr2, align 8, !dbg !5577
  %7 = load i8, i8* %6, align 1, !dbg !5579
  %conv = zext i8 %7 to i64, !dbg !5579
  %and = and i64 %conv, 128, !dbg !5580
  %tobool1 = icmp ne i64 %and, 0, !dbg !5580
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !5581

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5582
  br label %return, !dbg !5582

if.end3:                                          ; preds = %if.end
  %8 = load i8*, i8** %sr2, align 8, !dbg !5583
  %9 = load i8, i8* %8, align 1, !dbg !5584
  %conv4 = zext i8 %9 to i64, !dbg !5584
  %or = or i64 %conv4, 128, !dbg !5584
  %conv5 = trunc i64 %or to i8, !dbg !5584
  store i8 %conv5, i8* %8, align 1, !dbg !5584
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5585
  %11 = load i8*, i8** %sr2, align 8, !dbg !5586
  %call6 = call i32 @spi_nor_write_sr2(%struct.spi_nor* %10, i8* %11) #9, !dbg !5587
  store i32 %call6, i32* %ret, align 4, !dbg !5588
  %12 = load i32, i32* %ret, align 4, !dbg !5589
  %tobool7 = icmp ne i32 %12, 0, !dbg !5589
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !5591

if.then8:                                         ; preds = %if.end3
  %13 = load i32, i32* %ret, align 4, !dbg !5592
  store i32 %13, i32* %retval, align 4, !dbg !5593
  br label %return, !dbg !5593

if.end9:                                          ; preds = %if.end3
  %14 = load i8*, i8** %sr2, align 8, !dbg !5594
  %15 = load i8, i8* %14, align 1, !dbg !5595
  store i8 %15, i8* %sr2_written, align 1, !dbg !5596
  %16 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5597
  %17 = load i8*, i8** %sr2, align 8, !dbg !5598
  %call10 = call i32 @spi_nor_read_sr2(%struct.spi_nor* %16, i8* %17) #9, !dbg !5599
  store i32 %call10, i32* %ret, align 4, !dbg !5600
  %18 = load i32, i32* %ret, align 4, !dbg !5601
  %tobool11 = icmp ne i32 %18, 0, !dbg !5601
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !5603

if.then12:                                        ; preds = %if.end9
  %19 = load i32, i32* %ret, align 4, !dbg !5604
  store i32 %19, i32* %retval, align 4, !dbg !5605
  br label %return, !dbg !5605

if.end13:                                         ; preds = %if.end9
  %20 = load i8*, i8** %sr2, align 8, !dbg !5606
  %21 = load i8, i8* %20, align 1, !dbg !5608
  %conv14 = zext i8 %21 to i32, !dbg !5608
  %22 = load i8, i8* %sr2_written, align 1, !dbg !5609
  %conv15 = zext i8 %22 to i32, !dbg !5609
  %cmp = icmp ne i32 %conv14, %conv15, !dbg !5610
  br i1 %cmp, label %if.then17, label %if.end18, !dbg !5611

if.then17:                                        ; preds = %if.end13
  store i32 -5, i32* %retval, align 4, !dbg !5612
  br label %return, !dbg !5612

if.end18:                                         ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !5614
  br label %return, !dbg !5614

return:                                           ; preds = %if.end18, %if.then17, %if.then12, %if.then8, %if.then2, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !5615
  ret i32 %23, !dbg !5615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_read_sr2(%struct.spi_nor* %nor, i8* %sr2) #0 !dbg !5616 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sr2.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5617, metadata !DIExpression()), !dbg !5618
  store i8* %sr2, i8** %sr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sr2.addr, metadata !5619, metadata !DIExpression()), !dbg !5620
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5621, metadata !DIExpression()), !dbg !5622
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5623
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !5625
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !5625
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !5623
  br i1 %tobool, label %if.then, label %if.else, !dbg !5626

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !5627, metadata !DIExpression()), !dbg !5629
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !5630
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !5630
  store i8 1, i8* %nbytes, align 8, !dbg !5630
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !5630
  store i8 1, i8* %buswidth, align 1, !dbg !5630
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !5630
  %bf.load = load i8, i8* %dtr, align 2, !dbg !5630
  %bf.clear = and i8 %bf.load, -2, !dbg !5630
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !5630
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !5630
  store i16 63, i16* %opcode, align 4, !dbg !5630
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !5630
  %nbytes1 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !5630
  store i8 0, i8* %nbytes1, align 8, !dbg !5630
  %buswidth2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !5630
  store i8 0, i8* %buswidth2, align 1, !dbg !5630
  %dtr3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !5630
  %bf.load4 = load i8, i8* %dtr3, align 2, !dbg !5630
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !5630
  store i8 %bf.clear5, i8* %dtr3, align 2, !dbg !5630
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !5630
  store i64 0, i64* %val, align 8, !dbg !5630
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !5630
  %nbytes6 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !5630
  store i8 0, i8* %nbytes6, align 8, !dbg !5630
  %buswidth7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !5630
  store i8 0, i8* %buswidth7, align 1, !dbg !5630
  %dtr8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !5630
  %bf.load9 = load i8, i8* %dtr8, align 2, !dbg !5630
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !5630
  store i8 %bf.clear10, i8* %dtr8, align 2, !dbg !5630
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !5630
  %buswidth11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !5630
  store i8 1, i8* %buswidth11, align 8, !dbg !5630
  %dtr12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !5630
  %bf.load13 = load i8, i8* %dtr12, align 1, !dbg !5630
  %bf.clear14 = and i8 %bf.load13, -2, !dbg !5630
  store i8 %bf.clear14, i8* %dtr12, align 1, !dbg !5630
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !5630
  store i32 1, i32* %dir, align 4, !dbg !5630
  %nbytes15 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !5630
  store i32 1, i32* %nbytes15, align 8, !dbg !5630
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !5630
  %in = bitcast %union.anon.73* %buf to i8**, !dbg !5630
  %2 = load i8*, i8** %sr2.addr, align 8, !dbg !5630
  store i8* %2, i8** %in, align 8, !dbg !5630
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5631
  %spimem16 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 3, !dbg !5632
  %4 = load %struct.spi_mem*, %struct.spi_mem** %spimem16, align 8, !dbg !5632
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %4, %struct.spi_mem_op* %op) #9, !dbg !5633
  store i32 %call, i32* %ret, align 4, !dbg !5634
  br label %if.end, !dbg !5635

if.else:                                          ; preds = %entry
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5636
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 19, !dbg !5638
  %6 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !5638
  %read_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %6, i32 0, i32 2, !dbg !5639
  %7 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %read_reg, align 8, !dbg !5639
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5640
  %9 = load i8*, i8** %sr2.addr, align 8, !dbg !5641
  %call17 = call i32 %7(%struct.spi_nor* %8, i8 zeroext 63, i8* %9, i64 1) #9, !dbg !5636
  store i32 %call17, i32* %ret, align 4, !dbg !5642
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %ret, align 4, !dbg !5643
  %tobool18 = icmp ne i32 %10, 0, !dbg !5643
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !5645

if.then19:                                        ; preds = %if.end
  br label %if.end20, !dbg !5646

if.end20:                                         ; preds = %if.then19, %if.end
  %11 = load i32, i32* %ret, align 4, !dbg !5647
  ret i32 %11, !dbg !5648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_write_sr2(%struct.spi_nor* %nor, i8* %sr2) #0 !dbg !5649 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sr2.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5652, metadata !DIExpression()), !dbg !5653
  store i8* %sr2, i8** %sr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sr2.addr, metadata !5654, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5656, metadata !DIExpression()), !dbg !5657
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5658
  %call = call i32 @spi_nor_write_enable(%struct.spi_nor* %0) #9, !dbg !5659
  store i32 %call, i32* %ret, align 4, !dbg !5660
  %1 = load i32, i32* %ret, align 4, !dbg !5661
  %tobool = icmp ne i32 %1, 0, !dbg !5661
  br i1 %tobool, label %if.then, label %if.end, !dbg !5663

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !5664
  store i32 %2, i32* %retval, align 4, !dbg !5665
  br label %return, !dbg !5665

if.end:                                           ; preds = %entry
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5666
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 3, !dbg !5668
  %4 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !5668
  %tobool1 = icmp ne %struct.spi_mem* %4, null, !dbg !5666
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !5669

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !5670, metadata !DIExpression()), !dbg !5672
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !5673
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !5673
  store i8 1, i8* %nbytes, align 8, !dbg !5673
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !5673
  store i8 1, i8* %buswidth, align 1, !dbg !5673
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !5673
  %bf.load = load i8, i8* %dtr, align 2, !dbg !5673
  %bf.clear = and i8 %bf.load, -2, !dbg !5673
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !5673
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !5673
  store i16 62, i16* %opcode, align 4, !dbg !5673
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !5673
  %nbytes3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !5673
  store i8 0, i8* %nbytes3, align 8, !dbg !5673
  %buswidth4 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !5673
  store i8 0, i8* %buswidth4, align 1, !dbg !5673
  %dtr5 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !5673
  %bf.load6 = load i8, i8* %dtr5, align 2, !dbg !5673
  %bf.clear7 = and i8 %bf.load6, -2, !dbg !5673
  store i8 %bf.clear7, i8* %dtr5, align 2, !dbg !5673
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !5673
  store i64 0, i64* %val, align 8, !dbg !5673
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !5673
  %nbytes8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !5673
  store i8 0, i8* %nbytes8, align 8, !dbg !5673
  %buswidth9 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !5673
  store i8 0, i8* %buswidth9, align 1, !dbg !5673
  %dtr10 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !5673
  %bf.load11 = load i8, i8* %dtr10, align 2, !dbg !5673
  %bf.clear12 = and i8 %bf.load11, -2, !dbg !5673
  store i8 %bf.clear12, i8* %dtr10, align 2, !dbg !5673
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !5673
  %buswidth13 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !5673
  store i8 1, i8* %buswidth13, align 8, !dbg !5673
  %dtr14 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !5673
  %bf.load15 = load i8, i8* %dtr14, align 1, !dbg !5673
  %bf.clear16 = and i8 %bf.load15, -2, !dbg !5673
  store i8 %bf.clear16, i8* %dtr14, align 1, !dbg !5673
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !5673
  store i32 2, i32* %dir, align 4, !dbg !5673
  %nbytes17 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !5673
  store i32 1, i32* %nbytes17, align 8, !dbg !5673
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !5673
  %out = bitcast %union.anon.73* %buf to i8**, !dbg !5673
  %5 = load i8*, i8** %sr2.addr, align 8, !dbg !5673
  store i8* %5, i8** %out, align 8, !dbg !5673
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5674
  %spimem18 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 3, !dbg !5675
  %7 = load %struct.spi_mem*, %struct.spi_mem** %spimem18, align 8, !dbg !5675
  %call19 = call i32 @spi_mem_exec_op(%struct.spi_mem* %7, %struct.spi_mem_op* %op) #9, !dbg !5676
  store i32 %call19, i32* %ret, align 4, !dbg !5677
  br label %if.end21, !dbg !5678

if.else:                                          ; preds = %if.end
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5679
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 19, !dbg !5681
  %9 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !5681
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %9, i32 0, i32 3, !dbg !5682
  %10 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !5682
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5683
  %12 = load i8*, i8** %sr2.addr, align 8, !dbg !5684
  %call20 = call i32 %10(%struct.spi_nor* %11, i8 zeroext 62, i8* %12, i64 1) #9, !dbg !5679
  store i32 %call20, i32* %ret, align 4, !dbg !5685
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then2
  %13 = load i32, i32* %ret, align 4, !dbg !5686
  %tobool22 = icmp ne i32 %13, 0, !dbg !5686
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5688

if.then23:                                        ; preds = %if.end21
  %14 = load i32, i32* %ret, align 4, !dbg !5689
  store i32 %14, i32* %retval, align 4, !dbg !5691
  br label %return, !dbg !5691

if.end24:                                         ; preds = %if.end21
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5692
  %call25 = call i32 @spi_nor_wait_till_ready(%struct.spi_nor* %15) #9, !dbg !5693
  store i32 %call25, i32* %retval, align 4, !dbg !5694
  br label %return, !dbg !5694

return:                                           ; preds = %if.end24, %if.then23, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !5695
  ret i32 %16, !dbg !5695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_nor_set_pp_settings(%struct.spi_nor_pp_command* %pp, i8 zeroext %opcode, i32 %proto) #0 !dbg !5696 {
entry:
  %pp.addr = alloca %struct.spi_nor_pp_command*, align 8
  %opcode.addr = alloca i8, align 1
  %proto.addr = alloca i32, align 4
  store %struct.spi_nor_pp_command* %pp, %struct.spi_nor_pp_command** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_pp_command** %pp.addr, metadata !5700, metadata !DIExpression()), !dbg !5701
  store i8 %opcode, i8* %opcode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode.addr, metadata !5702, metadata !DIExpression()), !dbg !5703
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !5704, metadata !DIExpression()), !dbg !5705
  %0 = load i8, i8* %opcode.addr, align 1, !dbg !5706
  %1 = load %struct.spi_nor_pp_command*, %struct.spi_nor_pp_command** %pp.addr, align 8, !dbg !5707
  %opcode1 = getelementptr inbounds %struct.spi_nor_pp_command, %struct.spi_nor_pp_command* %1, i32 0, i32 0, !dbg !5708
  store i8 %0, i8* %opcode1, align 4, !dbg !5709
  %2 = load i32, i32* %proto.addr, align 4, !dbg !5710
  %3 = load %struct.spi_nor_pp_command*, %struct.spi_nor_pp_command** %pp.addr, align 8, !dbg !5711
  %proto2 = getelementptr inbounds %struct.spi_nor_pp_command, %struct.spi_nor_pp_command* %3, i32 0, i32 1, !dbg !5712
  store i32 %2, i32* %proto2, align 4, !dbg !5713
  ret void, !dbg !5714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_hwcaps_read2cmd(i32 %hwcaps) #0 !dbg !4091 {
entry:
  %hwcaps.addr = alloca i32, align 4
  store i32 %hwcaps, i32* %hwcaps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hwcaps.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  %0 = load i32, i32* %hwcaps.addr, align 4, !dbg !5717
  %call = call i32 @spi_nor_hwcaps2cmd(i32 %0, [2 x i32]* getelementptr inbounds ([15 x [2 x i32]], [15 x [2 x i32]]* @spi_nor_hwcaps_read2cmd.hwcaps_read2cmd, i64 0, i64 0), i64 15) #9, !dbg !5718
  ret i32 %call, !dbg !5719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_hwcaps2cmd(i32 %hwcaps, [2 x i32]* %table, i64 %size) #0 !dbg !5720 {
entry:
  %retval = alloca i32, align 4
  %hwcaps.addr = alloca i32, align 4
  %table.addr = alloca [2 x i32]*, align 8
  %size.addr = alloca i64, align 8
  %i = alloca i64, align 8
  store i32 %hwcaps, i32* %hwcaps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hwcaps.addr, metadata !5725, metadata !DIExpression()), !dbg !5726
  store [2 x i32]* %table, [2 x i32]** %table.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %table.addr, metadata !5727, metadata !DIExpression()), !dbg !5728
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5729, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5731, metadata !DIExpression()), !dbg !5732
  store i64 0, i64* %i, align 8, !dbg !5733
  br label %for.cond, !dbg !5735

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !5736
  %1 = load i64, i64* %size.addr, align 8, !dbg !5738
  %cmp = icmp ult i64 %0, %1, !dbg !5739
  br i1 %cmp, label %for.body, label %for.end, !dbg !5740

for.body:                                         ; preds = %for.cond
  %2 = load [2 x i32]*, [2 x i32]** %table.addr, align 8, !dbg !5741
  %3 = load i64, i64* %i, align 8, !dbg !5743
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %2, i64 %3, !dbg !5741
  %arrayidx1 = getelementptr [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 0, !dbg !5741
  %4 = load i32, i32* %arrayidx1, align 4, !dbg !5741
  %5 = load i32, i32* %hwcaps.addr, align 4, !dbg !5744
  %cmp2 = icmp eq i32 %4, %5, !dbg !5745
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5746

if.then:                                          ; preds = %for.body
  %6 = load [2 x i32]*, [2 x i32]** %table.addr, align 8, !dbg !5747
  %7 = load i64, i64* %i, align 8, !dbg !5748
  %arrayidx3 = getelementptr [2 x i32], [2 x i32]* %6, i64 %7, !dbg !5747
  %arrayidx4 = getelementptr [2 x i32], [2 x i32]* %arrayidx3, i64 0, i64 1, !dbg !5747
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !5747
  store i32 %8, i32* %retval, align 4, !dbg !5749
  br label %return, !dbg !5749

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5744

for.inc:                                          ; preds = %if.end
  %9 = load i64, i64* %i, align 8, !dbg !5750
  %inc = add i64 %9, 1, !dbg !5750
  store i64 %inc, i64* %i, align 8, !dbg !5750
  br label %for.cond, !dbg !5751, !llvm.loop !5752

for.end:                                          ; preds = %for.cond
  store i32 -22, i32* %retval, align 4, !dbg !5754
  br label %return, !dbg !5754

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !5755
  ret i32 %10, !dbg !5755
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_nor_set_erase_type(%struct.spi_nor_erase_type* %erase, i32 %size, i8 zeroext %opcode) #0 !dbg !5756 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !5760, metadata !DIExpression()), !dbg !5763
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !5765, metadata !DIExpression()), !dbg !5766
  %erase.addr = alloca %struct.spi_nor_erase_type*, align 8
  %size.addr = alloca i32, align 4
  %opcode.addr = alloca i8, align 1
  store %struct.spi_nor_erase_type* %erase, %struct.spi_nor_erase_type** %erase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_type** %erase.addr, metadata !5767, metadata !DIExpression()), !dbg !5768
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5769, metadata !DIExpression()), !dbg !5770
  store i8 %opcode, i8* %opcode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode.addr, metadata !5771, metadata !DIExpression()), !dbg !5772
  %0 = load i32, i32* %size.addr, align 4, !dbg !5773
  %1 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase.addr, align 8, !dbg !5774
  %size1 = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %1, i32 0, i32 0, !dbg !5775
  store i32 %0, i32* %size1, align 4, !dbg !5776
  %2 = load i8, i8* %opcode.addr, align 1, !dbg !5777
  %3 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase.addr, align 8, !dbg !5778
  %opcode2 = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %3, i32 0, i32 3, !dbg !5779
  store i8 %2, i8* %opcode2, align 4, !dbg !5780
  %4 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase.addr, align 8, !dbg !5781
  %size3 = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %4, i32 0, i32 0, !dbg !5782
  %5 = load i32, i32* %size3, align 4, !dbg !5782
  store i32 %5, i32* %x.addr.i, align 4
  %6 = load i32, i32* %x.addr.i, align 4, !dbg !5783
  %7 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %6, i32 -1) #10, !dbg !5784, !srcloc !5785
  store i32 %7, i32* %r.i, align 4, !dbg !5784
  %8 = load i32, i32* %r.i, align 4, !dbg !5786
  %add.i = add i32 %8, 1, !dbg !5787
  %sub = sub i32 %add.i, 1, !dbg !5788
  %9 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase.addr, align 8, !dbg !5789
  %size_shift = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %9, i32 0, i32 1, !dbg !5790
  store i32 %sub, i32* %size_shift, align 4, !dbg !5791
  %10 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase.addr, align 8, !dbg !5792
  %size_shift4 = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %10, i32 0, i32 1, !dbg !5793
  %11 = load i32, i32* %size_shift4, align 4, !dbg !5793
  %shl = shl i32 1, %11, !dbg !5794
  %sub5 = sub i32 %shl, 1, !dbg !5795
  %12 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase.addr, align 8, !dbg !5796
  %size_mask = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %12, i32 0, i32 2, !dbg !5797
  store i32 %sub5, i32* %size_mask, align 4, !dbg !5798
  ret void, !dbg !5799
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_nor_init_uniform_erase_map(%struct.spi_nor_erase_map* %map, i8 zeroext %erase_mask, i64 %flash_size) #0 !dbg !5800 {
entry:
  %map.addr = alloca %struct.spi_nor_erase_map*, align 8
  %erase_mask.addr = alloca i8, align 1
  %flash_size.addr = alloca i64, align 8
  store %struct.spi_nor_erase_map* %map, %struct.spi_nor_erase_map** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_map** %map.addr, metadata !5804, metadata !DIExpression()), !dbg !5805
  store i8 %erase_mask, i8* %erase_mask.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %erase_mask.addr, metadata !5806, metadata !DIExpression()), !dbg !5807
  store i64 %flash_size, i64* %flash_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flash_size.addr, metadata !5808, metadata !DIExpression()), !dbg !5809
  %0 = load i8, i8* %erase_mask.addr, align 1, !dbg !5810
  %conv = zext i8 %0 to i64, !dbg !5810
  %and = and i64 %conv, 15, !dbg !5811
  %or = or i64 %and, 16, !dbg !5812
  %1 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !5813
  %uniform_region = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %1, i32 0, i32 1, !dbg !5814
  %offset = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %uniform_region, i32 0, i32 0, !dbg !5815
  store i64 %or, i64* %offset, align 8, !dbg !5816
  %2 = load i64, i64* %flash_size.addr, align 8, !dbg !5817
  %3 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !5818
  %uniform_region1 = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %3, i32 0, i32 1, !dbg !5819
  %size = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %uniform_region1, i32 0, i32 1, !dbg !5820
  store i64 %2, i64* %size, align 8, !dbg !5821
  %4 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !5822
  %uniform_region2 = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %4, i32 0, i32 1, !dbg !5823
  %5 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !5824
  %regions = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %5, i32 0, i32 0, !dbg !5825
  store %struct.spi_nor_erase_region* %uniform_region2, %struct.spi_nor_erase_region** %regions, align 8, !dbg !5826
  %6 = load i8, i8* %erase_mask.addr, align 1, !dbg !5827
  %7 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !5828
  %uniform_erase_type = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %7, i32 0, i32 3, !dbg !5829
  store i8 %6, i8* %uniform_erase_type, align 8, !dbg !5830
  ret void, !dbg !5831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_post_bfpt_fixups(%struct.spi_nor* %nor, %struct.sfdp_parameter_header* %bfpt_header, %struct.sfdp_bfpt* %bfpt, %struct.spi_nor_flash_parameter* %params) #0 !dbg !5832 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %bfpt_header.addr = alloca %struct.sfdp_parameter_header*, align 8
  %bfpt.addr = alloca %struct.sfdp_bfpt*, align 8
  %params.addr = alloca %struct.spi_nor_flash_parameter*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5833, metadata !DIExpression()), !dbg !5834
  store %struct.sfdp_parameter_header* %bfpt_header, %struct.sfdp_parameter_header** %bfpt_header.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sfdp_parameter_header** %bfpt_header.addr, metadata !5835, metadata !DIExpression()), !dbg !5836
  store %struct.sfdp_bfpt* %bfpt, %struct.sfdp_bfpt** %bfpt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sfdp_bfpt** %bfpt.addr, metadata !5837, metadata !DIExpression()), !dbg !5838
  store %struct.spi_nor_flash_parameter* %params, %struct.spi_nor_flash_parameter** %params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_flash_parameter** %params.addr, metadata !5839, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5841, metadata !DIExpression()), !dbg !5842
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5843
  %manufacturer = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 7, !dbg !5845
  %1 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer, align 8, !dbg !5845
  %tobool = icmp ne %struct.spi_nor_manufacturer* %1, null, !dbg !5843
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !5846

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5847
  %manufacturer1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 7, !dbg !5848
  %3 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer1, align 8, !dbg !5848
  %fixups = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %3, i32 0, i32 3, !dbg !5849
  %4 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups, align 8, !dbg !5849
  %tobool2 = icmp ne %struct.spi_nor_fixups* %4, null, !dbg !5847
  br i1 %tobool2, label %land.lhs.true3, label %if.end12, !dbg !5850

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5851
  %manufacturer4 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 7, !dbg !5852
  %6 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer4, align 8, !dbg !5852
  %fixups5 = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %6, i32 0, i32 3, !dbg !5853
  %7 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups5, align 8, !dbg !5853
  %post_bfpt = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %7, i32 0, i32 1, !dbg !5854
  %8 = load i32 (%struct.spi_nor*, %struct.sfdp_parameter_header*, %struct.sfdp_bfpt*, %struct.spi_nor_flash_parameter*)*, i32 (%struct.spi_nor*, %struct.sfdp_parameter_header*, %struct.sfdp_bfpt*, %struct.spi_nor_flash_parameter*)** %post_bfpt, align 8, !dbg !5854
  %tobool6 = icmp ne i32 (%struct.spi_nor*, %struct.sfdp_parameter_header*, %struct.sfdp_bfpt*, %struct.spi_nor_flash_parameter*)* %8, null, !dbg !5851
  br i1 %tobool6, label %if.then, label %if.end12, !dbg !5855

if.then:                                          ; preds = %land.lhs.true3
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5856
  %manufacturer7 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 7, !dbg !5858
  %10 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer7, align 8, !dbg !5858
  %fixups8 = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %10, i32 0, i32 3, !dbg !5859
  %11 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups8, align 8, !dbg !5859
  %post_bfpt9 = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %11, i32 0, i32 1, !dbg !5860
  %12 = load i32 (%struct.spi_nor*, %struct.sfdp_parameter_header*, %struct.sfdp_bfpt*, %struct.spi_nor_flash_parameter*)*, i32 (%struct.spi_nor*, %struct.sfdp_parameter_header*, %struct.sfdp_bfpt*, %struct.spi_nor_flash_parameter*)** %post_bfpt9, align 8, !dbg !5860
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5861
  %14 = load %struct.sfdp_parameter_header*, %struct.sfdp_parameter_header** %bfpt_header.addr, align 8, !dbg !5862
  %15 = load %struct.sfdp_bfpt*, %struct.sfdp_bfpt** %bfpt.addr, align 8, !dbg !5863
  %16 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params.addr, align 8, !dbg !5864
  %call = call i32 %12(%struct.spi_nor* %13, %struct.sfdp_parameter_header* %14, %struct.sfdp_bfpt* %15, %struct.spi_nor_flash_parameter* %16) #9, !dbg !5856
  store i32 %call, i32* %ret, align 4, !dbg !5865
  %17 = load i32, i32* %ret, align 4, !dbg !5866
  %tobool10 = icmp ne i32 %17, 0, !dbg !5866
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !5868

if.then11:                                        ; preds = %if.then
  %18 = load i32, i32* %ret, align 4, !dbg !5869
  store i32 %18, i32* %retval, align 4, !dbg !5870
  br label %return, !dbg !5870

if.end:                                           ; preds = %if.then
  br label %if.end12, !dbg !5871

if.end12:                                         ; preds = %if.end, %land.lhs.true3, %land.lhs.true, %entry
  %19 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5872
  %info = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %19, i32 0, i32 6, !dbg !5874
  %20 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !5874
  %fixups13 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %20, i32 0, i32 8, !dbg !5875
  %21 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups13, align 8, !dbg !5875
  %tobool14 = icmp ne %struct.spi_nor_fixups* %21, null, !dbg !5872
  br i1 %tobool14, label %land.lhs.true15, label %if.end25, !dbg !5876

land.lhs.true15:                                  ; preds = %if.end12
  %22 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5877
  %info16 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %22, i32 0, i32 6, !dbg !5878
  %23 = load %struct.flash_info*, %struct.flash_info** %info16, align 8, !dbg !5878
  %fixups17 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %23, i32 0, i32 8, !dbg !5879
  %24 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups17, align 8, !dbg !5879
  %post_bfpt18 = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %24, i32 0, i32 1, !dbg !5880
  %25 = load i32 (%struct.spi_nor*, %struct.sfdp_parameter_header*, %struct.sfdp_bfpt*, %struct.spi_nor_flash_parameter*)*, i32 (%struct.spi_nor*, %struct.sfdp_parameter_header*, %struct.sfdp_bfpt*, %struct.spi_nor_flash_parameter*)** %post_bfpt18, align 8, !dbg !5880
  %tobool19 = icmp ne i32 (%struct.spi_nor*, %struct.sfdp_parameter_header*, %struct.sfdp_bfpt*, %struct.spi_nor_flash_parameter*)* %25, null, !dbg !5877
  br i1 %tobool19, label %if.then20, label %if.end25, !dbg !5881

if.then20:                                        ; preds = %land.lhs.true15
  %26 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5882
  %info21 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %26, i32 0, i32 6, !dbg !5883
  %27 = load %struct.flash_info*, %struct.flash_info** %info21, align 8, !dbg !5883
  %fixups22 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %27, i32 0, i32 8, !dbg !5884
  %28 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups22, align 8, !dbg !5884
  %post_bfpt23 = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %28, i32 0, i32 1, !dbg !5885
  %29 = load i32 (%struct.spi_nor*, %struct.sfdp_parameter_header*, %struct.sfdp_bfpt*, %struct.spi_nor_flash_parameter*)*, i32 (%struct.spi_nor*, %struct.sfdp_parameter_header*, %struct.sfdp_bfpt*, %struct.spi_nor_flash_parameter*)** %post_bfpt23, align 8, !dbg !5885
  %30 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5886
  %31 = load %struct.sfdp_parameter_header*, %struct.sfdp_parameter_header** %bfpt_header.addr, align 8, !dbg !5887
  %32 = load %struct.sfdp_bfpt*, %struct.sfdp_bfpt** %bfpt.addr, align 8, !dbg !5888
  %33 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params.addr, align 8, !dbg !5889
  %call24 = call i32 %29(%struct.spi_nor* %30, %struct.sfdp_parameter_header* %31, %struct.sfdp_bfpt* %32, %struct.spi_nor_flash_parameter* %33) #9, !dbg !5882
  store i32 %call24, i32* %retval, align 4, !dbg !5890
  br label %return, !dbg !5890

if.end25:                                         ; preds = %land.lhs.true15, %if.end12
  store i32 0, i32* %retval, align 4, !dbg !5891
  br label %return, !dbg !5891

return:                                           ; preds = %if.end25, %if.then20, %if.then11
  %34 = load i32, i32* %retval, align 4, !dbg !5892
  ret i32 %34, !dbg !5892
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_nor_restore(%struct.spi_nor* %nor) #0 !dbg !5893 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5894, metadata !DIExpression()), !dbg !5895
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5896
  %addr_width = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 9, !dbg !5898
  %1 = load i8, i8* %addr_width, align 4, !dbg !5898
  %conv = zext i8 %1 to i32, !dbg !5896
  %cmp = icmp eq i32 %conv, 4, !dbg !5899
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5900

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5901
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 18, !dbg !5902
  %3 = load i32, i32* %flags, align 4, !dbg !5902
  %and = and i32 %3, 64, !dbg !5903
  %tobool = icmp ne i32 %and, 0, !dbg !5903
  br i1 %tobool, label %if.end, label %land.lhs.true2, !dbg !5904

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5905
  %flags3 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 18, !dbg !5906
  %5 = load i32, i32* %flags3, align 4, !dbg !5906
  %and4 = and i32 %5, 32, !dbg !5907
  %tobool5 = icmp ne i32 %and4, 0, !dbg !5907
  br i1 %tobool5, label %if.then, label %if.end, !dbg !5908

if.then:                                          ; preds = %land.lhs.true2
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5909
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 20, !dbg !5910
  %7 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !5910
  %set_4byte_addr_mode = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %7, i32 0, i32 7, !dbg !5911
  %8 = load i32 (%struct.spi_nor*, i1)*, i32 (%struct.spi_nor*, i1)** %set_4byte_addr_mode, align 8, !dbg !5911
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5912
  %call = call i32 %8(%struct.spi_nor* %9, i1 zeroext false) #9, !dbg !5909
  br label %if.end, !dbg !5909

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !5913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_nor_scan(%struct.spi_nor* %nor, i8* %name, %struct.spi_nor_hwcaps* %hwcaps) #0 !dbg !4100 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %name.addr = alloca i8*, align 8
  %hwcaps.addr = alloca %struct.spi_nor_hwcaps*, align 8
  %info = alloca %struct.flash_info*, align 8
  %dev = alloca %struct.device*, align 8
  %mtd = alloca %struct.mtd_info*, align 8
  %np = alloca %struct.device_node*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !5914, metadata !DIExpression()), !dbg !5915
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5916, metadata !DIExpression()), !dbg !5917
  store %struct.spi_nor_hwcaps* %hwcaps, %struct.spi_nor_hwcaps** %hwcaps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_hwcaps** %hwcaps.addr, metadata !5918, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.declare(metadata %struct.flash_info** %info, metadata !5920, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5922, metadata !DIExpression()), !dbg !5923
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5924
  %dev1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 2, !dbg !5925
  %1 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !5925
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !5923
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd, metadata !5926, metadata !DIExpression()), !dbg !5927
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5928
  %mtd2 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 0, !dbg !5929
  store %struct.mtd_info* %mtd2, %struct.mtd_info** %mtd, align 8, !dbg !5927
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !5930, metadata !DIExpression()), !dbg !5931
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5932
  %call = call %struct.device_node* @spi_nor_get_flash_node(%struct.spi_nor* %3) #9, !dbg !5933
  store %struct.device_node* %call, %struct.device_node** %np, align 8, !dbg !5931
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5934, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5936, metadata !DIExpression()), !dbg !5937
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5938
  %call3 = call i32 @spi_nor_check(%struct.spi_nor* %4) #9, !dbg !5939
  store i32 %call3, i32* %ret, align 4, !dbg !5940
  %5 = load i32, i32* %ret, align 4, !dbg !5941
  %tobool = icmp ne i32 %5, 0, !dbg !5941
  br i1 %tobool, label %if.then, label %if.end, !dbg !5943

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !5944
  store i32 %6, i32* %retval, align 4, !dbg !5945
  br label %return, !dbg !5945

if.end:                                           ; preds = %entry
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5946
  %reg_proto = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 16, !dbg !5947
  store i32 65793, i32* %reg_proto, align 4, !dbg !5948
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5949
  %read_proto = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 14, !dbg !5950
  store i32 65793, i32* %read_proto, align 4, !dbg !5951
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5952
  %write_proto = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 15, !dbg !5953
  store i32 65793, i32* %write_proto, align 8, !dbg !5954
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5955
  %bouncebuf_size = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 5, !dbg !5956
  store i64 4096, i64* %bouncebuf_size, align 8, !dbg !5957
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5958
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5959
  %bouncebuf_size4 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %12, i32 0, i32 5, !dbg !5960
  %13 = load i64, i64* %bouncebuf_size4, align 8, !dbg !5960
  %call5 = call noalias i8* @devm_kmalloc(%struct.device* %11, i64 %13, i32 3264) #9, !dbg !5961
  %14 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5962
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %14, i32 0, i32 4, !dbg !5963
  store i8* %call5, i8** %bouncebuf, align 8, !dbg !5964
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5965
  %bouncebuf6 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %15, i32 0, i32 4, !dbg !5967
  %16 = load i8*, i8** %bouncebuf6, align 8, !dbg !5967
  %tobool7 = icmp ne i8* %16, null, !dbg !5965
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !5968

if.then8:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !5969
  br label %return, !dbg !5969

if.end9:                                          ; preds = %if.end
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5970
  %18 = load i8*, i8** %name.addr, align 8, !dbg !5971
  %call10 = call %struct.flash_info* @spi_nor_get_flash_info(%struct.spi_nor* %17, i8* %18) #9, !dbg !5972
  store %struct.flash_info* %call10, %struct.flash_info** %info, align 8, !dbg !5973
  %19 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !5974
  %20 = bitcast %struct.flash_info* %19 to i8*, !dbg !5974
  %call11 = call zeroext i1 @IS_ERR(i8* %20) #9, !dbg !5976
  br i1 %call11, label %if.then12, label %if.end14, !dbg !5977

if.then12:                                        ; preds = %if.end9
  %21 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !5978
  %22 = bitcast %struct.flash_info* %21 to i8*, !dbg !5978
  %call13 = call i64 @PTR_ERR(i8* %22) #9, !dbg !5979
  %conv = trunc i64 %call13 to i32, !dbg !5979
  store i32 %conv, i32* %retval, align 4, !dbg !5980
  br label %return, !dbg !5980

if.end14:                                         ; preds = %if.end9
  %23 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !5981
  %24 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5982
  %info15 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %24, i32 0, i32 6, !dbg !5983
  store %struct.flash_info* %23, %struct.flash_info** %info15, align 8, !dbg !5984
  %25 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5985
  %26 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !5986
  call void @spi_nor_debugfs_init(%struct.spi_nor* %25, %struct.flash_info* %26) #9, !dbg !5987
  br label %do.body, !dbg !5988

do.body:                                          ; preds = %if.end14
  %27 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5989
  %lock = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %27, i32 0, i32 1, !dbg !5989
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct.lock_class_key* @spi_nor_scan.__key) #9, !dbg !5989
  br label %do.end, !dbg !5989

do.end:                                           ; preds = %do.body
  %28 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !5991
  %flags = getelementptr inbounds %struct.flash_info, %struct.flash_info* %28, i32 0, i32 7, !dbg !5993
  %29 = load i32, i32* %flags, align 4, !dbg !5993
  %conv16 = zext i32 %29 to i64, !dbg !5991
  %and = and i64 %conv16, 1024, !dbg !5994
  %tobool17 = icmp ne i64 %and, 0, !dbg !5994
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !5995

if.then18:                                        ; preds = %do.end
  %30 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !5996
  %flags19 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %30, i32 0, i32 18, !dbg !5997
  %31 = load i32, i32* %flags19, align 4, !dbg !5998
  %or = or i32 %31, 8, !dbg !5998
  store i32 %or, i32* %flags19, align 4, !dbg !5998
  br label %if.end20, !dbg !5996

if.end20:                                         ; preds = %if.then18, %do.end
  %32 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !5999
  %flags21 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %32, i32 0, i32 7, !dbg !6001
  %33 = load i32, i32* %flags21, align 4, !dbg !6001
  %conv22 = zext i32 %33 to i64, !dbg !5999
  %and23 = and i64 %conv22, 256, !dbg !6002
  %tobool24 = icmp ne i64 %and23, 0, !dbg !6002
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !6003

if.then25:                                        ; preds = %if.end20
  %34 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6004
  %flags26 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %34, i32 0, i32 18, !dbg !6005
  %35 = load i32, i32* %flags26, align 4, !dbg !6006
  %or27 = or i32 %35, 256, !dbg !6006
  store i32 %or27, i32* %flags26, align 4, !dbg !6006
  br label %if.end28, !dbg !6004

if.end28:                                         ; preds = %if.then25, %if.end20
  %36 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6007
  %_write = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %36, i32 0, i32 25, !dbg !6008
  store i32 (%struct.mtd_info*, i64, i64, i64*, i8*)* @spi_nor_write, i32 (%struct.mtd_info*, i64, i64, i64*, i8*)** %_write, align 8, !dbg !6009
  %37 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6010
  %call29 = call i32 @spi_nor_init_params(%struct.spi_nor* %37) #9, !dbg !6011
  store i32 %call29, i32* %ret, align 4, !dbg !6012
  %38 = load i32, i32* %ret, align 4, !dbg !6013
  %tobool30 = icmp ne i32 %38, 0, !dbg !6013
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !6015

if.then31:                                        ; preds = %if.end28
  %39 = load i32, i32* %ret, align 4, !dbg !6016
  store i32 %39, i32* %retval, align 4, !dbg !6017
  br label %return, !dbg !6017

if.end32:                                         ; preds = %if.end28
  %40 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6018
  %name33 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %40, i32 0, i32 13, !dbg !6020
  %41 = load i8*, i8** %name33, align 8, !dbg !6020
  %tobool34 = icmp ne i8* %41, null, !dbg !6018
  br i1 %tobool34, label %if.end38, label %if.then35, !dbg !6021

if.then35:                                        ; preds = %if.end32
  %42 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6022
  %call36 = call i8* @dev_name(%struct.device* %42) #9, !dbg !6023
  %43 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6024
  %name37 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %43, i32 0, i32 13, !dbg !6025
  store i8* %call36, i8** %name37, align 8, !dbg !6026
  br label %if.end38, !dbg !6024

if.end38:                                         ; preds = %if.then35, %if.end32
  %44 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6027
  %45 = bitcast %struct.spi_nor* %44 to i8*, !dbg !6027
  %46 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6028
  %priv = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %46, i32 0, i32 53, !dbg !6029
  store i8* %45, i8** %priv, align 8, !dbg !6030
  %47 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6031
  %type = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %47, i32 0, i32 0, !dbg !6032
  store i8 3, i8* %type, align 8, !dbg !6033
  %48 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6034
  %writesize = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %48, i32 0, i32 4, !dbg !6035
  store i32 1, i32* %writesize, align 4, !dbg !6036
  %49 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6037
  %flags39 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %49, i32 0, i32 1, !dbg !6038
  store i32 3072, i32* %flags39, align 4, !dbg !6039
  %50 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6040
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %50, i32 0, i32 20, !dbg !6041
  %51 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !6041
  %size = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %51, i32 0, i32 0, !dbg !6042
  %52 = load i64, i64* %size, align 8, !dbg !6042
  %53 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6043
  %size40 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %53, i32 0, i32 2, !dbg !6044
  store i64 %52, i64* %size40, align 8, !dbg !6045
  %54 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6046
  %_erase = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %54, i32 0, i32 21, !dbg !6047
  store i32 (%struct.mtd_info*, %struct.erase_info*)* @spi_nor_erase, i32 (%struct.mtd_info*, %struct.erase_info*)** %_erase, align 8, !dbg !6048
  %55 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6049
  %_read = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %55, i32 0, i32 24, !dbg !6050
  store i32 (%struct.mtd_info*, i64, i64, i64*, i8*)* @spi_nor_read, i32 (%struct.mtd_info*, i64, i64, i64*, i8*)** %_read, align 8, !dbg !6051
  %56 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6052
  %_resume = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %56, i32 0, i32 45, !dbg !6053
  store void (%struct.mtd_info*)* @spi_nor_resume, void (%struct.mtd_info*)** %_resume, align 8, !dbg !6054
  %57 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6055
  %params41 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %57, i32 0, i32 20, !dbg !6057
  %58 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params41, align 8, !dbg !6057
  %locking_ops = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %58, i32 0, i32 10, !dbg !6058
  %59 = load %struct.spi_nor_locking_ops*, %struct.spi_nor_locking_ops** %locking_ops, align 8, !dbg !6058
  %tobool42 = icmp ne %struct.spi_nor_locking_ops* %59, null, !dbg !6055
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !6059

if.then43:                                        ; preds = %if.end38
  %60 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6060
  %_lock = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %60, i32 0, i32 37, !dbg !6062
  store i32 (%struct.mtd_info*, i64, i64)* @spi_nor_lock, i32 (%struct.mtd_info*, i64, i64)** %_lock, align 8, !dbg !6063
  %61 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6064
  %_unlock = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %61, i32 0, i32 38, !dbg !6065
  store i32 (%struct.mtd_info*, i64, i64)* @spi_nor_unlock, i32 (%struct.mtd_info*, i64, i64)** %_unlock, align 8, !dbg !6066
  %62 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6067
  %_is_locked = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %62, i32 0, i32 39, !dbg !6068
  store i32 (%struct.mtd_info*, i64, i64)* @spi_nor_is_locked, i32 (%struct.mtd_info*, i64, i64)** %_is_locked, align 8, !dbg !6069
  br label %if.end44, !dbg !6070

if.end44:                                         ; preds = %if.then43, %if.end38
  %63 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6071
  %flags45 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %63, i32 0, i32 7, !dbg !6073
  %64 = load i32, i32* %flags45, align 4, !dbg !6073
  %conv46 = zext i32 %64 to i64, !dbg !6071
  %and47 = and i64 %conv46, 128, !dbg !6074
  %tobool48 = icmp ne i64 %and47, 0, !dbg !6074
  br i1 %tobool48, label %if.then49, label %if.end52, !dbg !6075

if.then49:                                        ; preds = %if.end44
  %65 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6076
  %flags50 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %65, i32 0, i32 18, !dbg !6077
  %66 = load i32, i32* %flags50, align 4, !dbg !6078
  %or51 = or i32 %66, 1, !dbg !6078
  store i32 %or51, i32* %flags50, align 4, !dbg !6078
  br label %if.end52, !dbg !6076

if.end52:                                         ; preds = %if.then49, %if.end44
  %67 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6079
  %flags53 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %67, i32 0, i32 7, !dbg !6081
  %68 = load i32, i32* %flags53, align 4, !dbg !6081
  %conv54 = zext i32 %68 to i64, !dbg !6079
  %and55 = and i64 %conv54, 512, !dbg !6082
  %tobool56 = icmp ne i64 %and55, 0, !dbg !6082
  br i1 %tobool56, label %if.then57, label %if.end68, !dbg !6083

if.then57:                                        ; preds = %if.end52
  %69 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6084
  %flags58 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %69, i32 0, i32 18, !dbg !6086
  %70 = load i32, i32* %flags58, align 4, !dbg !6087
  %or59 = or i32 %70, 2, !dbg !6087
  store i32 %or59, i32* %flags58, align 4, !dbg !6087
  %71 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6088
  %flags60 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %71, i32 0, i32 7, !dbg !6090
  %72 = load i32, i32* %flags60, align 4, !dbg !6090
  %conv61 = zext i32 %72 to i64, !dbg !6088
  %and62 = and i64 %conv61, 65536, !dbg !6091
  %tobool63 = icmp ne i64 %and62, 0, !dbg !6091
  br i1 %tobool63, label %if.then64, label %if.end67, !dbg !6092

if.then64:                                        ; preds = %if.then57
  %73 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6093
  %flags65 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %73, i32 0, i32 18, !dbg !6094
  %74 = load i32, i32* %flags65, align 4, !dbg !6095
  %or66 = or i32 %74, 2048, !dbg !6095
  store i32 %or66, i32* %flags65, align 4, !dbg !6095
  br label %if.end67, !dbg !6093

if.end67:                                         ; preds = %if.then64, %if.then57
  br label %if.end68, !dbg !6096

if.end68:                                         ; preds = %if.end67, %if.end52
  %75 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6097
  %flags69 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %75, i32 0, i32 7, !dbg !6099
  %76 = load i32, i32* %flags69, align 4, !dbg !6099
  %conv70 = zext i32 %76 to i64, !dbg !6097
  %and71 = and i64 %conv70, 4096, !dbg !6100
  %tobool72 = icmp ne i64 %and71, 0, !dbg !6100
  br i1 %tobool72, label %if.then73, label %if.end76, !dbg !6101

if.then73:                                        ; preds = %if.end68
  %77 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6102
  %flags74 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %77, i32 0, i32 18, !dbg !6103
  %78 = load i32, i32* %flags74, align 4, !dbg !6104
  %or75 = or i32 %78, 4, !dbg !6104
  store i32 %or75, i32* %flags74, align 4, !dbg !6104
  br label %if.end76, !dbg !6102

if.end76:                                         ; preds = %if.then73, %if.end68
  %79 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6105
  %flags77 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %79, i32 0, i32 7, !dbg !6107
  %80 = load i32, i32* %flags77, align 4, !dbg !6107
  %conv78 = zext i32 %80 to i64, !dbg !6105
  %and79 = and i64 %conv78, 16384, !dbg !6108
  %tobool80 = icmp ne i64 %and79, 0, !dbg !6108
  br i1 %tobool80, label %if.then81, label %if.end84, !dbg !6109

if.then81:                                        ; preds = %if.end76
  %81 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6110
  %flags82 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %81, i32 0, i32 18, !dbg !6111
  %82 = load i32, i32* %flags82, align 4, !dbg !6112
  %or83 = or i32 %82, 16, !dbg !6112
  store i32 %or83, i32* %flags82, align 4, !dbg !6112
  br label %if.end84, !dbg !6110

if.end84:                                         ; preds = %if.then81, %if.end76
  %83 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6113
  %flags85 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %83, i32 0, i32 7, !dbg !6115
  %84 = load i32, i32* %flags85, align 4, !dbg !6115
  %conv86 = zext i32 %84 to i64, !dbg !6113
  %and87 = and i64 %conv86, 131072, !dbg !6116
  %tobool88 = icmp ne i64 %and87, 0, !dbg !6116
  br i1 %tobool88, label %if.then89, label %if.end100, !dbg !6117

if.then89:                                        ; preds = %if.end84
  %85 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6118
  %flags90 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %85, i32 0, i32 18, !dbg !6120
  %86 = load i32, i32* %flags90, align 4, !dbg !6121
  %or91 = or i32 %86, 4096, !dbg !6121
  store i32 %or91, i32* %flags90, align 4, !dbg !6121
  %87 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6122
  %flags92 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %87, i32 0, i32 7, !dbg !6124
  %88 = load i32, i32* %flags92, align 4, !dbg !6124
  %conv93 = zext i32 %88 to i64, !dbg !6122
  %and94 = and i64 %conv93, 262144, !dbg !6125
  %tobool95 = icmp ne i64 %and94, 0, !dbg !6125
  br i1 %tobool95, label %if.then96, label %if.end99, !dbg !6126

if.then96:                                        ; preds = %if.then89
  %89 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6127
  %flags97 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %89, i32 0, i32 18, !dbg !6128
  %90 = load i32, i32* %flags97, align 4, !dbg !6129
  %or98 = or i32 %90, 8192, !dbg !6129
  store i32 %or98, i32* %flags97, align 4, !dbg !6129
  br label %if.end99, !dbg !6127

if.end99:                                         ; preds = %if.then96, %if.then89
  br label %if.end100, !dbg !6130

if.end100:                                        ; preds = %if.end99, %if.end84
  %91 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6131
  %flags101 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %91, i32 0, i32 7, !dbg !6133
  %92 = load i32, i32* %flags101, align 4, !dbg !6133
  %conv102 = zext i32 %92 to i64, !dbg !6131
  %and103 = and i64 %conv102, 2, !dbg !6134
  %tobool104 = icmp ne i64 %and103, 0, !dbg !6134
  br i1 %tobool104, label %if.then105, label %if.end108, !dbg !6135

if.then105:                                       ; preds = %if.end100
  %93 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6136
  %flags106 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %93, i32 0, i32 1, !dbg !6137
  %94 = load i32, i32* %flags106, align 4, !dbg !6138
  %or107 = or i32 %94, 4096, !dbg !6138
  store i32 %or107, i32* %flags106, align 4, !dbg !6138
  br label %if.end108, !dbg !6136

if.end108:                                        ; preds = %if.then105, %if.end100
  %95 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6139
  %96 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6140
  %dev109 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %96, i32 0, i32 55, !dbg !6141
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev109, i32 0, i32 1, !dbg !6142
  store %struct.device* %95, %struct.device** %parent, align 8, !dbg !6143
  %97 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6144
  %params110 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %97, i32 0, i32 20, !dbg !6145
  %98 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params110, align 8, !dbg !6145
  %page_size = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %98, i32 0, i32 1, !dbg !6146
  %99 = load i32, i32* %page_size, align 8, !dbg !6146
  %100 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6147
  %page_size111 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %100, i32 0, i32 8, !dbg !6148
  store i32 %99, i32* %page_size111, align 8, !dbg !6149
  %101 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6150
  %page_size112 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %101, i32 0, i32 8, !dbg !6151
  %102 = load i32, i32* %page_size112, align 8, !dbg !6151
  %103 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6152
  %writebufsize = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %103, i32 0, i32 5, !dbg !6153
  store i32 %102, i32* %writebufsize, align 8, !dbg !6154
  %104 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6155
  %call113 = call zeroext i1 @of_property_read_bool(%struct.device_node* %104, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #9, !dbg !6157
  br i1 %call113, label %if.then114, label %if.end117, !dbg !6158

if.then114:                                       ; preds = %if.end108
  %105 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6159
  %flags115 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %105, i32 0, i32 18, !dbg !6160
  %106 = load i32, i32* %flags115, align 4, !dbg !6161
  %or116 = or i32 %106, 32, !dbg !6161
  store i32 %or116, i32* %flags115, align 4, !dbg !6161
  br label %if.end117, !dbg !6159

if.end117:                                        ; preds = %if.then114, %if.end108
  %107 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6162
  %108 = load %struct.spi_nor_hwcaps*, %struct.spi_nor_hwcaps** %hwcaps.addr, align 8, !dbg !6163
  %call118 = call i32 @spi_nor_setup(%struct.spi_nor* %107, %struct.spi_nor_hwcaps* %108) #9, !dbg !6164
  store i32 %call118, i32* %ret, align 4, !dbg !6165
  %109 = load i32, i32* %ret, align 4, !dbg !6166
  %tobool119 = icmp ne i32 %109, 0, !dbg !6166
  br i1 %tobool119, label %if.then120, label %if.end121, !dbg !6168

if.then120:                                       ; preds = %if.end117
  %110 = load i32, i32* %ret, align 4, !dbg !6169
  store i32 %110, i32* %retval, align 4, !dbg !6170
  br label %return, !dbg !6170

if.end121:                                        ; preds = %if.end117
  %111 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6171
  %flags122 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %111, i32 0, i32 7, !dbg !6173
  %112 = load i32, i32* %flags122, align 4, !dbg !6173
  %conv123 = zext i32 %112 to i64, !dbg !6171
  %and124 = and i64 %conv123, 2048, !dbg !6174
  %tobool125 = icmp ne i64 %and124, 0, !dbg !6174
  br i1 %tobool125, label %if.then126, label %if.end129, !dbg !6175

if.then126:                                       ; preds = %if.end121
  %113 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6176
  %flags127 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %113, i32 0, i32 18, !dbg !6177
  %114 = load i32, i32* %flags127, align 4, !dbg !6178
  %or128 = or i32 %114, 64, !dbg !6178
  store i32 %or128, i32* %flags127, align 4, !dbg !6178
  br label %if.end129, !dbg !6176

if.end129:                                        ; preds = %if.then126, %if.end121
  %115 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6179
  %call130 = call i32 @spi_nor_set_addr_width(%struct.spi_nor* %115) #9, !dbg !6180
  store i32 %call130, i32* %ret, align 4, !dbg !6181
  %116 = load i32, i32* %ret, align 4, !dbg !6182
  %tobool131 = icmp ne i32 %116, 0, !dbg !6182
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !6184

if.then132:                                       ; preds = %if.end129
  %117 = load i32, i32* %ret, align 4, !dbg !6185
  store i32 %117, i32* %retval, align 4, !dbg !6186
  br label %return, !dbg !6186

if.end133:                                        ; preds = %if.end129
  %118 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6187
  %call134 = call i32 @spi_nor_init(%struct.spi_nor* %118) #9, !dbg !6188
  store i32 %call134, i32* %ret, align 4, !dbg !6189
  %119 = load i32, i32* %ret, align 4, !dbg !6190
  %tobool135 = icmp ne i32 %119, 0, !dbg !6190
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !6192

if.then136:                                       ; preds = %if.end133
  %120 = load i32, i32* %ret, align 4, !dbg !6193
  store i32 %120, i32* %retval, align 4, !dbg !6194
  br label %return, !dbg !6194

if.end137:                                        ; preds = %if.end133
  %121 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6195
  %122 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6195
  %name138 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %122, i32 0, i32 0, !dbg !6195
  %123 = load i8*, i8** %name138, align 8, !dbg !6195
  %124 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6195
  %size139 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %124, i32 0, i32 2, !dbg !6195
  %125 = load i64, i64* %size139, align 8, !dbg !6195
  %shr = ashr i64 %125, 10, !dbg !6195
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %121, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %123, i64 %shr) #11, !dbg !6195
  %126 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6196
  %numeraseregions = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %126, i32 0, i32 19, !dbg !6198
  %127 = load i32, i32* %numeraseregions, align 8, !dbg !6198
  %tobool140 = icmp ne i32 %127, 0, !dbg !6196
  br i1 %tobool140, label %if.then141, label %if.end144, !dbg !6199

if.then141:                                       ; preds = %if.end137
  store i32 0, i32* %i, align 4, !dbg !6200
  br label %for.cond, !dbg !6202

for.cond:                                         ; preds = %for.inc, %if.then141
  %128 = load i32, i32* %i, align 4, !dbg !6203
  %129 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6205
  %numeraseregions142 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %129, i32 0, i32 19, !dbg !6206
  %130 = load i32, i32* %numeraseregions142, align 8, !dbg !6206
  %cmp = icmp slt i32 %128, %130, !dbg !6207
  br i1 %cmp, label %for.body, label %for.end, !dbg !6208

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !6209

for.inc:                                          ; preds = %for.body
  %131 = load i32, i32* %i, align 4, !dbg !6210
  %inc = add i32 %131, 1, !dbg !6210
  store i32 %inc, i32* %i, align 4, !dbg !6210
  br label %for.cond, !dbg !6211, !llvm.loop !6212

for.end:                                          ; preds = %for.cond
  br label %if.end144, !dbg !6213

if.end144:                                        ; preds = %for.end, %if.end137
  store i32 0, i32* %retval, align 4, !dbg !6214
  br label %return, !dbg !6214

return:                                           ; preds = %if.end144, %if.then136, %if.then132, %if.then120, %if.then31, %if.then12, %if.then8, %if.then
  %132 = load i32, i32* %retval, align 4, !dbg !6215
  ret i32 %132, !dbg !6215
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @spi_nor_get_flash_node(%struct.spi_nor* %nor) #0 !dbg !6216 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !6219, metadata !DIExpression()), !dbg !6220
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6221
  %mtd = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 0, !dbg !6222
  %call = call %struct.device_node* @mtd_get_of_node(%struct.mtd_info* %mtd) #9, !dbg !6223
  ret %struct.device_node* %call, !dbg !6224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_check(%struct.spi_nor* %nor) #0 !dbg !6225 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !6226, metadata !DIExpression()), !dbg !6227
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6228
  %dev = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 2, !dbg !6230
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6230
  %tobool = icmp ne %struct.device* %1, null, !dbg !6228
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6231

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6232
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 3, !dbg !6233
  %3 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !6233
  %tobool1 = icmp ne %struct.spi_mem* %3, null, !dbg !6232
  br i1 %tobool1, label %lor.lhs.false3, label %land.lhs.true, !dbg !6234

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6235
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 19, !dbg !6236
  %5 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !6236
  %tobool2 = icmp ne %struct.spi_nor_controller_ops* %5, null, !dbg !6235
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !6237

lor.lhs.false3:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6238
  %spimem4 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 3, !dbg !6239
  %7 = load %struct.spi_mem*, %struct.spi_mem** %spimem4, align 8, !dbg !6239
  %tobool5 = icmp ne %struct.spi_mem* %7, null, !dbg !6238
  br i1 %tobool5, label %if.end, label %land.lhs.true6, !dbg !6240

land.lhs.true6:                                   ; preds = %lor.lhs.false3
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6241
  %controller_ops7 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 19, !dbg !6242
  %9 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops7, align 8, !dbg !6242
  %tobool8 = icmp ne %struct.spi_nor_controller_ops* %9, null, !dbg !6241
  br i1 %tobool8, label %land.lhs.true9, label %if.end, !dbg !6243

land.lhs.true9:                                   ; preds = %land.lhs.true6
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6244
  %controller_ops10 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 19, !dbg !6245
  %11 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops10, align 8, !dbg !6245
  %read = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %11, i32 0, i32 4, !dbg !6246
  %read11 = bitcast {}** %read to i64 (%struct.spi_nor*, i64, i64, i8*)**, !dbg !6246
  %12 = load i64 (%struct.spi_nor*, i64, i64, i8*)*, i64 (%struct.spi_nor*, i64, i64, i8*)** %read11, align 8, !dbg !6246
  %tobool12 = icmp ne i64 (%struct.spi_nor*, i64, i64, i8*)* %12, null, !dbg !6244
  br i1 %tobool12, label %lor.lhs.false13, label %if.then, !dbg !6247

lor.lhs.false13:                                  ; preds = %land.lhs.true9
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6248
  %controller_ops14 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %13, i32 0, i32 19, !dbg !6249
  %14 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops14, align 8, !dbg !6249
  %write = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %14, i32 0, i32 5, !dbg !6250
  %15 = load i64 (%struct.spi_nor*, i64, i64, i8*)*, i64 (%struct.spi_nor*, i64, i64, i8*)** %write, align 8, !dbg !6250
  %tobool15 = icmp ne i64 (%struct.spi_nor*, i64, i64, i8*)* %15, null, !dbg !6248
  br i1 %tobool15, label %lor.lhs.false16, label %if.then, !dbg !6251

lor.lhs.false16:                                  ; preds = %lor.lhs.false13
  %16 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6252
  %controller_ops17 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %16, i32 0, i32 19, !dbg !6253
  %17 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops17, align 8, !dbg !6253
  %read_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %17, i32 0, i32 2, !dbg !6254
  %18 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %read_reg, align 8, !dbg !6254
  %tobool18 = icmp ne i32 (%struct.spi_nor*, i8, i8*, i64)* %18, null, !dbg !6252
  br i1 %tobool18, label %lor.lhs.false19, label %if.then, !dbg !6255

lor.lhs.false19:                                  ; preds = %lor.lhs.false16
  %19 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6256
  %controller_ops20 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %19, i32 0, i32 19, !dbg !6257
  %20 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops20, align 8, !dbg !6257
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %20, i32 0, i32 3, !dbg !6258
  %21 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !6258
  %tobool21 = icmp ne i32 (%struct.spi_nor*, i8, i8*, i64)* %21, null, !dbg !6256
  br i1 %tobool21, label %if.end, label %if.then, !dbg !6259

if.then:                                          ; preds = %lor.lhs.false19, %lor.lhs.false16, %lor.lhs.false13, %land.lhs.true9, %land.lhs.true, %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i64 0, i64 0)) #11, !dbg !6260
  store i32 -22, i32* %retval, align 4, !dbg !6262
  br label %return, !dbg !6262

if.end:                                           ; preds = %lor.lhs.false19, %land.lhs.true6, %lor.lhs.false3
  %22 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6263
  %spimem22 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %22, i32 0, i32 3, !dbg !6265
  %23 = load %struct.spi_mem*, %struct.spi_mem** %spimem22, align 8, !dbg !6265
  %tobool23 = icmp ne %struct.spi_mem* %23, null, !dbg !6263
  br i1 %tobool23, label %land.lhs.true24, label %if.end29, !dbg !6266

land.lhs.true24:                                  ; preds = %if.end
  %24 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6267
  %controller_ops25 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %24, i32 0, i32 19, !dbg !6268
  %25 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops25, align 8, !dbg !6268
  %tobool26 = icmp ne %struct.spi_nor_controller_ops* %25, null, !dbg !6267
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !6269

if.then27:                                        ; preds = %land.lhs.true24
  %26 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6270
  %dev28 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %26, i32 0, i32 2, !dbg !6270
  %27 = load %struct.device*, %struct.device** %dev28, align 8, !dbg !6270
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %27, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.10, i64 0, i64 0)) #11, !dbg !6270
  store i32 -22, i32* %retval, align 4, !dbg !6272
  br label %return, !dbg !6272

if.end29:                                         ; preds = %land.lhs.true24, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6273
  br label %return, !dbg !6273

return:                                           ; preds = %if.end29, %if.then27, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !6274
  ret i32 %28, !dbg !6274
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.flash_info* @spi_nor_get_flash_info(%struct.spi_nor* %nor, i8* %name) #0 !dbg !6275 {
entry:
  %retval = alloca %struct.flash_info*, align 8
  %nor.addr = alloca %struct.spi_nor*, align 8
  %name.addr = alloca i8*, align 8
  %info = alloca %struct.flash_info*, align 8
  %jinfo = alloca %struct.flash_info*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !6278, metadata !DIExpression()), !dbg !6279
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6280, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.declare(metadata %struct.flash_info** %info, metadata !6282, metadata !DIExpression()), !dbg !6283
  store %struct.flash_info* null, %struct.flash_info** %info, align 8, !dbg !6283
  %0 = load i8*, i8** %name.addr, align 8, !dbg !6284
  %tobool = icmp ne i8* %0, null, !dbg !6284
  br i1 %tobool, label %if.then, label %if.end, !dbg !6286

if.then:                                          ; preds = %entry
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6287
  %2 = load i8*, i8** %name.addr, align 8, !dbg !6288
  %call = call %struct.flash_info* @spi_nor_match_id(%struct.spi_nor* %1, i8* %2) #9, !dbg !6289
  store %struct.flash_info* %call, %struct.flash_info** %info, align 8, !dbg !6290
  br label %if.end, !dbg !6291

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6292
  %tobool1 = icmp ne %struct.flash_info* %3, null, !dbg !6292
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !6294

if.then2:                                         ; preds = %if.end
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6295
  %call3 = call %struct.flash_info* @spi_nor_read_id(%struct.spi_nor* %4) #9, !dbg !6296
  store %struct.flash_info* %call3, %struct.flash_info** %info, align 8, !dbg !6297
  br label %if.end4, !dbg !6298

if.end4:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6299
  %6 = bitcast %struct.flash_info* %5 to i8*, !dbg !6299
  %call5 = call zeroext i1 @IS_ERR_OR_NULL(i8* %6) #9, !dbg !6301
  br i1 %call5, label %if.then6, label %if.end8, !dbg !6302

if.then6:                                         ; preds = %if.end4
  %call7 = call i8* @ERR_PTR(i64 -2) #9, !dbg !6303
  %7 = bitcast i8* %call7 to %struct.flash_info*, !dbg !6303
  store %struct.flash_info* %7, %struct.flash_info** %retval, align 8, !dbg !6304
  br label %return, !dbg !6304

if.end8:                                          ; preds = %if.end4
  %8 = load i8*, i8** %name.addr, align 8, !dbg !6305
  %tobool9 = icmp ne i8* %8, null, !dbg !6305
  br i1 %tobool9, label %land.lhs.true, label %if.end21, !dbg !6307

land.lhs.true:                                    ; preds = %if.end8
  %9 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6308
  %id_len = getelementptr inbounds %struct.flash_info, %struct.flash_info* %9, i32 0, i32 2, !dbg !6309
  %10 = load i8, i8* %id_len, align 2, !dbg !6309
  %conv = zext i8 %10 to i32, !dbg !6308
  %tobool10 = icmp ne i32 %conv, 0, !dbg !6308
  br i1 %tobool10, label %if.then11, label %if.end21, !dbg !6310

if.then11:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.flash_info** %jinfo, metadata !6311, metadata !DIExpression()), !dbg !6313
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6314
  %call12 = call %struct.flash_info* @spi_nor_read_id(%struct.spi_nor* %11) #9, !dbg !6315
  store %struct.flash_info* %call12, %struct.flash_info** %jinfo, align 8, !dbg !6316
  %12 = load %struct.flash_info*, %struct.flash_info** %jinfo, align 8, !dbg !6317
  %13 = bitcast %struct.flash_info* %12 to i8*, !dbg !6317
  %call13 = call zeroext i1 @IS_ERR(i8* %13) #9, !dbg !6319
  br i1 %call13, label %if.then14, label %if.else, !dbg !6320

if.then14:                                        ; preds = %if.then11
  %14 = load %struct.flash_info*, %struct.flash_info** %jinfo, align 8, !dbg !6321
  store %struct.flash_info* %14, %struct.flash_info** %retval, align 8, !dbg !6323
  br label %return, !dbg !6323

if.else:                                          ; preds = %if.then11
  %15 = load %struct.flash_info*, %struct.flash_info** %jinfo, align 8, !dbg !6324
  %16 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6326
  %cmp = icmp ne %struct.flash_info* %15, %16, !dbg !6327
  br i1 %cmp, label %if.then16, label %if.end19, !dbg !6328

if.then16:                                        ; preds = %if.else
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6329
  %dev = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %17, i32 0, i32 2, !dbg !6329
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6329
  %19 = load %struct.flash_info*, %struct.flash_info** %jinfo, align 8, !dbg !6329
  %name17 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %19, i32 0, i32 0, !dbg !6329
  %20 = load i8*, i8** %name17, align 8, !dbg !6329
  %21 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6329
  %name18 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %21, i32 0, i32 0, !dbg !6329
  %22 = load i8*, i8** %name18, align 8, !dbg !6329
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %18, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %20, i8* %22) #11, !dbg !6329
  %23 = load %struct.flash_info*, %struct.flash_info** %jinfo, align 8, !dbg !6331
  store %struct.flash_info* %23, %struct.flash_info** %info, align 8, !dbg !6332
  br label %if.end19, !dbg !6333

if.end19:                                         ; preds = %if.then16, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19
  br label %if.end21, !dbg !6334

if.end21:                                         ; preds = %if.end20, %land.lhs.true, %if.end8
  %24 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6335
  store %struct.flash_info* %24, %struct.flash_info** %retval, align 8, !dbg !6336
  br label %return, !dbg !6336

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %25 = load %struct.flash_info*, %struct.flash_info** %retval, align 8, !dbg !6337
  ret %struct.flash_info* %25, !dbg !6337
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !6338 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6342, metadata !DIExpression()), !dbg !6343
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6344
  %1 = ptrtoint i8* %0 to i64, !dbg !6344
  %2 = inttoptr i64 %1 to i8*, !dbg !6344
  %3 = ptrtoint i8* %2 to i64, !dbg !6344
  %cmp = icmp uge i64 %3, -4095, !dbg !6344
  %lnot = xor i1 %cmp, true, !dbg !6344
  %lnot1 = xor i1 %lnot, true, !dbg !6344
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6344
  %conv = sext i32 %lnot.ext to i64, !dbg !6344
  %tobool = icmp ne i64 %conv, 0, !dbg !6344
  ret i1 %tobool, !dbg !6345
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !6346 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6349, metadata !DIExpression()), !dbg !6350
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6351
  %1 = ptrtoint i8* %0 to i64, !dbg !6352
  ret i64 %1, !dbg !6353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_debugfs_init(%struct.spi_nor* %nor, %struct.flash_info* %info) #0 !dbg !6354 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %info.addr = alloca %struct.flash_info*, align 8
  %mtd = alloca %struct.mtd_info*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !6357, metadata !DIExpression()), !dbg !6358
  store %struct.flash_info* %info, %struct.flash_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.flash_info** %info.addr, metadata !6359, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd, metadata !6361, metadata !DIExpression()), !dbg !6362
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6363
  %mtd1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 0, !dbg !6364
  store %struct.mtd_info* %mtd1, %struct.mtd_info** %mtd, align 8, !dbg !6362
  %1 = load %struct.flash_info*, %struct.flash_info** %info.addr, align 8, !dbg !6365
  %name = getelementptr inbounds %struct.flash_info, %struct.flash_info* %1, i32 0, i32 0, !dbg !6366
  %2 = load i8*, i8** %name, align 8, !dbg !6366
  %3 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6367
  %dbg = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %3, i32 0, i32 57, !dbg !6368
  %partname = getelementptr inbounds %struct.mtd_debug_info, %struct.mtd_debug_info* %dbg, i32 0, i32 1, !dbg !6369
  store i8* %2, i8** %partname, align 8, !dbg !6370
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6371
  %dev = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 2, !dbg !6372
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6372
  %6 = load %struct.flash_info*, %struct.flash_info** %info.addr, align 8, !dbg !6373
  %id_len = getelementptr inbounds %struct.flash_info, %struct.flash_info* %6, i32 0, i32 2, !dbg !6374
  %7 = load i8, i8* %id_len, align 2, !dbg !6374
  %conv = zext i8 %7 to i32, !dbg !6373
  %8 = load %struct.flash_info*, %struct.flash_info** %info.addr, align 8, !dbg !6375
  %id = getelementptr inbounds %struct.flash_info, %struct.flash_info* %8, i32 0, i32 1, !dbg !6376
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %id, i64 0, i64 0, !dbg !6375
  %call = call noalias i8* (%struct.device*, i32, i8*, ...) @devm_kasprintf(%struct.device* %5, i32 3264, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i32 %conv, i8* %arraydecay) #9, !dbg !6377
  %9 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !6378
  %dbg2 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %9, i32 0, i32 57, !dbg !6379
  %partid = getelementptr inbounds %struct.mtd_debug_info, %struct.mtd_debug_info* %dbg2, i32 0, i32 2, !dbg !6380
  store i8* %call, i8** %partid, align 8, !dbg !6381
  ret void, !dbg !6382
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_write(%struct.mtd_info* %mtd, i64 %to, i64 %len, i64* %retlen, i8* %buf) #0 !dbg !6383 {
entry:
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !6384, metadata !DIExpression()), !dbg !6389
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !6395, metadata !DIExpression()), !dbg !6396
  %retval = alloca i32, align 4
  %mtd.addr = alloca %struct.mtd_info*, align 8
  %to.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %retlen.addr = alloca i64*, align 8
  %buf.addr = alloca i8*, align 8
  %nor = alloca %struct.spi_nor*, align 8
  %page_offset = alloca i64, align 8
  %page_remain = alloca i64, align 8
  %i = alloca i64, align 8
  %ret = alloca i64, align 8
  %written = alloca i64, align 8
  %addr = alloca i64, align 8
  %aux = alloca i64, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x247 = alloca i64, align 8
  %__UNIQUE_ID___y248 = alloca i64, align 8
  %tmp336 = alloca i64, align 8
  store %struct.mtd_info* %mtd, %struct.mtd_info** %mtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd.addr, metadata !6397, metadata !DIExpression()), !dbg !6398
  store i64 %to, i64* %to.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %to.addr, metadata !6399, metadata !DIExpression()), !dbg !6400
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6401, metadata !DIExpression()), !dbg !6402
  store i64* %retlen, i64** %retlen.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %retlen.addr, metadata !6403, metadata !DIExpression()), !dbg !6404
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6405, metadata !DIExpression()), !dbg !6406
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor, metadata !6407, metadata !DIExpression()), !dbg !6408
  %0 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6409
  %call = call %struct.spi_nor* @mtd_to_spi_nor(%struct.mtd_info* %0) #9, !dbg !6410
  store %struct.spi_nor* %call, %struct.spi_nor** %nor, align 8, !dbg !6408
  call void @llvm.dbg.declare(metadata i64* %page_offset, metadata !6411, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.declare(metadata i64* %page_remain, metadata !6413, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6415, metadata !DIExpression()), !dbg !6416
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !6417, metadata !DIExpression()), !dbg !6418
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6419
  %call1 = call i32 @spi_nor_lock_and_prep(%struct.spi_nor* %1) #9, !dbg !6420
  %conv = sext i32 %call1 to i64, !dbg !6420
  store i64 %conv, i64* %ret, align 8, !dbg !6421
  %2 = load i64, i64* %ret, align 8, !dbg !6422
  %tobool = icmp ne i64 %2, 0, !dbg !6422
  br i1 %tobool, label %if.then, label %if.end, !dbg !6424

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %ret, align 8, !dbg !6425
  %conv2 = trunc i64 %3 to i32, !dbg !6425
  store i32 %conv2, i32* %retval, align 4, !dbg !6426
  br label %return, !dbg !6426

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !6427
  br label %for.cond, !dbg !6428

for.cond:                                         ; preds = %if.end359, %if.end
  %4 = load i64, i64* %i, align 8, !dbg !6429
  %5 = load i64, i64* %len.addr, align 8, !dbg !6430
  %cmp = icmp ult i64 %4, %5, !dbg !6431
  br i1 %cmp, label %for.body, label %for.end, !dbg !6432

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %written, metadata !6433, metadata !DIExpression()), !dbg !6434
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !6435, metadata !DIExpression()), !dbg !6436
  %6 = load i64, i64* %to.addr, align 8, !dbg !6437
  %7 = load i64, i64* %i, align 8, !dbg !6438
  %add = add i64 %6, %7, !dbg !6439
  store i64 %add, i64* %addr, align 8, !dbg !6436
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 8, !dbg !6440
  %9 = load i32, i32* %page_size, align 8, !dbg !6440
  %10 = call i1 @llvm.is.constant.i32(i32 %9), !dbg !6440
  br i1 %10, label %cond.true, label %cond.false, !dbg !6440

cond.true:                                        ; preds = %for.body
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size4 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %11, i32 0, i32 8, !dbg !6440
  %12 = load i32, i32* %page_size4, align 8, !dbg !6440
  %conv5 = zext i32 %12 to i64, !dbg !6440
  %and = and i64 %conv5, 1, !dbg !6440
  %tobool6 = icmp ne i64 %and, 0, !dbg !6440
  %lnot = xor i1 %tobool6, true, !dbg !6440
  %lnot7 = xor i1 %lnot, true, !dbg !6440
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !6440
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size8 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %13, i32 0, i32 8, !dbg !6440
  %14 = load i32, i32* %page_size8, align 8, !dbg !6440
  %conv9 = zext i32 %14 to i64, !dbg !6440
  %and10 = and i64 %conv9, 2, !dbg !6440
  %tobool11 = icmp ne i64 %and10, 0, !dbg !6440
  %lnot12 = xor i1 %tobool11, true, !dbg !6440
  %lnot14 = xor i1 %lnot12, true, !dbg !6440
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !6440
  %add16 = add i32 %lnot.ext, %lnot.ext15, !dbg !6440
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size17 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %15, i32 0, i32 8, !dbg !6440
  %16 = load i32, i32* %page_size17, align 8, !dbg !6440
  %conv18 = zext i32 %16 to i64, !dbg !6440
  %and19 = and i64 %conv18, 4, !dbg !6440
  %tobool20 = icmp ne i64 %and19, 0, !dbg !6440
  %lnot21 = xor i1 %tobool20, true, !dbg !6440
  %lnot23 = xor i1 %lnot21, true, !dbg !6440
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !6440
  %add25 = add i32 %add16, %lnot.ext24, !dbg !6440
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size26 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %17, i32 0, i32 8, !dbg !6440
  %18 = load i32, i32* %page_size26, align 8, !dbg !6440
  %conv27 = zext i32 %18 to i64, !dbg !6440
  %and28 = and i64 %conv27, 8, !dbg !6440
  %tobool29 = icmp ne i64 %and28, 0, !dbg !6440
  %lnot30 = xor i1 %tobool29, true, !dbg !6440
  %lnot32 = xor i1 %lnot30, true, !dbg !6440
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !6440
  %add34 = add i32 %add25, %lnot.ext33, !dbg !6440
  %19 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size35 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %19, i32 0, i32 8, !dbg !6440
  %20 = load i32, i32* %page_size35, align 8, !dbg !6440
  %conv36 = zext i32 %20 to i64, !dbg !6440
  %and37 = and i64 %conv36, 16, !dbg !6440
  %tobool38 = icmp ne i64 %and37, 0, !dbg !6440
  %lnot39 = xor i1 %tobool38, true, !dbg !6440
  %lnot41 = xor i1 %lnot39, true, !dbg !6440
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !6440
  %add43 = add i32 %add34, %lnot.ext42, !dbg !6440
  %21 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size44 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %21, i32 0, i32 8, !dbg !6440
  %22 = load i32, i32* %page_size44, align 8, !dbg !6440
  %conv45 = zext i32 %22 to i64, !dbg !6440
  %and46 = and i64 %conv45, 32, !dbg !6440
  %tobool47 = icmp ne i64 %and46, 0, !dbg !6440
  %lnot48 = xor i1 %tobool47, true, !dbg !6440
  %lnot50 = xor i1 %lnot48, true, !dbg !6440
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !6440
  %add52 = add i32 %add43, %lnot.ext51, !dbg !6440
  %23 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size53 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %23, i32 0, i32 8, !dbg !6440
  %24 = load i32, i32* %page_size53, align 8, !dbg !6440
  %conv54 = zext i32 %24 to i64, !dbg !6440
  %and55 = and i64 %conv54, 64, !dbg !6440
  %tobool56 = icmp ne i64 %and55, 0, !dbg !6440
  %lnot57 = xor i1 %tobool56, true, !dbg !6440
  %lnot59 = xor i1 %lnot57, true, !dbg !6440
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !6440
  %add61 = add i32 %add52, %lnot.ext60, !dbg !6440
  %25 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size62 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %25, i32 0, i32 8, !dbg !6440
  %26 = load i32, i32* %page_size62, align 8, !dbg !6440
  %conv63 = zext i32 %26 to i64, !dbg !6440
  %and64 = and i64 %conv63, 128, !dbg !6440
  %tobool65 = icmp ne i64 %and64, 0, !dbg !6440
  %lnot66 = xor i1 %tobool65, true, !dbg !6440
  %lnot68 = xor i1 %lnot66, true, !dbg !6440
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !6440
  %add70 = add i32 %add61, %lnot.ext69, !dbg !6440
  %27 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size71 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %27, i32 0, i32 8, !dbg !6440
  %28 = load i32, i32* %page_size71, align 8, !dbg !6440
  %shr = lshr i32 %28, 8, !dbg !6440
  %conv72 = zext i32 %shr to i64, !dbg !6440
  %and73 = and i64 %conv72, 1, !dbg !6440
  %tobool74 = icmp ne i64 %and73, 0, !dbg !6440
  %lnot75 = xor i1 %tobool74, true, !dbg !6440
  %lnot77 = xor i1 %lnot75, true, !dbg !6440
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !6440
  %29 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size79 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %29, i32 0, i32 8, !dbg !6440
  %30 = load i32, i32* %page_size79, align 8, !dbg !6440
  %shr80 = lshr i32 %30, 8, !dbg !6440
  %conv81 = zext i32 %shr80 to i64, !dbg !6440
  %and82 = and i64 %conv81, 2, !dbg !6440
  %tobool83 = icmp ne i64 %and82, 0, !dbg !6440
  %lnot84 = xor i1 %tobool83, true, !dbg !6440
  %lnot86 = xor i1 %lnot84, true, !dbg !6440
  %lnot.ext87 = zext i1 %lnot86 to i32, !dbg !6440
  %add88 = add i32 %lnot.ext78, %lnot.ext87, !dbg !6440
  %31 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size89 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %31, i32 0, i32 8, !dbg !6440
  %32 = load i32, i32* %page_size89, align 8, !dbg !6440
  %shr90 = lshr i32 %32, 8, !dbg !6440
  %conv91 = zext i32 %shr90 to i64, !dbg !6440
  %and92 = and i64 %conv91, 4, !dbg !6440
  %tobool93 = icmp ne i64 %and92, 0, !dbg !6440
  %lnot94 = xor i1 %tobool93, true, !dbg !6440
  %lnot96 = xor i1 %lnot94, true, !dbg !6440
  %lnot.ext97 = zext i1 %lnot96 to i32, !dbg !6440
  %add98 = add i32 %add88, %lnot.ext97, !dbg !6440
  %33 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size99 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %33, i32 0, i32 8, !dbg !6440
  %34 = load i32, i32* %page_size99, align 8, !dbg !6440
  %shr100 = lshr i32 %34, 8, !dbg !6440
  %conv101 = zext i32 %shr100 to i64, !dbg !6440
  %and102 = and i64 %conv101, 8, !dbg !6440
  %tobool103 = icmp ne i64 %and102, 0, !dbg !6440
  %lnot104 = xor i1 %tobool103, true, !dbg !6440
  %lnot106 = xor i1 %lnot104, true, !dbg !6440
  %lnot.ext107 = zext i1 %lnot106 to i32, !dbg !6440
  %add108 = add i32 %add98, %lnot.ext107, !dbg !6440
  %35 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size109 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %35, i32 0, i32 8, !dbg !6440
  %36 = load i32, i32* %page_size109, align 8, !dbg !6440
  %shr110 = lshr i32 %36, 8, !dbg !6440
  %conv111 = zext i32 %shr110 to i64, !dbg !6440
  %and112 = and i64 %conv111, 16, !dbg !6440
  %tobool113 = icmp ne i64 %and112, 0, !dbg !6440
  %lnot114 = xor i1 %tobool113, true, !dbg !6440
  %lnot116 = xor i1 %lnot114, true, !dbg !6440
  %lnot.ext117 = zext i1 %lnot116 to i32, !dbg !6440
  %add118 = add i32 %add108, %lnot.ext117, !dbg !6440
  %37 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size119 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %37, i32 0, i32 8, !dbg !6440
  %38 = load i32, i32* %page_size119, align 8, !dbg !6440
  %shr120 = lshr i32 %38, 8, !dbg !6440
  %conv121 = zext i32 %shr120 to i64, !dbg !6440
  %and122 = and i64 %conv121, 32, !dbg !6440
  %tobool123 = icmp ne i64 %and122, 0, !dbg !6440
  %lnot124 = xor i1 %tobool123, true, !dbg !6440
  %lnot126 = xor i1 %lnot124, true, !dbg !6440
  %lnot.ext127 = zext i1 %lnot126 to i32, !dbg !6440
  %add128 = add i32 %add118, %lnot.ext127, !dbg !6440
  %39 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size129 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %39, i32 0, i32 8, !dbg !6440
  %40 = load i32, i32* %page_size129, align 8, !dbg !6440
  %shr130 = lshr i32 %40, 8, !dbg !6440
  %conv131 = zext i32 %shr130 to i64, !dbg !6440
  %and132 = and i64 %conv131, 64, !dbg !6440
  %tobool133 = icmp ne i64 %and132, 0, !dbg !6440
  %lnot134 = xor i1 %tobool133, true, !dbg !6440
  %lnot136 = xor i1 %lnot134, true, !dbg !6440
  %lnot.ext137 = zext i1 %lnot136 to i32, !dbg !6440
  %add138 = add i32 %add128, %lnot.ext137, !dbg !6440
  %41 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size139 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %41, i32 0, i32 8, !dbg !6440
  %42 = load i32, i32* %page_size139, align 8, !dbg !6440
  %shr140 = lshr i32 %42, 8, !dbg !6440
  %conv141 = zext i32 %shr140 to i64, !dbg !6440
  %and142 = and i64 %conv141, 128, !dbg !6440
  %tobool143 = icmp ne i64 %and142, 0, !dbg !6440
  %lnot144 = xor i1 %tobool143, true, !dbg !6440
  %lnot146 = xor i1 %lnot144, true, !dbg !6440
  %lnot.ext147 = zext i1 %lnot146 to i32, !dbg !6440
  %add148 = add i32 %add138, %lnot.ext147, !dbg !6440
  %add149 = add i32 %add70, %add148, !dbg !6440
  %43 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size150 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %43, i32 0, i32 8, !dbg !6440
  %44 = load i32, i32* %page_size150, align 8, !dbg !6440
  %shr151 = lshr i32 %44, 16, !dbg !6440
  %conv152 = zext i32 %shr151 to i64, !dbg !6440
  %and153 = and i64 %conv152, 1, !dbg !6440
  %tobool154 = icmp ne i64 %and153, 0, !dbg !6440
  %lnot155 = xor i1 %tobool154, true, !dbg !6440
  %lnot157 = xor i1 %lnot155, true, !dbg !6440
  %lnot.ext158 = zext i1 %lnot157 to i32, !dbg !6440
  %45 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size159 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %45, i32 0, i32 8, !dbg !6440
  %46 = load i32, i32* %page_size159, align 8, !dbg !6440
  %shr160 = lshr i32 %46, 16, !dbg !6440
  %conv161 = zext i32 %shr160 to i64, !dbg !6440
  %and162 = and i64 %conv161, 2, !dbg !6440
  %tobool163 = icmp ne i64 %and162, 0, !dbg !6440
  %lnot164 = xor i1 %tobool163, true, !dbg !6440
  %lnot166 = xor i1 %lnot164, true, !dbg !6440
  %lnot.ext167 = zext i1 %lnot166 to i32, !dbg !6440
  %add168 = add i32 %lnot.ext158, %lnot.ext167, !dbg !6440
  %47 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size169 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %47, i32 0, i32 8, !dbg !6440
  %48 = load i32, i32* %page_size169, align 8, !dbg !6440
  %shr170 = lshr i32 %48, 16, !dbg !6440
  %conv171 = zext i32 %shr170 to i64, !dbg !6440
  %and172 = and i64 %conv171, 4, !dbg !6440
  %tobool173 = icmp ne i64 %and172, 0, !dbg !6440
  %lnot174 = xor i1 %tobool173, true, !dbg !6440
  %lnot176 = xor i1 %lnot174, true, !dbg !6440
  %lnot.ext177 = zext i1 %lnot176 to i32, !dbg !6440
  %add178 = add i32 %add168, %lnot.ext177, !dbg !6440
  %49 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size179 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %49, i32 0, i32 8, !dbg !6440
  %50 = load i32, i32* %page_size179, align 8, !dbg !6440
  %shr180 = lshr i32 %50, 16, !dbg !6440
  %conv181 = zext i32 %shr180 to i64, !dbg !6440
  %and182 = and i64 %conv181, 8, !dbg !6440
  %tobool183 = icmp ne i64 %and182, 0, !dbg !6440
  %lnot184 = xor i1 %tobool183, true, !dbg !6440
  %lnot186 = xor i1 %lnot184, true, !dbg !6440
  %lnot.ext187 = zext i1 %lnot186 to i32, !dbg !6440
  %add188 = add i32 %add178, %lnot.ext187, !dbg !6440
  %51 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size189 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %51, i32 0, i32 8, !dbg !6440
  %52 = load i32, i32* %page_size189, align 8, !dbg !6440
  %shr190 = lshr i32 %52, 16, !dbg !6440
  %conv191 = zext i32 %shr190 to i64, !dbg !6440
  %and192 = and i64 %conv191, 16, !dbg !6440
  %tobool193 = icmp ne i64 %and192, 0, !dbg !6440
  %lnot194 = xor i1 %tobool193, true, !dbg !6440
  %lnot196 = xor i1 %lnot194, true, !dbg !6440
  %lnot.ext197 = zext i1 %lnot196 to i32, !dbg !6440
  %add198 = add i32 %add188, %lnot.ext197, !dbg !6440
  %53 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size199 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %53, i32 0, i32 8, !dbg !6440
  %54 = load i32, i32* %page_size199, align 8, !dbg !6440
  %shr200 = lshr i32 %54, 16, !dbg !6440
  %conv201 = zext i32 %shr200 to i64, !dbg !6440
  %and202 = and i64 %conv201, 32, !dbg !6440
  %tobool203 = icmp ne i64 %and202, 0, !dbg !6440
  %lnot204 = xor i1 %tobool203, true, !dbg !6440
  %lnot206 = xor i1 %lnot204, true, !dbg !6440
  %lnot.ext207 = zext i1 %lnot206 to i32, !dbg !6440
  %add208 = add i32 %add198, %lnot.ext207, !dbg !6440
  %55 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size209 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %55, i32 0, i32 8, !dbg !6440
  %56 = load i32, i32* %page_size209, align 8, !dbg !6440
  %shr210 = lshr i32 %56, 16, !dbg !6440
  %conv211 = zext i32 %shr210 to i64, !dbg !6440
  %and212 = and i64 %conv211, 64, !dbg !6440
  %tobool213 = icmp ne i64 %and212, 0, !dbg !6440
  %lnot214 = xor i1 %tobool213, true, !dbg !6440
  %lnot216 = xor i1 %lnot214, true, !dbg !6440
  %lnot.ext217 = zext i1 %lnot216 to i32, !dbg !6440
  %add218 = add i32 %add208, %lnot.ext217, !dbg !6440
  %57 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size219 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %57, i32 0, i32 8, !dbg !6440
  %58 = load i32, i32* %page_size219, align 8, !dbg !6440
  %shr220 = lshr i32 %58, 16, !dbg !6440
  %conv221 = zext i32 %shr220 to i64, !dbg !6440
  %and222 = and i64 %conv221, 128, !dbg !6440
  %tobool223 = icmp ne i64 %and222, 0, !dbg !6440
  %lnot224 = xor i1 %tobool223, true, !dbg !6440
  %lnot226 = xor i1 %lnot224, true, !dbg !6440
  %lnot.ext227 = zext i1 %lnot226 to i32, !dbg !6440
  %add228 = add i32 %add218, %lnot.ext227, !dbg !6440
  %59 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size229 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %59, i32 0, i32 8, !dbg !6440
  %60 = load i32, i32* %page_size229, align 8, !dbg !6440
  %shr230 = lshr i32 %60, 16, !dbg !6440
  %shr231 = lshr i32 %shr230, 8, !dbg !6440
  %conv232 = zext i32 %shr231 to i64, !dbg !6440
  %and233 = and i64 %conv232, 1, !dbg !6440
  %tobool234 = icmp ne i64 %and233, 0, !dbg !6440
  %lnot235 = xor i1 %tobool234, true, !dbg !6440
  %lnot237 = xor i1 %lnot235, true, !dbg !6440
  %lnot.ext238 = zext i1 %lnot237 to i32, !dbg !6440
  %61 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size239 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %61, i32 0, i32 8, !dbg !6440
  %62 = load i32, i32* %page_size239, align 8, !dbg !6440
  %shr240 = lshr i32 %62, 16, !dbg !6440
  %shr241 = lshr i32 %shr240, 8, !dbg !6440
  %conv242 = zext i32 %shr241 to i64, !dbg !6440
  %and243 = and i64 %conv242, 2, !dbg !6440
  %tobool244 = icmp ne i64 %and243, 0, !dbg !6440
  %lnot245 = xor i1 %tobool244, true, !dbg !6440
  %lnot247 = xor i1 %lnot245, true, !dbg !6440
  %lnot.ext248 = zext i1 %lnot247 to i32, !dbg !6440
  %add249 = add i32 %lnot.ext238, %lnot.ext248, !dbg !6440
  %63 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size250 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %63, i32 0, i32 8, !dbg !6440
  %64 = load i32, i32* %page_size250, align 8, !dbg !6440
  %shr251 = lshr i32 %64, 16, !dbg !6440
  %shr252 = lshr i32 %shr251, 8, !dbg !6440
  %conv253 = zext i32 %shr252 to i64, !dbg !6440
  %and254 = and i64 %conv253, 4, !dbg !6440
  %tobool255 = icmp ne i64 %and254, 0, !dbg !6440
  %lnot256 = xor i1 %tobool255, true, !dbg !6440
  %lnot258 = xor i1 %lnot256, true, !dbg !6440
  %lnot.ext259 = zext i1 %lnot258 to i32, !dbg !6440
  %add260 = add i32 %add249, %lnot.ext259, !dbg !6440
  %65 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size261 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %65, i32 0, i32 8, !dbg !6440
  %66 = load i32, i32* %page_size261, align 8, !dbg !6440
  %shr262 = lshr i32 %66, 16, !dbg !6440
  %shr263 = lshr i32 %shr262, 8, !dbg !6440
  %conv264 = zext i32 %shr263 to i64, !dbg !6440
  %and265 = and i64 %conv264, 8, !dbg !6440
  %tobool266 = icmp ne i64 %and265, 0, !dbg !6440
  %lnot267 = xor i1 %tobool266, true, !dbg !6440
  %lnot269 = xor i1 %lnot267, true, !dbg !6440
  %lnot.ext270 = zext i1 %lnot269 to i32, !dbg !6440
  %add271 = add i32 %add260, %lnot.ext270, !dbg !6440
  %67 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size272 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %67, i32 0, i32 8, !dbg !6440
  %68 = load i32, i32* %page_size272, align 8, !dbg !6440
  %shr273 = lshr i32 %68, 16, !dbg !6440
  %shr274 = lshr i32 %shr273, 8, !dbg !6440
  %conv275 = zext i32 %shr274 to i64, !dbg !6440
  %and276 = and i64 %conv275, 16, !dbg !6440
  %tobool277 = icmp ne i64 %and276, 0, !dbg !6440
  %lnot278 = xor i1 %tobool277, true, !dbg !6440
  %lnot280 = xor i1 %lnot278, true, !dbg !6440
  %lnot.ext281 = zext i1 %lnot280 to i32, !dbg !6440
  %add282 = add i32 %add271, %lnot.ext281, !dbg !6440
  %69 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size283 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %69, i32 0, i32 8, !dbg !6440
  %70 = load i32, i32* %page_size283, align 8, !dbg !6440
  %shr284 = lshr i32 %70, 16, !dbg !6440
  %shr285 = lshr i32 %shr284, 8, !dbg !6440
  %conv286 = zext i32 %shr285 to i64, !dbg !6440
  %and287 = and i64 %conv286, 32, !dbg !6440
  %tobool288 = icmp ne i64 %and287, 0, !dbg !6440
  %lnot289 = xor i1 %tobool288, true, !dbg !6440
  %lnot291 = xor i1 %lnot289, true, !dbg !6440
  %lnot.ext292 = zext i1 %lnot291 to i32, !dbg !6440
  %add293 = add i32 %add282, %lnot.ext292, !dbg !6440
  %71 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size294 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %71, i32 0, i32 8, !dbg !6440
  %72 = load i32, i32* %page_size294, align 8, !dbg !6440
  %shr295 = lshr i32 %72, 16, !dbg !6440
  %shr296 = lshr i32 %shr295, 8, !dbg !6440
  %conv297 = zext i32 %shr296 to i64, !dbg !6440
  %and298 = and i64 %conv297, 64, !dbg !6440
  %tobool299 = icmp ne i64 %and298, 0, !dbg !6440
  %lnot300 = xor i1 %tobool299, true, !dbg !6440
  %lnot302 = xor i1 %lnot300, true, !dbg !6440
  %lnot.ext303 = zext i1 %lnot302 to i32, !dbg !6440
  %add304 = add i32 %add293, %lnot.ext303, !dbg !6440
  %73 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size305 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %73, i32 0, i32 8, !dbg !6440
  %74 = load i32, i32* %page_size305, align 8, !dbg !6440
  %shr306 = lshr i32 %74, 16, !dbg !6440
  %shr307 = lshr i32 %shr306, 8, !dbg !6440
  %conv308 = zext i32 %shr307 to i64, !dbg !6440
  %and309 = and i64 %conv308, 128, !dbg !6440
  %tobool310 = icmp ne i64 %and309, 0, !dbg !6440
  %lnot311 = xor i1 %tobool310, true, !dbg !6440
  %lnot313 = xor i1 %lnot311, true, !dbg !6440
  %lnot.ext314 = zext i1 %lnot313 to i32, !dbg !6440
  %add315 = add i32 %add304, %lnot.ext314, !dbg !6440
  %add316 = add i32 %add228, %add315, !dbg !6440
  %add317 = add i32 %add149, %add316, !dbg !6440
  br label %cond.end, !dbg !6440

cond.false:                                       ; preds = %for.body
  %75 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6440
  %page_size318 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %75, i32 0, i32 8, !dbg !6440
  %76 = load i32, i32* %page_size318, align 8, !dbg !6440
  store i32 %76, i32* %w.addr.i, align 4
  %77 = load i32, i32* %w.addr.i, align 4, !dbg !6441
  %78 = call i32 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight32\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntl $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i32 %77) #12, !dbg !6442, !srcloc !6443
  store i32 %78, i32* %res.i, align 4, !dbg !6442
  %79 = load i32, i32* %res.i, align 4, !dbg !6444
  br label %cond.end, !dbg !6440

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add317, %cond.true ], [ %79, %cond.false ], !dbg !6440
  %cmp320 = icmp eq i32 %cond, 1, !dbg !6445
  br i1 %cmp320, label %if.then322, label %if.else, !dbg !6446

if.then322:                                       ; preds = %cond.end
  %80 = load i64, i64* %addr, align 8, !dbg !6447
  %81 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6449
  %page_size323 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %81, i32 0, i32 8, !dbg !6450
  %82 = load i32, i32* %page_size323, align 8, !dbg !6450
  %sub = sub i32 %82, 1, !dbg !6451
  %conv324 = zext i32 %sub to i64, !dbg !6452
  %and325 = and i64 %80, %conv324, !dbg !6453
  store i64 %and325, i64* %page_offset, align 8, !dbg !6454
  br label %if.end331, !dbg !6455

if.else:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %aux, metadata !6456, metadata !DIExpression()), !dbg !6458
  %83 = load i64, i64* %addr, align 8, !dbg !6459
  store i64 %83, i64* %aux, align 8, !dbg !6458
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !6460, metadata !DIExpression()), !dbg !6462
  %84 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6462
  %page_size326 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %84, i32 0, i32 8, !dbg !6462
  %85 = load i32, i32* %page_size326, align 8, !dbg !6462
  store i32 %85, i32* %__base, align 4, !dbg !6462
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !6463, metadata !DIExpression()), !dbg !6462
  %86 = load i64, i64* %aux, align 8, !dbg !6462
  %87 = load i32, i32* %__base, align 4, !dbg !6462
  %conv327 = zext i32 %87 to i64, !dbg !6462
  %rem = urem i64 %86, %conv327, !dbg !6462
  %conv328 = trunc i64 %rem to i32, !dbg !6462
  store i32 %conv328, i32* %__rem, align 4, !dbg !6462
  %88 = load i64, i64* %aux, align 8, !dbg !6462
  %89 = load i32, i32* %__base, align 4, !dbg !6462
  %conv329 = zext i32 %89 to i64, !dbg !6462
  %div = udiv i64 %88, %conv329, !dbg !6462
  store i64 %div, i64* %aux, align 8, !dbg !6462
  %90 = load i32, i32* %__rem, align 4, !dbg !6462
  store i32 %90, i32* %tmp, align 4, !dbg !6462
  %91 = load i32, i32* %tmp, align 4, !dbg !6462
  %conv330 = zext i32 %91 to i64, !dbg !6464
  store i64 %conv330, i64* %page_offset, align 8, !dbg !6465
  br label %if.end331

if.end331:                                        ; preds = %if.else, %if.then322
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x247, metadata !6466, metadata !DIExpression()), !dbg !6468
  %92 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6468
  %page_size332 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %92, i32 0, i32 8, !dbg !6468
  %93 = load i32, i32* %page_size332, align 8, !dbg !6468
  %conv333 = zext i32 %93 to i64, !dbg !6468
  %94 = load i64, i64* %page_offset, align 8, !dbg !6468
  %sub334 = sub i64 %conv333, %94, !dbg !6468
  store i64 %sub334, i64* %__UNIQUE_ID___x247, align 8, !dbg !6468
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y248, metadata !6469, metadata !DIExpression()), !dbg !6468
  %95 = load i64, i64* %len.addr, align 8, !dbg !6468
  %96 = load i64, i64* %i, align 8, !dbg !6468
  %sub335 = sub i64 %95, %96, !dbg !6468
  store i64 %sub335, i64* %__UNIQUE_ID___y248, align 8, !dbg !6468
  %97 = load i64, i64* %__UNIQUE_ID___x247, align 8, !dbg !6468
  %98 = load i64, i64* %__UNIQUE_ID___y248, align 8, !dbg !6468
  %cmp337 = icmp ult i64 %97, %98, !dbg !6468
  br i1 %cmp337, label %cond.true339, label %cond.false340, !dbg !6468

cond.true339:                                     ; preds = %if.end331
  %99 = load i64, i64* %__UNIQUE_ID___x247, align 8, !dbg !6468
  br label %cond.end341, !dbg !6468

cond.false340:                                    ; preds = %if.end331
  %100 = load i64, i64* %__UNIQUE_ID___y248, align 8, !dbg !6468
  br label %cond.end341, !dbg !6468

cond.end341:                                      ; preds = %cond.false340, %cond.true339
  %cond342 = phi i64 [ %99, %cond.true339 ], [ %100, %cond.false340 ], !dbg !6468
  store i64 %cond342, i64* %tmp336, align 8, !dbg !6468
  %101 = load i64, i64* %tmp336, align 8, !dbg !6468
  store i64 %101, i64* %page_remain, align 8, !dbg !6470
  %102 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6471
  %103 = load i64, i64* %addr, align 8, !dbg !6472
  %call343 = call i32 @spi_nor_convert_addr(%struct.spi_nor* %102, i64 %103) #9, !dbg !6473
  %conv344 = zext i32 %call343 to i64, !dbg !6473
  store i64 %conv344, i64* %addr, align 8, !dbg !6474
  %104 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6475
  %call345 = call i32 @spi_nor_write_enable(%struct.spi_nor* %104) #9, !dbg !6476
  %conv346 = sext i32 %call345 to i64, !dbg !6476
  store i64 %conv346, i64* %ret, align 8, !dbg !6477
  %105 = load i64, i64* %ret, align 8, !dbg !6478
  %tobool347 = icmp ne i64 %105, 0, !dbg !6478
  br i1 %tobool347, label %if.then348, label %if.end349, !dbg !6480

if.then348:                                       ; preds = %cond.end341
  br label %write_err, !dbg !6481

if.end349:                                        ; preds = %cond.end341
  %106 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6482
  %107 = load i64, i64* %addr, align 8, !dbg !6483
  %108 = load i64, i64* %page_remain, align 8, !dbg !6484
  %109 = load i8*, i8** %buf.addr, align 8, !dbg !6485
  %110 = load i64, i64* %i, align 8, !dbg !6486
  %add.ptr = getelementptr i8, i8* %109, i64 %110, !dbg !6487
  %call350 = call i64 @spi_nor_write_data(%struct.spi_nor* %106, i64 %107, i64 %108, i8* %add.ptr) #9, !dbg !6488
  store i64 %call350, i64* %ret, align 8, !dbg !6489
  %111 = load i64, i64* %ret, align 8, !dbg !6490
  %cmp351 = icmp slt i64 %111, 0, !dbg !6492
  br i1 %cmp351, label %if.then353, label %if.end354, !dbg !6493

if.then353:                                       ; preds = %if.end349
  br label %write_err, !dbg !6494

if.end354:                                        ; preds = %if.end349
  %112 = load i64, i64* %ret, align 8, !dbg !6495
  store i64 %112, i64* %written, align 8, !dbg !6496
  %113 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6497
  %call355 = call i32 @spi_nor_wait_till_ready(%struct.spi_nor* %113) #9, !dbg !6498
  %conv356 = sext i32 %call355 to i64, !dbg !6498
  store i64 %conv356, i64* %ret, align 8, !dbg !6499
  %114 = load i64, i64* %ret, align 8, !dbg !6500
  %tobool357 = icmp ne i64 %114, 0, !dbg !6500
  br i1 %tobool357, label %if.then358, label %if.end359, !dbg !6502

if.then358:                                       ; preds = %if.end354
  br label %write_err, !dbg !6503

if.end359:                                        ; preds = %if.end354
  %115 = load i64, i64* %written, align 8, !dbg !6504
  %116 = load i64*, i64** %retlen.addr, align 8, !dbg !6505
  %117 = load i64, i64* %116, align 8, !dbg !6506
  %add360 = add i64 %117, %115, !dbg !6506
  store i64 %add360, i64* %116, align 8, !dbg !6506
  %118 = load i64, i64* %written, align 8, !dbg !6507
  %119 = load i64, i64* %i, align 8, !dbg !6508
  %add361 = add i64 %119, %118, !dbg !6508
  store i64 %add361, i64* %i, align 8, !dbg !6508
  br label %for.cond, !dbg !6509, !llvm.loop !6510

for.end:                                          ; preds = %for.cond
  br label %write_err, !dbg !6511

write_err:                                        ; preds = %for.end, %if.then358, %if.then353, %if.then348
  call void @llvm.dbg.label(metadata !6512), !dbg !6513
  %120 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6514
  call void @spi_nor_unlock_and_unprep(%struct.spi_nor* %120) #9, !dbg !6515
  %121 = load i64, i64* %ret, align 8, !dbg !6516
  %conv362 = trunc i64 %121 to i32, !dbg !6516
  store i32 %conv362, i32* %retval, align 4, !dbg !6517
  br label %return, !dbg !6517

return:                                           ; preds = %write_err, %if.then
  %122 = load i32, i32* %retval, align 4, !dbg !6518
  ret i32 %122, !dbg !6518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_init_params(%struct.spi_nor* %nor) #0 !dbg !6519 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !6520, metadata !DIExpression()), !dbg !6521
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6522
  %dev = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 2, !dbg !6523
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6523
  %call = call i8* @devm_kzalloc(%struct.device* %1, i64 328, i32 3264) #9, !dbg !6524
  %2 = bitcast i8* %call to %struct.spi_nor_flash_parameter*, !dbg !6524
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6525
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 20, !dbg !6526
  store %struct.spi_nor_flash_parameter* %2, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !6527
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6528
  %params1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 20, !dbg !6530
  %5 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params1, align 8, !dbg !6530
  %tobool = icmp ne %struct.spi_nor_flash_parameter* %5, null, !dbg !6528
  br i1 %tobool, label %if.end, label %if.then, !dbg !6531

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6532
  br label %return, !dbg !6532

if.end:                                           ; preds = %entry
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6533
  call void @spi_nor_info_init_params(%struct.spi_nor* %6) #9, !dbg !6534
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6535
  call void @spi_nor_manufacturer_init_params(%struct.spi_nor* %7) #9, !dbg !6536
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6537
  %info = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 6, !dbg !6539
  %9 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6539
  %flags = getelementptr inbounds %struct.flash_info, %struct.flash_info* %9, i32 0, i32 7, !dbg !6540
  %10 = load i32, i32* %flags, align 4, !dbg !6540
  %conv = zext i32 %10 to i64, !dbg !6537
  %and = and i64 %conv, 96, !dbg !6541
  %tobool2 = icmp ne i64 %and, 0, !dbg !6541
  br i1 %tobool2, label %land.lhs.true, label %if.end9, !dbg !6542

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6543
  %info3 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %11, i32 0, i32 6, !dbg !6544
  %12 = load %struct.flash_info*, %struct.flash_info** %info3, align 8, !dbg !6544
  %flags4 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %12, i32 0, i32 7, !dbg !6545
  %13 = load i32, i32* %flags4, align 4, !dbg !6545
  %conv5 = zext i32 %13 to i64, !dbg !6543
  %and6 = and i64 %conv5, 8192, !dbg !6546
  %tobool7 = icmp ne i64 %and6, 0, !dbg !6546
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !6547

if.then8:                                         ; preds = %land.lhs.true
  %14 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6548
  call void @spi_nor_sfdp_init_params(%struct.spi_nor* %14) #9, !dbg !6549
  br label %if.end9, !dbg !6549

if.end9:                                          ; preds = %if.then8, %land.lhs.true, %if.end
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6550
  call void @spi_nor_post_sfdp_fixups(%struct.spi_nor* %15) #9, !dbg !6551
  %16 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6552
  call void @spi_nor_late_init_params(%struct.spi_nor* %16) #9, !dbg !6553
  store i32 0, i32* %retval, align 4, !dbg !6554
  br label %return, !dbg !6554

return:                                           ; preds = %if.end9, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !6555
  ret i32 %17, !dbg !6555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !6556 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6559, metadata !DIExpression()), !dbg !6560
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6561
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !6563
  %1 = load i8*, i8** %init_name, align 8, !dbg !6563
  %tobool = icmp ne i8* %1, null, !dbg !6561
  br i1 %tobool, label %if.then, label %if.end, !dbg !6564

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6565
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !6566
  %3 = load i8*, i8** %init_name1, align 8, !dbg !6566
  store i8* %3, i8** %retval, align 8, !dbg !6567
  br label %return, !dbg !6567

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6568
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !6569
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #9, !dbg !6570
  store i8* %call, i8** %retval, align 8, !dbg !6571
  br label %return, !dbg !6571

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !6572
  ret i8* %5, !dbg !6572
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_erase(%struct.mtd_info* %mtd, %struct.erase_info* %instr) #0 !dbg !6573 {
entry:
  %retval = alloca i32, align 4
  %mtd.addr = alloca %struct.mtd_info*, align 8
  %instr.addr = alloca %struct.erase_info*, align 8
  %nor = alloca %struct.spi_nor*, align 8
  %addr = alloca i32, align 4
  %len = alloca i32, align 4
  %rem = alloca i32, align 4
  %ret = alloca i32, align 4
  %timeout = alloca i64, align 8
  %__UNIQUE_ID___x244 = alloca i64, align 8
  %__UNIQUE_ID___y245 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.mtd_info* %mtd, %struct.mtd_info** %mtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd.addr, metadata !6574, metadata !DIExpression()), !dbg !6575
  store %struct.erase_info* %instr, %struct.erase_info** %instr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.erase_info** %instr.addr, metadata !6576, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor, metadata !6578, metadata !DIExpression()), !dbg !6579
  %0 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6580
  %call = call %struct.spi_nor* @mtd_to_spi_nor(%struct.mtd_info* %0) #9, !dbg !6581
  store %struct.spi_nor* %call, %struct.spi_nor** %nor, align 8, !dbg !6579
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !6582, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6584, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.declare(metadata i32* %rem, metadata !6586, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6588, metadata !DIExpression()), !dbg !6589
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6590
  %call1 = call zeroext i1 @spi_nor_has_uniform_erase(%struct.spi_nor* %1) #9, !dbg !6592
  br i1 %call1, label %if.then, label %if.end5, !dbg !6593

if.then:                                          ; preds = %entry
  %2 = load %struct.erase_info*, %struct.erase_info** %instr.addr, align 8, !dbg !6594
  %len2 = getelementptr inbounds %struct.erase_info, %struct.erase_info* %2, i32 0, i32 1, !dbg !6596
  %3 = load i64, i64* %len2, align 8, !dbg !6596
  %4 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6597
  %erasesize = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %4, i32 0, i32 3, !dbg !6598
  %5 = load i32, i32* %erasesize, align 8, !dbg !6598
  %call3 = call i64 @div_u64_rem(i64 %3, i32 %5, i32* %rem) #9, !dbg !6599
  %6 = load i32, i32* %rem, align 4, !dbg !6600
  %tobool = icmp ne i32 %6, 0, !dbg !6600
  br i1 %tobool, label %if.then4, label %if.end, !dbg !6602

if.then4:                                         ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !6603
  br label %return, !dbg !6603

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !6604

if.end5:                                          ; preds = %if.end, %entry
  %7 = load %struct.erase_info*, %struct.erase_info** %instr.addr, align 8, !dbg !6605
  %addr6 = getelementptr inbounds %struct.erase_info, %struct.erase_info* %7, i32 0, i32 0, !dbg !6606
  %8 = load i64, i64* %addr6, align 8, !dbg !6606
  %conv = trunc i64 %8 to i32, !dbg !6605
  store i32 %conv, i32* %addr, align 4, !dbg !6607
  %9 = load %struct.erase_info*, %struct.erase_info** %instr.addr, align 8, !dbg !6608
  %len7 = getelementptr inbounds %struct.erase_info, %struct.erase_info* %9, i32 0, i32 1, !dbg !6609
  %10 = load i64, i64* %len7, align 8, !dbg !6609
  %conv8 = trunc i64 %10 to i32, !dbg !6608
  store i32 %conv8, i32* %len, align 4, !dbg !6610
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6611
  %call9 = call i32 @spi_nor_lock_and_prep(%struct.spi_nor* %11) #9, !dbg !6612
  store i32 %call9, i32* %ret, align 4, !dbg !6613
  %12 = load i32, i32* %ret, align 4, !dbg !6614
  %tobool10 = icmp ne i32 %12, 0, !dbg !6614
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !6616

if.then11:                                        ; preds = %if.end5
  %13 = load i32, i32* %ret, align 4, !dbg !6617
  store i32 %13, i32* %retval, align 4, !dbg !6618
  br label %return, !dbg !6618

if.end12:                                         ; preds = %if.end5
  %14 = load i32, i32* %len, align 4, !dbg !6619
  %conv13 = zext i32 %14 to i64, !dbg !6619
  %15 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6621
  %size = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %15, i32 0, i32 2, !dbg !6622
  %16 = load i64, i64* %size, align 8, !dbg !6622
  %cmp = icmp eq i64 %conv13, %16, !dbg !6623
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6624

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6625
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %17, i32 0, i32 18, !dbg !6626
  %18 = load i32, i32* %flags, align 4, !dbg !6626
  %and = and i32 %18, 4, !dbg !6627
  %tobool15 = icmp ne i32 %and, 0, !dbg !6627
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !6628

if.then16:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !6629, metadata !DIExpression()), !dbg !6631
  %19 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6632
  %call17 = call i32 @spi_nor_write_enable(%struct.spi_nor* %19) #9, !dbg !6633
  store i32 %call17, i32* %ret, align 4, !dbg !6634
  %20 = load i32, i32* %ret, align 4, !dbg !6635
  %tobool18 = icmp ne i32 %20, 0, !dbg !6635
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !6637

if.then19:                                        ; preds = %if.then16
  br label %erase_err, !dbg !6638

if.end20:                                         ; preds = %if.then16
  %21 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6639
  %call21 = call i32 @spi_nor_erase_chip(%struct.spi_nor* %21) #9, !dbg !6640
  store i32 %call21, i32* %ret, align 4, !dbg !6641
  %22 = load i32, i32* %ret, align 4, !dbg !6642
  %tobool22 = icmp ne i32 %22, 0, !dbg !6642
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !6644

if.then23:                                        ; preds = %if.end20
  br label %erase_err, !dbg !6645

if.end24:                                         ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x244, metadata !6646, metadata !DIExpression()), !dbg !6648
  store i64 10000, i64* %__UNIQUE_ID___x244, align 8, !dbg !6648
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y245, metadata !6649, metadata !DIExpression()), !dbg !6648
  %23 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6648
  %size25 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %23, i32 0, i32 2, !dbg !6648
  %24 = load i64, i64* %size25, align 8, !dbg !6648
  %div = udiv i64 %24, 2097152, !dbg !6648
  %mul = mul i64 10000, %div, !dbg !6648
  store i64 %mul, i64* %__UNIQUE_ID___y245, align 8, !dbg !6648
  %25 = load i64, i64* %__UNIQUE_ID___x244, align 8, !dbg !6648
  %26 = load i64, i64* %__UNIQUE_ID___y245, align 8, !dbg !6648
  %cmp26 = icmp ugt i64 %25, %26, !dbg !6648
  br i1 %cmp26, label %cond.true, label %cond.false, !dbg !6648

cond.true:                                        ; preds = %if.end24
  %27 = load i64, i64* %__UNIQUE_ID___x244, align 8, !dbg !6648
  br label %cond.end, !dbg !6648

cond.false:                                       ; preds = %if.end24
  %28 = load i64, i64* %__UNIQUE_ID___y245, align 8, !dbg !6648
  br label %cond.end, !dbg !6648

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %27, %cond.true ], [ %28, %cond.false ], !dbg !6648
  store i64 %cond, i64* %tmp, align 8, !dbg !6648
  %29 = load i64, i64* %tmp, align 8, !dbg !6648
  store i64 %29, i64* %timeout, align 8, !dbg !6650
  %30 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6651
  %31 = load i64, i64* %timeout, align 8, !dbg !6652
  %call28 = call i32 @spi_nor_wait_till_ready_with_timeout(%struct.spi_nor* %30, i64 %31) #9, !dbg !6653
  store i32 %call28, i32* %ret, align 4, !dbg !6654
  %32 = load i32, i32* %ret, align 4, !dbg !6655
  %tobool29 = icmp ne i32 %32, 0, !dbg !6655
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !6657

if.then30:                                        ; preds = %cond.end
  br label %erase_err, !dbg !6658

if.end31:                                         ; preds = %cond.end
  br label %if.end56, !dbg !6659

if.else:                                          ; preds = %land.lhs.true, %if.end12
  %33 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6660
  %call32 = call zeroext i1 @spi_nor_has_uniform_erase(%struct.spi_nor* %33) #9, !dbg !6662
  br i1 %call32, label %if.then33, label %if.else49, !dbg !6663

if.then33:                                        ; preds = %if.else
  br label %while.cond, !dbg !6664

while.cond:                                       ; preds = %if.end48, %if.then33
  %34 = load i32, i32* %len, align 4, !dbg !6666
  %tobool34 = icmp ne i32 %34, 0, !dbg !6664
  br i1 %tobool34, label %while.body, label %while.end, !dbg !6664

while.body:                                       ; preds = %while.cond
  %35 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6667
  %call35 = call i32 @spi_nor_write_enable(%struct.spi_nor* %35) #9, !dbg !6669
  store i32 %call35, i32* %ret, align 4, !dbg !6670
  %36 = load i32, i32* %ret, align 4, !dbg !6671
  %tobool36 = icmp ne i32 %36, 0, !dbg !6671
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !6673

if.then37:                                        ; preds = %while.body
  br label %erase_err, !dbg !6674

if.end38:                                         ; preds = %while.body
  %37 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6675
  %38 = load i32, i32* %addr, align 4, !dbg !6676
  %call39 = call i32 @spi_nor_erase_sector(%struct.spi_nor* %37, i32 %38) #9, !dbg !6677
  store i32 %call39, i32* %ret, align 4, !dbg !6678
  %39 = load i32, i32* %ret, align 4, !dbg !6679
  %tobool40 = icmp ne i32 %39, 0, !dbg !6679
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !6681

if.then41:                                        ; preds = %if.end38
  br label %erase_err, !dbg !6682

if.end42:                                         ; preds = %if.end38
  %40 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6683
  %erasesize43 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %40, i32 0, i32 3, !dbg !6684
  %41 = load i32, i32* %erasesize43, align 8, !dbg !6684
  %42 = load i32, i32* %addr, align 4, !dbg !6685
  %add = add i32 %42, %41, !dbg !6685
  store i32 %add, i32* %addr, align 4, !dbg !6685
  %43 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6686
  %erasesize44 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %43, i32 0, i32 3, !dbg !6687
  %44 = load i32, i32* %erasesize44, align 8, !dbg !6687
  %45 = load i32, i32* %len, align 4, !dbg !6688
  %sub = sub i32 %45, %44, !dbg !6688
  store i32 %sub, i32* %len, align 4, !dbg !6688
  %46 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6689
  %call45 = call i32 @spi_nor_wait_till_ready(%struct.spi_nor* %46) #9, !dbg !6690
  store i32 %call45, i32* %ret, align 4, !dbg !6691
  %47 = load i32, i32* %ret, align 4, !dbg !6692
  %tobool46 = icmp ne i32 %47, 0, !dbg !6692
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !6694

if.then47:                                        ; preds = %if.end42
  br label %erase_err, !dbg !6695

if.end48:                                         ; preds = %if.end42
  br label %while.cond, !dbg !6664, !llvm.loop !6696

while.end:                                        ; preds = %while.cond
  br label %if.end55, !dbg !6698

if.else49:                                        ; preds = %if.else
  %48 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6699
  %49 = load i32, i32* %addr, align 4, !dbg !6701
  %conv50 = zext i32 %49 to i64, !dbg !6701
  %50 = load i32, i32* %len, align 4, !dbg !6702
  %call51 = call i32 @spi_nor_erase_multi_sectors(%struct.spi_nor* %48, i64 %conv50, i32 %50) #9, !dbg !6703
  store i32 %call51, i32* %ret, align 4, !dbg !6704
  %51 = load i32, i32* %ret, align 4, !dbg !6705
  %tobool52 = icmp ne i32 %51, 0, !dbg !6705
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !6707

if.then53:                                        ; preds = %if.else49
  br label %erase_err, !dbg !6708

if.end54:                                         ; preds = %if.else49
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %while.end
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end31
  %52 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6709
  %call57 = call i32 @spi_nor_write_disable(%struct.spi_nor* %52) #9, !dbg !6710
  store i32 %call57, i32* %ret, align 4, !dbg !6711
  br label %erase_err, !dbg !6712

erase_err:                                        ; preds = %if.end56, %if.then53, %if.then47, %if.then41, %if.then37, %if.then30, %if.then23, %if.then19
  call void @llvm.dbg.label(metadata !6713), !dbg !6714
  %53 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6715
  call void @spi_nor_unlock_and_unprep(%struct.spi_nor* %53) #9, !dbg !6716
  %54 = load i32, i32* %ret, align 4, !dbg !6717
  store i32 %54, i32* %retval, align 4, !dbg !6718
  br label %return, !dbg !6718

return:                                           ; preds = %erase_err, %if.then11, %if.then4
  %55 = load i32, i32* %retval, align 4, !dbg !6719
  ret i32 %55, !dbg !6719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_read(%struct.mtd_info* %mtd, i64 %from, i64 %len, i64* %retlen, i8* %buf) #0 !dbg !6720 {
entry:
  %retval = alloca i32, align 4
  %mtd.addr = alloca %struct.mtd_info*, align 8
  %from.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %retlen.addr = alloca i64*, align 8
  %buf.addr = alloca i8*, align 8
  %nor = alloca %struct.spi_nor*, align 8
  %ret = alloca i64, align 8
  %addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mtd_info* %mtd, %struct.mtd_info** %mtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd.addr, metadata !6721, metadata !DIExpression()), !dbg !6722
  store i64 %from, i64* %from.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %from.addr, metadata !6723, metadata !DIExpression()), !dbg !6724
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6725, metadata !DIExpression()), !dbg !6726
  store i64* %retlen, i64** %retlen.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %retlen.addr, metadata !6727, metadata !DIExpression()), !dbg !6728
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6729, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor, metadata !6731, metadata !DIExpression()), !dbg !6732
  %0 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6733
  %call = call %struct.spi_nor* @mtd_to_spi_nor(%struct.mtd_info* %0) #9, !dbg !6734
  store %struct.spi_nor* %call, %struct.spi_nor** %nor, align 8, !dbg !6732
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !6735, metadata !DIExpression()), !dbg !6736
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6737
  %call1 = call i32 @spi_nor_lock_and_prep(%struct.spi_nor* %1) #9, !dbg !6738
  %conv = sext i32 %call1 to i64, !dbg !6738
  store i64 %conv, i64* %ret, align 8, !dbg !6739
  %2 = load i64, i64* %ret, align 8, !dbg !6740
  %tobool = icmp ne i64 %2, 0, !dbg !6740
  br i1 %tobool, label %if.then, label %if.end, !dbg !6742

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %ret, align 8, !dbg !6743
  %conv2 = trunc i64 %3 to i32, !dbg !6743
  store i32 %conv2, i32* %retval, align 4, !dbg !6744
  br label %return, !dbg !6744

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !6745

while.cond:                                       ; preds = %if.end31, %if.end
  %4 = load i64, i64* %len.addr, align 8, !dbg !6746
  %tobool3 = icmp ne i64 %4, 0, !dbg !6745
  br i1 %tobool3, label %while.body, label %while.end, !dbg !6745

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !6747, metadata !DIExpression()), !dbg !6749
  %5 = load i64, i64* %from.addr, align 8, !dbg !6750
  store i64 %5, i64* %addr, align 8, !dbg !6749
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6751
  %7 = load i64, i64* %addr, align 8, !dbg !6752
  %call4 = call i32 @spi_nor_convert_addr(%struct.spi_nor* %6, i64 %7) #9, !dbg !6753
  %conv5 = zext i32 %call4 to i64, !dbg !6753
  store i64 %conv5, i64* %addr, align 8, !dbg !6754
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6755
  %9 = load i64, i64* %addr, align 8, !dbg !6756
  %10 = load i64, i64* %len.addr, align 8, !dbg !6757
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !6758
  %call6 = call i64 @spi_nor_read_data(%struct.spi_nor* %8, i64 %9, i64 %10, i8* %11) #9, !dbg !6759
  store i64 %call6, i64* %ret, align 8, !dbg !6760
  %12 = load i64, i64* %ret, align 8, !dbg !6761
  %cmp = icmp eq i64 %12, 0, !dbg !6763
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !6764

if.then8:                                         ; preds = %while.body
  store i64 -5, i64* %ret, align 8, !dbg !6765
  br label %read_err, !dbg !6767

if.end9:                                          ; preds = %while.body
  %13 = load i64, i64* %ret, align 8, !dbg !6768
  %cmp10 = icmp slt i64 %13, 0, !dbg !6770
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6771

if.then12:                                        ; preds = %if.end9
  br label %read_err, !dbg !6772

if.end13:                                         ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6773, metadata !DIExpression()), !dbg !6775
  %14 = load i64, i64* %ret, align 8, !dbg !6775
  %15 = load i64, i64* %len.addr, align 8, !dbg !6775
  %cmp14 = icmp ugt i64 %14, %15, !dbg !6775
  %lnot = xor i1 %cmp14, true, !dbg !6775
  %lnot16 = xor i1 %lnot, true, !dbg !6775
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !6775
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6775
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !6776
  %tobool17 = icmp ne i32 %16, 0, !dbg !6776
  %lnot18 = xor i1 %tobool17, true, !dbg !6776
  %lnot20 = xor i1 %lnot18, true, !dbg !6776
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !6776
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !6776
  %tobool23 = icmp ne i64 %conv22, 0, !dbg !6776
  br i1 %tobool23, label %if.then24, label %if.end31, !dbg !6775

if.then24:                                        ; preds = %if.end13
  br label %do.body, !dbg !6776

do.body:                                          ; preds = %if.then24
  br label %do.body25, !dbg !6778

do.body25:                                        ; preds = %do.body
  br label %do.end, !dbg !6780

do.end:                                           ; preds = %do.body25
  br label %do.body26, !dbg !6778

do.body26:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 2109, i32 2305, i64 12) #13, !dbg !6782, !srcloc !6784
  br label %do.end27, !dbg !6782

do.end27:                                         ; preds = %do.body26
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 246) #13, !dbg !6785, !srcloc !6787
  br label %do.body28, !dbg !6778

do.body28:                                        ; preds = %do.end27
  br label %do.end29, !dbg !6788

do.end29:                                         ; preds = %do.body28
  br label %do.end30, !dbg !6778

do.end30:                                         ; preds = %do.end29
  br label %if.end31, !dbg !6778

if.end31:                                         ; preds = %do.end30, %if.end13
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !6775
  %tobool32 = icmp ne i32 %17, 0, !dbg !6775
  %lnot33 = xor i1 %tobool32, true, !dbg !6775
  %lnot35 = xor i1 %lnot33, true, !dbg !6775
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !6775
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !6775
  store i64 %conv37, i64* %tmp, align 8, !dbg !6776
  %18 = load i64, i64* %tmp, align 8, !dbg !6775
  %19 = load i64, i64* %ret, align 8, !dbg !6790
  %20 = load i64*, i64** %retlen.addr, align 8, !dbg !6791
  %21 = load i64, i64* %20, align 8, !dbg !6792
  %add = add i64 %21, %19, !dbg !6792
  store i64 %add, i64* %20, align 8, !dbg !6792
  %22 = load i64, i64* %ret, align 8, !dbg !6793
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !6794
  %add.ptr = getelementptr i8, i8* %23, i64 %22, !dbg !6794
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !6794
  %24 = load i64, i64* %ret, align 8, !dbg !6795
  %25 = load i64, i64* %from.addr, align 8, !dbg !6796
  %add38 = add i64 %25, %24, !dbg !6796
  store i64 %add38, i64* %from.addr, align 8, !dbg !6796
  %26 = load i64, i64* %ret, align 8, !dbg !6797
  %27 = load i64, i64* %len.addr, align 8, !dbg !6798
  %sub = sub i64 %27, %26, !dbg !6798
  store i64 %sub, i64* %len.addr, align 8, !dbg !6798
  br label %while.cond, !dbg !6745, !llvm.loop !6799

while.end:                                        ; preds = %while.cond
  store i64 0, i64* %ret, align 8, !dbg !6801
  br label %read_err, !dbg !6802

read_err:                                         ; preds = %while.end, %if.then12, %if.then8
  call void @llvm.dbg.label(metadata !6803), !dbg !6804
  %28 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6805
  call void @spi_nor_unlock_and_unprep(%struct.spi_nor* %28) #9, !dbg !6806
  %29 = load i64, i64* %ret, align 8, !dbg !6807
  %conv39 = trunc i64 %29 to i32, !dbg !6807
  store i32 %conv39, i32* %retval, align 4, !dbg !6808
  br label %return, !dbg !6808

return:                                           ; preds = %read_err, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !6809
  ret i32 %30, !dbg !6809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_resume(%struct.mtd_info* %mtd) #0 !dbg !6810 {
entry:
  %mtd.addr = alloca %struct.mtd_info*, align 8
  %nor = alloca %struct.spi_nor*, align 8
  %dev = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  store %struct.mtd_info* %mtd, %struct.mtd_info** %mtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd.addr, metadata !6811, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor, metadata !6813, metadata !DIExpression()), !dbg !6814
  %0 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6815
  %call = call %struct.spi_nor* @mtd_to_spi_nor(%struct.mtd_info* %0) #9, !dbg !6816
  store %struct.spi_nor* %call, %struct.spi_nor** %nor, align 8, !dbg !6814
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !6817, metadata !DIExpression()), !dbg !6818
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6819
  %dev1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 2, !dbg !6820
  %2 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !6820
  store %struct.device* %2, %struct.device** %dev, align 8, !dbg !6818
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6821, metadata !DIExpression()), !dbg !6822
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6823
  %call2 = call i32 @spi_nor_init(%struct.spi_nor* %3) #9, !dbg !6824
  store i32 %call2, i32* %ret, align 4, !dbg !6825
  %4 = load i32, i32* %ret, align 4, !dbg !6826
  %tobool = icmp ne i32 %4, 0, !dbg !6826
  br i1 %tobool, label %if.then, label %if.end, !dbg !6828

if.then:                                          ; preds = %entry
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6829
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !6829
  br label %if.end, !dbg !6829

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6830
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_lock(%struct.mtd_info* %mtd, i64 %ofs, i64 %len) #0 !dbg !6831 {
entry:
  %retval = alloca i32, align 4
  %mtd.addr = alloca %struct.mtd_info*, align 8
  %ofs.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %nor = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  store %struct.mtd_info* %mtd, %struct.mtd_info** %mtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd.addr, metadata !6832, metadata !DIExpression()), !dbg !6833
  store i64 %ofs, i64* %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofs.addr, metadata !6834, metadata !DIExpression()), !dbg !6835
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6836, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor, metadata !6838, metadata !DIExpression()), !dbg !6839
  %0 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6840
  %call = call %struct.spi_nor* @mtd_to_spi_nor(%struct.mtd_info* %0) #9, !dbg !6841
  store %struct.spi_nor* %call, %struct.spi_nor** %nor, align 8, !dbg !6839
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6842, metadata !DIExpression()), !dbg !6843
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6844
  %call1 = call i32 @spi_nor_lock_and_prep(%struct.spi_nor* %1) #9, !dbg !6845
  store i32 %call1, i32* %ret, align 4, !dbg !6846
  %2 = load i32, i32* %ret, align 4, !dbg !6847
  %tobool = icmp ne i32 %2, 0, !dbg !6847
  br i1 %tobool, label %if.then, label %if.end, !dbg !6849

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !6850
  store i32 %3, i32* %retval, align 4, !dbg !6851
  br label %return, !dbg !6851

if.end:                                           ; preds = %entry
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6852
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 20, !dbg !6853
  %5 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !6853
  %locking_ops = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %5, i32 0, i32 10, !dbg !6854
  %6 = load %struct.spi_nor_locking_ops*, %struct.spi_nor_locking_ops** %locking_ops, align 8, !dbg !6854
  %lock = getelementptr inbounds %struct.spi_nor_locking_ops, %struct.spi_nor_locking_ops* %6, i32 0, i32 0, !dbg !6855
  %7 = load i32 (%struct.spi_nor*, i64, i64)*, i32 (%struct.spi_nor*, i64, i64)** %lock, align 8, !dbg !6855
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6856
  %9 = load i64, i64* %ofs.addr, align 8, !dbg !6857
  %10 = load i64, i64* %len.addr, align 8, !dbg !6858
  %call2 = call i32 %7(%struct.spi_nor* %8, i64 %9, i64 %10) #9, !dbg !6852
  store i32 %call2, i32* %ret, align 4, !dbg !6859
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6860
  call void @spi_nor_unlock_and_unprep(%struct.spi_nor* %11) #9, !dbg !6861
  %12 = load i32, i32* %ret, align 4, !dbg !6862
  store i32 %12, i32* %retval, align 4, !dbg !6863
  br label %return, !dbg !6863

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !6864
  ret i32 %13, !dbg !6864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_unlock(%struct.mtd_info* %mtd, i64 %ofs, i64 %len) #0 !dbg !6865 {
entry:
  %retval = alloca i32, align 4
  %mtd.addr = alloca %struct.mtd_info*, align 8
  %ofs.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %nor = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  store %struct.mtd_info* %mtd, %struct.mtd_info** %mtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd.addr, metadata !6866, metadata !DIExpression()), !dbg !6867
  store i64 %ofs, i64* %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofs.addr, metadata !6868, metadata !DIExpression()), !dbg !6869
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6870, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor, metadata !6872, metadata !DIExpression()), !dbg !6873
  %0 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6874
  %call = call %struct.spi_nor* @mtd_to_spi_nor(%struct.mtd_info* %0) #9, !dbg !6875
  store %struct.spi_nor* %call, %struct.spi_nor** %nor, align 8, !dbg !6873
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6876, metadata !DIExpression()), !dbg !6877
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6878
  %call1 = call i32 @spi_nor_lock_and_prep(%struct.spi_nor* %1) #9, !dbg !6879
  store i32 %call1, i32* %ret, align 4, !dbg !6880
  %2 = load i32, i32* %ret, align 4, !dbg !6881
  %tobool = icmp ne i32 %2, 0, !dbg !6881
  br i1 %tobool, label %if.then, label %if.end, !dbg !6883

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !6884
  store i32 %3, i32* %retval, align 4, !dbg !6885
  br label %return, !dbg !6885

if.end:                                           ; preds = %entry
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6886
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 20, !dbg !6887
  %5 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !6887
  %locking_ops = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %5, i32 0, i32 10, !dbg !6888
  %6 = load %struct.spi_nor_locking_ops*, %struct.spi_nor_locking_ops** %locking_ops, align 8, !dbg !6888
  %unlock = getelementptr inbounds %struct.spi_nor_locking_ops, %struct.spi_nor_locking_ops* %6, i32 0, i32 1, !dbg !6889
  %7 = load i32 (%struct.spi_nor*, i64, i64)*, i32 (%struct.spi_nor*, i64, i64)** %unlock, align 8, !dbg !6889
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6890
  %9 = load i64, i64* %ofs.addr, align 8, !dbg !6891
  %10 = load i64, i64* %len.addr, align 8, !dbg !6892
  %call2 = call i32 %7(%struct.spi_nor* %8, i64 %9, i64 %10) #9, !dbg !6886
  store i32 %call2, i32* %ret, align 4, !dbg !6893
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6894
  call void @spi_nor_unlock_and_unprep(%struct.spi_nor* %11) #9, !dbg !6895
  %12 = load i32, i32* %ret, align 4, !dbg !6896
  store i32 %12, i32* %retval, align 4, !dbg !6897
  br label %return, !dbg !6897

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !6898
  ret i32 %13, !dbg !6898
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_is_locked(%struct.mtd_info* %mtd, i64 %ofs, i64 %len) #0 !dbg !6899 {
entry:
  %retval = alloca i32, align 4
  %mtd.addr = alloca %struct.mtd_info*, align 8
  %ofs.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %nor = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  store %struct.mtd_info* %mtd, %struct.mtd_info** %mtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  store i64 %ofs, i64* %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofs.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6904, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor, metadata !6906, metadata !DIExpression()), !dbg !6907
  %0 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !6908
  %call = call %struct.spi_nor* @mtd_to_spi_nor(%struct.mtd_info* %0) #9, !dbg !6909
  store %struct.spi_nor* %call, %struct.spi_nor** %nor, align 8, !dbg !6907
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6910, metadata !DIExpression()), !dbg !6911
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6912
  %call1 = call i32 @spi_nor_lock_and_prep(%struct.spi_nor* %1) #9, !dbg !6913
  store i32 %call1, i32* %ret, align 4, !dbg !6914
  %2 = load i32, i32* %ret, align 4, !dbg !6915
  %tobool = icmp ne i32 %2, 0, !dbg !6915
  br i1 %tobool, label %if.then, label %if.end, !dbg !6917

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !6918
  store i32 %3, i32* %retval, align 4, !dbg !6919
  br label %return, !dbg !6919

if.end:                                           ; preds = %entry
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6920
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 20, !dbg !6921
  %5 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !6921
  %locking_ops = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %5, i32 0, i32 10, !dbg !6922
  %6 = load %struct.spi_nor_locking_ops*, %struct.spi_nor_locking_ops** %locking_ops, align 8, !dbg !6922
  %is_locked = getelementptr inbounds %struct.spi_nor_locking_ops, %struct.spi_nor_locking_ops* %6, i32 0, i32 2, !dbg !6923
  %7 = load i32 (%struct.spi_nor*, i64, i64)*, i32 (%struct.spi_nor*, i64, i64)** %is_locked, align 8, !dbg !6923
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6924
  %9 = load i64, i64* %ofs.addr, align 8, !dbg !6925
  %10 = load i64, i64* %len.addr, align 8, !dbg !6926
  %call2 = call i32 %7(%struct.spi_nor* %8, i64 %9, i64 %10) #9, !dbg !6920
  store i32 %call2, i32* %ret, align 4, !dbg !6927
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !6928
  call void @spi_nor_unlock_and_unprep(%struct.spi_nor* %11) #9, !dbg !6929
  %12 = load i32, i32* %ret, align 4, !dbg !6930
  store i32 %12, i32* %retval, align 4, !dbg !6931
  br label %return, !dbg !6931

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !6932
  ret i32 %13, !dbg !6932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @of_property_read_bool(%struct.device_node* %np, i8* %propname) #0 !dbg !6933 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %prop = alloca %struct.property*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !6938, metadata !DIExpression()), !dbg !6939
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !6940, metadata !DIExpression()), !dbg !6941
  call void @llvm.dbg.declare(metadata %struct.property** %prop, metadata !6942, metadata !DIExpression()), !dbg !6943
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6944
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !6945
  %call = call %struct.property* @of_find_property(%struct.device_node* %0, i8* %1, i32* null) #9, !dbg !6946
  store %struct.property* %call, %struct.property** %prop, align 8, !dbg !6943
  %2 = load %struct.property*, %struct.property** %prop, align 8, !dbg !6947
  %tobool = icmp ne %struct.property* %2, null, !dbg !6947
  %3 = zext i1 %tobool to i64, !dbg !6947
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !6947
  %tobool1 = icmp ne i32 %cond, 0, !dbg !6947
  ret i1 %tobool1, !dbg !6948
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_setup(%struct.spi_nor* %nor, %struct.spi_nor_hwcaps* %hwcaps) #0 !dbg !6949 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %hwcaps.addr = alloca %struct.spi_nor_hwcaps*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !6950, metadata !DIExpression()), !dbg !6951
  store %struct.spi_nor_hwcaps* %hwcaps, %struct.spi_nor_hwcaps** %hwcaps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_hwcaps** %hwcaps.addr, metadata !6952, metadata !DIExpression()), !dbg !6953
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6954
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 20, !dbg !6956
  %1 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !6956
  %setup = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %1, i32 0, i32 9, !dbg !6957
  %2 = load i32 (%struct.spi_nor*, %struct.spi_nor_hwcaps*)*, i32 (%struct.spi_nor*, %struct.spi_nor_hwcaps*)** %setup, align 8, !dbg !6957
  %tobool = icmp ne i32 (%struct.spi_nor*, %struct.spi_nor_hwcaps*)* %2, null, !dbg !6954
  br i1 %tobool, label %if.end, label %if.then, !dbg !6958

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6959
  br label %return, !dbg !6959

if.end:                                           ; preds = %entry
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6960
  %params1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 20, !dbg !6961
  %4 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params1, align 8, !dbg !6961
  %setup2 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %4, i32 0, i32 9, !dbg !6962
  %5 = load i32 (%struct.spi_nor*, %struct.spi_nor_hwcaps*)*, i32 (%struct.spi_nor*, %struct.spi_nor_hwcaps*)** %setup2, align 8, !dbg !6962
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6963
  %7 = load %struct.spi_nor_hwcaps*, %struct.spi_nor_hwcaps** %hwcaps.addr, align 8, !dbg !6964
  %call = call i32 %5(%struct.spi_nor* %6, %struct.spi_nor_hwcaps* %7) #9, !dbg !6960
  store i32 %call, i32* %retval, align 4, !dbg !6965
  br label %return, !dbg !6965

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6966
  ret i32 %8, !dbg !6966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_set_addr_width(%struct.spi_nor* %nor) #0 !dbg !6967 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !6968, metadata !DIExpression()), !dbg !6969
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6970
  %addr_width = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 9, !dbg !6972
  %1 = load i8, i8* %addr_width, align 4, !dbg !6972
  %tobool = icmp ne i8 %1, 0, !dbg !6970
  br i1 %tobool, label %if.then, label %if.else, !dbg !6973

if.then:                                          ; preds = %entry
  br label %if.end9, !dbg !6974

if.else:                                          ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6976
  %info = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 6, !dbg !6978
  %3 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !6978
  %addr_width1 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %3, i32 0, i32 6, !dbg !6979
  %4 = load i16, i16* %addr_width1, align 8, !dbg !6979
  %tobool2 = icmp ne i16 %4, 0, !dbg !6976
  br i1 %tobool2, label %if.then3, label %if.else7, !dbg !6980

if.then3:                                         ; preds = %if.else
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6981
  %info4 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 6, !dbg !6983
  %6 = load %struct.flash_info*, %struct.flash_info** %info4, align 8, !dbg !6983
  %addr_width5 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %6, i32 0, i32 6, !dbg !6984
  %7 = load i16, i16* %addr_width5, align 8, !dbg !6984
  %conv = trunc i16 %7 to i8, !dbg !6981
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6985
  %addr_width6 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 9, !dbg !6986
  store i8 %conv, i8* %addr_width6, align 4, !dbg !6987
  br label %if.end, !dbg !6988

if.else7:                                         ; preds = %if.else
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6989
  %addr_width8 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 9, !dbg !6991
  store i8 3, i8* %addr_width8, align 4, !dbg !6992
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then3
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6993
  %addr_width10 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 9, !dbg !6995
  %11 = load i8, i8* %addr_width10, align 4, !dbg !6995
  %conv11 = zext i8 %11 to i32, !dbg !6993
  %cmp = icmp eq i32 %conv11, 3, !dbg !6996
  br i1 %cmp, label %land.lhs.true, label %if.end17, !dbg !6997

land.lhs.true:                                    ; preds = %if.end9
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !6998
  %mtd = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %12, i32 0, i32 0, !dbg !6999
  %size = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %mtd, i32 0, i32 2, !dbg !7000
  %13 = load i64, i64* %size, align 8, !dbg !7000
  %cmp13 = icmp ugt i64 %13, 16777216, !dbg !7001
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !7002

if.then15:                                        ; preds = %land.lhs.true
  %14 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7003
  %addr_width16 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %14, i32 0, i32 9, !dbg !7005
  store i8 4, i8* %addr_width16, align 4, !dbg !7006
  br label %if.end17, !dbg !7007

if.end17:                                         ; preds = %if.then15, %land.lhs.true, %if.end9
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7008
  %addr_width18 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %15, i32 0, i32 9, !dbg !7010
  %16 = load i8, i8* %addr_width18, align 4, !dbg !7010
  %conv19 = zext i8 %16 to i32, !dbg !7008
  %cmp20 = icmp sgt i32 %conv19, 4, !dbg !7011
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !7012

if.then22:                                        ; preds = %if.end17
  store i32 -22, i32* %retval, align 4, !dbg !7013
  br label %return, !dbg !7013

if.end23:                                         ; preds = %if.end17
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7015
  %addr_width24 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %17, i32 0, i32 9, !dbg !7017
  %18 = load i8, i8* %addr_width24, align 4, !dbg !7017
  %conv25 = zext i8 %18 to i32, !dbg !7015
  %cmp26 = icmp eq i32 %conv25, 4, !dbg !7018
  br i1 %cmp26, label %land.lhs.true28, label %if.end35, !dbg !7019

land.lhs.true28:                                  ; preds = %if.end23
  %19 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7020
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %19, i32 0, i32 18, !dbg !7021
  %20 = load i32, i32* %flags, align 4, !dbg !7021
  %and = and i32 %20, 64, !dbg !7022
  %tobool29 = icmp ne i32 %and, 0, !dbg !7022
  br i1 %tobool29, label %land.lhs.true30, label %if.end35, !dbg !7023

land.lhs.true30:                                  ; preds = %land.lhs.true28
  %21 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7024
  %flags31 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %21, i32 0, i32 18, !dbg !7025
  %22 = load i32, i32* %flags31, align 4, !dbg !7025
  %and32 = and i32 %22, 128, !dbg !7026
  %tobool33 = icmp ne i32 %and32, 0, !dbg !7026
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !7027

if.then34:                                        ; preds = %land.lhs.true30
  %23 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7028
  call void @spi_nor_set_4byte_opcodes(%struct.spi_nor* %23) #9, !dbg !7029
  br label %if.end35, !dbg !7029

if.end35:                                         ; preds = %if.then34, %land.lhs.true30, %land.lhs.true28, %if.end23
  store i32 0, i32* %retval, align 4, !dbg !7030
  br label %return, !dbg !7030

return:                                           ; preds = %if.end35, %if.then22
  %24 = load i32, i32* %retval, align 4, !dbg !7031
  ret i32 %24, !dbg !7031
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_init(%struct.spi_nor* %nor) #0 !dbg !4672 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %err = alloca i32, align 4
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp51 = alloca i64, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7032, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7034, metadata !DIExpression()), !dbg !7035
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7036
  %call = call i32 @spi_nor_quad_enable(%struct.spi_nor* %0) #9, !dbg !7037
  store i32 %call, i32* %err, align 4, !dbg !7038
  %1 = load i32, i32* %err, align 4, !dbg !7039
  %tobool = icmp ne i32 %1, 0, !dbg !7039
  br i1 %tobool, label %if.then, label %if.end, !dbg !7041

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !7042
  store i32 %2, i32* %retval, align 4, !dbg !7044
  br label %return, !dbg !7044

if.end:                                           ; preds = %entry
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7045
  %call1 = call i32 @spi_nor_unlock_all(%struct.spi_nor* %3) #9, !dbg !7046
  store i32 %call1, i32* %err, align 4, !dbg !7047
  %4 = load i32, i32* %err, align 4, !dbg !7048
  %tobool2 = icmp ne i32 %4, 0, !dbg !7048
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7050

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %err, align 4, !dbg !7051
  store i32 %5, i32* %retval, align 4, !dbg !7053
  br label %return, !dbg !7053

if.end4:                                          ; preds = %if.end
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7054
  %addr_width = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 9, !dbg !7056
  %7 = load i8, i8* %addr_width, align 4, !dbg !7056
  %conv = zext i8 %7 to i32, !dbg !7054
  %cmp = icmp eq i32 %conv, 4, !dbg !7057
  br i1 %cmp, label %land.lhs.true, label %if.end59, !dbg !7058

land.lhs.true:                                    ; preds = %if.end4
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7059
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 18, !dbg !7060
  %9 = load i32, i32* %flags, align 4, !dbg !7060
  %and = and i32 %9, 64, !dbg !7061
  %tobool6 = icmp ne i32 %and, 0, !dbg !7061
  br i1 %tobool6, label %if.end59, label %if.then7, !dbg !7062

if.then7:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !7063, metadata !DIExpression()), !dbg !7066
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7066
  %flags8 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 18, !dbg !7066
  %11 = load i32, i32* %flags8, align 4, !dbg !7066
  %and9 = and i32 %11, 32, !dbg !7066
  %tobool10 = icmp ne i32 %and9, 0, !dbg !7066
  %lnot = xor i1 %tobool10, true, !dbg !7066
  %lnot11 = xor i1 %lnot, true, !dbg !7066
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !7066
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !7066
  %12 = load i32, i32* %__ret_warn_once, align 4, !dbg !7067
  %tobool12 = icmp ne i32 %12, 0, !dbg !7067
  br i1 %tobool12, label %land.rhs, label %land.end, !dbg !7067

land.rhs:                                         ; preds = %if.then7
  %13 = load i8, i8* @spi_nor_init.__warned, align 1, !dbg !7067
  %tobool13 = trunc i8 %13 to i1, !dbg !7067
  %lnot14 = xor i1 %tobool13, true, !dbg !7067
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then7
  %14 = phi i1 [ false, %if.then7 ], [ %lnot14, %land.rhs ], !dbg !7069
  %lnot16 = xor i1 %14, true, !dbg !7067
  %lnot18 = xor i1 %lnot16, true, !dbg !7067
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !7067
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !7067
  %tobool21 = icmp ne i64 %conv20, 0, !dbg !7067
  br i1 %tobool21, label %if.then22, label %if.end50, !dbg !7066

if.then22:                                        ; preds = %land.end
  store i8 1, i8* @spi_nor_init.__warned, align 1, !dbg !7070
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7072, metadata !DIExpression()), !dbg !7074
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !7074
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !7075
  %tobool23 = icmp ne i32 %15, 0, !dbg !7075
  %lnot24 = xor i1 %tobool23, true, !dbg !7075
  %lnot26 = xor i1 %lnot24, true, !dbg !7075
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !7075
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !7075
  %tobool29 = icmp ne i64 %conv28, 0, !dbg !7075
  br i1 %tobool29, label %if.then30, label %if.end43, !dbg !7074

if.then30:                                        ; preds = %if.then22
  br label %do.body, !dbg !7075

do.body:                                          ; preds = %if.then30
  br label %do.body31, !dbg !7077

do.body31:                                        ; preds = %do.body
  br label %do.end, !dbg !7079

do.end:                                           ; preds = %do.body31
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.17, i64 0, i64 0)) #9, !dbg !7077
  br label %do.body32, !dbg !7077

do.body32:                                        ; preds = %do.end
  br label %do.body33, !dbg !7081

do.body33:                                        ; preds = %do.body32
  br label %do.end34, !dbg !7083

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !7081

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 2959, i32 2313, i64 12) #13, !dbg !7085, !srcloc !7087
  br label %do.end36, !dbg !7085

do.end36:                                         ; preds = %do.body35
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 249) #13, !dbg !7088, !srcloc !7090
  br label %do.body37, !dbg !7081

do.body37:                                        ; preds = %do.end36
  br label %do.end38, !dbg !7091

do.end38:                                         ; preds = %do.body37
  br label %do.end39, !dbg !7081

do.end39:                                         ; preds = %do.end38
  br label %do.body40, !dbg !7077

do.body40:                                        ; preds = %do.end39
  br label %do.end41, !dbg !7093

do.end41:                                         ; preds = %do.body40
  br label %do.end42, !dbg !7077

do.end42:                                         ; preds = %do.end41
  br label %if.end43, !dbg !7077

if.end43:                                         ; preds = %do.end42, %if.then22
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !7074
  %tobool44 = icmp ne i32 %16, 0, !dbg !7074
  %lnot45 = xor i1 %tobool44, true, !dbg !7074
  %lnot47 = xor i1 %lnot45, true, !dbg !7074
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !7074
  %conv49 = sext i32 %lnot.ext48 to i64, !dbg !7074
  store i64 %conv49, i64* %tmp, align 8, !dbg !7075
  %17 = load i64, i64* %tmp, align 8, !dbg !7074
  br label %if.end50, !dbg !7070

if.end50:                                         ; preds = %if.end43, %land.end
  %18 = load i32, i32* %__ret_warn_once, align 4, !dbg !7066
  %tobool52 = icmp ne i32 %18, 0, !dbg !7066
  %lnot53 = xor i1 %tobool52, true, !dbg !7066
  %lnot55 = xor i1 %lnot53, true, !dbg !7066
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !7066
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !7066
  store i64 %conv57, i64* %tmp51, align 8, !dbg !7067
  %19 = load i64, i64* %tmp51, align 8, !dbg !7066
  %20 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7095
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %20, i32 0, i32 20, !dbg !7096
  %21 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7096
  %set_4byte_addr_mode = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %21, i32 0, i32 7, !dbg !7097
  %22 = load i32 (%struct.spi_nor*, i1)*, i32 (%struct.spi_nor*, i1)** %set_4byte_addr_mode, align 8, !dbg !7097
  %23 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7098
  %call58 = call i32 %22(%struct.spi_nor* %23, i1 zeroext true) #9, !dbg !7095
  br label %if.end59, !dbg !7099

if.end59:                                         ; preds = %if.end50, %land.lhs.true, %if.end4
  store i32 0, i32* %retval, align 4, !dbg !7100
  br label %return, !dbg !7100

return:                                           ; preds = %if.end59, %if.then3, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !7101
  ret i32 %24, !dbg !7101
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_driver_init() #5 section ".init.text" !dbg !7102 {
entry:
  %call = call i32 @spi_mem_driver_register_with_owner(%struct.spi_mem_driver* @spi_nor_driver, %struct.module* null) #9, !dbg !7105
  ret i32 %call, !dbg !7105
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_driver_exit() #5 section ".exit.text" !dbg !7106 {
entry:
  call void @spi_mem_driver_unregister(%struct.spi_mem_driver* @spi_nor_driver) #9, !dbg !7107
  ret void, !dbg !7107
}

; Function Attrs: noredzone
declare dso_local void @spi_mem_driver_unregister(%struct.spi_mem_driver*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @spi_nor_get_protocol_inst_nbits(i32 %proto) #0 !dbg !7108 {
entry:
  %proto.addr = alloca i32, align 4
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  %0 = load i32, i32* %proto.addr, align 4, !dbg !7113
  %conv = zext i32 %0 to i64, !dbg !7113
  %and = and i64 %conv, 16711680, !dbg !7114
  %shr = lshr i64 %and, 16, !dbg !7115
  %conv1 = trunc i64 %shr to i8, !dbg !7116
  ret i8 %conv1, !dbg !7117
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @spi_nor_get_protocol_addr_nbits(i32 %proto) #0 !dbg !7118 {
entry:
  %proto.addr = alloca i32, align 4
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !7119, metadata !DIExpression()), !dbg !7120
  %0 = load i32, i32* %proto.addr, align 4, !dbg !7121
  %conv = zext i32 %0 to i64, !dbg !7121
  %and = and i64 %conv, 65280, !dbg !7122
  %shr = lshr i64 %and, 8, !dbg !7123
  %conv1 = trunc i64 %shr to i8, !dbg !7124
  ret i8 %conv1, !dbg !7125
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @spi_nor_get_protocol_data_nbits(i32 %proto) #0 !dbg !7126 {
entry:
  %proto.addr = alloca i32, align 4
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !7127, metadata !DIExpression()), !dbg !7128
  %0 = load i32, i32* %proto.addr, align 4, !dbg !7129
  %conv = zext i32 %0 to i64, !dbg !7129
  %and = and i64 %conv, 255, !dbg !7130
  %shr = lshr i64 %and, 0, !dbg !7131
  %conv1 = trunc i64 %shr to i8, !dbg !7132
  ret i8 %conv1, !dbg !7133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @spi_nor_spimem_bounce(%struct.spi_nor* %nor, %struct.spi_mem_op* %op) #0 !dbg !7134 {
entry:
  %retval = alloca i1, align 1
  %nor.addr = alloca %struct.spi_nor*, align 8
  %op.addr = alloca %struct.spi_mem_op*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7137, metadata !DIExpression()), !dbg !7138
  store %struct.spi_mem_op* %op, %struct.spi_mem_op** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op** %op.addr, metadata !7139, metadata !DIExpression()), !dbg !7140
  %0 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op.addr, align 8, !dbg !7141
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %0, i32 0, i32 3, !dbg !7143
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !7144
  %in = bitcast %union.anon.73* %buf to i8**, !dbg !7145
  %1 = load i8*, i8** %in, align 8, !dbg !7145
  %call = call i32 @object_is_on_stack(i8* %1) #9, !dbg !7146
  %tobool = icmp ne i32 %call, 0, !dbg !7146
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7147

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op.addr, align 8, !dbg !7148
  %data1 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %2, i32 0, i32 3, !dbg !7148
  %buf2 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data1, i32 0, i32 4, !dbg !7148
  %in3 = bitcast %union.anon.73* %buf2 to i8**, !dbg !7148
  %3 = load i8*, i8** %in3, align 8, !dbg !7148
  %4 = ptrtoint i8* %3 to i64, !dbg !7148
  %call4 = call zeroext i1 @__virt_addr_valid(i64 %4) #9, !dbg !7148
  br i1 %call4, label %if.end15, label %if.then, !dbg !7149

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op.addr, align 8, !dbg !7150
  %data5 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %5, i32 0, i32 3, !dbg !7153
  %nbytes = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data5, i32 0, i32 3, !dbg !7154
  %6 = load i32, i32* %nbytes, align 8, !dbg !7154
  %conv = zext i32 %6 to i64, !dbg !7150
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7155
  %bouncebuf_size = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 5, !dbg !7156
  %8 = load i64, i64* %bouncebuf_size, align 8, !dbg !7156
  %cmp = icmp ugt i64 %conv, %8, !dbg !7157
  br i1 %cmp, label %if.then7, label %if.end, !dbg !7158

if.then7:                                         ; preds = %if.then
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7159
  %bouncebuf_size8 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 5, !dbg !7160
  %10 = load i64, i64* %bouncebuf_size8, align 8, !dbg !7160
  %conv9 = trunc i64 %10 to i32, !dbg !7159
  %11 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op.addr, align 8, !dbg !7161
  %data10 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %11, i32 0, i32 3, !dbg !7162
  %nbytes11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data10, i32 0, i32 3, !dbg !7163
  store i32 %conv9, i32* %nbytes11, align 8, !dbg !7164
  br label %if.end, !dbg !7161

if.end:                                           ; preds = %if.then7, %if.then
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7165
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %12, i32 0, i32 4, !dbg !7166
  %13 = load i8*, i8** %bouncebuf, align 8, !dbg !7166
  %14 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op.addr, align 8, !dbg !7167
  %data12 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %14, i32 0, i32 3, !dbg !7168
  %buf13 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data12, i32 0, i32 4, !dbg !7169
  %in14 = bitcast %union.anon.73* %buf13 to i8**, !dbg !7170
  store i8* %13, i8** %in14, align 8, !dbg !7171
  store i1 true, i1* %retval, align 1, !dbg !7172
  br label %return, !dbg !7172

if.end15:                                         ; preds = %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !7173
  br label %return, !dbg !7173

return:                                           ; preds = %if.end15, %if.end
  %15 = load i1, i1* %retval, align 1, !dbg !7174
  ret i1 %15, !dbg !7174
}

; Function Attrs: noredzone
declare dso_local i64 @spi_mem_dirmap_read(%struct.spi_mem_dirmap_desc*, i64, i64, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_spimem_exec_op(%struct.spi_nor* %nor, %struct.spi_mem_op* %op) #0 !dbg !7175 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %op.addr = alloca %struct.spi_mem_op*, align 8
  %error = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7178, metadata !DIExpression()), !dbg !7179
  store %struct.spi_mem_op* %op, %struct.spi_mem_op** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op** %op.addr, metadata !7180, metadata !DIExpression()), !dbg !7181
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7182, metadata !DIExpression()), !dbg !7183
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7184
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !7185
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !7185
  %2 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op.addr, align 8, !dbg !7186
  %call = call i32 @spi_mem_adjust_op_size(%struct.spi_mem* %1, %struct.spi_mem_op* %2) #9, !dbg !7187
  store i32 %call, i32* %error, align 4, !dbg !7188
  %3 = load i32, i32* %error, align 4, !dbg !7189
  %tobool = icmp ne i32 %3, 0, !dbg !7189
  br i1 %tobool, label %if.then, label %if.end, !dbg !7191

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %error, align 4, !dbg !7192
  store i32 %4, i32* %retval, align 4, !dbg !7193
  br label %return, !dbg !7193

if.end:                                           ; preds = %entry
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7194
  %spimem1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 3, !dbg !7195
  %6 = load %struct.spi_mem*, %struct.spi_mem** %spimem1, align 8, !dbg !7195
  %7 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op.addr, align 8, !dbg !7196
  %call2 = call i32 @spi_mem_exec_op(%struct.spi_mem* %6, %struct.spi_mem_op* %7) #9, !dbg !7197
  store i32 %call2, i32* %retval, align 4, !dbg !7198
  br label %return, !dbg !7198

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7199
  ret i32 %8, !dbg !7199
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @object_is_on_stack(i8* %obj) #0 !dbg !7200 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !7204, metadata !DIExpression()), !dbg !7210
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !7212, metadata !DIExpression()), !dbg !7214
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !7215, metadata !DIExpression()), !dbg !7217
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %obj.addr = alloca i8*, align 8
  %stack = alloca i8*, align 8
  store i8* %obj, i8** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !7218, metadata !DIExpression()), !dbg !7219
  call void @llvm.dbg.declare(metadata i8** %stack, metadata !7220, metadata !DIExpression()), !dbg !7221
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !7214
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !7214
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !7217, !srcloc !7222
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !7217
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !7217
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !7217
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !7217
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !7217
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7210
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7210
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !7210
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !7210
  %call1 = call i8* @task_stack_page(%struct.task_struct* %6) #9, !dbg !7223
  store i8* %call1, i8** %stack, align 8, !dbg !7221
  %7 = load i8*, i8** %obj.addr, align 8, !dbg !7224
  %8 = load i8*, i8** %stack, align 8, !dbg !7225
  %cmp = icmp uge i8* %7, %8, !dbg !7226
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7227

land.rhs:                                         ; preds = %entry
  %9 = load i8*, i8** %obj.addr, align 8, !dbg !7228
  %10 = load i8*, i8** %stack, align 8, !dbg !7229
  %add.ptr = getelementptr i8, i8* %10, i64 16384, !dbg !7230
  %cmp2 = icmp ult i8* %9, %add.ptr, !dbg !7231
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %11 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ], !dbg !7232
  %land.ext = zext i1 %11 to i32, !dbg !7227
  ret i32 %land.ext, !dbg !7233
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @__virt_addr_valid(i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @task_stack_page(%struct.task_struct* %task) #0 !dbg !7234 {
entry:
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !7239, metadata !DIExpression()), !dbg !7240
  %0 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !7241
  %stack = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 2, !dbg !7242
  %1 = load i8*, i8** %stack, align 8, !dbg !7242
  ret i8* %1, !dbg !7243
}

; Function Attrs: noredzone
declare dso_local i32 @spi_mem_adjust_op_size(%struct.spi_mem*, %struct.spi_mem_op*) #3

; Function Attrs: noredzone
declare dso_local i64 @spi_mem_dirmap_write(%struct.spi_mem_dirmap_desc*, i64, i64, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_ready(%struct.spi_nor* %nor) #0 !dbg !7244 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sr = alloca i32, align 4
  %fsr = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7245, metadata !DIExpression()), !dbg !7246
  call void @llvm.dbg.declare(metadata i32* %sr, metadata !7247, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.declare(metadata i32* %fsr, metadata !7249, metadata !DIExpression()), !dbg !7250
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7251
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 18, !dbg !7253
  %1 = load i32, i32* %flags, align 4, !dbg !7253
  %and = and i32 %1, 8, !dbg !7254
  %tobool = icmp ne i32 %and, 0, !dbg !7254
  br i1 %tobool, label %if.then, label %if.else, !dbg !7255

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7256
  %call = call i32 @spi_nor_xsr_ready(%struct.spi_nor* %2) #9, !dbg !7257
  store i32 %call, i32* %sr, align 4, !dbg !7258
  br label %if.end, !dbg !7259

if.else:                                          ; preds = %entry
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7260
  %call1 = call i32 @spi_nor_sr_ready(%struct.spi_nor* %3) #9, !dbg !7261
  store i32 %call1, i32* %sr, align 4, !dbg !7262
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %sr, align 4, !dbg !7263
  %cmp = icmp slt i32 %4, 0, !dbg !7265
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7266

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* %sr, align 4, !dbg !7267
  store i32 %5, i32* %retval, align 4, !dbg !7268
  br label %return, !dbg !7268

if.end3:                                          ; preds = %if.end
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7269
  %flags4 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 18, !dbg !7270
  %7 = load i32, i32* %flags4, align 4, !dbg !7270
  %and5 = and i32 %7, 1, !dbg !7271
  %tobool6 = icmp ne i32 %and5, 0, !dbg !7271
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !7269

cond.true:                                        ; preds = %if.end3
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7272
  %call7 = call i32 @spi_nor_fsr_ready(%struct.spi_nor* %8) #9, !dbg !7273
  br label %cond.end, !dbg !7269

cond.false:                                       ; preds = %if.end3
  br label %cond.end, !dbg !7269

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call7, %cond.true ], [ 1, %cond.false ], !dbg !7269
  store i32 %cond, i32* %fsr, align 4, !dbg !7274
  %9 = load i32, i32* %fsr, align 4, !dbg !7275
  %cmp8 = icmp slt i32 %9, 0, !dbg !7277
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !7278

if.then9:                                         ; preds = %cond.end
  %10 = load i32, i32* %fsr, align 4, !dbg !7279
  store i32 %10, i32* %retval, align 4, !dbg !7280
  br label %return, !dbg !7280

if.end10:                                         ; preds = %cond.end
  %11 = load i32, i32* %sr, align 4, !dbg !7281
  %tobool11 = icmp ne i32 %11, 0, !dbg !7281
  br i1 %tobool11, label %land.rhs, label %land.end, !dbg !7282

land.rhs:                                         ; preds = %if.end10
  %12 = load i32, i32* %fsr, align 4, !dbg !7283
  %tobool12 = icmp ne i32 %12, 0, !dbg !7282
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end10
  %13 = phi i1 [ false, %if.end10 ], [ %tobool12, %land.rhs ], !dbg !7284
  %land.ext = zext i1 %13 to i32, !dbg !7282
  store i32 %land.ext, i32* %retval, align 4, !dbg !7285
  br label %return, !dbg !7285

return:                                           ; preds = %land.end, %if.then9, %if.then2
  %14 = load i32, i32* %retval, align 4, !dbg !7286
  ret i32 %14, !dbg !7286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @___might_sleep(i8* %file, i32 %line, i32 %preempt_offset) #0 !dbg !7287 {
entry:
  %file.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  %preempt_offset.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7291, metadata !DIExpression()), !dbg !7292
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !7293, metadata !DIExpression()), !dbg !7294
  store i32 %preempt_offset, i32* %preempt_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %preempt_offset.addr, metadata !7295, metadata !DIExpression()), !dbg !7296
  ret void, !dbg !7297
}

; Function Attrs: noredzone
declare dso_local i32 @_cond_resched() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_xsr_ready(%struct.spi_nor* %nor) #0 !dbg !7298 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7299, metadata !DIExpression()), !dbg !7300
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7301, metadata !DIExpression()), !dbg !7302
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7303
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7304
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 4, !dbg !7305
  %2 = load i8*, i8** %bouncebuf, align 8, !dbg !7305
  %call = call i32 @spi_nor_xread_sr(%struct.spi_nor* %0, i8* %2) #9, !dbg !7306
  store i32 %call, i32* %ret, align 4, !dbg !7307
  %3 = load i32, i32* %ret, align 4, !dbg !7308
  %tobool = icmp ne i32 %3, 0, !dbg !7308
  br i1 %tobool, label %if.then, label %if.end, !dbg !7310

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !7311
  store i32 %4, i32* %retval, align 4, !dbg !7312
  br label %return, !dbg !7312

if.end:                                           ; preds = %entry
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7313
  %bouncebuf1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 4, !dbg !7314
  %6 = load i8*, i8** %bouncebuf1, align 8, !dbg !7314
  %arrayidx = getelementptr i8, i8* %6, i64 0, !dbg !7313
  %7 = load i8, i8* %arrayidx, align 1, !dbg !7313
  %conv = zext i8 %7 to i64, !dbg !7313
  %and = and i64 %conv, 128, !dbg !7315
  %tobool2 = icmp ne i64 %and, 0, !dbg !7316
  %lnot = xor i1 %tobool2, true, !dbg !7316
  %lnot3 = xor i1 %lnot, true, !dbg !7317
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7317
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !7318
  br label %return, !dbg !7318

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7319
  ret i32 %8, !dbg !7319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_sr_ready(%struct.spi_nor* %nor) #0 !dbg !7320 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7321, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7323, metadata !DIExpression()), !dbg !7324
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7325
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7326
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 4, !dbg !7327
  %2 = load i8*, i8** %bouncebuf, align 8, !dbg !7327
  %call = call i32 @spi_nor_read_sr(%struct.spi_nor* %0, i8* %2) #9, !dbg !7328
  store i32 %call, i32* %ret, align 4, !dbg !7324
  %3 = load i32, i32* %ret, align 4, !dbg !7329
  %tobool = icmp ne i32 %3, 0, !dbg !7329
  br i1 %tobool, label %if.then, label %if.end, !dbg !7331

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !7332
  store i32 %4, i32* %retval, align 4, !dbg !7333
  br label %return, !dbg !7333

if.end:                                           ; preds = %entry
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7334
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 18, !dbg !7336
  %6 = load i32, i32* %flags, align 4, !dbg !7336
  %and = and i32 %6, 16, !dbg !7337
  %tobool1 = icmp ne i32 %and, 0, !dbg !7337
  br i1 %tobool1, label %land.lhs.true, label %if.end18, !dbg !7338

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7339
  %bouncebuf2 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 4, !dbg !7340
  %8 = load i8*, i8** %bouncebuf2, align 8, !dbg !7340
  %arrayidx = getelementptr i8, i8* %8, i64 0, !dbg !7339
  %9 = load i8, i8* %arrayidx, align 1, !dbg !7339
  %conv = zext i8 %9 to i64, !dbg !7339
  %and3 = and i64 %conv, 96, !dbg !7341
  %tobool4 = icmp ne i64 %and3, 0, !dbg !7341
  br i1 %tobool4, label %if.then5, label %if.end18, !dbg !7342

if.then5:                                         ; preds = %land.lhs.true
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7343
  %bouncebuf6 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 4, !dbg !7346
  %11 = load i8*, i8** %bouncebuf6, align 8, !dbg !7346
  %arrayidx7 = getelementptr i8, i8* %11, i64 0, !dbg !7343
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !7343
  %conv8 = zext i8 %12 to i64, !dbg !7343
  %and9 = and i64 %conv8, 32, !dbg !7347
  %tobool10 = icmp ne i64 %and9, 0, !dbg !7347
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !7348

if.then11:                                        ; preds = %if.then5
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7349
  %dev = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %13, i32 0, i32 2, !dbg !7349
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7349
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)) #11, !dbg !7349
  br label %if.end13, !dbg !7349

if.else:                                          ; preds = %if.then5
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7350
  %dev12 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %15, i32 0, i32 2, !dbg !7350
  %16 = load %struct.device*, %struct.device** %dev12, align 8, !dbg !7350
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)) #11, !dbg !7350
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then11
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7351
  call void @spi_nor_clear_sr(%struct.spi_nor* %17) #9, !dbg !7352
  %18 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7353
  %call14 = call i32 @spi_nor_write_disable(%struct.spi_nor* %18) #9, !dbg !7354
  store i32 %call14, i32* %ret, align 4, !dbg !7355
  %19 = load i32, i32* %ret, align 4, !dbg !7356
  %tobool15 = icmp ne i32 %19, 0, !dbg !7356
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7358

if.then16:                                        ; preds = %if.end13
  %20 = load i32, i32* %ret, align 4, !dbg !7359
  store i32 %20, i32* %retval, align 4, !dbg !7360
  br label %return, !dbg !7360

if.end17:                                         ; preds = %if.end13
  store i32 -5, i32* %retval, align 4, !dbg !7361
  br label %return, !dbg !7361

if.end18:                                         ; preds = %land.lhs.true, %if.end
  %21 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7362
  %bouncebuf19 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %21, i32 0, i32 4, !dbg !7363
  %22 = load i8*, i8** %bouncebuf19, align 8, !dbg !7363
  %arrayidx20 = getelementptr i8, i8* %22, i64 0, !dbg !7362
  %23 = load i8, i8* %arrayidx20, align 1, !dbg !7362
  %conv21 = zext i8 %23 to i64, !dbg !7362
  %and22 = and i64 %conv21, 1, !dbg !7364
  %tobool23 = icmp ne i64 %and22, 0, !dbg !7365
  %lnot = xor i1 %tobool23, true, !dbg !7365
  %lnot.ext = zext i1 %lnot to i32, !dbg !7365
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !7366
  br label %return, !dbg !7366

return:                                           ; preds = %if.end18, %if.end17, %if.then16, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !7367
  ret i32 %24, !dbg !7367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_fsr_ready(%struct.spi_nor* %nor) #0 !dbg !7368 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7369, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7371, metadata !DIExpression()), !dbg !7372
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7373
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7374
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 4, !dbg !7375
  %2 = load i8*, i8** %bouncebuf, align 8, !dbg !7375
  %call = call i32 @spi_nor_read_fsr(%struct.spi_nor* %0, i8* %2) #9, !dbg !7376
  store i32 %call, i32* %ret, align 4, !dbg !7372
  %3 = load i32, i32* %ret, align 4, !dbg !7377
  %tobool = icmp ne i32 %3, 0, !dbg !7377
  br i1 %tobool, label %if.then, label %if.end, !dbg !7379

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !7380
  store i32 %4, i32* %retval, align 4, !dbg !7381
  br label %return, !dbg !7381

if.end:                                           ; preds = %entry
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7382
  %bouncebuf1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 4, !dbg !7384
  %6 = load i8*, i8** %bouncebuf1, align 8, !dbg !7384
  %arrayidx = getelementptr i8, i8* %6, i64 0, !dbg !7382
  %7 = load i8, i8* %arrayidx, align 1, !dbg !7382
  %conv = zext i8 %7 to i64, !dbg !7382
  %and = and i64 %conv, 48, !dbg !7385
  %tobool2 = icmp ne i64 %and, 0, !dbg !7385
  br i1 %tobool2, label %if.then3, label %if.end24, !dbg !7386

if.then3:                                         ; preds = %if.end
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7387
  %bouncebuf4 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 4, !dbg !7390
  %9 = load i8*, i8** %bouncebuf4, align 8, !dbg !7390
  %arrayidx5 = getelementptr i8, i8* %9, i64 0, !dbg !7387
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !7387
  %conv6 = zext i8 %10 to i64, !dbg !7387
  %and7 = and i64 %conv6, 32, !dbg !7391
  %tobool8 = icmp ne i64 %and7, 0, !dbg !7391
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !7392

if.then9:                                         ; preds = %if.then3
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7393
  %dev = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %11, i32 0, i32 2, !dbg !7393
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7393
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !7393
  br label %if.end11, !dbg !7393

if.else:                                          ; preds = %if.then3
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7394
  %dev10 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %13, i32 0, i32 2, !dbg !7394
  %14 = load %struct.device*, %struct.device** %dev10, align 8, !dbg !7394
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %14, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0)) #11, !dbg !7394
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then9
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7395
  %bouncebuf12 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %15, i32 0, i32 4, !dbg !7397
  %16 = load i8*, i8** %bouncebuf12, align 8, !dbg !7397
  %arrayidx13 = getelementptr i8, i8* %16, i64 0, !dbg !7395
  %17 = load i8, i8* %arrayidx13, align 1, !dbg !7395
  %conv14 = zext i8 %17 to i64, !dbg !7395
  %and15 = and i64 %conv14, 2, !dbg !7398
  %tobool16 = icmp ne i64 %and15, 0, !dbg !7398
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !7399

if.then17:                                        ; preds = %if.end11
  %18 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7400
  %dev18 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %18, i32 0, i32 2, !dbg !7400
  %19 = load %struct.device*, %struct.device** %dev18, align 8, !dbg !7400
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %19, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !7400
  br label %if.end19, !dbg !7400

if.end19:                                         ; preds = %if.then17, %if.end11
  %20 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7401
  call void @spi_nor_clear_fsr(%struct.spi_nor* %20) #9, !dbg !7402
  %21 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7403
  %call20 = call i32 @spi_nor_write_disable(%struct.spi_nor* %21) #9, !dbg !7404
  store i32 %call20, i32* %ret, align 4, !dbg !7405
  %22 = load i32, i32* %ret, align 4, !dbg !7406
  %tobool21 = icmp ne i32 %22, 0, !dbg !7406
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !7408

if.then22:                                        ; preds = %if.end19
  %23 = load i32, i32* %ret, align 4, !dbg !7409
  store i32 %23, i32* %retval, align 4, !dbg !7410
  br label %return, !dbg !7410

if.end23:                                         ; preds = %if.end19
  store i32 -5, i32* %retval, align 4, !dbg !7411
  br label %return, !dbg !7411

if.end24:                                         ; preds = %if.end
  %24 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7412
  %bouncebuf25 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %24, i32 0, i32 4, !dbg !7413
  %25 = load i8*, i8** %bouncebuf25, align 8, !dbg !7413
  %arrayidx26 = getelementptr i8, i8* %25, i64 0, !dbg !7412
  %26 = load i8, i8* %arrayidx26, align 1, !dbg !7412
  %conv27 = zext i8 %26 to i64, !dbg !7412
  %and28 = and i64 %conv27, 128, !dbg !7414
  %tobool29 = icmp ne i64 %and28, 0, !dbg !7415
  %lnot = xor i1 %tobool29, true, !dbg !7415
  %lnot30 = xor i1 %lnot, true, !dbg !7416
  %lnot.ext = zext i1 %lnot30 to i32, !dbg !7416
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !7417
  br label %return, !dbg !7417

return:                                           ; preds = %if.end24, %if.end23, %if.then22, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !7418
  ret i32 %27, !dbg !7418
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_clear_sr(%struct.spi_nor* %nor) #0 !dbg !7419 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7420, metadata !DIExpression()), !dbg !7421
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7422, metadata !DIExpression()), !dbg !7423
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7424
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !7426
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !7426
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !7424
  br i1 %tobool, label %if.then, label %if.else, !dbg !7427

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !7428, metadata !DIExpression()), !dbg !7430
  %2 = bitcast %struct.spi_mem_op* %op to i8*, !dbg !7430
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false), !dbg !7430
  %3 = bitcast i8* %2 to %struct.spi_mem_op*, !dbg !7430
  %4 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %3, i32 0, i32 0, !dbg !7430
  %5 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 0, !dbg !7430
  store i8 1, i8* %5, align 8, !dbg !7430
  %6 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 1, !dbg !7430
  store i8 1, i8* %6, align 1, !dbg !7430
  %7 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 3, !dbg !7430
  store i16 48, i16* %7, align 4, !dbg !7430
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7431
  %spimem1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 3, !dbg !7432
  %9 = load %struct.spi_mem*, %struct.spi_mem** %spimem1, align 8, !dbg !7432
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %9, %struct.spi_mem_op* %op) #9, !dbg !7433
  store i32 %call, i32* %ret, align 4, !dbg !7434
  br label %if.end, !dbg !7435

if.else:                                          ; preds = %entry
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7436
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 19, !dbg !7438
  %11 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !7438
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %11, i32 0, i32 3, !dbg !7439
  %12 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !7439
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7440
  %call2 = call i32 %12(%struct.spi_nor* %13, i8 zeroext 48, i8* null, i64 0) #9, !dbg !7436
  store i32 %call2, i32* %ret, align 4, !dbg !7441
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !7442
  %tobool3 = icmp ne i32 %14, 0, !dbg !7442
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7444

if.then4:                                         ; preds = %if.end
  br label %if.end5, !dbg !7445

if.end5:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !7446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_read_fsr(%struct.spi_nor* %nor, i8* %fsr) #0 !dbg !7447 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %fsr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  store i8* %fsr, i8** %fsr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fsr.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7452, metadata !DIExpression()), !dbg !7453
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7454
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !7456
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !7456
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !7454
  br i1 %tobool, label %if.then, label %if.else, !dbg !7457

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !7458, metadata !DIExpression()), !dbg !7460
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !7461
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !7461
  store i8 1, i8* %nbytes, align 8, !dbg !7461
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !7461
  store i8 1, i8* %buswidth, align 1, !dbg !7461
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !7461
  %bf.load = load i8, i8* %dtr, align 2, !dbg !7461
  %bf.clear = and i8 %bf.load, -2, !dbg !7461
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !7461
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !7461
  store i16 112, i16* %opcode, align 4, !dbg !7461
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !7461
  %nbytes1 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !7461
  store i8 0, i8* %nbytes1, align 8, !dbg !7461
  %buswidth2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !7461
  store i8 0, i8* %buswidth2, align 1, !dbg !7461
  %dtr3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !7461
  %bf.load4 = load i8, i8* %dtr3, align 2, !dbg !7461
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !7461
  store i8 %bf.clear5, i8* %dtr3, align 2, !dbg !7461
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !7461
  store i64 0, i64* %val, align 8, !dbg !7461
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !7461
  %nbytes6 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !7461
  store i8 0, i8* %nbytes6, align 8, !dbg !7461
  %buswidth7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !7461
  store i8 0, i8* %buswidth7, align 1, !dbg !7461
  %dtr8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !7461
  %bf.load9 = load i8, i8* %dtr8, align 2, !dbg !7461
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !7461
  store i8 %bf.clear10, i8* %dtr8, align 2, !dbg !7461
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !7461
  %buswidth11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !7461
  store i8 1, i8* %buswidth11, align 8, !dbg !7461
  %dtr12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !7461
  %bf.load13 = load i8, i8* %dtr12, align 1, !dbg !7461
  %bf.clear14 = and i8 %bf.load13, -2, !dbg !7461
  store i8 %bf.clear14, i8* %dtr12, align 1, !dbg !7461
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !7461
  store i32 1, i32* %dir, align 4, !dbg !7461
  %nbytes15 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !7461
  store i32 1, i32* %nbytes15, align 8, !dbg !7461
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !7461
  %in = bitcast %union.anon.73* %buf to i8**, !dbg !7461
  %2 = load i8*, i8** %fsr.addr, align 8, !dbg !7461
  store i8* %2, i8** %in, align 8, !dbg !7461
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7462
  %spimem16 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 3, !dbg !7463
  %4 = load %struct.spi_mem*, %struct.spi_mem** %spimem16, align 8, !dbg !7463
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %4, %struct.spi_mem_op* %op) #9, !dbg !7464
  store i32 %call, i32* %ret, align 4, !dbg !7465
  br label %if.end, !dbg !7466

if.else:                                          ; preds = %entry
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7467
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 19, !dbg !7469
  %6 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !7469
  %read_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %6, i32 0, i32 2, !dbg !7470
  %7 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %read_reg, align 8, !dbg !7470
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7471
  %9 = load i8*, i8** %fsr.addr, align 8, !dbg !7472
  %call17 = call i32 %7(%struct.spi_nor* %8, i8 zeroext 112, i8* %9, i64 1) #9, !dbg !7467
  store i32 %call17, i32* %ret, align 4, !dbg !7473
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %ret, align 4, !dbg !7474
  %tobool18 = icmp ne i32 %10, 0, !dbg !7474
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !7476

if.then19:                                        ; preds = %if.end
  br label %if.end20, !dbg !7477

if.end20:                                         ; preds = %if.then19, %if.end
  %11 = load i32, i32* %ret, align 4, !dbg !7478
  ret i32 %11, !dbg !7479
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_clear_fsr(%struct.spi_nor* %nor) #0 !dbg !7480 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7481, metadata !DIExpression()), !dbg !7482
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7483, metadata !DIExpression()), !dbg !7484
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7485
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !7487
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !7487
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !7485
  br i1 %tobool, label %if.then, label %if.else, !dbg !7488

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !7489, metadata !DIExpression()), !dbg !7491
  %2 = bitcast %struct.spi_mem_op* %op to i8*, !dbg !7491
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false), !dbg !7491
  %3 = bitcast i8* %2 to %struct.spi_mem_op*, !dbg !7491
  %4 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %3, i32 0, i32 0, !dbg !7491
  %5 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 0, !dbg !7491
  store i8 1, i8* %5, align 8, !dbg !7491
  %6 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 1, !dbg !7491
  store i8 1, i8* %6, align 1, !dbg !7491
  %7 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 3, !dbg !7491
  store i16 80, i16* %7, align 4, !dbg !7491
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7492
  %spimem1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 3, !dbg !7493
  %9 = load %struct.spi_mem*, %struct.spi_mem** %spimem1, align 8, !dbg !7493
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %9, %struct.spi_mem_op* %op) #9, !dbg !7494
  store i32 %call, i32* %ret, align 4, !dbg !7495
  br label %if.end, !dbg !7496

if.else:                                          ; preds = %entry
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7497
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 19, !dbg !7499
  %11 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !7499
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %11, i32 0, i32 3, !dbg !7500
  %12 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !7500
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7501
  %call2 = call i32 %12(%struct.spi_nor* %13, i8 zeroext 80, i8* null, i64 0) #9, !dbg !7497
  store i32 %call2, i32* %ret, align 4, !dbg !7502
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !7503
  %tobool3 = icmp ne i32 %14, 0, !dbg !7503
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7505

if.then4:                                         ; preds = %if.end
  br label %if.end5, !dbg !7506

if.end5:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !7507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_write_sr(%struct.spi_nor* %nor, i8* %sr, i64 %len) #0 !dbg !7508 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7511, metadata !DIExpression()), !dbg !7512
  store i8* %sr, i8** %sr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sr.addr, metadata !7513, metadata !DIExpression()), !dbg !7514
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !7515, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7517, metadata !DIExpression()), !dbg !7518
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7519
  %call = call i32 @spi_nor_write_enable(%struct.spi_nor* %0) #9, !dbg !7520
  store i32 %call, i32* %ret, align 4, !dbg !7521
  %1 = load i32, i32* %ret, align 4, !dbg !7522
  %tobool = icmp ne i32 %1, 0, !dbg !7522
  br i1 %tobool, label %if.then, label %if.end, !dbg !7524

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !7525
  store i32 %2, i32* %retval, align 4, !dbg !7526
  br label %return, !dbg !7526

if.end:                                           ; preds = %entry
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7527
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 3, !dbg !7529
  %4 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !7529
  %tobool1 = icmp ne %struct.spi_mem* %4, null, !dbg !7527
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !7530

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !7531, metadata !DIExpression()), !dbg !7533
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !7534
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !7534
  store i8 1, i8* %nbytes, align 8, !dbg !7534
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !7534
  store i8 1, i8* %buswidth, align 1, !dbg !7534
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !7534
  %bf.load = load i8, i8* %dtr, align 2, !dbg !7534
  %bf.clear = and i8 %bf.load, -2, !dbg !7534
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !7534
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !7534
  store i16 1, i16* %opcode, align 4, !dbg !7534
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !7534
  %nbytes3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !7534
  store i8 0, i8* %nbytes3, align 8, !dbg !7534
  %buswidth4 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !7534
  store i8 0, i8* %buswidth4, align 1, !dbg !7534
  %dtr5 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !7534
  %bf.load6 = load i8, i8* %dtr5, align 2, !dbg !7534
  %bf.clear7 = and i8 %bf.load6, -2, !dbg !7534
  store i8 %bf.clear7, i8* %dtr5, align 2, !dbg !7534
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !7534
  store i64 0, i64* %val, align 8, !dbg !7534
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !7534
  %nbytes8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !7534
  store i8 0, i8* %nbytes8, align 8, !dbg !7534
  %buswidth9 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !7534
  store i8 0, i8* %buswidth9, align 1, !dbg !7534
  %dtr10 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !7534
  %bf.load11 = load i8, i8* %dtr10, align 2, !dbg !7534
  %bf.clear12 = and i8 %bf.load11, -2, !dbg !7534
  store i8 %bf.clear12, i8* %dtr10, align 2, !dbg !7534
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !7534
  %buswidth13 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !7534
  store i8 1, i8* %buswidth13, align 8, !dbg !7534
  %dtr14 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !7534
  %bf.load15 = load i8, i8* %dtr14, align 1, !dbg !7534
  %bf.clear16 = and i8 %bf.load15, -2, !dbg !7534
  store i8 %bf.clear16, i8* %dtr14, align 1, !dbg !7534
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !7534
  store i32 2, i32* %dir, align 4, !dbg !7534
  %nbytes17 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !7534
  %5 = load i64, i64* %len.addr, align 8, !dbg !7534
  %conv = trunc i64 %5 to i32, !dbg !7534
  store i32 %conv, i32* %nbytes17, align 8, !dbg !7534
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !7534
  %out = bitcast %union.anon.73* %buf to i8**, !dbg !7534
  %6 = load i8*, i8** %sr.addr, align 8, !dbg !7534
  store i8* %6, i8** %out, align 8, !dbg !7534
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7535
  %spimem18 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 3, !dbg !7536
  %8 = load %struct.spi_mem*, %struct.spi_mem** %spimem18, align 8, !dbg !7536
  %call19 = call i32 @spi_mem_exec_op(%struct.spi_mem* %8, %struct.spi_mem_op* %op) #9, !dbg !7537
  store i32 %call19, i32* %ret, align 4, !dbg !7538
  br label %if.end21, !dbg !7539

if.else:                                          ; preds = %if.end
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7540
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 19, !dbg !7542
  %10 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !7542
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %10, i32 0, i32 3, !dbg !7543
  %11 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !7543
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7544
  %13 = load i8*, i8** %sr.addr, align 8, !dbg !7545
  %14 = load i64, i64* %len.addr, align 8, !dbg !7546
  %call20 = call i32 %11(%struct.spi_nor* %12, i8 zeroext 1, i8* %13, i64 %14) #9, !dbg !7540
  store i32 %call20, i32* %ret, align 4, !dbg !7547
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then2
  %15 = load i32, i32* %ret, align 4, !dbg !7548
  %tobool22 = icmp ne i32 %15, 0, !dbg !7548
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !7550

if.then23:                                        ; preds = %if.end21
  %16 = load i32, i32* %ret, align 4, !dbg !7551
  store i32 %16, i32* %retval, align 4, !dbg !7553
  br label %return, !dbg !7553

if.end24:                                         ; preds = %if.end21
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7554
  %call25 = call i32 @spi_nor_wait_till_ready(%struct.spi_nor* %17) #9, !dbg !7555
  store i32 %call25, i32* %retval, align 4, !dbg !7556
  br label %return, !dbg !7556

return:                                           ; preds = %if.end24, %if.then23, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !7557
  ret i32 %18, !dbg !7557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @mtd_get_of_node(%struct.mtd_info* %mtd) #0 !dbg !7558 {
entry:
  %mtd.addr = alloca %struct.mtd_info*, align 8
  store %struct.mtd_info* %mtd, %struct.mtd_info** %mtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd.addr, metadata !7561, metadata !DIExpression()), !dbg !7562
  %0 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !7563
  %dev = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %0, i32 0, i32 55, !dbg !7564
  %call = call %struct.device_node* @dev_of_node(%struct.device* %dev) #9, !dbg !7565
  ret %struct.device_node* %call, !dbg !7566
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @dev_of_node(%struct.device* %dev) #0 !dbg !7567 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7570, metadata !DIExpression()), !dbg !7571
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7572
  %tobool = icmp ne %struct.device* %0, null, !dbg !7572
  br i1 %tobool, label %if.end, label %if.then, !dbg !7574

if.then:                                          ; preds = %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !7575
  br label %return, !dbg !7575

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7576
  %of_node = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 23, !dbg !7577
  %2 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !7577
  store %struct.device_node* %2, %struct.device_node** %retval, align 8, !dbg !7578
  br label %return, !dbg !7578

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !7579
  ret %struct.device_node* %3, !dbg !7579
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.flash_info* @spi_nor_match_id(%struct.spi_nor* %nor, i8* %name) #0 !dbg !7580 {
entry:
  %retval = alloca %struct.flash_info*, align 8
  %nor.addr = alloca %struct.spi_nor*, align 8
  %name.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7581, metadata !DIExpression()), !dbg !7582
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7583, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7585, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7587, metadata !DIExpression()), !dbg !7588
  store i32 0, i32* %i, align 4, !dbg !7589
  br label %for.cond, !dbg !7591

for.cond:                                         ; preds = %for.inc18, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7592
  %conv = zext i32 %0 to i64, !dbg !7592
  %cmp = icmp ult i64 %conv, 17, !dbg !7594
  br i1 %cmp, label %for.body, label %for.end20, !dbg !7595

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7596
  br label %for.cond2, !dbg !7599

for.cond2:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %j, align 4, !dbg !7600
  %2 = load i32, i32* %i, align 4, !dbg !7602
  %idxprom = zext i32 %2 to i64, !dbg !7603
  %arrayidx = getelementptr [17 x %struct.spi_nor_manufacturer*], [17 x %struct.spi_nor_manufacturer*]* @manufacturers, i64 0, i64 %idxprom, !dbg !7603
  %3 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %arrayidx, align 8, !dbg !7603
  %nparts = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %3, i32 0, i32 2, !dbg !7604
  %4 = load i32, i32* %nparts, align 8, !dbg !7604
  %cmp3 = icmp ult i32 %1, %4, !dbg !7605
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !7606

for.body5:                                        ; preds = %for.cond2
  %5 = load i8*, i8** %name.addr, align 8, !dbg !7607
  %6 = load i32, i32* %i, align 4, !dbg !7610
  %idxprom6 = zext i32 %6 to i64, !dbg !7611
  %arrayidx7 = getelementptr [17 x %struct.spi_nor_manufacturer*], [17 x %struct.spi_nor_manufacturer*]* @manufacturers, i64 0, i64 %idxprom6, !dbg !7611
  %7 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %arrayidx7, align 8, !dbg !7611
  %parts = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %7, i32 0, i32 1, !dbg !7612
  %8 = load %struct.flash_info*, %struct.flash_info** %parts, align 8, !dbg !7612
  %9 = load i32, i32* %j, align 4, !dbg !7613
  %idxprom8 = zext i32 %9 to i64, !dbg !7611
  %arrayidx9 = getelementptr %struct.flash_info, %struct.flash_info* %8, i64 %idxprom8, !dbg !7611
  %name10 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %arrayidx9, i32 0, i32 0, !dbg !7614
  %10 = load i8*, i8** %name10, align 8, !dbg !7614
  %call = call i32 @strcmp(i8* %5, i8* %10) #9, !dbg !7615
  %tobool = icmp ne i32 %call, 0, !dbg !7615
  br i1 %tobool, label %if.end, label %if.then, !dbg !7616

if.then:                                          ; preds = %for.body5
  %11 = load i32, i32* %i, align 4, !dbg !7617
  %idxprom11 = zext i32 %11 to i64, !dbg !7619
  %arrayidx12 = getelementptr [17 x %struct.spi_nor_manufacturer*], [17 x %struct.spi_nor_manufacturer*]* @manufacturers, i64 0, i64 %idxprom11, !dbg !7619
  %12 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %arrayidx12, align 8, !dbg !7619
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7620
  %manufacturer = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %13, i32 0, i32 7, !dbg !7621
  store %struct.spi_nor_manufacturer* %12, %struct.spi_nor_manufacturer** %manufacturer, align 8, !dbg !7622
  %14 = load i32, i32* %i, align 4, !dbg !7623
  %idxprom13 = zext i32 %14 to i64, !dbg !7624
  %arrayidx14 = getelementptr [17 x %struct.spi_nor_manufacturer*], [17 x %struct.spi_nor_manufacturer*]* @manufacturers, i64 0, i64 %idxprom13, !dbg !7624
  %15 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %arrayidx14, align 8, !dbg !7624
  %parts15 = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %15, i32 0, i32 1, !dbg !7625
  %16 = load %struct.flash_info*, %struct.flash_info** %parts15, align 8, !dbg !7625
  %17 = load i32, i32* %j, align 4, !dbg !7626
  %idxprom16 = zext i32 %17 to i64, !dbg !7624
  %arrayidx17 = getelementptr %struct.flash_info, %struct.flash_info* %16, i64 %idxprom16, !dbg !7624
  store %struct.flash_info* %arrayidx17, %struct.flash_info** %retval, align 8, !dbg !7627
  br label %return, !dbg !7627

if.end:                                           ; preds = %for.body5
  br label %for.inc, !dbg !7628

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %j, align 4, !dbg !7629
  %inc = add i32 %18, 1, !dbg !7629
  store i32 %inc, i32* %j, align 4, !dbg !7629
  br label %for.cond2, !dbg !7630, !llvm.loop !7631

for.end:                                          ; preds = %for.cond2
  br label %for.inc18, !dbg !7633

for.inc18:                                        ; preds = %for.end
  %19 = load i32, i32* %i, align 4, !dbg !7634
  %inc19 = add i32 %19, 1, !dbg !7634
  store i32 %inc19, i32* %i, align 4, !dbg !7634
  br label %for.cond, !dbg !7635, !llvm.loop !7636

for.end20:                                        ; preds = %for.cond
  store %struct.flash_info* null, %struct.flash_info** %retval, align 8, !dbg !7638
  br label %return, !dbg !7638

return:                                           ; preds = %for.end20, %if.then
  %20 = load %struct.flash_info*, %struct.flash_info** %retval, align 8, !dbg !7639
  ret %struct.flash_info* %20, !dbg !7639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.flash_info* @spi_nor_read_id(%struct.spi_nor* %nor) #0 !dbg !7640 {
entry:
  %retval = alloca %struct.flash_info*, align 8
  %nor.addr = alloca %struct.spi_nor*, align 8
  %info = alloca %struct.flash_info*, align 8
  %id = alloca i8*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7643, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.declare(metadata %struct.flash_info** %info, metadata !7645, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.declare(metadata i8** %id, metadata !7647, metadata !DIExpression()), !dbg !7648
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7649
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 4, !dbg !7650
  %1 = load i8*, i8** %bouncebuf, align 8, !dbg !7650
  store i8* %1, i8** %id, align 8, !dbg !7648
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7651, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7653, metadata !DIExpression()), !dbg !7654
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7655
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 3, !dbg !7657
  %3 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !7657
  %tobool = icmp ne %struct.spi_mem* %3, null, !dbg !7655
  br i1 %tobool, label %if.then, label %if.else, !dbg !7658

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !7659, metadata !DIExpression()), !dbg !7661
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !7662
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !7662
  store i8 1, i8* %nbytes, align 8, !dbg !7662
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !7662
  store i8 1, i8* %buswidth, align 1, !dbg !7662
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !7662
  %bf.load = load i8, i8* %dtr, align 2, !dbg !7662
  %bf.clear = and i8 %bf.load, -2, !dbg !7662
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !7662
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !7662
  store i16 159, i16* %opcode, align 4, !dbg !7662
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !7662
  %nbytes1 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !7662
  store i8 0, i8* %nbytes1, align 8, !dbg !7662
  %buswidth2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !7662
  store i8 0, i8* %buswidth2, align 1, !dbg !7662
  %dtr3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !7662
  %bf.load4 = load i8, i8* %dtr3, align 2, !dbg !7662
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !7662
  store i8 %bf.clear5, i8* %dtr3, align 2, !dbg !7662
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !7662
  store i64 0, i64* %val, align 8, !dbg !7662
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !7662
  %nbytes6 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !7662
  store i8 0, i8* %nbytes6, align 8, !dbg !7662
  %buswidth7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !7662
  store i8 0, i8* %buswidth7, align 1, !dbg !7662
  %dtr8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !7662
  %bf.load9 = load i8, i8* %dtr8, align 2, !dbg !7662
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !7662
  store i8 %bf.clear10, i8* %dtr8, align 2, !dbg !7662
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !7662
  %buswidth11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !7662
  store i8 1, i8* %buswidth11, align 8, !dbg !7662
  %dtr12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !7662
  %bf.load13 = load i8, i8* %dtr12, align 1, !dbg !7662
  %bf.clear14 = and i8 %bf.load13, -2, !dbg !7662
  store i8 %bf.clear14, i8* %dtr12, align 1, !dbg !7662
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !7662
  store i32 1, i32* %dir, align 4, !dbg !7662
  %nbytes15 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !7662
  store i32 6, i32* %nbytes15, align 8, !dbg !7662
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !7662
  %in = bitcast %union.anon.73* %buf to i8**, !dbg !7662
  %4 = load i8*, i8** %id, align 8, !dbg !7662
  store i8* %4, i8** %in, align 8, !dbg !7662
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7663
  %spimem16 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 3, !dbg !7664
  %6 = load %struct.spi_mem*, %struct.spi_mem** %spimem16, align 8, !dbg !7664
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %6, %struct.spi_mem_op* %op) #9, !dbg !7665
  store i32 %call, i32* %ret, align 4, !dbg !7666
  br label %if.end, !dbg !7667

if.else:                                          ; preds = %entry
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7668
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 19, !dbg !7670
  %8 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !7670
  %read_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %8, i32 0, i32 2, !dbg !7671
  %9 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %read_reg, align 8, !dbg !7671
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7672
  %11 = load i8*, i8** %id, align 8, !dbg !7673
  %call17 = call i32 %9(%struct.spi_nor* %10, i8 zeroext -97, i8* %11, i64 6) #9, !dbg !7668
  store i32 %call17, i32* %ret, align 4, !dbg !7674
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load i32, i32* %ret, align 4, !dbg !7675
  %tobool18 = icmp ne i32 %12, 0, !dbg !7675
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !7677

if.then19:                                        ; preds = %if.end
  %13 = load i32, i32* %ret, align 4, !dbg !7678
  %conv = sext i32 %13 to i64, !dbg !7678
  %call20 = call i8* @ERR_PTR(i64 %conv) #9, !dbg !7680
  %14 = bitcast i8* %call20 to %struct.flash_info*, !dbg !7680
  store %struct.flash_info* %14, %struct.flash_info** %retval, align 8, !dbg !7681
  br label %return, !dbg !7681

if.end21:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !7682
  br label %for.cond, !dbg !7684

for.cond:                                         ; preds = %for.inc, %if.end21
  %15 = load i32, i32* %i, align 4, !dbg !7685
  %conv22 = zext i32 %15 to i64, !dbg !7685
  %cmp = icmp ult i64 %conv22, 17, !dbg !7687
  br i1 %cmp, label %for.body, label %for.end, !dbg !7688

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !7689
  %idxprom = zext i32 %16 to i64, !dbg !7691
  %arrayidx = getelementptr [17 x %struct.spi_nor_manufacturer*], [17 x %struct.spi_nor_manufacturer*]* @manufacturers, i64 0, i64 %idxprom, !dbg !7691
  %17 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %arrayidx, align 8, !dbg !7691
  %parts = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %17, i32 0, i32 1, !dbg !7692
  %18 = load %struct.flash_info*, %struct.flash_info** %parts, align 8, !dbg !7692
  %19 = load i32, i32* %i, align 4, !dbg !7693
  %idxprom24 = zext i32 %19 to i64, !dbg !7694
  %arrayidx25 = getelementptr [17 x %struct.spi_nor_manufacturer*], [17 x %struct.spi_nor_manufacturer*]* @manufacturers, i64 0, i64 %idxprom24, !dbg !7694
  %20 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %arrayidx25, align 8, !dbg !7694
  %nparts = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %20, i32 0, i32 2, !dbg !7695
  %21 = load i32, i32* %nparts, align 8, !dbg !7695
  %22 = load i8*, i8** %id, align 8, !dbg !7696
  %call26 = call %struct.flash_info* @spi_nor_search_part_by_id(%struct.flash_info* %18, i32 %21, i8* %22) #9, !dbg !7697
  store %struct.flash_info* %call26, %struct.flash_info** %info, align 8, !dbg !7698
  %23 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7699
  %tobool27 = icmp ne %struct.flash_info* %23, null, !dbg !7699
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !7701

if.then28:                                        ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !7702
  %idxprom29 = zext i32 %24 to i64, !dbg !7704
  %arrayidx30 = getelementptr [17 x %struct.spi_nor_manufacturer*], [17 x %struct.spi_nor_manufacturer*]* @manufacturers, i64 0, i64 %idxprom29, !dbg !7704
  %25 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %arrayidx30, align 8, !dbg !7704
  %26 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7705
  %manufacturer = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %26, i32 0, i32 7, !dbg !7706
  store %struct.spi_nor_manufacturer* %25, %struct.spi_nor_manufacturer** %manufacturer, align 8, !dbg !7707
  %27 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7708
  store %struct.flash_info* %27, %struct.flash_info** %retval, align 8, !dbg !7709
  br label %return, !dbg !7709

if.end31:                                         ; preds = %for.body
  br label %for.inc, !dbg !7710

for.inc:                                          ; preds = %if.end31
  %28 = load i32, i32* %i, align 4, !dbg !7711
  %inc = add i32 %28, 1, !dbg !7711
  store i32 %inc, i32* %i, align 4, !dbg !7711
  br label %for.cond, !dbg !7712, !llvm.loop !7713

for.end:                                          ; preds = %for.cond
  %29 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7715
  %dev = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %29, i32 0, i32 2, !dbg !7715
  %30 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7715
  %31 = load i8*, i8** %id, align 8, !dbg !7715
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %30, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0), i32 6, i8* %31) #11, !dbg !7715
  %call32 = call i8* @ERR_PTR(i64 -19) #9, !dbg !7716
  %32 = bitcast i8* %call32 to %struct.flash_info*, !dbg !7716
  store %struct.flash_info* %32, %struct.flash_info** %retval, align 8, !dbg !7717
  br label %return, !dbg !7717

return:                                           ; preds = %for.end, %if.then28, %if.then19
  %33 = load %struct.flash_info*, %struct.flash_info** %retval, align 8, !dbg !7718
  ret %struct.flash_info* %33, !dbg !7718
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #0 !dbg !7719 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7720, metadata !DIExpression()), !dbg !7721
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7722
  %tobool = icmp ne i8* %0, null, !dbg !7722
  %lnot = xor i1 %tobool, true, !dbg !7722
  %lnot1 = xor i1 %lnot, true, !dbg !7722
  %lnot2 = xor i1 %lnot1, true, !dbg !7722
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7722
  %conv = sext i32 %lnot.ext to i64, !dbg !7722
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7722
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !7723

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !7724
  %2 = ptrtoint i8* %1 to i64, !dbg !7724
  %3 = inttoptr i64 %2 to i8*, !dbg !7724
  %4 = ptrtoint i8* %3 to i64, !dbg !7724
  %cmp = icmp uge i64 %4, -4095, !dbg !7724
  %lnot5 = xor i1 %cmp, true, !dbg !7724
  %lnot7 = xor i1 %lnot5, true, !dbg !7724
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7724
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !7724
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !7723
  br label %lor.end, !dbg !7723

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !7725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !7726 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !7729, metadata !DIExpression()), !dbg !7730
  %0 = load i64, i64* %error.addr, align 8, !dbg !7731
  %1 = inttoptr i64 %0 to i8*, !dbg !7732
  ret i8* %1, !dbg !7733
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.flash_info* @spi_nor_search_part_by_id(%struct.flash_info* %parts, i32 %nparts, i8* %id) #0 !dbg !7734 {
entry:
  %retval = alloca %struct.flash_info*, align 8
  %parts.addr = alloca %struct.flash_info*, align 8
  %nparts.addr = alloca i32, align 4
  %id.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.flash_info* %parts, %struct.flash_info** %parts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.flash_info** %parts.addr, metadata !7737, metadata !DIExpression()), !dbg !7738
  store i32 %nparts, i32* %nparts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nparts.addr, metadata !7739, metadata !DIExpression()), !dbg !7740
  store i8* %id, i8** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %id.addr, metadata !7741, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7743, metadata !DIExpression()), !dbg !7744
  store i32 0, i32* %i, align 4, !dbg !7745
  br label %for.cond, !dbg !7747

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7748
  %1 = load i32, i32* %nparts.addr, align 4, !dbg !7750
  %cmp = icmp ult i32 %0, %1, !dbg !7751
  br i1 %cmp, label %for.body, label %for.end, !dbg !7752

for.body:                                         ; preds = %for.cond
  %2 = load %struct.flash_info*, %struct.flash_info** %parts.addr, align 8, !dbg !7753
  %3 = load i32, i32* %i, align 4, !dbg !7756
  %idxprom = zext i32 %3 to i64, !dbg !7753
  %arrayidx = getelementptr %struct.flash_info, %struct.flash_info* %2, i64 %idxprom, !dbg !7753
  %id_len = getelementptr inbounds %struct.flash_info, %struct.flash_info* %arrayidx, i32 0, i32 2, !dbg !7757
  %4 = load i8, i8* %id_len, align 2, !dbg !7757
  %conv = zext i8 %4 to i32, !dbg !7753
  %tobool = icmp ne i32 %conv, 0, !dbg !7753
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7758

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.flash_info*, %struct.flash_info** %parts.addr, align 8, !dbg !7759
  %6 = load i32, i32* %i, align 4, !dbg !7760
  %idxprom1 = zext i32 %6 to i64, !dbg !7759
  %arrayidx2 = getelementptr %struct.flash_info, %struct.flash_info* %5, i64 %idxprom1, !dbg !7759
  %id3 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %arrayidx2, i32 0, i32 1, !dbg !7761
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %id3, i64 0, i64 0, !dbg !7759
  %7 = load i8*, i8** %id.addr, align 8, !dbg !7762
  %8 = load %struct.flash_info*, %struct.flash_info** %parts.addr, align 8, !dbg !7763
  %9 = load i32, i32* %i, align 4, !dbg !7764
  %idxprom4 = zext i32 %9 to i64, !dbg !7763
  %arrayidx5 = getelementptr %struct.flash_info, %struct.flash_info* %8, i64 %idxprom4, !dbg !7763
  %id_len6 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %arrayidx5, i32 0, i32 2, !dbg !7765
  %10 = load i8, i8* %id_len6, align 2, !dbg !7765
  %conv7 = zext i8 %10 to i64, !dbg !7763
  %call = call i32 @memcmp(i8* %arraydecay, i8* %7, i64 %conv7) #9, !dbg !7766
  %tobool8 = icmp ne i32 %call, 0, !dbg !7766
  br i1 %tobool8, label %if.end, label %if.then, !dbg !7767

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.flash_info*, %struct.flash_info** %parts.addr, align 8, !dbg !7768
  %12 = load i32, i32* %i, align 4, !dbg !7769
  %idxprom9 = zext i32 %12 to i64, !dbg !7768
  %arrayidx10 = getelementptr %struct.flash_info, %struct.flash_info* %11, i64 %idxprom9, !dbg !7768
  store %struct.flash_info* %arrayidx10, %struct.flash_info** %retval, align 8, !dbg !7770
  br label %return, !dbg !7770

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !7771

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !7772
  %inc = add i32 %13, 1, !dbg !7772
  store i32 %inc, i32* %i, align 4, !dbg !7772
  br label %for.cond, !dbg !7773, !llvm.loop !7774

for.end:                                          ; preds = %for.cond
  store %struct.flash_info* null, %struct.flash_info** %retval, align 8, !dbg !7776
  br label %return, !dbg !7776

return:                                           ; preds = %for.end, %if.then
  %14 = load %struct.flash_info*, %struct.flash_info** %retval, align 8, !dbg !7777
  ret %struct.flash_info* %14, !dbg !7777
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kasprintf(%struct.device*, i32, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_nor* @mtd_to_spi_nor(%struct.mtd_info* %mtd) #0 !dbg !7778 {
entry:
  %mtd.addr = alloca %struct.mtd_info*, align 8
  store %struct.mtd_info* %mtd, %struct.mtd_info** %mtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd.addr, metadata !7781, metadata !DIExpression()), !dbg !7782
  %0 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !7783
  %priv = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %0, i32 0, i32 53, !dbg !7784
  %1 = load i8*, i8** %priv, align 8, !dbg !7784
  %2 = bitcast i8* %1 to %struct.spi_nor*, !dbg !7783
  ret %struct.spi_nor* %2, !dbg !7785
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_convert_addr(%struct.spi_nor* %nor, i64 %addr) #0 !dbg !7786 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %addr.addr = alloca i64, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7789, metadata !DIExpression()), !dbg !7790
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !7791, metadata !DIExpression()), !dbg !7792
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7793
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 20, !dbg !7795
  %1 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7795
  %convert_addr = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %1, i32 0, i32 8, !dbg !7796
  %2 = load i32 (%struct.spi_nor*, i32)*, i32 (%struct.spi_nor*, i32)** %convert_addr, align 8, !dbg !7796
  %tobool = icmp ne i32 (%struct.spi_nor*, i32)* %2, null, !dbg !7793
  br i1 %tobool, label %if.end, label %if.then, !dbg !7797

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %addr.addr, align 8, !dbg !7798
  %conv = trunc i64 %3 to i32, !dbg !7798
  store i32 %conv, i32* %retval, align 4, !dbg !7799
  br label %return, !dbg !7799

if.end:                                           ; preds = %entry
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7800
  %params1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 20, !dbg !7801
  %5 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params1, align 8, !dbg !7801
  %convert_addr2 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %5, i32 0, i32 8, !dbg !7802
  %6 = load i32 (%struct.spi_nor*, i32)*, i32 (%struct.spi_nor*, i32)** %convert_addr2, align 8, !dbg !7802
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7803
  %8 = load i64, i64* %addr.addr, align 8, !dbg !7804
  %conv3 = trunc i64 %8 to i32, !dbg !7804
  %call = call i32 %6(%struct.spi_nor* %7, i32 %conv3) #9, !dbg !7800
  store i32 %call, i32* %retval, align 4, !dbg !7805
  br label %return, !dbg !7805

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7806
  ret i32 %9, !dbg !7806
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kzalloc(%struct.device* %dev, i64 %size, i32 %gfp) #0 !dbg !7807 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7810, metadata !DIExpression()), !dbg !7811
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7812, metadata !DIExpression()), !dbg !7813
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !7814, metadata !DIExpression()), !dbg !7815
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7816
  %1 = load i64, i64* %size.addr, align 8, !dbg !7817
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !7818
  %or = or i32 %2, 256, !dbg !7819
  %call = call noalias i8* @devm_kmalloc(%struct.device* %0, i64 %1, i32 %or) #9, !dbg !7820
  ret i8* %call, !dbg !7821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_info_init_params(%struct.spi_nor* %nor) #0 !dbg !7822 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %params = alloca %struct.spi_nor_flash_parameter*, align 8
  %map = alloca %struct.spi_nor_erase_map*, align 8
  %info = alloca %struct.flash_info*, align 8
  %np = alloca %struct.device_node*, align 8
  %i = alloca i8, align 1
  %erase_mask = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !7823, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.declare(metadata %struct.spi_nor_flash_parameter** %params, metadata !7825, metadata !DIExpression()), !dbg !7826
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7827
  %params1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 20, !dbg !7828
  %1 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params1, align 8, !dbg !7828
  store %struct.spi_nor_flash_parameter* %1, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7826
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_map** %map, metadata !7829, metadata !DIExpression()), !dbg !7830
  %2 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7831
  %erase_map = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %2, i32 0, i32 5, !dbg !7832
  store %struct.spi_nor_erase_map* %erase_map, %struct.spi_nor_erase_map** %map, align 8, !dbg !7830
  call void @llvm.dbg.declare(metadata %struct.flash_info** %info, metadata !7833, metadata !DIExpression()), !dbg !7834
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7835
  %info2 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 6, !dbg !7836
  %4 = load %struct.flash_info*, %struct.flash_info** %info2, align 8, !dbg !7836
  store %struct.flash_info* %4, %struct.flash_info** %info, align 8, !dbg !7834
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !7837, metadata !DIExpression()), !dbg !7838
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7839
  %call = call %struct.device_node* @spi_nor_get_flash_node(%struct.spi_nor* %5) #9, !dbg !7840
  store %struct.device_node* %call, %struct.device_node** %np, align 8, !dbg !7838
  call void @llvm.dbg.declare(metadata i8* %i, metadata !7841, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.declare(metadata i8* %erase_mask, metadata !7843, metadata !DIExpression()), !dbg !7844
  %6 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7845
  %quad_enable = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %6, i32 0, i32 6, !dbg !7846
  store i32 (%struct.spi_nor*)* @spi_nor_sr2_bit1_quad_enable, i32 (%struct.spi_nor*)** %quad_enable, align 8, !dbg !7847
  %7 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7848
  %set_4byte_addr_mode = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %7, i32 0, i32 7, !dbg !7849
  store i32 (%struct.spi_nor*, i1)* @spansion_set_4byte_addr_mode, i32 (%struct.spi_nor*, i1)** %set_4byte_addr_mode, align 8, !dbg !7850
  %8 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7851
  %setup = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %8, i32 0, i32 9, !dbg !7852
  store i32 (%struct.spi_nor*, %struct.spi_nor_hwcaps*)* @spi_nor_default_setup, i32 (%struct.spi_nor*, %struct.spi_nor_hwcaps*)** %setup, align 8, !dbg !7853
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !7854
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 18, !dbg !7855
  %10 = load i32, i32* %flags, align 4, !dbg !7856
  %or = or i32 %10, 512, !dbg !7856
  store i32 %or, i32* %flags, align 4, !dbg !7856
  %11 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7857
  %sector_size = getelementptr inbounds %struct.flash_info, %struct.flash_info* %11, i32 0, i32 3, !dbg !7858
  %12 = load i32, i32* %sector_size, align 8, !dbg !7858
  %conv = zext i32 %12 to i64, !dbg !7859
  %13 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7860
  %n_sectors = getelementptr inbounds %struct.flash_info, %struct.flash_info* %13, i32 0, i32 4, !dbg !7861
  %14 = load i16, i16* %n_sectors, align 4, !dbg !7861
  %conv3 = zext i16 %14 to i64, !dbg !7860
  %mul = mul i64 %conv, %conv3, !dbg !7862
  %15 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7863
  %size = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %15, i32 0, i32 0, !dbg !7864
  store i64 %mul, i64* %size, align 8, !dbg !7865
  %16 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7866
  %page_size = getelementptr inbounds %struct.flash_info, %struct.flash_info* %16, i32 0, i32 5, !dbg !7867
  %17 = load i16, i16* %page_size, align 2, !dbg !7867
  %conv4 = zext i16 %17 to i32, !dbg !7866
  %18 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7868
  %page_size5 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %18, i32 0, i32 1, !dbg !7869
  store i32 %conv4, i32* %page_size5, align 8, !dbg !7870
  %19 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7871
  %flags6 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %19, i32 0, i32 7, !dbg !7873
  %20 = load i32, i32* %flags6, align 4, !dbg !7873
  %conv7 = zext i32 %20 to i64, !dbg !7871
  %and = and i64 %conv7, 8, !dbg !7874
  %tobool = icmp ne i64 %and, 0, !dbg !7874
  br i1 %tobool, label %if.end19, label %if.then, !dbg !7875

if.then:                                          ; preds = %entry
  %21 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7876
  %hwcaps = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %21, i32 0, i32 2, !dbg !7878
  %mask = getelementptr inbounds %struct.spi_nor_hwcaps, %struct.spi_nor_hwcaps* %hwcaps, i32 0, i32 0, !dbg !7879
  %22 = load i32, i32* %mask, align 4, !dbg !7880
  %conv8 = zext i32 %22 to i64, !dbg !7880
  %or9 = or i64 %conv8, 2, !dbg !7880
  %conv10 = trunc i64 %or9 to i32, !dbg !7880
  store i32 %conv10, i32* %mask, align 4, !dbg !7880
  %23 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7881
  %tobool11 = icmp ne %struct.device_node* %23, null, !dbg !7881
  br i1 %tobool11, label %land.lhs.true, label %if.end, !dbg !7883

land.lhs.true:                                    ; preds = %if.then
  %24 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7884
  %call12 = call zeroext i1 @of_property_read_bool(%struct.device_node* %24, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !7885
  br i1 %call12, label %if.end, label %if.then13, !dbg !7886

if.then13:                                        ; preds = %land.lhs.true
  %25 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7887
  %hwcaps14 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %25, i32 0, i32 2, !dbg !7888
  %mask15 = getelementptr inbounds %struct.spi_nor_hwcaps, %struct.spi_nor_hwcaps* %hwcaps14, i32 0, i32 0, !dbg !7889
  %26 = load i32, i32* %mask15, align 4, !dbg !7890
  %conv16 = zext i32 %26 to i64, !dbg !7890
  %and17 = and i64 %conv16, -3, !dbg !7890
  %conv18 = trunc i64 %and17 to i32, !dbg !7890
  store i32 %conv18, i32* %mask15, align 4, !dbg !7890
  br label %if.end, !dbg !7887

if.end:                                           ; preds = %if.then13, %land.lhs.true, %if.then
  br label %if.end19, !dbg !7891

if.end19:                                         ; preds = %if.end, %entry
  %27 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7892
  %hwcaps20 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %27, i32 0, i32 2, !dbg !7893
  %mask21 = getelementptr inbounds %struct.spi_nor_hwcaps, %struct.spi_nor_hwcaps* %hwcaps20, i32 0, i32 0, !dbg !7894
  %28 = load i32, i32* %mask21, align 4, !dbg !7895
  %conv22 = zext i32 %28 to i64, !dbg !7895
  %or23 = or i64 %conv22, 1, !dbg !7895
  %conv24 = trunc i64 %or23 to i32, !dbg !7895
  store i32 %conv24, i32* %mask21, align 4, !dbg !7895
  %29 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7896
  %reads = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %29, i32 0, i32 3, !dbg !7897
  %arrayidx = getelementptr [15 x %struct.spi_nor_read_command], [15 x %struct.spi_nor_read_command]* %reads, i64 0, i64 0, !dbg !7896
  call void @spi_nor_set_read_settings(%struct.spi_nor_read_command* %arrayidx, i8 zeroext 0, i8 zeroext 0, i8 zeroext 3, i32 65793) #9, !dbg !7898
  %30 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7899
  %hwcaps25 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %30, i32 0, i32 2, !dbg !7901
  %mask26 = getelementptr inbounds %struct.spi_nor_hwcaps, %struct.spi_nor_hwcaps* %hwcaps25, i32 0, i32 0, !dbg !7902
  %31 = load i32, i32* %mask26, align 4, !dbg !7902
  %conv27 = zext i32 %31 to i64, !dbg !7899
  %and28 = and i64 %conv27, 2, !dbg !7903
  %tobool29 = icmp ne i64 %and28, 0, !dbg !7903
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !7904

if.then30:                                        ; preds = %if.end19
  %32 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7905
  %reads31 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %32, i32 0, i32 3, !dbg !7906
  %arrayidx32 = getelementptr [15 x %struct.spi_nor_read_command], [15 x %struct.spi_nor_read_command]* %reads31, i64 0, i64 1, !dbg !7905
  call void @spi_nor_set_read_settings(%struct.spi_nor_read_command* %arrayidx32, i8 zeroext 0, i8 zeroext 8, i8 zeroext 11, i32 65793) #9, !dbg !7907
  br label %if.end33, !dbg !7907

if.end33:                                         ; preds = %if.then30, %if.end19
  %33 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7908
  %flags34 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %33, i32 0, i32 7, !dbg !7910
  %34 = load i32, i32* %flags34, align 4, !dbg !7910
  %conv35 = zext i32 %34 to i64, !dbg !7908
  %and36 = and i64 %conv35, 32, !dbg !7911
  %tobool37 = icmp ne i64 %and36, 0, !dbg !7911
  br i1 %tobool37, label %if.then38, label %if.end46, !dbg !7912

if.then38:                                        ; preds = %if.end33
  %35 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7913
  %hwcaps39 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %35, i32 0, i32 2, !dbg !7915
  %mask40 = getelementptr inbounds %struct.spi_nor_hwcaps, %struct.spi_nor_hwcaps* %hwcaps39, i32 0, i32 0, !dbg !7916
  %36 = load i32, i32* %mask40, align 4, !dbg !7917
  %conv41 = zext i32 %36 to i64, !dbg !7917
  %or42 = or i64 %conv41, 8, !dbg !7917
  %conv43 = trunc i64 %or42 to i32, !dbg !7917
  store i32 %conv43, i32* %mask40, align 4, !dbg !7917
  %37 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7918
  %reads44 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %37, i32 0, i32 3, !dbg !7919
  %arrayidx45 = getelementptr [15 x %struct.spi_nor_read_command], [15 x %struct.spi_nor_read_command]* %reads44, i64 0, i64 3, !dbg !7918
  call void @spi_nor_set_read_settings(%struct.spi_nor_read_command* %arrayidx45, i8 zeroext 0, i8 zeroext 8, i8 zeroext 59, i32 65794) #9, !dbg !7920
  br label %if.end46, !dbg !7921

if.end46:                                         ; preds = %if.then38, %if.end33
  %38 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7922
  %flags47 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %38, i32 0, i32 7, !dbg !7924
  %39 = load i32, i32* %flags47, align 4, !dbg !7924
  %conv48 = zext i32 %39 to i64, !dbg !7922
  %and49 = and i64 %conv48, 64, !dbg !7925
  %tobool50 = icmp ne i64 %and49, 0, !dbg !7925
  br i1 %tobool50, label %if.then51, label %if.end59, !dbg !7926

if.then51:                                        ; preds = %if.end46
  %40 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7927
  %hwcaps52 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %40, i32 0, i32 2, !dbg !7929
  %mask53 = getelementptr inbounds %struct.spi_nor_hwcaps, %struct.spi_nor_hwcaps* %hwcaps52, i32 0, i32 0, !dbg !7930
  %41 = load i32, i32* %mask53, align 4, !dbg !7931
  %conv54 = zext i32 %41 to i64, !dbg !7931
  %or55 = or i64 %conv54, 128, !dbg !7931
  %conv56 = trunc i64 %or55 to i32, !dbg !7931
  store i32 %conv56, i32* %mask53, align 4, !dbg !7931
  %42 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7932
  %reads57 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %42, i32 0, i32 3, !dbg !7933
  %arrayidx58 = getelementptr [15 x %struct.spi_nor_read_command], [15 x %struct.spi_nor_read_command]* %reads57, i64 0, i64 7, !dbg !7932
  call void @spi_nor_set_read_settings(%struct.spi_nor_read_command* %arrayidx58, i8 zeroext 0, i8 zeroext 8, i8 zeroext 107, i32 65796) #9, !dbg !7934
  br label %if.end59, !dbg !7935

if.end59:                                         ; preds = %if.then51, %if.end46
  %43 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7936
  %flags60 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %43, i32 0, i32 7, !dbg !7938
  %44 = load i32, i32* %flags60, align 4, !dbg !7938
  %conv61 = zext i32 %44 to i64, !dbg !7936
  %and62 = and i64 %conv61, 32768, !dbg !7939
  %tobool63 = icmp ne i64 %and62, 0, !dbg !7939
  br i1 %tobool63, label %if.then64, label %if.end72, !dbg !7940

if.then64:                                        ; preds = %if.end59
  %45 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7941
  %hwcaps65 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %45, i32 0, i32 2, !dbg !7943
  %mask66 = getelementptr inbounds %struct.spi_nor_hwcaps, %struct.spi_nor_hwcaps* %hwcaps65, i32 0, i32 0, !dbg !7944
  %46 = load i32, i32* %mask66, align 4, !dbg !7945
  %conv67 = zext i32 %46 to i64, !dbg !7945
  %or68 = or i64 %conv67, 2048, !dbg !7945
  %conv69 = trunc i64 %or68 to i32, !dbg !7945
  store i32 %conv69, i32* %mask66, align 4, !dbg !7945
  %47 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7946
  %reads70 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %47, i32 0, i32 3, !dbg !7947
  %arrayidx71 = getelementptr [15 x %struct.spi_nor_read_command], [15 x %struct.spi_nor_read_command]* %reads70, i64 0, i64 11, !dbg !7946
  call void @spi_nor_set_read_settings(%struct.spi_nor_read_command* %arrayidx71, i8 zeroext 0, i8 zeroext 8, i8 zeroext -117, i32 65800) #9, !dbg !7948
  br label %if.end72, !dbg !7949

if.end72:                                         ; preds = %if.then64, %if.end59
  %48 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7950
  %hwcaps73 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %48, i32 0, i32 2, !dbg !7951
  %mask74 = getelementptr inbounds %struct.spi_nor_hwcaps, %struct.spi_nor_hwcaps* %hwcaps73, i32 0, i32 0, !dbg !7952
  %49 = load i32, i32* %mask74, align 4, !dbg !7953
  %conv75 = zext i32 %49 to i64, !dbg !7953
  %or76 = or i64 %conv75, 65536, !dbg !7953
  %conv77 = trunc i64 %or76 to i32, !dbg !7953
  store i32 %conv77, i32* %mask74, align 4, !dbg !7953
  %50 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7954
  %page_programs = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %50, i32 0, i32 4, !dbg !7955
  %arrayidx78 = getelementptr [7 x %struct.spi_nor_pp_command], [7 x %struct.spi_nor_pp_command]* %page_programs, i64 0, i64 0, !dbg !7954
  call void @spi_nor_set_pp_settings(%struct.spi_nor_pp_command* %arrayidx78, i8 zeroext 2, i32 65793) #9, !dbg !7956
  store i8 0, i8* %erase_mask, align 1, !dbg !7957
  store i8 0, i8* %i, align 1, !dbg !7958
  %51 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7959
  %flags79 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %51, i32 0, i32 7, !dbg !7961
  %52 = load i32, i32* %flags79, align 4, !dbg !7961
  %conv80 = zext i32 %52 to i64, !dbg !7959
  %and81 = and i64 %conv80, 16, !dbg !7962
  %tobool82 = icmp ne i64 %and81, 0, !dbg !7962
  br i1 %tobool82, label %if.then83, label %if.else, !dbg !7963

if.then83:                                        ; preds = %if.end72
  %53 = load i8, i8* %i, align 1, !dbg !7964
  %conv84 = zext i8 %53 to i32, !dbg !7964
  %sh_prom = zext i32 %conv84 to i64, !dbg !7964
  %shl = shl i64 1, %sh_prom, !dbg !7964
  %54 = load i8, i8* %erase_mask, align 1, !dbg !7966
  %conv85 = zext i8 %54 to i64, !dbg !7966
  %or86 = or i64 %conv85, %shl, !dbg !7966
  %conv87 = trunc i64 %or86 to i8, !dbg !7966
  store i8 %conv87, i8* %erase_mask, align 1, !dbg !7966
  %55 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map, align 8, !dbg !7967
  %erase_type = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %55, i32 0, i32 2, !dbg !7968
  %56 = load i8, i8* %i, align 1, !dbg !7969
  %idxprom = zext i8 %56 to i64, !dbg !7967
  %arrayidx88 = getelementptr [4 x %struct.spi_nor_erase_type], [4 x %struct.spi_nor_erase_type]* %erase_type, i64 0, i64 %idxprom, !dbg !7967
  call void @spi_nor_set_erase_type(%struct.spi_nor_erase_type* %arrayidx88, i32 4096, i8 zeroext -41) #9, !dbg !7970
  %57 = load i8, i8* %i, align 1, !dbg !7971
  %inc = add i8 %57, 1, !dbg !7971
  store i8 %inc, i8* %i, align 1, !dbg !7971
  br label %if.end105, !dbg !7972

if.else:                                          ; preds = %if.end72
  %58 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7973
  %flags89 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %58, i32 0, i32 7, !dbg !7975
  %59 = load i32, i32* %flags89, align 4, !dbg !7975
  %conv90 = zext i32 %59 to i64, !dbg !7973
  %and91 = and i64 %conv90, 1, !dbg !7976
  %tobool92 = icmp ne i64 %and91, 0, !dbg !7976
  br i1 %tobool92, label %if.then93, label %if.end104, !dbg !7977

if.then93:                                        ; preds = %if.else
  %60 = load i8, i8* %i, align 1, !dbg !7978
  %conv94 = zext i8 %60 to i32, !dbg !7978
  %sh_prom95 = zext i32 %conv94 to i64, !dbg !7978
  %shl96 = shl i64 1, %sh_prom95, !dbg !7978
  %61 = load i8, i8* %erase_mask, align 1, !dbg !7980
  %conv97 = zext i8 %61 to i64, !dbg !7980
  %or98 = or i64 %conv97, %shl96, !dbg !7980
  %conv99 = trunc i64 %or98 to i8, !dbg !7980
  store i8 %conv99, i8* %erase_mask, align 1, !dbg !7980
  %62 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map, align 8, !dbg !7981
  %erase_type100 = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %62, i32 0, i32 2, !dbg !7982
  %63 = load i8, i8* %i, align 1, !dbg !7983
  %idxprom101 = zext i8 %63 to i64, !dbg !7981
  %arrayidx102 = getelementptr [4 x %struct.spi_nor_erase_type], [4 x %struct.spi_nor_erase_type]* %erase_type100, i64 0, i64 %idxprom101, !dbg !7981
  call void @spi_nor_set_erase_type(%struct.spi_nor_erase_type* %arrayidx102, i32 4096, i8 zeroext 32) #9, !dbg !7984
  %64 = load i8, i8* %i, align 1, !dbg !7985
  %inc103 = add i8 %64, 1, !dbg !7985
  store i8 %inc103, i8* %i, align 1, !dbg !7985
  br label %if.end104, !dbg !7986

if.end104:                                        ; preds = %if.then93, %if.else
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then83
  %65 = load i8, i8* %i, align 1, !dbg !7987
  %conv106 = zext i8 %65 to i32, !dbg !7987
  %sh_prom107 = zext i32 %conv106 to i64, !dbg !7987
  %shl108 = shl i64 1, %sh_prom107, !dbg !7987
  %66 = load i8, i8* %erase_mask, align 1, !dbg !7988
  %conv109 = zext i8 %66 to i64, !dbg !7988
  %or110 = or i64 %conv109, %shl108, !dbg !7988
  %conv111 = trunc i64 %or110 to i8, !dbg !7988
  store i8 %conv111, i8* %erase_mask, align 1, !dbg !7988
  %67 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map, align 8, !dbg !7989
  %erase_type112 = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %67, i32 0, i32 2, !dbg !7990
  %68 = load i8, i8* %i, align 1, !dbg !7991
  %idxprom113 = zext i8 %68 to i64, !dbg !7989
  %arrayidx114 = getelementptr [4 x %struct.spi_nor_erase_type], [4 x %struct.spi_nor_erase_type]* %erase_type112, i64 0, i64 %idxprom113, !dbg !7989
  %69 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !7992
  %sector_size115 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %69, i32 0, i32 3, !dbg !7993
  %70 = load i32, i32* %sector_size115, align 8, !dbg !7993
  call void @spi_nor_set_erase_type(%struct.spi_nor_erase_type* %arrayidx114, i32 %70, i8 zeroext -40) #9, !dbg !7994
  %71 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map, align 8, !dbg !7995
  %72 = load i8, i8* %erase_mask, align 1, !dbg !7996
  %73 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !7997
  %size116 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %73, i32 0, i32 0, !dbg !7998
  %74 = load i64, i64* %size116, align 8, !dbg !7998
  call void @spi_nor_init_uniform_erase_map(%struct.spi_nor_erase_map* %71, i8 zeroext %72, i64 %74) #9, !dbg !7999
  ret void, !dbg !8000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_manufacturer_init_params(%struct.spi_nor* %nor) #0 !dbg !8001 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8002, metadata !DIExpression()), !dbg !8003
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8004
  %manufacturer = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 7, !dbg !8006
  %1 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer, align 8, !dbg !8006
  %tobool = icmp ne %struct.spi_nor_manufacturer* %1, null, !dbg !8004
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8007

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8008
  %manufacturer1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 7, !dbg !8009
  %3 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer1, align 8, !dbg !8009
  %fixups = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %3, i32 0, i32 3, !dbg !8010
  %4 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups, align 8, !dbg !8010
  %tobool2 = icmp ne %struct.spi_nor_fixups* %4, null, !dbg !8008
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !8011

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8012
  %manufacturer4 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 7, !dbg !8013
  %6 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer4, align 8, !dbg !8013
  %fixups5 = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %6, i32 0, i32 3, !dbg !8014
  %7 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups5, align 8, !dbg !8014
  %default_init = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %7, i32 0, i32 0, !dbg !8015
  %8 = load void (%struct.spi_nor*)*, void (%struct.spi_nor*)** %default_init, align 8, !dbg !8015
  %tobool6 = icmp ne void (%struct.spi_nor*)* %8, null, !dbg !8012
  br i1 %tobool6, label %if.then, label %if.end, !dbg !8016

if.then:                                          ; preds = %land.lhs.true3
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8017
  %manufacturer7 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 7, !dbg !8018
  %10 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer7, align 8, !dbg !8018
  %fixups8 = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %10, i32 0, i32 3, !dbg !8019
  %11 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups8, align 8, !dbg !8019
  %default_init9 = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %11, i32 0, i32 0, !dbg !8020
  %12 = load void (%struct.spi_nor*)*, void (%struct.spi_nor*)** %default_init9, align 8, !dbg !8020
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8021
  call void %12(%struct.spi_nor* %13) #9, !dbg !8017
  br label %if.end, !dbg !8017

if.end:                                           ; preds = %if.then, %land.lhs.true3, %land.lhs.true, %entry
  %14 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8022
  %info = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %14, i32 0, i32 6, !dbg !8024
  %15 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !8024
  %fixups10 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %15, i32 0, i32 8, !dbg !8025
  %16 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups10, align 8, !dbg !8025
  %tobool11 = icmp ne %struct.spi_nor_fixups* %16, null, !dbg !8022
  br i1 %tobool11, label %land.lhs.true12, label %if.end21, !dbg !8026

land.lhs.true12:                                  ; preds = %if.end
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8027
  %info13 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %17, i32 0, i32 6, !dbg !8028
  %18 = load %struct.flash_info*, %struct.flash_info** %info13, align 8, !dbg !8028
  %fixups14 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %18, i32 0, i32 8, !dbg !8029
  %19 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups14, align 8, !dbg !8029
  %default_init15 = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %19, i32 0, i32 0, !dbg !8030
  %20 = load void (%struct.spi_nor*)*, void (%struct.spi_nor*)** %default_init15, align 8, !dbg !8030
  %tobool16 = icmp ne void (%struct.spi_nor*)* %20, null, !dbg !8027
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !8031

if.then17:                                        ; preds = %land.lhs.true12
  %21 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8032
  %info18 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %21, i32 0, i32 6, !dbg !8033
  %22 = load %struct.flash_info*, %struct.flash_info** %info18, align 8, !dbg !8033
  %fixups19 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %22, i32 0, i32 8, !dbg !8034
  %23 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups19, align 8, !dbg !8034
  %default_init20 = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %23, i32 0, i32 0, !dbg !8035
  %24 = load void (%struct.spi_nor*)*, void (%struct.spi_nor*)** %default_init20, align 8, !dbg !8035
  %25 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8036
  call void %24(%struct.spi_nor* %25) #9, !dbg !8032
  br label %if.end21, !dbg !8032

if.end21:                                         ; preds = %if.then17, %land.lhs.true12, %if.end
  ret void, !dbg !8037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_sfdp_init_params(%struct.spi_nor* %nor) #0 !dbg !8038 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sfdp_params = alloca %struct.spi_nor_flash_parameter, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8039, metadata !DIExpression()), !dbg !8040
  call void @llvm.dbg.declare(metadata %struct.spi_nor_flash_parameter* %sfdp_params, metadata !8041, metadata !DIExpression()), !dbg !8042
  %0 = bitcast %struct.spi_nor_flash_parameter* %sfdp_params to i8*, !dbg !8043
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8044
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 20, !dbg !8045
  %2 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !8045
  %3 = bitcast %struct.spi_nor_flash_parameter* %2 to i8*, !dbg !8043
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %3, i64 328, i1 false), !dbg !8043
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8046
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8048
  %params1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 20, !dbg !8049
  %6 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params1, align 8, !dbg !8049
  %call = call i32 @spi_nor_parse_sfdp(%struct.spi_nor* %4, %struct.spi_nor_flash_parameter* %6) #9, !dbg !8050
  %tobool = icmp ne i32 %call, 0, !dbg !8050
  br i1 %tobool, label %if.then, label %if.end, !dbg !8051

if.then:                                          ; preds = %entry
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8052
  %params2 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 20, !dbg !8054
  %8 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params2, align 8, !dbg !8054
  %9 = bitcast %struct.spi_nor_flash_parameter* %8 to i8*, !dbg !8055
  %10 = bitcast %struct.spi_nor_flash_parameter* %sfdp_params to i8*, !dbg !8055
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 328, i1 false), !dbg !8055
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8056
  %addr_width = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %11, i32 0, i32 9, !dbg !8057
  store i8 0, i8* %addr_width, align 4, !dbg !8058
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8059
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %12, i32 0, i32 18, !dbg !8060
  %13 = load i32, i32* %flags, align 4, !dbg !8061
  %and = and i32 %13, -65, !dbg !8061
  store i32 %and, i32* %flags, align 4, !dbg !8061
  br label %if.end, !dbg !8062

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8063
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_post_sfdp_fixups(%struct.spi_nor* %nor) #0 !dbg !8064 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8065, metadata !DIExpression()), !dbg !8066
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8067
  %manufacturer = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 7, !dbg !8069
  %1 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer, align 8, !dbg !8069
  %tobool = icmp ne %struct.spi_nor_manufacturer* %1, null, !dbg !8067
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8070

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8071
  %manufacturer1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 7, !dbg !8072
  %3 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer1, align 8, !dbg !8072
  %fixups = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %3, i32 0, i32 3, !dbg !8073
  %4 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups, align 8, !dbg !8073
  %tobool2 = icmp ne %struct.spi_nor_fixups* %4, null, !dbg !8071
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !8074

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8075
  %manufacturer4 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 7, !dbg !8076
  %6 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer4, align 8, !dbg !8076
  %fixups5 = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %6, i32 0, i32 3, !dbg !8077
  %7 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups5, align 8, !dbg !8077
  %post_sfdp = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %7, i32 0, i32 2, !dbg !8078
  %8 = load void (%struct.spi_nor*)*, void (%struct.spi_nor*)** %post_sfdp, align 8, !dbg !8078
  %tobool6 = icmp ne void (%struct.spi_nor*)* %8, null, !dbg !8075
  br i1 %tobool6, label %if.then, label %if.end, !dbg !8079

if.then:                                          ; preds = %land.lhs.true3
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8080
  %manufacturer7 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 7, !dbg !8081
  %10 = load %struct.spi_nor_manufacturer*, %struct.spi_nor_manufacturer** %manufacturer7, align 8, !dbg !8081
  %fixups8 = getelementptr inbounds %struct.spi_nor_manufacturer, %struct.spi_nor_manufacturer* %10, i32 0, i32 3, !dbg !8082
  %11 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups8, align 8, !dbg !8082
  %post_sfdp9 = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %11, i32 0, i32 2, !dbg !8083
  %12 = load void (%struct.spi_nor*)*, void (%struct.spi_nor*)** %post_sfdp9, align 8, !dbg !8083
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8084
  call void %12(%struct.spi_nor* %13) #9, !dbg !8080
  br label %if.end, !dbg !8080

if.end:                                           ; preds = %if.then, %land.lhs.true3, %land.lhs.true, %entry
  %14 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8085
  %info = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %14, i32 0, i32 6, !dbg !8087
  %15 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !8087
  %fixups10 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %15, i32 0, i32 8, !dbg !8088
  %16 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups10, align 8, !dbg !8088
  %tobool11 = icmp ne %struct.spi_nor_fixups* %16, null, !dbg !8085
  br i1 %tobool11, label %land.lhs.true12, label %if.end21, !dbg !8089

land.lhs.true12:                                  ; preds = %if.end
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8090
  %info13 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %17, i32 0, i32 6, !dbg !8091
  %18 = load %struct.flash_info*, %struct.flash_info** %info13, align 8, !dbg !8091
  %fixups14 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %18, i32 0, i32 8, !dbg !8092
  %19 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups14, align 8, !dbg !8092
  %post_sfdp15 = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %19, i32 0, i32 2, !dbg !8093
  %20 = load void (%struct.spi_nor*)*, void (%struct.spi_nor*)** %post_sfdp15, align 8, !dbg !8093
  %tobool16 = icmp ne void (%struct.spi_nor*)* %20, null, !dbg !8090
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !8094

if.then17:                                        ; preds = %land.lhs.true12
  %21 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8095
  %info18 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %21, i32 0, i32 6, !dbg !8096
  %22 = load %struct.flash_info*, %struct.flash_info** %info18, align 8, !dbg !8096
  %fixups19 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %22, i32 0, i32 8, !dbg !8097
  %23 = load %struct.spi_nor_fixups*, %struct.spi_nor_fixups** %fixups19, align 8, !dbg !8097
  %post_sfdp20 = getelementptr inbounds %struct.spi_nor_fixups, %struct.spi_nor_fixups* %23, i32 0, i32 2, !dbg !8098
  %24 = load void (%struct.spi_nor*)*, void (%struct.spi_nor*)** %post_sfdp20, align 8, !dbg !8098
  %25 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8099
  call void %24(%struct.spi_nor* %25) #9, !dbg !8095
  br label %if.end21, !dbg !8095

if.end21:                                         ; preds = %if.then17, %land.lhs.true12, %if.end
  ret void, !dbg !8100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_late_init_params(%struct.spi_nor* %nor) #0 !dbg !8101 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8102, metadata !DIExpression()), !dbg !8103
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8104
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 18, !dbg !8106
  %1 = load i32, i32* %flags, align 4, !dbg !8106
  %and = and i32 %1, 256, !dbg !8107
  %tobool = icmp ne i32 %and, 0, !dbg !8107
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8108

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8109
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 20, !dbg !8110
  %3 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !8110
  %locking_ops = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %3, i32 0, i32 10, !dbg !8111
  %4 = load %struct.spi_nor_locking_ops*, %struct.spi_nor_locking_ops** %locking_ops, align 8, !dbg !8111
  %tobool1 = icmp ne %struct.spi_nor_locking_ops* %4, null, !dbg !8109
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8112

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8113
  %params2 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 20, !dbg !8114
  %6 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params2, align 8, !dbg !8114
  %locking_ops3 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %6, i32 0, i32 10, !dbg !8115
  store %struct.spi_nor_locking_ops* @spi_nor_sr_locking_ops, %struct.spi_nor_locking_ops** %locking_ops3, align 8, !dbg !8116
  br label %if.end, !dbg !8113

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !8117
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spansion_set_4byte_addr_mode(%struct.spi_nor* %nor, i1 zeroext %enable) #0 !dbg !8118 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %enable.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8119, metadata !DIExpression()), !dbg !8120
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !8121, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8123, metadata !DIExpression()), !dbg !8124
  %0 = load i8, i8* %enable.addr, align 1, !dbg !8125
  %tobool = trunc i8 %0 to i1, !dbg !8125
  %conv = zext i1 %tobool to i32, !dbg !8125
  %shl = shl i32 %conv, 7, !dbg !8126
  %conv1 = trunc i32 %shl to i8, !dbg !8125
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8127
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 4, !dbg !8128
  %2 = load i8*, i8** %bouncebuf, align 8, !dbg !8128
  %arrayidx = getelementptr i8, i8* %2, i64 0, !dbg !8127
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !8129
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8130
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 3, !dbg !8132
  %4 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !8132
  %tobool2 = icmp ne %struct.spi_mem* %4, null, !dbg !8130
  br i1 %tobool2, label %if.then, label %if.else, !dbg !8133

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !8134, metadata !DIExpression()), !dbg !8136
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !8137
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !8137
  store i8 1, i8* %nbytes, align 8, !dbg !8137
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !8137
  store i8 1, i8* %buswidth, align 1, !dbg !8137
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !8137
  %bf.load = load i8, i8* %dtr, align 2, !dbg !8137
  %bf.clear = and i8 %bf.load, -2, !dbg !8137
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !8137
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !8137
  store i16 23, i16* %opcode, align 4, !dbg !8137
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !8137
  %nbytes3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !8137
  store i8 0, i8* %nbytes3, align 8, !dbg !8137
  %buswidth4 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !8137
  store i8 0, i8* %buswidth4, align 1, !dbg !8137
  %dtr5 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !8137
  %bf.load6 = load i8, i8* %dtr5, align 2, !dbg !8137
  %bf.clear7 = and i8 %bf.load6, -2, !dbg !8137
  store i8 %bf.clear7, i8* %dtr5, align 2, !dbg !8137
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !8137
  store i64 0, i64* %val, align 8, !dbg !8137
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !8137
  %nbytes8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !8137
  store i8 0, i8* %nbytes8, align 8, !dbg !8137
  %buswidth9 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !8137
  store i8 0, i8* %buswidth9, align 1, !dbg !8137
  %dtr10 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !8137
  %bf.load11 = load i8, i8* %dtr10, align 2, !dbg !8137
  %bf.clear12 = and i8 %bf.load11, -2, !dbg !8137
  store i8 %bf.clear12, i8* %dtr10, align 2, !dbg !8137
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !8137
  %buswidth13 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !8137
  store i8 1, i8* %buswidth13, align 8, !dbg !8137
  %dtr14 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !8137
  %bf.load15 = load i8, i8* %dtr14, align 1, !dbg !8137
  %bf.clear16 = and i8 %bf.load15, -2, !dbg !8137
  store i8 %bf.clear16, i8* %dtr14, align 1, !dbg !8137
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !8137
  store i32 2, i32* %dir, align 4, !dbg !8137
  %nbytes17 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !8137
  store i32 1, i32* %nbytes17, align 8, !dbg !8137
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !8137
  %out = bitcast %union.anon.73* %buf to i8**, !dbg !8137
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8137
  %bouncebuf18 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 4, !dbg !8137
  %6 = load i8*, i8** %bouncebuf18, align 8, !dbg !8137
  store i8* %6, i8** %out, align 8, !dbg !8137
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8138
  %spimem19 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 3, !dbg !8139
  %8 = load %struct.spi_mem*, %struct.spi_mem** %spimem19, align 8, !dbg !8139
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %8, %struct.spi_mem_op* %op) #9, !dbg !8140
  store i32 %call, i32* %ret, align 4, !dbg !8141
  br label %if.end, !dbg !8142

if.else:                                          ; preds = %entry
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8143
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 19, !dbg !8145
  %10 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !8145
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %10, i32 0, i32 3, !dbg !8146
  %11 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !8146
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8147
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8148
  %bouncebuf20 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %13, i32 0, i32 4, !dbg !8149
  %14 = load i8*, i8** %bouncebuf20, align 8, !dbg !8149
  %call21 = call i32 %11(%struct.spi_nor* %12, i8 zeroext 23, i8* %14, i64 1) #9, !dbg !8143
  store i32 %call21, i32* %ret, align 4, !dbg !8150
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load i32, i32* %ret, align 4, !dbg !8151
  %tobool22 = icmp ne i32 %15, 0, !dbg !8151
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !8153

if.then23:                                        ; preds = %if.end
  br label %if.end24, !dbg !8154

if.end24:                                         ; preds = %if.then23, %if.end
  %16 = load i32, i32* %ret, align 4, !dbg !8155
  ret i32 %16, !dbg !8156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_default_setup(%struct.spi_nor* %nor, %struct.spi_nor_hwcaps* %hwcaps) #0 !dbg !8157 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %hwcaps.addr = alloca %struct.spi_nor_hwcaps*, align 8
  %params = alloca %struct.spi_nor_flash_parameter*, align 8
  %ignored_mask = alloca i32, align 4
  %shared_mask = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8158, metadata !DIExpression()), !dbg !8159
  store %struct.spi_nor_hwcaps* %hwcaps, %struct.spi_nor_hwcaps** %hwcaps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_hwcaps** %hwcaps.addr, metadata !8160, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.declare(metadata %struct.spi_nor_flash_parameter** %params, metadata !8162, metadata !DIExpression()), !dbg !8163
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8164
  %params1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 20, !dbg !8165
  %1 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params1, align 8, !dbg !8165
  store %struct.spi_nor_flash_parameter* %1, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !8163
  call void @llvm.dbg.declare(metadata i32* %ignored_mask, metadata !8166, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.declare(metadata i32* %shared_mask, metadata !8168, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8170, metadata !DIExpression()), !dbg !8171
  %2 = load %struct.spi_nor_hwcaps*, %struct.spi_nor_hwcaps** %hwcaps.addr, align 8, !dbg !8172
  %mask = getelementptr inbounds %struct.spi_nor_hwcaps, %struct.spi_nor_hwcaps* %2, i32 0, i32 0, !dbg !8173
  %3 = load i32, i32* %mask, align 4, !dbg !8173
  %4 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !8174
  %hwcaps2 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %4, i32 0, i32 2, !dbg !8175
  %mask3 = getelementptr inbounds %struct.spi_nor_hwcaps, %struct.spi_nor_hwcaps* %hwcaps2, i32 0, i32 0, !dbg !8176
  %5 = load i32, i32* %mask3, align 4, !dbg !8176
  %and = and i32 %3, %5, !dbg !8177
  store i32 %and, i32* %shared_mask, align 4, !dbg !8178
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8179
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 3, !dbg !8181
  %7 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !8181
  %tobool = icmp ne %struct.spi_mem* %7, null, !dbg !8179
  br i1 %tobool, label %if.then, label %if.else, !dbg !8182

if.then:                                          ; preds = %entry
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8183
  call void @spi_nor_spimem_adjust_hwcaps(%struct.spi_nor* %8, i32* %shared_mask) #9, !dbg !8185
  br label %if.end8, !dbg !8186

if.else:                                          ; preds = %entry
  store i32 4727328, i32* %ignored_mask, align 4, !dbg !8187
  %9 = load i32, i32* %shared_mask, align 4, !dbg !8189
  %10 = load i32, i32* %ignored_mask, align 4, !dbg !8191
  %and4 = and i32 %9, %10, !dbg !8192
  %tobool5 = icmp ne i32 %and4, 0, !dbg !8192
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !8193

if.then6:                                         ; preds = %if.else
  %11 = load i32, i32* %ignored_mask, align 4, !dbg !8194
  %neg = xor i32 %11, -1, !dbg !8196
  %12 = load i32, i32* %shared_mask, align 4, !dbg !8197
  %and7 = and i32 %12, %neg, !dbg !8197
  store i32 %and7, i32* %shared_mask, align 4, !dbg !8197
  br label %if.end, !dbg !8198

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8199
  %14 = load i32, i32* %shared_mask, align 4, !dbg !8200
  %call = call i32 @spi_nor_select_read(%struct.spi_nor* %13, i32 %14) #9, !dbg !8201
  store i32 %call, i32* %err, align 4, !dbg !8202
  %15 = load i32, i32* %err, align 4, !dbg !8203
  %tobool9 = icmp ne i32 %15, 0, !dbg !8203
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !8205

if.then10:                                        ; preds = %if.end8
  %16 = load i32, i32* %err, align 4, !dbg !8206
  store i32 %16, i32* %retval, align 4, !dbg !8208
  br label %return, !dbg !8208

if.end11:                                         ; preds = %if.end8
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8209
  %18 = load i32, i32* %shared_mask, align 4, !dbg !8210
  %call12 = call i32 @spi_nor_select_pp(%struct.spi_nor* %17, i32 %18) #9, !dbg !8211
  store i32 %call12, i32* %err, align 4, !dbg !8212
  %19 = load i32, i32* %err, align 4, !dbg !8213
  %tobool13 = icmp ne i32 %19, 0, !dbg !8213
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !8215

if.then14:                                        ; preds = %if.end11
  %20 = load i32, i32* %err, align 4, !dbg !8216
  store i32 %20, i32* %retval, align 4, !dbg !8218
  br label %return, !dbg !8218

if.end15:                                         ; preds = %if.end11
  %21 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8219
  %call16 = call i32 @spi_nor_select_erase(%struct.spi_nor* %21) #9, !dbg !8220
  store i32 %call16, i32* %err, align 4, !dbg !8221
  %22 = load i32, i32* %err, align 4, !dbg !8222
  %tobool17 = icmp ne i32 %22, 0, !dbg !8222
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !8224

if.then18:                                        ; preds = %if.end15
  %23 = load i32, i32* %err, align 4, !dbg !8225
  store i32 %23, i32* %retval, align 4, !dbg !8227
  br label %return, !dbg !8227

if.end19:                                         ; preds = %if.end15
  store i32 0, i32* %retval, align 4, !dbg !8228
  br label %return, !dbg !8228

return:                                           ; preds = %if.end19, %if.then18, %if.then14, %if.then10
  %24 = load i32, i32* %retval, align 4, !dbg !8229
  ret i32 %24, !dbg !8229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_set_read_settings(%struct.spi_nor_read_command* %read, i8 zeroext %num_mode_clocks, i8 zeroext %num_wait_states, i8 zeroext %opcode, i32 %proto) #0 !dbg !8230 {
entry:
  %read.addr = alloca %struct.spi_nor_read_command*, align 8
  %num_mode_clocks.addr = alloca i8, align 1
  %num_wait_states.addr = alloca i8, align 1
  %opcode.addr = alloca i8, align 1
  %proto.addr = alloca i32, align 4
  store %struct.spi_nor_read_command* %read, %struct.spi_nor_read_command** %read.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_read_command** %read.addr, metadata !8234, metadata !DIExpression()), !dbg !8235
  store i8 %num_mode_clocks, i8* %num_mode_clocks.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %num_mode_clocks.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  store i8 %num_wait_states, i8* %num_wait_states.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %num_wait_states.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  store i8 %opcode, i8* %opcode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode.addr, metadata !8240, metadata !DIExpression()), !dbg !8241
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !8242, metadata !DIExpression()), !dbg !8243
  %0 = load i8, i8* %num_mode_clocks.addr, align 1, !dbg !8244
  %1 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read.addr, align 8, !dbg !8245
  %num_mode_clocks1 = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %1, i32 0, i32 0, !dbg !8246
  store i8 %0, i8* %num_mode_clocks1, align 4, !dbg !8247
  %2 = load i8, i8* %num_wait_states.addr, align 1, !dbg !8248
  %3 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read.addr, align 8, !dbg !8249
  %num_wait_states2 = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %3, i32 0, i32 1, !dbg !8250
  store i8 %2, i8* %num_wait_states2, align 1, !dbg !8251
  %4 = load i8, i8* %opcode.addr, align 1, !dbg !8252
  %5 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read.addr, align 8, !dbg !8253
  %opcode3 = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %5, i32 0, i32 2, !dbg !8254
  store i8 %4, i8* %opcode3, align 2, !dbg !8255
  %6 = load i32, i32* %proto.addr, align 4, !dbg !8256
  %7 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read.addr, align 8, !dbg !8257
  %proto4 = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %7, i32 0, i32 3, !dbg !8258
  store i32 %6, i32* %proto4, align 4, !dbg !8259
  ret void, !dbg !8260
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_spimem_adjust_hwcaps(%struct.spi_nor* %nor, i32* %hwcaps) #0 !dbg !8261 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %hwcaps.addr = alloca i32*, align 8
  %params = alloca %struct.spi_nor_flash_parameter*, align 8
  %cap = alloca i32, align 4
  %rdidx = alloca i32, align 4
  %ppidx = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8264, metadata !DIExpression()), !dbg !8265
  store i32* %hwcaps, i32** %hwcaps.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %hwcaps.addr, metadata !8266, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.declare(metadata %struct.spi_nor_flash_parameter** %params, metadata !8268, metadata !DIExpression()), !dbg !8269
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8270
  %params1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 20, !dbg !8271
  %1 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params1, align 8, !dbg !8271
  store %struct.spi_nor_flash_parameter* %1, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !8269
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !8272, metadata !DIExpression()), !dbg !8273
  %2 = load i32*, i32** %hwcaps.addr, align 8, !dbg !8274
  %3 = load i32, i32* %2, align 4, !dbg !8275
  %conv = zext i32 %3 to i64, !dbg !8275
  %and = and i64 %conv, -17477, !dbg !8275
  %conv2 = trunc i64 %and to i32, !dbg !8275
  store i32 %conv2, i32* %2, align 4, !dbg !8275
  %4 = load i32*, i32** %hwcaps.addr, align 8, !dbg !8276
  %5 = load i32, i32* %4, align 4, !dbg !8277
  %conv3 = zext i32 %5 to i64, !dbg !8277
  %and4 = and i64 %conv3, -4727329, !dbg !8277
  %conv5 = trunc i64 %and4 to i32, !dbg !8277
  store i32 %conv5, i32* %4, align 4, !dbg !8277
  store i32 0, i32* %cap, align 4, !dbg !8278
  br label %for.cond, !dbg !8280

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %cap, align 4, !dbg !8281
  %conv6 = zext i32 %6 to i64, !dbg !8281
  %cmp = icmp ult i64 %conv6, 32, !dbg !8283
  br i1 %cmp, label %for.body, label %for.end, !dbg !8284

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %rdidx, metadata !8285, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.declare(metadata i32* %ppidx, metadata !8288, metadata !DIExpression()), !dbg !8289
  %7 = load i32*, i32** %hwcaps.addr, align 8, !dbg !8290
  %8 = load i32, i32* %7, align 4, !dbg !8292
  %conv8 = zext i32 %8 to i64, !dbg !8292
  %9 = load i32, i32* %cap, align 4, !dbg !8293
  %sh_prom = zext i32 %9 to i64, !dbg !8293
  %shl = shl i64 1, %sh_prom, !dbg !8293
  %and9 = and i64 %conv8, %shl, !dbg !8294
  %tobool = icmp ne i64 %and9, 0, !dbg !8294
  br i1 %tobool, label %if.end, label %if.then, !dbg !8295

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !8296

if.end:                                           ; preds = %for.body
  %10 = load i32, i32* %cap, align 4, !dbg !8297
  %sh_prom10 = zext i32 %10 to i64, !dbg !8297
  %shl11 = shl i64 1, %sh_prom10, !dbg !8297
  %conv12 = trunc i64 %shl11 to i32, !dbg !8297
  %call = call i32 @spi_nor_hwcaps_read2cmd(i32 %conv12) #9, !dbg !8298
  store i32 %call, i32* %rdidx, align 4, !dbg !8299
  %11 = load i32, i32* %rdidx, align 4, !dbg !8300
  %cmp13 = icmp sge i32 %11, 0, !dbg !8302
  br i1 %cmp13, label %land.lhs.true, label %if.end23, !dbg !8303

land.lhs.true:                                    ; preds = %if.end
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8304
  %13 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !8305
  %reads = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %13, i32 0, i32 3, !dbg !8306
  %14 = load i32, i32* %rdidx, align 4, !dbg !8307
  %idxprom = sext i32 %14 to i64, !dbg !8305
  %arrayidx = getelementptr [15 x %struct.spi_nor_read_command], [15 x %struct.spi_nor_read_command]* %reads, i64 0, i64 %idxprom, !dbg !8305
  %call15 = call i32 @spi_nor_spimem_check_readop(%struct.spi_nor* %12, %struct.spi_nor_read_command* %arrayidx) #9, !dbg !8308
  %tobool16 = icmp ne i32 %call15, 0, !dbg !8308
  br i1 %tobool16, label %if.then17, label %if.end23, !dbg !8309

if.then17:                                        ; preds = %land.lhs.true
  %15 = load i32, i32* %cap, align 4, !dbg !8310
  %sh_prom18 = zext i32 %15 to i64, !dbg !8310
  %shl19 = shl i64 1, %sh_prom18, !dbg !8310
  %neg = xor i64 %shl19, -1, !dbg !8311
  %16 = load i32*, i32** %hwcaps.addr, align 8, !dbg !8312
  %17 = load i32, i32* %16, align 4, !dbg !8313
  %conv20 = zext i32 %17 to i64, !dbg !8313
  %and21 = and i64 %conv20, %neg, !dbg !8313
  %conv22 = trunc i64 %and21 to i32, !dbg !8313
  store i32 %conv22, i32* %16, align 4, !dbg !8313
  br label %if.end23, !dbg !8314

if.end23:                                         ; preds = %if.then17, %land.lhs.true, %if.end
  %18 = load i32, i32* %cap, align 4, !dbg !8315
  %sh_prom24 = zext i32 %18 to i64, !dbg !8315
  %shl25 = shl i64 1, %sh_prom24, !dbg !8315
  %conv26 = trunc i64 %shl25 to i32, !dbg !8315
  %call27 = call i32 @spi_nor_hwcaps_pp2cmd(i32 %conv26) #9, !dbg !8316
  store i32 %call27, i32* %ppidx, align 4, !dbg !8317
  %19 = load i32, i32* %ppidx, align 4, !dbg !8318
  %cmp28 = icmp slt i32 %19, 0, !dbg !8320
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !8321

if.then30:                                        ; preds = %if.end23
  br label %for.inc, !dbg !8322

if.end31:                                         ; preds = %if.end23
  %20 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8323
  %21 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !8325
  %page_programs = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %21, i32 0, i32 4, !dbg !8326
  %22 = load i32, i32* %ppidx, align 4, !dbg !8327
  %idxprom32 = sext i32 %22 to i64, !dbg !8325
  %arrayidx33 = getelementptr [7 x %struct.spi_nor_pp_command], [7 x %struct.spi_nor_pp_command]* %page_programs, i64 0, i64 %idxprom32, !dbg !8325
  %call34 = call i32 @spi_nor_spimem_check_pp(%struct.spi_nor* %20, %struct.spi_nor_pp_command* %arrayidx33) #9, !dbg !8328
  %tobool35 = icmp ne i32 %call34, 0, !dbg !8328
  br i1 %tobool35, label %if.then36, label %if.end43, !dbg !8329

if.then36:                                        ; preds = %if.end31
  %23 = load i32, i32* %cap, align 4, !dbg !8330
  %sh_prom37 = zext i32 %23 to i64, !dbg !8330
  %shl38 = shl i64 1, %sh_prom37, !dbg !8330
  %neg39 = xor i64 %shl38, -1, !dbg !8331
  %24 = load i32*, i32** %hwcaps.addr, align 8, !dbg !8332
  %25 = load i32, i32* %24, align 4, !dbg !8333
  %conv40 = zext i32 %25 to i64, !dbg !8333
  %and41 = and i64 %conv40, %neg39, !dbg !8333
  %conv42 = trunc i64 %and41 to i32, !dbg !8333
  store i32 %conv42, i32* %24, align 4, !dbg !8333
  br label %if.end43, !dbg !8334

if.end43:                                         ; preds = %if.then36, %if.end31
  br label %for.inc, !dbg !8335

for.inc:                                          ; preds = %if.end43, %if.then30, %if.then
  %26 = load i32, i32* %cap, align 4, !dbg !8336
  %inc = add i32 %26, 1, !dbg !8336
  store i32 %inc, i32* %cap, align 4, !dbg !8336
  br label %for.cond, !dbg !8337, !llvm.loop !8338

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8340
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_select_read(%struct.spi_nor* %nor, i32 %shared_hwcaps) #0 !dbg !8341 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8344, metadata !DIExpression()), !dbg !8348
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !8350, metadata !DIExpression()), !dbg !8351
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %shared_hwcaps.addr = alloca i32, align 4
  %cmd = alloca i32, align 4
  %best_match = alloca i32, align 4
  %read = alloca %struct.spi_nor_read_command*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8352, metadata !DIExpression()), !dbg !8353
  store i32 %shared_hwcaps, i32* %shared_hwcaps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shared_hwcaps.addr, metadata !8354, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !8356, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.declare(metadata i32* %best_match, metadata !8358, metadata !DIExpression()), !dbg !8359
  %0 = load i32, i32* %shared_hwcaps.addr, align 4, !dbg !8360
  %conv = zext i32 %0 to i64, !dbg !8360
  %and = and i64 %conv, 32767, !dbg !8361
  %conv1 = trunc i64 %and to i32, !dbg !8360
  store i32 %conv1, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !8362
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #10, !dbg !8363, !srcloc !8364
  store i32 %2, i32* %r.i, align 4, !dbg !8363
  %3 = load i32, i32* %r.i, align 4, !dbg !8365
  %add.i = add i32 %3, 1, !dbg !8366
  %sub = sub i32 %add.i, 1, !dbg !8367
  store i32 %sub, i32* %best_match, align 4, !dbg !8359
  call void @llvm.dbg.declare(metadata %struct.spi_nor_read_command** %read, metadata !8368, metadata !DIExpression()), !dbg !8371
  %4 = load i32, i32* %best_match, align 4, !dbg !8372
  %cmp = icmp slt i32 %4, 0, !dbg !8374
  br i1 %cmp, label %if.then, label %if.end, !dbg !8375

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8376
  br label %return, !dbg !8376

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %best_match, align 4, !dbg !8377
  %sh_prom = zext i32 %5 to i64, !dbg !8377
  %shl = shl i64 1, %sh_prom, !dbg !8377
  %conv3 = trunc i64 %shl to i32, !dbg !8377
  %call4 = call i32 @spi_nor_hwcaps_read2cmd(i32 %conv3) #9, !dbg !8378
  store i32 %call4, i32* %cmd, align 4, !dbg !8379
  %6 = load i32, i32* %cmd, align 4, !dbg !8380
  %cmp5 = icmp slt i32 %6, 0, !dbg !8382
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !8383

if.then7:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8384
  br label %return, !dbg !8384

if.end8:                                          ; preds = %if.end
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8385
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 20, !dbg !8386
  %8 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !8386
  %reads = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %8, i32 0, i32 3, !dbg !8387
  %9 = load i32, i32* %cmd, align 4, !dbg !8388
  %idxprom = sext i32 %9 to i64, !dbg !8385
  %arrayidx = getelementptr [15 x %struct.spi_nor_read_command], [15 x %struct.spi_nor_read_command]* %reads, i64 0, i64 %idxprom, !dbg !8385
  store %struct.spi_nor_read_command* %arrayidx, %struct.spi_nor_read_command** %read, align 8, !dbg !8389
  %10 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read, align 8, !dbg !8390
  %opcode = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %10, i32 0, i32 2, !dbg !8391
  %11 = load i8, i8* %opcode, align 2, !dbg !8391
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8392
  %read_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %12, i32 0, i32 11, !dbg !8393
  store i8 %11, i8* %read_opcode, align 2, !dbg !8394
  %13 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read, align 8, !dbg !8395
  %proto = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %13, i32 0, i32 3, !dbg !8396
  %14 = load i32, i32* %proto, align 4, !dbg !8396
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8397
  %read_proto = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %15, i32 0, i32 14, !dbg !8398
  store i32 %14, i32* %read_proto, align 4, !dbg !8399
  %16 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read, align 8, !dbg !8400
  %num_mode_clocks = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %16, i32 0, i32 0, !dbg !8401
  %17 = load i8, i8* %num_mode_clocks, align 4, !dbg !8401
  %conv9 = zext i8 %17 to i32, !dbg !8400
  %18 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read, align 8, !dbg !8402
  %num_wait_states = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %18, i32 0, i32 1, !dbg !8403
  %19 = load i8, i8* %num_wait_states, align 1, !dbg !8403
  %conv10 = zext i8 %19 to i32, !dbg !8402
  %add = add i32 %conv9, %conv10, !dbg !8404
  %conv11 = trunc i32 %add to i8, !dbg !8400
  %20 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8405
  %read_dummy = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %20, i32 0, i32 12, !dbg !8406
  store i8 %conv11, i8* %read_dummy, align 1, !dbg !8407
  store i32 0, i32* %retval, align 4, !dbg !8408
  br label %return, !dbg !8408

return:                                           ; preds = %if.end8, %if.then7, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !8409
  ret i32 %21, !dbg !8409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_select_pp(%struct.spi_nor* %nor, i32 %shared_hwcaps) #0 !dbg !8410 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8344, metadata !DIExpression()), !dbg !8411
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !8350, metadata !DIExpression()), !dbg !8413
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %shared_hwcaps.addr = alloca i32, align 4
  %cmd = alloca i32, align 4
  %best_match = alloca i32, align 4
  %pp = alloca %struct.spi_nor_pp_command*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8414, metadata !DIExpression()), !dbg !8415
  store i32 %shared_hwcaps, i32* %shared_hwcaps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shared_hwcaps.addr, metadata !8416, metadata !DIExpression()), !dbg !8417
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !8418, metadata !DIExpression()), !dbg !8419
  call void @llvm.dbg.declare(metadata i32* %best_match, metadata !8420, metadata !DIExpression()), !dbg !8421
  %0 = load i32, i32* %shared_hwcaps.addr, align 4, !dbg !8422
  %conv = zext i32 %0 to i64, !dbg !8422
  %and = and i64 %conv, 8323072, !dbg !8423
  %conv1 = trunc i64 %and to i32, !dbg !8422
  store i32 %conv1, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !8424
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #10, !dbg !8425, !srcloc !8364
  store i32 %2, i32* %r.i, align 4, !dbg !8425
  %3 = load i32, i32* %r.i, align 4, !dbg !8426
  %add.i = add i32 %3, 1, !dbg !8427
  %sub = sub i32 %add.i, 1, !dbg !8428
  store i32 %sub, i32* %best_match, align 4, !dbg !8421
  call void @llvm.dbg.declare(metadata %struct.spi_nor_pp_command** %pp, metadata !8429, metadata !DIExpression()), !dbg !8432
  %4 = load i32, i32* %best_match, align 4, !dbg !8433
  %cmp = icmp slt i32 %4, 0, !dbg !8435
  br i1 %cmp, label %if.then, label %if.end, !dbg !8436

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8437
  br label %return, !dbg !8437

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %best_match, align 4, !dbg !8438
  %sh_prom = zext i32 %5 to i64, !dbg !8438
  %shl = shl i64 1, %sh_prom, !dbg !8438
  %conv3 = trunc i64 %shl to i32, !dbg !8438
  %call4 = call i32 @spi_nor_hwcaps_pp2cmd(i32 %conv3) #9, !dbg !8439
  store i32 %call4, i32* %cmd, align 4, !dbg !8440
  %6 = load i32, i32* %cmd, align 4, !dbg !8441
  %cmp5 = icmp slt i32 %6, 0, !dbg !8443
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !8444

if.then7:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8445
  br label %return, !dbg !8445

if.end8:                                          ; preds = %if.end
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8446
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 20, !dbg !8447
  %8 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !8447
  %page_programs = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %8, i32 0, i32 4, !dbg !8448
  %9 = load i32, i32* %cmd, align 4, !dbg !8449
  %idxprom = sext i32 %9 to i64, !dbg !8446
  %arrayidx = getelementptr [7 x %struct.spi_nor_pp_command], [7 x %struct.spi_nor_pp_command]* %page_programs, i64 0, i64 %idxprom, !dbg !8446
  store %struct.spi_nor_pp_command* %arrayidx, %struct.spi_nor_pp_command** %pp, align 8, !dbg !8450
  %10 = load %struct.spi_nor_pp_command*, %struct.spi_nor_pp_command** %pp, align 8, !dbg !8451
  %opcode = getelementptr inbounds %struct.spi_nor_pp_command, %struct.spi_nor_pp_command* %10, i32 0, i32 0, !dbg !8452
  %11 = load i8, i8* %opcode, align 4, !dbg !8452
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8453
  %program_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %12, i32 0, i32 13, !dbg !8454
  store i8 %11, i8* %program_opcode, align 8, !dbg !8455
  %13 = load %struct.spi_nor_pp_command*, %struct.spi_nor_pp_command** %pp, align 8, !dbg !8456
  %proto = getelementptr inbounds %struct.spi_nor_pp_command, %struct.spi_nor_pp_command* %13, i32 0, i32 1, !dbg !8457
  %14 = load i32, i32* %proto, align 4, !dbg !8457
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8458
  %write_proto = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %15, i32 0, i32 15, !dbg !8459
  store i32 %14, i32* %write_proto, align 8, !dbg !8460
  store i32 0, i32* %retval, align 4, !dbg !8461
  br label %return, !dbg !8461

return:                                           ; preds = %if.end8, %if.then7, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !8462
  ret i32 %16, !dbg !8462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_select_erase(%struct.spi_nor* %nor) #0 !dbg !8463 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %map = alloca %struct.spi_nor_erase_map*, align 8
  %erase = alloca %struct.spi_nor_erase_type*, align 8
  %mtd = alloca %struct.mtd_info*, align 8
  %wanted_size = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8464, metadata !DIExpression()), !dbg !8465
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_map** %map, metadata !8466, metadata !DIExpression()), !dbg !8467
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8468
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 20, !dbg !8469
  %1 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !8469
  %erase_map = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %1, i32 0, i32 5, !dbg !8470
  store %struct.spi_nor_erase_map* %erase_map, %struct.spi_nor_erase_map** %map, align 8, !dbg !8467
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_type** %erase, metadata !8471, metadata !DIExpression()), !dbg !8474
  store %struct.spi_nor_erase_type* null, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8474
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd, metadata !8475, metadata !DIExpression()), !dbg !8476
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8477
  %mtd1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 0, !dbg !8478
  store %struct.mtd_info* %mtd1, %struct.mtd_info** %mtd, align 8, !dbg !8476
  call void @llvm.dbg.declare(metadata i32* %wanted_size, metadata !8479, metadata !DIExpression()), !dbg !8480
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8481
  %info = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 6, !dbg !8482
  %4 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !8482
  %sector_size = getelementptr inbounds %struct.flash_info, %struct.flash_info* %4, i32 0, i32 3, !dbg !8483
  %5 = load i32, i32* %sector_size, align 8, !dbg !8483
  store i32 %5, i32* %wanted_size, align 4, !dbg !8480
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8484, metadata !DIExpression()), !dbg !8485
  store i32 4096, i32* %wanted_size, align 4, !dbg !8486
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8487
  %call = call zeroext i1 @spi_nor_has_uniform_erase(%struct.spi_nor* %6) #9, !dbg !8489
  br i1 %call, label %if.then, label %if.end4, !dbg !8490

if.then:                                          ; preds = %entry
  %7 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map, align 8, !dbg !8491
  %8 = load i32, i32* %wanted_size, align 4, !dbg !8493
  %call2 = call %struct.spi_nor_erase_type* @spi_nor_select_uniform_erase(%struct.spi_nor_erase_map* %7, i32 %8) #9, !dbg !8494
  store %struct.spi_nor_erase_type* %call2, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8495
  %9 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8496
  %tobool = icmp ne %struct.spi_nor_erase_type* %9, null, !dbg !8496
  br i1 %tobool, label %if.end, label %if.then3, !dbg !8498

if.then3:                                         ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !8499
  br label %return, !dbg !8499

if.end:                                           ; preds = %if.then
  %10 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8500
  %opcode = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %10, i32 0, i32 3, !dbg !8501
  %11 = load i8, i8* %opcode, align 4, !dbg !8501
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8502
  %erase_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %12, i32 0, i32 10, !dbg !8503
  store i8 %11, i8* %erase_opcode, align 1, !dbg !8504
  %13 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8505
  %size = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %13, i32 0, i32 0, !dbg !8506
  %14 = load i32, i32* %size, align 4, !dbg !8506
  %15 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !8507
  %erasesize = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %15, i32 0, i32 3, !dbg !8508
  store i32 %14, i32* %erasesize, align 8, !dbg !8509
  store i32 0, i32* %retval, align 4, !dbg !8510
  br label %return, !dbg !8510

if.end4:                                          ; preds = %entry
  store i32 3, i32* %i, align 4, !dbg !8511
  br label %for.cond, !dbg !8513

for.cond:                                         ; preds = %for.inc, %if.end4
  %16 = load i32, i32* %i, align 4, !dbg !8514
  %cmp = icmp sge i32 %16, 0, !dbg !8516
  br i1 %cmp, label %for.body, label %for.end, !dbg !8517

for.body:                                         ; preds = %for.cond
  %17 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map, align 8, !dbg !8518
  %erase_type = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %17, i32 0, i32 2, !dbg !8521
  %18 = load i32, i32* %i, align 4, !dbg !8522
  %idxprom = sext i32 %18 to i64, !dbg !8518
  %arrayidx = getelementptr [4 x %struct.spi_nor_erase_type], [4 x %struct.spi_nor_erase_type]* %erase_type, i64 0, i64 %idxprom, !dbg !8518
  %size5 = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %arrayidx, i32 0, i32 0, !dbg !8523
  %19 = load i32, i32* %size5, align 8, !dbg !8523
  %tobool6 = icmp ne i32 %19, 0, !dbg !8518
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !8524

if.then7:                                         ; preds = %for.body
  %20 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map, align 8, !dbg !8525
  %erase_type8 = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %20, i32 0, i32 2, !dbg !8527
  %21 = load i32, i32* %i, align 4, !dbg !8528
  %idxprom9 = sext i32 %21 to i64, !dbg !8525
  %arrayidx10 = getelementptr [4 x %struct.spi_nor_erase_type], [4 x %struct.spi_nor_erase_type]* %erase_type8, i64 0, i64 %idxprom9, !dbg !8525
  store %struct.spi_nor_erase_type* %arrayidx10, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8529
  br label %for.end, !dbg !8530

if.end11:                                         ; preds = %for.body
  br label %for.inc, !dbg !8531

for.inc:                                          ; preds = %if.end11
  %22 = load i32, i32* %i, align 4, !dbg !8532
  %dec = add i32 %22, -1, !dbg !8532
  store i32 %dec, i32* %i, align 4, !dbg !8532
  br label %for.cond, !dbg !8533, !llvm.loop !8534

for.end:                                          ; preds = %if.then7, %for.cond
  %23 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8536
  %tobool12 = icmp ne %struct.spi_nor_erase_type* %23, null, !dbg !8536
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !8538

if.then13:                                        ; preds = %for.end
  store i32 -22, i32* %retval, align 4, !dbg !8539
  br label %return, !dbg !8539

if.end14:                                         ; preds = %for.end
  %24 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8540
  %size15 = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %24, i32 0, i32 0, !dbg !8541
  %25 = load i32, i32* %size15, align 4, !dbg !8541
  %26 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !8542
  %erasesize16 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %26, i32 0, i32 3, !dbg !8543
  store i32 %25, i32* %erasesize16, align 8, !dbg !8544
  store i32 0, i32* %retval, align 4, !dbg !8545
  br label %return, !dbg !8545

return:                                           ; preds = %if.end14, %if.then13, %if.end, %if.then3
  %27 = load i32, i32* %retval, align 4, !dbg !8546
  ret i32 %27, !dbg !8546
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_spimem_check_readop(%struct.spi_nor* %nor, %struct.spi_nor_read_command* %read) #0 !dbg !8547 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %read.addr = alloca %struct.spi_nor_read_command*, align 8
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  store %struct.spi_nor_read_command* %read, %struct.spi_nor_read_command** %read.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_read_command** %read.addr, metadata !8552, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !8554, metadata !DIExpression()), !dbg !8555
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !8556
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !8556
  store i8 1, i8* %nbytes, align 8, !dbg !8556
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !8556
  store i8 1, i8* %buswidth, align 1, !dbg !8556
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !8556
  %bf.load = load i8, i8* %dtr, align 2, !dbg !8556
  %bf.clear = and i8 %bf.load, -2, !dbg !8556
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !8556
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !8556
  %0 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read.addr, align 8, !dbg !8556
  %opcode1 = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %0, i32 0, i32 2, !dbg !8556
  %1 = load i8, i8* %opcode1, align 2, !dbg !8556
  %conv = zext i8 %1 to i16, !dbg !8556
  store i16 %conv, i16* %opcode, align 4, !dbg !8556
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !8556
  %nbytes2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !8556
  store i8 3, i8* %nbytes2, align 8, !dbg !8556
  %buswidth3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !8556
  store i8 1, i8* %buswidth3, align 1, !dbg !8556
  %dtr4 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !8556
  %bf.load5 = load i8, i8* %dtr4, align 2, !dbg !8556
  %bf.clear6 = and i8 %bf.load5, -2, !dbg !8556
  store i8 %bf.clear6, i8* %dtr4, align 2, !dbg !8556
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !8556
  store i64 0, i64* %val, align 8, !dbg !8556
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !8556
  %nbytes7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !8556
  store i8 0, i8* %nbytes7, align 8, !dbg !8556
  %buswidth8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !8556
  store i8 1, i8* %buswidth8, align 1, !dbg !8556
  %dtr9 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !8556
  %bf.load10 = load i8, i8* %dtr9, align 2, !dbg !8556
  %bf.clear11 = and i8 %bf.load10, -2, !dbg !8556
  store i8 %bf.clear11, i8* %dtr9, align 2, !dbg !8556
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !8556
  %buswidth12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !8556
  store i8 1, i8* %buswidth12, align 8, !dbg !8556
  %dtr13 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !8556
  %bf.load14 = load i8, i8* %dtr13, align 1, !dbg !8556
  %bf.clear15 = and i8 %bf.load14, -2, !dbg !8556
  store i8 %bf.clear15, i8* %dtr13, align 1, !dbg !8556
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !8556
  store i32 1, i32* %dir, align 4, !dbg !8556
  %nbytes16 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !8556
  store i32 0, i32* %nbytes16, align 8, !dbg !8556
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !8556
  %in = bitcast %union.anon.73* %buf to i8**, !dbg !8556
  store i8* null, i8** %in, align 8, !dbg !8556
  %2 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read.addr, align 8, !dbg !8557
  %proto = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %2, i32 0, i32 3, !dbg !8558
  %3 = load i32, i32* %proto, align 4, !dbg !8558
  %call = call zeroext i8 @spi_nor_get_protocol_inst_nbits(i32 %3) #9, !dbg !8559
  %cmd17 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !8560
  %buswidth18 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd17, i32 0, i32 1, !dbg !8561
  store i8 %call, i8* %buswidth18, align 1, !dbg !8562
  %4 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read.addr, align 8, !dbg !8563
  %proto19 = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %4, i32 0, i32 3, !dbg !8564
  %5 = load i32, i32* %proto19, align 4, !dbg !8564
  %call20 = call zeroext i8 @spi_nor_get_protocol_addr_nbits(i32 %5) #9, !dbg !8565
  %addr21 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !8566
  %buswidth22 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr21, i32 0, i32 1, !dbg !8567
  store i8 %call20, i8* %buswidth22, align 1, !dbg !8568
  %6 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read.addr, align 8, !dbg !8569
  %proto23 = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %6, i32 0, i32 3, !dbg !8570
  %7 = load i32, i32* %proto23, align 4, !dbg !8570
  %call24 = call zeroext i8 @spi_nor_get_protocol_data_nbits(i32 %7) #9, !dbg !8571
  %data25 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !8572
  %buswidth26 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data25, i32 0, i32 0, !dbg !8573
  store i8 %call24, i8* %buswidth26, align 8, !dbg !8574
  %addr27 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !8575
  %buswidth28 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr27, i32 0, i32 1, !dbg !8576
  %8 = load i8, i8* %buswidth28, align 1, !dbg !8576
  %dummy29 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !8577
  %buswidth30 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy29, i32 0, i32 1, !dbg !8578
  store i8 %8, i8* %buswidth30, align 1, !dbg !8579
  %9 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read.addr, align 8, !dbg !8580
  %num_mode_clocks = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %9, i32 0, i32 0, !dbg !8581
  %10 = load i8, i8* %num_mode_clocks, align 4, !dbg !8581
  %conv31 = zext i8 %10 to i32, !dbg !8580
  %11 = load %struct.spi_nor_read_command*, %struct.spi_nor_read_command** %read.addr, align 8, !dbg !8582
  %num_wait_states = getelementptr inbounds %struct.spi_nor_read_command, %struct.spi_nor_read_command* %11, i32 0, i32 1, !dbg !8583
  %12 = load i8, i8* %num_wait_states, align 1, !dbg !8583
  %conv32 = zext i8 %12 to i32, !dbg !8582
  %add = add i32 %conv31, %conv32, !dbg !8584
  %dummy33 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !8585
  %buswidth34 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy33, i32 0, i32 1, !dbg !8586
  %13 = load i8, i8* %buswidth34, align 1, !dbg !8586
  %conv35 = zext i8 %13 to i32, !dbg !8587
  %mul = mul i32 %add, %conv35, !dbg !8588
  %div = sdiv i32 %mul, 8, !dbg !8589
  %conv36 = trunc i32 %div to i8, !dbg !8590
  %dummy37 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !8591
  %nbytes38 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy37, i32 0, i32 0, !dbg !8592
  store i8 %conv36, i8* %nbytes38, align 8, !dbg !8593
  %14 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8594
  %call39 = call i32 @spi_nor_spimem_check_op(%struct.spi_nor* %14, %struct.spi_mem_op* %op) #9, !dbg !8595
  ret i32 %call39, !dbg !8596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_hwcaps_pp2cmd(i32 %hwcaps) #0 !dbg !4654 {
entry:
  %hwcaps.addr = alloca i32, align 4
  store i32 %hwcaps, i32* %hwcaps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hwcaps.addr, metadata !8597, metadata !DIExpression()), !dbg !8598
  %0 = load i32, i32* %hwcaps.addr, align 4, !dbg !8599
  %call = call i32 @spi_nor_hwcaps2cmd(i32 %0, [2 x i32]* getelementptr inbounds ([7 x [2 x i32]], [7 x [2 x i32]]* @spi_nor_hwcaps_pp2cmd.hwcaps_pp2cmd, i64 0, i64 0), i64 7) #9, !dbg !8600
  ret i32 %call, !dbg !8601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_spimem_check_pp(%struct.spi_nor* %nor, %struct.spi_nor_pp_command* %pp) #0 !dbg !8602 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %pp.addr = alloca %struct.spi_nor_pp_command*, align 8
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8605, metadata !DIExpression()), !dbg !8606
  store %struct.spi_nor_pp_command* %pp, %struct.spi_nor_pp_command** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_pp_command** %pp.addr, metadata !8607, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !8609, metadata !DIExpression()), !dbg !8610
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !8611
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !8611
  store i8 1, i8* %nbytes, align 8, !dbg !8611
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !8611
  store i8 1, i8* %buswidth, align 1, !dbg !8611
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !8611
  %bf.load = load i8, i8* %dtr, align 2, !dbg !8611
  %bf.clear = and i8 %bf.load, -2, !dbg !8611
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !8611
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !8611
  %0 = load %struct.spi_nor_pp_command*, %struct.spi_nor_pp_command** %pp.addr, align 8, !dbg !8611
  %opcode1 = getelementptr inbounds %struct.spi_nor_pp_command, %struct.spi_nor_pp_command* %0, i32 0, i32 0, !dbg !8611
  %1 = load i8, i8* %opcode1, align 4, !dbg !8611
  %conv = zext i8 %1 to i16, !dbg !8611
  store i16 %conv, i16* %opcode, align 4, !dbg !8611
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !8611
  %nbytes2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !8611
  store i8 3, i8* %nbytes2, align 8, !dbg !8611
  %buswidth3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !8611
  store i8 1, i8* %buswidth3, align 1, !dbg !8611
  %dtr4 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !8611
  %bf.load5 = load i8, i8* %dtr4, align 2, !dbg !8611
  %bf.clear6 = and i8 %bf.load5, -2, !dbg !8611
  store i8 %bf.clear6, i8* %dtr4, align 2, !dbg !8611
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !8611
  store i64 0, i64* %val, align 8, !dbg !8611
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !8611
  %nbytes7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !8611
  store i8 0, i8* %nbytes7, align 8, !dbg !8611
  %buswidth8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !8611
  store i8 0, i8* %buswidth8, align 1, !dbg !8611
  %dtr9 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !8611
  %bf.load10 = load i8, i8* %dtr9, align 2, !dbg !8611
  %bf.clear11 = and i8 %bf.load10, -2, !dbg !8611
  store i8 %bf.clear11, i8* %dtr9, align 2, !dbg !8611
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !8611
  %buswidth12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !8611
  store i8 1, i8* %buswidth12, align 8, !dbg !8611
  %dtr13 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !8611
  %bf.load14 = load i8, i8* %dtr13, align 1, !dbg !8611
  %bf.clear15 = and i8 %bf.load14, -2, !dbg !8611
  store i8 %bf.clear15, i8* %dtr13, align 1, !dbg !8611
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !8611
  store i32 2, i32* %dir, align 4, !dbg !8611
  %nbytes16 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !8611
  store i32 0, i32* %nbytes16, align 8, !dbg !8611
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !8611
  %out = bitcast %union.anon.73* %buf to i8**, !dbg !8611
  store i8* null, i8** %out, align 8, !dbg !8611
  %2 = load %struct.spi_nor_pp_command*, %struct.spi_nor_pp_command** %pp.addr, align 8, !dbg !8612
  %proto = getelementptr inbounds %struct.spi_nor_pp_command, %struct.spi_nor_pp_command* %2, i32 0, i32 1, !dbg !8613
  %3 = load i32, i32* %proto, align 4, !dbg !8613
  %call = call zeroext i8 @spi_nor_get_protocol_inst_nbits(i32 %3) #9, !dbg !8614
  %cmd17 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !8615
  %buswidth18 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd17, i32 0, i32 1, !dbg !8616
  store i8 %call, i8* %buswidth18, align 1, !dbg !8617
  %4 = load %struct.spi_nor_pp_command*, %struct.spi_nor_pp_command** %pp.addr, align 8, !dbg !8618
  %proto19 = getelementptr inbounds %struct.spi_nor_pp_command, %struct.spi_nor_pp_command* %4, i32 0, i32 1, !dbg !8619
  %5 = load i32, i32* %proto19, align 4, !dbg !8619
  %call20 = call zeroext i8 @spi_nor_get_protocol_addr_nbits(i32 %5) #9, !dbg !8620
  %addr21 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !8621
  %buswidth22 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr21, i32 0, i32 1, !dbg !8622
  store i8 %call20, i8* %buswidth22, align 1, !dbg !8623
  %6 = load %struct.spi_nor_pp_command*, %struct.spi_nor_pp_command** %pp.addr, align 8, !dbg !8624
  %proto23 = getelementptr inbounds %struct.spi_nor_pp_command, %struct.spi_nor_pp_command* %6, i32 0, i32 1, !dbg !8625
  %7 = load i32, i32* %proto23, align 4, !dbg !8625
  %call24 = call zeroext i8 @spi_nor_get_protocol_data_nbits(i32 %7) #9, !dbg !8626
  %data25 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !8627
  %buswidth26 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data25, i32 0, i32 0, !dbg !8628
  store i8 %call24, i8* %buswidth26, align 8, !dbg !8629
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8630
  %call27 = call i32 @spi_nor_spimem_check_op(%struct.spi_nor* %8, %struct.spi_mem_op* %op) #9, !dbg !8631
  ret i32 %call27, !dbg !8632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_spimem_check_op(%struct.spi_nor* %nor, %struct.spi_mem_op* %op) #0 !dbg !8633 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %op.addr = alloca %struct.spi_mem_op*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8634, metadata !DIExpression()), !dbg !8635
  store %struct.spi_mem_op* %op, %struct.spi_mem_op** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op** %op.addr, metadata !8636, metadata !DIExpression()), !dbg !8637
  %0 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op.addr, align 8, !dbg !8638
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %0, i32 0, i32 1, !dbg !8639
  %nbytes = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !8640
  store i8 4, i8* %nbytes, align 8, !dbg !8641
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8642
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 3, !dbg !8644
  %2 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !8644
  %3 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op.addr, align 8, !dbg !8645
  %call = call zeroext i1 @spi_mem_supports_op(%struct.spi_mem* %2, %struct.spi_mem_op* %3) #9, !dbg !8646
  br i1 %call, label %if.end8, label %if.then, !dbg !8647

if.then:                                          ; preds = %entry
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8648
  %mtd = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 0, !dbg !8651
  %size = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %mtd, i32 0, i32 2, !dbg !8652
  %5 = load i64, i64* %size, align 8, !dbg !8652
  %cmp = icmp ugt i64 %5, 16777216, !dbg !8653
  br i1 %cmp, label %if.then1, label %if.end, !dbg !8654

if.then1:                                         ; preds = %if.then
  store i32 -524, i32* %retval, align 4, !dbg !8655
  br label %return, !dbg !8655

if.end:                                           ; preds = %if.then
  %6 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op.addr, align 8, !dbg !8656
  %addr2 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %6, i32 0, i32 1, !dbg !8657
  %nbytes3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr2, i32 0, i32 0, !dbg !8658
  store i8 3, i8* %nbytes3, align 8, !dbg !8659
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8660
  %spimem4 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 3, !dbg !8662
  %8 = load %struct.spi_mem*, %struct.spi_mem** %spimem4, align 8, !dbg !8662
  %9 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op.addr, align 8, !dbg !8663
  %call5 = call zeroext i1 @spi_mem_supports_op(%struct.spi_mem* %8, %struct.spi_mem_op* %9) #9, !dbg !8664
  br i1 %call5, label %if.end7, label %if.then6, !dbg !8665

if.then6:                                         ; preds = %if.end
  store i32 -524, i32* %retval, align 4, !dbg !8666
  br label %return, !dbg !8666

if.end7:                                          ; preds = %if.end
  br label %if.end8, !dbg !8667

if.end8:                                          ; preds = %if.end7, %entry
  store i32 0, i32* %retval, align 4, !dbg !8668
  br label %return, !dbg !8668

return:                                           ; preds = %if.end8, %if.then6, %if.then1
  %10 = load i32, i32* %retval, align 4, !dbg !8669
  ret i32 %10, !dbg !8669
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @spi_mem_supports_op(%struct.spi_mem*, %struct.spi_mem_op*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @spi_nor_has_uniform_erase(%struct.spi_nor* %nor) #0 !dbg !8670 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8675, metadata !DIExpression()), !dbg !8676
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8677
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 20, !dbg !8678
  %1 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !8678
  %erase_map = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %1, i32 0, i32 5, !dbg !8679
  %uniform_erase_type = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %erase_map, i32 0, i32 3, !dbg !8680
  %2 = load i8, i8* %uniform_erase_type, align 8, !dbg !8680
  %tobool = icmp ne i8 %2, 0, !dbg !8681
  %lnot = xor i1 %tobool, true, !dbg !8681
  %lnot1 = xor i1 %lnot, true, !dbg !8682
  ret i1 %lnot1, !dbg !8683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_nor_erase_type* @spi_nor_select_uniform_erase(%struct.spi_nor_erase_map* %map, i32 %wanted_size) #0 !dbg !8684 {
entry:
  %retval = alloca %struct.spi_nor_erase_type*, align 8
  %map.addr = alloca %struct.spi_nor_erase_map*, align 8
  %wanted_size.addr = alloca i32, align 4
  %tested_erase = alloca %struct.spi_nor_erase_type*, align 8
  %erase = alloca %struct.spi_nor_erase_type*, align 8
  %i = alloca i32, align 4
  %uniform_erase_type = alloca i8, align 1
  store %struct.spi_nor_erase_map* %map, %struct.spi_nor_erase_map** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_map** %map.addr, metadata !8688, metadata !DIExpression()), !dbg !8689
  store i32 %wanted_size, i32* %wanted_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wanted_size.addr, metadata !8690, metadata !DIExpression()), !dbg !8691
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_type** %tested_erase, metadata !8692, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_type** %erase, metadata !8694, metadata !DIExpression()), !dbg !8695
  store %struct.spi_nor_erase_type* null, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8695
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8696, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.declare(metadata i8* %uniform_erase_type, metadata !8698, metadata !DIExpression()), !dbg !8699
  %0 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !8700
  %uniform_erase_type1 = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %0, i32 0, i32 3, !dbg !8701
  %1 = load i8, i8* %uniform_erase_type1, align 8, !dbg !8701
  store i8 %1, i8* %uniform_erase_type, align 1, !dbg !8699
  store i32 3, i32* %i, align 4, !dbg !8702
  br label %for.cond, !dbg !8704

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !8705
  %cmp = icmp sge i32 %2, 0, !dbg !8707
  br i1 %cmp, label %for.body, label %for.end, !dbg !8708

for.body:                                         ; preds = %for.cond
  %3 = load i8, i8* %uniform_erase_type, align 1, !dbg !8709
  %conv = zext i8 %3 to i64, !dbg !8709
  %4 = load i32, i32* %i, align 4, !dbg !8712
  %sh_prom = zext i32 %4 to i64, !dbg !8712
  %shl = shl i64 1, %sh_prom, !dbg !8712
  %and = and i64 %conv, %shl, !dbg !8713
  %tobool = icmp ne i64 %and, 0, !dbg !8713
  br i1 %tobool, label %if.end, label %if.then, !dbg !8714

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !8715

if.end:                                           ; preds = %for.body
  %5 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !8716
  %erase_type = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %5, i32 0, i32 2, !dbg !8717
  %6 = load i32, i32* %i, align 4, !dbg !8718
  %idxprom = sext i32 %6 to i64, !dbg !8716
  %arrayidx = getelementptr [4 x %struct.spi_nor_erase_type], [4 x %struct.spi_nor_erase_type]* %erase_type, i64 0, i64 %idxprom, !dbg !8716
  store %struct.spi_nor_erase_type* %arrayidx, %struct.spi_nor_erase_type** %tested_erase, align 8, !dbg !8719
  %7 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %tested_erase, align 8, !dbg !8720
  %size = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %7, i32 0, i32 0, !dbg !8722
  %8 = load i32, i32* %size, align 4, !dbg !8722
  %9 = load i32, i32* %wanted_size.addr, align 4, !dbg !8723
  %cmp2 = icmp eq i32 %8, %9, !dbg !8724
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !8725

if.then4:                                         ; preds = %if.end
  %10 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %tested_erase, align 8, !dbg !8726
  store %struct.spi_nor_erase_type* %10, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8728
  br label %for.end, !dbg !8729

if.end5:                                          ; preds = %if.end
  %11 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8730
  %tobool6 = icmp ne %struct.spi_nor_erase_type* %11, null, !dbg !8730
  br i1 %tobool6, label %if.end10, label %land.lhs.true, !dbg !8732

land.lhs.true:                                    ; preds = %if.end5
  %12 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %tested_erase, align 8, !dbg !8733
  %size7 = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %12, i32 0, i32 0, !dbg !8734
  %13 = load i32, i32* %size7, align 4, !dbg !8734
  %tobool8 = icmp ne i32 %13, 0, !dbg !8733
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8735

if.then9:                                         ; preds = %land.lhs.true
  %14 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %tested_erase, align 8, !dbg !8736
  store %struct.spi_nor_erase_type* %14, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8737
  br label %if.end10, !dbg !8738

if.end10:                                         ; preds = %if.then9, %land.lhs.true, %if.end5
  br label %for.inc, !dbg !8739

for.inc:                                          ; preds = %if.end10, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !8740
  %dec = add i32 %15, -1, !dbg !8740
  store i32 %dec, i32* %i, align 4, !dbg !8740
  br label %for.cond, !dbg !8741, !llvm.loop !8742

for.end:                                          ; preds = %if.then4, %for.cond
  %16 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8744
  %tobool11 = icmp ne %struct.spi_nor_erase_type* %16, null, !dbg !8744
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8746

if.then12:                                        ; preds = %for.end
  store %struct.spi_nor_erase_type* null, %struct.spi_nor_erase_type** %retval, align 8, !dbg !8747
  br label %return, !dbg !8747

if.end13:                                         ; preds = %for.end
  %17 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !8748
  %uniform_erase_type14 = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %17, i32 0, i32 3, !dbg !8749
  %18 = load i8, i8* %uniform_erase_type14, align 8, !dbg !8750
  %conv15 = zext i8 %18 to i64, !dbg !8750
  %and16 = and i64 %conv15, -16, !dbg !8750
  %conv17 = trunc i64 %and16 to i8, !dbg !8750
  store i8 %conv17, i8* %uniform_erase_type14, align 8, !dbg !8750
  %19 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8751
  %20 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !8751
  %erase_type18 = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %20, i32 0, i32 2, !dbg !8751
  %arraydecay = getelementptr inbounds [4 x %struct.spi_nor_erase_type], [4 x %struct.spi_nor_erase_type]* %erase_type18, i64 0, i64 0, !dbg !8751
  %sub.ptr.lhs.cast = ptrtoint %struct.spi_nor_erase_type* %19 to i64, !dbg !8751
  %sub.ptr.rhs.cast = ptrtoint %struct.spi_nor_erase_type* %arraydecay to i64, !dbg !8751
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8751
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16, !dbg !8751
  %shl19 = shl i64 1, %sub.ptr.div, !dbg !8751
  %21 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !8752
  %uniform_erase_type20 = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %21, i32 0, i32 3, !dbg !8753
  %22 = load i8, i8* %uniform_erase_type20, align 8, !dbg !8754
  %conv21 = zext i8 %22 to i64, !dbg !8754
  %or = or i64 %conv21, %shl19, !dbg !8754
  %conv22 = trunc i64 %or to i8, !dbg !8754
  store i8 %conv22, i8* %uniform_erase_type20, align 8, !dbg !8754
  %23 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !8755
  store %struct.spi_nor_erase_type* %23, %struct.spi_nor_erase_type** %retval, align 8, !dbg !8756
  br label %return, !dbg !8756

return:                                           ; preds = %if.end13, %if.then12
  %24 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %retval, align 8, !dbg !8757
  ret %struct.spi_nor_erase_type* %24, !dbg !8757
}

; Function Attrs: noredzone
declare dso_local i32 @spi_nor_parse_sfdp(%struct.spi_nor*, %struct.spi_nor_flash_parameter*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_sr_lock(%struct.spi_nor* %nor, i64 %ofs, i64 %len) #0 !dbg !8758 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ofs.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %mtd = alloca %struct.mtd_info*, align 8
  %min_prot_len = alloca i64, align 8
  %ret = alloca i32, align 4
  %status_old = alloca i32, align 4
  %status_new = alloca i32, align 4
  %mask = alloca i8, align 1
  %tb_mask = alloca i8, align 1
  %pow = alloca i8, align 1
  %val = alloca i8, align 1
  %lock_len = alloca i64, align 8
  %can_be_top = alloca i8, align 1
  %can_be_bottom = alloca i8, align 1
  %use_top = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8759, metadata !DIExpression()), !dbg !8760
  store i64 %ofs, i64* %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofs.addr, metadata !8761, metadata !DIExpression()), !dbg !8762
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !8763, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd, metadata !8765, metadata !DIExpression()), !dbg !8766
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8767
  %mtd1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 0, !dbg !8768
  store %struct.mtd_info* %mtd1, %struct.mtd_info** %mtd, align 8, !dbg !8766
  call void @llvm.dbg.declare(metadata i64* %min_prot_len, metadata !8769, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8771, metadata !DIExpression()), !dbg !8772
  call void @llvm.dbg.declare(metadata i32* %status_old, metadata !8773, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.declare(metadata i32* %status_new, metadata !8775, metadata !DIExpression()), !dbg !8776
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !8777, metadata !DIExpression()), !dbg !8778
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8779
  %call = call zeroext i8 @spi_nor_get_sr_bp_mask(%struct.spi_nor* %1) #9, !dbg !8780
  store i8 %call, i8* %mask, align 1, !dbg !8778
  call void @llvm.dbg.declare(metadata i8* %tb_mask, metadata !8781, metadata !DIExpression()), !dbg !8782
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8783
  %call2 = call zeroext i8 @spi_nor_get_sr_tb_mask(%struct.spi_nor* %2) #9, !dbg !8784
  store i8 %call2, i8* %tb_mask, align 1, !dbg !8782
  call void @llvm.dbg.declare(metadata i8* %pow, metadata !8785, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.declare(metadata i8* %val, metadata !8787, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.declare(metadata i64* %lock_len, metadata !8789, metadata !DIExpression()), !dbg !8790
  call void @llvm.dbg.declare(metadata i8* %can_be_top, metadata !8791, metadata !DIExpression()), !dbg !8792
  store i8 1, i8* %can_be_top, align 1, !dbg !8792
  call void @llvm.dbg.declare(metadata i8* %can_be_bottom, metadata !8793, metadata !DIExpression()), !dbg !8794
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8795
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 18, !dbg !8796
  %4 = load i32, i32* %flags, align 4, !dbg !8796
  %and = and i32 %4, 2, !dbg !8797
  %tobool = icmp ne i32 %and, 0, !dbg !8795
  %frombool = zext i1 %tobool to i8, !dbg !8794
  store i8 %frombool, i8* %can_be_bottom, align 1, !dbg !8794
  call void @llvm.dbg.declare(metadata i8* %use_top, metadata !8798, metadata !DIExpression()), !dbg !8799
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8800
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8801
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 4, !dbg !8802
  %7 = load i8*, i8** %bouncebuf, align 8, !dbg !8802
  %call3 = call i32 @spi_nor_read_sr(%struct.spi_nor* %5, i8* %7) #9, !dbg !8803
  store i32 %call3, i32* %ret, align 4, !dbg !8804
  %8 = load i32, i32* %ret, align 4, !dbg !8805
  %tobool4 = icmp ne i32 %8, 0, !dbg !8805
  br i1 %tobool4, label %if.then, label %if.end, !dbg !8807

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %ret, align 4, !dbg !8808
  store i32 %9, i32* %retval, align 4, !dbg !8809
  br label %return, !dbg !8809

if.end:                                           ; preds = %entry
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8810
  %bouncebuf5 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 4, !dbg !8811
  %11 = load i8*, i8** %bouncebuf5, align 8, !dbg !8811
  %arrayidx = getelementptr i8, i8* %11, i64 0, !dbg !8810
  %12 = load i8, i8* %arrayidx, align 1, !dbg !8810
  %conv = zext i8 %12 to i32, !dbg !8810
  store i32 %conv, i32* %status_old, align 4, !dbg !8812
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8813
  %14 = load i64, i64* %ofs.addr, align 8, !dbg !8815
  %15 = load i64, i64* %len.addr, align 8, !dbg !8816
  %16 = load i32, i32* %status_old, align 4, !dbg !8817
  %conv6 = trunc i32 %16 to i8, !dbg !8817
  %call7 = call i32 @spi_nor_is_locked_sr(%struct.spi_nor* %13, i64 %14, i64 %15, i8 zeroext %conv6) #9, !dbg !8818
  %tobool8 = icmp ne i32 %call7, 0, !dbg !8818
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8819

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8820
  br label %return, !dbg !8820

if.end10:                                         ; preds = %if.end
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8821
  %18 = load i64, i64* %ofs.addr, align 8, !dbg !8823
  %19 = load i32, i32* %status_old, align 4, !dbg !8824
  %conv11 = trunc i32 %19 to i8, !dbg !8824
  %call12 = call i32 @spi_nor_is_locked_sr(%struct.spi_nor* %17, i64 0, i64 %18, i8 zeroext %conv11) #9, !dbg !8825
  %tobool13 = icmp ne i32 %call12, 0, !dbg !8825
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !8826

if.then14:                                        ; preds = %if.end10
  store i8 0, i8* %can_be_bottom, align 1, !dbg !8827
  br label %if.end15, !dbg !8828

if.end15:                                         ; preds = %if.then14, %if.end10
  %20 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8829
  %21 = load i64, i64* %ofs.addr, align 8, !dbg !8831
  %22 = load i64, i64* %len.addr, align 8, !dbg !8832
  %add = add i64 %21, %22, !dbg !8833
  %23 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !8834
  %size = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %23, i32 0, i32 2, !dbg !8835
  %24 = load i64, i64* %size, align 8, !dbg !8835
  %25 = load i64, i64* %ofs.addr, align 8, !dbg !8836
  %26 = load i64, i64* %len.addr, align 8, !dbg !8837
  %add16 = add i64 %25, %26, !dbg !8838
  %sub = sub i64 %24, %add16, !dbg !8839
  %27 = load i32, i32* %status_old, align 4, !dbg !8840
  %conv17 = trunc i32 %27 to i8, !dbg !8840
  %call18 = call i32 @spi_nor_is_locked_sr(%struct.spi_nor* %20, i64 %add, i64 %sub, i8 zeroext %conv17) #9, !dbg !8841
  %tobool19 = icmp ne i32 %call18, 0, !dbg !8841
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !8842

if.then20:                                        ; preds = %if.end15
  store i8 0, i8* %can_be_top, align 1, !dbg !8843
  br label %if.end21, !dbg !8844

if.end21:                                         ; preds = %if.then20, %if.end15
  %28 = load i8, i8* %can_be_bottom, align 1, !dbg !8845
  %tobool22 = trunc i8 %28 to i1, !dbg !8845
  br i1 %tobool22, label %if.end25, label %land.lhs.true, !dbg !8847

land.lhs.true:                                    ; preds = %if.end21
  %29 = load i8, i8* %can_be_top, align 1, !dbg !8848
  %tobool23 = trunc i8 %29 to i1, !dbg !8848
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !8849

if.then24:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !8850
  br label %return, !dbg !8850

if.end25:                                         ; preds = %land.lhs.true, %if.end21
  %30 = load i8, i8* %can_be_top, align 1, !dbg !8851
  %tobool26 = trunc i8 %30 to i1, !dbg !8851
  %frombool27 = zext i1 %tobool26 to i8, !dbg !8852
  store i8 %frombool27, i8* %use_top, align 1, !dbg !8852
  %31 = load i8, i8* %use_top, align 1, !dbg !8853
  %tobool28 = trunc i8 %31 to i1, !dbg !8853
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !8855

if.then29:                                        ; preds = %if.end25
  %32 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !8856
  %size30 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %32, i32 0, i32 2, !dbg !8857
  %33 = load i64, i64* %size30, align 8, !dbg !8857
  %34 = load i64, i64* %ofs.addr, align 8, !dbg !8858
  %sub31 = sub i64 %33, %34, !dbg !8859
  store i64 %sub31, i64* %lock_len, align 8, !dbg !8860
  br label %if.end33, !dbg !8861

if.else:                                          ; preds = %if.end25
  %35 = load i64, i64* %ofs.addr, align 8, !dbg !8862
  %36 = load i64, i64* %len.addr, align 8, !dbg !8863
  %add32 = add i64 %35, %36, !dbg !8864
  store i64 %add32, i64* %lock_len, align 8, !dbg !8865
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then29
  %37 = load i64, i64* %lock_len, align 8, !dbg !8866
  %38 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !8868
  %size34 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %38, i32 0, i32 2, !dbg !8869
  %39 = load i64, i64* %size34, align 8, !dbg !8869
  %cmp = icmp eq i64 %37, %39, !dbg !8870
  br i1 %cmp, label %if.then36, label %if.else37, !dbg !8871

if.then36:                                        ; preds = %if.end33
  %40 = load i8, i8* %mask, align 1, !dbg !8872
  store i8 %40, i8* %val, align 1, !dbg !8874
  br label %if.end832, !dbg !8875

if.else37:                                        ; preds = %if.end33
  %41 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8876
  %call38 = call i64 @spi_nor_get_min_prot_length_sr(%struct.spi_nor* %41) #9, !dbg !8878
  store i64 %call38, i64* %min_prot_len, align 8, !dbg !8879
  %42 = load i64, i64* %lock_len, align 8, !dbg !8880
  %43 = call i1 @llvm.is.constant.i64(i64 %42), !dbg !8880
  br i1 %43, label %cond.true, label %cond.false415, !dbg !8880

cond.true:                                        ; preds = %if.else37
  %44 = load i64, i64* %lock_len, align 8, !dbg !8880
  %45 = call i1 @llvm.is.constant.i64(i64 %44), !dbg !8880
  br i1 %45, label %cond.true39, label %cond.false412, !dbg !8880

cond.true39:                                      ; preds = %cond.true
  %46 = load i64, i64* %lock_len, align 8, !dbg !8880
  %cmp40 = icmp slt i64 %46, 2, !dbg !8880
  br i1 %cmp40, label %cond.true42, label %cond.false, !dbg !8880

cond.true42:                                      ; preds = %cond.true39
  br label %cond.end410, !dbg !8880

cond.false:                                       ; preds = %cond.true39
  %47 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and43 = and i64 %47, -9223372036854775808, !dbg !8880
  %tobool44 = icmp ne i64 %and43, 0, !dbg !8880
  br i1 %tobool44, label %cond.true45, label %cond.false46, !dbg !8880

cond.true45:                                      ; preds = %cond.false
  br label %cond.end408, !dbg !8880

cond.false46:                                     ; preds = %cond.false
  %48 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and47 = and i64 %48, 4611686018427387904, !dbg !8880
  %tobool48 = icmp ne i64 %and47, 0, !dbg !8880
  br i1 %tobool48, label %cond.true49, label %cond.false50, !dbg !8880

cond.true49:                                      ; preds = %cond.false46
  br label %cond.end406, !dbg !8880

cond.false50:                                     ; preds = %cond.false46
  %49 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and51 = and i64 %49, 2305843009213693952, !dbg !8880
  %tobool52 = icmp ne i64 %and51, 0, !dbg !8880
  br i1 %tobool52, label %cond.true53, label %cond.false54, !dbg !8880

cond.true53:                                      ; preds = %cond.false50
  br label %cond.end404, !dbg !8880

cond.false54:                                     ; preds = %cond.false50
  %50 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and55 = and i64 %50, 1152921504606846976, !dbg !8880
  %tobool56 = icmp ne i64 %and55, 0, !dbg !8880
  br i1 %tobool56, label %cond.true57, label %cond.false58, !dbg !8880

cond.true57:                                      ; preds = %cond.false54
  br label %cond.end402, !dbg !8880

cond.false58:                                     ; preds = %cond.false54
  %51 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and59 = and i64 %51, 576460752303423488, !dbg !8880
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8880
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8880

cond.true61:                                      ; preds = %cond.false58
  br label %cond.end400, !dbg !8880

cond.false62:                                     ; preds = %cond.false58
  %52 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and63 = and i64 %52, 288230376151711744, !dbg !8880
  %tobool64 = icmp ne i64 %and63, 0, !dbg !8880
  br i1 %tobool64, label %cond.true65, label %cond.false66, !dbg !8880

cond.true65:                                      ; preds = %cond.false62
  br label %cond.end398, !dbg !8880

cond.false66:                                     ; preds = %cond.false62
  %53 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and67 = and i64 %53, 144115188075855872, !dbg !8880
  %tobool68 = icmp ne i64 %and67, 0, !dbg !8880
  br i1 %tobool68, label %cond.true69, label %cond.false70, !dbg !8880

cond.true69:                                      ; preds = %cond.false66
  br label %cond.end396, !dbg !8880

cond.false70:                                     ; preds = %cond.false66
  %54 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and71 = and i64 %54, 72057594037927936, !dbg !8880
  %tobool72 = icmp ne i64 %and71, 0, !dbg !8880
  br i1 %tobool72, label %cond.true73, label %cond.false74, !dbg !8880

cond.true73:                                      ; preds = %cond.false70
  br label %cond.end394, !dbg !8880

cond.false74:                                     ; preds = %cond.false70
  %55 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and75 = and i64 %55, 36028797018963968, !dbg !8880
  %tobool76 = icmp ne i64 %and75, 0, !dbg !8880
  br i1 %tobool76, label %cond.true77, label %cond.false78, !dbg !8880

cond.true77:                                      ; preds = %cond.false74
  br label %cond.end392, !dbg !8880

cond.false78:                                     ; preds = %cond.false74
  %56 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and79 = and i64 %56, 18014398509481984, !dbg !8880
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8880
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8880

cond.true81:                                      ; preds = %cond.false78
  br label %cond.end390, !dbg !8880

cond.false82:                                     ; preds = %cond.false78
  %57 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and83 = and i64 %57, 9007199254740992, !dbg !8880
  %tobool84 = icmp ne i64 %and83, 0, !dbg !8880
  br i1 %tobool84, label %cond.true85, label %cond.false86, !dbg !8880

cond.true85:                                      ; preds = %cond.false82
  br label %cond.end388, !dbg !8880

cond.false86:                                     ; preds = %cond.false82
  %58 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and87 = and i64 %58, 4503599627370496, !dbg !8880
  %tobool88 = icmp ne i64 %and87, 0, !dbg !8880
  br i1 %tobool88, label %cond.true89, label %cond.false90, !dbg !8880

cond.true89:                                      ; preds = %cond.false86
  br label %cond.end386, !dbg !8880

cond.false90:                                     ; preds = %cond.false86
  %59 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and91 = and i64 %59, 2251799813685248, !dbg !8880
  %tobool92 = icmp ne i64 %and91, 0, !dbg !8880
  br i1 %tobool92, label %cond.true93, label %cond.false94, !dbg !8880

cond.true93:                                      ; preds = %cond.false90
  br label %cond.end384, !dbg !8880

cond.false94:                                     ; preds = %cond.false90
  %60 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and95 = and i64 %60, 1125899906842624, !dbg !8880
  %tobool96 = icmp ne i64 %and95, 0, !dbg !8880
  br i1 %tobool96, label %cond.true97, label %cond.false98, !dbg !8880

cond.true97:                                      ; preds = %cond.false94
  br label %cond.end382, !dbg !8880

cond.false98:                                     ; preds = %cond.false94
  %61 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and99 = and i64 %61, 562949953421312, !dbg !8880
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8880
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8880

cond.true101:                                     ; preds = %cond.false98
  br label %cond.end380, !dbg !8880

cond.false102:                                    ; preds = %cond.false98
  %62 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and103 = and i64 %62, 281474976710656, !dbg !8880
  %tobool104 = icmp ne i64 %and103, 0, !dbg !8880
  br i1 %tobool104, label %cond.true105, label %cond.false106, !dbg !8880

cond.true105:                                     ; preds = %cond.false102
  br label %cond.end378, !dbg !8880

cond.false106:                                    ; preds = %cond.false102
  %63 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and107 = and i64 %63, 140737488355328, !dbg !8880
  %tobool108 = icmp ne i64 %and107, 0, !dbg !8880
  br i1 %tobool108, label %cond.true109, label %cond.false110, !dbg !8880

cond.true109:                                     ; preds = %cond.false106
  br label %cond.end376, !dbg !8880

cond.false110:                                    ; preds = %cond.false106
  %64 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and111 = and i64 %64, 70368744177664, !dbg !8880
  %tobool112 = icmp ne i64 %and111, 0, !dbg !8880
  br i1 %tobool112, label %cond.true113, label %cond.false114, !dbg !8880

cond.true113:                                     ; preds = %cond.false110
  br label %cond.end374, !dbg !8880

cond.false114:                                    ; preds = %cond.false110
  %65 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and115 = and i64 %65, 35184372088832, !dbg !8880
  %tobool116 = icmp ne i64 %and115, 0, !dbg !8880
  br i1 %tobool116, label %cond.true117, label %cond.false118, !dbg !8880

cond.true117:                                     ; preds = %cond.false114
  br label %cond.end372, !dbg !8880

cond.false118:                                    ; preds = %cond.false114
  %66 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and119 = and i64 %66, 17592186044416, !dbg !8880
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8880
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8880

cond.true121:                                     ; preds = %cond.false118
  br label %cond.end370, !dbg !8880

cond.false122:                                    ; preds = %cond.false118
  %67 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and123 = and i64 %67, 8796093022208, !dbg !8880
  %tobool124 = icmp ne i64 %and123, 0, !dbg !8880
  br i1 %tobool124, label %cond.true125, label %cond.false126, !dbg !8880

cond.true125:                                     ; preds = %cond.false122
  br label %cond.end368, !dbg !8880

cond.false126:                                    ; preds = %cond.false122
  %68 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and127 = and i64 %68, 4398046511104, !dbg !8880
  %tobool128 = icmp ne i64 %and127, 0, !dbg !8880
  br i1 %tobool128, label %cond.true129, label %cond.false130, !dbg !8880

cond.true129:                                     ; preds = %cond.false126
  br label %cond.end366, !dbg !8880

cond.false130:                                    ; preds = %cond.false126
  %69 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and131 = and i64 %69, 2199023255552, !dbg !8880
  %tobool132 = icmp ne i64 %and131, 0, !dbg !8880
  br i1 %tobool132, label %cond.true133, label %cond.false134, !dbg !8880

cond.true133:                                     ; preds = %cond.false130
  br label %cond.end364, !dbg !8880

cond.false134:                                    ; preds = %cond.false130
  %70 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and135 = and i64 %70, 1099511627776, !dbg !8880
  %tobool136 = icmp ne i64 %and135, 0, !dbg !8880
  br i1 %tobool136, label %cond.true137, label %cond.false138, !dbg !8880

cond.true137:                                     ; preds = %cond.false134
  br label %cond.end362, !dbg !8880

cond.false138:                                    ; preds = %cond.false134
  %71 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and139 = and i64 %71, 549755813888, !dbg !8880
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8880
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8880

cond.true141:                                     ; preds = %cond.false138
  br label %cond.end360, !dbg !8880

cond.false142:                                    ; preds = %cond.false138
  %72 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and143 = and i64 %72, 274877906944, !dbg !8880
  %tobool144 = icmp ne i64 %and143, 0, !dbg !8880
  br i1 %tobool144, label %cond.true145, label %cond.false146, !dbg !8880

cond.true145:                                     ; preds = %cond.false142
  br label %cond.end358, !dbg !8880

cond.false146:                                    ; preds = %cond.false142
  %73 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and147 = and i64 %73, 137438953472, !dbg !8880
  %tobool148 = icmp ne i64 %and147, 0, !dbg !8880
  br i1 %tobool148, label %cond.true149, label %cond.false150, !dbg !8880

cond.true149:                                     ; preds = %cond.false146
  br label %cond.end356, !dbg !8880

cond.false150:                                    ; preds = %cond.false146
  %74 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and151 = and i64 %74, 68719476736, !dbg !8880
  %tobool152 = icmp ne i64 %and151, 0, !dbg !8880
  br i1 %tobool152, label %cond.true153, label %cond.false154, !dbg !8880

cond.true153:                                     ; preds = %cond.false150
  br label %cond.end354, !dbg !8880

cond.false154:                                    ; preds = %cond.false150
  %75 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and155 = and i64 %75, 34359738368, !dbg !8880
  %tobool156 = icmp ne i64 %and155, 0, !dbg !8880
  br i1 %tobool156, label %cond.true157, label %cond.false158, !dbg !8880

cond.true157:                                     ; preds = %cond.false154
  br label %cond.end352, !dbg !8880

cond.false158:                                    ; preds = %cond.false154
  %76 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and159 = and i64 %76, 17179869184, !dbg !8880
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8880
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8880

cond.true161:                                     ; preds = %cond.false158
  br label %cond.end350, !dbg !8880

cond.false162:                                    ; preds = %cond.false158
  %77 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and163 = and i64 %77, 8589934592, !dbg !8880
  %tobool164 = icmp ne i64 %and163, 0, !dbg !8880
  br i1 %tobool164, label %cond.true165, label %cond.false166, !dbg !8880

cond.true165:                                     ; preds = %cond.false162
  br label %cond.end348, !dbg !8880

cond.false166:                                    ; preds = %cond.false162
  %78 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and167 = and i64 %78, 4294967296, !dbg !8880
  %tobool168 = icmp ne i64 %and167, 0, !dbg !8880
  br i1 %tobool168, label %cond.true169, label %cond.false170, !dbg !8880

cond.true169:                                     ; preds = %cond.false166
  br label %cond.end346, !dbg !8880

cond.false170:                                    ; preds = %cond.false166
  %79 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and171 = and i64 %79, 2147483648, !dbg !8880
  %tobool172 = icmp ne i64 %and171, 0, !dbg !8880
  br i1 %tobool172, label %cond.true173, label %cond.false174, !dbg !8880

cond.true173:                                     ; preds = %cond.false170
  br label %cond.end344, !dbg !8880

cond.false174:                                    ; preds = %cond.false170
  %80 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and175 = and i64 %80, 1073741824, !dbg !8880
  %tobool176 = icmp ne i64 %and175, 0, !dbg !8880
  br i1 %tobool176, label %cond.true177, label %cond.false178, !dbg !8880

cond.true177:                                     ; preds = %cond.false174
  br label %cond.end342, !dbg !8880

cond.false178:                                    ; preds = %cond.false174
  %81 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and179 = and i64 %81, 536870912, !dbg !8880
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8880
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8880

cond.true181:                                     ; preds = %cond.false178
  br label %cond.end340, !dbg !8880

cond.false182:                                    ; preds = %cond.false178
  %82 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and183 = and i64 %82, 268435456, !dbg !8880
  %tobool184 = icmp ne i64 %and183, 0, !dbg !8880
  br i1 %tobool184, label %cond.true185, label %cond.false186, !dbg !8880

cond.true185:                                     ; preds = %cond.false182
  br label %cond.end338, !dbg !8880

cond.false186:                                    ; preds = %cond.false182
  %83 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and187 = and i64 %83, 134217728, !dbg !8880
  %tobool188 = icmp ne i64 %and187, 0, !dbg !8880
  br i1 %tobool188, label %cond.true189, label %cond.false190, !dbg !8880

cond.true189:                                     ; preds = %cond.false186
  br label %cond.end336, !dbg !8880

cond.false190:                                    ; preds = %cond.false186
  %84 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and191 = and i64 %84, 67108864, !dbg !8880
  %tobool192 = icmp ne i64 %and191, 0, !dbg !8880
  br i1 %tobool192, label %cond.true193, label %cond.false194, !dbg !8880

cond.true193:                                     ; preds = %cond.false190
  br label %cond.end334, !dbg !8880

cond.false194:                                    ; preds = %cond.false190
  %85 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and195 = and i64 %85, 33554432, !dbg !8880
  %tobool196 = icmp ne i64 %and195, 0, !dbg !8880
  br i1 %tobool196, label %cond.true197, label %cond.false198, !dbg !8880

cond.true197:                                     ; preds = %cond.false194
  br label %cond.end332, !dbg !8880

cond.false198:                                    ; preds = %cond.false194
  %86 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and199 = and i64 %86, 16777216, !dbg !8880
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8880
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8880

cond.true201:                                     ; preds = %cond.false198
  br label %cond.end330, !dbg !8880

cond.false202:                                    ; preds = %cond.false198
  %87 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and203 = and i64 %87, 8388608, !dbg !8880
  %tobool204 = icmp ne i64 %and203, 0, !dbg !8880
  br i1 %tobool204, label %cond.true205, label %cond.false206, !dbg !8880

cond.true205:                                     ; preds = %cond.false202
  br label %cond.end328, !dbg !8880

cond.false206:                                    ; preds = %cond.false202
  %88 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and207 = and i64 %88, 4194304, !dbg !8880
  %tobool208 = icmp ne i64 %and207, 0, !dbg !8880
  br i1 %tobool208, label %cond.true209, label %cond.false210, !dbg !8880

cond.true209:                                     ; preds = %cond.false206
  br label %cond.end326, !dbg !8880

cond.false210:                                    ; preds = %cond.false206
  %89 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and211 = and i64 %89, 2097152, !dbg !8880
  %tobool212 = icmp ne i64 %and211, 0, !dbg !8880
  br i1 %tobool212, label %cond.true213, label %cond.false214, !dbg !8880

cond.true213:                                     ; preds = %cond.false210
  br label %cond.end324, !dbg !8880

cond.false214:                                    ; preds = %cond.false210
  %90 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and215 = and i64 %90, 1048576, !dbg !8880
  %tobool216 = icmp ne i64 %and215, 0, !dbg !8880
  br i1 %tobool216, label %cond.true217, label %cond.false218, !dbg !8880

cond.true217:                                     ; preds = %cond.false214
  br label %cond.end322, !dbg !8880

cond.false218:                                    ; preds = %cond.false214
  %91 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and219 = and i64 %91, 524288, !dbg !8880
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8880
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8880

cond.true221:                                     ; preds = %cond.false218
  br label %cond.end320, !dbg !8880

cond.false222:                                    ; preds = %cond.false218
  %92 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and223 = and i64 %92, 262144, !dbg !8880
  %tobool224 = icmp ne i64 %and223, 0, !dbg !8880
  br i1 %tobool224, label %cond.true225, label %cond.false226, !dbg !8880

cond.true225:                                     ; preds = %cond.false222
  br label %cond.end318, !dbg !8880

cond.false226:                                    ; preds = %cond.false222
  %93 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and227 = and i64 %93, 131072, !dbg !8880
  %tobool228 = icmp ne i64 %and227, 0, !dbg !8880
  br i1 %tobool228, label %cond.true229, label %cond.false230, !dbg !8880

cond.true229:                                     ; preds = %cond.false226
  br label %cond.end316, !dbg !8880

cond.false230:                                    ; preds = %cond.false226
  %94 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and231 = and i64 %94, 65536, !dbg !8880
  %tobool232 = icmp ne i64 %and231, 0, !dbg !8880
  br i1 %tobool232, label %cond.true233, label %cond.false234, !dbg !8880

cond.true233:                                     ; preds = %cond.false230
  br label %cond.end314, !dbg !8880

cond.false234:                                    ; preds = %cond.false230
  %95 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and235 = and i64 %95, 32768, !dbg !8880
  %tobool236 = icmp ne i64 %and235, 0, !dbg !8880
  br i1 %tobool236, label %cond.true237, label %cond.false238, !dbg !8880

cond.true237:                                     ; preds = %cond.false234
  br label %cond.end312, !dbg !8880

cond.false238:                                    ; preds = %cond.false234
  %96 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and239 = and i64 %96, 16384, !dbg !8880
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8880
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8880

cond.true241:                                     ; preds = %cond.false238
  br label %cond.end310, !dbg !8880

cond.false242:                                    ; preds = %cond.false238
  %97 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and243 = and i64 %97, 8192, !dbg !8880
  %tobool244 = icmp ne i64 %and243, 0, !dbg !8880
  br i1 %tobool244, label %cond.true245, label %cond.false246, !dbg !8880

cond.true245:                                     ; preds = %cond.false242
  br label %cond.end308, !dbg !8880

cond.false246:                                    ; preds = %cond.false242
  %98 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and247 = and i64 %98, 4096, !dbg !8880
  %tobool248 = icmp ne i64 %and247, 0, !dbg !8880
  br i1 %tobool248, label %cond.true249, label %cond.false250, !dbg !8880

cond.true249:                                     ; preds = %cond.false246
  br label %cond.end306, !dbg !8880

cond.false250:                                    ; preds = %cond.false246
  %99 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and251 = and i64 %99, 2048, !dbg !8880
  %tobool252 = icmp ne i64 %and251, 0, !dbg !8880
  br i1 %tobool252, label %cond.true253, label %cond.false254, !dbg !8880

cond.true253:                                     ; preds = %cond.false250
  br label %cond.end304, !dbg !8880

cond.false254:                                    ; preds = %cond.false250
  %100 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and255 = and i64 %100, 1024, !dbg !8880
  %tobool256 = icmp ne i64 %and255, 0, !dbg !8880
  br i1 %tobool256, label %cond.true257, label %cond.false258, !dbg !8880

cond.true257:                                     ; preds = %cond.false254
  br label %cond.end302, !dbg !8880

cond.false258:                                    ; preds = %cond.false254
  %101 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and259 = and i64 %101, 512, !dbg !8880
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8880
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8880

cond.true261:                                     ; preds = %cond.false258
  br label %cond.end300, !dbg !8880

cond.false262:                                    ; preds = %cond.false258
  %102 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and263 = and i64 %102, 256, !dbg !8880
  %tobool264 = icmp ne i64 %and263, 0, !dbg !8880
  br i1 %tobool264, label %cond.true265, label %cond.false266, !dbg !8880

cond.true265:                                     ; preds = %cond.false262
  br label %cond.end298, !dbg !8880

cond.false266:                                    ; preds = %cond.false262
  %103 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and267 = and i64 %103, 128, !dbg !8880
  %tobool268 = icmp ne i64 %and267, 0, !dbg !8880
  br i1 %tobool268, label %cond.true269, label %cond.false270, !dbg !8880

cond.true269:                                     ; preds = %cond.false266
  br label %cond.end296, !dbg !8880

cond.false270:                                    ; preds = %cond.false266
  %104 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and271 = and i64 %104, 64, !dbg !8880
  %tobool272 = icmp ne i64 %and271, 0, !dbg !8880
  br i1 %tobool272, label %cond.true273, label %cond.false274, !dbg !8880

cond.true273:                                     ; preds = %cond.false270
  br label %cond.end294, !dbg !8880

cond.false274:                                    ; preds = %cond.false270
  %105 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and275 = and i64 %105, 32, !dbg !8880
  %tobool276 = icmp ne i64 %and275, 0, !dbg !8880
  br i1 %tobool276, label %cond.true277, label %cond.false278, !dbg !8880

cond.true277:                                     ; preds = %cond.false274
  br label %cond.end292, !dbg !8880

cond.false278:                                    ; preds = %cond.false274
  %106 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and279 = and i64 %106, 16, !dbg !8880
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8880
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8880

cond.true281:                                     ; preds = %cond.false278
  br label %cond.end290, !dbg !8880

cond.false282:                                    ; preds = %cond.false278
  %107 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and283 = and i64 %107, 8, !dbg !8880
  %tobool284 = icmp ne i64 %and283, 0, !dbg !8880
  br i1 %tobool284, label %cond.true285, label %cond.false286, !dbg !8880

cond.true285:                                     ; preds = %cond.false282
  br label %cond.end, !dbg !8880

cond.false286:                                    ; preds = %cond.false282
  %108 = load i64, i64* %lock_len, align 8, !dbg !8880
  %and287 = and i64 %108, 4, !dbg !8880
  %tobool288 = icmp ne i64 %and287, 0, !dbg !8880
  %109 = zext i1 %tobool288 to i64, !dbg !8880
  %cond = select i1 %tobool288, i32 2, i32 1, !dbg !8880
  br label %cond.end, !dbg !8880

cond.end:                                         ; preds = %cond.false286, %cond.true285
  %cond289 = phi i32 [ 3, %cond.true285 ], [ %cond, %cond.false286 ], !dbg !8880
  br label %cond.end290, !dbg !8880

cond.end290:                                      ; preds = %cond.end, %cond.true281
  %cond291 = phi i32 [ 4, %cond.true281 ], [ %cond289, %cond.end ], !dbg !8880
  br label %cond.end292, !dbg !8880

cond.end292:                                      ; preds = %cond.end290, %cond.true277
  %cond293 = phi i32 [ 5, %cond.true277 ], [ %cond291, %cond.end290 ], !dbg !8880
  br label %cond.end294, !dbg !8880

cond.end294:                                      ; preds = %cond.end292, %cond.true273
  %cond295 = phi i32 [ 6, %cond.true273 ], [ %cond293, %cond.end292 ], !dbg !8880
  br label %cond.end296, !dbg !8880

cond.end296:                                      ; preds = %cond.end294, %cond.true269
  %cond297 = phi i32 [ 7, %cond.true269 ], [ %cond295, %cond.end294 ], !dbg !8880
  br label %cond.end298, !dbg !8880

cond.end298:                                      ; preds = %cond.end296, %cond.true265
  %cond299 = phi i32 [ 8, %cond.true265 ], [ %cond297, %cond.end296 ], !dbg !8880
  br label %cond.end300, !dbg !8880

cond.end300:                                      ; preds = %cond.end298, %cond.true261
  %cond301 = phi i32 [ 9, %cond.true261 ], [ %cond299, %cond.end298 ], !dbg !8880
  br label %cond.end302, !dbg !8880

cond.end302:                                      ; preds = %cond.end300, %cond.true257
  %cond303 = phi i32 [ 10, %cond.true257 ], [ %cond301, %cond.end300 ], !dbg !8880
  br label %cond.end304, !dbg !8880

cond.end304:                                      ; preds = %cond.end302, %cond.true253
  %cond305 = phi i32 [ 11, %cond.true253 ], [ %cond303, %cond.end302 ], !dbg !8880
  br label %cond.end306, !dbg !8880

cond.end306:                                      ; preds = %cond.end304, %cond.true249
  %cond307 = phi i32 [ 12, %cond.true249 ], [ %cond305, %cond.end304 ], !dbg !8880
  br label %cond.end308, !dbg !8880

cond.end308:                                      ; preds = %cond.end306, %cond.true245
  %cond309 = phi i32 [ 13, %cond.true245 ], [ %cond307, %cond.end306 ], !dbg !8880
  br label %cond.end310, !dbg !8880

cond.end310:                                      ; preds = %cond.end308, %cond.true241
  %cond311 = phi i32 [ 14, %cond.true241 ], [ %cond309, %cond.end308 ], !dbg !8880
  br label %cond.end312, !dbg !8880

cond.end312:                                      ; preds = %cond.end310, %cond.true237
  %cond313 = phi i32 [ 15, %cond.true237 ], [ %cond311, %cond.end310 ], !dbg !8880
  br label %cond.end314, !dbg !8880

cond.end314:                                      ; preds = %cond.end312, %cond.true233
  %cond315 = phi i32 [ 16, %cond.true233 ], [ %cond313, %cond.end312 ], !dbg !8880
  br label %cond.end316, !dbg !8880

cond.end316:                                      ; preds = %cond.end314, %cond.true229
  %cond317 = phi i32 [ 17, %cond.true229 ], [ %cond315, %cond.end314 ], !dbg !8880
  br label %cond.end318, !dbg !8880

cond.end318:                                      ; preds = %cond.end316, %cond.true225
  %cond319 = phi i32 [ 18, %cond.true225 ], [ %cond317, %cond.end316 ], !dbg !8880
  br label %cond.end320, !dbg !8880

cond.end320:                                      ; preds = %cond.end318, %cond.true221
  %cond321 = phi i32 [ 19, %cond.true221 ], [ %cond319, %cond.end318 ], !dbg !8880
  br label %cond.end322, !dbg !8880

cond.end322:                                      ; preds = %cond.end320, %cond.true217
  %cond323 = phi i32 [ 20, %cond.true217 ], [ %cond321, %cond.end320 ], !dbg !8880
  br label %cond.end324, !dbg !8880

cond.end324:                                      ; preds = %cond.end322, %cond.true213
  %cond325 = phi i32 [ 21, %cond.true213 ], [ %cond323, %cond.end322 ], !dbg !8880
  br label %cond.end326, !dbg !8880

cond.end326:                                      ; preds = %cond.end324, %cond.true209
  %cond327 = phi i32 [ 22, %cond.true209 ], [ %cond325, %cond.end324 ], !dbg !8880
  br label %cond.end328, !dbg !8880

cond.end328:                                      ; preds = %cond.end326, %cond.true205
  %cond329 = phi i32 [ 23, %cond.true205 ], [ %cond327, %cond.end326 ], !dbg !8880
  br label %cond.end330, !dbg !8880

cond.end330:                                      ; preds = %cond.end328, %cond.true201
  %cond331 = phi i32 [ 24, %cond.true201 ], [ %cond329, %cond.end328 ], !dbg !8880
  br label %cond.end332, !dbg !8880

cond.end332:                                      ; preds = %cond.end330, %cond.true197
  %cond333 = phi i32 [ 25, %cond.true197 ], [ %cond331, %cond.end330 ], !dbg !8880
  br label %cond.end334, !dbg !8880

cond.end334:                                      ; preds = %cond.end332, %cond.true193
  %cond335 = phi i32 [ 26, %cond.true193 ], [ %cond333, %cond.end332 ], !dbg !8880
  br label %cond.end336, !dbg !8880

cond.end336:                                      ; preds = %cond.end334, %cond.true189
  %cond337 = phi i32 [ 27, %cond.true189 ], [ %cond335, %cond.end334 ], !dbg !8880
  br label %cond.end338, !dbg !8880

cond.end338:                                      ; preds = %cond.end336, %cond.true185
  %cond339 = phi i32 [ 28, %cond.true185 ], [ %cond337, %cond.end336 ], !dbg !8880
  br label %cond.end340, !dbg !8880

cond.end340:                                      ; preds = %cond.end338, %cond.true181
  %cond341 = phi i32 [ 29, %cond.true181 ], [ %cond339, %cond.end338 ], !dbg !8880
  br label %cond.end342, !dbg !8880

cond.end342:                                      ; preds = %cond.end340, %cond.true177
  %cond343 = phi i32 [ 30, %cond.true177 ], [ %cond341, %cond.end340 ], !dbg !8880
  br label %cond.end344, !dbg !8880

cond.end344:                                      ; preds = %cond.end342, %cond.true173
  %cond345 = phi i32 [ 31, %cond.true173 ], [ %cond343, %cond.end342 ], !dbg !8880
  br label %cond.end346, !dbg !8880

cond.end346:                                      ; preds = %cond.end344, %cond.true169
  %cond347 = phi i32 [ 32, %cond.true169 ], [ %cond345, %cond.end344 ], !dbg !8880
  br label %cond.end348, !dbg !8880

cond.end348:                                      ; preds = %cond.end346, %cond.true165
  %cond349 = phi i32 [ 33, %cond.true165 ], [ %cond347, %cond.end346 ], !dbg !8880
  br label %cond.end350, !dbg !8880

cond.end350:                                      ; preds = %cond.end348, %cond.true161
  %cond351 = phi i32 [ 34, %cond.true161 ], [ %cond349, %cond.end348 ], !dbg !8880
  br label %cond.end352, !dbg !8880

cond.end352:                                      ; preds = %cond.end350, %cond.true157
  %cond353 = phi i32 [ 35, %cond.true157 ], [ %cond351, %cond.end350 ], !dbg !8880
  br label %cond.end354, !dbg !8880

cond.end354:                                      ; preds = %cond.end352, %cond.true153
  %cond355 = phi i32 [ 36, %cond.true153 ], [ %cond353, %cond.end352 ], !dbg !8880
  br label %cond.end356, !dbg !8880

cond.end356:                                      ; preds = %cond.end354, %cond.true149
  %cond357 = phi i32 [ 37, %cond.true149 ], [ %cond355, %cond.end354 ], !dbg !8880
  br label %cond.end358, !dbg !8880

cond.end358:                                      ; preds = %cond.end356, %cond.true145
  %cond359 = phi i32 [ 38, %cond.true145 ], [ %cond357, %cond.end356 ], !dbg !8880
  br label %cond.end360, !dbg !8880

cond.end360:                                      ; preds = %cond.end358, %cond.true141
  %cond361 = phi i32 [ 39, %cond.true141 ], [ %cond359, %cond.end358 ], !dbg !8880
  br label %cond.end362, !dbg !8880

cond.end362:                                      ; preds = %cond.end360, %cond.true137
  %cond363 = phi i32 [ 40, %cond.true137 ], [ %cond361, %cond.end360 ], !dbg !8880
  br label %cond.end364, !dbg !8880

cond.end364:                                      ; preds = %cond.end362, %cond.true133
  %cond365 = phi i32 [ 41, %cond.true133 ], [ %cond363, %cond.end362 ], !dbg !8880
  br label %cond.end366, !dbg !8880

cond.end366:                                      ; preds = %cond.end364, %cond.true129
  %cond367 = phi i32 [ 42, %cond.true129 ], [ %cond365, %cond.end364 ], !dbg !8880
  br label %cond.end368, !dbg !8880

cond.end368:                                      ; preds = %cond.end366, %cond.true125
  %cond369 = phi i32 [ 43, %cond.true125 ], [ %cond367, %cond.end366 ], !dbg !8880
  br label %cond.end370, !dbg !8880

cond.end370:                                      ; preds = %cond.end368, %cond.true121
  %cond371 = phi i32 [ 44, %cond.true121 ], [ %cond369, %cond.end368 ], !dbg !8880
  br label %cond.end372, !dbg !8880

cond.end372:                                      ; preds = %cond.end370, %cond.true117
  %cond373 = phi i32 [ 45, %cond.true117 ], [ %cond371, %cond.end370 ], !dbg !8880
  br label %cond.end374, !dbg !8880

cond.end374:                                      ; preds = %cond.end372, %cond.true113
  %cond375 = phi i32 [ 46, %cond.true113 ], [ %cond373, %cond.end372 ], !dbg !8880
  br label %cond.end376, !dbg !8880

cond.end376:                                      ; preds = %cond.end374, %cond.true109
  %cond377 = phi i32 [ 47, %cond.true109 ], [ %cond375, %cond.end374 ], !dbg !8880
  br label %cond.end378, !dbg !8880

cond.end378:                                      ; preds = %cond.end376, %cond.true105
  %cond379 = phi i32 [ 48, %cond.true105 ], [ %cond377, %cond.end376 ], !dbg !8880
  br label %cond.end380, !dbg !8880

cond.end380:                                      ; preds = %cond.end378, %cond.true101
  %cond381 = phi i32 [ 49, %cond.true101 ], [ %cond379, %cond.end378 ], !dbg !8880
  br label %cond.end382, !dbg !8880

cond.end382:                                      ; preds = %cond.end380, %cond.true97
  %cond383 = phi i32 [ 50, %cond.true97 ], [ %cond381, %cond.end380 ], !dbg !8880
  br label %cond.end384, !dbg !8880

cond.end384:                                      ; preds = %cond.end382, %cond.true93
  %cond385 = phi i32 [ 51, %cond.true93 ], [ %cond383, %cond.end382 ], !dbg !8880
  br label %cond.end386, !dbg !8880

cond.end386:                                      ; preds = %cond.end384, %cond.true89
  %cond387 = phi i32 [ 52, %cond.true89 ], [ %cond385, %cond.end384 ], !dbg !8880
  br label %cond.end388, !dbg !8880

cond.end388:                                      ; preds = %cond.end386, %cond.true85
  %cond389 = phi i32 [ 53, %cond.true85 ], [ %cond387, %cond.end386 ], !dbg !8880
  br label %cond.end390, !dbg !8880

cond.end390:                                      ; preds = %cond.end388, %cond.true81
  %cond391 = phi i32 [ 54, %cond.true81 ], [ %cond389, %cond.end388 ], !dbg !8880
  br label %cond.end392, !dbg !8880

cond.end392:                                      ; preds = %cond.end390, %cond.true77
  %cond393 = phi i32 [ 55, %cond.true77 ], [ %cond391, %cond.end390 ], !dbg !8880
  br label %cond.end394, !dbg !8880

cond.end394:                                      ; preds = %cond.end392, %cond.true73
  %cond395 = phi i32 [ 56, %cond.true73 ], [ %cond393, %cond.end392 ], !dbg !8880
  br label %cond.end396, !dbg !8880

cond.end396:                                      ; preds = %cond.end394, %cond.true69
  %cond397 = phi i32 [ 57, %cond.true69 ], [ %cond395, %cond.end394 ], !dbg !8880
  br label %cond.end398, !dbg !8880

cond.end398:                                      ; preds = %cond.end396, %cond.true65
  %cond399 = phi i32 [ 58, %cond.true65 ], [ %cond397, %cond.end396 ], !dbg !8880
  br label %cond.end400, !dbg !8880

cond.end400:                                      ; preds = %cond.end398, %cond.true61
  %cond401 = phi i32 [ 59, %cond.true61 ], [ %cond399, %cond.end398 ], !dbg !8880
  br label %cond.end402, !dbg !8880

cond.end402:                                      ; preds = %cond.end400, %cond.true57
  %cond403 = phi i32 [ 60, %cond.true57 ], [ %cond401, %cond.end400 ], !dbg !8880
  br label %cond.end404, !dbg !8880

cond.end404:                                      ; preds = %cond.end402, %cond.true53
  %cond405 = phi i32 [ 61, %cond.true53 ], [ %cond403, %cond.end402 ], !dbg !8880
  br label %cond.end406, !dbg !8880

cond.end406:                                      ; preds = %cond.end404, %cond.true49
  %cond407 = phi i32 [ 62, %cond.true49 ], [ %cond405, %cond.end404 ], !dbg !8880
  br label %cond.end408, !dbg !8880

cond.end408:                                      ; preds = %cond.end406, %cond.true45
  %cond409 = phi i32 [ 63, %cond.true45 ], [ %cond407, %cond.end406 ], !dbg !8880
  br label %cond.end410, !dbg !8880

cond.end410:                                      ; preds = %cond.end408, %cond.true42
  %cond411 = phi i32 [ 0, %cond.true42 ], [ %cond409, %cond.end408 ], !dbg !8880
  br label %cond.end413, !dbg !8880

cond.false412:                                    ; preds = %cond.true
  br label %cond.end413, !dbg !8880

cond.end413:                                      ; preds = %cond.false412, %cond.end410
  %cond414 = phi i32 [ %cond411, %cond.end410 ], [ -1, %cond.false412 ], !dbg !8880
  br label %cond.end417, !dbg !8880

cond.false415:                                    ; preds = %if.else37
  %110 = load i64, i64* %lock_len, align 8, !dbg !8880
  %call416 = call i32 @__ilog2_u64(i64 %110) #14, !dbg !8880
  br label %cond.end417, !dbg !8880

cond.end417:                                      ; preds = %cond.false415, %cond.end413
  %cond418 = phi i32 [ %cond414, %cond.end413 ], [ %call416, %cond.false415 ], !dbg !8880
  %111 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %112 = call i1 @llvm.is.constant.i64(i64 %111), !dbg !8881
  br i1 %112, label %cond.true419, label %cond.false799, !dbg !8881

cond.true419:                                     ; preds = %cond.end417
  %113 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %114 = call i1 @llvm.is.constant.i64(i64 %113), !dbg !8881
  br i1 %114, label %cond.true420, label %cond.false796, !dbg !8881

cond.true420:                                     ; preds = %cond.true419
  %115 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %cmp421 = icmp ult i64 %115, 2, !dbg !8881
  br i1 %cmp421, label %cond.true423, label %cond.false424, !dbg !8881

cond.true423:                                     ; preds = %cond.true420
  br label %cond.end794, !dbg !8881

cond.false424:                                    ; preds = %cond.true420
  %116 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and425 = and i64 %116, -9223372036854775808, !dbg !8881
  %tobool426 = icmp ne i64 %and425, 0, !dbg !8881
  br i1 %tobool426, label %cond.true427, label %cond.false428, !dbg !8881

cond.true427:                                     ; preds = %cond.false424
  br label %cond.end792, !dbg !8881

cond.false428:                                    ; preds = %cond.false424
  %117 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and429 = and i64 %117, 4611686018427387904, !dbg !8881
  %tobool430 = icmp ne i64 %and429, 0, !dbg !8881
  br i1 %tobool430, label %cond.true431, label %cond.false432, !dbg !8881

cond.true431:                                     ; preds = %cond.false428
  br label %cond.end790, !dbg !8881

cond.false432:                                    ; preds = %cond.false428
  %118 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and433 = and i64 %118, 2305843009213693952, !dbg !8881
  %tobool434 = icmp ne i64 %and433, 0, !dbg !8881
  br i1 %tobool434, label %cond.true435, label %cond.false436, !dbg !8881

cond.true435:                                     ; preds = %cond.false432
  br label %cond.end788, !dbg !8881

cond.false436:                                    ; preds = %cond.false432
  %119 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and437 = and i64 %119, 1152921504606846976, !dbg !8881
  %tobool438 = icmp ne i64 %and437, 0, !dbg !8881
  br i1 %tobool438, label %cond.true439, label %cond.false440, !dbg !8881

cond.true439:                                     ; preds = %cond.false436
  br label %cond.end786, !dbg !8881

cond.false440:                                    ; preds = %cond.false436
  %120 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and441 = and i64 %120, 576460752303423488, !dbg !8881
  %tobool442 = icmp ne i64 %and441, 0, !dbg !8881
  br i1 %tobool442, label %cond.true443, label %cond.false444, !dbg !8881

cond.true443:                                     ; preds = %cond.false440
  br label %cond.end784, !dbg !8881

cond.false444:                                    ; preds = %cond.false440
  %121 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and445 = and i64 %121, 288230376151711744, !dbg !8881
  %tobool446 = icmp ne i64 %and445, 0, !dbg !8881
  br i1 %tobool446, label %cond.true447, label %cond.false448, !dbg !8881

cond.true447:                                     ; preds = %cond.false444
  br label %cond.end782, !dbg !8881

cond.false448:                                    ; preds = %cond.false444
  %122 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and449 = and i64 %122, 144115188075855872, !dbg !8881
  %tobool450 = icmp ne i64 %and449, 0, !dbg !8881
  br i1 %tobool450, label %cond.true451, label %cond.false452, !dbg !8881

cond.true451:                                     ; preds = %cond.false448
  br label %cond.end780, !dbg !8881

cond.false452:                                    ; preds = %cond.false448
  %123 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and453 = and i64 %123, 72057594037927936, !dbg !8881
  %tobool454 = icmp ne i64 %and453, 0, !dbg !8881
  br i1 %tobool454, label %cond.true455, label %cond.false456, !dbg !8881

cond.true455:                                     ; preds = %cond.false452
  br label %cond.end778, !dbg !8881

cond.false456:                                    ; preds = %cond.false452
  %124 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and457 = and i64 %124, 36028797018963968, !dbg !8881
  %tobool458 = icmp ne i64 %and457, 0, !dbg !8881
  br i1 %tobool458, label %cond.true459, label %cond.false460, !dbg !8881

cond.true459:                                     ; preds = %cond.false456
  br label %cond.end776, !dbg !8881

cond.false460:                                    ; preds = %cond.false456
  %125 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and461 = and i64 %125, 18014398509481984, !dbg !8881
  %tobool462 = icmp ne i64 %and461, 0, !dbg !8881
  br i1 %tobool462, label %cond.true463, label %cond.false464, !dbg !8881

cond.true463:                                     ; preds = %cond.false460
  br label %cond.end774, !dbg !8881

cond.false464:                                    ; preds = %cond.false460
  %126 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and465 = and i64 %126, 9007199254740992, !dbg !8881
  %tobool466 = icmp ne i64 %and465, 0, !dbg !8881
  br i1 %tobool466, label %cond.true467, label %cond.false468, !dbg !8881

cond.true467:                                     ; preds = %cond.false464
  br label %cond.end772, !dbg !8881

cond.false468:                                    ; preds = %cond.false464
  %127 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and469 = and i64 %127, 4503599627370496, !dbg !8881
  %tobool470 = icmp ne i64 %and469, 0, !dbg !8881
  br i1 %tobool470, label %cond.true471, label %cond.false472, !dbg !8881

cond.true471:                                     ; preds = %cond.false468
  br label %cond.end770, !dbg !8881

cond.false472:                                    ; preds = %cond.false468
  %128 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and473 = and i64 %128, 2251799813685248, !dbg !8881
  %tobool474 = icmp ne i64 %and473, 0, !dbg !8881
  br i1 %tobool474, label %cond.true475, label %cond.false476, !dbg !8881

cond.true475:                                     ; preds = %cond.false472
  br label %cond.end768, !dbg !8881

cond.false476:                                    ; preds = %cond.false472
  %129 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and477 = and i64 %129, 1125899906842624, !dbg !8881
  %tobool478 = icmp ne i64 %and477, 0, !dbg !8881
  br i1 %tobool478, label %cond.true479, label %cond.false480, !dbg !8881

cond.true479:                                     ; preds = %cond.false476
  br label %cond.end766, !dbg !8881

cond.false480:                                    ; preds = %cond.false476
  %130 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and481 = and i64 %130, 562949953421312, !dbg !8881
  %tobool482 = icmp ne i64 %and481, 0, !dbg !8881
  br i1 %tobool482, label %cond.true483, label %cond.false484, !dbg !8881

cond.true483:                                     ; preds = %cond.false480
  br label %cond.end764, !dbg !8881

cond.false484:                                    ; preds = %cond.false480
  %131 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and485 = and i64 %131, 281474976710656, !dbg !8881
  %tobool486 = icmp ne i64 %and485, 0, !dbg !8881
  br i1 %tobool486, label %cond.true487, label %cond.false488, !dbg !8881

cond.true487:                                     ; preds = %cond.false484
  br label %cond.end762, !dbg !8881

cond.false488:                                    ; preds = %cond.false484
  %132 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and489 = and i64 %132, 140737488355328, !dbg !8881
  %tobool490 = icmp ne i64 %and489, 0, !dbg !8881
  br i1 %tobool490, label %cond.true491, label %cond.false492, !dbg !8881

cond.true491:                                     ; preds = %cond.false488
  br label %cond.end760, !dbg !8881

cond.false492:                                    ; preds = %cond.false488
  %133 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and493 = and i64 %133, 70368744177664, !dbg !8881
  %tobool494 = icmp ne i64 %and493, 0, !dbg !8881
  br i1 %tobool494, label %cond.true495, label %cond.false496, !dbg !8881

cond.true495:                                     ; preds = %cond.false492
  br label %cond.end758, !dbg !8881

cond.false496:                                    ; preds = %cond.false492
  %134 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and497 = and i64 %134, 35184372088832, !dbg !8881
  %tobool498 = icmp ne i64 %and497, 0, !dbg !8881
  br i1 %tobool498, label %cond.true499, label %cond.false500, !dbg !8881

cond.true499:                                     ; preds = %cond.false496
  br label %cond.end756, !dbg !8881

cond.false500:                                    ; preds = %cond.false496
  %135 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and501 = and i64 %135, 17592186044416, !dbg !8881
  %tobool502 = icmp ne i64 %and501, 0, !dbg !8881
  br i1 %tobool502, label %cond.true503, label %cond.false504, !dbg !8881

cond.true503:                                     ; preds = %cond.false500
  br label %cond.end754, !dbg !8881

cond.false504:                                    ; preds = %cond.false500
  %136 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and505 = and i64 %136, 8796093022208, !dbg !8881
  %tobool506 = icmp ne i64 %and505, 0, !dbg !8881
  br i1 %tobool506, label %cond.true507, label %cond.false508, !dbg !8881

cond.true507:                                     ; preds = %cond.false504
  br label %cond.end752, !dbg !8881

cond.false508:                                    ; preds = %cond.false504
  %137 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and509 = and i64 %137, 4398046511104, !dbg !8881
  %tobool510 = icmp ne i64 %and509, 0, !dbg !8881
  br i1 %tobool510, label %cond.true511, label %cond.false512, !dbg !8881

cond.true511:                                     ; preds = %cond.false508
  br label %cond.end750, !dbg !8881

cond.false512:                                    ; preds = %cond.false508
  %138 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and513 = and i64 %138, 2199023255552, !dbg !8881
  %tobool514 = icmp ne i64 %and513, 0, !dbg !8881
  br i1 %tobool514, label %cond.true515, label %cond.false516, !dbg !8881

cond.true515:                                     ; preds = %cond.false512
  br label %cond.end748, !dbg !8881

cond.false516:                                    ; preds = %cond.false512
  %139 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and517 = and i64 %139, 1099511627776, !dbg !8881
  %tobool518 = icmp ne i64 %and517, 0, !dbg !8881
  br i1 %tobool518, label %cond.true519, label %cond.false520, !dbg !8881

cond.true519:                                     ; preds = %cond.false516
  br label %cond.end746, !dbg !8881

cond.false520:                                    ; preds = %cond.false516
  %140 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and521 = and i64 %140, 549755813888, !dbg !8881
  %tobool522 = icmp ne i64 %and521, 0, !dbg !8881
  br i1 %tobool522, label %cond.true523, label %cond.false524, !dbg !8881

cond.true523:                                     ; preds = %cond.false520
  br label %cond.end744, !dbg !8881

cond.false524:                                    ; preds = %cond.false520
  %141 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and525 = and i64 %141, 274877906944, !dbg !8881
  %tobool526 = icmp ne i64 %and525, 0, !dbg !8881
  br i1 %tobool526, label %cond.true527, label %cond.false528, !dbg !8881

cond.true527:                                     ; preds = %cond.false524
  br label %cond.end742, !dbg !8881

cond.false528:                                    ; preds = %cond.false524
  %142 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and529 = and i64 %142, 137438953472, !dbg !8881
  %tobool530 = icmp ne i64 %and529, 0, !dbg !8881
  br i1 %tobool530, label %cond.true531, label %cond.false532, !dbg !8881

cond.true531:                                     ; preds = %cond.false528
  br label %cond.end740, !dbg !8881

cond.false532:                                    ; preds = %cond.false528
  %143 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and533 = and i64 %143, 68719476736, !dbg !8881
  %tobool534 = icmp ne i64 %and533, 0, !dbg !8881
  br i1 %tobool534, label %cond.true535, label %cond.false536, !dbg !8881

cond.true535:                                     ; preds = %cond.false532
  br label %cond.end738, !dbg !8881

cond.false536:                                    ; preds = %cond.false532
  %144 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and537 = and i64 %144, 34359738368, !dbg !8881
  %tobool538 = icmp ne i64 %and537, 0, !dbg !8881
  br i1 %tobool538, label %cond.true539, label %cond.false540, !dbg !8881

cond.true539:                                     ; preds = %cond.false536
  br label %cond.end736, !dbg !8881

cond.false540:                                    ; preds = %cond.false536
  %145 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and541 = and i64 %145, 17179869184, !dbg !8881
  %tobool542 = icmp ne i64 %and541, 0, !dbg !8881
  br i1 %tobool542, label %cond.true543, label %cond.false544, !dbg !8881

cond.true543:                                     ; preds = %cond.false540
  br label %cond.end734, !dbg !8881

cond.false544:                                    ; preds = %cond.false540
  %146 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and545 = and i64 %146, 8589934592, !dbg !8881
  %tobool546 = icmp ne i64 %and545, 0, !dbg !8881
  br i1 %tobool546, label %cond.true547, label %cond.false548, !dbg !8881

cond.true547:                                     ; preds = %cond.false544
  br label %cond.end732, !dbg !8881

cond.false548:                                    ; preds = %cond.false544
  %147 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and549 = and i64 %147, 4294967296, !dbg !8881
  %tobool550 = icmp ne i64 %and549, 0, !dbg !8881
  br i1 %tobool550, label %cond.true551, label %cond.false552, !dbg !8881

cond.true551:                                     ; preds = %cond.false548
  br label %cond.end730, !dbg !8881

cond.false552:                                    ; preds = %cond.false548
  %148 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and553 = and i64 %148, 2147483648, !dbg !8881
  %tobool554 = icmp ne i64 %and553, 0, !dbg !8881
  br i1 %tobool554, label %cond.true555, label %cond.false556, !dbg !8881

cond.true555:                                     ; preds = %cond.false552
  br label %cond.end728, !dbg !8881

cond.false556:                                    ; preds = %cond.false552
  %149 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and557 = and i64 %149, 1073741824, !dbg !8881
  %tobool558 = icmp ne i64 %and557, 0, !dbg !8881
  br i1 %tobool558, label %cond.true559, label %cond.false560, !dbg !8881

cond.true559:                                     ; preds = %cond.false556
  br label %cond.end726, !dbg !8881

cond.false560:                                    ; preds = %cond.false556
  %150 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and561 = and i64 %150, 536870912, !dbg !8881
  %tobool562 = icmp ne i64 %and561, 0, !dbg !8881
  br i1 %tobool562, label %cond.true563, label %cond.false564, !dbg !8881

cond.true563:                                     ; preds = %cond.false560
  br label %cond.end724, !dbg !8881

cond.false564:                                    ; preds = %cond.false560
  %151 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and565 = and i64 %151, 268435456, !dbg !8881
  %tobool566 = icmp ne i64 %and565, 0, !dbg !8881
  br i1 %tobool566, label %cond.true567, label %cond.false568, !dbg !8881

cond.true567:                                     ; preds = %cond.false564
  br label %cond.end722, !dbg !8881

cond.false568:                                    ; preds = %cond.false564
  %152 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and569 = and i64 %152, 134217728, !dbg !8881
  %tobool570 = icmp ne i64 %and569, 0, !dbg !8881
  br i1 %tobool570, label %cond.true571, label %cond.false572, !dbg !8881

cond.true571:                                     ; preds = %cond.false568
  br label %cond.end720, !dbg !8881

cond.false572:                                    ; preds = %cond.false568
  %153 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and573 = and i64 %153, 67108864, !dbg !8881
  %tobool574 = icmp ne i64 %and573, 0, !dbg !8881
  br i1 %tobool574, label %cond.true575, label %cond.false576, !dbg !8881

cond.true575:                                     ; preds = %cond.false572
  br label %cond.end718, !dbg !8881

cond.false576:                                    ; preds = %cond.false572
  %154 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and577 = and i64 %154, 33554432, !dbg !8881
  %tobool578 = icmp ne i64 %and577, 0, !dbg !8881
  br i1 %tobool578, label %cond.true579, label %cond.false580, !dbg !8881

cond.true579:                                     ; preds = %cond.false576
  br label %cond.end716, !dbg !8881

cond.false580:                                    ; preds = %cond.false576
  %155 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and581 = and i64 %155, 16777216, !dbg !8881
  %tobool582 = icmp ne i64 %and581, 0, !dbg !8881
  br i1 %tobool582, label %cond.true583, label %cond.false584, !dbg !8881

cond.true583:                                     ; preds = %cond.false580
  br label %cond.end714, !dbg !8881

cond.false584:                                    ; preds = %cond.false580
  %156 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and585 = and i64 %156, 8388608, !dbg !8881
  %tobool586 = icmp ne i64 %and585, 0, !dbg !8881
  br i1 %tobool586, label %cond.true587, label %cond.false588, !dbg !8881

cond.true587:                                     ; preds = %cond.false584
  br label %cond.end712, !dbg !8881

cond.false588:                                    ; preds = %cond.false584
  %157 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and589 = and i64 %157, 4194304, !dbg !8881
  %tobool590 = icmp ne i64 %and589, 0, !dbg !8881
  br i1 %tobool590, label %cond.true591, label %cond.false592, !dbg !8881

cond.true591:                                     ; preds = %cond.false588
  br label %cond.end710, !dbg !8881

cond.false592:                                    ; preds = %cond.false588
  %158 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and593 = and i64 %158, 2097152, !dbg !8881
  %tobool594 = icmp ne i64 %and593, 0, !dbg !8881
  br i1 %tobool594, label %cond.true595, label %cond.false596, !dbg !8881

cond.true595:                                     ; preds = %cond.false592
  br label %cond.end708, !dbg !8881

cond.false596:                                    ; preds = %cond.false592
  %159 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and597 = and i64 %159, 1048576, !dbg !8881
  %tobool598 = icmp ne i64 %and597, 0, !dbg !8881
  br i1 %tobool598, label %cond.true599, label %cond.false600, !dbg !8881

cond.true599:                                     ; preds = %cond.false596
  br label %cond.end706, !dbg !8881

cond.false600:                                    ; preds = %cond.false596
  %160 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and601 = and i64 %160, 524288, !dbg !8881
  %tobool602 = icmp ne i64 %and601, 0, !dbg !8881
  br i1 %tobool602, label %cond.true603, label %cond.false604, !dbg !8881

cond.true603:                                     ; preds = %cond.false600
  br label %cond.end704, !dbg !8881

cond.false604:                                    ; preds = %cond.false600
  %161 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and605 = and i64 %161, 262144, !dbg !8881
  %tobool606 = icmp ne i64 %and605, 0, !dbg !8881
  br i1 %tobool606, label %cond.true607, label %cond.false608, !dbg !8881

cond.true607:                                     ; preds = %cond.false604
  br label %cond.end702, !dbg !8881

cond.false608:                                    ; preds = %cond.false604
  %162 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and609 = and i64 %162, 131072, !dbg !8881
  %tobool610 = icmp ne i64 %and609, 0, !dbg !8881
  br i1 %tobool610, label %cond.true611, label %cond.false612, !dbg !8881

cond.true611:                                     ; preds = %cond.false608
  br label %cond.end700, !dbg !8881

cond.false612:                                    ; preds = %cond.false608
  %163 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and613 = and i64 %163, 65536, !dbg !8881
  %tobool614 = icmp ne i64 %and613, 0, !dbg !8881
  br i1 %tobool614, label %cond.true615, label %cond.false616, !dbg !8881

cond.true615:                                     ; preds = %cond.false612
  br label %cond.end698, !dbg !8881

cond.false616:                                    ; preds = %cond.false612
  %164 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and617 = and i64 %164, 32768, !dbg !8881
  %tobool618 = icmp ne i64 %and617, 0, !dbg !8881
  br i1 %tobool618, label %cond.true619, label %cond.false620, !dbg !8881

cond.true619:                                     ; preds = %cond.false616
  br label %cond.end696, !dbg !8881

cond.false620:                                    ; preds = %cond.false616
  %165 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and621 = and i64 %165, 16384, !dbg !8881
  %tobool622 = icmp ne i64 %and621, 0, !dbg !8881
  br i1 %tobool622, label %cond.true623, label %cond.false624, !dbg !8881

cond.true623:                                     ; preds = %cond.false620
  br label %cond.end694, !dbg !8881

cond.false624:                                    ; preds = %cond.false620
  %166 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and625 = and i64 %166, 8192, !dbg !8881
  %tobool626 = icmp ne i64 %and625, 0, !dbg !8881
  br i1 %tobool626, label %cond.true627, label %cond.false628, !dbg !8881

cond.true627:                                     ; preds = %cond.false624
  br label %cond.end692, !dbg !8881

cond.false628:                                    ; preds = %cond.false624
  %167 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and629 = and i64 %167, 4096, !dbg !8881
  %tobool630 = icmp ne i64 %and629, 0, !dbg !8881
  br i1 %tobool630, label %cond.true631, label %cond.false632, !dbg !8881

cond.true631:                                     ; preds = %cond.false628
  br label %cond.end690, !dbg !8881

cond.false632:                                    ; preds = %cond.false628
  %168 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and633 = and i64 %168, 2048, !dbg !8881
  %tobool634 = icmp ne i64 %and633, 0, !dbg !8881
  br i1 %tobool634, label %cond.true635, label %cond.false636, !dbg !8881

cond.true635:                                     ; preds = %cond.false632
  br label %cond.end688, !dbg !8881

cond.false636:                                    ; preds = %cond.false632
  %169 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and637 = and i64 %169, 1024, !dbg !8881
  %tobool638 = icmp ne i64 %and637, 0, !dbg !8881
  br i1 %tobool638, label %cond.true639, label %cond.false640, !dbg !8881

cond.true639:                                     ; preds = %cond.false636
  br label %cond.end686, !dbg !8881

cond.false640:                                    ; preds = %cond.false636
  %170 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and641 = and i64 %170, 512, !dbg !8881
  %tobool642 = icmp ne i64 %and641, 0, !dbg !8881
  br i1 %tobool642, label %cond.true643, label %cond.false644, !dbg !8881

cond.true643:                                     ; preds = %cond.false640
  br label %cond.end684, !dbg !8881

cond.false644:                                    ; preds = %cond.false640
  %171 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and645 = and i64 %171, 256, !dbg !8881
  %tobool646 = icmp ne i64 %and645, 0, !dbg !8881
  br i1 %tobool646, label %cond.true647, label %cond.false648, !dbg !8881

cond.true647:                                     ; preds = %cond.false644
  br label %cond.end682, !dbg !8881

cond.false648:                                    ; preds = %cond.false644
  %172 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and649 = and i64 %172, 128, !dbg !8881
  %tobool650 = icmp ne i64 %and649, 0, !dbg !8881
  br i1 %tobool650, label %cond.true651, label %cond.false652, !dbg !8881

cond.true651:                                     ; preds = %cond.false648
  br label %cond.end680, !dbg !8881

cond.false652:                                    ; preds = %cond.false648
  %173 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and653 = and i64 %173, 64, !dbg !8881
  %tobool654 = icmp ne i64 %and653, 0, !dbg !8881
  br i1 %tobool654, label %cond.true655, label %cond.false656, !dbg !8881

cond.true655:                                     ; preds = %cond.false652
  br label %cond.end678, !dbg !8881

cond.false656:                                    ; preds = %cond.false652
  %174 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and657 = and i64 %174, 32, !dbg !8881
  %tobool658 = icmp ne i64 %and657, 0, !dbg !8881
  br i1 %tobool658, label %cond.true659, label %cond.false660, !dbg !8881

cond.true659:                                     ; preds = %cond.false656
  br label %cond.end676, !dbg !8881

cond.false660:                                    ; preds = %cond.false656
  %175 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and661 = and i64 %175, 16, !dbg !8881
  %tobool662 = icmp ne i64 %and661, 0, !dbg !8881
  br i1 %tobool662, label %cond.true663, label %cond.false664, !dbg !8881

cond.true663:                                     ; preds = %cond.false660
  br label %cond.end674, !dbg !8881

cond.false664:                                    ; preds = %cond.false660
  %176 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and665 = and i64 %176, 8, !dbg !8881
  %tobool666 = icmp ne i64 %and665, 0, !dbg !8881
  br i1 %tobool666, label %cond.true667, label %cond.false668, !dbg !8881

cond.true667:                                     ; preds = %cond.false664
  br label %cond.end672, !dbg !8881

cond.false668:                                    ; preds = %cond.false664
  %177 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %and669 = and i64 %177, 4, !dbg !8881
  %tobool670 = icmp ne i64 %and669, 0, !dbg !8881
  %178 = zext i1 %tobool670 to i64, !dbg !8881
  %cond671 = select i1 %tobool670, i32 2, i32 1, !dbg !8881
  br label %cond.end672, !dbg !8881

cond.end672:                                      ; preds = %cond.false668, %cond.true667
  %cond673 = phi i32 [ 3, %cond.true667 ], [ %cond671, %cond.false668 ], !dbg !8881
  br label %cond.end674, !dbg !8881

cond.end674:                                      ; preds = %cond.end672, %cond.true663
  %cond675 = phi i32 [ 4, %cond.true663 ], [ %cond673, %cond.end672 ], !dbg !8881
  br label %cond.end676, !dbg !8881

cond.end676:                                      ; preds = %cond.end674, %cond.true659
  %cond677 = phi i32 [ 5, %cond.true659 ], [ %cond675, %cond.end674 ], !dbg !8881
  br label %cond.end678, !dbg !8881

cond.end678:                                      ; preds = %cond.end676, %cond.true655
  %cond679 = phi i32 [ 6, %cond.true655 ], [ %cond677, %cond.end676 ], !dbg !8881
  br label %cond.end680, !dbg !8881

cond.end680:                                      ; preds = %cond.end678, %cond.true651
  %cond681 = phi i32 [ 7, %cond.true651 ], [ %cond679, %cond.end678 ], !dbg !8881
  br label %cond.end682, !dbg !8881

cond.end682:                                      ; preds = %cond.end680, %cond.true647
  %cond683 = phi i32 [ 8, %cond.true647 ], [ %cond681, %cond.end680 ], !dbg !8881
  br label %cond.end684, !dbg !8881

cond.end684:                                      ; preds = %cond.end682, %cond.true643
  %cond685 = phi i32 [ 9, %cond.true643 ], [ %cond683, %cond.end682 ], !dbg !8881
  br label %cond.end686, !dbg !8881

cond.end686:                                      ; preds = %cond.end684, %cond.true639
  %cond687 = phi i32 [ 10, %cond.true639 ], [ %cond685, %cond.end684 ], !dbg !8881
  br label %cond.end688, !dbg !8881

cond.end688:                                      ; preds = %cond.end686, %cond.true635
  %cond689 = phi i32 [ 11, %cond.true635 ], [ %cond687, %cond.end686 ], !dbg !8881
  br label %cond.end690, !dbg !8881

cond.end690:                                      ; preds = %cond.end688, %cond.true631
  %cond691 = phi i32 [ 12, %cond.true631 ], [ %cond689, %cond.end688 ], !dbg !8881
  br label %cond.end692, !dbg !8881

cond.end692:                                      ; preds = %cond.end690, %cond.true627
  %cond693 = phi i32 [ 13, %cond.true627 ], [ %cond691, %cond.end690 ], !dbg !8881
  br label %cond.end694, !dbg !8881

cond.end694:                                      ; preds = %cond.end692, %cond.true623
  %cond695 = phi i32 [ 14, %cond.true623 ], [ %cond693, %cond.end692 ], !dbg !8881
  br label %cond.end696, !dbg !8881

cond.end696:                                      ; preds = %cond.end694, %cond.true619
  %cond697 = phi i32 [ 15, %cond.true619 ], [ %cond695, %cond.end694 ], !dbg !8881
  br label %cond.end698, !dbg !8881

cond.end698:                                      ; preds = %cond.end696, %cond.true615
  %cond699 = phi i32 [ 16, %cond.true615 ], [ %cond697, %cond.end696 ], !dbg !8881
  br label %cond.end700, !dbg !8881

cond.end700:                                      ; preds = %cond.end698, %cond.true611
  %cond701 = phi i32 [ 17, %cond.true611 ], [ %cond699, %cond.end698 ], !dbg !8881
  br label %cond.end702, !dbg !8881

cond.end702:                                      ; preds = %cond.end700, %cond.true607
  %cond703 = phi i32 [ 18, %cond.true607 ], [ %cond701, %cond.end700 ], !dbg !8881
  br label %cond.end704, !dbg !8881

cond.end704:                                      ; preds = %cond.end702, %cond.true603
  %cond705 = phi i32 [ 19, %cond.true603 ], [ %cond703, %cond.end702 ], !dbg !8881
  br label %cond.end706, !dbg !8881

cond.end706:                                      ; preds = %cond.end704, %cond.true599
  %cond707 = phi i32 [ 20, %cond.true599 ], [ %cond705, %cond.end704 ], !dbg !8881
  br label %cond.end708, !dbg !8881

cond.end708:                                      ; preds = %cond.end706, %cond.true595
  %cond709 = phi i32 [ 21, %cond.true595 ], [ %cond707, %cond.end706 ], !dbg !8881
  br label %cond.end710, !dbg !8881

cond.end710:                                      ; preds = %cond.end708, %cond.true591
  %cond711 = phi i32 [ 22, %cond.true591 ], [ %cond709, %cond.end708 ], !dbg !8881
  br label %cond.end712, !dbg !8881

cond.end712:                                      ; preds = %cond.end710, %cond.true587
  %cond713 = phi i32 [ 23, %cond.true587 ], [ %cond711, %cond.end710 ], !dbg !8881
  br label %cond.end714, !dbg !8881

cond.end714:                                      ; preds = %cond.end712, %cond.true583
  %cond715 = phi i32 [ 24, %cond.true583 ], [ %cond713, %cond.end712 ], !dbg !8881
  br label %cond.end716, !dbg !8881

cond.end716:                                      ; preds = %cond.end714, %cond.true579
  %cond717 = phi i32 [ 25, %cond.true579 ], [ %cond715, %cond.end714 ], !dbg !8881
  br label %cond.end718, !dbg !8881

cond.end718:                                      ; preds = %cond.end716, %cond.true575
  %cond719 = phi i32 [ 26, %cond.true575 ], [ %cond717, %cond.end716 ], !dbg !8881
  br label %cond.end720, !dbg !8881

cond.end720:                                      ; preds = %cond.end718, %cond.true571
  %cond721 = phi i32 [ 27, %cond.true571 ], [ %cond719, %cond.end718 ], !dbg !8881
  br label %cond.end722, !dbg !8881

cond.end722:                                      ; preds = %cond.end720, %cond.true567
  %cond723 = phi i32 [ 28, %cond.true567 ], [ %cond721, %cond.end720 ], !dbg !8881
  br label %cond.end724, !dbg !8881

cond.end724:                                      ; preds = %cond.end722, %cond.true563
  %cond725 = phi i32 [ 29, %cond.true563 ], [ %cond723, %cond.end722 ], !dbg !8881
  br label %cond.end726, !dbg !8881

cond.end726:                                      ; preds = %cond.end724, %cond.true559
  %cond727 = phi i32 [ 30, %cond.true559 ], [ %cond725, %cond.end724 ], !dbg !8881
  br label %cond.end728, !dbg !8881

cond.end728:                                      ; preds = %cond.end726, %cond.true555
  %cond729 = phi i32 [ 31, %cond.true555 ], [ %cond727, %cond.end726 ], !dbg !8881
  br label %cond.end730, !dbg !8881

cond.end730:                                      ; preds = %cond.end728, %cond.true551
  %cond731 = phi i32 [ 32, %cond.true551 ], [ %cond729, %cond.end728 ], !dbg !8881
  br label %cond.end732, !dbg !8881

cond.end732:                                      ; preds = %cond.end730, %cond.true547
  %cond733 = phi i32 [ 33, %cond.true547 ], [ %cond731, %cond.end730 ], !dbg !8881
  br label %cond.end734, !dbg !8881

cond.end734:                                      ; preds = %cond.end732, %cond.true543
  %cond735 = phi i32 [ 34, %cond.true543 ], [ %cond733, %cond.end732 ], !dbg !8881
  br label %cond.end736, !dbg !8881

cond.end736:                                      ; preds = %cond.end734, %cond.true539
  %cond737 = phi i32 [ 35, %cond.true539 ], [ %cond735, %cond.end734 ], !dbg !8881
  br label %cond.end738, !dbg !8881

cond.end738:                                      ; preds = %cond.end736, %cond.true535
  %cond739 = phi i32 [ 36, %cond.true535 ], [ %cond737, %cond.end736 ], !dbg !8881
  br label %cond.end740, !dbg !8881

cond.end740:                                      ; preds = %cond.end738, %cond.true531
  %cond741 = phi i32 [ 37, %cond.true531 ], [ %cond739, %cond.end738 ], !dbg !8881
  br label %cond.end742, !dbg !8881

cond.end742:                                      ; preds = %cond.end740, %cond.true527
  %cond743 = phi i32 [ 38, %cond.true527 ], [ %cond741, %cond.end740 ], !dbg !8881
  br label %cond.end744, !dbg !8881

cond.end744:                                      ; preds = %cond.end742, %cond.true523
  %cond745 = phi i32 [ 39, %cond.true523 ], [ %cond743, %cond.end742 ], !dbg !8881
  br label %cond.end746, !dbg !8881

cond.end746:                                      ; preds = %cond.end744, %cond.true519
  %cond747 = phi i32 [ 40, %cond.true519 ], [ %cond745, %cond.end744 ], !dbg !8881
  br label %cond.end748, !dbg !8881

cond.end748:                                      ; preds = %cond.end746, %cond.true515
  %cond749 = phi i32 [ 41, %cond.true515 ], [ %cond747, %cond.end746 ], !dbg !8881
  br label %cond.end750, !dbg !8881

cond.end750:                                      ; preds = %cond.end748, %cond.true511
  %cond751 = phi i32 [ 42, %cond.true511 ], [ %cond749, %cond.end748 ], !dbg !8881
  br label %cond.end752, !dbg !8881

cond.end752:                                      ; preds = %cond.end750, %cond.true507
  %cond753 = phi i32 [ 43, %cond.true507 ], [ %cond751, %cond.end750 ], !dbg !8881
  br label %cond.end754, !dbg !8881

cond.end754:                                      ; preds = %cond.end752, %cond.true503
  %cond755 = phi i32 [ 44, %cond.true503 ], [ %cond753, %cond.end752 ], !dbg !8881
  br label %cond.end756, !dbg !8881

cond.end756:                                      ; preds = %cond.end754, %cond.true499
  %cond757 = phi i32 [ 45, %cond.true499 ], [ %cond755, %cond.end754 ], !dbg !8881
  br label %cond.end758, !dbg !8881

cond.end758:                                      ; preds = %cond.end756, %cond.true495
  %cond759 = phi i32 [ 46, %cond.true495 ], [ %cond757, %cond.end756 ], !dbg !8881
  br label %cond.end760, !dbg !8881

cond.end760:                                      ; preds = %cond.end758, %cond.true491
  %cond761 = phi i32 [ 47, %cond.true491 ], [ %cond759, %cond.end758 ], !dbg !8881
  br label %cond.end762, !dbg !8881

cond.end762:                                      ; preds = %cond.end760, %cond.true487
  %cond763 = phi i32 [ 48, %cond.true487 ], [ %cond761, %cond.end760 ], !dbg !8881
  br label %cond.end764, !dbg !8881

cond.end764:                                      ; preds = %cond.end762, %cond.true483
  %cond765 = phi i32 [ 49, %cond.true483 ], [ %cond763, %cond.end762 ], !dbg !8881
  br label %cond.end766, !dbg !8881

cond.end766:                                      ; preds = %cond.end764, %cond.true479
  %cond767 = phi i32 [ 50, %cond.true479 ], [ %cond765, %cond.end764 ], !dbg !8881
  br label %cond.end768, !dbg !8881

cond.end768:                                      ; preds = %cond.end766, %cond.true475
  %cond769 = phi i32 [ 51, %cond.true475 ], [ %cond767, %cond.end766 ], !dbg !8881
  br label %cond.end770, !dbg !8881

cond.end770:                                      ; preds = %cond.end768, %cond.true471
  %cond771 = phi i32 [ 52, %cond.true471 ], [ %cond769, %cond.end768 ], !dbg !8881
  br label %cond.end772, !dbg !8881

cond.end772:                                      ; preds = %cond.end770, %cond.true467
  %cond773 = phi i32 [ 53, %cond.true467 ], [ %cond771, %cond.end770 ], !dbg !8881
  br label %cond.end774, !dbg !8881

cond.end774:                                      ; preds = %cond.end772, %cond.true463
  %cond775 = phi i32 [ 54, %cond.true463 ], [ %cond773, %cond.end772 ], !dbg !8881
  br label %cond.end776, !dbg !8881

cond.end776:                                      ; preds = %cond.end774, %cond.true459
  %cond777 = phi i32 [ 55, %cond.true459 ], [ %cond775, %cond.end774 ], !dbg !8881
  br label %cond.end778, !dbg !8881

cond.end778:                                      ; preds = %cond.end776, %cond.true455
  %cond779 = phi i32 [ 56, %cond.true455 ], [ %cond777, %cond.end776 ], !dbg !8881
  br label %cond.end780, !dbg !8881

cond.end780:                                      ; preds = %cond.end778, %cond.true451
  %cond781 = phi i32 [ 57, %cond.true451 ], [ %cond779, %cond.end778 ], !dbg !8881
  br label %cond.end782, !dbg !8881

cond.end782:                                      ; preds = %cond.end780, %cond.true447
  %cond783 = phi i32 [ 58, %cond.true447 ], [ %cond781, %cond.end780 ], !dbg !8881
  br label %cond.end784, !dbg !8881

cond.end784:                                      ; preds = %cond.end782, %cond.true443
  %cond785 = phi i32 [ 59, %cond.true443 ], [ %cond783, %cond.end782 ], !dbg !8881
  br label %cond.end786, !dbg !8881

cond.end786:                                      ; preds = %cond.end784, %cond.true439
  %cond787 = phi i32 [ 60, %cond.true439 ], [ %cond785, %cond.end784 ], !dbg !8881
  br label %cond.end788, !dbg !8881

cond.end788:                                      ; preds = %cond.end786, %cond.true435
  %cond789 = phi i32 [ 61, %cond.true435 ], [ %cond787, %cond.end786 ], !dbg !8881
  br label %cond.end790, !dbg !8881

cond.end790:                                      ; preds = %cond.end788, %cond.true431
  %cond791 = phi i32 [ 62, %cond.true431 ], [ %cond789, %cond.end788 ], !dbg !8881
  br label %cond.end792, !dbg !8881

cond.end792:                                      ; preds = %cond.end790, %cond.true427
  %cond793 = phi i32 [ 63, %cond.true427 ], [ %cond791, %cond.end790 ], !dbg !8881
  br label %cond.end794, !dbg !8881

cond.end794:                                      ; preds = %cond.end792, %cond.true423
  %cond795 = phi i32 [ 0, %cond.true423 ], [ %cond793, %cond.end792 ], !dbg !8881
  br label %cond.end797, !dbg !8881

cond.false796:                                    ; preds = %cond.true419
  br label %cond.end797, !dbg !8881

cond.end797:                                      ; preds = %cond.false796, %cond.end794
  %cond798 = phi i32 [ %cond795, %cond.end794 ], [ -1, %cond.false796 ], !dbg !8881
  br label %cond.end801, !dbg !8881

cond.false799:                                    ; preds = %cond.end417
  %179 = load i64, i64* %min_prot_len, align 8, !dbg !8881
  %call800 = call i32 @__ilog2_u64(i64 %179) #14, !dbg !8881
  br label %cond.end801, !dbg !8881

cond.end801:                                      ; preds = %cond.false799, %cond.end797
  %cond802 = phi i32 [ %cond798, %cond.end797 ], [ %call800, %cond.false799 ], !dbg !8881
  %sub803 = sub i32 %cond418, %cond802, !dbg !8882
  %add804 = add i32 %sub803, 1, !dbg !8883
  %conv805 = trunc i32 %add804 to i8, !dbg !8880
  store i8 %conv805, i8* %pow, align 1, !dbg !8884
  %180 = load i8, i8* %pow, align 1, !dbg !8885
  %conv806 = zext i8 %180 to i32, !dbg !8885
  %shl = shl i32 %conv806, 2, !dbg !8886
  %conv807 = trunc i32 %shl to i8, !dbg !8885
  store i8 %conv807, i8* %val, align 1, !dbg !8887
  %181 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8888
  %flags808 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %181, i32 0, i32 18, !dbg !8890
  %182 = load i32, i32* %flags808, align 4, !dbg !8890
  %and809 = and i32 %182, 8192, !dbg !8891
  %tobool810 = icmp ne i32 %and809, 0, !dbg !8891
  br i1 %tobool810, label %land.lhs.true811, label %if.end819, !dbg !8892

land.lhs.true811:                                 ; preds = %cond.end801
  %183 = load i8, i8* %val, align 1, !dbg !8893
  %conv812 = zext i8 %183 to i64, !dbg !8893
  %and813 = and i64 %conv812, 32, !dbg !8894
  %tobool814 = icmp ne i64 %and813, 0, !dbg !8894
  br i1 %tobool814, label %if.then815, label %if.end819, !dbg !8895

if.then815:                                       ; preds = %land.lhs.true811
  %184 = load i8, i8* %val, align 1, !dbg !8896
  %conv816 = zext i8 %184 to i64, !dbg !8896
  %and817 = and i64 %conv816, -33, !dbg !8897
  %or = or i64 %and817, 64, !dbg !8898
  %conv818 = trunc i64 %or to i8, !dbg !8899
  store i8 %conv818, i8* %val, align 1, !dbg !8900
  br label %if.end819, !dbg !8901

if.end819:                                        ; preds = %if.then815, %land.lhs.true811, %cond.end801
  %185 = load i8, i8* %val, align 1, !dbg !8902
  %conv820 = zext i8 %185 to i32, !dbg !8902
  %186 = load i8, i8* %mask, align 1, !dbg !8904
  %conv821 = zext i8 %186 to i32, !dbg !8904
  %neg = xor i32 %conv821, -1, !dbg !8905
  %and822 = and i32 %conv820, %neg, !dbg !8906
  %tobool823 = icmp ne i32 %and822, 0, !dbg !8906
  br i1 %tobool823, label %if.then824, label %if.end825, !dbg !8907

if.then824:                                       ; preds = %if.end819
  store i32 -22, i32* %retval, align 4, !dbg !8908
  br label %return, !dbg !8908

if.end825:                                        ; preds = %if.end819
  %187 = load i8, i8* %val, align 1, !dbg !8909
  %conv826 = zext i8 %187 to i32, !dbg !8909
  %188 = load i8, i8* %mask, align 1, !dbg !8911
  %conv827 = zext i8 %188 to i32, !dbg !8911
  %and828 = and i32 %conv826, %conv827, !dbg !8912
  %tobool829 = icmp ne i32 %and828, 0, !dbg !8912
  br i1 %tobool829, label %if.end831, label %if.then830, !dbg !8913

if.then830:                                       ; preds = %if.end825
  store i32 -22, i32* %retval, align 4, !dbg !8914
  br label %return, !dbg !8914

if.end831:                                        ; preds = %if.end825
  br label %if.end832

if.end832:                                        ; preds = %if.end831, %if.then36
  %189 = load i32, i32* %status_old, align 4, !dbg !8915
  %190 = load i8, i8* %mask, align 1, !dbg !8916
  %conv833 = zext i8 %190 to i32, !dbg !8916
  %neg834 = xor i32 %conv833, -1, !dbg !8917
  %and835 = and i32 %189, %neg834, !dbg !8918
  %191 = load i8, i8* %tb_mask, align 1, !dbg !8919
  %conv836 = zext i8 %191 to i32, !dbg !8919
  %neg837 = xor i32 %conv836, -1, !dbg !8920
  %and838 = and i32 %and835, %neg837, !dbg !8921
  %192 = load i8, i8* %val, align 1, !dbg !8922
  %conv839 = zext i8 %192 to i32, !dbg !8922
  %or840 = or i32 %and838, %conv839, !dbg !8923
  store i32 %or840, i32* %status_new, align 4, !dbg !8924
  %193 = load i32, i32* %status_new, align 4, !dbg !8925
  %conv841 = sext i32 %193 to i64, !dbg !8925
  %or842 = or i64 %conv841, 128, !dbg !8925
  %conv843 = trunc i64 %or842 to i32, !dbg !8925
  store i32 %conv843, i32* %status_new, align 4, !dbg !8925
  %194 = load i8, i8* %use_top, align 1, !dbg !8926
  %tobool844 = trunc i8 %194 to i1, !dbg !8926
  br i1 %tobool844, label %if.end848, label %if.then845, !dbg !8928

if.then845:                                       ; preds = %if.end832
  %195 = load i8, i8* %tb_mask, align 1, !dbg !8929
  %conv846 = zext i8 %195 to i32, !dbg !8929
  %196 = load i32, i32* %status_new, align 4, !dbg !8930
  %or847 = or i32 %196, %conv846, !dbg !8930
  store i32 %or847, i32* %status_new, align 4, !dbg !8930
  br label %if.end848, !dbg !8931

if.end848:                                        ; preds = %if.then845, %if.end832
  %197 = load i32, i32* %status_new, align 4, !dbg !8932
  %198 = load i32, i32* %status_old, align 4, !dbg !8934
  %cmp849 = icmp eq i32 %197, %198, !dbg !8935
  br i1 %cmp849, label %if.then851, label %if.end852, !dbg !8936

if.then851:                                       ; preds = %if.end848
  store i32 0, i32* %retval, align 4, !dbg !8937
  br label %return, !dbg !8937

if.end852:                                        ; preds = %if.end848
  %199 = load i32, i32* %status_new, align 4, !dbg !8938
  %200 = load i8, i8* %mask, align 1, !dbg !8940
  %conv853 = zext i8 %200 to i32, !dbg !8940
  %and854 = and i32 %199, %conv853, !dbg !8941
  %201 = load i32, i32* %status_old, align 4, !dbg !8942
  %202 = load i8, i8* %mask, align 1, !dbg !8943
  %conv855 = zext i8 %202 to i32, !dbg !8943
  %and856 = and i32 %201, %conv855, !dbg !8944
  %cmp857 = icmp slt i32 %and854, %and856, !dbg !8945
  br i1 %cmp857, label %if.then859, label %if.end860, !dbg !8946

if.then859:                                       ; preds = %if.end852
  store i32 -22, i32* %retval, align 4, !dbg !8947
  br label %return, !dbg !8947

if.end860:                                        ; preds = %if.end852
  %203 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8948
  %204 = load i32, i32* %status_new, align 4, !dbg !8949
  %conv861 = trunc i32 %204 to i8, !dbg !8949
  %call862 = call i32 @spi_nor_write_sr_and_check(%struct.spi_nor* %203, i8 zeroext %conv861) #9, !dbg !8950
  store i32 %call862, i32* %retval, align 4, !dbg !8951
  br label %return, !dbg !8951

return:                                           ; preds = %if.end860, %if.then859, %if.then851, %if.then830, %if.then824, %if.then24, %if.then9, %if.then
  %205 = load i32, i32* %retval, align 4, !dbg !8952
  ret i32 %205, !dbg !8952
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_sr_unlock(%struct.spi_nor* %nor, i64 %ofs, i64 %len) #0 !dbg !8953 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ofs.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %mtd = alloca %struct.mtd_info*, align 8
  %min_prot_len = alloca i64, align 8
  %ret = alloca i32, align 4
  %status_old = alloca i32, align 4
  %status_new = alloca i32, align 4
  %mask = alloca i8, align 1
  %tb_mask = alloca i8, align 1
  %pow = alloca i8, align 1
  %val = alloca i8, align 1
  %lock_len = alloca i64, align 8
  %can_be_top = alloca i8, align 1
  %can_be_bottom = alloca i8, align 1
  %use_top = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !8954, metadata !DIExpression()), !dbg !8955
  store i64 %ofs, i64* %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofs.addr, metadata !8956, metadata !DIExpression()), !dbg !8957
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !8958, metadata !DIExpression()), !dbg !8959
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd, metadata !8960, metadata !DIExpression()), !dbg !8961
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8962
  %mtd1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 0, !dbg !8963
  store %struct.mtd_info* %mtd1, %struct.mtd_info** %mtd, align 8, !dbg !8961
  call void @llvm.dbg.declare(metadata i64* %min_prot_len, metadata !8964, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8966, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.declare(metadata i32* %status_old, metadata !8968, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.declare(metadata i32* %status_new, metadata !8970, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !8972, metadata !DIExpression()), !dbg !8973
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8974
  %call = call zeroext i8 @spi_nor_get_sr_bp_mask(%struct.spi_nor* %1) #9, !dbg !8975
  store i8 %call, i8* %mask, align 1, !dbg !8973
  call void @llvm.dbg.declare(metadata i8* %tb_mask, metadata !8976, metadata !DIExpression()), !dbg !8977
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8978
  %call2 = call zeroext i8 @spi_nor_get_sr_tb_mask(%struct.spi_nor* %2) #9, !dbg !8979
  store i8 %call2, i8* %tb_mask, align 1, !dbg !8977
  call void @llvm.dbg.declare(metadata i8* %pow, metadata !8980, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.declare(metadata i8* %val, metadata !8982, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.declare(metadata i64* %lock_len, metadata !8984, metadata !DIExpression()), !dbg !8985
  call void @llvm.dbg.declare(metadata i8* %can_be_top, metadata !8986, metadata !DIExpression()), !dbg !8987
  store i8 1, i8* %can_be_top, align 1, !dbg !8987
  call void @llvm.dbg.declare(metadata i8* %can_be_bottom, metadata !8988, metadata !DIExpression()), !dbg !8989
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8990
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 18, !dbg !8991
  %4 = load i32, i32* %flags, align 4, !dbg !8991
  %and = and i32 %4, 2, !dbg !8992
  %tobool = icmp ne i32 %and, 0, !dbg !8990
  %frombool = zext i1 %tobool to i8, !dbg !8989
  store i8 %frombool, i8* %can_be_bottom, align 1, !dbg !8989
  call void @llvm.dbg.declare(metadata i8* %use_top, metadata !8993, metadata !DIExpression()), !dbg !8994
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8995
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !8996
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 4, !dbg !8997
  %7 = load i8*, i8** %bouncebuf, align 8, !dbg !8997
  %call3 = call i32 @spi_nor_read_sr(%struct.spi_nor* %5, i8* %7) #9, !dbg !8998
  store i32 %call3, i32* %ret, align 4, !dbg !8999
  %8 = load i32, i32* %ret, align 4, !dbg !9000
  %tobool4 = icmp ne i32 %8, 0, !dbg !9000
  br i1 %tobool4, label %if.then, label %if.end, !dbg !9002

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %ret, align 4, !dbg !9003
  store i32 %9, i32* %retval, align 4, !dbg !9004
  br label %return, !dbg !9004

if.end:                                           ; preds = %entry
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9005
  %bouncebuf5 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 4, !dbg !9006
  %11 = load i8*, i8** %bouncebuf5, align 8, !dbg !9006
  %arrayidx = getelementptr i8, i8* %11, i64 0, !dbg !9005
  %12 = load i8, i8* %arrayidx, align 1, !dbg !9005
  %conv = zext i8 %12 to i32, !dbg !9005
  store i32 %conv, i32* %status_old, align 4, !dbg !9007
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9008
  %14 = load i64, i64* %ofs.addr, align 8, !dbg !9010
  %15 = load i64, i64* %len.addr, align 8, !dbg !9011
  %16 = load i32, i32* %status_old, align 4, !dbg !9012
  %conv6 = trunc i32 %16 to i8, !dbg !9012
  %call7 = call i32 @spi_nor_is_unlocked_sr(%struct.spi_nor* %13, i64 %14, i64 %15, i8 zeroext %conv6) #9, !dbg !9013
  %tobool8 = icmp ne i32 %call7, 0, !dbg !9013
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !9014

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9015
  br label %return, !dbg !9015

if.end10:                                         ; preds = %if.end
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9016
  %18 = load i64, i64* %ofs.addr, align 8, !dbg !9018
  %19 = load i32, i32* %status_old, align 4, !dbg !9019
  %conv11 = trunc i32 %19 to i8, !dbg !9019
  %call12 = call i32 @spi_nor_is_unlocked_sr(%struct.spi_nor* %17, i64 0, i64 %18, i8 zeroext %conv11) #9, !dbg !9020
  %tobool13 = icmp ne i32 %call12, 0, !dbg !9020
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !9021

if.then14:                                        ; preds = %if.end10
  store i8 0, i8* %can_be_top, align 1, !dbg !9022
  br label %if.end15, !dbg !9023

if.end15:                                         ; preds = %if.then14, %if.end10
  %20 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9024
  %21 = load i64, i64* %ofs.addr, align 8, !dbg !9026
  %22 = load i64, i64* %len.addr, align 8, !dbg !9027
  %add = add i64 %21, %22, !dbg !9028
  %23 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !9029
  %size = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %23, i32 0, i32 2, !dbg !9030
  %24 = load i64, i64* %size, align 8, !dbg !9030
  %25 = load i64, i64* %ofs.addr, align 8, !dbg !9031
  %26 = load i64, i64* %len.addr, align 8, !dbg !9032
  %add16 = add i64 %25, %26, !dbg !9033
  %sub = sub i64 %24, %add16, !dbg !9034
  %27 = load i32, i32* %status_old, align 4, !dbg !9035
  %conv17 = trunc i32 %27 to i8, !dbg !9035
  %call18 = call i32 @spi_nor_is_unlocked_sr(%struct.spi_nor* %20, i64 %add, i64 %sub, i8 zeroext %conv17) #9, !dbg !9036
  %tobool19 = icmp ne i32 %call18, 0, !dbg !9036
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !9037

if.then20:                                        ; preds = %if.end15
  store i8 0, i8* %can_be_bottom, align 1, !dbg !9038
  br label %if.end21, !dbg !9039

if.end21:                                         ; preds = %if.then20, %if.end15
  %28 = load i8, i8* %can_be_bottom, align 1, !dbg !9040
  %tobool22 = trunc i8 %28 to i1, !dbg !9040
  br i1 %tobool22, label %if.end25, label %land.lhs.true, !dbg !9042

land.lhs.true:                                    ; preds = %if.end21
  %29 = load i8, i8* %can_be_top, align 1, !dbg !9043
  %tobool23 = trunc i8 %29 to i1, !dbg !9043
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !9044

if.then24:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !9045
  br label %return, !dbg !9045

if.end25:                                         ; preds = %land.lhs.true, %if.end21
  %30 = load i8, i8* %can_be_top, align 1, !dbg !9046
  %tobool26 = trunc i8 %30 to i1, !dbg !9046
  %frombool27 = zext i1 %tobool26 to i8, !dbg !9047
  store i8 %frombool27, i8* %use_top, align 1, !dbg !9047
  %31 = load i8, i8* %use_top, align 1, !dbg !9048
  %tobool28 = trunc i8 %31 to i1, !dbg !9048
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !9050

if.then29:                                        ; preds = %if.end25
  %32 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !9051
  %size30 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %32, i32 0, i32 2, !dbg !9052
  %33 = load i64, i64* %size30, align 8, !dbg !9052
  %34 = load i64, i64* %ofs.addr, align 8, !dbg !9053
  %35 = load i64, i64* %len.addr, align 8, !dbg !9054
  %add31 = add i64 %34, %35, !dbg !9055
  %sub32 = sub i64 %33, %add31, !dbg !9056
  store i64 %sub32, i64* %lock_len, align 8, !dbg !9057
  br label %if.end33, !dbg !9058

if.else:                                          ; preds = %if.end25
  %36 = load i64, i64* %ofs.addr, align 8, !dbg !9059
  store i64 %36, i64* %lock_len, align 8, !dbg !9060
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then29
  %37 = load i64, i64* %lock_len, align 8, !dbg !9061
  %cmp = icmp eq i64 %37, 0, !dbg !9063
  br i1 %cmp, label %if.then35, label %if.else36, !dbg !9064

if.then35:                                        ; preds = %if.end33
  store i8 0, i8* %val, align 1, !dbg !9065
  br label %if.end825, !dbg !9067

if.else36:                                        ; preds = %if.end33
  %38 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9068
  %call37 = call i64 @spi_nor_get_min_prot_length_sr(%struct.spi_nor* %38) #9, !dbg !9070
  store i64 %call37, i64* %min_prot_len, align 8, !dbg !9071
  %39 = load i64, i64* %lock_len, align 8, !dbg !9072
  %40 = call i1 @llvm.is.constant.i64(i64 %39), !dbg !9072
  br i1 %40, label %cond.true, label %cond.false414, !dbg !9072

cond.true:                                        ; preds = %if.else36
  %41 = load i64, i64* %lock_len, align 8, !dbg !9072
  %42 = call i1 @llvm.is.constant.i64(i64 %41), !dbg !9072
  br i1 %42, label %cond.true38, label %cond.false411, !dbg !9072

cond.true38:                                      ; preds = %cond.true
  %43 = load i64, i64* %lock_len, align 8, !dbg !9072
  %cmp39 = icmp slt i64 %43, 2, !dbg !9072
  br i1 %cmp39, label %cond.true41, label %cond.false, !dbg !9072

cond.true41:                                      ; preds = %cond.true38
  br label %cond.end409, !dbg !9072

cond.false:                                       ; preds = %cond.true38
  %44 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and42 = and i64 %44, -9223372036854775808, !dbg !9072
  %tobool43 = icmp ne i64 %and42, 0, !dbg !9072
  br i1 %tobool43, label %cond.true44, label %cond.false45, !dbg !9072

cond.true44:                                      ; preds = %cond.false
  br label %cond.end407, !dbg !9072

cond.false45:                                     ; preds = %cond.false
  %45 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and46 = and i64 %45, 4611686018427387904, !dbg !9072
  %tobool47 = icmp ne i64 %and46, 0, !dbg !9072
  br i1 %tobool47, label %cond.true48, label %cond.false49, !dbg !9072

cond.true48:                                      ; preds = %cond.false45
  br label %cond.end405, !dbg !9072

cond.false49:                                     ; preds = %cond.false45
  %46 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and50 = and i64 %46, 2305843009213693952, !dbg !9072
  %tobool51 = icmp ne i64 %and50, 0, !dbg !9072
  br i1 %tobool51, label %cond.true52, label %cond.false53, !dbg !9072

cond.true52:                                      ; preds = %cond.false49
  br label %cond.end403, !dbg !9072

cond.false53:                                     ; preds = %cond.false49
  %47 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and54 = and i64 %47, 1152921504606846976, !dbg !9072
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9072
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9072

cond.true56:                                      ; preds = %cond.false53
  br label %cond.end401, !dbg !9072

cond.false57:                                     ; preds = %cond.false53
  %48 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and58 = and i64 %48, 576460752303423488, !dbg !9072
  %tobool59 = icmp ne i64 %and58, 0, !dbg !9072
  br i1 %tobool59, label %cond.true60, label %cond.false61, !dbg !9072

cond.true60:                                      ; preds = %cond.false57
  br label %cond.end399, !dbg !9072

cond.false61:                                     ; preds = %cond.false57
  %49 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and62 = and i64 %49, 288230376151711744, !dbg !9072
  %tobool63 = icmp ne i64 %and62, 0, !dbg !9072
  br i1 %tobool63, label %cond.true64, label %cond.false65, !dbg !9072

cond.true64:                                      ; preds = %cond.false61
  br label %cond.end397, !dbg !9072

cond.false65:                                     ; preds = %cond.false61
  %50 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and66 = and i64 %50, 144115188075855872, !dbg !9072
  %tobool67 = icmp ne i64 %and66, 0, !dbg !9072
  br i1 %tobool67, label %cond.true68, label %cond.false69, !dbg !9072

cond.true68:                                      ; preds = %cond.false65
  br label %cond.end395, !dbg !9072

cond.false69:                                     ; preds = %cond.false65
  %51 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and70 = and i64 %51, 72057594037927936, !dbg !9072
  %tobool71 = icmp ne i64 %and70, 0, !dbg !9072
  br i1 %tobool71, label %cond.true72, label %cond.false73, !dbg !9072

cond.true72:                                      ; preds = %cond.false69
  br label %cond.end393, !dbg !9072

cond.false73:                                     ; preds = %cond.false69
  %52 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and74 = and i64 %52, 36028797018963968, !dbg !9072
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9072
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9072

cond.true76:                                      ; preds = %cond.false73
  br label %cond.end391, !dbg !9072

cond.false77:                                     ; preds = %cond.false73
  %53 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and78 = and i64 %53, 18014398509481984, !dbg !9072
  %tobool79 = icmp ne i64 %and78, 0, !dbg !9072
  br i1 %tobool79, label %cond.true80, label %cond.false81, !dbg !9072

cond.true80:                                      ; preds = %cond.false77
  br label %cond.end389, !dbg !9072

cond.false81:                                     ; preds = %cond.false77
  %54 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and82 = and i64 %54, 9007199254740992, !dbg !9072
  %tobool83 = icmp ne i64 %and82, 0, !dbg !9072
  br i1 %tobool83, label %cond.true84, label %cond.false85, !dbg !9072

cond.true84:                                      ; preds = %cond.false81
  br label %cond.end387, !dbg !9072

cond.false85:                                     ; preds = %cond.false81
  %55 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and86 = and i64 %55, 4503599627370496, !dbg !9072
  %tobool87 = icmp ne i64 %and86, 0, !dbg !9072
  br i1 %tobool87, label %cond.true88, label %cond.false89, !dbg !9072

cond.true88:                                      ; preds = %cond.false85
  br label %cond.end385, !dbg !9072

cond.false89:                                     ; preds = %cond.false85
  %56 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and90 = and i64 %56, 2251799813685248, !dbg !9072
  %tobool91 = icmp ne i64 %and90, 0, !dbg !9072
  br i1 %tobool91, label %cond.true92, label %cond.false93, !dbg !9072

cond.true92:                                      ; preds = %cond.false89
  br label %cond.end383, !dbg !9072

cond.false93:                                     ; preds = %cond.false89
  %57 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and94 = and i64 %57, 1125899906842624, !dbg !9072
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9072
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9072

cond.true96:                                      ; preds = %cond.false93
  br label %cond.end381, !dbg !9072

cond.false97:                                     ; preds = %cond.false93
  %58 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and98 = and i64 %58, 562949953421312, !dbg !9072
  %tobool99 = icmp ne i64 %and98, 0, !dbg !9072
  br i1 %tobool99, label %cond.true100, label %cond.false101, !dbg !9072

cond.true100:                                     ; preds = %cond.false97
  br label %cond.end379, !dbg !9072

cond.false101:                                    ; preds = %cond.false97
  %59 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and102 = and i64 %59, 281474976710656, !dbg !9072
  %tobool103 = icmp ne i64 %and102, 0, !dbg !9072
  br i1 %tobool103, label %cond.true104, label %cond.false105, !dbg !9072

cond.true104:                                     ; preds = %cond.false101
  br label %cond.end377, !dbg !9072

cond.false105:                                    ; preds = %cond.false101
  %60 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and106 = and i64 %60, 140737488355328, !dbg !9072
  %tobool107 = icmp ne i64 %and106, 0, !dbg !9072
  br i1 %tobool107, label %cond.true108, label %cond.false109, !dbg !9072

cond.true108:                                     ; preds = %cond.false105
  br label %cond.end375, !dbg !9072

cond.false109:                                    ; preds = %cond.false105
  %61 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and110 = and i64 %61, 70368744177664, !dbg !9072
  %tobool111 = icmp ne i64 %and110, 0, !dbg !9072
  br i1 %tobool111, label %cond.true112, label %cond.false113, !dbg !9072

cond.true112:                                     ; preds = %cond.false109
  br label %cond.end373, !dbg !9072

cond.false113:                                    ; preds = %cond.false109
  %62 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and114 = and i64 %62, 35184372088832, !dbg !9072
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9072
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9072

cond.true116:                                     ; preds = %cond.false113
  br label %cond.end371, !dbg !9072

cond.false117:                                    ; preds = %cond.false113
  %63 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and118 = and i64 %63, 17592186044416, !dbg !9072
  %tobool119 = icmp ne i64 %and118, 0, !dbg !9072
  br i1 %tobool119, label %cond.true120, label %cond.false121, !dbg !9072

cond.true120:                                     ; preds = %cond.false117
  br label %cond.end369, !dbg !9072

cond.false121:                                    ; preds = %cond.false117
  %64 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and122 = and i64 %64, 8796093022208, !dbg !9072
  %tobool123 = icmp ne i64 %and122, 0, !dbg !9072
  br i1 %tobool123, label %cond.true124, label %cond.false125, !dbg !9072

cond.true124:                                     ; preds = %cond.false121
  br label %cond.end367, !dbg !9072

cond.false125:                                    ; preds = %cond.false121
  %65 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and126 = and i64 %65, 4398046511104, !dbg !9072
  %tobool127 = icmp ne i64 %and126, 0, !dbg !9072
  br i1 %tobool127, label %cond.true128, label %cond.false129, !dbg !9072

cond.true128:                                     ; preds = %cond.false125
  br label %cond.end365, !dbg !9072

cond.false129:                                    ; preds = %cond.false125
  %66 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and130 = and i64 %66, 2199023255552, !dbg !9072
  %tobool131 = icmp ne i64 %and130, 0, !dbg !9072
  br i1 %tobool131, label %cond.true132, label %cond.false133, !dbg !9072

cond.true132:                                     ; preds = %cond.false129
  br label %cond.end363, !dbg !9072

cond.false133:                                    ; preds = %cond.false129
  %67 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and134 = and i64 %67, 1099511627776, !dbg !9072
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9072
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9072

cond.true136:                                     ; preds = %cond.false133
  br label %cond.end361, !dbg !9072

cond.false137:                                    ; preds = %cond.false133
  %68 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and138 = and i64 %68, 549755813888, !dbg !9072
  %tobool139 = icmp ne i64 %and138, 0, !dbg !9072
  br i1 %tobool139, label %cond.true140, label %cond.false141, !dbg !9072

cond.true140:                                     ; preds = %cond.false137
  br label %cond.end359, !dbg !9072

cond.false141:                                    ; preds = %cond.false137
  %69 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and142 = and i64 %69, 274877906944, !dbg !9072
  %tobool143 = icmp ne i64 %and142, 0, !dbg !9072
  br i1 %tobool143, label %cond.true144, label %cond.false145, !dbg !9072

cond.true144:                                     ; preds = %cond.false141
  br label %cond.end357, !dbg !9072

cond.false145:                                    ; preds = %cond.false141
  %70 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and146 = and i64 %70, 137438953472, !dbg !9072
  %tobool147 = icmp ne i64 %and146, 0, !dbg !9072
  br i1 %tobool147, label %cond.true148, label %cond.false149, !dbg !9072

cond.true148:                                     ; preds = %cond.false145
  br label %cond.end355, !dbg !9072

cond.false149:                                    ; preds = %cond.false145
  %71 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and150 = and i64 %71, 68719476736, !dbg !9072
  %tobool151 = icmp ne i64 %and150, 0, !dbg !9072
  br i1 %tobool151, label %cond.true152, label %cond.false153, !dbg !9072

cond.true152:                                     ; preds = %cond.false149
  br label %cond.end353, !dbg !9072

cond.false153:                                    ; preds = %cond.false149
  %72 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and154 = and i64 %72, 34359738368, !dbg !9072
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9072
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9072

cond.true156:                                     ; preds = %cond.false153
  br label %cond.end351, !dbg !9072

cond.false157:                                    ; preds = %cond.false153
  %73 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and158 = and i64 %73, 17179869184, !dbg !9072
  %tobool159 = icmp ne i64 %and158, 0, !dbg !9072
  br i1 %tobool159, label %cond.true160, label %cond.false161, !dbg !9072

cond.true160:                                     ; preds = %cond.false157
  br label %cond.end349, !dbg !9072

cond.false161:                                    ; preds = %cond.false157
  %74 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and162 = and i64 %74, 8589934592, !dbg !9072
  %tobool163 = icmp ne i64 %and162, 0, !dbg !9072
  br i1 %tobool163, label %cond.true164, label %cond.false165, !dbg !9072

cond.true164:                                     ; preds = %cond.false161
  br label %cond.end347, !dbg !9072

cond.false165:                                    ; preds = %cond.false161
  %75 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and166 = and i64 %75, 4294967296, !dbg !9072
  %tobool167 = icmp ne i64 %and166, 0, !dbg !9072
  br i1 %tobool167, label %cond.true168, label %cond.false169, !dbg !9072

cond.true168:                                     ; preds = %cond.false165
  br label %cond.end345, !dbg !9072

cond.false169:                                    ; preds = %cond.false165
  %76 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and170 = and i64 %76, 2147483648, !dbg !9072
  %tobool171 = icmp ne i64 %and170, 0, !dbg !9072
  br i1 %tobool171, label %cond.true172, label %cond.false173, !dbg !9072

cond.true172:                                     ; preds = %cond.false169
  br label %cond.end343, !dbg !9072

cond.false173:                                    ; preds = %cond.false169
  %77 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and174 = and i64 %77, 1073741824, !dbg !9072
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9072
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9072

cond.true176:                                     ; preds = %cond.false173
  br label %cond.end341, !dbg !9072

cond.false177:                                    ; preds = %cond.false173
  %78 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and178 = and i64 %78, 536870912, !dbg !9072
  %tobool179 = icmp ne i64 %and178, 0, !dbg !9072
  br i1 %tobool179, label %cond.true180, label %cond.false181, !dbg !9072

cond.true180:                                     ; preds = %cond.false177
  br label %cond.end339, !dbg !9072

cond.false181:                                    ; preds = %cond.false177
  %79 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and182 = and i64 %79, 268435456, !dbg !9072
  %tobool183 = icmp ne i64 %and182, 0, !dbg !9072
  br i1 %tobool183, label %cond.true184, label %cond.false185, !dbg !9072

cond.true184:                                     ; preds = %cond.false181
  br label %cond.end337, !dbg !9072

cond.false185:                                    ; preds = %cond.false181
  %80 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and186 = and i64 %80, 134217728, !dbg !9072
  %tobool187 = icmp ne i64 %and186, 0, !dbg !9072
  br i1 %tobool187, label %cond.true188, label %cond.false189, !dbg !9072

cond.true188:                                     ; preds = %cond.false185
  br label %cond.end335, !dbg !9072

cond.false189:                                    ; preds = %cond.false185
  %81 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and190 = and i64 %81, 67108864, !dbg !9072
  %tobool191 = icmp ne i64 %and190, 0, !dbg !9072
  br i1 %tobool191, label %cond.true192, label %cond.false193, !dbg !9072

cond.true192:                                     ; preds = %cond.false189
  br label %cond.end333, !dbg !9072

cond.false193:                                    ; preds = %cond.false189
  %82 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and194 = and i64 %82, 33554432, !dbg !9072
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9072
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9072

cond.true196:                                     ; preds = %cond.false193
  br label %cond.end331, !dbg !9072

cond.false197:                                    ; preds = %cond.false193
  %83 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and198 = and i64 %83, 16777216, !dbg !9072
  %tobool199 = icmp ne i64 %and198, 0, !dbg !9072
  br i1 %tobool199, label %cond.true200, label %cond.false201, !dbg !9072

cond.true200:                                     ; preds = %cond.false197
  br label %cond.end329, !dbg !9072

cond.false201:                                    ; preds = %cond.false197
  %84 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and202 = and i64 %84, 8388608, !dbg !9072
  %tobool203 = icmp ne i64 %and202, 0, !dbg !9072
  br i1 %tobool203, label %cond.true204, label %cond.false205, !dbg !9072

cond.true204:                                     ; preds = %cond.false201
  br label %cond.end327, !dbg !9072

cond.false205:                                    ; preds = %cond.false201
  %85 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and206 = and i64 %85, 4194304, !dbg !9072
  %tobool207 = icmp ne i64 %and206, 0, !dbg !9072
  br i1 %tobool207, label %cond.true208, label %cond.false209, !dbg !9072

cond.true208:                                     ; preds = %cond.false205
  br label %cond.end325, !dbg !9072

cond.false209:                                    ; preds = %cond.false205
  %86 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and210 = and i64 %86, 2097152, !dbg !9072
  %tobool211 = icmp ne i64 %and210, 0, !dbg !9072
  br i1 %tobool211, label %cond.true212, label %cond.false213, !dbg !9072

cond.true212:                                     ; preds = %cond.false209
  br label %cond.end323, !dbg !9072

cond.false213:                                    ; preds = %cond.false209
  %87 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and214 = and i64 %87, 1048576, !dbg !9072
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9072
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9072

cond.true216:                                     ; preds = %cond.false213
  br label %cond.end321, !dbg !9072

cond.false217:                                    ; preds = %cond.false213
  %88 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and218 = and i64 %88, 524288, !dbg !9072
  %tobool219 = icmp ne i64 %and218, 0, !dbg !9072
  br i1 %tobool219, label %cond.true220, label %cond.false221, !dbg !9072

cond.true220:                                     ; preds = %cond.false217
  br label %cond.end319, !dbg !9072

cond.false221:                                    ; preds = %cond.false217
  %89 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and222 = and i64 %89, 262144, !dbg !9072
  %tobool223 = icmp ne i64 %and222, 0, !dbg !9072
  br i1 %tobool223, label %cond.true224, label %cond.false225, !dbg !9072

cond.true224:                                     ; preds = %cond.false221
  br label %cond.end317, !dbg !9072

cond.false225:                                    ; preds = %cond.false221
  %90 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and226 = and i64 %90, 131072, !dbg !9072
  %tobool227 = icmp ne i64 %and226, 0, !dbg !9072
  br i1 %tobool227, label %cond.true228, label %cond.false229, !dbg !9072

cond.true228:                                     ; preds = %cond.false225
  br label %cond.end315, !dbg !9072

cond.false229:                                    ; preds = %cond.false225
  %91 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and230 = and i64 %91, 65536, !dbg !9072
  %tobool231 = icmp ne i64 %and230, 0, !dbg !9072
  br i1 %tobool231, label %cond.true232, label %cond.false233, !dbg !9072

cond.true232:                                     ; preds = %cond.false229
  br label %cond.end313, !dbg !9072

cond.false233:                                    ; preds = %cond.false229
  %92 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and234 = and i64 %92, 32768, !dbg !9072
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9072
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9072

cond.true236:                                     ; preds = %cond.false233
  br label %cond.end311, !dbg !9072

cond.false237:                                    ; preds = %cond.false233
  %93 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and238 = and i64 %93, 16384, !dbg !9072
  %tobool239 = icmp ne i64 %and238, 0, !dbg !9072
  br i1 %tobool239, label %cond.true240, label %cond.false241, !dbg !9072

cond.true240:                                     ; preds = %cond.false237
  br label %cond.end309, !dbg !9072

cond.false241:                                    ; preds = %cond.false237
  %94 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and242 = and i64 %94, 8192, !dbg !9072
  %tobool243 = icmp ne i64 %and242, 0, !dbg !9072
  br i1 %tobool243, label %cond.true244, label %cond.false245, !dbg !9072

cond.true244:                                     ; preds = %cond.false241
  br label %cond.end307, !dbg !9072

cond.false245:                                    ; preds = %cond.false241
  %95 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and246 = and i64 %95, 4096, !dbg !9072
  %tobool247 = icmp ne i64 %and246, 0, !dbg !9072
  br i1 %tobool247, label %cond.true248, label %cond.false249, !dbg !9072

cond.true248:                                     ; preds = %cond.false245
  br label %cond.end305, !dbg !9072

cond.false249:                                    ; preds = %cond.false245
  %96 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and250 = and i64 %96, 2048, !dbg !9072
  %tobool251 = icmp ne i64 %and250, 0, !dbg !9072
  br i1 %tobool251, label %cond.true252, label %cond.false253, !dbg !9072

cond.true252:                                     ; preds = %cond.false249
  br label %cond.end303, !dbg !9072

cond.false253:                                    ; preds = %cond.false249
  %97 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and254 = and i64 %97, 1024, !dbg !9072
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9072
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9072

cond.true256:                                     ; preds = %cond.false253
  br label %cond.end301, !dbg !9072

cond.false257:                                    ; preds = %cond.false253
  %98 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and258 = and i64 %98, 512, !dbg !9072
  %tobool259 = icmp ne i64 %and258, 0, !dbg !9072
  br i1 %tobool259, label %cond.true260, label %cond.false261, !dbg !9072

cond.true260:                                     ; preds = %cond.false257
  br label %cond.end299, !dbg !9072

cond.false261:                                    ; preds = %cond.false257
  %99 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and262 = and i64 %99, 256, !dbg !9072
  %tobool263 = icmp ne i64 %and262, 0, !dbg !9072
  br i1 %tobool263, label %cond.true264, label %cond.false265, !dbg !9072

cond.true264:                                     ; preds = %cond.false261
  br label %cond.end297, !dbg !9072

cond.false265:                                    ; preds = %cond.false261
  %100 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and266 = and i64 %100, 128, !dbg !9072
  %tobool267 = icmp ne i64 %and266, 0, !dbg !9072
  br i1 %tobool267, label %cond.true268, label %cond.false269, !dbg !9072

cond.true268:                                     ; preds = %cond.false265
  br label %cond.end295, !dbg !9072

cond.false269:                                    ; preds = %cond.false265
  %101 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and270 = and i64 %101, 64, !dbg !9072
  %tobool271 = icmp ne i64 %and270, 0, !dbg !9072
  br i1 %tobool271, label %cond.true272, label %cond.false273, !dbg !9072

cond.true272:                                     ; preds = %cond.false269
  br label %cond.end293, !dbg !9072

cond.false273:                                    ; preds = %cond.false269
  %102 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and274 = and i64 %102, 32, !dbg !9072
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9072
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9072

cond.true276:                                     ; preds = %cond.false273
  br label %cond.end291, !dbg !9072

cond.false277:                                    ; preds = %cond.false273
  %103 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and278 = and i64 %103, 16, !dbg !9072
  %tobool279 = icmp ne i64 %and278, 0, !dbg !9072
  br i1 %tobool279, label %cond.true280, label %cond.false281, !dbg !9072

cond.true280:                                     ; preds = %cond.false277
  br label %cond.end289, !dbg !9072

cond.false281:                                    ; preds = %cond.false277
  %104 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and282 = and i64 %104, 8, !dbg !9072
  %tobool283 = icmp ne i64 %and282, 0, !dbg !9072
  br i1 %tobool283, label %cond.true284, label %cond.false285, !dbg !9072

cond.true284:                                     ; preds = %cond.false281
  br label %cond.end, !dbg !9072

cond.false285:                                    ; preds = %cond.false281
  %105 = load i64, i64* %lock_len, align 8, !dbg !9072
  %and286 = and i64 %105, 4, !dbg !9072
  %tobool287 = icmp ne i64 %and286, 0, !dbg !9072
  %106 = zext i1 %tobool287 to i64, !dbg !9072
  %cond = select i1 %tobool287, i32 2, i32 1, !dbg !9072
  br label %cond.end, !dbg !9072

cond.end:                                         ; preds = %cond.false285, %cond.true284
  %cond288 = phi i32 [ 3, %cond.true284 ], [ %cond, %cond.false285 ], !dbg !9072
  br label %cond.end289, !dbg !9072

cond.end289:                                      ; preds = %cond.end, %cond.true280
  %cond290 = phi i32 [ 4, %cond.true280 ], [ %cond288, %cond.end ], !dbg !9072
  br label %cond.end291, !dbg !9072

cond.end291:                                      ; preds = %cond.end289, %cond.true276
  %cond292 = phi i32 [ 5, %cond.true276 ], [ %cond290, %cond.end289 ], !dbg !9072
  br label %cond.end293, !dbg !9072

cond.end293:                                      ; preds = %cond.end291, %cond.true272
  %cond294 = phi i32 [ 6, %cond.true272 ], [ %cond292, %cond.end291 ], !dbg !9072
  br label %cond.end295, !dbg !9072

cond.end295:                                      ; preds = %cond.end293, %cond.true268
  %cond296 = phi i32 [ 7, %cond.true268 ], [ %cond294, %cond.end293 ], !dbg !9072
  br label %cond.end297, !dbg !9072

cond.end297:                                      ; preds = %cond.end295, %cond.true264
  %cond298 = phi i32 [ 8, %cond.true264 ], [ %cond296, %cond.end295 ], !dbg !9072
  br label %cond.end299, !dbg !9072

cond.end299:                                      ; preds = %cond.end297, %cond.true260
  %cond300 = phi i32 [ 9, %cond.true260 ], [ %cond298, %cond.end297 ], !dbg !9072
  br label %cond.end301, !dbg !9072

cond.end301:                                      ; preds = %cond.end299, %cond.true256
  %cond302 = phi i32 [ 10, %cond.true256 ], [ %cond300, %cond.end299 ], !dbg !9072
  br label %cond.end303, !dbg !9072

cond.end303:                                      ; preds = %cond.end301, %cond.true252
  %cond304 = phi i32 [ 11, %cond.true252 ], [ %cond302, %cond.end301 ], !dbg !9072
  br label %cond.end305, !dbg !9072

cond.end305:                                      ; preds = %cond.end303, %cond.true248
  %cond306 = phi i32 [ 12, %cond.true248 ], [ %cond304, %cond.end303 ], !dbg !9072
  br label %cond.end307, !dbg !9072

cond.end307:                                      ; preds = %cond.end305, %cond.true244
  %cond308 = phi i32 [ 13, %cond.true244 ], [ %cond306, %cond.end305 ], !dbg !9072
  br label %cond.end309, !dbg !9072

cond.end309:                                      ; preds = %cond.end307, %cond.true240
  %cond310 = phi i32 [ 14, %cond.true240 ], [ %cond308, %cond.end307 ], !dbg !9072
  br label %cond.end311, !dbg !9072

cond.end311:                                      ; preds = %cond.end309, %cond.true236
  %cond312 = phi i32 [ 15, %cond.true236 ], [ %cond310, %cond.end309 ], !dbg !9072
  br label %cond.end313, !dbg !9072

cond.end313:                                      ; preds = %cond.end311, %cond.true232
  %cond314 = phi i32 [ 16, %cond.true232 ], [ %cond312, %cond.end311 ], !dbg !9072
  br label %cond.end315, !dbg !9072

cond.end315:                                      ; preds = %cond.end313, %cond.true228
  %cond316 = phi i32 [ 17, %cond.true228 ], [ %cond314, %cond.end313 ], !dbg !9072
  br label %cond.end317, !dbg !9072

cond.end317:                                      ; preds = %cond.end315, %cond.true224
  %cond318 = phi i32 [ 18, %cond.true224 ], [ %cond316, %cond.end315 ], !dbg !9072
  br label %cond.end319, !dbg !9072

cond.end319:                                      ; preds = %cond.end317, %cond.true220
  %cond320 = phi i32 [ 19, %cond.true220 ], [ %cond318, %cond.end317 ], !dbg !9072
  br label %cond.end321, !dbg !9072

cond.end321:                                      ; preds = %cond.end319, %cond.true216
  %cond322 = phi i32 [ 20, %cond.true216 ], [ %cond320, %cond.end319 ], !dbg !9072
  br label %cond.end323, !dbg !9072

cond.end323:                                      ; preds = %cond.end321, %cond.true212
  %cond324 = phi i32 [ 21, %cond.true212 ], [ %cond322, %cond.end321 ], !dbg !9072
  br label %cond.end325, !dbg !9072

cond.end325:                                      ; preds = %cond.end323, %cond.true208
  %cond326 = phi i32 [ 22, %cond.true208 ], [ %cond324, %cond.end323 ], !dbg !9072
  br label %cond.end327, !dbg !9072

cond.end327:                                      ; preds = %cond.end325, %cond.true204
  %cond328 = phi i32 [ 23, %cond.true204 ], [ %cond326, %cond.end325 ], !dbg !9072
  br label %cond.end329, !dbg !9072

cond.end329:                                      ; preds = %cond.end327, %cond.true200
  %cond330 = phi i32 [ 24, %cond.true200 ], [ %cond328, %cond.end327 ], !dbg !9072
  br label %cond.end331, !dbg !9072

cond.end331:                                      ; preds = %cond.end329, %cond.true196
  %cond332 = phi i32 [ 25, %cond.true196 ], [ %cond330, %cond.end329 ], !dbg !9072
  br label %cond.end333, !dbg !9072

cond.end333:                                      ; preds = %cond.end331, %cond.true192
  %cond334 = phi i32 [ 26, %cond.true192 ], [ %cond332, %cond.end331 ], !dbg !9072
  br label %cond.end335, !dbg !9072

cond.end335:                                      ; preds = %cond.end333, %cond.true188
  %cond336 = phi i32 [ 27, %cond.true188 ], [ %cond334, %cond.end333 ], !dbg !9072
  br label %cond.end337, !dbg !9072

cond.end337:                                      ; preds = %cond.end335, %cond.true184
  %cond338 = phi i32 [ 28, %cond.true184 ], [ %cond336, %cond.end335 ], !dbg !9072
  br label %cond.end339, !dbg !9072

cond.end339:                                      ; preds = %cond.end337, %cond.true180
  %cond340 = phi i32 [ 29, %cond.true180 ], [ %cond338, %cond.end337 ], !dbg !9072
  br label %cond.end341, !dbg !9072

cond.end341:                                      ; preds = %cond.end339, %cond.true176
  %cond342 = phi i32 [ 30, %cond.true176 ], [ %cond340, %cond.end339 ], !dbg !9072
  br label %cond.end343, !dbg !9072

cond.end343:                                      ; preds = %cond.end341, %cond.true172
  %cond344 = phi i32 [ 31, %cond.true172 ], [ %cond342, %cond.end341 ], !dbg !9072
  br label %cond.end345, !dbg !9072

cond.end345:                                      ; preds = %cond.end343, %cond.true168
  %cond346 = phi i32 [ 32, %cond.true168 ], [ %cond344, %cond.end343 ], !dbg !9072
  br label %cond.end347, !dbg !9072

cond.end347:                                      ; preds = %cond.end345, %cond.true164
  %cond348 = phi i32 [ 33, %cond.true164 ], [ %cond346, %cond.end345 ], !dbg !9072
  br label %cond.end349, !dbg !9072

cond.end349:                                      ; preds = %cond.end347, %cond.true160
  %cond350 = phi i32 [ 34, %cond.true160 ], [ %cond348, %cond.end347 ], !dbg !9072
  br label %cond.end351, !dbg !9072

cond.end351:                                      ; preds = %cond.end349, %cond.true156
  %cond352 = phi i32 [ 35, %cond.true156 ], [ %cond350, %cond.end349 ], !dbg !9072
  br label %cond.end353, !dbg !9072

cond.end353:                                      ; preds = %cond.end351, %cond.true152
  %cond354 = phi i32 [ 36, %cond.true152 ], [ %cond352, %cond.end351 ], !dbg !9072
  br label %cond.end355, !dbg !9072

cond.end355:                                      ; preds = %cond.end353, %cond.true148
  %cond356 = phi i32 [ 37, %cond.true148 ], [ %cond354, %cond.end353 ], !dbg !9072
  br label %cond.end357, !dbg !9072

cond.end357:                                      ; preds = %cond.end355, %cond.true144
  %cond358 = phi i32 [ 38, %cond.true144 ], [ %cond356, %cond.end355 ], !dbg !9072
  br label %cond.end359, !dbg !9072

cond.end359:                                      ; preds = %cond.end357, %cond.true140
  %cond360 = phi i32 [ 39, %cond.true140 ], [ %cond358, %cond.end357 ], !dbg !9072
  br label %cond.end361, !dbg !9072

cond.end361:                                      ; preds = %cond.end359, %cond.true136
  %cond362 = phi i32 [ 40, %cond.true136 ], [ %cond360, %cond.end359 ], !dbg !9072
  br label %cond.end363, !dbg !9072

cond.end363:                                      ; preds = %cond.end361, %cond.true132
  %cond364 = phi i32 [ 41, %cond.true132 ], [ %cond362, %cond.end361 ], !dbg !9072
  br label %cond.end365, !dbg !9072

cond.end365:                                      ; preds = %cond.end363, %cond.true128
  %cond366 = phi i32 [ 42, %cond.true128 ], [ %cond364, %cond.end363 ], !dbg !9072
  br label %cond.end367, !dbg !9072

cond.end367:                                      ; preds = %cond.end365, %cond.true124
  %cond368 = phi i32 [ 43, %cond.true124 ], [ %cond366, %cond.end365 ], !dbg !9072
  br label %cond.end369, !dbg !9072

cond.end369:                                      ; preds = %cond.end367, %cond.true120
  %cond370 = phi i32 [ 44, %cond.true120 ], [ %cond368, %cond.end367 ], !dbg !9072
  br label %cond.end371, !dbg !9072

cond.end371:                                      ; preds = %cond.end369, %cond.true116
  %cond372 = phi i32 [ 45, %cond.true116 ], [ %cond370, %cond.end369 ], !dbg !9072
  br label %cond.end373, !dbg !9072

cond.end373:                                      ; preds = %cond.end371, %cond.true112
  %cond374 = phi i32 [ 46, %cond.true112 ], [ %cond372, %cond.end371 ], !dbg !9072
  br label %cond.end375, !dbg !9072

cond.end375:                                      ; preds = %cond.end373, %cond.true108
  %cond376 = phi i32 [ 47, %cond.true108 ], [ %cond374, %cond.end373 ], !dbg !9072
  br label %cond.end377, !dbg !9072

cond.end377:                                      ; preds = %cond.end375, %cond.true104
  %cond378 = phi i32 [ 48, %cond.true104 ], [ %cond376, %cond.end375 ], !dbg !9072
  br label %cond.end379, !dbg !9072

cond.end379:                                      ; preds = %cond.end377, %cond.true100
  %cond380 = phi i32 [ 49, %cond.true100 ], [ %cond378, %cond.end377 ], !dbg !9072
  br label %cond.end381, !dbg !9072

cond.end381:                                      ; preds = %cond.end379, %cond.true96
  %cond382 = phi i32 [ 50, %cond.true96 ], [ %cond380, %cond.end379 ], !dbg !9072
  br label %cond.end383, !dbg !9072

cond.end383:                                      ; preds = %cond.end381, %cond.true92
  %cond384 = phi i32 [ 51, %cond.true92 ], [ %cond382, %cond.end381 ], !dbg !9072
  br label %cond.end385, !dbg !9072

cond.end385:                                      ; preds = %cond.end383, %cond.true88
  %cond386 = phi i32 [ 52, %cond.true88 ], [ %cond384, %cond.end383 ], !dbg !9072
  br label %cond.end387, !dbg !9072

cond.end387:                                      ; preds = %cond.end385, %cond.true84
  %cond388 = phi i32 [ 53, %cond.true84 ], [ %cond386, %cond.end385 ], !dbg !9072
  br label %cond.end389, !dbg !9072

cond.end389:                                      ; preds = %cond.end387, %cond.true80
  %cond390 = phi i32 [ 54, %cond.true80 ], [ %cond388, %cond.end387 ], !dbg !9072
  br label %cond.end391, !dbg !9072

cond.end391:                                      ; preds = %cond.end389, %cond.true76
  %cond392 = phi i32 [ 55, %cond.true76 ], [ %cond390, %cond.end389 ], !dbg !9072
  br label %cond.end393, !dbg !9072

cond.end393:                                      ; preds = %cond.end391, %cond.true72
  %cond394 = phi i32 [ 56, %cond.true72 ], [ %cond392, %cond.end391 ], !dbg !9072
  br label %cond.end395, !dbg !9072

cond.end395:                                      ; preds = %cond.end393, %cond.true68
  %cond396 = phi i32 [ 57, %cond.true68 ], [ %cond394, %cond.end393 ], !dbg !9072
  br label %cond.end397, !dbg !9072

cond.end397:                                      ; preds = %cond.end395, %cond.true64
  %cond398 = phi i32 [ 58, %cond.true64 ], [ %cond396, %cond.end395 ], !dbg !9072
  br label %cond.end399, !dbg !9072

cond.end399:                                      ; preds = %cond.end397, %cond.true60
  %cond400 = phi i32 [ 59, %cond.true60 ], [ %cond398, %cond.end397 ], !dbg !9072
  br label %cond.end401, !dbg !9072

cond.end401:                                      ; preds = %cond.end399, %cond.true56
  %cond402 = phi i32 [ 60, %cond.true56 ], [ %cond400, %cond.end399 ], !dbg !9072
  br label %cond.end403, !dbg !9072

cond.end403:                                      ; preds = %cond.end401, %cond.true52
  %cond404 = phi i32 [ 61, %cond.true52 ], [ %cond402, %cond.end401 ], !dbg !9072
  br label %cond.end405, !dbg !9072

cond.end405:                                      ; preds = %cond.end403, %cond.true48
  %cond406 = phi i32 [ 62, %cond.true48 ], [ %cond404, %cond.end403 ], !dbg !9072
  br label %cond.end407, !dbg !9072

cond.end407:                                      ; preds = %cond.end405, %cond.true44
  %cond408 = phi i32 [ 63, %cond.true44 ], [ %cond406, %cond.end405 ], !dbg !9072
  br label %cond.end409, !dbg !9072

cond.end409:                                      ; preds = %cond.end407, %cond.true41
  %cond410 = phi i32 [ 0, %cond.true41 ], [ %cond408, %cond.end407 ], !dbg !9072
  br label %cond.end412, !dbg !9072

cond.false411:                                    ; preds = %cond.true
  br label %cond.end412, !dbg !9072

cond.end412:                                      ; preds = %cond.false411, %cond.end409
  %cond413 = phi i32 [ %cond410, %cond.end409 ], [ -1, %cond.false411 ], !dbg !9072
  br label %cond.end416, !dbg !9072

cond.false414:                                    ; preds = %if.else36
  %107 = load i64, i64* %lock_len, align 8, !dbg !9072
  %call415 = call i32 @__ilog2_u64(i64 %107) #14, !dbg !9072
  br label %cond.end416, !dbg !9072

cond.end416:                                      ; preds = %cond.false414, %cond.end412
  %cond417 = phi i32 [ %cond413, %cond.end412 ], [ %call415, %cond.false414 ], !dbg !9072
  %108 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %109 = call i1 @llvm.is.constant.i64(i64 %108), !dbg !9073
  br i1 %109, label %cond.true418, label %cond.false798, !dbg !9073

cond.true418:                                     ; preds = %cond.end416
  %110 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %111 = call i1 @llvm.is.constant.i64(i64 %110), !dbg !9073
  br i1 %111, label %cond.true419, label %cond.false795, !dbg !9073

cond.true419:                                     ; preds = %cond.true418
  %112 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %cmp420 = icmp ult i64 %112, 2, !dbg !9073
  br i1 %cmp420, label %cond.true422, label %cond.false423, !dbg !9073

cond.true422:                                     ; preds = %cond.true419
  br label %cond.end793, !dbg !9073

cond.false423:                                    ; preds = %cond.true419
  %113 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and424 = and i64 %113, -9223372036854775808, !dbg !9073
  %tobool425 = icmp ne i64 %and424, 0, !dbg !9073
  br i1 %tobool425, label %cond.true426, label %cond.false427, !dbg !9073

cond.true426:                                     ; preds = %cond.false423
  br label %cond.end791, !dbg !9073

cond.false427:                                    ; preds = %cond.false423
  %114 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and428 = and i64 %114, 4611686018427387904, !dbg !9073
  %tobool429 = icmp ne i64 %and428, 0, !dbg !9073
  br i1 %tobool429, label %cond.true430, label %cond.false431, !dbg !9073

cond.true430:                                     ; preds = %cond.false427
  br label %cond.end789, !dbg !9073

cond.false431:                                    ; preds = %cond.false427
  %115 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and432 = and i64 %115, 2305843009213693952, !dbg !9073
  %tobool433 = icmp ne i64 %and432, 0, !dbg !9073
  br i1 %tobool433, label %cond.true434, label %cond.false435, !dbg !9073

cond.true434:                                     ; preds = %cond.false431
  br label %cond.end787, !dbg !9073

cond.false435:                                    ; preds = %cond.false431
  %116 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and436 = and i64 %116, 1152921504606846976, !dbg !9073
  %tobool437 = icmp ne i64 %and436, 0, !dbg !9073
  br i1 %tobool437, label %cond.true438, label %cond.false439, !dbg !9073

cond.true438:                                     ; preds = %cond.false435
  br label %cond.end785, !dbg !9073

cond.false439:                                    ; preds = %cond.false435
  %117 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and440 = and i64 %117, 576460752303423488, !dbg !9073
  %tobool441 = icmp ne i64 %and440, 0, !dbg !9073
  br i1 %tobool441, label %cond.true442, label %cond.false443, !dbg !9073

cond.true442:                                     ; preds = %cond.false439
  br label %cond.end783, !dbg !9073

cond.false443:                                    ; preds = %cond.false439
  %118 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and444 = and i64 %118, 288230376151711744, !dbg !9073
  %tobool445 = icmp ne i64 %and444, 0, !dbg !9073
  br i1 %tobool445, label %cond.true446, label %cond.false447, !dbg !9073

cond.true446:                                     ; preds = %cond.false443
  br label %cond.end781, !dbg !9073

cond.false447:                                    ; preds = %cond.false443
  %119 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and448 = and i64 %119, 144115188075855872, !dbg !9073
  %tobool449 = icmp ne i64 %and448, 0, !dbg !9073
  br i1 %tobool449, label %cond.true450, label %cond.false451, !dbg !9073

cond.true450:                                     ; preds = %cond.false447
  br label %cond.end779, !dbg !9073

cond.false451:                                    ; preds = %cond.false447
  %120 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and452 = and i64 %120, 72057594037927936, !dbg !9073
  %tobool453 = icmp ne i64 %and452, 0, !dbg !9073
  br i1 %tobool453, label %cond.true454, label %cond.false455, !dbg !9073

cond.true454:                                     ; preds = %cond.false451
  br label %cond.end777, !dbg !9073

cond.false455:                                    ; preds = %cond.false451
  %121 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and456 = and i64 %121, 36028797018963968, !dbg !9073
  %tobool457 = icmp ne i64 %and456, 0, !dbg !9073
  br i1 %tobool457, label %cond.true458, label %cond.false459, !dbg !9073

cond.true458:                                     ; preds = %cond.false455
  br label %cond.end775, !dbg !9073

cond.false459:                                    ; preds = %cond.false455
  %122 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and460 = and i64 %122, 18014398509481984, !dbg !9073
  %tobool461 = icmp ne i64 %and460, 0, !dbg !9073
  br i1 %tobool461, label %cond.true462, label %cond.false463, !dbg !9073

cond.true462:                                     ; preds = %cond.false459
  br label %cond.end773, !dbg !9073

cond.false463:                                    ; preds = %cond.false459
  %123 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and464 = and i64 %123, 9007199254740992, !dbg !9073
  %tobool465 = icmp ne i64 %and464, 0, !dbg !9073
  br i1 %tobool465, label %cond.true466, label %cond.false467, !dbg !9073

cond.true466:                                     ; preds = %cond.false463
  br label %cond.end771, !dbg !9073

cond.false467:                                    ; preds = %cond.false463
  %124 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and468 = and i64 %124, 4503599627370496, !dbg !9073
  %tobool469 = icmp ne i64 %and468, 0, !dbg !9073
  br i1 %tobool469, label %cond.true470, label %cond.false471, !dbg !9073

cond.true470:                                     ; preds = %cond.false467
  br label %cond.end769, !dbg !9073

cond.false471:                                    ; preds = %cond.false467
  %125 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and472 = and i64 %125, 2251799813685248, !dbg !9073
  %tobool473 = icmp ne i64 %and472, 0, !dbg !9073
  br i1 %tobool473, label %cond.true474, label %cond.false475, !dbg !9073

cond.true474:                                     ; preds = %cond.false471
  br label %cond.end767, !dbg !9073

cond.false475:                                    ; preds = %cond.false471
  %126 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and476 = and i64 %126, 1125899906842624, !dbg !9073
  %tobool477 = icmp ne i64 %and476, 0, !dbg !9073
  br i1 %tobool477, label %cond.true478, label %cond.false479, !dbg !9073

cond.true478:                                     ; preds = %cond.false475
  br label %cond.end765, !dbg !9073

cond.false479:                                    ; preds = %cond.false475
  %127 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and480 = and i64 %127, 562949953421312, !dbg !9073
  %tobool481 = icmp ne i64 %and480, 0, !dbg !9073
  br i1 %tobool481, label %cond.true482, label %cond.false483, !dbg !9073

cond.true482:                                     ; preds = %cond.false479
  br label %cond.end763, !dbg !9073

cond.false483:                                    ; preds = %cond.false479
  %128 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and484 = and i64 %128, 281474976710656, !dbg !9073
  %tobool485 = icmp ne i64 %and484, 0, !dbg !9073
  br i1 %tobool485, label %cond.true486, label %cond.false487, !dbg !9073

cond.true486:                                     ; preds = %cond.false483
  br label %cond.end761, !dbg !9073

cond.false487:                                    ; preds = %cond.false483
  %129 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and488 = and i64 %129, 140737488355328, !dbg !9073
  %tobool489 = icmp ne i64 %and488, 0, !dbg !9073
  br i1 %tobool489, label %cond.true490, label %cond.false491, !dbg !9073

cond.true490:                                     ; preds = %cond.false487
  br label %cond.end759, !dbg !9073

cond.false491:                                    ; preds = %cond.false487
  %130 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and492 = and i64 %130, 70368744177664, !dbg !9073
  %tobool493 = icmp ne i64 %and492, 0, !dbg !9073
  br i1 %tobool493, label %cond.true494, label %cond.false495, !dbg !9073

cond.true494:                                     ; preds = %cond.false491
  br label %cond.end757, !dbg !9073

cond.false495:                                    ; preds = %cond.false491
  %131 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and496 = and i64 %131, 35184372088832, !dbg !9073
  %tobool497 = icmp ne i64 %and496, 0, !dbg !9073
  br i1 %tobool497, label %cond.true498, label %cond.false499, !dbg !9073

cond.true498:                                     ; preds = %cond.false495
  br label %cond.end755, !dbg !9073

cond.false499:                                    ; preds = %cond.false495
  %132 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and500 = and i64 %132, 17592186044416, !dbg !9073
  %tobool501 = icmp ne i64 %and500, 0, !dbg !9073
  br i1 %tobool501, label %cond.true502, label %cond.false503, !dbg !9073

cond.true502:                                     ; preds = %cond.false499
  br label %cond.end753, !dbg !9073

cond.false503:                                    ; preds = %cond.false499
  %133 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and504 = and i64 %133, 8796093022208, !dbg !9073
  %tobool505 = icmp ne i64 %and504, 0, !dbg !9073
  br i1 %tobool505, label %cond.true506, label %cond.false507, !dbg !9073

cond.true506:                                     ; preds = %cond.false503
  br label %cond.end751, !dbg !9073

cond.false507:                                    ; preds = %cond.false503
  %134 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and508 = and i64 %134, 4398046511104, !dbg !9073
  %tobool509 = icmp ne i64 %and508, 0, !dbg !9073
  br i1 %tobool509, label %cond.true510, label %cond.false511, !dbg !9073

cond.true510:                                     ; preds = %cond.false507
  br label %cond.end749, !dbg !9073

cond.false511:                                    ; preds = %cond.false507
  %135 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and512 = and i64 %135, 2199023255552, !dbg !9073
  %tobool513 = icmp ne i64 %and512, 0, !dbg !9073
  br i1 %tobool513, label %cond.true514, label %cond.false515, !dbg !9073

cond.true514:                                     ; preds = %cond.false511
  br label %cond.end747, !dbg !9073

cond.false515:                                    ; preds = %cond.false511
  %136 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and516 = and i64 %136, 1099511627776, !dbg !9073
  %tobool517 = icmp ne i64 %and516, 0, !dbg !9073
  br i1 %tobool517, label %cond.true518, label %cond.false519, !dbg !9073

cond.true518:                                     ; preds = %cond.false515
  br label %cond.end745, !dbg !9073

cond.false519:                                    ; preds = %cond.false515
  %137 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and520 = and i64 %137, 549755813888, !dbg !9073
  %tobool521 = icmp ne i64 %and520, 0, !dbg !9073
  br i1 %tobool521, label %cond.true522, label %cond.false523, !dbg !9073

cond.true522:                                     ; preds = %cond.false519
  br label %cond.end743, !dbg !9073

cond.false523:                                    ; preds = %cond.false519
  %138 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and524 = and i64 %138, 274877906944, !dbg !9073
  %tobool525 = icmp ne i64 %and524, 0, !dbg !9073
  br i1 %tobool525, label %cond.true526, label %cond.false527, !dbg !9073

cond.true526:                                     ; preds = %cond.false523
  br label %cond.end741, !dbg !9073

cond.false527:                                    ; preds = %cond.false523
  %139 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and528 = and i64 %139, 137438953472, !dbg !9073
  %tobool529 = icmp ne i64 %and528, 0, !dbg !9073
  br i1 %tobool529, label %cond.true530, label %cond.false531, !dbg !9073

cond.true530:                                     ; preds = %cond.false527
  br label %cond.end739, !dbg !9073

cond.false531:                                    ; preds = %cond.false527
  %140 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and532 = and i64 %140, 68719476736, !dbg !9073
  %tobool533 = icmp ne i64 %and532, 0, !dbg !9073
  br i1 %tobool533, label %cond.true534, label %cond.false535, !dbg !9073

cond.true534:                                     ; preds = %cond.false531
  br label %cond.end737, !dbg !9073

cond.false535:                                    ; preds = %cond.false531
  %141 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and536 = and i64 %141, 34359738368, !dbg !9073
  %tobool537 = icmp ne i64 %and536, 0, !dbg !9073
  br i1 %tobool537, label %cond.true538, label %cond.false539, !dbg !9073

cond.true538:                                     ; preds = %cond.false535
  br label %cond.end735, !dbg !9073

cond.false539:                                    ; preds = %cond.false535
  %142 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and540 = and i64 %142, 17179869184, !dbg !9073
  %tobool541 = icmp ne i64 %and540, 0, !dbg !9073
  br i1 %tobool541, label %cond.true542, label %cond.false543, !dbg !9073

cond.true542:                                     ; preds = %cond.false539
  br label %cond.end733, !dbg !9073

cond.false543:                                    ; preds = %cond.false539
  %143 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and544 = and i64 %143, 8589934592, !dbg !9073
  %tobool545 = icmp ne i64 %and544, 0, !dbg !9073
  br i1 %tobool545, label %cond.true546, label %cond.false547, !dbg !9073

cond.true546:                                     ; preds = %cond.false543
  br label %cond.end731, !dbg !9073

cond.false547:                                    ; preds = %cond.false543
  %144 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and548 = and i64 %144, 4294967296, !dbg !9073
  %tobool549 = icmp ne i64 %and548, 0, !dbg !9073
  br i1 %tobool549, label %cond.true550, label %cond.false551, !dbg !9073

cond.true550:                                     ; preds = %cond.false547
  br label %cond.end729, !dbg !9073

cond.false551:                                    ; preds = %cond.false547
  %145 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and552 = and i64 %145, 2147483648, !dbg !9073
  %tobool553 = icmp ne i64 %and552, 0, !dbg !9073
  br i1 %tobool553, label %cond.true554, label %cond.false555, !dbg !9073

cond.true554:                                     ; preds = %cond.false551
  br label %cond.end727, !dbg !9073

cond.false555:                                    ; preds = %cond.false551
  %146 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and556 = and i64 %146, 1073741824, !dbg !9073
  %tobool557 = icmp ne i64 %and556, 0, !dbg !9073
  br i1 %tobool557, label %cond.true558, label %cond.false559, !dbg !9073

cond.true558:                                     ; preds = %cond.false555
  br label %cond.end725, !dbg !9073

cond.false559:                                    ; preds = %cond.false555
  %147 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and560 = and i64 %147, 536870912, !dbg !9073
  %tobool561 = icmp ne i64 %and560, 0, !dbg !9073
  br i1 %tobool561, label %cond.true562, label %cond.false563, !dbg !9073

cond.true562:                                     ; preds = %cond.false559
  br label %cond.end723, !dbg !9073

cond.false563:                                    ; preds = %cond.false559
  %148 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and564 = and i64 %148, 268435456, !dbg !9073
  %tobool565 = icmp ne i64 %and564, 0, !dbg !9073
  br i1 %tobool565, label %cond.true566, label %cond.false567, !dbg !9073

cond.true566:                                     ; preds = %cond.false563
  br label %cond.end721, !dbg !9073

cond.false567:                                    ; preds = %cond.false563
  %149 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and568 = and i64 %149, 134217728, !dbg !9073
  %tobool569 = icmp ne i64 %and568, 0, !dbg !9073
  br i1 %tobool569, label %cond.true570, label %cond.false571, !dbg !9073

cond.true570:                                     ; preds = %cond.false567
  br label %cond.end719, !dbg !9073

cond.false571:                                    ; preds = %cond.false567
  %150 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and572 = and i64 %150, 67108864, !dbg !9073
  %tobool573 = icmp ne i64 %and572, 0, !dbg !9073
  br i1 %tobool573, label %cond.true574, label %cond.false575, !dbg !9073

cond.true574:                                     ; preds = %cond.false571
  br label %cond.end717, !dbg !9073

cond.false575:                                    ; preds = %cond.false571
  %151 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and576 = and i64 %151, 33554432, !dbg !9073
  %tobool577 = icmp ne i64 %and576, 0, !dbg !9073
  br i1 %tobool577, label %cond.true578, label %cond.false579, !dbg !9073

cond.true578:                                     ; preds = %cond.false575
  br label %cond.end715, !dbg !9073

cond.false579:                                    ; preds = %cond.false575
  %152 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and580 = and i64 %152, 16777216, !dbg !9073
  %tobool581 = icmp ne i64 %and580, 0, !dbg !9073
  br i1 %tobool581, label %cond.true582, label %cond.false583, !dbg !9073

cond.true582:                                     ; preds = %cond.false579
  br label %cond.end713, !dbg !9073

cond.false583:                                    ; preds = %cond.false579
  %153 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and584 = and i64 %153, 8388608, !dbg !9073
  %tobool585 = icmp ne i64 %and584, 0, !dbg !9073
  br i1 %tobool585, label %cond.true586, label %cond.false587, !dbg !9073

cond.true586:                                     ; preds = %cond.false583
  br label %cond.end711, !dbg !9073

cond.false587:                                    ; preds = %cond.false583
  %154 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and588 = and i64 %154, 4194304, !dbg !9073
  %tobool589 = icmp ne i64 %and588, 0, !dbg !9073
  br i1 %tobool589, label %cond.true590, label %cond.false591, !dbg !9073

cond.true590:                                     ; preds = %cond.false587
  br label %cond.end709, !dbg !9073

cond.false591:                                    ; preds = %cond.false587
  %155 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and592 = and i64 %155, 2097152, !dbg !9073
  %tobool593 = icmp ne i64 %and592, 0, !dbg !9073
  br i1 %tobool593, label %cond.true594, label %cond.false595, !dbg !9073

cond.true594:                                     ; preds = %cond.false591
  br label %cond.end707, !dbg !9073

cond.false595:                                    ; preds = %cond.false591
  %156 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and596 = and i64 %156, 1048576, !dbg !9073
  %tobool597 = icmp ne i64 %and596, 0, !dbg !9073
  br i1 %tobool597, label %cond.true598, label %cond.false599, !dbg !9073

cond.true598:                                     ; preds = %cond.false595
  br label %cond.end705, !dbg !9073

cond.false599:                                    ; preds = %cond.false595
  %157 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and600 = and i64 %157, 524288, !dbg !9073
  %tobool601 = icmp ne i64 %and600, 0, !dbg !9073
  br i1 %tobool601, label %cond.true602, label %cond.false603, !dbg !9073

cond.true602:                                     ; preds = %cond.false599
  br label %cond.end703, !dbg !9073

cond.false603:                                    ; preds = %cond.false599
  %158 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and604 = and i64 %158, 262144, !dbg !9073
  %tobool605 = icmp ne i64 %and604, 0, !dbg !9073
  br i1 %tobool605, label %cond.true606, label %cond.false607, !dbg !9073

cond.true606:                                     ; preds = %cond.false603
  br label %cond.end701, !dbg !9073

cond.false607:                                    ; preds = %cond.false603
  %159 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and608 = and i64 %159, 131072, !dbg !9073
  %tobool609 = icmp ne i64 %and608, 0, !dbg !9073
  br i1 %tobool609, label %cond.true610, label %cond.false611, !dbg !9073

cond.true610:                                     ; preds = %cond.false607
  br label %cond.end699, !dbg !9073

cond.false611:                                    ; preds = %cond.false607
  %160 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and612 = and i64 %160, 65536, !dbg !9073
  %tobool613 = icmp ne i64 %and612, 0, !dbg !9073
  br i1 %tobool613, label %cond.true614, label %cond.false615, !dbg !9073

cond.true614:                                     ; preds = %cond.false611
  br label %cond.end697, !dbg !9073

cond.false615:                                    ; preds = %cond.false611
  %161 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and616 = and i64 %161, 32768, !dbg !9073
  %tobool617 = icmp ne i64 %and616, 0, !dbg !9073
  br i1 %tobool617, label %cond.true618, label %cond.false619, !dbg !9073

cond.true618:                                     ; preds = %cond.false615
  br label %cond.end695, !dbg !9073

cond.false619:                                    ; preds = %cond.false615
  %162 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and620 = and i64 %162, 16384, !dbg !9073
  %tobool621 = icmp ne i64 %and620, 0, !dbg !9073
  br i1 %tobool621, label %cond.true622, label %cond.false623, !dbg !9073

cond.true622:                                     ; preds = %cond.false619
  br label %cond.end693, !dbg !9073

cond.false623:                                    ; preds = %cond.false619
  %163 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and624 = and i64 %163, 8192, !dbg !9073
  %tobool625 = icmp ne i64 %and624, 0, !dbg !9073
  br i1 %tobool625, label %cond.true626, label %cond.false627, !dbg !9073

cond.true626:                                     ; preds = %cond.false623
  br label %cond.end691, !dbg !9073

cond.false627:                                    ; preds = %cond.false623
  %164 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and628 = and i64 %164, 4096, !dbg !9073
  %tobool629 = icmp ne i64 %and628, 0, !dbg !9073
  br i1 %tobool629, label %cond.true630, label %cond.false631, !dbg !9073

cond.true630:                                     ; preds = %cond.false627
  br label %cond.end689, !dbg !9073

cond.false631:                                    ; preds = %cond.false627
  %165 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and632 = and i64 %165, 2048, !dbg !9073
  %tobool633 = icmp ne i64 %and632, 0, !dbg !9073
  br i1 %tobool633, label %cond.true634, label %cond.false635, !dbg !9073

cond.true634:                                     ; preds = %cond.false631
  br label %cond.end687, !dbg !9073

cond.false635:                                    ; preds = %cond.false631
  %166 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and636 = and i64 %166, 1024, !dbg !9073
  %tobool637 = icmp ne i64 %and636, 0, !dbg !9073
  br i1 %tobool637, label %cond.true638, label %cond.false639, !dbg !9073

cond.true638:                                     ; preds = %cond.false635
  br label %cond.end685, !dbg !9073

cond.false639:                                    ; preds = %cond.false635
  %167 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and640 = and i64 %167, 512, !dbg !9073
  %tobool641 = icmp ne i64 %and640, 0, !dbg !9073
  br i1 %tobool641, label %cond.true642, label %cond.false643, !dbg !9073

cond.true642:                                     ; preds = %cond.false639
  br label %cond.end683, !dbg !9073

cond.false643:                                    ; preds = %cond.false639
  %168 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and644 = and i64 %168, 256, !dbg !9073
  %tobool645 = icmp ne i64 %and644, 0, !dbg !9073
  br i1 %tobool645, label %cond.true646, label %cond.false647, !dbg !9073

cond.true646:                                     ; preds = %cond.false643
  br label %cond.end681, !dbg !9073

cond.false647:                                    ; preds = %cond.false643
  %169 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and648 = and i64 %169, 128, !dbg !9073
  %tobool649 = icmp ne i64 %and648, 0, !dbg !9073
  br i1 %tobool649, label %cond.true650, label %cond.false651, !dbg !9073

cond.true650:                                     ; preds = %cond.false647
  br label %cond.end679, !dbg !9073

cond.false651:                                    ; preds = %cond.false647
  %170 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and652 = and i64 %170, 64, !dbg !9073
  %tobool653 = icmp ne i64 %and652, 0, !dbg !9073
  br i1 %tobool653, label %cond.true654, label %cond.false655, !dbg !9073

cond.true654:                                     ; preds = %cond.false651
  br label %cond.end677, !dbg !9073

cond.false655:                                    ; preds = %cond.false651
  %171 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and656 = and i64 %171, 32, !dbg !9073
  %tobool657 = icmp ne i64 %and656, 0, !dbg !9073
  br i1 %tobool657, label %cond.true658, label %cond.false659, !dbg !9073

cond.true658:                                     ; preds = %cond.false655
  br label %cond.end675, !dbg !9073

cond.false659:                                    ; preds = %cond.false655
  %172 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and660 = and i64 %172, 16, !dbg !9073
  %tobool661 = icmp ne i64 %and660, 0, !dbg !9073
  br i1 %tobool661, label %cond.true662, label %cond.false663, !dbg !9073

cond.true662:                                     ; preds = %cond.false659
  br label %cond.end673, !dbg !9073

cond.false663:                                    ; preds = %cond.false659
  %173 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and664 = and i64 %173, 8, !dbg !9073
  %tobool665 = icmp ne i64 %and664, 0, !dbg !9073
  br i1 %tobool665, label %cond.true666, label %cond.false667, !dbg !9073

cond.true666:                                     ; preds = %cond.false663
  br label %cond.end671, !dbg !9073

cond.false667:                                    ; preds = %cond.false663
  %174 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %and668 = and i64 %174, 4, !dbg !9073
  %tobool669 = icmp ne i64 %and668, 0, !dbg !9073
  %175 = zext i1 %tobool669 to i64, !dbg !9073
  %cond670 = select i1 %tobool669, i32 2, i32 1, !dbg !9073
  br label %cond.end671, !dbg !9073

cond.end671:                                      ; preds = %cond.false667, %cond.true666
  %cond672 = phi i32 [ 3, %cond.true666 ], [ %cond670, %cond.false667 ], !dbg !9073
  br label %cond.end673, !dbg !9073

cond.end673:                                      ; preds = %cond.end671, %cond.true662
  %cond674 = phi i32 [ 4, %cond.true662 ], [ %cond672, %cond.end671 ], !dbg !9073
  br label %cond.end675, !dbg !9073

cond.end675:                                      ; preds = %cond.end673, %cond.true658
  %cond676 = phi i32 [ 5, %cond.true658 ], [ %cond674, %cond.end673 ], !dbg !9073
  br label %cond.end677, !dbg !9073

cond.end677:                                      ; preds = %cond.end675, %cond.true654
  %cond678 = phi i32 [ 6, %cond.true654 ], [ %cond676, %cond.end675 ], !dbg !9073
  br label %cond.end679, !dbg !9073

cond.end679:                                      ; preds = %cond.end677, %cond.true650
  %cond680 = phi i32 [ 7, %cond.true650 ], [ %cond678, %cond.end677 ], !dbg !9073
  br label %cond.end681, !dbg !9073

cond.end681:                                      ; preds = %cond.end679, %cond.true646
  %cond682 = phi i32 [ 8, %cond.true646 ], [ %cond680, %cond.end679 ], !dbg !9073
  br label %cond.end683, !dbg !9073

cond.end683:                                      ; preds = %cond.end681, %cond.true642
  %cond684 = phi i32 [ 9, %cond.true642 ], [ %cond682, %cond.end681 ], !dbg !9073
  br label %cond.end685, !dbg !9073

cond.end685:                                      ; preds = %cond.end683, %cond.true638
  %cond686 = phi i32 [ 10, %cond.true638 ], [ %cond684, %cond.end683 ], !dbg !9073
  br label %cond.end687, !dbg !9073

cond.end687:                                      ; preds = %cond.end685, %cond.true634
  %cond688 = phi i32 [ 11, %cond.true634 ], [ %cond686, %cond.end685 ], !dbg !9073
  br label %cond.end689, !dbg !9073

cond.end689:                                      ; preds = %cond.end687, %cond.true630
  %cond690 = phi i32 [ 12, %cond.true630 ], [ %cond688, %cond.end687 ], !dbg !9073
  br label %cond.end691, !dbg !9073

cond.end691:                                      ; preds = %cond.end689, %cond.true626
  %cond692 = phi i32 [ 13, %cond.true626 ], [ %cond690, %cond.end689 ], !dbg !9073
  br label %cond.end693, !dbg !9073

cond.end693:                                      ; preds = %cond.end691, %cond.true622
  %cond694 = phi i32 [ 14, %cond.true622 ], [ %cond692, %cond.end691 ], !dbg !9073
  br label %cond.end695, !dbg !9073

cond.end695:                                      ; preds = %cond.end693, %cond.true618
  %cond696 = phi i32 [ 15, %cond.true618 ], [ %cond694, %cond.end693 ], !dbg !9073
  br label %cond.end697, !dbg !9073

cond.end697:                                      ; preds = %cond.end695, %cond.true614
  %cond698 = phi i32 [ 16, %cond.true614 ], [ %cond696, %cond.end695 ], !dbg !9073
  br label %cond.end699, !dbg !9073

cond.end699:                                      ; preds = %cond.end697, %cond.true610
  %cond700 = phi i32 [ 17, %cond.true610 ], [ %cond698, %cond.end697 ], !dbg !9073
  br label %cond.end701, !dbg !9073

cond.end701:                                      ; preds = %cond.end699, %cond.true606
  %cond702 = phi i32 [ 18, %cond.true606 ], [ %cond700, %cond.end699 ], !dbg !9073
  br label %cond.end703, !dbg !9073

cond.end703:                                      ; preds = %cond.end701, %cond.true602
  %cond704 = phi i32 [ 19, %cond.true602 ], [ %cond702, %cond.end701 ], !dbg !9073
  br label %cond.end705, !dbg !9073

cond.end705:                                      ; preds = %cond.end703, %cond.true598
  %cond706 = phi i32 [ 20, %cond.true598 ], [ %cond704, %cond.end703 ], !dbg !9073
  br label %cond.end707, !dbg !9073

cond.end707:                                      ; preds = %cond.end705, %cond.true594
  %cond708 = phi i32 [ 21, %cond.true594 ], [ %cond706, %cond.end705 ], !dbg !9073
  br label %cond.end709, !dbg !9073

cond.end709:                                      ; preds = %cond.end707, %cond.true590
  %cond710 = phi i32 [ 22, %cond.true590 ], [ %cond708, %cond.end707 ], !dbg !9073
  br label %cond.end711, !dbg !9073

cond.end711:                                      ; preds = %cond.end709, %cond.true586
  %cond712 = phi i32 [ 23, %cond.true586 ], [ %cond710, %cond.end709 ], !dbg !9073
  br label %cond.end713, !dbg !9073

cond.end713:                                      ; preds = %cond.end711, %cond.true582
  %cond714 = phi i32 [ 24, %cond.true582 ], [ %cond712, %cond.end711 ], !dbg !9073
  br label %cond.end715, !dbg !9073

cond.end715:                                      ; preds = %cond.end713, %cond.true578
  %cond716 = phi i32 [ 25, %cond.true578 ], [ %cond714, %cond.end713 ], !dbg !9073
  br label %cond.end717, !dbg !9073

cond.end717:                                      ; preds = %cond.end715, %cond.true574
  %cond718 = phi i32 [ 26, %cond.true574 ], [ %cond716, %cond.end715 ], !dbg !9073
  br label %cond.end719, !dbg !9073

cond.end719:                                      ; preds = %cond.end717, %cond.true570
  %cond720 = phi i32 [ 27, %cond.true570 ], [ %cond718, %cond.end717 ], !dbg !9073
  br label %cond.end721, !dbg !9073

cond.end721:                                      ; preds = %cond.end719, %cond.true566
  %cond722 = phi i32 [ 28, %cond.true566 ], [ %cond720, %cond.end719 ], !dbg !9073
  br label %cond.end723, !dbg !9073

cond.end723:                                      ; preds = %cond.end721, %cond.true562
  %cond724 = phi i32 [ 29, %cond.true562 ], [ %cond722, %cond.end721 ], !dbg !9073
  br label %cond.end725, !dbg !9073

cond.end725:                                      ; preds = %cond.end723, %cond.true558
  %cond726 = phi i32 [ 30, %cond.true558 ], [ %cond724, %cond.end723 ], !dbg !9073
  br label %cond.end727, !dbg !9073

cond.end727:                                      ; preds = %cond.end725, %cond.true554
  %cond728 = phi i32 [ 31, %cond.true554 ], [ %cond726, %cond.end725 ], !dbg !9073
  br label %cond.end729, !dbg !9073

cond.end729:                                      ; preds = %cond.end727, %cond.true550
  %cond730 = phi i32 [ 32, %cond.true550 ], [ %cond728, %cond.end727 ], !dbg !9073
  br label %cond.end731, !dbg !9073

cond.end731:                                      ; preds = %cond.end729, %cond.true546
  %cond732 = phi i32 [ 33, %cond.true546 ], [ %cond730, %cond.end729 ], !dbg !9073
  br label %cond.end733, !dbg !9073

cond.end733:                                      ; preds = %cond.end731, %cond.true542
  %cond734 = phi i32 [ 34, %cond.true542 ], [ %cond732, %cond.end731 ], !dbg !9073
  br label %cond.end735, !dbg !9073

cond.end735:                                      ; preds = %cond.end733, %cond.true538
  %cond736 = phi i32 [ 35, %cond.true538 ], [ %cond734, %cond.end733 ], !dbg !9073
  br label %cond.end737, !dbg !9073

cond.end737:                                      ; preds = %cond.end735, %cond.true534
  %cond738 = phi i32 [ 36, %cond.true534 ], [ %cond736, %cond.end735 ], !dbg !9073
  br label %cond.end739, !dbg !9073

cond.end739:                                      ; preds = %cond.end737, %cond.true530
  %cond740 = phi i32 [ 37, %cond.true530 ], [ %cond738, %cond.end737 ], !dbg !9073
  br label %cond.end741, !dbg !9073

cond.end741:                                      ; preds = %cond.end739, %cond.true526
  %cond742 = phi i32 [ 38, %cond.true526 ], [ %cond740, %cond.end739 ], !dbg !9073
  br label %cond.end743, !dbg !9073

cond.end743:                                      ; preds = %cond.end741, %cond.true522
  %cond744 = phi i32 [ 39, %cond.true522 ], [ %cond742, %cond.end741 ], !dbg !9073
  br label %cond.end745, !dbg !9073

cond.end745:                                      ; preds = %cond.end743, %cond.true518
  %cond746 = phi i32 [ 40, %cond.true518 ], [ %cond744, %cond.end743 ], !dbg !9073
  br label %cond.end747, !dbg !9073

cond.end747:                                      ; preds = %cond.end745, %cond.true514
  %cond748 = phi i32 [ 41, %cond.true514 ], [ %cond746, %cond.end745 ], !dbg !9073
  br label %cond.end749, !dbg !9073

cond.end749:                                      ; preds = %cond.end747, %cond.true510
  %cond750 = phi i32 [ 42, %cond.true510 ], [ %cond748, %cond.end747 ], !dbg !9073
  br label %cond.end751, !dbg !9073

cond.end751:                                      ; preds = %cond.end749, %cond.true506
  %cond752 = phi i32 [ 43, %cond.true506 ], [ %cond750, %cond.end749 ], !dbg !9073
  br label %cond.end753, !dbg !9073

cond.end753:                                      ; preds = %cond.end751, %cond.true502
  %cond754 = phi i32 [ 44, %cond.true502 ], [ %cond752, %cond.end751 ], !dbg !9073
  br label %cond.end755, !dbg !9073

cond.end755:                                      ; preds = %cond.end753, %cond.true498
  %cond756 = phi i32 [ 45, %cond.true498 ], [ %cond754, %cond.end753 ], !dbg !9073
  br label %cond.end757, !dbg !9073

cond.end757:                                      ; preds = %cond.end755, %cond.true494
  %cond758 = phi i32 [ 46, %cond.true494 ], [ %cond756, %cond.end755 ], !dbg !9073
  br label %cond.end759, !dbg !9073

cond.end759:                                      ; preds = %cond.end757, %cond.true490
  %cond760 = phi i32 [ 47, %cond.true490 ], [ %cond758, %cond.end757 ], !dbg !9073
  br label %cond.end761, !dbg !9073

cond.end761:                                      ; preds = %cond.end759, %cond.true486
  %cond762 = phi i32 [ 48, %cond.true486 ], [ %cond760, %cond.end759 ], !dbg !9073
  br label %cond.end763, !dbg !9073

cond.end763:                                      ; preds = %cond.end761, %cond.true482
  %cond764 = phi i32 [ 49, %cond.true482 ], [ %cond762, %cond.end761 ], !dbg !9073
  br label %cond.end765, !dbg !9073

cond.end765:                                      ; preds = %cond.end763, %cond.true478
  %cond766 = phi i32 [ 50, %cond.true478 ], [ %cond764, %cond.end763 ], !dbg !9073
  br label %cond.end767, !dbg !9073

cond.end767:                                      ; preds = %cond.end765, %cond.true474
  %cond768 = phi i32 [ 51, %cond.true474 ], [ %cond766, %cond.end765 ], !dbg !9073
  br label %cond.end769, !dbg !9073

cond.end769:                                      ; preds = %cond.end767, %cond.true470
  %cond770 = phi i32 [ 52, %cond.true470 ], [ %cond768, %cond.end767 ], !dbg !9073
  br label %cond.end771, !dbg !9073

cond.end771:                                      ; preds = %cond.end769, %cond.true466
  %cond772 = phi i32 [ 53, %cond.true466 ], [ %cond770, %cond.end769 ], !dbg !9073
  br label %cond.end773, !dbg !9073

cond.end773:                                      ; preds = %cond.end771, %cond.true462
  %cond774 = phi i32 [ 54, %cond.true462 ], [ %cond772, %cond.end771 ], !dbg !9073
  br label %cond.end775, !dbg !9073

cond.end775:                                      ; preds = %cond.end773, %cond.true458
  %cond776 = phi i32 [ 55, %cond.true458 ], [ %cond774, %cond.end773 ], !dbg !9073
  br label %cond.end777, !dbg !9073

cond.end777:                                      ; preds = %cond.end775, %cond.true454
  %cond778 = phi i32 [ 56, %cond.true454 ], [ %cond776, %cond.end775 ], !dbg !9073
  br label %cond.end779, !dbg !9073

cond.end779:                                      ; preds = %cond.end777, %cond.true450
  %cond780 = phi i32 [ 57, %cond.true450 ], [ %cond778, %cond.end777 ], !dbg !9073
  br label %cond.end781, !dbg !9073

cond.end781:                                      ; preds = %cond.end779, %cond.true446
  %cond782 = phi i32 [ 58, %cond.true446 ], [ %cond780, %cond.end779 ], !dbg !9073
  br label %cond.end783, !dbg !9073

cond.end783:                                      ; preds = %cond.end781, %cond.true442
  %cond784 = phi i32 [ 59, %cond.true442 ], [ %cond782, %cond.end781 ], !dbg !9073
  br label %cond.end785, !dbg !9073

cond.end785:                                      ; preds = %cond.end783, %cond.true438
  %cond786 = phi i32 [ 60, %cond.true438 ], [ %cond784, %cond.end783 ], !dbg !9073
  br label %cond.end787, !dbg !9073

cond.end787:                                      ; preds = %cond.end785, %cond.true434
  %cond788 = phi i32 [ 61, %cond.true434 ], [ %cond786, %cond.end785 ], !dbg !9073
  br label %cond.end789, !dbg !9073

cond.end789:                                      ; preds = %cond.end787, %cond.true430
  %cond790 = phi i32 [ 62, %cond.true430 ], [ %cond788, %cond.end787 ], !dbg !9073
  br label %cond.end791, !dbg !9073

cond.end791:                                      ; preds = %cond.end789, %cond.true426
  %cond792 = phi i32 [ 63, %cond.true426 ], [ %cond790, %cond.end789 ], !dbg !9073
  br label %cond.end793, !dbg !9073

cond.end793:                                      ; preds = %cond.end791, %cond.true422
  %cond794 = phi i32 [ 0, %cond.true422 ], [ %cond792, %cond.end791 ], !dbg !9073
  br label %cond.end796, !dbg !9073

cond.false795:                                    ; preds = %cond.true418
  br label %cond.end796, !dbg !9073

cond.end796:                                      ; preds = %cond.false795, %cond.end793
  %cond797 = phi i32 [ %cond794, %cond.end793 ], [ -1, %cond.false795 ], !dbg !9073
  br label %cond.end800, !dbg !9073

cond.false798:                                    ; preds = %cond.end416
  %176 = load i64, i64* %min_prot_len, align 8, !dbg !9073
  %call799 = call i32 @__ilog2_u64(i64 %176) #14, !dbg !9073
  br label %cond.end800, !dbg !9073

cond.end800:                                      ; preds = %cond.false798, %cond.end796
  %cond801 = phi i32 [ %cond797, %cond.end796 ], [ %call799, %cond.false798 ], !dbg !9073
  %sub802 = sub i32 %cond417, %cond801, !dbg !9074
  %add803 = add i32 %sub802, 1, !dbg !9075
  %conv804 = trunc i32 %add803 to i8, !dbg !9072
  store i8 %conv804, i8* %pow, align 1, !dbg !9076
  %177 = load i8, i8* %pow, align 1, !dbg !9077
  %conv805 = zext i8 %177 to i32, !dbg !9077
  %shl = shl i32 %conv805, 2, !dbg !9078
  %conv806 = trunc i32 %shl to i8, !dbg !9077
  store i8 %conv806, i8* %val, align 1, !dbg !9079
  %178 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9080
  %flags807 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %178, i32 0, i32 18, !dbg !9082
  %179 = load i32, i32* %flags807, align 4, !dbg !9082
  %and808 = and i32 %179, 8192, !dbg !9083
  %tobool809 = icmp ne i32 %and808, 0, !dbg !9083
  br i1 %tobool809, label %land.lhs.true810, label %if.end818, !dbg !9084

land.lhs.true810:                                 ; preds = %cond.end800
  %180 = load i8, i8* %val, align 1, !dbg !9085
  %conv811 = zext i8 %180 to i64, !dbg !9085
  %and812 = and i64 %conv811, 32, !dbg !9086
  %tobool813 = icmp ne i64 %and812, 0, !dbg !9086
  br i1 %tobool813, label %if.then814, label %if.end818, !dbg !9087

if.then814:                                       ; preds = %land.lhs.true810
  %181 = load i8, i8* %val, align 1, !dbg !9088
  %conv815 = zext i8 %181 to i64, !dbg !9088
  %and816 = and i64 %conv815, -33, !dbg !9089
  %or = or i64 %and816, 64, !dbg !9090
  %conv817 = trunc i64 %or to i8, !dbg !9091
  store i8 %conv817, i8* %val, align 1, !dbg !9092
  br label %if.end818, !dbg !9093

if.end818:                                        ; preds = %if.then814, %land.lhs.true810, %cond.end800
  %182 = load i8, i8* %val, align 1, !dbg !9094
  %conv819 = zext i8 %182 to i32, !dbg !9094
  %183 = load i8, i8* %mask, align 1, !dbg !9096
  %conv820 = zext i8 %183 to i32, !dbg !9096
  %neg = xor i32 %conv820, -1, !dbg !9097
  %and821 = and i32 %conv819, %neg, !dbg !9098
  %tobool822 = icmp ne i32 %and821, 0, !dbg !9098
  br i1 %tobool822, label %if.then823, label %if.end824, !dbg !9099

if.then823:                                       ; preds = %if.end818
  store i32 -22, i32* %retval, align 4, !dbg !9100
  br label %return, !dbg !9100

if.end824:                                        ; preds = %if.end818
  br label %if.end825

if.end825:                                        ; preds = %if.end824, %if.then35
  %184 = load i32, i32* %status_old, align 4, !dbg !9101
  %185 = load i8, i8* %mask, align 1, !dbg !9102
  %conv826 = zext i8 %185 to i32, !dbg !9102
  %neg827 = xor i32 %conv826, -1, !dbg !9103
  %and828 = and i32 %184, %neg827, !dbg !9104
  %186 = load i8, i8* %tb_mask, align 1, !dbg !9105
  %conv829 = zext i8 %186 to i32, !dbg !9105
  %neg830 = xor i32 %conv829, -1, !dbg !9106
  %and831 = and i32 %and828, %neg830, !dbg !9107
  %187 = load i8, i8* %val, align 1, !dbg !9108
  %conv832 = zext i8 %187 to i32, !dbg !9108
  %or833 = or i32 %and831, %conv832, !dbg !9109
  store i32 %or833, i32* %status_new, align 4, !dbg !9110
  %188 = load i64, i64* %lock_len, align 8, !dbg !9111
  %cmp834 = icmp eq i64 %188, 0, !dbg !9113
  br i1 %cmp834, label %if.then836, label %if.end840, !dbg !9114

if.then836:                                       ; preds = %if.end825
  %189 = load i32, i32* %status_new, align 4, !dbg !9115
  %conv837 = sext i32 %189 to i64, !dbg !9115
  %and838 = and i64 %conv837, -129, !dbg !9115
  %conv839 = trunc i64 %and838 to i32, !dbg !9115
  store i32 %conv839, i32* %status_new, align 4, !dbg !9115
  br label %if.end840, !dbg !9116

if.end840:                                        ; preds = %if.then836, %if.end825
  %190 = load i8, i8* %use_top, align 1, !dbg !9117
  %tobool841 = trunc i8 %190 to i1, !dbg !9117
  br i1 %tobool841, label %if.end845, label %if.then842, !dbg !9119

if.then842:                                       ; preds = %if.end840
  %191 = load i8, i8* %tb_mask, align 1, !dbg !9120
  %conv843 = zext i8 %191 to i32, !dbg !9120
  %192 = load i32, i32* %status_new, align 4, !dbg !9121
  %or844 = or i32 %192, %conv843, !dbg !9121
  store i32 %or844, i32* %status_new, align 4, !dbg !9121
  br label %if.end845, !dbg !9122

if.end845:                                        ; preds = %if.then842, %if.end840
  %193 = load i32, i32* %status_new, align 4, !dbg !9123
  %194 = load i32, i32* %status_old, align 4, !dbg !9125
  %cmp846 = icmp eq i32 %193, %194, !dbg !9126
  br i1 %cmp846, label %if.then848, label %if.end849, !dbg !9127

if.then848:                                       ; preds = %if.end845
  store i32 0, i32* %retval, align 4, !dbg !9128
  br label %return, !dbg !9128

if.end849:                                        ; preds = %if.end845
  %195 = load i32, i32* %status_new, align 4, !dbg !9129
  %196 = load i8, i8* %mask, align 1, !dbg !9131
  %conv850 = zext i8 %196 to i32, !dbg !9131
  %and851 = and i32 %195, %conv850, !dbg !9132
  %197 = load i32, i32* %status_old, align 4, !dbg !9133
  %198 = load i8, i8* %mask, align 1, !dbg !9134
  %conv852 = zext i8 %198 to i32, !dbg !9134
  %and853 = and i32 %197, %conv852, !dbg !9135
  %cmp854 = icmp sgt i32 %and851, %and853, !dbg !9136
  br i1 %cmp854, label %if.then856, label %if.end857, !dbg !9137

if.then856:                                       ; preds = %if.end849
  store i32 -22, i32* %retval, align 4, !dbg !9138
  br label %return, !dbg !9138

if.end857:                                        ; preds = %if.end849
  %199 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9139
  %200 = load i32, i32* %status_new, align 4, !dbg !9140
  %conv858 = trunc i32 %200 to i8, !dbg !9140
  %call859 = call i32 @spi_nor_write_sr_and_check(%struct.spi_nor* %199, i8 zeroext %conv858) #9, !dbg !9141
  store i32 %call859, i32* %retval, align 4, !dbg !9142
  br label %return, !dbg !9142

return:                                           ; preds = %if.end857, %if.then856, %if.then848, %if.then823, %if.then24, %if.then9, %if.then
  %201 = load i32, i32* %retval, align 4, !dbg !9143
  ret i32 %201, !dbg !9143
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_sr_is_locked(%struct.spi_nor* %nor, i64 %ofs, i64 %len) #0 !dbg !9144 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ofs.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9145, metadata !DIExpression()), !dbg !9146
  store i64 %ofs, i64* %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofs.addr, metadata !9147, metadata !DIExpression()), !dbg !9148
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !9149, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9151, metadata !DIExpression()), !dbg !9152
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9153
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9154
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %1, i32 0, i32 4, !dbg !9155
  %2 = load i8*, i8** %bouncebuf, align 8, !dbg !9155
  %call = call i32 @spi_nor_read_sr(%struct.spi_nor* %0, i8* %2) #9, !dbg !9156
  store i32 %call, i32* %ret, align 4, !dbg !9157
  %3 = load i32, i32* %ret, align 4, !dbg !9158
  %tobool = icmp ne i32 %3, 0, !dbg !9158
  br i1 %tobool, label %if.then, label %if.end, !dbg !9160

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !9161
  store i32 %4, i32* %retval, align 4, !dbg !9162
  br label %return, !dbg !9162

if.end:                                           ; preds = %entry
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9163
  %6 = load i64, i64* %ofs.addr, align 8, !dbg !9164
  %7 = load i64, i64* %len.addr, align 8, !dbg !9165
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9166
  %bouncebuf1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 4, !dbg !9167
  %9 = load i8*, i8** %bouncebuf1, align 8, !dbg !9167
  %arrayidx = getelementptr i8, i8* %9, i64 0, !dbg !9166
  %10 = load i8, i8* %arrayidx, align 1, !dbg !9166
  %call2 = call i32 @spi_nor_is_locked_sr(%struct.spi_nor* %5, i64 %6, i64 %7, i8 zeroext %10) #9, !dbg !9168
  store i32 %call2, i32* %retval, align 4, !dbg !9169
  br label %return, !dbg !9169

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !9170
  ret i32 %11, !dbg !9170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @spi_nor_get_sr_bp_mask(%struct.spi_nor* %nor) #0 !dbg !9171 {
entry:
  %retval = alloca i8, align 1
  %nor.addr = alloca %struct.spi_nor*, align 8
  %mask = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9174, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !9176, metadata !DIExpression()), !dbg !9177
  store i8 28, i8* %mask, align 1, !dbg !9177
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9178
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 18, !dbg !9180
  %1 = load i32, i32* %flags, align 4, !dbg !9180
  %and = and i32 %1, 8192, !dbg !9181
  %tobool = icmp ne i32 %and, 0, !dbg !9181
  br i1 %tobool, label %if.then, label %if.end, !dbg !9182

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %mask, align 1, !dbg !9183
  %conv = zext i8 %2 to i64, !dbg !9183
  %or = or i64 %conv, 64, !dbg !9184
  %conv1 = trunc i64 %or to i8, !dbg !9183
  store i8 %conv1, i8* %retval, align 1, !dbg !9185
  br label %return, !dbg !9185

if.end:                                           ; preds = %entry
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9186
  %flags2 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 18, !dbg !9188
  %4 = load i32, i32* %flags2, align 4, !dbg !9188
  %and3 = and i32 %4, 4096, !dbg !9189
  %tobool4 = icmp ne i32 %and3, 0, !dbg !9189
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !9190

if.then5:                                         ; preds = %if.end
  %5 = load i8, i8* %mask, align 1, !dbg !9191
  %conv6 = zext i8 %5 to i64, !dbg !9191
  %or7 = or i64 %conv6, 32, !dbg !9192
  %conv8 = trunc i64 %or7 to i8, !dbg !9191
  store i8 %conv8, i8* %retval, align 1, !dbg !9193
  br label %return, !dbg !9193

if.end9:                                          ; preds = %if.end
  %6 = load i8, i8* %mask, align 1, !dbg !9194
  store i8 %6, i8* %retval, align 1, !dbg !9195
  br label %return, !dbg !9195

return:                                           ; preds = %if.end9, %if.then5, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !9196
  ret i8 %7, !dbg !9196
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @spi_nor_get_sr_tb_mask(%struct.spi_nor* %nor) #0 !dbg !9197 {
entry:
  %retval = alloca i8, align 1
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9198, metadata !DIExpression()), !dbg !9199
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9200
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 18, !dbg !9202
  %1 = load i32, i32* %flags, align 4, !dbg !9202
  %and = and i32 %1, 2048, !dbg !9203
  %tobool = icmp ne i32 %and, 0, !dbg !9203
  br i1 %tobool, label %if.then, label %if.else, !dbg !9204

if.then:                                          ; preds = %entry
  store i8 64, i8* %retval, align 1, !dbg !9205
  br label %return, !dbg !9205

if.else:                                          ; preds = %entry
  store i8 32, i8* %retval, align 1, !dbg !9206
  br label %return, !dbg !9206

return:                                           ; preds = %if.else, %if.then
  %2 = load i8, i8* %retval, align 1, !dbg !9207
  ret i8 %2, !dbg !9207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_is_locked_sr(%struct.spi_nor* %nor, i64 %ofs, i64 %len, i8 zeroext %sr) #0 !dbg !9208 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ofs.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %sr.addr = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9211, metadata !DIExpression()), !dbg !9212
  store i64 %ofs, i64* %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofs.addr, metadata !9213, metadata !DIExpression()), !dbg !9214
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !9215, metadata !DIExpression()), !dbg !9216
  store i8 %sr, i8* %sr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sr.addr, metadata !9217, metadata !DIExpression()), !dbg !9218
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9219
  %1 = load i64, i64* %ofs.addr, align 8, !dbg !9220
  %2 = load i64, i64* %len.addr, align 8, !dbg !9221
  %3 = load i8, i8* %sr.addr, align 1, !dbg !9222
  %call = call i32 @spi_nor_check_lock_status_sr(%struct.spi_nor* %0, i64 %1, i64 %2, i8 zeroext %3, i1 zeroext true) #9, !dbg !9223
  ret i32 %call, !dbg !9224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_nor_get_min_prot_length_sr(%struct.spi_nor* %nor) #0 !dbg !9225 {
entry:
  %retval = alloca i64, align 8
  %nor.addr = alloca %struct.spi_nor*, align 8
  %bp_slots = alloca i32, align 4
  %bp_slots_needed = alloca i32, align 4
  %mask = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9228, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.declare(metadata i32* %bp_slots, metadata !9230, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.declare(metadata i32* %bp_slots_needed, metadata !9232, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !9234, metadata !DIExpression()), !dbg !9235
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9236
  %call = call zeroext i8 @spi_nor_get_sr_bp_mask(%struct.spi_nor* %0) #9, !dbg !9237
  store i8 %call, i8* %mask, align 1, !dbg !9235
  %1 = load i8, i8* %mask, align 1, !dbg !9238
  %2 = call i1 @llvm.is.constant.i8(i8 %1), !dbg !9238
  br i1 %2, label %cond.true, label %cond.false, !dbg !9238

cond.true:                                        ; preds = %entry
  %3 = load i8, i8* %mask, align 1, !dbg !9238
  %conv = zext i8 %3 to i64, !dbg !9238
  %and = and i64 %conv, 1, !dbg !9238
  %tobool = icmp ne i64 %and, 0, !dbg !9238
  %lnot = xor i1 %tobool, true, !dbg !9238
  %lnot1 = xor i1 %lnot, true, !dbg !9238
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9238
  %4 = load i8, i8* %mask, align 1, !dbg !9238
  %conv2 = zext i8 %4 to i64, !dbg !9238
  %and3 = and i64 %conv2, 2, !dbg !9238
  %tobool4 = icmp ne i64 %and3, 0, !dbg !9238
  %lnot5 = xor i1 %tobool4, true, !dbg !9238
  %lnot7 = xor i1 %lnot5, true, !dbg !9238
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !9238
  %add = add i32 %lnot.ext, %lnot.ext8, !dbg !9238
  %5 = load i8, i8* %mask, align 1, !dbg !9238
  %conv9 = zext i8 %5 to i64, !dbg !9238
  %and10 = and i64 %conv9, 4, !dbg !9238
  %tobool11 = icmp ne i64 %and10, 0, !dbg !9238
  %lnot12 = xor i1 %tobool11, true, !dbg !9238
  %lnot14 = xor i1 %lnot12, true, !dbg !9238
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !9238
  %add16 = add i32 %add, %lnot.ext15, !dbg !9238
  %6 = load i8, i8* %mask, align 1, !dbg !9238
  %conv17 = zext i8 %6 to i64, !dbg !9238
  %and18 = and i64 %conv17, 8, !dbg !9238
  %tobool19 = icmp ne i64 %and18, 0, !dbg !9238
  %lnot20 = xor i1 %tobool19, true, !dbg !9238
  %lnot22 = xor i1 %lnot20, true, !dbg !9238
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !9238
  %add24 = add i32 %add16, %lnot.ext23, !dbg !9238
  %7 = load i8, i8* %mask, align 1, !dbg !9238
  %conv25 = zext i8 %7 to i64, !dbg !9238
  %and26 = and i64 %conv25, 16, !dbg !9238
  %tobool27 = icmp ne i64 %and26, 0, !dbg !9238
  %lnot28 = xor i1 %tobool27, true, !dbg !9238
  %lnot30 = xor i1 %lnot28, true, !dbg !9238
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !9238
  %add32 = add i32 %add24, %lnot.ext31, !dbg !9238
  %8 = load i8, i8* %mask, align 1, !dbg !9238
  %conv33 = zext i8 %8 to i64, !dbg !9238
  %and34 = and i64 %conv33, 32, !dbg !9238
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9238
  %lnot36 = xor i1 %tobool35, true, !dbg !9238
  %lnot38 = xor i1 %lnot36, true, !dbg !9238
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !9238
  %add40 = add i32 %add32, %lnot.ext39, !dbg !9238
  %9 = load i8, i8* %mask, align 1, !dbg !9238
  %conv41 = zext i8 %9 to i64, !dbg !9238
  %and42 = and i64 %conv41, 64, !dbg !9238
  %tobool43 = icmp ne i64 %and42, 0, !dbg !9238
  %lnot44 = xor i1 %tobool43, true, !dbg !9238
  %lnot46 = xor i1 %lnot44, true, !dbg !9238
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !9238
  %add48 = add i32 %add40, %lnot.ext47, !dbg !9238
  %10 = load i8, i8* %mask, align 1, !dbg !9238
  %conv49 = zext i8 %10 to i64, !dbg !9238
  %and50 = and i64 %conv49, 128, !dbg !9238
  %tobool51 = icmp ne i64 %and50, 0, !dbg !9238
  %lnot52 = xor i1 %tobool51, true, !dbg !9238
  %lnot54 = xor i1 %lnot52, true, !dbg !9238
  %lnot.ext55 = zext i1 %lnot54 to i32, !dbg !9238
  %add56 = add i32 %add48, %lnot.ext55, !dbg !9238
  br label %cond.end, !dbg !9238

cond.false:                                       ; preds = %entry
  %11 = load i8, i8* %mask, align 1, !dbg !9238
  %conv57 = zext i8 %11 to i32, !dbg !9238
  %call58 = call i32 @__arch_hweight8(i32 %conv57) #9, !dbg !9238
  br label %cond.end, !dbg !9238

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add56, %cond.true ], [ %call58, %cond.false ], !dbg !9238
  %shl = shl i32 1, %cond, !dbg !9239
  %sub = sub i32 %shl, 2, !dbg !9240
  store i32 %sub, i32* %bp_slots, align 4, !dbg !9241
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %12, i32 0, i32 6, !dbg !9242
  %13 = load %struct.flash_info*, %struct.flash_info** %info, align 8, !dbg !9242
  %n_sectors = getelementptr inbounds %struct.flash_info, %struct.flash_info* %13, i32 0, i32 4, !dbg !9242
  %14 = load i16, i16* %n_sectors, align 4, !dbg !9242
  %15 = call i1 @llvm.is.constant.i16(i16 %14), !dbg !9242
  br i1 %15, label %cond.true59, label %cond.false629, !dbg !9242

cond.true59:                                      ; preds = %cond.end
  %16 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info60 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %16, i32 0, i32 6, !dbg !9242
  %17 = load %struct.flash_info*, %struct.flash_info** %info60, align 8, !dbg !9242
  %n_sectors61 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %17, i32 0, i32 4, !dbg !9242
  %18 = load i16, i16* %n_sectors61, align 4, !dbg !9242
  %19 = call i1 @llvm.is.constant.i16(i16 %18), !dbg !9242
  br i1 %19, label %cond.true62, label %cond.false626, !dbg !9242

cond.true62:                                      ; preds = %cond.true59
  %20 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info63 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %20, i32 0, i32 6, !dbg !9242
  %21 = load %struct.flash_info*, %struct.flash_info** %info63, align 8, !dbg !9242
  %n_sectors64 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %21, i32 0, i32 4, !dbg !9242
  %22 = load i16, i16* %n_sectors64, align 4, !dbg !9242
  %conv65 = zext i16 %22 to i32, !dbg !9242
  %cmp = icmp slt i32 %conv65, 2, !dbg !9242
  br i1 %cmp, label %cond.true67, label %cond.false68, !dbg !9242

cond.true67:                                      ; preds = %cond.true62
  br label %cond.end624, !dbg !9242

cond.false68:                                     ; preds = %cond.true62
  %23 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info69 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %23, i32 0, i32 6, !dbg !9242
  %24 = load %struct.flash_info*, %struct.flash_info** %info69, align 8, !dbg !9242
  %n_sectors70 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %24, i32 0, i32 4, !dbg !9242
  %25 = load i16, i16* %n_sectors70, align 4, !dbg !9242
  %conv71 = zext i16 %25 to i64, !dbg !9242
  %and72 = and i64 %conv71, -9223372036854775808, !dbg !9242
  %tobool73 = icmp ne i64 %and72, 0, !dbg !9242
  br i1 %tobool73, label %cond.true74, label %cond.false75, !dbg !9242

cond.true74:                                      ; preds = %cond.false68
  br label %cond.end622, !dbg !9242

cond.false75:                                     ; preds = %cond.false68
  %26 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info76 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %26, i32 0, i32 6, !dbg !9242
  %27 = load %struct.flash_info*, %struct.flash_info** %info76, align 8, !dbg !9242
  %n_sectors77 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %27, i32 0, i32 4, !dbg !9242
  %28 = load i16, i16* %n_sectors77, align 4, !dbg !9242
  %conv78 = zext i16 %28 to i64, !dbg !9242
  %and79 = and i64 %conv78, 4611686018427387904, !dbg !9242
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9242
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9242

cond.true81:                                      ; preds = %cond.false75
  br label %cond.end620, !dbg !9242

cond.false82:                                     ; preds = %cond.false75
  %29 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info83 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %29, i32 0, i32 6, !dbg !9242
  %30 = load %struct.flash_info*, %struct.flash_info** %info83, align 8, !dbg !9242
  %n_sectors84 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %30, i32 0, i32 4, !dbg !9242
  %31 = load i16, i16* %n_sectors84, align 4, !dbg !9242
  %conv85 = zext i16 %31 to i64, !dbg !9242
  %and86 = and i64 %conv85, 2305843009213693952, !dbg !9242
  %tobool87 = icmp ne i64 %and86, 0, !dbg !9242
  br i1 %tobool87, label %cond.true88, label %cond.false89, !dbg !9242

cond.true88:                                      ; preds = %cond.false82
  br label %cond.end618, !dbg !9242

cond.false89:                                     ; preds = %cond.false82
  %32 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info90 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %32, i32 0, i32 6, !dbg !9242
  %33 = load %struct.flash_info*, %struct.flash_info** %info90, align 8, !dbg !9242
  %n_sectors91 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %33, i32 0, i32 4, !dbg !9242
  %34 = load i16, i16* %n_sectors91, align 4, !dbg !9242
  %conv92 = zext i16 %34 to i64, !dbg !9242
  %and93 = and i64 %conv92, 1152921504606846976, !dbg !9242
  %tobool94 = icmp ne i64 %and93, 0, !dbg !9242
  br i1 %tobool94, label %cond.true95, label %cond.false96, !dbg !9242

cond.true95:                                      ; preds = %cond.false89
  br label %cond.end616, !dbg !9242

cond.false96:                                     ; preds = %cond.false89
  %35 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info97 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %35, i32 0, i32 6, !dbg !9242
  %36 = load %struct.flash_info*, %struct.flash_info** %info97, align 8, !dbg !9242
  %n_sectors98 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %36, i32 0, i32 4, !dbg !9242
  %37 = load i16, i16* %n_sectors98, align 4, !dbg !9242
  %conv99 = zext i16 %37 to i64, !dbg !9242
  %and100 = and i64 %conv99, 576460752303423488, !dbg !9242
  %tobool101 = icmp ne i64 %and100, 0, !dbg !9242
  br i1 %tobool101, label %cond.true102, label %cond.false103, !dbg !9242

cond.true102:                                     ; preds = %cond.false96
  br label %cond.end614, !dbg !9242

cond.false103:                                    ; preds = %cond.false96
  %38 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info104 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %38, i32 0, i32 6, !dbg !9242
  %39 = load %struct.flash_info*, %struct.flash_info** %info104, align 8, !dbg !9242
  %n_sectors105 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %39, i32 0, i32 4, !dbg !9242
  %40 = load i16, i16* %n_sectors105, align 4, !dbg !9242
  %conv106 = zext i16 %40 to i64, !dbg !9242
  %and107 = and i64 %conv106, 288230376151711744, !dbg !9242
  %tobool108 = icmp ne i64 %and107, 0, !dbg !9242
  br i1 %tobool108, label %cond.true109, label %cond.false110, !dbg !9242

cond.true109:                                     ; preds = %cond.false103
  br label %cond.end612, !dbg !9242

cond.false110:                                    ; preds = %cond.false103
  %41 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info111 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %41, i32 0, i32 6, !dbg !9242
  %42 = load %struct.flash_info*, %struct.flash_info** %info111, align 8, !dbg !9242
  %n_sectors112 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %42, i32 0, i32 4, !dbg !9242
  %43 = load i16, i16* %n_sectors112, align 4, !dbg !9242
  %conv113 = zext i16 %43 to i64, !dbg !9242
  %and114 = and i64 %conv113, 144115188075855872, !dbg !9242
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9242
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9242

cond.true116:                                     ; preds = %cond.false110
  br label %cond.end610, !dbg !9242

cond.false117:                                    ; preds = %cond.false110
  %44 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info118 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %44, i32 0, i32 6, !dbg !9242
  %45 = load %struct.flash_info*, %struct.flash_info** %info118, align 8, !dbg !9242
  %n_sectors119 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %45, i32 0, i32 4, !dbg !9242
  %46 = load i16, i16* %n_sectors119, align 4, !dbg !9242
  %conv120 = zext i16 %46 to i64, !dbg !9242
  %and121 = and i64 %conv120, 72057594037927936, !dbg !9242
  %tobool122 = icmp ne i64 %and121, 0, !dbg !9242
  br i1 %tobool122, label %cond.true123, label %cond.false124, !dbg !9242

cond.true123:                                     ; preds = %cond.false117
  br label %cond.end608, !dbg !9242

cond.false124:                                    ; preds = %cond.false117
  %47 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info125 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %47, i32 0, i32 6, !dbg !9242
  %48 = load %struct.flash_info*, %struct.flash_info** %info125, align 8, !dbg !9242
  %n_sectors126 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %48, i32 0, i32 4, !dbg !9242
  %49 = load i16, i16* %n_sectors126, align 4, !dbg !9242
  %conv127 = zext i16 %49 to i64, !dbg !9242
  %and128 = and i64 %conv127, 36028797018963968, !dbg !9242
  %tobool129 = icmp ne i64 %and128, 0, !dbg !9242
  br i1 %tobool129, label %cond.true130, label %cond.false131, !dbg !9242

cond.true130:                                     ; preds = %cond.false124
  br label %cond.end606, !dbg !9242

cond.false131:                                    ; preds = %cond.false124
  %50 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info132 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %50, i32 0, i32 6, !dbg !9242
  %51 = load %struct.flash_info*, %struct.flash_info** %info132, align 8, !dbg !9242
  %n_sectors133 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %51, i32 0, i32 4, !dbg !9242
  %52 = load i16, i16* %n_sectors133, align 4, !dbg !9242
  %conv134 = zext i16 %52 to i64, !dbg !9242
  %and135 = and i64 %conv134, 18014398509481984, !dbg !9242
  %tobool136 = icmp ne i64 %and135, 0, !dbg !9242
  br i1 %tobool136, label %cond.true137, label %cond.false138, !dbg !9242

cond.true137:                                     ; preds = %cond.false131
  br label %cond.end604, !dbg !9242

cond.false138:                                    ; preds = %cond.false131
  %53 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info139 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %53, i32 0, i32 6, !dbg !9242
  %54 = load %struct.flash_info*, %struct.flash_info** %info139, align 8, !dbg !9242
  %n_sectors140 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %54, i32 0, i32 4, !dbg !9242
  %55 = load i16, i16* %n_sectors140, align 4, !dbg !9242
  %conv141 = zext i16 %55 to i64, !dbg !9242
  %and142 = and i64 %conv141, 9007199254740992, !dbg !9242
  %tobool143 = icmp ne i64 %and142, 0, !dbg !9242
  br i1 %tobool143, label %cond.true144, label %cond.false145, !dbg !9242

cond.true144:                                     ; preds = %cond.false138
  br label %cond.end602, !dbg !9242

cond.false145:                                    ; preds = %cond.false138
  %56 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info146 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %56, i32 0, i32 6, !dbg !9242
  %57 = load %struct.flash_info*, %struct.flash_info** %info146, align 8, !dbg !9242
  %n_sectors147 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %57, i32 0, i32 4, !dbg !9242
  %58 = load i16, i16* %n_sectors147, align 4, !dbg !9242
  %conv148 = zext i16 %58 to i64, !dbg !9242
  %and149 = and i64 %conv148, 4503599627370496, !dbg !9242
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9242
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9242

cond.true151:                                     ; preds = %cond.false145
  br label %cond.end600, !dbg !9242

cond.false152:                                    ; preds = %cond.false145
  %59 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info153 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %59, i32 0, i32 6, !dbg !9242
  %60 = load %struct.flash_info*, %struct.flash_info** %info153, align 8, !dbg !9242
  %n_sectors154 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %60, i32 0, i32 4, !dbg !9242
  %61 = load i16, i16* %n_sectors154, align 4, !dbg !9242
  %conv155 = zext i16 %61 to i64, !dbg !9242
  %and156 = and i64 %conv155, 2251799813685248, !dbg !9242
  %tobool157 = icmp ne i64 %and156, 0, !dbg !9242
  br i1 %tobool157, label %cond.true158, label %cond.false159, !dbg !9242

cond.true158:                                     ; preds = %cond.false152
  br label %cond.end598, !dbg !9242

cond.false159:                                    ; preds = %cond.false152
  %62 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info160 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %62, i32 0, i32 6, !dbg !9242
  %63 = load %struct.flash_info*, %struct.flash_info** %info160, align 8, !dbg !9242
  %n_sectors161 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %63, i32 0, i32 4, !dbg !9242
  %64 = load i16, i16* %n_sectors161, align 4, !dbg !9242
  %conv162 = zext i16 %64 to i64, !dbg !9242
  %and163 = and i64 %conv162, 1125899906842624, !dbg !9242
  %tobool164 = icmp ne i64 %and163, 0, !dbg !9242
  br i1 %tobool164, label %cond.true165, label %cond.false166, !dbg !9242

cond.true165:                                     ; preds = %cond.false159
  br label %cond.end596, !dbg !9242

cond.false166:                                    ; preds = %cond.false159
  %65 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info167 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %65, i32 0, i32 6, !dbg !9242
  %66 = load %struct.flash_info*, %struct.flash_info** %info167, align 8, !dbg !9242
  %n_sectors168 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %66, i32 0, i32 4, !dbg !9242
  %67 = load i16, i16* %n_sectors168, align 4, !dbg !9242
  %conv169 = zext i16 %67 to i64, !dbg !9242
  %and170 = and i64 %conv169, 562949953421312, !dbg !9242
  %tobool171 = icmp ne i64 %and170, 0, !dbg !9242
  br i1 %tobool171, label %cond.true172, label %cond.false173, !dbg !9242

cond.true172:                                     ; preds = %cond.false166
  br label %cond.end594, !dbg !9242

cond.false173:                                    ; preds = %cond.false166
  %68 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info174 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %68, i32 0, i32 6, !dbg !9242
  %69 = load %struct.flash_info*, %struct.flash_info** %info174, align 8, !dbg !9242
  %n_sectors175 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %69, i32 0, i32 4, !dbg !9242
  %70 = load i16, i16* %n_sectors175, align 4, !dbg !9242
  %conv176 = zext i16 %70 to i64, !dbg !9242
  %and177 = and i64 %conv176, 281474976710656, !dbg !9242
  %tobool178 = icmp ne i64 %and177, 0, !dbg !9242
  br i1 %tobool178, label %cond.true179, label %cond.false180, !dbg !9242

cond.true179:                                     ; preds = %cond.false173
  br label %cond.end592, !dbg !9242

cond.false180:                                    ; preds = %cond.false173
  %71 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info181 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %71, i32 0, i32 6, !dbg !9242
  %72 = load %struct.flash_info*, %struct.flash_info** %info181, align 8, !dbg !9242
  %n_sectors182 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %72, i32 0, i32 4, !dbg !9242
  %73 = load i16, i16* %n_sectors182, align 4, !dbg !9242
  %conv183 = zext i16 %73 to i64, !dbg !9242
  %and184 = and i64 %conv183, 140737488355328, !dbg !9242
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9242
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9242

cond.true186:                                     ; preds = %cond.false180
  br label %cond.end590, !dbg !9242

cond.false187:                                    ; preds = %cond.false180
  %74 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info188 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %74, i32 0, i32 6, !dbg !9242
  %75 = load %struct.flash_info*, %struct.flash_info** %info188, align 8, !dbg !9242
  %n_sectors189 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %75, i32 0, i32 4, !dbg !9242
  %76 = load i16, i16* %n_sectors189, align 4, !dbg !9242
  %conv190 = zext i16 %76 to i64, !dbg !9242
  %and191 = and i64 %conv190, 70368744177664, !dbg !9242
  %tobool192 = icmp ne i64 %and191, 0, !dbg !9242
  br i1 %tobool192, label %cond.true193, label %cond.false194, !dbg !9242

cond.true193:                                     ; preds = %cond.false187
  br label %cond.end588, !dbg !9242

cond.false194:                                    ; preds = %cond.false187
  %77 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info195 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %77, i32 0, i32 6, !dbg !9242
  %78 = load %struct.flash_info*, %struct.flash_info** %info195, align 8, !dbg !9242
  %n_sectors196 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %78, i32 0, i32 4, !dbg !9242
  %79 = load i16, i16* %n_sectors196, align 4, !dbg !9242
  %conv197 = zext i16 %79 to i64, !dbg !9242
  %and198 = and i64 %conv197, 35184372088832, !dbg !9242
  %tobool199 = icmp ne i64 %and198, 0, !dbg !9242
  br i1 %tobool199, label %cond.true200, label %cond.false201, !dbg !9242

cond.true200:                                     ; preds = %cond.false194
  br label %cond.end586, !dbg !9242

cond.false201:                                    ; preds = %cond.false194
  %80 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info202 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %80, i32 0, i32 6, !dbg !9242
  %81 = load %struct.flash_info*, %struct.flash_info** %info202, align 8, !dbg !9242
  %n_sectors203 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %81, i32 0, i32 4, !dbg !9242
  %82 = load i16, i16* %n_sectors203, align 4, !dbg !9242
  %conv204 = zext i16 %82 to i64, !dbg !9242
  %and205 = and i64 %conv204, 17592186044416, !dbg !9242
  %tobool206 = icmp ne i64 %and205, 0, !dbg !9242
  br i1 %tobool206, label %cond.true207, label %cond.false208, !dbg !9242

cond.true207:                                     ; preds = %cond.false201
  br label %cond.end584, !dbg !9242

cond.false208:                                    ; preds = %cond.false201
  %83 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info209 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %83, i32 0, i32 6, !dbg !9242
  %84 = load %struct.flash_info*, %struct.flash_info** %info209, align 8, !dbg !9242
  %n_sectors210 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %84, i32 0, i32 4, !dbg !9242
  %85 = load i16, i16* %n_sectors210, align 4, !dbg !9242
  %conv211 = zext i16 %85 to i64, !dbg !9242
  %and212 = and i64 %conv211, 8796093022208, !dbg !9242
  %tobool213 = icmp ne i64 %and212, 0, !dbg !9242
  br i1 %tobool213, label %cond.true214, label %cond.false215, !dbg !9242

cond.true214:                                     ; preds = %cond.false208
  br label %cond.end582, !dbg !9242

cond.false215:                                    ; preds = %cond.false208
  %86 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info216 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %86, i32 0, i32 6, !dbg !9242
  %87 = load %struct.flash_info*, %struct.flash_info** %info216, align 8, !dbg !9242
  %n_sectors217 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %87, i32 0, i32 4, !dbg !9242
  %88 = load i16, i16* %n_sectors217, align 4, !dbg !9242
  %conv218 = zext i16 %88 to i64, !dbg !9242
  %and219 = and i64 %conv218, 4398046511104, !dbg !9242
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9242
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9242

cond.true221:                                     ; preds = %cond.false215
  br label %cond.end580, !dbg !9242

cond.false222:                                    ; preds = %cond.false215
  %89 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info223 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %89, i32 0, i32 6, !dbg !9242
  %90 = load %struct.flash_info*, %struct.flash_info** %info223, align 8, !dbg !9242
  %n_sectors224 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %90, i32 0, i32 4, !dbg !9242
  %91 = load i16, i16* %n_sectors224, align 4, !dbg !9242
  %conv225 = zext i16 %91 to i64, !dbg !9242
  %and226 = and i64 %conv225, 2199023255552, !dbg !9242
  %tobool227 = icmp ne i64 %and226, 0, !dbg !9242
  br i1 %tobool227, label %cond.true228, label %cond.false229, !dbg !9242

cond.true228:                                     ; preds = %cond.false222
  br label %cond.end578, !dbg !9242

cond.false229:                                    ; preds = %cond.false222
  %92 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info230 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %92, i32 0, i32 6, !dbg !9242
  %93 = load %struct.flash_info*, %struct.flash_info** %info230, align 8, !dbg !9242
  %n_sectors231 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %93, i32 0, i32 4, !dbg !9242
  %94 = load i16, i16* %n_sectors231, align 4, !dbg !9242
  %conv232 = zext i16 %94 to i64, !dbg !9242
  %and233 = and i64 %conv232, 1099511627776, !dbg !9242
  %tobool234 = icmp ne i64 %and233, 0, !dbg !9242
  br i1 %tobool234, label %cond.true235, label %cond.false236, !dbg !9242

cond.true235:                                     ; preds = %cond.false229
  br label %cond.end576, !dbg !9242

cond.false236:                                    ; preds = %cond.false229
  %95 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info237 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %95, i32 0, i32 6, !dbg !9242
  %96 = load %struct.flash_info*, %struct.flash_info** %info237, align 8, !dbg !9242
  %n_sectors238 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %96, i32 0, i32 4, !dbg !9242
  %97 = load i16, i16* %n_sectors238, align 4, !dbg !9242
  %conv239 = zext i16 %97 to i64, !dbg !9242
  %and240 = and i64 %conv239, 549755813888, !dbg !9242
  %tobool241 = icmp ne i64 %and240, 0, !dbg !9242
  br i1 %tobool241, label %cond.true242, label %cond.false243, !dbg !9242

cond.true242:                                     ; preds = %cond.false236
  br label %cond.end574, !dbg !9242

cond.false243:                                    ; preds = %cond.false236
  %98 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info244 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %98, i32 0, i32 6, !dbg !9242
  %99 = load %struct.flash_info*, %struct.flash_info** %info244, align 8, !dbg !9242
  %n_sectors245 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %99, i32 0, i32 4, !dbg !9242
  %100 = load i16, i16* %n_sectors245, align 4, !dbg !9242
  %conv246 = zext i16 %100 to i64, !dbg !9242
  %and247 = and i64 %conv246, 274877906944, !dbg !9242
  %tobool248 = icmp ne i64 %and247, 0, !dbg !9242
  br i1 %tobool248, label %cond.true249, label %cond.false250, !dbg !9242

cond.true249:                                     ; preds = %cond.false243
  br label %cond.end572, !dbg !9242

cond.false250:                                    ; preds = %cond.false243
  %101 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info251 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %101, i32 0, i32 6, !dbg !9242
  %102 = load %struct.flash_info*, %struct.flash_info** %info251, align 8, !dbg !9242
  %n_sectors252 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %102, i32 0, i32 4, !dbg !9242
  %103 = load i16, i16* %n_sectors252, align 4, !dbg !9242
  %conv253 = zext i16 %103 to i64, !dbg !9242
  %and254 = and i64 %conv253, 137438953472, !dbg !9242
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9242
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9242

cond.true256:                                     ; preds = %cond.false250
  br label %cond.end570, !dbg !9242

cond.false257:                                    ; preds = %cond.false250
  %104 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info258 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %104, i32 0, i32 6, !dbg !9242
  %105 = load %struct.flash_info*, %struct.flash_info** %info258, align 8, !dbg !9242
  %n_sectors259 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %105, i32 0, i32 4, !dbg !9242
  %106 = load i16, i16* %n_sectors259, align 4, !dbg !9242
  %conv260 = zext i16 %106 to i64, !dbg !9242
  %and261 = and i64 %conv260, 68719476736, !dbg !9242
  %tobool262 = icmp ne i64 %and261, 0, !dbg !9242
  br i1 %tobool262, label %cond.true263, label %cond.false264, !dbg !9242

cond.true263:                                     ; preds = %cond.false257
  br label %cond.end568, !dbg !9242

cond.false264:                                    ; preds = %cond.false257
  %107 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info265 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %107, i32 0, i32 6, !dbg !9242
  %108 = load %struct.flash_info*, %struct.flash_info** %info265, align 8, !dbg !9242
  %n_sectors266 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %108, i32 0, i32 4, !dbg !9242
  %109 = load i16, i16* %n_sectors266, align 4, !dbg !9242
  %conv267 = zext i16 %109 to i64, !dbg !9242
  %and268 = and i64 %conv267, 34359738368, !dbg !9242
  %tobool269 = icmp ne i64 %and268, 0, !dbg !9242
  br i1 %tobool269, label %cond.true270, label %cond.false271, !dbg !9242

cond.true270:                                     ; preds = %cond.false264
  br label %cond.end566, !dbg !9242

cond.false271:                                    ; preds = %cond.false264
  %110 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info272 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %110, i32 0, i32 6, !dbg !9242
  %111 = load %struct.flash_info*, %struct.flash_info** %info272, align 8, !dbg !9242
  %n_sectors273 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %111, i32 0, i32 4, !dbg !9242
  %112 = load i16, i16* %n_sectors273, align 4, !dbg !9242
  %conv274 = zext i16 %112 to i64, !dbg !9242
  %and275 = and i64 %conv274, 17179869184, !dbg !9242
  %tobool276 = icmp ne i64 %and275, 0, !dbg !9242
  br i1 %tobool276, label %cond.true277, label %cond.false278, !dbg !9242

cond.true277:                                     ; preds = %cond.false271
  br label %cond.end564, !dbg !9242

cond.false278:                                    ; preds = %cond.false271
  %113 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info279 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %113, i32 0, i32 6, !dbg !9242
  %114 = load %struct.flash_info*, %struct.flash_info** %info279, align 8, !dbg !9242
  %n_sectors280 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %114, i32 0, i32 4, !dbg !9242
  %115 = load i16, i16* %n_sectors280, align 4, !dbg !9242
  %conv281 = zext i16 %115 to i64, !dbg !9242
  %and282 = and i64 %conv281, 8589934592, !dbg !9242
  %tobool283 = icmp ne i64 %and282, 0, !dbg !9242
  br i1 %tobool283, label %cond.true284, label %cond.false285, !dbg !9242

cond.true284:                                     ; preds = %cond.false278
  br label %cond.end562, !dbg !9242

cond.false285:                                    ; preds = %cond.false278
  %116 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info286 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %116, i32 0, i32 6, !dbg !9242
  %117 = load %struct.flash_info*, %struct.flash_info** %info286, align 8, !dbg !9242
  %n_sectors287 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %117, i32 0, i32 4, !dbg !9242
  %118 = load i16, i16* %n_sectors287, align 4, !dbg !9242
  %conv288 = zext i16 %118 to i64, !dbg !9242
  %and289 = and i64 %conv288, 4294967296, !dbg !9242
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9242
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9242

cond.true291:                                     ; preds = %cond.false285
  br label %cond.end560, !dbg !9242

cond.false292:                                    ; preds = %cond.false285
  %119 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info293 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %119, i32 0, i32 6, !dbg !9242
  %120 = load %struct.flash_info*, %struct.flash_info** %info293, align 8, !dbg !9242
  %n_sectors294 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %120, i32 0, i32 4, !dbg !9242
  %121 = load i16, i16* %n_sectors294, align 4, !dbg !9242
  %conv295 = zext i16 %121 to i64, !dbg !9242
  %and296 = and i64 %conv295, 2147483648, !dbg !9242
  %tobool297 = icmp ne i64 %and296, 0, !dbg !9242
  br i1 %tobool297, label %cond.true298, label %cond.false299, !dbg !9242

cond.true298:                                     ; preds = %cond.false292
  br label %cond.end558, !dbg !9242

cond.false299:                                    ; preds = %cond.false292
  %122 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info300 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %122, i32 0, i32 6, !dbg !9242
  %123 = load %struct.flash_info*, %struct.flash_info** %info300, align 8, !dbg !9242
  %n_sectors301 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %123, i32 0, i32 4, !dbg !9242
  %124 = load i16, i16* %n_sectors301, align 4, !dbg !9242
  %conv302 = zext i16 %124 to i64, !dbg !9242
  %and303 = and i64 %conv302, 1073741824, !dbg !9242
  %tobool304 = icmp ne i64 %and303, 0, !dbg !9242
  br i1 %tobool304, label %cond.true305, label %cond.false306, !dbg !9242

cond.true305:                                     ; preds = %cond.false299
  br label %cond.end556, !dbg !9242

cond.false306:                                    ; preds = %cond.false299
  %125 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info307 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %125, i32 0, i32 6, !dbg !9242
  %126 = load %struct.flash_info*, %struct.flash_info** %info307, align 8, !dbg !9242
  %n_sectors308 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %126, i32 0, i32 4, !dbg !9242
  %127 = load i16, i16* %n_sectors308, align 4, !dbg !9242
  %conv309 = zext i16 %127 to i64, !dbg !9242
  %and310 = and i64 %conv309, 536870912, !dbg !9242
  %tobool311 = icmp ne i64 %and310, 0, !dbg !9242
  br i1 %tobool311, label %cond.true312, label %cond.false313, !dbg !9242

cond.true312:                                     ; preds = %cond.false306
  br label %cond.end554, !dbg !9242

cond.false313:                                    ; preds = %cond.false306
  %128 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info314 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %128, i32 0, i32 6, !dbg !9242
  %129 = load %struct.flash_info*, %struct.flash_info** %info314, align 8, !dbg !9242
  %n_sectors315 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %129, i32 0, i32 4, !dbg !9242
  %130 = load i16, i16* %n_sectors315, align 4, !dbg !9242
  %conv316 = zext i16 %130 to i64, !dbg !9242
  %and317 = and i64 %conv316, 268435456, !dbg !9242
  %tobool318 = icmp ne i64 %and317, 0, !dbg !9242
  br i1 %tobool318, label %cond.true319, label %cond.false320, !dbg !9242

cond.true319:                                     ; preds = %cond.false313
  br label %cond.end552, !dbg !9242

cond.false320:                                    ; preds = %cond.false313
  %131 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info321 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %131, i32 0, i32 6, !dbg !9242
  %132 = load %struct.flash_info*, %struct.flash_info** %info321, align 8, !dbg !9242
  %n_sectors322 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %132, i32 0, i32 4, !dbg !9242
  %133 = load i16, i16* %n_sectors322, align 4, !dbg !9242
  %conv323 = zext i16 %133 to i64, !dbg !9242
  %and324 = and i64 %conv323, 134217728, !dbg !9242
  %tobool325 = icmp ne i64 %and324, 0, !dbg !9242
  br i1 %tobool325, label %cond.true326, label %cond.false327, !dbg !9242

cond.true326:                                     ; preds = %cond.false320
  br label %cond.end550, !dbg !9242

cond.false327:                                    ; preds = %cond.false320
  %134 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info328 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %134, i32 0, i32 6, !dbg !9242
  %135 = load %struct.flash_info*, %struct.flash_info** %info328, align 8, !dbg !9242
  %n_sectors329 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %135, i32 0, i32 4, !dbg !9242
  %136 = load i16, i16* %n_sectors329, align 4, !dbg !9242
  %conv330 = zext i16 %136 to i64, !dbg !9242
  %and331 = and i64 %conv330, 67108864, !dbg !9242
  %tobool332 = icmp ne i64 %and331, 0, !dbg !9242
  br i1 %tobool332, label %cond.true333, label %cond.false334, !dbg !9242

cond.true333:                                     ; preds = %cond.false327
  br label %cond.end548, !dbg !9242

cond.false334:                                    ; preds = %cond.false327
  %137 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info335 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %137, i32 0, i32 6, !dbg !9242
  %138 = load %struct.flash_info*, %struct.flash_info** %info335, align 8, !dbg !9242
  %n_sectors336 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %138, i32 0, i32 4, !dbg !9242
  %139 = load i16, i16* %n_sectors336, align 4, !dbg !9242
  %conv337 = zext i16 %139 to i64, !dbg !9242
  %and338 = and i64 %conv337, 33554432, !dbg !9242
  %tobool339 = icmp ne i64 %and338, 0, !dbg !9242
  br i1 %tobool339, label %cond.true340, label %cond.false341, !dbg !9242

cond.true340:                                     ; preds = %cond.false334
  br label %cond.end546, !dbg !9242

cond.false341:                                    ; preds = %cond.false334
  %140 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info342 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %140, i32 0, i32 6, !dbg !9242
  %141 = load %struct.flash_info*, %struct.flash_info** %info342, align 8, !dbg !9242
  %n_sectors343 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %141, i32 0, i32 4, !dbg !9242
  %142 = load i16, i16* %n_sectors343, align 4, !dbg !9242
  %conv344 = zext i16 %142 to i64, !dbg !9242
  %and345 = and i64 %conv344, 16777216, !dbg !9242
  %tobool346 = icmp ne i64 %and345, 0, !dbg !9242
  br i1 %tobool346, label %cond.true347, label %cond.false348, !dbg !9242

cond.true347:                                     ; preds = %cond.false341
  br label %cond.end544, !dbg !9242

cond.false348:                                    ; preds = %cond.false341
  %143 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info349 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %143, i32 0, i32 6, !dbg !9242
  %144 = load %struct.flash_info*, %struct.flash_info** %info349, align 8, !dbg !9242
  %n_sectors350 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %144, i32 0, i32 4, !dbg !9242
  %145 = load i16, i16* %n_sectors350, align 4, !dbg !9242
  %conv351 = zext i16 %145 to i64, !dbg !9242
  %and352 = and i64 %conv351, 8388608, !dbg !9242
  %tobool353 = icmp ne i64 %and352, 0, !dbg !9242
  br i1 %tobool353, label %cond.true354, label %cond.false355, !dbg !9242

cond.true354:                                     ; preds = %cond.false348
  br label %cond.end542, !dbg !9242

cond.false355:                                    ; preds = %cond.false348
  %146 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info356 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %146, i32 0, i32 6, !dbg !9242
  %147 = load %struct.flash_info*, %struct.flash_info** %info356, align 8, !dbg !9242
  %n_sectors357 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %147, i32 0, i32 4, !dbg !9242
  %148 = load i16, i16* %n_sectors357, align 4, !dbg !9242
  %conv358 = zext i16 %148 to i64, !dbg !9242
  %and359 = and i64 %conv358, 4194304, !dbg !9242
  %tobool360 = icmp ne i64 %and359, 0, !dbg !9242
  br i1 %tobool360, label %cond.true361, label %cond.false362, !dbg !9242

cond.true361:                                     ; preds = %cond.false355
  br label %cond.end540, !dbg !9242

cond.false362:                                    ; preds = %cond.false355
  %149 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info363 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %149, i32 0, i32 6, !dbg !9242
  %150 = load %struct.flash_info*, %struct.flash_info** %info363, align 8, !dbg !9242
  %n_sectors364 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %150, i32 0, i32 4, !dbg !9242
  %151 = load i16, i16* %n_sectors364, align 4, !dbg !9242
  %conv365 = zext i16 %151 to i64, !dbg !9242
  %and366 = and i64 %conv365, 2097152, !dbg !9242
  %tobool367 = icmp ne i64 %and366, 0, !dbg !9242
  br i1 %tobool367, label %cond.true368, label %cond.false369, !dbg !9242

cond.true368:                                     ; preds = %cond.false362
  br label %cond.end538, !dbg !9242

cond.false369:                                    ; preds = %cond.false362
  %152 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info370 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %152, i32 0, i32 6, !dbg !9242
  %153 = load %struct.flash_info*, %struct.flash_info** %info370, align 8, !dbg !9242
  %n_sectors371 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %153, i32 0, i32 4, !dbg !9242
  %154 = load i16, i16* %n_sectors371, align 4, !dbg !9242
  %conv372 = zext i16 %154 to i64, !dbg !9242
  %and373 = and i64 %conv372, 1048576, !dbg !9242
  %tobool374 = icmp ne i64 %and373, 0, !dbg !9242
  br i1 %tobool374, label %cond.true375, label %cond.false376, !dbg !9242

cond.true375:                                     ; preds = %cond.false369
  br label %cond.end536, !dbg !9242

cond.false376:                                    ; preds = %cond.false369
  %155 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info377 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %155, i32 0, i32 6, !dbg !9242
  %156 = load %struct.flash_info*, %struct.flash_info** %info377, align 8, !dbg !9242
  %n_sectors378 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %156, i32 0, i32 4, !dbg !9242
  %157 = load i16, i16* %n_sectors378, align 4, !dbg !9242
  %conv379 = zext i16 %157 to i64, !dbg !9242
  %and380 = and i64 %conv379, 524288, !dbg !9242
  %tobool381 = icmp ne i64 %and380, 0, !dbg !9242
  br i1 %tobool381, label %cond.true382, label %cond.false383, !dbg !9242

cond.true382:                                     ; preds = %cond.false376
  br label %cond.end534, !dbg !9242

cond.false383:                                    ; preds = %cond.false376
  %158 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info384 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %158, i32 0, i32 6, !dbg !9242
  %159 = load %struct.flash_info*, %struct.flash_info** %info384, align 8, !dbg !9242
  %n_sectors385 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %159, i32 0, i32 4, !dbg !9242
  %160 = load i16, i16* %n_sectors385, align 4, !dbg !9242
  %conv386 = zext i16 %160 to i64, !dbg !9242
  %and387 = and i64 %conv386, 262144, !dbg !9242
  %tobool388 = icmp ne i64 %and387, 0, !dbg !9242
  br i1 %tobool388, label %cond.true389, label %cond.false390, !dbg !9242

cond.true389:                                     ; preds = %cond.false383
  br label %cond.end532, !dbg !9242

cond.false390:                                    ; preds = %cond.false383
  %161 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info391 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %161, i32 0, i32 6, !dbg !9242
  %162 = load %struct.flash_info*, %struct.flash_info** %info391, align 8, !dbg !9242
  %n_sectors392 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %162, i32 0, i32 4, !dbg !9242
  %163 = load i16, i16* %n_sectors392, align 4, !dbg !9242
  %conv393 = zext i16 %163 to i64, !dbg !9242
  %and394 = and i64 %conv393, 131072, !dbg !9242
  %tobool395 = icmp ne i64 %and394, 0, !dbg !9242
  br i1 %tobool395, label %cond.true396, label %cond.false397, !dbg !9242

cond.true396:                                     ; preds = %cond.false390
  br label %cond.end530, !dbg !9242

cond.false397:                                    ; preds = %cond.false390
  %164 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info398 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %164, i32 0, i32 6, !dbg !9242
  %165 = load %struct.flash_info*, %struct.flash_info** %info398, align 8, !dbg !9242
  %n_sectors399 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %165, i32 0, i32 4, !dbg !9242
  %166 = load i16, i16* %n_sectors399, align 4, !dbg !9242
  %conv400 = zext i16 %166 to i64, !dbg !9242
  %and401 = and i64 %conv400, 65536, !dbg !9242
  %tobool402 = icmp ne i64 %and401, 0, !dbg !9242
  br i1 %tobool402, label %cond.true403, label %cond.false404, !dbg !9242

cond.true403:                                     ; preds = %cond.false397
  br label %cond.end528, !dbg !9242

cond.false404:                                    ; preds = %cond.false397
  %167 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info405 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %167, i32 0, i32 6, !dbg !9242
  %168 = load %struct.flash_info*, %struct.flash_info** %info405, align 8, !dbg !9242
  %n_sectors406 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %168, i32 0, i32 4, !dbg !9242
  %169 = load i16, i16* %n_sectors406, align 4, !dbg !9242
  %conv407 = zext i16 %169 to i64, !dbg !9242
  %and408 = and i64 %conv407, 32768, !dbg !9242
  %tobool409 = icmp ne i64 %and408, 0, !dbg !9242
  br i1 %tobool409, label %cond.true410, label %cond.false411, !dbg !9242

cond.true410:                                     ; preds = %cond.false404
  br label %cond.end526, !dbg !9242

cond.false411:                                    ; preds = %cond.false404
  %170 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info412 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %170, i32 0, i32 6, !dbg !9242
  %171 = load %struct.flash_info*, %struct.flash_info** %info412, align 8, !dbg !9242
  %n_sectors413 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %171, i32 0, i32 4, !dbg !9242
  %172 = load i16, i16* %n_sectors413, align 4, !dbg !9242
  %conv414 = zext i16 %172 to i64, !dbg !9242
  %and415 = and i64 %conv414, 16384, !dbg !9242
  %tobool416 = icmp ne i64 %and415, 0, !dbg !9242
  br i1 %tobool416, label %cond.true417, label %cond.false418, !dbg !9242

cond.true417:                                     ; preds = %cond.false411
  br label %cond.end524, !dbg !9242

cond.false418:                                    ; preds = %cond.false411
  %173 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info419 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %173, i32 0, i32 6, !dbg !9242
  %174 = load %struct.flash_info*, %struct.flash_info** %info419, align 8, !dbg !9242
  %n_sectors420 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %174, i32 0, i32 4, !dbg !9242
  %175 = load i16, i16* %n_sectors420, align 4, !dbg !9242
  %conv421 = zext i16 %175 to i64, !dbg !9242
  %and422 = and i64 %conv421, 8192, !dbg !9242
  %tobool423 = icmp ne i64 %and422, 0, !dbg !9242
  br i1 %tobool423, label %cond.true424, label %cond.false425, !dbg !9242

cond.true424:                                     ; preds = %cond.false418
  br label %cond.end522, !dbg !9242

cond.false425:                                    ; preds = %cond.false418
  %176 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info426 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %176, i32 0, i32 6, !dbg !9242
  %177 = load %struct.flash_info*, %struct.flash_info** %info426, align 8, !dbg !9242
  %n_sectors427 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %177, i32 0, i32 4, !dbg !9242
  %178 = load i16, i16* %n_sectors427, align 4, !dbg !9242
  %conv428 = zext i16 %178 to i64, !dbg !9242
  %and429 = and i64 %conv428, 4096, !dbg !9242
  %tobool430 = icmp ne i64 %and429, 0, !dbg !9242
  br i1 %tobool430, label %cond.true431, label %cond.false432, !dbg !9242

cond.true431:                                     ; preds = %cond.false425
  br label %cond.end520, !dbg !9242

cond.false432:                                    ; preds = %cond.false425
  %179 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info433 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %179, i32 0, i32 6, !dbg !9242
  %180 = load %struct.flash_info*, %struct.flash_info** %info433, align 8, !dbg !9242
  %n_sectors434 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %180, i32 0, i32 4, !dbg !9242
  %181 = load i16, i16* %n_sectors434, align 4, !dbg !9242
  %conv435 = zext i16 %181 to i64, !dbg !9242
  %and436 = and i64 %conv435, 2048, !dbg !9242
  %tobool437 = icmp ne i64 %and436, 0, !dbg !9242
  br i1 %tobool437, label %cond.true438, label %cond.false439, !dbg !9242

cond.true438:                                     ; preds = %cond.false432
  br label %cond.end518, !dbg !9242

cond.false439:                                    ; preds = %cond.false432
  %182 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info440 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %182, i32 0, i32 6, !dbg !9242
  %183 = load %struct.flash_info*, %struct.flash_info** %info440, align 8, !dbg !9242
  %n_sectors441 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %183, i32 0, i32 4, !dbg !9242
  %184 = load i16, i16* %n_sectors441, align 4, !dbg !9242
  %conv442 = zext i16 %184 to i64, !dbg !9242
  %and443 = and i64 %conv442, 1024, !dbg !9242
  %tobool444 = icmp ne i64 %and443, 0, !dbg !9242
  br i1 %tobool444, label %cond.true445, label %cond.false446, !dbg !9242

cond.true445:                                     ; preds = %cond.false439
  br label %cond.end516, !dbg !9242

cond.false446:                                    ; preds = %cond.false439
  %185 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info447 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %185, i32 0, i32 6, !dbg !9242
  %186 = load %struct.flash_info*, %struct.flash_info** %info447, align 8, !dbg !9242
  %n_sectors448 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %186, i32 0, i32 4, !dbg !9242
  %187 = load i16, i16* %n_sectors448, align 4, !dbg !9242
  %conv449 = zext i16 %187 to i64, !dbg !9242
  %and450 = and i64 %conv449, 512, !dbg !9242
  %tobool451 = icmp ne i64 %and450, 0, !dbg !9242
  br i1 %tobool451, label %cond.true452, label %cond.false453, !dbg !9242

cond.true452:                                     ; preds = %cond.false446
  br label %cond.end514, !dbg !9242

cond.false453:                                    ; preds = %cond.false446
  %188 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info454 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %188, i32 0, i32 6, !dbg !9242
  %189 = load %struct.flash_info*, %struct.flash_info** %info454, align 8, !dbg !9242
  %n_sectors455 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %189, i32 0, i32 4, !dbg !9242
  %190 = load i16, i16* %n_sectors455, align 4, !dbg !9242
  %conv456 = zext i16 %190 to i64, !dbg !9242
  %and457 = and i64 %conv456, 256, !dbg !9242
  %tobool458 = icmp ne i64 %and457, 0, !dbg !9242
  br i1 %tobool458, label %cond.true459, label %cond.false460, !dbg !9242

cond.true459:                                     ; preds = %cond.false453
  br label %cond.end512, !dbg !9242

cond.false460:                                    ; preds = %cond.false453
  %191 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info461 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %191, i32 0, i32 6, !dbg !9242
  %192 = load %struct.flash_info*, %struct.flash_info** %info461, align 8, !dbg !9242
  %n_sectors462 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %192, i32 0, i32 4, !dbg !9242
  %193 = load i16, i16* %n_sectors462, align 4, !dbg !9242
  %conv463 = zext i16 %193 to i64, !dbg !9242
  %and464 = and i64 %conv463, 128, !dbg !9242
  %tobool465 = icmp ne i64 %and464, 0, !dbg !9242
  br i1 %tobool465, label %cond.true466, label %cond.false467, !dbg !9242

cond.true466:                                     ; preds = %cond.false460
  br label %cond.end510, !dbg !9242

cond.false467:                                    ; preds = %cond.false460
  %194 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info468 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %194, i32 0, i32 6, !dbg !9242
  %195 = load %struct.flash_info*, %struct.flash_info** %info468, align 8, !dbg !9242
  %n_sectors469 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %195, i32 0, i32 4, !dbg !9242
  %196 = load i16, i16* %n_sectors469, align 4, !dbg !9242
  %conv470 = zext i16 %196 to i64, !dbg !9242
  %and471 = and i64 %conv470, 64, !dbg !9242
  %tobool472 = icmp ne i64 %and471, 0, !dbg !9242
  br i1 %tobool472, label %cond.true473, label %cond.false474, !dbg !9242

cond.true473:                                     ; preds = %cond.false467
  br label %cond.end508, !dbg !9242

cond.false474:                                    ; preds = %cond.false467
  %197 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info475 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %197, i32 0, i32 6, !dbg !9242
  %198 = load %struct.flash_info*, %struct.flash_info** %info475, align 8, !dbg !9242
  %n_sectors476 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %198, i32 0, i32 4, !dbg !9242
  %199 = load i16, i16* %n_sectors476, align 4, !dbg !9242
  %conv477 = zext i16 %199 to i64, !dbg !9242
  %and478 = and i64 %conv477, 32, !dbg !9242
  %tobool479 = icmp ne i64 %and478, 0, !dbg !9242
  br i1 %tobool479, label %cond.true480, label %cond.false481, !dbg !9242

cond.true480:                                     ; preds = %cond.false474
  br label %cond.end506, !dbg !9242

cond.false481:                                    ; preds = %cond.false474
  %200 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info482 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %200, i32 0, i32 6, !dbg !9242
  %201 = load %struct.flash_info*, %struct.flash_info** %info482, align 8, !dbg !9242
  %n_sectors483 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %201, i32 0, i32 4, !dbg !9242
  %202 = load i16, i16* %n_sectors483, align 4, !dbg !9242
  %conv484 = zext i16 %202 to i64, !dbg !9242
  %and485 = and i64 %conv484, 16, !dbg !9242
  %tobool486 = icmp ne i64 %and485, 0, !dbg !9242
  br i1 %tobool486, label %cond.true487, label %cond.false488, !dbg !9242

cond.true487:                                     ; preds = %cond.false481
  br label %cond.end504, !dbg !9242

cond.false488:                                    ; preds = %cond.false481
  %203 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info489 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %203, i32 0, i32 6, !dbg !9242
  %204 = load %struct.flash_info*, %struct.flash_info** %info489, align 8, !dbg !9242
  %n_sectors490 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %204, i32 0, i32 4, !dbg !9242
  %205 = load i16, i16* %n_sectors490, align 4, !dbg !9242
  %conv491 = zext i16 %205 to i64, !dbg !9242
  %and492 = and i64 %conv491, 8, !dbg !9242
  %tobool493 = icmp ne i64 %and492, 0, !dbg !9242
  br i1 %tobool493, label %cond.true494, label %cond.false495, !dbg !9242

cond.true494:                                     ; preds = %cond.false488
  br label %cond.end502, !dbg !9242

cond.false495:                                    ; preds = %cond.false488
  %206 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info496 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %206, i32 0, i32 6, !dbg !9242
  %207 = load %struct.flash_info*, %struct.flash_info** %info496, align 8, !dbg !9242
  %n_sectors497 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %207, i32 0, i32 4, !dbg !9242
  %208 = load i16, i16* %n_sectors497, align 4, !dbg !9242
  %conv498 = zext i16 %208 to i64, !dbg !9242
  %and499 = and i64 %conv498, 4, !dbg !9242
  %tobool500 = icmp ne i64 %and499, 0, !dbg !9242
  %209 = zext i1 %tobool500 to i64, !dbg !9242
  %cond501 = select i1 %tobool500, i32 2, i32 1, !dbg !9242
  br label %cond.end502, !dbg !9242

cond.end502:                                      ; preds = %cond.false495, %cond.true494
  %cond503 = phi i32 [ 3, %cond.true494 ], [ %cond501, %cond.false495 ], !dbg !9242
  br label %cond.end504, !dbg !9242

cond.end504:                                      ; preds = %cond.end502, %cond.true487
  %cond505 = phi i32 [ 4, %cond.true487 ], [ %cond503, %cond.end502 ], !dbg !9242
  br label %cond.end506, !dbg !9242

cond.end506:                                      ; preds = %cond.end504, %cond.true480
  %cond507 = phi i32 [ 5, %cond.true480 ], [ %cond505, %cond.end504 ], !dbg !9242
  br label %cond.end508, !dbg !9242

cond.end508:                                      ; preds = %cond.end506, %cond.true473
  %cond509 = phi i32 [ 6, %cond.true473 ], [ %cond507, %cond.end506 ], !dbg !9242
  br label %cond.end510, !dbg !9242

cond.end510:                                      ; preds = %cond.end508, %cond.true466
  %cond511 = phi i32 [ 7, %cond.true466 ], [ %cond509, %cond.end508 ], !dbg !9242
  br label %cond.end512, !dbg !9242

cond.end512:                                      ; preds = %cond.end510, %cond.true459
  %cond513 = phi i32 [ 8, %cond.true459 ], [ %cond511, %cond.end510 ], !dbg !9242
  br label %cond.end514, !dbg !9242

cond.end514:                                      ; preds = %cond.end512, %cond.true452
  %cond515 = phi i32 [ 9, %cond.true452 ], [ %cond513, %cond.end512 ], !dbg !9242
  br label %cond.end516, !dbg !9242

cond.end516:                                      ; preds = %cond.end514, %cond.true445
  %cond517 = phi i32 [ 10, %cond.true445 ], [ %cond515, %cond.end514 ], !dbg !9242
  br label %cond.end518, !dbg !9242

cond.end518:                                      ; preds = %cond.end516, %cond.true438
  %cond519 = phi i32 [ 11, %cond.true438 ], [ %cond517, %cond.end516 ], !dbg !9242
  br label %cond.end520, !dbg !9242

cond.end520:                                      ; preds = %cond.end518, %cond.true431
  %cond521 = phi i32 [ 12, %cond.true431 ], [ %cond519, %cond.end518 ], !dbg !9242
  br label %cond.end522, !dbg !9242

cond.end522:                                      ; preds = %cond.end520, %cond.true424
  %cond523 = phi i32 [ 13, %cond.true424 ], [ %cond521, %cond.end520 ], !dbg !9242
  br label %cond.end524, !dbg !9242

cond.end524:                                      ; preds = %cond.end522, %cond.true417
  %cond525 = phi i32 [ 14, %cond.true417 ], [ %cond523, %cond.end522 ], !dbg !9242
  br label %cond.end526, !dbg !9242

cond.end526:                                      ; preds = %cond.end524, %cond.true410
  %cond527 = phi i32 [ 15, %cond.true410 ], [ %cond525, %cond.end524 ], !dbg !9242
  br label %cond.end528, !dbg !9242

cond.end528:                                      ; preds = %cond.end526, %cond.true403
  %cond529 = phi i32 [ 16, %cond.true403 ], [ %cond527, %cond.end526 ], !dbg !9242
  br label %cond.end530, !dbg !9242

cond.end530:                                      ; preds = %cond.end528, %cond.true396
  %cond531 = phi i32 [ 17, %cond.true396 ], [ %cond529, %cond.end528 ], !dbg !9242
  br label %cond.end532, !dbg !9242

cond.end532:                                      ; preds = %cond.end530, %cond.true389
  %cond533 = phi i32 [ 18, %cond.true389 ], [ %cond531, %cond.end530 ], !dbg !9242
  br label %cond.end534, !dbg !9242

cond.end534:                                      ; preds = %cond.end532, %cond.true382
  %cond535 = phi i32 [ 19, %cond.true382 ], [ %cond533, %cond.end532 ], !dbg !9242
  br label %cond.end536, !dbg !9242

cond.end536:                                      ; preds = %cond.end534, %cond.true375
  %cond537 = phi i32 [ 20, %cond.true375 ], [ %cond535, %cond.end534 ], !dbg !9242
  br label %cond.end538, !dbg !9242

cond.end538:                                      ; preds = %cond.end536, %cond.true368
  %cond539 = phi i32 [ 21, %cond.true368 ], [ %cond537, %cond.end536 ], !dbg !9242
  br label %cond.end540, !dbg !9242

cond.end540:                                      ; preds = %cond.end538, %cond.true361
  %cond541 = phi i32 [ 22, %cond.true361 ], [ %cond539, %cond.end538 ], !dbg !9242
  br label %cond.end542, !dbg !9242

cond.end542:                                      ; preds = %cond.end540, %cond.true354
  %cond543 = phi i32 [ 23, %cond.true354 ], [ %cond541, %cond.end540 ], !dbg !9242
  br label %cond.end544, !dbg !9242

cond.end544:                                      ; preds = %cond.end542, %cond.true347
  %cond545 = phi i32 [ 24, %cond.true347 ], [ %cond543, %cond.end542 ], !dbg !9242
  br label %cond.end546, !dbg !9242

cond.end546:                                      ; preds = %cond.end544, %cond.true340
  %cond547 = phi i32 [ 25, %cond.true340 ], [ %cond545, %cond.end544 ], !dbg !9242
  br label %cond.end548, !dbg !9242

cond.end548:                                      ; preds = %cond.end546, %cond.true333
  %cond549 = phi i32 [ 26, %cond.true333 ], [ %cond547, %cond.end546 ], !dbg !9242
  br label %cond.end550, !dbg !9242

cond.end550:                                      ; preds = %cond.end548, %cond.true326
  %cond551 = phi i32 [ 27, %cond.true326 ], [ %cond549, %cond.end548 ], !dbg !9242
  br label %cond.end552, !dbg !9242

cond.end552:                                      ; preds = %cond.end550, %cond.true319
  %cond553 = phi i32 [ 28, %cond.true319 ], [ %cond551, %cond.end550 ], !dbg !9242
  br label %cond.end554, !dbg !9242

cond.end554:                                      ; preds = %cond.end552, %cond.true312
  %cond555 = phi i32 [ 29, %cond.true312 ], [ %cond553, %cond.end552 ], !dbg !9242
  br label %cond.end556, !dbg !9242

cond.end556:                                      ; preds = %cond.end554, %cond.true305
  %cond557 = phi i32 [ 30, %cond.true305 ], [ %cond555, %cond.end554 ], !dbg !9242
  br label %cond.end558, !dbg !9242

cond.end558:                                      ; preds = %cond.end556, %cond.true298
  %cond559 = phi i32 [ 31, %cond.true298 ], [ %cond557, %cond.end556 ], !dbg !9242
  br label %cond.end560, !dbg !9242

cond.end560:                                      ; preds = %cond.end558, %cond.true291
  %cond561 = phi i32 [ 32, %cond.true291 ], [ %cond559, %cond.end558 ], !dbg !9242
  br label %cond.end562, !dbg !9242

cond.end562:                                      ; preds = %cond.end560, %cond.true284
  %cond563 = phi i32 [ 33, %cond.true284 ], [ %cond561, %cond.end560 ], !dbg !9242
  br label %cond.end564, !dbg !9242

cond.end564:                                      ; preds = %cond.end562, %cond.true277
  %cond565 = phi i32 [ 34, %cond.true277 ], [ %cond563, %cond.end562 ], !dbg !9242
  br label %cond.end566, !dbg !9242

cond.end566:                                      ; preds = %cond.end564, %cond.true270
  %cond567 = phi i32 [ 35, %cond.true270 ], [ %cond565, %cond.end564 ], !dbg !9242
  br label %cond.end568, !dbg !9242

cond.end568:                                      ; preds = %cond.end566, %cond.true263
  %cond569 = phi i32 [ 36, %cond.true263 ], [ %cond567, %cond.end566 ], !dbg !9242
  br label %cond.end570, !dbg !9242

cond.end570:                                      ; preds = %cond.end568, %cond.true256
  %cond571 = phi i32 [ 37, %cond.true256 ], [ %cond569, %cond.end568 ], !dbg !9242
  br label %cond.end572, !dbg !9242

cond.end572:                                      ; preds = %cond.end570, %cond.true249
  %cond573 = phi i32 [ 38, %cond.true249 ], [ %cond571, %cond.end570 ], !dbg !9242
  br label %cond.end574, !dbg !9242

cond.end574:                                      ; preds = %cond.end572, %cond.true242
  %cond575 = phi i32 [ 39, %cond.true242 ], [ %cond573, %cond.end572 ], !dbg !9242
  br label %cond.end576, !dbg !9242

cond.end576:                                      ; preds = %cond.end574, %cond.true235
  %cond577 = phi i32 [ 40, %cond.true235 ], [ %cond575, %cond.end574 ], !dbg !9242
  br label %cond.end578, !dbg !9242

cond.end578:                                      ; preds = %cond.end576, %cond.true228
  %cond579 = phi i32 [ 41, %cond.true228 ], [ %cond577, %cond.end576 ], !dbg !9242
  br label %cond.end580, !dbg !9242

cond.end580:                                      ; preds = %cond.end578, %cond.true221
  %cond581 = phi i32 [ 42, %cond.true221 ], [ %cond579, %cond.end578 ], !dbg !9242
  br label %cond.end582, !dbg !9242

cond.end582:                                      ; preds = %cond.end580, %cond.true214
  %cond583 = phi i32 [ 43, %cond.true214 ], [ %cond581, %cond.end580 ], !dbg !9242
  br label %cond.end584, !dbg !9242

cond.end584:                                      ; preds = %cond.end582, %cond.true207
  %cond585 = phi i32 [ 44, %cond.true207 ], [ %cond583, %cond.end582 ], !dbg !9242
  br label %cond.end586, !dbg !9242

cond.end586:                                      ; preds = %cond.end584, %cond.true200
  %cond587 = phi i32 [ 45, %cond.true200 ], [ %cond585, %cond.end584 ], !dbg !9242
  br label %cond.end588, !dbg !9242

cond.end588:                                      ; preds = %cond.end586, %cond.true193
  %cond589 = phi i32 [ 46, %cond.true193 ], [ %cond587, %cond.end586 ], !dbg !9242
  br label %cond.end590, !dbg !9242

cond.end590:                                      ; preds = %cond.end588, %cond.true186
  %cond591 = phi i32 [ 47, %cond.true186 ], [ %cond589, %cond.end588 ], !dbg !9242
  br label %cond.end592, !dbg !9242

cond.end592:                                      ; preds = %cond.end590, %cond.true179
  %cond593 = phi i32 [ 48, %cond.true179 ], [ %cond591, %cond.end590 ], !dbg !9242
  br label %cond.end594, !dbg !9242

cond.end594:                                      ; preds = %cond.end592, %cond.true172
  %cond595 = phi i32 [ 49, %cond.true172 ], [ %cond593, %cond.end592 ], !dbg !9242
  br label %cond.end596, !dbg !9242

cond.end596:                                      ; preds = %cond.end594, %cond.true165
  %cond597 = phi i32 [ 50, %cond.true165 ], [ %cond595, %cond.end594 ], !dbg !9242
  br label %cond.end598, !dbg !9242

cond.end598:                                      ; preds = %cond.end596, %cond.true158
  %cond599 = phi i32 [ 51, %cond.true158 ], [ %cond597, %cond.end596 ], !dbg !9242
  br label %cond.end600, !dbg !9242

cond.end600:                                      ; preds = %cond.end598, %cond.true151
  %cond601 = phi i32 [ 52, %cond.true151 ], [ %cond599, %cond.end598 ], !dbg !9242
  br label %cond.end602, !dbg !9242

cond.end602:                                      ; preds = %cond.end600, %cond.true144
  %cond603 = phi i32 [ 53, %cond.true144 ], [ %cond601, %cond.end600 ], !dbg !9242
  br label %cond.end604, !dbg !9242

cond.end604:                                      ; preds = %cond.end602, %cond.true137
  %cond605 = phi i32 [ 54, %cond.true137 ], [ %cond603, %cond.end602 ], !dbg !9242
  br label %cond.end606, !dbg !9242

cond.end606:                                      ; preds = %cond.end604, %cond.true130
  %cond607 = phi i32 [ 55, %cond.true130 ], [ %cond605, %cond.end604 ], !dbg !9242
  br label %cond.end608, !dbg !9242

cond.end608:                                      ; preds = %cond.end606, %cond.true123
  %cond609 = phi i32 [ 56, %cond.true123 ], [ %cond607, %cond.end606 ], !dbg !9242
  br label %cond.end610, !dbg !9242

cond.end610:                                      ; preds = %cond.end608, %cond.true116
  %cond611 = phi i32 [ 57, %cond.true116 ], [ %cond609, %cond.end608 ], !dbg !9242
  br label %cond.end612, !dbg !9242

cond.end612:                                      ; preds = %cond.end610, %cond.true109
  %cond613 = phi i32 [ 58, %cond.true109 ], [ %cond611, %cond.end610 ], !dbg !9242
  br label %cond.end614, !dbg !9242

cond.end614:                                      ; preds = %cond.end612, %cond.true102
  %cond615 = phi i32 [ 59, %cond.true102 ], [ %cond613, %cond.end612 ], !dbg !9242
  br label %cond.end616, !dbg !9242

cond.end616:                                      ; preds = %cond.end614, %cond.true95
  %cond617 = phi i32 [ 60, %cond.true95 ], [ %cond615, %cond.end614 ], !dbg !9242
  br label %cond.end618, !dbg !9242

cond.end618:                                      ; preds = %cond.end616, %cond.true88
  %cond619 = phi i32 [ 61, %cond.true88 ], [ %cond617, %cond.end616 ], !dbg !9242
  br label %cond.end620, !dbg !9242

cond.end620:                                      ; preds = %cond.end618, %cond.true81
  %cond621 = phi i32 [ 62, %cond.true81 ], [ %cond619, %cond.end618 ], !dbg !9242
  br label %cond.end622, !dbg !9242

cond.end622:                                      ; preds = %cond.end620, %cond.true74
  %cond623 = phi i32 [ 63, %cond.true74 ], [ %cond621, %cond.end620 ], !dbg !9242
  br label %cond.end624, !dbg !9242

cond.end624:                                      ; preds = %cond.end622, %cond.true67
  %cond625 = phi i32 [ 0, %cond.true67 ], [ %cond623, %cond.end622 ], !dbg !9242
  br label %cond.end627, !dbg !9242

cond.false626:                                    ; preds = %cond.true59
  br label %cond.end627, !dbg !9242

cond.end627:                                      ; preds = %cond.false626, %cond.end624
  %cond628 = phi i32 [ %cond625, %cond.end624 ], [ -1, %cond.false626 ], !dbg !9242
  br label %cond.end634, !dbg !9242

cond.false629:                                    ; preds = %cond.end
  %210 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9242
  %info630 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %210, i32 0, i32 6, !dbg !9242
  %211 = load %struct.flash_info*, %struct.flash_info** %info630, align 8, !dbg !9242
  %n_sectors631 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %211, i32 0, i32 4, !dbg !9242
  %212 = load i16, i16* %n_sectors631, align 4, !dbg !9242
  %conv632 = zext i16 %212 to i32, !dbg !9242
  %call633 = call i32 @__ilog2_u32(i32 %conv632) #14, !dbg !9242
  br label %cond.end634, !dbg !9242

cond.end634:                                      ; preds = %cond.false629, %cond.end627
  %cond635 = phi i32 [ %cond628, %cond.end627 ], [ %call633, %cond.false629 ], !dbg !9242
  store i32 %cond635, i32* %bp_slots_needed, align 4, !dbg !9243
  %213 = load i32, i32* %bp_slots_needed, align 4, !dbg !9244
  %214 = load i32, i32* %bp_slots, align 4, !dbg !9246
  %cmp636 = icmp ugt i32 %213, %214, !dbg !9247
  br i1 %cmp636, label %if.then, label %if.else, !dbg !9248

if.then:                                          ; preds = %cond.end634
  %215 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9249
  %info638 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %215, i32 0, i32 6, !dbg !9250
  %216 = load %struct.flash_info*, %struct.flash_info** %info638, align 8, !dbg !9250
  %sector_size = getelementptr inbounds %struct.flash_info, %struct.flash_info* %216, i32 0, i32 3, !dbg !9251
  %217 = load i32, i32* %sector_size, align 8, !dbg !9251
  %218 = load i32, i32* %bp_slots_needed, align 4, !dbg !9252
  %219 = load i32, i32* %bp_slots, align 4, !dbg !9253
  %sub639 = sub i32 %218, %219, !dbg !9254
  %shl640 = shl i32 %217, %sub639, !dbg !9255
  %conv641 = zext i32 %shl640 to i64, !dbg !9249
  store i64 %conv641, i64* %retval, align 8, !dbg !9256
  br label %return, !dbg !9256

if.else:                                          ; preds = %cond.end634
  %220 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9257
  %info642 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %220, i32 0, i32 6, !dbg !9258
  %221 = load %struct.flash_info*, %struct.flash_info** %info642, align 8, !dbg !9258
  %sector_size643 = getelementptr inbounds %struct.flash_info, %struct.flash_info* %221, i32 0, i32 3, !dbg !9259
  %222 = load i32, i32* %sector_size643, align 8, !dbg !9259
  %conv644 = zext i32 %222 to i64, !dbg !9257
  store i64 %conv644, i64* %retval, align 8, !dbg !9260
  br label %return, !dbg !9260

return:                                           ; preds = %if.else, %if.then
  %223 = load i64, i64* %retval, align 8, !dbg !9261
  ret i64 %223, !dbg !9261
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !9262 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9266, metadata !DIExpression()), !dbg !9270
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9272, metadata !DIExpression()), !dbg !9273
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9274, metadata !DIExpression()), !dbg !9275
  %0 = load i64, i64* %n.addr, align 8, !dbg !9276
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9273
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9277
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9278
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #10, !dbg !9277, !srcloc !9279
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9277
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9280
  %add.i = add i32 %4, 1, !dbg !9281
  %sub = sub i32 %add.i, 1, !dbg !9282
  ret i32 %sub, !dbg !9283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_write_sr_and_check(%struct.spi_nor* %nor, i8 zeroext %sr1) #0 !dbg !9284 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sr1.addr = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9285, metadata !DIExpression()), !dbg !9286
  store i8 %sr1, i8* %sr1.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sr1.addr, metadata !9287, metadata !DIExpression()), !dbg !9288
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9289
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 18, !dbg !9291
  %1 = load i32, i32* %flags, align 4, !dbg !9291
  %and = and i32 %1, 512, !dbg !9292
  %tobool = icmp ne i32 %and, 0, !dbg !9292
  br i1 %tobool, label %if.then, label %if.end, !dbg !9293

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9294
  %3 = load i8, i8* %sr1.addr, align 1, !dbg !9295
  %call = call i32 @spi_nor_write_16bit_sr_and_check(%struct.spi_nor* %2, i8 zeroext %3) #9, !dbg !9296
  store i32 %call, i32* %retval, align 4, !dbg !9297
  br label %return, !dbg !9297

if.end:                                           ; preds = %entry
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9298
  %5 = load i8, i8* %sr1.addr, align 1, !dbg !9299
  %call1 = call i32 @spi_nor_write_sr1_and_check(%struct.spi_nor* %4, i8 zeroext %5) #9, !dbg !9300
  store i32 %call1, i32* %retval, align 4, !dbg !9301
  br label %return, !dbg !9301

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9302
  ret i32 %6, !dbg !9302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_check_lock_status_sr(%struct.spi_nor* %nor, i64 %ofs, i64 %len, i8 zeroext %sr, i1 zeroext %locked) #0 !dbg !9303 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ofs.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %sr.addr = alloca i8, align 1
  %locked.addr = alloca i8, align 1
  %lock_offs = alloca i64, align 8
  %lock_len = alloca i64, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9306, metadata !DIExpression()), !dbg !9307
  store i64 %ofs, i64* %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofs.addr, metadata !9308, metadata !DIExpression()), !dbg !9309
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !9310, metadata !DIExpression()), !dbg !9311
  store i8 %sr, i8* %sr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sr.addr, metadata !9312, metadata !DIExpression()), !dbg !9313
  %frombool = zext i1 %locked to i8
  store i8 %frombool, i8* %locked.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %locked.addr, metadata !9314, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.declare(metadata i64* %lock_offs, metadata !9316, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.declare(metadata i64* %lock_len, metadata !9318, metadata !DIExpression()), !dbg !9319
  %0 = load i64, i64* %len.addr, align 8, !dbg !9320
  %tobool = icmp ne i64 %0, 0, !dbg !9320
  br i1 %tobool, label %if.end, label %if.then, !dbg !9322

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !9323
  br label %return, !dbg !9323

if.end:                                           ; preds = %entry
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9324
  %2 = load i8, i8* %sr.addr, align 1, !dbg !9325
  call void @spi_nor_get_locked_range_sr(%struct.spi_nor* %1, i8 zeroext %2, i64* %lock_offs, i64* %lock_len) #9, !dbg !9326
  %3 = load i8, i8* %locked.addr, align 1, !dbg !9327
  %tobool1 = trunc i8 %3 to i1, !dbg !9327
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !9329

if.then2:                                         ; preds = %if.end
  %4 = load i64, i64* %ofs.addr, align 8, !dbg !9330
  %5 = load i64, i64* %len.addr, align 8, !dbg !9331
  %add = add i64 %4, %5, !dbg !9332
  %6 = load i64, i64* %lock_offs, align 8, !dbg !9333
  %7 = load i64, i64* %lock_len, align 8, !dbg !9334
  %add3 = add i64 %6, %7, !dbg !9335
  %cmp = icmp ule i64 %add, %add3, !dbg !9336
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9337

land.rhs:                                         ; preds = %if.then2
  %8 = load i64, i64* %ofs.addr, align 8, !dbg !9338
  %9 = load i64, i64* %lock_offs, align 8, !dbg !9339
  %cmp4 = icmp sge i64 %8, %9, !dbg !9340
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then2
  %10 = phi i1 [ false, %if.then2 ], [ %cmp4, %land.rhs ], !dbg !9341
  %land.ext = zext i1 %10 to i32, !dbg !9337
  store i32 %land.ext, i32* %retval, align 4, !dbg !9342
  br label %return, !dbg !9342

if.else:                                          ; preds = %if.end
  %11 = load i64, i64* %ofs.addr, align 8, !dbg !9343
  %12 = load i64, i64* %lock_offs, align 8, !dbg !9344
  %13 = load i64, i64* %lock_len, align 8, !dbg !9345
  %add5 = add i64 %12, %13, !dbg !9346
  %cmp6 = icmp uge i64 %11, %add5, !dbg !9347
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !9348

lor.rhs:                                          ; preds = %if.else
  %14 = load i64, i64* %ofs.addr, align 8, !dbg !9349
  %15 = load i64, i64* %len.addr, align 8, !dbg !9350
  %add7 = add i64 %14, %15, !dbg !9351
  %16 = load i64, i64* %lock_offs, align 8, !dbg !9352
  %cmp8 = icmp ule i64 %add7, %16, !dbg !9353
  br label %lor.end, !dbg !9348

lor.end:                                          ; preds = %lor.rhs, %if.else
  %17 = phi i1 [ true, %if.else ], [ %cmp8, %lor.rhs ]
  %lor.ext = zext i1 %17 to i32, !dbg !9348
  store i32 %lor.ext, i32* %retval, align 4, !dbg !9354
  br label %return, !dbg !9354

return:                                           ; preds = %lor.end, %land.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !9355
  ret i32 %18, !dbg !9355
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_get_locked_range_sr(%struct.spi_nor* %nor, i8 zeroext %sr, i64* %ofs, i64* %len) #0 !dbg !9356 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sr.addr = alloca i8, align 1
  %ofs.addr = alloca i64*, align 8
  %len.addr = alloca i64*, align 8
  %mtd = alloca %struct.mtd_info*, align 8
  %min_prot_len = alloca i64, align 8
  %mask = alloca i8, align 1
  %tb_mask = alloca i8, align 1
  %bp = alloca i8, align 1
  %val = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9360, metadata !DIExpression()), !dbg !9361
  store i8 %sr, i8* %sr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sr.addr, metadata !9362, metadata !DIExpression()), !dbg !9363
  store i64* %ofs, i64** %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ofs.addr, metadata !9364, metadata !DIExpression()), !dbg !9365
  store i64* %len, i64** %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %len.addr, metadata !9366, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd, metadata !9368, metadata !DIExpression()), !dbg !9369
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9370
  %mtd1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 0, !dbg !9371
  store %struct.mtd_info* %mtd1, %struct.mtd_info** %mtd, align 8, !dbg !9369
  call void @llvm.dbg.declare(metadata i64* %min_prot_len, metadata !9372, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !9374, metadata !DIExpression()), !dbg !9375
  %1 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9376
  %call = call zeroext i8 @spi_nor_get_sr_bp_mask(%struct.spi_nor* %1) #9, !dbg !9377
  store i8 %call, i8* %mask, align 1, !dbg !9375
  call void @llvm.dbg.declare(metadata i8* %tb_mask, metadata !9378, metadata !DIExpression()), !dbg !9379
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9380
  %call2 = call zeroext i8 @spi_nor_get_sr_tb_mask(%struct.spi_nor* %2) #9, !dbg !9381
  store i8 %call2, i8* %tb_mask, align 1, !dbg !9379
  call void @llvm.dbg.declare(metadata i8* %bp, metadata !9382, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.declare(metadata i8* %val, metadata !9384, metadata !DIExpression()), !dbg !9385
  %3 = load i8, i8* %sr.addr, align 1, !dbg !9386
  %conv = zext i8 %3 to i32, !dbg !9386
  %4 = load i8, i8* %mask, align 1, !dbg !9387
  %conv3 = zext i8 %4 to i32, !dbg !9387
  %and = and i32 %conv, %conv3, !dbg !9388
  %conv4 = trunc i32 %and to i8, !dbg !9386
  store i8 %conv4, i8* %val, align 1, !dbg !9385
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9389
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 18, !dbg !9391
  %6 = load i32, i32* %flags, align 4, !dbg !9391
  %and5 = and i32 %6, 8192, !dbg !9392
  %tobool = icmp ne i32 %and5, 0, !dbg !9392
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9393

land.lhs.true:                                    ; preds = %entry
  %7 = load i8, i8* %val, align 1, !dbg !9394
  %conv6 = zext i8 %7 to i64, !dbg !9394
  %and7 = and i64 %conv6, 64, !dbg !9395
  %tobool8 = icmp ne i64 %and7, 0, !dbg !9395
  br i1 %tobool8, label %if.then, label %if.end, !dbg !9396

if.then:                                          ; preds = %land.lhs.true
  %8 = load i8, i8* %val, align 1, !dbg !9397
  %conv9 = zext i8 %8 to i64, !dbg !9397
  %and10 = and i64 %conv9, -65, !dbg !9398
  %or = or i64 %and10, 32, !dbg !9399
  %conv11 = trunc i64 %or to i8, !dbg !9400
  store i8 %conv11, i8* %val, align 1, !dbg !9401
  br label %if.end, !dbg !9402

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load i8, i8* %val, align 1, !dbg !9403
  %conv12 = zext i8 %9 to i32, !dbg !9403
  %shr = ashr i32 %conv12, 2, !dbg !9404
  %conv13 = trunc i32 %shr to i8, !dbg !9403
  store i8 %conv13, i8* %bp, align 1, !dbg !9405
  %10 = load i8, i8* %bp, align 1, !dbg !9406
  %tobool14 = icmp ne i8 %10, 0, !dbg !9406
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !9408

if.then15:                                        ; preds = %if.end
  %11 = load i64*, i64** %ofs.addr, align 8, !dbg !9409
  store i64 0, i64* %11, align 8, !dbg !9411
  %12 = load i64*, i64** %len.addr, align 8, !dbg !9412
  store i64 0, i64* %12, align 8, !dbg !9413
  br label %if.end34, !dbg !9414

if.end16:                                         ; preds = %if.end
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9415
  %call17 = call i64 @spi_nor_get_min_prot_length_sr(%struct.spi_nor* %13) #9, !dbg !9416
  store i64 %call17, i64* %min_prot_len, align 8, !dbg !9417
  %14 = load i64, i64* %min_prot_len, align 8, !dbg !9418
  %15 = load i8, i8* %bp, align 1, !dbg !9419
  %conv18 = zext i8 %15 to i32, !dbg !9419
  %sub = sub i32 %conv18, 1, !dbg !9420
  %sh_prom = zext i32 %sub to i64, !dbg !9421
  %shl = shl i64 %14, %sh_prom, !dbg !9421
  %16 = load i64*, i64** %len.addr, align 8, !dbg !9422
  store i64 %shl, i64* %16, align 8, !dbg !9423
  %17 = load i64*, i64** %len.addr, align 8, !dbg !9424
  %18 = load i64, i64* %17, align 8, !dbg !9426
  %19 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !9427
  %size = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %19, i32 0, i32 2, !dbg !9428
  %20 = load i64, i64* %size, align 8, !dbg !9428
  %cmp = icmp ugt i64 %18, %20, !dbg !9429
  br i1 %cmp, label %if.then20, label %if.end22, !dbg !9430

if.then20:                                        ; preds = %if.end16
  %21 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !9431
  %size21 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %21, i32 0, i32 2, !dbg !9432
  %22 = load i64, i64* %size21, align 8, !dbg !9432
  %23 = load i64*, i64** %len.addr, align 8, !dbg !9433
  store i64 %22, i64* %23, align 8, !dbg !9434
  br label %if.end22, !dbg !9435

if.end22:                                         ; preds = %if.then20, %if.end16
  %24 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9436
  %flags23 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %24, i32 0, i32 18, !dbg !9438
  %25 = load i32, i32* %flags23, align 4, !dbg !9438
  %and24 = and i32 %25, 2, !dbg !9439
  %tobool25 = icmp ne i32 %and24, 0, !dbg !9439
  br i1 %tobool25, label %land.lhs.true26, label %if.else, !dbg !9440

land.lhs.true26:                                  ; preds = %if.end22
  %26 = load i8, i8* %sr.addr, align 1, !dbg !9441
  %conv27 = zext i8 %26 to i32, !dbg !9441
  %27 = load i8, i8* %tb_mask, align 1, !dbg !9442
  %conv28 = zext i8 %27 to i32, !dbg !9442
  %and29 = and i32 %conv27, %conv28, !dbg !9443
  %tobool30 = icmp ne i32 %and29, 0, !dbg !9443
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !9444

if.then31:                                        ; preds = %land.lhs.true26
  %28 = load i64*, i64** %ofs.addr, align 8, !dbg !9445
  store i64 0, i64* %28, align 8, !dbg !9446
  br label %if.end34, !dbg !9447

if.else:                                          ; preds = %land.lhs.true26, %if.end22
  %29 = load %struct.mtd_info*, %struct.mtd_info** %mtd, align 8, !dbg !9448
  %size32 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %29, i32 0, i32 2, !dbg !9449
  %30 = load i64, i64* %size32, align 8, !dbg !9449
  %31 = load i64*, i64** %len.addr, align 8, !dbg !9450
  %32 = load i64, i64* %31, align 8, !dbg !9451
  %sub33 = sub i64 %30, %32, !dbg !9452
  %33 = load i64*, i64** %ofs.addr, align 8, !dbg !9453
  store i64 %sub33, i64* %33, align 8, !dbg !9454
  br label %if.end34

if.end34:                                         ; preds = %if.then15, %if.else, %if.then31
  ret void, !dbg !9455
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i8(i8) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__arch_hweight8(i32 %w) #0 !dbg !9456 {
entry:
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !6384, metadata !DIExpression()), !dbg !9457
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !6395, metadata !DIExpression()), !dbg !9459
  %w.addr = alloca i32, align 4
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !9460, metadata !DIExpression()), !dbg !9461
  %0 = load i32, i32* %w.addr, align 4, !dbg !9462
  %and = and i32 %0, 255, !dbg !9463
  store i32 %and, i32* %w.addr.i, align 4
  %1 = load i32, i32* %w.addr.i, align 4, !dbg !9464
  %2 = call i32 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight32\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntl $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i32 %1) #12, !dbg !9465, !srcloc !6443
  store i32 %2, i32* %res.i, align 4, !dbg !9465
  %3 = load i32, i32* %res.i, align 4, !dbg !9466
  ret i32 %3, !dbg !9467
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u32(i32 %n) #7 !dbg !9468 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8344, metadata !DIExpression()), !dbg !9469
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !8350, metadata !DIExpression()), !dbg !9471
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9472, metadata !DIExpression()), !dbg !9473
  %0 = load i32, i32* %n.addr, align 4, !dbg !9474
  store i32 %0, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !9475
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #10, !dbg !9476, !srcloc !8364
  store i32 %2, i32* %r.i, align 4, !dbg !9476
  %3 = load i32, i32* %r.i, align 4, !dbg !9477
  %add.i = add i32 %3, 1, !dbg !9478
  %sub = sub i32 %add.i, 1, !dbg !9479
  ret i32 %sub, !dbg !9480
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_write_16bit_sr_and_check(%struct.spi_nor* %nor, i8 zeroext %sr1) #0 !dbg !9481 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %sr1.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %sr_cr = alloca i8*, align 8
  %cr_written = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9482, metadata !DIExpression()), !dbg !9483
  store i8 %sr1, i8* %sr1.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sr1.addr, metadata !9484, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9486, metadata !DIExpression()), !dbg !9487
  call void @llvm.dbg.declare(metadata i8** %sr_cr, metadata !9488, metadata !DIExpression()), !dbg !9489
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9490
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 4, !dbg !9491
  %1 = load i8*, i8** %bouncebuf, align 8, !dbg !9491
  store i8* %1, i8** %sr_cr, align 8, !dbg !9489
  call void @llvm.dbg.declare(metadata i8* %cr_written, metadata !9492, metadata !DIExpression()), !dbg !9493
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9494
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 18, !dbg !9496
  %3 = load i32, i32* %flags, align 4, !dbg !9496
  %and = and i32 %3, 1024, !dbg !9497
  %tobool = icmp ne i32 %and, 0, !dbg !9497
  br i1 %tobool, label %if.else, label %if.then, !dbg !9498

if.then:                                          ; preds = %entry
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9499
  %5 = load i8*, i8** %sr_cr, align 8, !dbg !9501
  %arrayidx = getelementptr i8, i8* %5, i64 1, !dbg !9501
  %call = call i32 @spi_nor_read_cr(%struct.spi_nor* %4, i8* %arrayidx) #9, !dbg !9502
  store i32 %call, i32* %ret, align 4, !dbg !9503
  %6 = load i32, i32* %ret, align 4, !dbg !9504
  %tobool1 = icmp ne i32 %6, 0, !dbg !9504
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !9506

if.then2:                                         ; preds = %if.then
  %7 = load i32, i32* %ret, align 4, !dbg !9507
  store i32 %7, i32* %retval, align 4, !dbg !9508
  br label %return, !dbg !9508

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !9509

if.else:                                          ; preds = %entry
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9510
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 20, !dbg !9512
  %9 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !9512
  %quad_enable = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %9, i32 0, i32 6, !dbg !9513
  %10 = load i32 (%struct.spi_nor*)*, i32 (%struct.spi_nor*)** %quad_enable, align 8, !dbg !9513
  %tobool3 = icmp ne i32 (%struct.spi_nor*)* %10, null, !dbg !9510
  br i1 %tobool3, label %if.then4, label %if.else6, !dbg !9514

if.then4:                                         ; preds = %if.else
  %11 = load i8*, i8** %sr_cr, align 8, !dbg !9515
  %arrayidx5 = getelementptr i8, i8* %11, i64 1, !dbg !9515
  store i8 2, i8* %arrayidx5, align 1, !dbg !9517
  br label %if.end8, !dbg !9518

if.else6:                                         ; preds = %if.else
  %12 = load i8*, i8** %sr_cr, align 8, !dbg !9519
  %arrayidx7 = getelementptr i8, i8* %12, i64 1, !dbg !9519
  store i8 0, i8* %arrayidx7, align 1, !dbg !9521
  br label %if.end8

if.end8:                                          ; preds = %if.else6, %if.then4
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %13 = load i8, i8* %sr1.addr, align 1, !dbg !9522
  %14 = load i8*, i8** %sr_cr, align 8, !dbg !9523
  %arrayidx10 = getelementptr i8, i8* %14, i64 0, !dbg !9523
  store i8 %13, i8* %arrayidx10, align 1, !dbg !9524
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9525
  %16 = load i8*, i8** %sr_cr, align 8, !dbg !9526
  %call11 = call i32 @spi_nor_write_sr(%struct.spi_nor* %15, i8* %16, i64 2) #9, !dbg !9527
  store i32 %call11, i32* %ret, align 4, !dbg !9528
  %17 = load i32, i32* %ret, align 4, !dbg !9529
  %tobool12 = icmp ne i32 %17, 0, !dbg !9529
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !9531

if.then13:                                        ; preds = %if.end9
  %18 = load i32, i32* %ret, align 4, !dbg !9532
  store i32 %18, i32* %retval, align 4, !dbg !9533
  br label %return, !dbg !9533

if.end14:                                         ; preds = %if.end9
  %19 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9534
  %flags15 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %19, i32 0, i32 18, !dbg !9536
  %20 = load i32, i32* %flags15, align 4, !dbg !9536
  %and16 = and i32 %20, 1024, !dbg !9537
  %tobool17 = icmp ne i32 %and16, 0, !dbg !9537
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !9538

if.then18:                                        ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !9539
  br label %return, !dbg !9539

if.end19:                                         ; preds = %if.end14
  %21 = load i8*, i8** %sr_cr, align 8, !dbg !9540
  %arrayidx20 = getelementptr i8, i8* %21, i64 1, !dbg !9540
  %22 = load i8, i8* %arrayidx20, align 1, !dbg !9540
  store i8 %22, i8* %cr_written, align 1, !dbg !9541
  %23 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9542
  %24 = load i8*, i8** %sr_cr, align 8, !dbg !9543
  %arrayidx21 = getelementptr i8, i8* %24, i64 1, !dbg !9543
  %call22 = call i32 @spi_nor_read_cr(%struct.spi_nor* %23, i8* %arrayidx21) #9, !dbg !9544
  store i32 %call22, i32* %ret, align 4, !dbg !9545
  %25 = load i32, i32* %ret, align 4, !dbg !9546
  %tobool23 = icmp ne i32 %25, 0, !dbg !9546
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !9548

if.then24:                                        ; preds = %if.end19
  %26 = load i32, i32* %ret, align 4, !dbg !9549
  store i32 %26, i32* %retval, align 4, !dbg !9550
  br label %return, !dbg !9550

if.end25:                                         ; preds = %if.end19
  %27 = load i8, i8* %cr_written, align 1, !dbg !9551
  %conv = zext i8 %27 to i32, !dbg !9551
  %28 = load i8*, i8** %sr_cr, align 8, !dbg !9553
  %arrayidx26 = getelementptr i8, i8* %28, i64 1, !dbg !9553
  %29 = load i8, i8* %arrayidx26, align 1, !dbg !9553
  %conv27 = zext i8 %29 to i32, !dbg !9553
  %cmp = icmp ne i32 %conv, %conv27, !dbg !9554
  br i1 %cmp, label %if.then29, label %if.end30, !dbg !9555

if.then29:                                        ; preds = %if.end25
  store i32 -5, i32* %retval, align 4, !dbg !9556
  br label %return, !dbg !9556

if.end30:                                         ; preds = %if.end25
  store i32 0, i32* %retval, align 4, !dbg !9558
  br label %return, !dbg !9558

return:                                           ; preds = %if.end30, %if.then29, %if.then24, %if.then18, %if.then13, %if.then2
  %30 = load i32, i32* %retval, align 4, !dbg !9559
  ret i32 %30, !dbg !9559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_is_unlocked_sr(%struct.spi_nor* %nor, i64 %ofs, i64 %len, i8 zeroext %sr) #0 !dbg !9560 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ofs.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %sr.addr = alloca i8, align 1
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9561, metadata !DIExpression()), !dbg !9562
  store i64 %ofs, i64* %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofs.addr, metadata !9563, metadata !DIExpression()), !dbg !9564
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !9565, metadata !DIExpression()), !dbg !9566
  store i8 %sr, i8* %sr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sr.addr, metadata !9567, metadata !DIExpression()), !dbg !9568
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9569
  %1 = load i64, i64* %ofs.addr, align 8, !dbg !9570
  %2 = load i64, i64* %len.addr, align 8, !dbg !9571
  %3 = load i8, i8* %sr.addr, align 1, !dbg !9572
  %call = call i32 @spi_nor_check_lock_status_sr(%struct.spi_nor* %0, i64 %1, i64 %2, i8 zeroext %3, i1 zeroext false) #9, !dbg !9573
  ret i32 %call, !dbg !9574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !9575 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !9580, metadata !DIExpression()), !dbg !9581
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !9582
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !9583
  %1 = load i8*, i8** %name, align 8, !dbg !9583
  ret i8* %1, !dbg !9584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @div_u64_rem(i64 %dividend, i32 %divisor, i32* %remainder) #0 !dbg !9585 {
entry:
  %dividend.addr = alloca i64, align 8
  %divisor.addr = alloca i32, align 4
  %remainder.addr = alloca i32*, align 8
  store i64 %dividend, i64* %dividend.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dividend.addr, metadata !9589, metadata !DIExpression()), !dbg !9590
  store i32 %divisor, i32* %divisor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %divisor.addr, metadata !9591, metadata !DIExpression()), !dbg !9592
  store i32* %remainder, i32** %remainder.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %remainder.addr, metadata !9593, metadata !DIExpression()), !dbg !9594
  %0 = load i64, i64* %dividend.addr, align 8, !dbg !9595
  %1 = load i32, i32* %divisor.addr, align 4, !dbg !9596
  %conv = zext i32 %1 to i64, !dbg !9596
  %rem = urem i64 %0, %conv, !dbg !9597
  %conv1 = trunc i64 %rem to i32, !dbg !9595
  %2 = load i32*, i32** %remainder.addr, align 8, !dbg !9598
  store i32 %conv1, i32* %2, align 4, !dbg !9599
  %3 = load i64, i64* %dividend.addr, align 8, !dbg !9600
  %4 = load i32, i32* %divisor.addr, align 4, !dbg !9601
  %conv2 = zext i32 %4 to i64, !dbg !9601
  %div = udiv i64 %3, %conv2, !dbg !9602
  ret i64 %div, !dbg !9603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_erase_chip(%struct.spi_nor* %nor) #0 !dbg !9604 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %ret = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9605, metadata !DIExpression()), !dbg !9606
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9607, metadata !DIExpression()), !dbg !9608
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9609
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 3, !dbg !9611
  %1 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !9611
  %tobool = icmp ne %struct.spi_mem* %1, null, !dbg !9609
  br i1 %tobool, label %if.then, label %if.else, !dbg !9612

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !9613, metadata !DIExpression()), !dbg !9615
  %2 = bitcast %struct.spi_mem_op* %op to i8*, !dbg !9615
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false), !dbg !9615
  %3 = bitcast i8* %2 to %struct.spi_mem_op*, !dbg !9615
  %4 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %3, i32 0, i32 0, !dbg !9615
  %5 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 0, !dbg !9615
  store i8 1, i8* %5, align 8, !dbg !9615
  %6 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 1, !dbg !9615
  store i8 1, i8* %6, align 1, !dbg !9615
  %7 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %4, i32 0, i32 3, !dbg !9615
  store i16 199, i16* %7, align 4, !dbg !9615
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9616
  %spimem1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 3, !dbg !9617
  %9 = load %struct.spi_mem*, %struct.spi_mem** %spimem1, align 8, !dbg !9617
  %call = call i32 @spi_mem_exec_op(%struct.spi_mem* %9, %struct.spi_mem_op* %op) #9, !dbg !9618
  store i32 %call, i32* %ret, align 4, !dbg !9619
  br label %if.end, !dbg !9620

if.else:                                          ; preds = %entry
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9621
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 19, !dbg !9623
  %11 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !9623
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %11, i32 0, i32 3, !dbg !9624
  %12 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !9624
  %13 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9625
  %call2 = call i32 %12(%struct.spi_nor* %13, i8 zeroext -57, i8* null, i64 0) #9, !dbg !9621
  store i32 %call2, i32* %ret, align 4, !dbg !9626
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !9627
  %tobool3 = icmp ne i32 %14, 0, !dbg !9627
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !9629

if.then4:                                         ; preds = %if.end
  br label %if.end5, !dbg !9630

if.end5:                                          ; preds = %if.then4, %if.end
  %15 = load i32, i32* %ret, align 4, !dbg !9631
  ret i32 %15, !dbg !9632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_erase_sector(%struct.spi_nor* %nor, i32 %addr) #0 !dbg !9633 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %addr.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %op = alloca %struct.spi_mem_op, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9634, metadata !DIExpression()), !dbg !9635
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !9636, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9638, metadata !DIExpression()), !dbg !9639
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9640
  %1 = load i32, i32* %addr.addr, align 4, !dbg !9641
  %conv = zext i32 %1 to i64, !dbg !9641
  %call = call i32 @spi_nor_convert_addr(%struct.spi_nor* %0, i64 %conv) #9, !dbg !9642
  store i32 %call, i32* %addr.addr, align 4, !dbg !9643
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9644
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 3, !dbg !9646
  %3 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !9646
  %tobool = icmp ne %struct.spi_mem* %3, null, !dbg !9644
  br i1 %tobool, label %if.then, label %if.else, !dbg !9647

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op* %op, metadata !9648, metadata !DIExpression()), !dbg !9650
  %4 = bitcast %struct.spi_mem_op* %op to i8*, !dbg !9650
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false), !dbg !9650
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 0, !dbg !9651
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !9651
  store i8 1, i8* %nbytes, align 8, !dbg !9651
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !9651
  store i8 1, i8* %buswidth, align 1, !dbg !9651
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !9651
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !9651
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9651
  %erase_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 10, !dbg !9651
  %6 = load i8, i8* %erase_opcode, align 1, !dbg !9651
  %conv1 = zext i8 %6 to i16, !dbg !9651
  store i16 %conv1, i16* %opcode, align 4, !dbg !9651
  %addr2 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 1, !dbg !9651
  %nbytes3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr2, i32 0, i32 0, !dbg !9651
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9651
  %addr_width = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 9, !dbg !9651
  %8 = load i8, i8* %addr_width, align 4, !dbg !9651
  store i8 %8, i8* %nbytes3, align 8, !dbg !9651
  %buswidth4 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr2, i32 0, i32 1, !dbg !9651
  store i8 1, i8* %buswidth4, align 1, !dbg !9651
  %dtr5 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr2, i32 0, i32 2, !dbg !9651
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr2, i32 0, i32 3, !dbg !9651
  %9 = load i32, i32* %addr.addr, align 4, !dbg !9651
  %conv6 = zext i32 %9 to i64, !dbg !9651
  store i64 %conv6, i64* %val, align 8, !dbg !9651
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 2, !dbg !9651
  %dtr9 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !9651
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op, i32 0, i32 3, !dbg !9651
  %dtr11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !9651
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9652
  %spimem13 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 3, !dbg !9653
  %11 = load %struct.spi_mem*, %struct.spi_mem** %spimem13, align 8, !dbg !9653
  %call14 = call i32 @spi_mem_exec_op(%struct.spi_mem* %11, %struct.spi_mem_op* %op) #9, !dbg !9654
  store i32 %call14, i32* %retval, align 4, !dbg !9655
  br label %return, !dbg !9655

if.else:                                          ; preds = %entry
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9656
  %controller_ops = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %12, i32 0, i32 19, !dbg !9658
  %13 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops, align 8, !dbg !9658
  %erase = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %13, i32 0, i32 6, !dbg !9659
  %14 = load i32 (%struct.spi_nor*, i64)*, i32 (%struct.spi_nor*, i64)** %erase, align 8, !dbg !9659
  %tobool15 = icmp ne i32 (%struct.spi_nor*, i64)* %14, null, !dbg !9656
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !9660

if.then16:                                        ; preds = %if.else
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9661
  %controller_ops17 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %15, i32 0, i32 19, !dbg !9663
  %16 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops17, align 8, !dbg !9663
  %erase18 = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %16, i32 0, i32 6, !dbg !9664
  %17 = load i32 (%struct.spi_nor*, i64)*, i32 (%struct.spi_nor*, i64)** %erase18, align 8, !dbg !9664
  %18 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9665
  %19 = load i32, i32* %addr.addr, align 4, !dbg !9666
  %conv19 = zext i32 %19 to i64, !dbg !9666
  %call20 = call i32 %17(%struct.spi_nor* %18, i64 %conv19) #9, !dbg !9661
  store i32 %call20, i32* %retval, align 4, !dbg !9667
  br label %return, !dbg !9667

if.end:                                           ; preds = %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end
  %20 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9668
  %addr_width22 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %20, i32 0, i32 9, !dbg !9670
  %21 = load i8, i8* %addr_width22, align 4, !dbg !9670
  %conv23 = zext i8 %21 to i32, !dbg !9668
  %sub = sub i32 %conv23, 1, !dbg !9671
  store i32 %sub, i32* %i, align 4, !dbg !9672
  br label %for.cond, !dbg !9673

for.cond:                                         ; preds = %for.inc, %if.end21
  %22 = load i32, i32* %i, align 4, !dbg !9674
  %cmp = icmp sge i32 %22, 0, !dbg !9676
  br i1 %cmp, label %for.body, label %for.end, !dbg !9677

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %addr.addr, align 4, !dbg !9678
  %and = and i32 %23, 255, !dbg !9680
  %conv25 = trunc i32 %and to i8, !dbg !9678
  %24 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9681
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %24, i32 0, i32 4, !dbg !9682
  %25 = load i8*, i8** %bouncebuf, align 8, !dbg !9682
  %26 = load i32, i32* %i, align 4, !dbg !9683
  %idxprom = sext i32 %26 to i64, !dbg !9681
  %arrayidx = getelementptr i8, i8* %25, i64 %idxprom, !dbg !9681
  store i8 %conv25, i8* %arrayidx, align 1, !dbg !9684
  %27 = load i32, i32* %addr.addr, align 4, !dbg !9685
  %shr = lshr i32 %27, 8, !dbg !9685
  store i32 %shr, i32* %addr.addr, align 4, !dbg !9685
  br label %for.inc, !dbg !9686

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !9687
  %dec = add i32 %28, -1, !dbg !9687
  store i32 %dec, i32* %i, align 4, !dbg !9687
  br label %for.cond, !dbg !9688, !llvm.loop !9689

for.end:                                          ; preds = %for.cond
  %29 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9691
  %controller_ops26 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %29, i32 0, i32 19, !dbg !9692
  %30 = load %struct.spi_nor_controller_ops*, %struct.spi_nor_controller_ops** %controller_ops26, align 8, !dbg !9692
  %write_reg = getelementptr inbounds %struct.spi_nor_controller_ops, %struct.spi_nor_controller_ops* %30, i32 0, i32 3, !dbg !9693
  %31 = load i32 (%struct.spi_nor*, i8, i8*, i64)*, i32 (%struct.spi_nor*, i8, i8*, i64)** %write_reg, align 8, !dbg !9693
  %32 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9694
  %33 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9695
  %erase_opcode27 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %33, i32 0, i32 10, !dbg !9696
  %34 = load i8, i8* %erase_opcode27, align 1, !dbg !9696
  %35 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9697
  %bouncebuf28 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %35, i32 0, i32 4, !dbg !9698
  %36 = load i8*, i8** %bouncebuf28, align 8, !dbg !9698
  %37 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9699
  %addr_width29 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %37, i32 0, i32 9, !dbg !9700
  %38 = load i8, i8* %addr_width29, align 4, !dbg !9700
  %conv30 = zext i8 %38 to i64, !dbg !9699
  %call31 = call i32 %31(%struct.spi_nor* %32, i8 zeroext %34, i8* %36, i64 %conv30) #9, !dbg !9691
  store i32 %call31, i32* %retval, align 4, !dbg !9701
  br label %return, !dbg !9701

return:                                           ; preds = %for.end, %if.then16, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !9702
  ret i32 %39, !dbg !9702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_erase_multi_sectors(%struct.spi_nor* %nor, i64 %addr, i32 %len) #0 !dbg !9703 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %addr.addr = alloca i64, align 8
  %len.addr = alloca i32, align 4
  %erase_list = alloca %struct.list_head, align 8
  %cmd = alloca %struct.spi_nor_erase_command*, align 8
  %next1 = alloca %struct.spi_nor_erase_command*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_nor_erase_command*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp7 = alloca %struct.spi_nor_erase_command*, align 8
  %__mptr26 = alloca i8*, align 8
  %tmp31 = alloca %struct.spi_nor_erase_command*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9706, metadata !DIExpression()), !dbg !9707
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9708, metadata !DIExpression()), !dbg !9709
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !9710, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.declare(metadata %struct.list_head* %erase_list, metadata !9712, metadata !DIExpression()), !dbg !9713
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %erase_list, i32 0, i32 0, !dbg !9713
  store %struct.list_head* %erase_list, %struct.list_head** %next, align 8, !dbg !9713
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %erase_list, i32 0, i32 1, !dbg !9713
  store %struct.list_head* %erase_list, %struct.list_head** %prev, align 8, !dbg !9713
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_command** %cmd, metadata !9714, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_command** %next1, metadata !9716, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9718, metadata !DIExpression()), !dbg !9719
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9720
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9721
  %2 = load i32, i32* %len.addr, align 4, !dbg !9722
  %call = call i32 @spi_nor_init_erase_cmd_list(%struct.spi_nor* %0, %struct.list_head* %erase_list, i64 %1, i32 %2) #9, !dbg !9723
  store i32 %call, i32* %ret, align 4, !dbg !9724
  %3 = load i32, i32* %ret, align 4, !dbg !9725
  %tobool = icmp ne i32 %3, 0, !dbg !9725
  br i1 %tobool, label %if.then, label %if.end, !dbg !9727

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !9728
  store i32 %4, i32* %retval, align 4, !dbg !9729
  br label %return, !dbg !9729

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9730, metadata !DIExpression()), !dbg !9733
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %erase_list, i32 0, i32 0, !dbg !9733
  %5 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !9733
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !9733
  store i8* %6, i8** %__mptr, align 8, !dbg !9733
  br label %do.body, !dbg !9733

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9734

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !9733
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !9733
  %8 = bitcast i8* %add.ptr to %struct.spi_nor_erase_command*, !dbg !9733
  store %struct.spi_nor_erase_command* %8, %struct.spi_nor_erase_command** %tmp, align 8, !dbg !9734
  %9 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %tmp, align 8, !dbg !9733
  store %struct.spi_nor_erase_command* %9, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9736
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !9737, metadata !DIExpression()), !dbg !9739
  %10 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9739
  %list = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %10, i32 0, i32 0, !dbg !9739
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !9739
  %11 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !9739
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !9739
  store i8* %12, i8** %__mptr3, align 8, !dbg !9739
  br label %do.body5, !dbg !9739

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !9740

do.end6:                                          ; preds = %do.body5
  %13 = load i8*, i8** %__mptr3, align 8, !dbg !9739
  %add.ptr8 = getelementptr i8, i8* %13, i64 0, !dbg !9739
  %14 = bitcast i8* %add.ptr8 to %struct.spi_nor_erase_command*, !dbg !9739
  store %struct.spi_nor_erase_command* %14, %struct.spi_nor_erase_command** %tmp7, align 8, !dbg !9740
  %15 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %tmp7, align 8, !dbg !9739
  store %struct.spi_nor_erase_command* %15, %struct.spi_nor_erase_command** %next1, align 8, !dbg !9736
  br label %for.cond, !dbg !9736

for.cond:                                         ; preds = %do.end30, %do.end6
  %16 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9742
  %list9 = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %16, i32 0, i32 0, !dbg !9742
  %cmp = icmp eq %struct.list_head* %list9, %erase_list, !dbg !9742
  %lnot = xor i1 %cmp, true, !dbg !9742
  br i1 %lnot, label %for.body, label %for.end, !dbg !9736

for.body:                                         ; preds = %for.cond
  %17 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9744
  %opcode = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %17, i32 0, i32 3, !dbg !9746
  %18 = load i8, i8* %opcode, align 8, !dbg !9746
  %19 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9747
  %erase_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %19, i32 0, i32 10, !dbg !9748
  store i8 %18, i8* %erase_opcode, align 1, !dbg !9749
  br label %while.cond, !dbg !9750

while.cond:                                       ; preds = %if.end24, %for.body
  %20 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9751
  %count = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %20, i32 0, i32 1, !dbg !9752
  %21 = load i32, i32* %count, align 8, !dbg !9752
  %tobool10 = icmp ne i32 %21, 0, !dbg !9750
  br i1 %tobool10, label %while.body, label %while.end, !dbg !9750

while.body:                                       ; preds = %while.cond
  %22 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9753
  %call11 = call i32 @spi_nor_write_enable(%struct.spi_nor* %22) #9, !dbg !9755
  store i32 %call11, i32* %ret, align 4, !dbg !9756
  %23 = load i32, i32* %ret, align 4, !dbg !9757
  %tobool12 = icmp ne i32 %23, 0, !dbg !9757
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !9759

if.then13:                                        ; preds = %while.body
  br label %destroy_erase_cmd_list, !dbg !9760

if.end14:                                         ; preds = %while.body
  %24 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9761
  %25 = load i64, i64* %addr.addr, align 8, !dbg !9762
  %conv = trunc i64 %25 to i32, !dbg !9762
  %call15 = call i32 @spi_nor_erase_sector(%struct.spi_nor* %24, i32 %conv) #9, !dbg !9763
  store i32 %call15, i32* %ret, align 4, !dbg !9764
  %26 = load i32, i32* %ret, align 4, !dbg !9765
  %tobool16 = icmp ne i32 %26, 0, !dbg !9765
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !9767

if.then17:                                        ; preds = %if.end14
  br label %destroy_erase_cmd_list, !dbg !9768

if.end18:                                         ; preds = %if.end14
  %27 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9769
  %size = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %27, i32 0, i32 2, !dbg !9770
  %28 = load i32, i32* %size, align 4, !dbg !9770
  %conv19 = zext i32 %28 to i64, !dbg !9769
  %29 = load i64, i64* %addr.addr, align 8, !dbg !9771
  %add = add i64 %29, %conv19, !dbg !9771
  store i64 %add, i64* %addr.addr, align 8, !dbg !9771
  %30 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9772
  %count20 = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %30, i32 0, i32 1, !dbg !9773
  %31 = load i32, i32* %count20, align 8, !dbg !9774
  %dec = add i32 %31, -1, !dbg !9774
  store i32 %dec, i32* %count20, align 8, !dbg !9774
  %32 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9775
  %call21 = call i32 @spi_nor_wait_till_ready(%struct.spi_nor* %32) #9, !dbg !9776
  store i32 %call21, i32* %ret, align 4, !dbg !9777
  %33 = load i32, i32* %ret, align 4, !dbg !9778
  %tobool22 = icmp ne i32 %33, 0, !dbg !9778
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !9780

if.then23:                                        ; preds = %if.end18
  br label %destroy_erase_cmd_list, !dbg !9781

if.end24:                                         ; preds = %if.end18
  br label %while.cond, !dbg !9750, !llvm.loop !9782

while.end:                                        ; preds = %while.cond
  %34 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9784
  %list25 = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %34, i32 0, i32 0, !dbg !9785
  call void @list_del(%struct.list_head* %list25) #9, !dbg !9786
  %35 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9787
  %36 = bitcast %struct.spi_nor_erase_command* %35 to i8*, !dbg !9787
  call void @kfree(i8* %36) #9, !dbg !9788
  br label %for.inc, !dbg !9789

for.inc:                                          ; preds = %while.end
  %37 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %next1, align 8, !dbg !9742
  store %struct.spi_nor_erase_command* %37, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9742
  call void @llvm.dbg.declare(metadata i8** %__mptr26, metadata !9790, metadata !DIExpression()), !dbg !9792
  %38 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %next1, align 8, !dbg !9792
  %list27 = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %38, i32 0, i32 0, !dbg !9792
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %list27, i32 0, i32 0, !dbg !9792
  %39 = load %struct.list_head*, %struct.list_head** %next28, align 8, !dbg !9792
  %40 = bitcast %struct.list_head* %39 to i8*, !dbg !9792
  store i8* %40, i8** %__mptr26, align 8, !dbg !9792
  br label %do.body29, !dbg !9792

do.body29:                                        ; preds = %for.inc
  br label %do.end30, !dbg !9793

do.end30:                                         ; preds = %do.body29
  %41 = load i8*, i8** %__mptr26, align 8, !dbg !9792
  %add.ptr32 = getelementptr i8, i8* %41, i64 0, !dbg !9792
  %42 = bitcast i8* %add.ptr32 to %struct.spi_nor_erase_command*, !dbg !9792
  store %struct.spi_nor_erase_command* %42, %struct.spi_nor_erase_command** %tmp31, align 8, !dbg !9793
  %43 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %tmp31, align 8, !dbg !9792
  store %struct.spi_nor_erase_command* %43, %struct.spi_nor_erase_command** %next1, align 8, !dbg !9742
  br label %for.cond, !dbg !9742, !llvm.loop !9795

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9797
  br label %return, !dbg !9797

destroy_erase_cmd_list:                           ; preds = %if.then23, %if.then17, %if.then13
  call void @llvm.dbg.label(metadata !9798), !dbg !9799
  call void @spi_nor_destroy_erase_cmd_list(%struct.list_head* %erase_list) #9, !dbg !9800
  %44 = load i32, i32* %ret, align 4, !dbg !9801
  store i32 %44, i32* %retval, align 4, !dbg !9802
  br label %return, !dbg !9802

return:                                           ; preds = %destroy_erase_cmd_list, %for.end, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !9803
  ret i32 %45, !dbg !9803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_init_erase_cmd_list(%struct.spi_nor* %nor, %struct.list_head* %erase_list, i64 %addr, i32 %len) #0 !dbg !9804 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  %erase_list.addr = alloca %struct.list_head*, align 8
  %addr.addr = alloca i64, align 8
  %len.addr = alloca i32, align 4
  %map = alloca %struct.spi_nor_erase_map*, align 8
  %erase = alloca %struct.spi_nor_erase_type*, align 8
  %prev_erase = alloca %struct.spi_nor_erase_type*, align 8
  %region = alloca %struct.spi_nor_erase_region*, align 8
  %cmd = alloca %struct.spi_nor_erase_command*, align 8
  %region_end = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !9807, metadata !DIExpression()), !dbg !9808
  store %struct.list_head* %erase_list, %struct.list_head** %erase_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %erase_list.addr, metadata !9809, metadata !DIExpression()), !dbg !9810
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9811, metadata !DIExpression()), !dbg !9812
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !9813, metadata !DIExpression()), !dbg !9814
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_map** %map, metadata !9815, metadata !DIExpression()), !dbg !9818
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !9819
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 20, !dbg !9820
  %1 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !9820
  %erase_map = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %1, i32 0, i32 5, !dbg !9821
  store %struct.spi_nor_erase_map* %erase_map, %struct.spi_nor_erase_map** %map, align 8, !dbg !9818
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_type** %erase, metadata !9822, metadata !DIExpression()), !dbg !9823
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_type** %prev_erase, metadata !9824, metadata !DIExpression()), !dbg !9825
  store %struct.spi_nor_erase_type* null, %struct.spi_nor_erase_type** %prev_erase, align 8, !dbg !9825
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_region** %region, metadata !9826, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_command** %cmd, metadata !9828, metadata !DIExpression()), !dbg !9829
  store %struct.spi_nor_erase_command* null, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9829
  call void @llvm.dbg.declare(metadata i64* %region_end, metadata !9830, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9832, metadata !DIExpression()), !dbg !9833
  store i32 -22, i32* %ret, align 4, !dbg !9833
  %2 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map, align 8, !dbg !9834
  %3 = load i64, i64* %addr.addr, align 8, !dbg !9835
  %call = call %struct.spi_nor_erase_region* @spi_nor_find_erase_region(%struct.spi_nor_erase_map* %2, i64 %3) #9, !dbg !9836
  store %struct.spi_nor_erase_region* %call, %struct.spi_nor_erase_region** %region, align 8, !dbg !9837
  %4 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !9838
  %5 = bitcast %struct.spi_nor_erase_region* %4 to i8*, !dbg !9838
  %call1 = call zeroext i1 @IS_ERR(i8* %5) #9, !dbg !9840
  br i1 %call1, label %if.then, label %if.end, !dbg !9841

if.then:                                          ; preds = %entry
  %6 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !9842
  %7 = bitcast %struct.spi_nor_erase_region* %6 to i8*, !dbg !9842
  %call2 = call i64 @PTR_ERR(i8* %7) #9, !dbg !9843
  %conv = trunc i64 %call2 to i32, !dbg !9843
  store i32 %conv, i32* %retval, align 4, !dbg !9844
  br label %return, !dbg !9844

if.end:                                           ; preds = %entry
  %8 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !9845
  %call3 = call i64 @spi_nor_region_end(%struct.spi_nor_erase_region* %8) #9, !dbg !9846
  store i64 %call3, i64* %region_end, align 8, !dbg !9847
  br label %while.cond, !dbg !9848

while.cond:                                       ; preds = %if.end29, %if.end
  %9 = load i32, i32* %len.addr, align 4, !dbg !9849
  %tobool = icmp ne i32 %9, 0, !dbg !9848
  br i1 %tobool, label %while.body, label %while.end, !dbg !9848

while.body:                                       ; preds = %while.cond
  %10 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map, align 8, !dbg !9850
  %11 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !9852
  %12 = load i64, i64* %addr.addr, align 8, !dbg !9853
  %13 = load i32, i32* %len.addr, align 4, !dbg !9854
  %call4 = call %struct.spi_nor_erase_type* @spi_nor_find_best_erase_type(%struct.spi_nor_erase_map* %10, %struct.spi_nor_erase_region* %11, i64 %12, i32 %13) #9, !dbg !9855
  store %struct.spi_nor_erase_type* %call4, %struct.spi_nor_erase_type** %erase, align 8, !dbg !9856
  %14 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !9857
  %tobool5 = icmp ne %struct.spi_nor_erase_type* %14, null, !dbg !9857
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9859

if.then6:                                         ; preds = %while.body
  br label %destroy_erase_cmd_list, !dbg !9860

if.end7:                                          ; preds = %while.body
  %15 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %prev_erase, align 8, !dbg !9861
  %16 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !9863
  %cmp = icmp ne %struct.spi_nor_erase_type* %15, %16, !dbg !9864
  br i1 %cmp, label %if.then10, label %lor.lhs.false, !dbg !9865

lor.lhs.false:                                    ; preds = %if.end7
  %17 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !9866
  %offset = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %17, i32 0, i32 0, !dbg !9867
  %18 = load i64, i64* %offset, align 8, !dbg !9867
  %and = and i64 %18, 32, !dbg !9868
  %tobool9 = icmp ne i64 %and, 0, !dbg !9868
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !9869

if.then10:                                        ; preds = %lor.lhs.false, %if.end7
  %19 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !9870
  %20 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !9872
  %call11 = call %struct.spi_nor_erase_command* @spi_nor_init_erase_cmd(%struct.spi_nor_erase_region* %19, %struct.spi_nor_erase_type* %20) #9, !dbg !9873
  store %struct.spi_nor_erase_command* %call11, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9874
  %21 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9875
  %22 = bitcast %struct.spi_nor_erase_command* %21 to i8*, !dbg !9875
  %call12 = call zeroext i1 @IS_ERR(i8* %22) #9, !dbg !9877
  br i1 %call12, label %if.then13, label %if.end16, !dbg !9878

if.then13:                                        ; preds = %if.then10
  %23 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9879
  %24 = bitcast %struct.spi_nor_erase_command* %23 to i8*, !dbg !9879
  %call14 = call i64 @PTR_ERR(i8* %24) #9, !dbg !9881
  %conv15 = trunc i64 %call14 to i32, !dbg !9881
  store i32 %conv15, i32* %ret, align 4, !dbg !9882
  br label %destroy_erase_cmd_list, !dbg !9883

if.end16:                                         ; preds = %if.then10
  %25 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9884
  %list = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %25, i32 0, i32 0, !dbg !9885
  %26 = load %struct.list_head*, %struct.list_head** %erase_list.addr, align 8, !dbg !9886
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %26) #9, !dbg !9887
  br label %if.end17, !dbg !9888

if.else:                                          ; preds = %lor.lhs.false
  %27 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9889
  %count = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %27, i32 0, i32 1, !dbg !9891
  %28 = load i32, i32* %count, align 8, !dbg !9892
  %inc = add i32 %28, 1, !dbg !9892
  store i32 %inc, i32* %count, align 8, !dbg !9892
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end16
  %29 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9893
  %size = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %29, i32 0, i32 2, !dbg !9894
  %30 = load i32, i32* %size, align 4, !dbg !9894
  %conv18 = zext i32 %30 to i64, !dbg !9893
  %31 = load i64, i64* %addr.addr, align 8, !dbg !9895
  %add = add i64 %31, %conv18, !dbg !9895
  store i64 %add, i64* %addr.addr, align 8, !dbg !9895
  %32 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9896
  %size19 = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %32, i32 0, i32 2, !dbg !9897
  %33 = load i32, i32* %size19, align 4, !dbg !9897
  %34 = load i32, i32* %len.addr, align 4, !dbg !9898
  %sub = sub i32 %34, %33, !dbg !9898
  store i32 %sub, i32* %len.addr, align 4, !dbg !9898
  %35 = load i32, i32* %len.addr, align 4, !dbg !9899
  %tobool20 = icmp ne i32 %35, 0, !dbg !9899
  br i1 %tobool20, label %land.lhs.true, label %if.end29, !dbg !9901

land.lhs.true:                                    ; preds = %if.end17
  %36 = load i64, i64* %addr.addr, align 8, !dbg !9902
  %37 = load i64, i64* %region_end, align 8, !dbg !9903
  %cmp21 = icmp uge i64 %36, %37, !dbg !9904
  br i1 %cmp21, label %if.then23, label %if.end29, !dbg !9905

if.then23:                                        ; preds = %land.lhs.true
  %38 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !9906
  %call24 = call %struct.spi_nor_erase_region* @spi_nor_region_next(%struct.spi_nor_erase_region* %38) #9, !dbg !9908
  store %struct.spi_nor_erase_region* %call24, %struct.spi_nor_erase_region** %region, align 8, !dbg !9909
  %39 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !9910
  %tobool25 = icmp ne %struct.spi_nor_erase_region* %39, null, !dbg !9910
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !9912

if.then26:                                        ; preds = %if.then23
  br label %destroy_erase_cmd_list, !dbg !9913

if.end27:                                         ; preds = %if.then23
  %40 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !9914
  %call28 = call i64 @spi_nor_region_end(%struct.spi_nor_erase_region* %40) #9, !dbg !9915
  store i64 %call28, i64* %region_end, align 8, !dbg !9916
  br label %if.end29, !dbg !9917

if.end29:                                         ; preds = %if.end27, %land.lhs.true, %if.end17
  %41 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !9918
  store %struct.spi_nor_erase_type* %41, %struct.spi_nor_erase_type** %prev_erase, align 8, !dbg !9919
  br label %while.cond, !dbg !9848, !llvm.loop !9920

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !9922
  br label %return, !dbg !9922

destroy_erase_cmd_list:                           ; preds = %if.then26, %if.then13, %if.then6
  call void @llvm.dbg.label(metadata !9923), !dbg !9924
  %42 = load %struct.list_head*, %struct.list_head** %erase_list.addr, align 8, !dbg !9925
  call void @spi_nor_destroy_erase_cmd_list(%struct.list_head* %42) #9, !dbg !9926
  %43 = load i32, i32* %ret, align 4, !dbg !9927
  store i32 %43, i32* %retval, align 4, !dbg !9928
  br label %return, !dbg !9928

return:                                           ; preds = %destroy_erase_cmd_list, %while.end, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !9929
  ret i32 %44, !dbg !9929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !9930 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9934, metadata !DIExpression()), !dbg !9935
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9936
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !9937
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9938
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !9939
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !9940
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9941
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !9942
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !9943
  ret void, !dbg !9944
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_destroy_erase_cmd_list(%struct.list_head* %erase_list) #0 !dbg !9945 {
entry:
  %erase_list.addr = alloca %struct.list_head*, align 8
  %cmd = alloca %struct.spi_nor_erase_command*, align 8
  %next = alloca %struct.spi_nor_erase_command*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_nor_erase_command*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.spi_nor_erase_command*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.spi_nor_erase_command*, align 8
  store %struct.list_head* %erase_list, %struct.list_head** %erase_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %erase_list.addr, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_command** %cmd, metadata !9948, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_command** %next, metadata !9950, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9952, metadata !DIExpression()), !dbg !9955
  %0 = load %struct.list_head*, %struct.list_head** %erase_list.addr, align 8, !dbg !9955
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !9955
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !9955
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !9955
  store i8* %2, i8** %__mptr, align 8, !dbg !9955
  br label %do.body, !dbg !9955

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9956

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9955
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !9955
  %4 = bitcast i8* %add.ptr to %struct.spi_nor_erase_command*, !dbg !9955
  store %struct.spi_nor_erase_command* %4, %struct.spi_nor_erase_command** %tmp, align 8, !dbg !9956
  %5 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %tmp, align 8, !dbg !9955
  store %struct.spi_nor_erase_command* %5, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9958
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !9959, metadata !DIExpression()), !dbg !9961
  %6 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9961
  %list = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %6, i32 0, i32 0, !dbg !9961
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !9961
  %7 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !9961
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !9961
  store i8* %8, i8** %__mptr2, align 8, !dbg !9961
  br label %do.body4, !dbg !9961

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !9962

do.end5:                                          ; preds = %do.body4
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !9961
  %add.ptr7 = getelementptr i8, i8* %9, i64 0, !dbg !9961
  %10 = bitcast i8* %add.ptr7 to %struct.spi_nor_erase_command*, !dbg !9961
  store %struct.spi_nor_erase_command* %10, %struct.spi_nor_erase_command** %tmp6, align 8, !dbg !9962
  %11 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %tmp6, align 8, !dbg !9961
  store %struct.spi_nor_erase_command* %11, %struct.spi_nor_erase_command** %next, align 8, !dbg !9958
  br label %for.cond, !dbg !9958

for.cond:                                         ; preds = %do.end14, %do.end5
  %12 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9964
  %list8 = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %12, i32 0, i32 0, !dbg !9964
  %13 = load %struct.list_head*, %struct.list_head** %erase_list.addr, align 8, !dbg !9964
  %cmp = icmp eq %struct.list_head* %list8, %13, !dbg !9964
  %lnot = xor i1 %cmp, true, !dbg !9964
  br i1 %lnot, label %for.body, label %for.end, !dbg !9958

for.body:                                         ; preds = %for.cond
  %14 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9966
  %list9 = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %14, i32 0, i32 0, !dbg !9968
  call void @list_del(%struct.list_head* %list9) #9, !dbg !9969
  %15 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9970
  %16 = bitcast %struct.spi_nor_erase_command* %15 to i8*, !dbg !9970
  call void @kfree(i8* %16) #9, !dbg !9971
  br label %for.inc, !dbg !9972

for.inc:                                          ; preds = %for.body
  %17 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %next, align 8, !dbg !9964
  store %struct.spi_nor_erase_command* %17, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !9964
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !9973, metadata !DIExpression()), !dbg !9975
  %18 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %next, align 8, !dbg !9975
  %list11 = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %18, i32 0, i32 0, !dbg !9975
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %list11, i32 0, i32 0, !dbg !9975
  %19 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !9975
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !9975
  store i8* %20, i8** %__mptr10, align 8, !dbg !9975
  br label %do.body13, !dbg !9975

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !9976

do.end14:                                         ; preds = %do.body13
  %21 = load i8*, i8** %__mptr10, align 8, !dbg !9975
  %add.ptr16 = getelementptr i8, i8* %21, i64 0, !dbg !9975
  %22 = bitcast i8* %add.ptr16 to %struct.spi_nor_erase_command*, !dbg !9975
  store %struct.spi_nor_erase_command* %22, %struct.spi_nor_erase_command** %tmp15, align 8, !dbg !9976
  %23 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %tmp15, align 8, !dbg !9975
  store %struct.spi_nor_erase_command* %23, %struct.spi_nor_erase_command** %next, align 8, !dbg !9964
  br label %for.cond, !dbg !9964, !llvm.loop !9978

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_nor_erase_region* @spi_nor_find_erase_region(%struct.spi_nor_erase_map* %map, i64 %addr) #0 !dbg !9981 {
entry:
  %retval = alloca %struct.spi_nor_erase_region*, align 8
  %map.addr = alloca %struct.spi_nor_erase_map*, align 8
  %addr.addr = alloca i64, align 8
  %region = alloca %struct.spi_nor_erase_region*, align 8
  %region_start = alloca i64, align 8
  %region_end = alloca i64, align 8
  store %struct.spi_nor_erase_map* %map, %struct.spi_nor_erase_map** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_map** %map.addr, metadata !9984, metadata !DIExpression()), !dbg !9985
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9986, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_region** %region, metadata !9988, metadata !DIExpression()), !dbg !9989
  %0 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !9990
  %regions = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %0, i32 0, i32 0, !dbg !9991
  %1 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %regions, align 8, !dbg !9991
  store %struct.spi_nor_erase_region* %1, %struct.spi_nor_erase_region** %region, align 8, !dbg !9989
  call void @llvm.dbg.declare(metadata i64* %region_start, metadata !9992, metadata !DIExpression()), !dbg !9993
  %2 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !9994
  %offset = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %2, i32 0, i32 0, !dbg !9995
  %3 = load i64, i64* %offset, align 8, !dbg !9995
  %and = and i64 %3, -64, !dbg !9996
  store i64 %and, i64* %region_start, align 8, !dbg !9993
  call void @llvm.dbg.declare(metadata i64* %region_end, metadata !9997, metadata !DIExpression()), !dbg !9998
  %4 = load i64, i64* %region_start, align 8, !dbg !9999
  %5 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !10000
  %size = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %5, i32 0, i32 1, !dbg !10001
  %6 = load i64, i64* %size, align 8, !dbg !10001
  %add = add i64 %4, %6, !dbg !10002
  store i64 %add, i64* %region_end, align 8, !dbg !9998
  br label %while.cond, !dbg !10003

while.cond:                                       ; preds = %if.end, %entry
  %7 = load i64, i64* %addr.addr, align 8, !dbg !10004
  %8 = load i64, i64* %region_start, align 8, !dbg !10005
  %cmp = icmp ult i64 %7, %8, !dbg !10006
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10007

lor.rhs:                                          ; preds = %while.cond
  %9 = load i64, i64* %addr.addr, align 8, !dbg !10008
  %10 = load i64, i64* %region_end, align 8, !dbg !10009
  %cmp1 = icmp uge i64 %9, %10, !dbg !10010
  br label %lor.end, !dbg !10007

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %11 = phi i1 [ true, %while.cond ], [ %cmp1, %lor.rhs ]
  br i1 %11, label %while.body, label %while.end, !dbg !10003

while.body:                                       ; preds = %lor.end
  %12 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !10011
  %call = call %struct.spi_nor_erase_region* @spi_nor_region_next(%struct.spi_nor_erase_region* %12) #9, !dbg !10013
  store %struct.spi_nor_erase_region* %call, %struct.spi_nor_erase_region** %region, align 8, !dbg !10014
  %13 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !10015
  %tobool = icmp ne %struct.spi_nor_erase_region* %13, null, !dbg !10015
  br i1 %tobool, label %if.end, label %if.then, !dbg !10017

if.then:                                          ; preds = %while.body
  %call2 = call i8* @ERR_PTR(i64 -22) #9, !dbg !10018
  %14 = bitcast i8* %call2 to %struct.spi_nor_erase_region*, !dbg !10018
  store %struct.spi_nor_erase_region* %14, %struct.spi_nor_erase_region** %retval, align 8, !dbg !10019
  br label %return, !dbg !10019

if.end:                                           ; preds = %while.body
  %15 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !10020
  %offset3 = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %15, i32 0, i32 0, !dbg !10021
  %16 = load i64, i64* %offset3, align 8, !dbg !10021
  %and4 = and i64 %16, -64, !dbg !10022
  store i64 %and4, i64* %region_start, align 8, !dbg !10023
  %17 = load i64, i64* %region_start, align 8, !dbg !10024
  %18 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !10025
  %size5 = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %18, i32 0, i32 1, !dbg !10026
  %19 = load i64, i64* %size5, align 8, !dbg !10026
  %add6 = add i64 %17, %19, !dbg !10027
  store i64 %add6, i64* %region_end, align 8, !dbg !10028
  br label %while.cond, !dbg !10003, !llvm.loop !10029

while.end:                                        ; preds = %lor.end
  %20 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region, align 8, !dbg !10031
  store %struct.spi_nor_erase_region* %20, %struct.spi_nor_erase_region** %retval, align 8, !dbg !10032
  br label %return, !dbg !10032

return:                                           ; preds = %while.end, %if.then
  %21 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %retval, align 8, !dbg !10033
  ret %struct.spi_nor_erase_region* %21, !dbg !10033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_nor_region_end(%struct.spi_nor_erase_region* %region) #0 !dbg !10034 {
entry:
  %region.addr = alloca %struct.spi_nor_erase_region*, align 8
  store %struct.spi_nor_erase_region* %region, %struct.spi_nor_erase_region** %region.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_region** %region.addr, metadata !10035, metadata !DIExpression()), !dbg !10036
  %0 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region.addr, align 8, !dbg !10037
  %offset = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %0, i32 0, i32 0, !dbg !10038
  %1 = load i64, i64* %offset, align 8, !dbg !10038
  %and = and i64 %1, -64, !dbg !10039
  %2 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region.addr, align 8, !dbg !10040
  %size = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %2, i32 0, i32 1, !dbg !10041
  %3 = load i64, i64* %size, align 8, !dbg !10041
  %add = add i64 %and, %3, !dbg !10042
  ret i64 %add, !dbg !10043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_nor_erase_type* @spi_nor_find_best_erase_type(%struct.spi_nor_erase_map* %map, %struct.spi_nor_erase_region* %region, i64 %addr, i32 %len) #0 !dbg !10044 {
entry:
  %retval = alloca %struct.spi_nor_erase_type*, align 8
  %map.addr = alloca %struct.spi_nor_erase_map*, align 8
  %region.addr = alloca %struct.spi_nor_erase_region*, align 8
  %addr.addr = alloca i64, align 8
  %len.addr = alloca i32, align 4
  %erase = alloca %struct.spi_nor_erase_type*, align 8
  %rem = alloca i32, align 4
  %i = alloca i32, align 4
  %erase_mask = alloca i8, align 1
  store %struct.spi_nor_erase_map* %map, %struct.spi_nor_erase_map** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_map** %map.addr, metadata !10047, metadata !DIExpression()), !dbg !10048
  store %struct.spi_nor_erase_region* %region, %struct.spi_nor_erase_region** %region.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_region** %region.addr, metadata !10049, metadata !DIExpression()), !dbg !10050
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !10051, metadata !DIExpression()), !dbg !10052
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !10053, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_type** %erase, metadata !10055, metadata !DIExpression()), !dbg !10056
  call void @llvm.dbg.declare(metadata i32* %rem, metadata !10057, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10059, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.declare(metadata i8* %erase_mask, metadata !10061, metadata !DIExpression()), !dbg !10062
  %0 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region.addr, align 8, !dbg !10063
  %offset = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %0, i32 0, i32 0, !dbg !10064
  %1 = load i64, i64* %offset, align 8, !dbg !10064
  %and = and i64 %1, 15, !dbg !10065
  %conv = trunc i64 %and to i8, !dbg !10063
  store i8 %conv, i8* %erase_mask, align 1, !dbg !10062
  store i32 3, i32* %i, align 4, !dbg !10066
  br label %for.cond, !dbg !10068

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10069
  %cmp = icmp sge i32 %2, 0, !dbg !10071
  br i1 %cmp, label %for.body, label %for.end, !dbg !10072

for.body:                                         ; preds = %for.cond
  %3 = load i8, i8* %erase_mask, align 1, !dbg !10073
  %conv2 = zext i8 %3 to i64, !dbg !10073
  %4 = load i32, i32* %i, align 4, !dbg !10076
  %sh_prom = zext i32 %4 to i64, !dbg !10076
  %shl = shl i64 1, %sh_prom, !dbg !10076
  %and3 = and i64 %conv2, %shl, !dbg !10077
  %tobool = icmp ne i64 %and3, 0, !dbg !10077
  br i1 %tobool, label %if.end, label %if.then, !dbg !10078

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !10079

if.end:                                           ; preds = %for.body
  %5 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map.addr, align 8, !dbg !10080
  %erase_type = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %5, i32 0, i32 2, !dbg !10081
  %6 = load i32, i32* %i, align 4, !dbg !10082
  %idxprom = sext i32 %6 to i64, !dbg !10080
  %arrayidx = getelementptr [4 x %struct.spi_nor_erase_type], [4 x %struct.spi_nor_erase_type]* %erase_type, i64 0, i64 %idxprom, !dbg !10080
  store %struct.spi_nor_erase_type* %arrayidx, %struct.spi_nor_erase_type** %erase, align 8, !dbg !10083
  %7 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !10084
  %size = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %7, i32 0, i32 0, !dbg !10086
  %8 = load i32, i32* %size, align 4, !dbg !10086
  %9 = load i32, i32* %len.addr, align 4, !dbg !10087
  %cmp4 = icmp ugt i32 %8, %9, !dbg !10088
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !10089

if.then6:                                         ; preds = %if.end
  br label %for.inc, !dbg !10090

if.end7:                                          ; preds = %if.end
  %10 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region.addr, align 8, !dbg !10091
  %offset8 = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %10, i32 0, i32 0, !dbg !10093
  %11 = load i64, i64* %offset8, align 8, !dbg !10093
  %and9 = and i64 %11, 32, !dbg !10094
  %tobool10 = icmp ne i64 %and9, 0, !dbg !10094
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !10095

if.then11:                                        ; preds = %if.end7
  %12 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !10096
  store %struct.spi_nor_erase_type* %12, %struct.spi_nor_erase_type** %retval, align 8, !dbg !10097
  br label %return, !dbg !10097

if.end12:                                         ; preds = %if.end7
  %13 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !10098
  %14 = load i64, i64* %addr.addr, align 8, !dbg !10099
  %call = call i64 @spi_nor_div_by_erase_size(%struct.spi_nor_erase_type* %13, i64 %14, i32* %rem) #9, !dbg !10100
  %15 = load i32, i32* %rem, align 4, !dbg !10101
  %tobool13 = icmp ne i32 %15, 0, !dbg !10101
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !10103

if.then14:                                        ; preds = %if.end12
  br label %for.inc, !dbg !10104

if.else:                                          ; preds = %if.end12
  %16 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !10105
  store %struct.spi_nor_erase_type* %16, %struct.spi_nor_erase_type** %retval, align 8, !dbg !10106
  br label %return, !dbg !10106

for.inc:                                          ; preds = %if.then14, %if.then6, %if.then
  %17 = load i32, i32* %i, align 4, !dbg !10107
  %dec = add i32 %17, -1, !dbg !10107
  store i32 %dec, i32* %i, align 4, !dbg !10107
  br label %for.cond, !dbg !10108, !llvm.loop !10109

for.end:                                          ; preds = %for.cond
  store %struct.spi_nor_erase_type* null, %struct.spi_nor_erase_type** %retval, align 8, !dbg !10111
  br label %return, !dbg !10111

return:                                           ; preds = %for.end, %if.else, %if.then11
  %18 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %retval, align 8, !dbg !10112
  ret %struct.spi_nor_erase_type* %18, !dbg !10112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_nor_erase_command* @spi_nor_init_erase_cmd(%struct.spi_nor_erase_region* %region, %struct.spi_nor_erase_type* %erase) #0 !dbg !10113 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !10116, metadata !DIExpression()), !dbg !10120
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !10128, metadata !DIExpression()), !dbg !10129
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !10130, metadata !DIExpression()), !dbg !10131
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !10132, metadata !DIExpression()), !dbg !10133
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !10134, metadata !DIExpression()), !dbg !10138
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !10140, metadata !DIExpression()), !dbg !10144
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !10146, metadata !DIExpression()), !dbg !10150
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !10155, metadata !DIExpression()), !dbg !10156
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !10157, metadata !DIExpression()), !dbg !10158
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10159, metadata !DIExpression()), !dbg !10160
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !10161, metadata !DIExpression()), !dbg !10162
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !10163, metadata !DIExpression()), !dbg !10164
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10165, metadata !DIExpression()), !dbg !10166
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !10167, metadata !DIExpression()), !dbg !10168
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !10169, metadata !DIExpression()), !dbg !10170
  %retval = alloca %struct.spi_nor_erase_command*, align 8
  %region.addr = alloca %struct.spi_nor_erase_region*, align 8
  %erase.addr = alloca %struct.spi_nor_erase_type*, align 8
  %cmd = alloca %struct.spi_nor_erase_command*, align 8
  store %struct.spi_nor_erase_region* %region, %struct.spi_nor_erase_region** %region.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_region** %region.addr, metadata !10171, metadata !DIExpression()), !dbg !10172
  store %struct.spi_nor_erase_type* %erase, %struct.spi_nor_erase_type** %erase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_type** %erase.addr, metadata !10173, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_command** %cmd, metadata !10175, metadata !DIExpression()), !dbg !10176
  store i64 32, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !10177
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #13, !dbg !10178
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !10179

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !10180
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !10181
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10182

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !10183
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !10184
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !10185
  %call.i.i = call i32 @get_order(i64 %5) #14, !dbg !10186
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10164
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !10187
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10188
  %8 = load i32, i32* %order.i.i, align 4, !dbg !10189
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10190
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10191
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10192
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #15, !dbg !10193
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10193
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10193
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10193
  call void @llvm.assume(i1 %maskcond.i.i.i) #13, !dbg !10193
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10194
  br label %kmalloc.exit, !dbg !10194

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !10195
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10196
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !10196
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10198

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10199
  br label %kmalloc_index.exit.i, !dbg !10199

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10200
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !10202
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10203

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10204
  br label %kmalloc_index.exit.i, !dbg !10204

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10205
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !10207
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10208

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10209
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !10210
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10211

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10212
  br label %kmalloc_index.exit.i, !dbg !10212

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10213
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !10215
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10216

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10217
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !10218
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10219

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10220
  br label %kmalloc_index.exit.i, !dbg !10220

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10221
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !10223
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10224

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10225
  br label %kmalloc_index.exit.i, !dbg !10225

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10226
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !10228
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10229

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10230
  br label %kmalloc_index.exit.i, !dbg !10230

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10231
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !10233
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10234

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10235
  br label %kmalloc_index.exit.i, !dbg !10235

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10236
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !10238
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10239

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10240
  br label %kmalloc_index.exit.i, !dbg !10240

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10241
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !10243
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10244

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10245
  br label %kmalloc_index.exit.i, !dbg !10245

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10246
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !10248
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10249

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10250
  br label %kmalloc_index.exit.i, !dbg !10250

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10251
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !10253
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10254

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10255
  br label %kmalloc_index.exit.i, !dbg !10255

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10256
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !10258
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10259

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10260
  br label %kmalloc_index.exit.i, !dbg !10260

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10261
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !10263
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10264

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10265
  br label %kmalloc_index.exit.i, !dbg !10265

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10266
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !10268
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10269

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10270
  br label %kmalloc_index.exit.i, !dbg !10270

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10271
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !10273
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10274

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10275
  br label %kmalloc_index.exit.i, !dbg !10275

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10276
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !10278
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10279

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10280
  br label %kmalloc_index.exit.i, !dbg !10280

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10281
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !10283
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10284

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10285
  br label %kmalloc_index.exit.i, !dbg !10285

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10286
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !10288
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10289

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10290
  br label %kmalloc_index.exit.i, !dbg !10290

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10291
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !10293
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10294

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10295
  br label %kmalloc_index.exit.i, !dbg !10295

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10296
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !10298
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10299

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10300
  br label %kmalloc_index.exit.i, !dbg !10300

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10301
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !10303
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10304

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10305
  br label %kmalloc_index.exit.i, !dbg !10305

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10306
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !10308
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10309

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10310
  br label %kmalloc_index.exit.i, !dbg !10310

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10311
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !10313
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10314

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10315
  br label %kmalloc_index.exit.i, !dbg !10315

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10316
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !10318
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10319

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10320
  br label %kmalloc_index.exit.i, !dbg !10320

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10321
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !10323
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10324

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10325
  br label %kmalloc_index.exit.i, !dbg !10325

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10326
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !10328
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10329

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10330
  br label %kmalloc_index.exit.i, !dbg !10330

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10331
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !10333
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10334

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10335
  br label %kmalloc_index.exit.i, !dbg !10335

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10336
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !10338
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10339

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10340
  br label %kmalloc_index.exit.i, !dbg !10340

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i32 382, i32 0, i64 12) #13, !dbg !10341, !srcloc !10344
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #13, !dbg !10345, !srcloc !10348
  unreachable, !dbg !10349

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !10350
  store i32 %43, i32* %index.i, align 4, !dbg !10351
  %44 = load i32, i32* %index.i, align 4, !dbg !10352
  %tobool.i = icmp ne i32 %44, 0, !dbg !10352
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10354

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10355
  br label %kmalloc.exit, !dbg !10355

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !10356
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10357
  %and.i.i = and i32 %46, 17, !dbg !10357
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10357
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10357
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10357
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10357
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10359

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10360
  br label %kmalloc_type.exit.i, !dbg !10360

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10361
  %and2.i.i = and i32 %47, 1, !dbg !10362
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10361
  %48 = zext i1 %tobool3.i.i to i64, !dbg !10361
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10361
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10363
  br label %kmalloc_type.exit.i, !dbg !10363

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !10364
  %idxprom.i = zext i32 %49 to i64, !dbg !10365
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10365
  %50 = load i32, i32* %index.i, align 4, !dbg !10366
  %idxprom6.i = zext i32 %50 to i64, !dbg !10365
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10365
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10365
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !10367
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !10368
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10369
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10370
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #15, !dbg !10371
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10371
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10371
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10371
  call void @llvm.assume(i1 %maskcond.i.i) #13, !dbg !10371
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10133
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10372
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !10373
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10374
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10375
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #15, !dbg !10376
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10377
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !10378
  store i8* %60, i8** %retval.i, align 8, !dbg !10379
  br label %kmalloc.exit, !dbg !10379

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !10380
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !10381
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #15, !dbg !10382
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10382
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10382
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10382
  call void @llvm.assume(i1 %maskcond.i) #13, !dbg !10382
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10383
  br label %kmalloc.exit, !dbg !10383

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !10384
  %64 = bitcast i8* %63 to %struct.spi_nor_erase_command*, !dbg !10385
  store %struct.spi_nor_erase_command* %64, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !10386
  %65 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !10387
  %tobool = icmp ne %struct.spi_nor_erase_command* %65, null, !dbg !10387
  br i1 %tobool, label %if.end, label %if.then, !dbg !10389

if.then:                                          ; preds = %kmalloc.exit
  %call1 = call i8* @ERR_PTR(i64 -12) #9, !dbg !10390
  %66 = bitcast i8* %call1 to %struct.spi_nor_erase_command*, !dbg !10390
  store %struct.spi_nor_erase_command* %66, %struct.spi_nor_erase_command** %retval, align 8, !dbg !10391
  br label %return, !dbg !10391

if.end:                                           ; preds = %kmalloc.exit
  %67 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !10392
  %list = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %67, i32 0, i32 0, !dbg !10393
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #9, !dbg !10394
  %68 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase.addr, align 8, !dbg !10395
  %opcode = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %68, i32 0, i32 3, !dbg !10396
  %69 = load i8, i8* %opcode, align 4, !dbg !10396
  %70 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !10397
  %opcode2 = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %70, i32 0, i32 3, !dbg !10398
  store i8 %69, i8* %opcode2, align 8, !dbg !10399
  %71 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !10400
  %count = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %71, i32 0, i32 1, !dbg !10401
  store i32 1, i32* %count, align 8, !dbg !10402
  %72 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region.addr, align 8, !dbg !10403
  %offset = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %72, i32 0, i32 0, !dbg !10405
  %73 = load i64, i64* %offset, align 8, !dbg !10405
  %and = and i64 %73, 32, !dbg !10406
  %tobool3 = icmp ne i64 %and, 0, !dbg !10406
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !10407

if.then4:                                         ; preds = %if.end
  %74 = load %struct.spi_nor_erase_region*, %struct.spi_nor_erase_region** %region.addr, align 8, !dbg !10408
  %size = getelementptr inbounds %struct.spi_nor_erase_region, %struct.spi_nor_erase_region* %74, i32 0, i32 1, !dbg !10409
  %75 = load i64, i64* %size, align 8, !dbg !10409
  %conv = trunc i64 %75 to i32, !dbg !10408
  %76 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !10410
  %size5 = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %76, i32 0, i32 2, !dbg !10411
  store i32 %conv, i32* %size5, align 4, !dbg !10412
  br label %if.end8, !dbg !10410

if.else:                                          ; preds = %if.end
  %77 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase.addr, align 8, !dbg !10413
  %size6 = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %77, i32 0, i32 0, !dbg !10414
  %78 = load i32, i32* %size6, align 4, !dbg !10414
  %79 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !10415
  %size7 = getelementptr inbounds %struct.spi_nor_erase_command, %struct.spi_nor_erase_command* %79, i32 0, i32 2, !dbg !10416
  store i32 %78, i32* %size7, align 4, !dbg !10417
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then4
  %80 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %cmd, align 8, !dbg !10418
  store %struct.spi_nor_erase_command* %80, %struct.spi_nor_erase_command** %retval, align 8, !dbg !10419
  br label %return, !dbg !10419

return:                                           ; preds = %if.end8, %if.then
  %81 = load %struct.spi_nor_erase_command*, %struct.spi_nor_erase_command** %retval, align 8, !dbg !10420
  ret %struct.spi_nor_erase_command* %81, !dbg !10420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !10421 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10424, metadata !DIExpression()), !dbg !10425
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10426, metadata !DIExpression()), !dbg !10427
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10428
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10429
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10430
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10430
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10431
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #9, !dbg !10432
  ret void, !dbg !10433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_nor_div_by_erase_size(%struct.spi_nor_erase_type* %erase, i64 %dividend, i32* %remainder) #0 !dbg !10434 {
entry:
  %erase.addr = alloca %struct.spi_nor_erase_type*, align 8
  %dividend.addr = alloca i64, align 8
  %remainder.addr = alloca i32*, align 8
  store %struct.spi_nor_erase_type* %erase, %struct.spi_nor_erase_type** %erase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_type** %erase.addr, metadata !10437, metadata !DIExpression()), !dbg !10438
  store i64 %dividend, i64* %dividend.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dividend.addr, metadata !10439, metadata !DIExpression()), !dbg !10440
  store i32* %remainder, i32** %remainder.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %remainder.addr, metadata !10441, metadata !DIExpression()), !dbg !10442
  %0 = load i64, i64* %dividend.addr, align 8, !dbg !10443
  %conv = trunc i64 %0 to i32, !dbg !10444
  %1 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase.addr, align 8, !dbg !10445
  %size_mask = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %1, i32 0, i32 2, !dbg !10446
  %2 = load i32, i32* %size_mask, align 4, !dbg !10446
  %and = and i32 %conv, %2, !dbg !10447
  %3 = load i32*, i32** %remainder.addr, align 8, !dbg !10448
  store i32 %and, i32* %3, align 4, !dbg !10449
  %4 = load i64, i64* %dividend.addr, align 8, !dbg !10450
  %5 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase.addr, align 8, !dbg !10451
  %size_shift = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %5, i32 0, i32 1, !dbg !10452
  %6 = load i32, i32* %size_shift, align 4, !dbg !10452
  %sh_prom = zext i32 %6 to i64, !dbg !10453
  %shr = lshr i64 %4, %sh_prom, !dbg !10453
  ret i64 %shr, !dbg !10454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !10455 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !10456, metadata !DIExpression()), !dbg !10457
  br label %do.body, !dbg !10458

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10459

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !10461

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !10459

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10463
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10463
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !10463
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !10463
  br label %do.end3, !dbg !10463

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !10459

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10465
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10466
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !10467
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !10468
  ret void, !dbg !10469
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !10470 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9266, metadata !DIExpression()), !dbg !10474
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9272, metadata !DIExpression()), !dbg !10476
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10477, metadata !DIExpression()), !dbg !10478
  %0 = load i64, i64* %size.addr, align 8, !dbg !10479
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !10481
  br i1 %1, label %if.then, label %if.end447, !dbg !10482

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !10483
  %tobool = icmp ne i64 %2, 0, !dbg !10483
  br i1 %tobool, label %if.end, label %if.then1, !dbg !10486

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !10487
  br label %return, !dbg !10487

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !10488
  %cmp = icmp ult i64 %3, 4096, !dbg !10490
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10491

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10492
  br label %return, !dbg !10492

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub = sub i64 %4, 1, !dbg !10493
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !10493
  br i1 %5, label %cond.true, label %cond.false442, !dbg !10493

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub4 = sub i64 %6, 1, !dbg !10493
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !10493
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !10493

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub6 = sub i64 %8, 1, !dbg !10493
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !10493
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !10493

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !10493

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub9 = sub i64 %9, 1, !dbg !10493
  %and = and i64 %sub9, -9223372036854775808, !dbg !10493
  %tobool10 = icmp ne i64 %and, 0, !dbg !10493
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !10493

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !10493

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub13 = sub i64 %10, 1, !dbg !10493
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !10493
  %tobool15 = icmp ne i64 %and14, 0, !dbg !10493
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !10493

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !10493

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub18 = sub i64 %11, 1, !dbg !10493
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !10493
  %tobool20 = icmp ne i64 %and19, 0, !dbg !10493
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !10493

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !10493

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub23 = sub i64 %12, 1, !dbg !10493
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !10493
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10493
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !10493

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !10493

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub28 = sub i64 %13, 1, !dbg !10493
  %and29 = and i64 %sub28, 576460752303423488, !dbg !10493
  %tobool30 = icmp ne i64 %and29, 0, !dbg !10493
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !10493

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !10493

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub33 = sub i64 %14, 1, !dbg !10493
  %and34 = and i64 %sub33, 288230376151711744, !dbg !10493
  %tobool35 = icmp ne i64 %and34, 0, !dbg !10493
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !10493

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !10493

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub38 = sub i64 %15, 1, !dbg !10493
  %and39 = and i64 %sub38, 144115188075855872, !dbg !10493
  %tobool40 = icmp ne i64 %and39, 0, !dbg !10493
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !10493

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !10493

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub43 = sub i64 %16, 1, !dbg !10493
  %and44 = and i64 %sub43, 72057594037927936, !dbg !10493
  %tobool45 = icmp ne i64 %and44, 0, !dbg !10493
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !10493

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !10493

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub48 = sub i64 %17, 1, !dbg !10493
  %and49 = and i64 %sub48, 36028797018963968, !dbg !10493
  %tobool50 = icmp ne i64 %and49, 0, !dbg !10493
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !10493

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !10493

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub53 = sub i64 %18, 1, !dbg !10493
  %and54 = and i64 %sub53, 18014398509481984, !dbg !10493
  %tobool55 = icmp ne i64 %and54, 0, !dbg !10493
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !10493

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !10493

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub58 = sub i64 %19, 1, !dbg !10493
  %and59 = and i64 %sub58, 9007199254740992, !dbg !10493
  %tobool60 = icmp ne i64 %and59, 0, !dbg !10493
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !10493

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !10493

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub63 = sub i64 %20, 1, !dbg !10493
  %and64 = and i64 %sub63, 4503599627370496, !dbg !10493
  %tobool65 = icmp ne i64 %and64, 0, !dbg !10493
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !10493

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !10493

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub68 = sub i64 %21, 1, !dbg !10493
  %and69 = and i64 %sub68, 2251799813685248, !dbg !10493
  %tobool70 = icmp ne i64 %and69, 0, !dbg !10493
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !10493

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !10493

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub73 = sub i64 %22, 1, !dbg !10493
  %and74 = and i64 %sub73, 1125899906842624, !dbg !10493
  %tobool75 = icmp ne i64 %and74, 0, !dbg !10493
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !10493

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !10493

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub78 = sub i64 %23, 1, !dbg !10493
  %and79 = and i64 %sub78, 562949953421312, !dbg !10493
  %tobool80 = icmp ne i64 %and79, 0, !dbg !10493
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !10493

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !10493

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub83 = sub i64 %24, 1, !dbg !10493
  %and84 = and i64 %sub83, 281474976710656, !dbg !10493
  %tobool85 = icmp ne i64 %and84, 0, !dbg !10493
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !10493

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !10493

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub88 = sub i64 %25, 1, !dbg !10493
  %and89 = and i64 %sub88, 140737488355328, !dbg !10493
  %tobool90 = icmp ne i64 %and89, 0, !dbg !10493
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !10493

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !10493

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub93 = sub i64 %26, 1, !dbg !10493
  %and94 = and i64 %sub93, 70368744177664, !dbg !10493
  %tobool95 = icmp ne i64 %and94, 0, !dbg !10493
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !10493

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !10493

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub98 = sub i64 %27, 1, !dbg !10493
  %and99 = and i64 %sub98, 35184372088832, !dbg !10493
  %tobool100 = icmp ne i64 %and99, 0, !dbg !10493
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !10493

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !10493

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub103 = sub i64 %28, 1, !dbg !10493
  %and104 = and i64 %sub103, 17592186044416, !dbg !10493
  %tobool105 = icmp ne i64 %and104, 0, !dbg !10493
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !10493

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !10493

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub108 = sub i64 %29, 1, !dbg !10493
  %and109 = and i64 %sub108, 8796093022208, !dbg !10493
  %tobool110 = icmp ne i64 %and109, 0, !dbg !10493
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !10493

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !10493

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub113 = sub i64 %30, 1, !dbg !10493
  %and114 = and i64 %sub113, 4398046511104, !dbg !10493
  %tobool115 = icmp ne i64 %and114, 0, !dbg !10493
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !10493

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !10493

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub118 = sub i64 %31, 1, !dbg !10493
  %and119 = and i64 %sub118, 2199023255552, !dbg !10493
  %tobool120 = icmp ne i64 %and119, 0, !dbg !10493
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !10493

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !10493

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub123 = sub i64 %32, 1, !dbg !10493
  %and124 = and i64 %sub123, 1099511627776, !dbg !10493
  %tobool125 = icmp ne i64 %and124, 0, !dbg !10493
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !10493

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !10493

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub128 = sub i64 %33, 1, !dbg !10493
  %and129 = and i64 %sub128, 549755813888, !dbg !10493
  %tobool130 = icmp ne i64 %and129, 0, !dbg !10493
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !10493

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !10493

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub133 = sub i64 %34, 1, !dbg !10493
  %and134 = and i64 %sub133, 274877906944, !dbg !10493
  %tobool135 = icmp ne i64 %and134, 0, !dbg !10493
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !10493

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !10493

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub138 = sub i64 %35, 1, !dbg !10493
  %and139 = and i64 %sub138, 137438953472, !dbg !10493
  %tobool140 = icmp ne i64 %and139, 0, !dbg !10493
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !10493

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !10493

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub143 = sub i64 %36, 1, !dbg !10493
  %and144 = and i64 %sub143, 68719476736, !dbg !10493
  %tobool145 = icmp ne i64 %and144, 0, !dbg !10493
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !10493

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !10493

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub148 = sub i64 %37, 1, !dbg !10493
  %and149 = and i64 %sub148, 34359738368, !dbg !10493
  %tobool150 = icmp ne i64 %and149, 0, !dbg !10493
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !10493

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !10493

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub153 = sub i64 %38, 1, !dbg !10493
  %and154 = and i64 %sub153, 17179869184, !dbg !10493
  %tobool155 = icmp ne i64 %and154, 0, !dbg !10493
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !10493

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !10493

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub158 = sub i64 %39, 1, !dbg !10493
  %and159 = and i64 %sub158, 8589934592, !dbg !10493
  %tobool160 = icmp ne i64 %and159, 0, !dbg !10493
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !10493

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !10493

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub163 = sub i64 %40, 1, !dbg !10493
  %and164 = and i64 %sub163, 4294967296, !dbg !10493
  %tobool165 = icmp ne i64 %and164, 0, !dbg !10493
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !10493

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !10493

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub168 = sub i64 %41, 1, !dbg !10493
  %and169 = and i64 %sub168, 2147483648, !dbg !10493
  %tobool170 = icmp ne i64 %and169, 0, !dbg !10493
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !10493

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !10493

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub173 = sub i64 %42, 1, !dbg !10493
  %and174 = and i64 %sub173, 1073741824, !dbg !10493
  %tobool175 = icmp ne i64 %and174, 0, !dbg !10493
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !10493

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !10493

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub178 = sub i64 %43, 1, !dbg !10493
  %and179 = and i64 %sub178, 536870912, !dbg !10493
  %tobool180 = icmp ne i64 %and179, 0, !dbg !10493
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !10493

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !10493

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub183 = sub i64 %44, 1, !dbg !10493
  %and184 = and i64 %sub183, 268435456, !dbg !10493
  %tobool185 = icmp ne i64 %and184, 0, !dbg !10493
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !10493

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !10493

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub188 = sub i64 %45, 1, !dbg !10493
  %and189 = and i64 %sub188, 134217728, !dbg !10493
  %tobool190 = icmp ne i64 %and189, 0, !dbg !10493
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !10493

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !10493

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub193 = sub i64 %46, 1, !dbg !10493
  %and194 = and i64 %sub193, 67108864, !dbg !10493
  %tobool195 = icmp ne i64 %and194, 0, !dbg !10493
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !10493

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !10493

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub198 = sub i64 %47, 1, !dbg !10493
  %and199 = and i64 %sub198, 33554432, !dbg !10493
  %tobool200 = icmp ne i64 %and199, 0, !dbg !10493
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !10493

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !10493

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub203 = sub i64 %48, 1, !dbg !10493
  %and204 = and i64 %sub203, 16777216, !dbg !10493
  %tobool205 = icmp ne i64 %and204, 0, !dbg !10493
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !10493

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !10493

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub208 = sub i64 %49, 1, !dbg !10493
  %and209 = and i64 %sub208, 8388608, !dbg !10493
  %tobool210 = icmp ne i64 %and209, 0, !dbg !10493
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !10493

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !10493

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub213 = sub i64 %50, 1, !dbg !10493
  %and214 = and i64 %sub213, 4194304, !dbg !10493
  %tobool215 = icmp ne i64 %and214, 0, !dbg !10493
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !10493

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !10493

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub218 = sub i64 %51, 1, !dbg !10493
  %and219 = and i64 %sub218, 2097152, !dbg !10493
  %tobool220 = icmp ne i64 %and219, 0, !dbg !10493
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !10493

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !10493

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub223 = sub i64 %52, 1, !dbg !10493
  %and224 = and i64 %sub223, 1048576, !dbg !10493
  %tobool225 = icmp ne i64 %and224, 0, !dbg !10493
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !10493

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !10493

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub228 = sub i64 %53, 1, !dbg !10493
  %and229 = and i64 %sub228, 524288, !dbg !10493
  %tobool230 = icmp ne i64 %and229, 0, !dbg !10493
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !10493

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !10493

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub233 = sub i64 %54, 1, !dbg !10493
  %and234 = and i64 %sub233, 262144, !dbg !10493
  %tobool235 = icmp ne i64 %and234, 0, !dbg !10493
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !10493

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !10493

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub238 = sub i64 %55, 1, !dbg !10493
  %and239 = and i64 %sub238, 131072, !dbg !10493
  %tobool240 = icmp ne i64 %and239, 0, !dbg !10493
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !10493

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !10493

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub243 = sub i64 %56, 1, !dbg !10493
  %and244 = and i64 %sub243, 65536, !dbg !10493
  %tobool245 = icmp ne i64 %and244, 0, !dbg !10493
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !10493

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !10493

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub248 = sub i64 %57, 1, !dbg !10493
  %and249 = and i64 %sub248, 32768, !dbg !10493
  %tobool250 = icmp ne i64 %and249, 0, !dbg !10493
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !10493

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !10493

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub253 = sub i64 %58, 1, !dbg !10493
  %and254 = and i64 %sub253, 16384, !dbg !10493
  %tobool255 = icmp ne i64 %and254, 0, !dbg !10493
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !10493

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !10493

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub258 = sub i64 %59, 1, !dbg !10493
  %and259 = and i64 %sub258, 8192, !dbg !10493
  %tobool260 = icmp ne i64 %and259, 0, !dbg !10493
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !10493

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !10493

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub263 = sub i64 %60, 1, !dbg !10493
  %and264 = and i64 %sub263, 4096, !dbg !10493
  %tobool265 = icmp ne i64 %and264, 0, !dbg !10493
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !10493

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !10493

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub268 = sub i64 %61, 1, !dbg !10493
  %and269 = and i64 %sub268, 2048, !dbg !10493
  %tobool270 = icmp ne i64 %and269, 0, !dbg !10493
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !10493

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !10493

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub273 = sub i64 %62, 1, !dbg !10493
  %and274 = and i64 %sub273, 1024, !dbg !10493
  %tobool275 = icmp ne i64 %and274, 0, !dbg !10493
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !10493

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !10493

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub278 = sub i64 %63, 1, !dbg !10493
  %and279 = and i64 %sub278, 512, !dbg !10493
  %tobool280 = icmp ne i64 %and279, 0, !dbg !10493
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !10493

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !10493

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub283 = sub i64 %64, 1, !dbg !10493
  %and284 = and i64 %sub283, 256, !dbg !10493
  %tobool285 = icmp ne i64 %and284, 0, !dbg !10493
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !10493

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !10493

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub288 = sub i64 %65, 1, !dbg !10493
  %and289 = and i64 %sub288, 128, !dbg !10493
  %tobool290 = icmp ne i64 %and289, 0, !dbg !10493
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !10493

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !10493

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub293 = sub i64 %66, 1, !dbg !10493
  %and294 = and i64 %sub293, 64, !dbg !10493
  %tobool295 = icmp ne i64 %and294, 0, !dbg !10493
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !10493

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !10493

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub298 = sub i64 %67, 1, !dbg !10493
  %and299 = and i64 %sub298, 32, !dbg !10493
  %tobool300 = icmp ne i64 %and299, 0, !dbg !10493
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !10493

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !10493

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub303 = sub i64 %68, 1, !dbg !10493
  %and304 = and i64 %sub303, 16, !dbg !10493
  %tobool305 = icmp ne i64 %and304, 0, !dbg !10493
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !10493

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !10493

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub308 = sub i64 %69, 1, !dbg !10493
  %and309 = and i64 %sub308, 8, !dbg !10493
  %tobool310 = icmp ne i64 %and309, 0, !dbg !10493
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !10493

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !10493

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub313 = sub i64 %70, 1, !dbg !10493
  %and314 = and i64 %sub313, 4, !dbg !10493
  %tobool315 = icmp ne i64 %and314, 0, !dbg !10493
  %71 = zext i1 %tobool315 to i64, !dbg !10493
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !10493
  br label %cond.end, !dbg !10493

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !10493
  br label %cond.end317, !dbg !10493

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !10493
  br label %cond.end319, !dbg !10493

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !10493
  br label %cond.end321, !dbg !10493

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !10493
  br label %cond.end323, !dbg !10493

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !10493
  br label %cond.end325, !dbg !10493

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !10493
  br label %cond.end327, !dbg !10493

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !10493
  br label %cond.end329, !dbg !10493

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !10493
  br label %cond.end331, !dbg !10493

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !10493
  br label %cond.end333, !dbg !10493

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !10493
  br label %cond.end335, !dbg !10493

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !10493
  br label %cond.end337, !dbg !10493

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !10493
  br label %cond.end339, !dbg !10493

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !10493
  br label %cond.end341, !dbg !10493

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !10493
  br label %cond.end343, !dbg !10493

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !10493
  br label %cond.end345, !dbg !10493

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !10493
  br label %cond.end347, !dbg !10493

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !10493
  br label %cond.end349, !dbg !10493

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !10493
  br label %cond.end351, !dbg !10493

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !10493
  br label %cond.end353, !dbg !10493

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !10493
  br label %cond.end355, !dbg !10493

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !10493
  br label %cond.end357, !dbg !10493

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !10493
  br label %cond.end359, !dbg !10493

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !10493
  br label %cond.end361, !dbg !10493

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !10493
  br label %cond.end363, !dbg !10493

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !10493
  br label %cond.end365, !dbg !10493

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !10493
  br label %cond.end367, !dbg !10493

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !10493
  br label %cond.end369, !dbg !10493

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !10493
  br label %cond.end371, !dbg !10493

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !10493
  br label %cond.end373, !dbg !10493

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !10493
  br label %cond.end375, !dbg !10493

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !10493
  br label %cond.end377, !dbg !10493

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !10493
  br label %cond.end379, !dbg !10493

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !10493
  br label %cond.end381, !dbg !10493

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !10493
  br label %cond.end383, !dbg !10493

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !10493
  br label %cond.end385, !dbg !10493

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !10493
  br label %cond.end387, !dbg !10493

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !10493
  br label %cond.end389, !dbg !10493

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !10493
  br label %cond.end391, !dbg !10493

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !10493
  br label %cond.end393, !dbg !10493

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !10493
  br label %cond.end395, !dbg !10493

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !10493
  br label %cond.end397, !dbg !10493

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !10493
  br label %cond.end399, !dbg !10493

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !10493
  br label %cond.end401, !dbg !10493

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !10493
  br label %cond.end403, !dbg !10493

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !10493
  br label %cond.end405, !dbg !10493

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !10493
  br label %cond.end407, !dbg !10493

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !10493
  br label %cond.end409, !dbg !10493

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !10493
  br label %cond.end411, !dbg !10493

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !10493
  br label %cond.end413, !dbg !10493

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !10493
  br label %cond.end415, !dbg !10493

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !10493
  br label %cond.end417, !dbg !10493

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !10493
  br label %cond.end419, !dbg !10493

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !10493
  br label %cond.end421, !dbg !10493

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !10493
  br label %cond.end423, !dbg !10493

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !10493
  br label %cond.end425, !dbg !10493

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !10493
  br label %cond.end427, !dbg !10493

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !10493
  br label %cond.end429, !dbg !10493

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !10493
  br label %cond.end431, !dbg !10493

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !10493
  br label %cond.end433, !dbg !10493

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !10493
  br label %cond.end435, !dbg !10493

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !10493
  br label %cond.end437, !dbg !10493

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !10493
  br label %cond.end440, !dbg !10493

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !10493

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !10493
  br label %cond.end444, !dbg !10493

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !10493
  %sub443 = sub i64 %72, 1, !dbg !10493
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !10493
  br label %cond.end444, !dbg !10493

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !10493
  %sub446 = sub i32 %cond445, 12, !dbg !10494
  %add = add i32 %sub446, 1, !dbg !10495
  store i32 %add, i32* %retval, align 4, !dbg !10496
  br label %return, !dbg !10496

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !10497
  %dec = add i64 %73, -1, !dbg !10497
  store i64 %dec, i64* %size.addr, align 8, !dbg !10497
  %74 = load i64, i64* %size.addr, align 8, !dbg !10498
  %shr = lshr i64 %74, 12, !dbg !10498
  store i64 %shr, i64* %size.addr, align 8, !dbg !10498
  %75 = load i64, i64* %size.addr, align 8, !dbg !10499
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10476
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !10500
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !10501
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #10, !dbg !10500, !srcloc !9279
  store i32 %78, i32* %bitpos.i, align 4, !dbg !10500
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !10502
  %add.i = add i32 %79, 1, !dbg !10503
  store i32 %add.i, i32* %retval, align 4, !dbg !10504
  br label %return, !dbg !10504

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !10505
  ret i32 %80, !dbg !10505
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !10506 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !10510, metadata !DIExpression()), !dbg !10511
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !10512, metadata !DIExpression()), !dbg !10513
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10514, metadata !DIExpression()), !dbg !10515
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10516, metadata !DIExpression()), !dbg !10517
  %0 = load i8*, i8** %object.addr, align 8, !dbg !10518
  ret i8* %0, !dbg !10519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10520 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10523, metadata !DIExpression()), !dbg !10524
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10525, metadata !DIExpression()), !dbg !10526
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10527, metadata !DIExpression()), !dbg !10528
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10529
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10531
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10532
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #9, !dbg !10533
  br i1 %call, label %if.end, label %if.then, !dbg !10534

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !10535

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10536
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10537
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !10538
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !10539
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10540
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10541
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !10542
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !10543
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10544
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10545
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !10546
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !10547
  br label %do.body, !dbg !10548

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !10549

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !10551

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !10549

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10553
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10553
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !10553
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !10553
  br label %do.end7, !dbg !10553

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !10549

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !10555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10556 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10559, metadata !DIExpression()), !dbg !10560
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10561, metadata !DIExpression()), !dbg !10562
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10563, metadata !DIExpression()), !dbg !10564
  ret i1 true, !dbg !10565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !10566 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10567, metadata !DIExpression()), !dbg !10568
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10569
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !10571
  br i1 %call, label %if.end, label %if.then, !dbg !10572

if.then:                                          ; preds = %entry
  br label %return, !dbg !10573

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10574
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10575
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10575
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10576
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !10577
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10577
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !10578
  br label %return, !dbg !10579

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10579
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !10580 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10583, metadata !DIExpression()), !dbg !10584
  ret i1 true, !dbg !10585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10586 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10587, metadata !DIExpression()), !dbg !10588
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10589, metadata !DIExpression()), !dbg !10590
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10591
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10592
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10593
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !10594
  br label %do.body, !dbg !10595

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !10596

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !10598

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !10596

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10600
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10600
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !10600
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !10600
  br label %do.end5, !dbg !10600

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !10596

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !10602
}

; Function Attrs: noredzone
declare dso_local %struct.property* @of_find_property(%struct.device_node*, i8*, i32*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_set_4byte_opcodes(%struct.spi_nor* %nor) #0 !dbg !10603 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %map = alloca %struct.spi_nor_erase_map*, align 8
  %erase = alloca %struct.spi_nor_erase_type*, align 8
  %i = alloca i32, align 4
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !10604, metadata !DIExpression()), !dbg !10605
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10606
  %read_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 11, !dbg !10607
  %1 = load i8, i8* %read_opcode, align 2, !dbg !10607
  %call = call zeroext i8 @spi_nor_convert_3to4_read(i8 zeroext %1) #9, !dbg !10608
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10609
  %read_opcode1 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 11, !dbg !10610
  store i8 %call, i8* %read_opcode1, align 2, !dbg !10611
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10612
  %program_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 13, !dbg !10613
  %4 = load i8, i8* %program_opcode, align 8, !dbg !10613
  %call2 = call zeroext i8 @spi_nor_convert_3to4_program(i8 zeroext %4) #9, !dbg !10614
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10615
  %program_opcode3 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 13, !dbg !10616
  store i8 %call2, i8* %program_opcode3, align 8, !dbg !10617
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10618
  %erase_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 10, !dbg !10619
  %7 = load i8, i8* %erase_opcode, align 1, !dbg !10619
  %call4 = call zeroext i8 @spi_nor_convert_3to4_erase(i8 zeroext %7) #9, !dbg !10620
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10621
  %erase_opcode5 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 10, !dbg !10622
  store i8 %call4, i8* %erase_opcode5, align 1, !dbg !10623
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10624
  %call6 = call zeroext i1 @spi_nor_has_uniform_erase(%struct.spi_nor* %9) #9, !dbg !10626
  br i1 %call6, label %if.end, label %if.then, !dbg !10627

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_map** %map, metadata !10628, metadata !DIExpression()), !dbg !10630
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10631
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %10, i32 0, i32 20, !dbg !10632
  %11 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !10632
  %erase_map = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %11, i32 0, i32 5, !dbg !10633
  store %struct.spi_nor_erase_map* %erase_map, %struct.spi_nor_erase_map** %map, align 8, !dbg !10630
  call void @llvm.dbg.declare(metadata %struct.spi_nor_erase_type** %erase, metadata !10634, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10636, metadata !DIExpression()), !dbg !10637
  store i32 0, i32* %i, align 4, !dbg !10638
  br label %for.cond, !dbg !10640

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %i, align 4, !dbg !10641
  %cmp = icmp slt i32 %12, 4, !dbg !10643
  br i1 %cmp, label %for.body, label %for.end, !dbg !10644

for.body:                                         ; preds = %for.cond
  %13 = load %struct.spi_nor_erase_map*, %struct.spi_nor_erase_map** %map, align 8, !dbg !10645
  %erase_type = getelementptr inbounds %struct.spi_nor_erase_map, %struct.spi_nor_erase_map* %13, i32 0, i32 2, !dbg !10647
  %14 = load i32, i32* %i, align 4, !dbg !10648
  %idxprom = sext i32 %14 to i64, !dbg !10645
  %arrayidx = getelementptr [4 x %struct.spi_nor_erase_type], [4 x %struct.spi_nor_erase_type]* %erase_type, i64 0, i64 %idxprom, !dbg !10645
  store %struct.spi_nor_erase_type* %arrayidx, %struct.spi_nor_erase_type** %erase, align 8, !dbg !10649
  %15 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !10650
  %opcode = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %15, i32 0, i32 3, !dbg !10651
  %16 = load i8, i8* %opcode, align 4, !dbg !10651
  %call7 = call zeroext i8 @spi_nor_convert_3to4_erase(i8 zeroext %16) #9, !dbg !10652
  %17 = load %struct.spi_nor_erase_type*, %struct.spi_nor_erase_type** %erase, align 8, !dbg !10653
  %opcode8 = getelementptr inbounds %struct.spi_nor_erase_type, %struct.spi_nor_erase_type* %17, i32 0, i32 3, !dbg !10654
  store i8 %call7, i8* %opcode8, align 4, !dbg !10655
  br label %for.inc, !dbg !10656

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !10657
  %inc = add i32 %18, 1, !dbg !10657
  store i32 %inc, i32* %i, align 4, !dbg !10657
  br label %for.cond, !dbg !10658, !llvm.loop !10659

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !10661

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !10662
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @spi_nor_convert_3to4_program(i8 zeroext %opcode) #0 !dbg !4661 {
entry:
  %opcode.addr = alloca i8, align 1
  store i8 %opcode, i8* %opcode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode.addr, metadata !10663, metadata !DIExpression()), !dbg !10664
  %0 = load i8, i8* %opcode.addr, align 1, !dbg !10665
  %call = call zeroext i8 @spi_nor_convert_opcode(i8 zeroext %0, [2 x i8]* getelementptr inbounds ([5 x [2 x i8]], [5 x [2 x i8]]* @spi_nor_convert_3to4_program.spi_nor_3to4_program, i64 0, i64 0), i64 5) #9, !dbg !10666
  ret i8 %call, !dbg !10667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @spi_nor_convert_3to4_erase(i8 zeroext %opcode) #0 !dbg !4667 {
entry:
  %opcode.addr = alloca i8, align 1
  store i8 %opcode, i8* %opcode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode.addr, metadata !10668, metadata !DIExpression()), !dbg !10669
  %0 = load i8, i8* %opcode.addr, align 1, !dbg !10670
  %call = call zeroext i8 @spi_nor_convert_opcode(i8 zeroext %0, [2 x i8]* getelementptr inbounds ([3 x [2 x i8]], [3 x [2 x i8]]* @spi_nor_convert_3to4_erase.spi_nor_3to4_erase, i64 0, i64 0), i64 3) #9, !dbg !10671
  ret i8 %call, !dbg !10672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_quad_enable(%struct.spi_nor* %nor) #0 !dbg !10673 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !10674, metadata !DIExpression()), !dbg !10675
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10676
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 20, !dbg !10678
  %1 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !10678
  %quad_enable = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %1, i32 0, i32 6, !dbg !10679
  %2 = load i32 (%struct.spi_nor*)*, i32 (%struct.spi_nor*)** %quad_enable, align 8, !dbg !10679
  %tobool = icmp ne i32 (%struct.spi_nor*)* %2, null, !dbg !10676
  br i1 %tobool, label %if.end, label %if.then, !dbg !10680

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10681
  br label %return, !dbg !10681

if.end:                                           ; preds = %entry
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10682
  %read_proto = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 14, !dbg !10684
  %4 = load i32, i32* %read_proto, align 4, !dbg !10684
  %call = call zeroext i8 @spi_nor_get_protocol_width(i32 %4) #9, !dbg !10685
  %conv = zext i8 %call to i32, !dbg !10685
  %cmp = icmp eq i32 %conv, 4, !dbg !10686
  br i1 %cmp, label %if.end7, label %lor.lhs.false, !dbg !10687

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10688
  %write_proto = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %5, i32 0, i32 15, !dbg !10689
  %6 = load i32, i32* %write_proto, align 8, !dbg !10689
  %call2 = call zeroext i8 @spi_nor_get_protocol_width(i32 %6) #9, !dbg !10690
  %conv3 = zext i8 %call2 to i32, !dbg !10690
  %cmp4 = icmp eq i32 %conv3, 4, !dbg !10691
  br i1 %cmp4, label %if.end7, label %if.then6, !dbg !10692

if.then6:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !10693
  br label %return, !dbg !10693

if.end7:                                          ; preds = %lor.lhs.false, %if.end
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10694
  %params8 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %7, i32 0, i32 20, !dbg !10695
  %8 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params8, align 8, !dbg !10695
  %quad_enable9 = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %8, i32 0, i32 6, !dbg !10696
  %9 = load i32 (%struct.spi_nor*)*, i32 (%struct.spi_nor*)** %quad_enable9, align 8, !dbg !10696
  %10 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10697
  %call10 = call i32 %9(%struct.spi_nor* %10) #9, !dbg !10694
  store i32 %call10, i32* %retval, align 4, !dbg !10698
  br label %return, !dbg !10698

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !10699
  ret i32 %11, !dbg !10699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_unlock_all(%struct.spi_nor* %nor) #0 !dbg !10700 {
entry:
  %retval = alloca i32, align 4
  %nor.addr = alloca %struct.spi_nor*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !10701, metadata !DIExpression()), !dbg !10702
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10703
  %flags = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 18, !dbg !10705
  %1 = load i32, i32* %flags, align 4, !dbg !10705
  %and = and i32 %1, 256, !dbg !10706
  %tobool = icmp ne i32 %and, 0, !dbg !10706
  br i1 %tobool, label %if.then, label %if.end, !dbg !10707

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10708
  %mtd = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 0, !dbg !10709
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10710
  %params = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 20, !dbg !10711
  %4 = load %struct.spi_nor_flash_parameter*, %struct.spi_nor_flash_parameter** %params, align 8, !dbg !10711
  %size = getelementptr inbounds %struct.spi_nor_flash_parameter, %struct.spi_nor_flash_parameter* %4, i32 0, i32 0, !dbg !10712
  %5 = load i64, i64* %size, align 8, !dbg !10712
  %call = call i32 @spi_nor_unlock(%struct.mtd_info* %mtd, i64 0, i64 %5) #9, !dbg !10713
  store i32 %call, i32* %retval, align 4, !dbg !10714
  br label %return, !dbg !10714

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10715
  br label %return, !dbg !10715

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !10716
  ret i32 %6, !dbg !10716
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @spi_nor_get_protocol_width(i32 %proto) #0 !dbg !10717 {
entry:
  %proto.addr = alloca i32, align 4
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !10718, metadata !DIExpression()), !dbg !10719
  %0 = load i32, i32* %proto.addr, align 4, !dbg !10720
  %call = call zeroext i8 @spi_nor_get_protocol_data_nbits(i32 %0) #9, !dbg !10721
  ret i8 %call, !dbg !10722
}

; Function Attrs: noredzone
declare dso_local i32 @spi_mem_driver_register_with_owner(%struct.spi_mem_driver*, %struct.module*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_probe(%struct.spi_mem* %spimem) #0 !dbg !10723 {
entry:
  %retval = alloca i32, align 4
  %spimem.addr = alloca %struct.spi_mem*, align 8
  %spi = alloca %struct.spi_device*, align 8
  %data = alloca %struct.flash_platform_data*, align 8
  %nor = alloca %struct.spi_nor*, align 8
  %hwcaps = alloca %struct.spi_nor_hwcaps, align 4
  %flash_name = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_mem* %spimem, %struct.spi_mem** %spimem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_mem** %spimem.addr, metadata !10724, metadata !DIExpression()), !dbg !10725
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !10726, metadata !DIExpression()), !dbg !10727
  %0 = load %struct.spi_mem*, %struct.spi_mem** %spimem.addr, align 8, !dbg !10728
  %spi1 = getelementptr inbounds %struct.spi_mem, %struct.spi_mem* %0, i32 0, i32 0, !dbg !10729
  %1 = load %struct.spi_device*, %struct.spi_device** %spi1, align 8, !dbg !10729
  store %struct.spi_device* %1, %struct.spi_device** %spi, align 8, !dbg !10727
  call void @llvm.dbg.declare(metadata %struct.flash_platform_data** %data, metadata !10730, metadata !DIExpression()), !dbg !10741
  %2 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !10742
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %2, i32 0, i32 0, !dbg !10743
  %call = call i8* @dev_get_platdata(%struct.device* %dev) #9, !dbg !10744
  %3 = bitcast i8* %call to %struct.flash_platform_data*, !dbg !10744
  store %struct.flash_platform_data* %3, %struct.flash_platform_data** %data, align 8, !dbg !10741
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor, metadata !10745, metadata !DIExpression()), !dbg !10746
  call void @llvm.dbg.declare(metadata %struct.spi_nor_hwcaps* %hwcaps, metadata !10747, metadata !DIExpression()), !dbg !10748
  %4 = bitcast %struct.spi_nor_hwcaps* %hwcaps to i8*, !dbg !10748
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 bitcast (%struct.spi_nor_hwcaps* @__const.spi_nor_probe.hwcaps to i8*), i64 4, i1 false), !dbg !10748
  call void @llvm.dbg.declare(metadata i8** %flash_name, metadata !10749, metadata !DIExpression()), !dbg !10750
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10751, metadata !DIExpression()), !dbg !10752
  %5 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !10753
  %dev2 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %5, i32 0, i32 0, !dbg !10754
  %call3 = call i8* @devm_kzalloc(%struct.device* %dev2, i64 1352, i32 3264) #9, !dbg !10755
  %6 = bitcast i8* %call3 to %struct.spi_nor*, !dbg !10755
  store %struct.spi_nor* %6, %struct.spi_nor** %nor, align 8, !dbg !10756
  %7 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10757
  %tobool = icmp ne %struct.spi_nor* %7, null, !dbg !10757
  br i1 %tobool, label %if.end, label %if.then, !dbg !10759

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10760
  br label %return, !dbg !10760

if.end:                                           ; preds = %entry
  %8 = load %struct.spi_mem*, %struct.spi_mem** %spimem.addr, align 8, !dbg !10761
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10762
  %spimem4 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 3, !dbg !10763
  store %struct.spi_mem* %8, %struct.spi_mem** %spimem4, align 8, !dbg !10764
  %10 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !10765
  %dev5 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %10, i32 0, i32 0, !dbg !10766
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10767
  %dev6 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %11, i32 0, i32 2, !dbg !10768
  store %struct.device* %dev5, %struct.device** %dev6, align 8, !dbg !10769
  %12 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10770
  %13 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !10771
  %dev7 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %13, i32 0, i32 0, !dbg !10772
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev7, i32 0, i32 23, !dbg !10773
  %14 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !10773
  call void @spi_nor_set_flash_node(%struct.spi_nor* %12, %struct.device_node* %14) #9, !dbg !10774
  %15 = load %struct.spi_mem*, %struct.spi_mem** %spimem.addr, align 8, !dbg !10775
  %16 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10776
  %17 = bitcast %struct.spi_nor* %16 to i8*, !dbg !10776
  call void @spi_mem_set_drvdata(%struct.spi_mem* %15, i8* %17) #9, !dbg !10777
  %18 = load %struct.flash_platform_data*, %struct.flash_platform_data** %data, align 8, !dbg !10778
  %tobool8 = icmp ne %struct.flash_platform_data* %18, null, !dbg !10778
  br i1 %tobool8, label %land.lhs.true, label %if.end13, !dbg !10780

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.flash_platform_data*, %struct.flash_platform_data** %data, align 8, !dbg !10781
  %name = getelementptr inbounds %struct.flash_platform_data, %struct.flash_platform_data* %19, i32 0, i32 0, !dbg !10782
  %20 = load i8*, i8** %name, align 8, !dbg !10782
  %tobool9 = icmp ne i8* %20, null, !dbg !10781
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !10783

if.then10:                                        ; preds = %land.lhs.true
  %21 = load %struct.flash_platform_data*, %struct.flash_platform_data** %data, align 8, !dbg !10784
  %name11 = getelementptr inbounds %struct.flash_platform_data, %struct.flash_platform_data* %21, i32 0, i32 0, !dbg !10785
  %22 = load i8*, i8** %name11, align 8, !dbg !10785
  %23 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10786
  %mtd = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %23, i32 0, i32 0, !dbg !10787
  %name12 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %mtd, i32 0, i32 13, !dbg !10788
  store i8* %22, i8** %name12, align 8, !dbg !10789
  br label %if.end13, !dbg !10786

if.end13:                                         ; preds = %if.then10, %land.lhs.true, %if.end
  %24 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10790
  %mtd14 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %24, i32 0, i32 0, !dbg !10792
  %name15 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %mtd14, i32 0, i32 13, !dbg !10793
  %25 = load i8*, i8** %name15, align 8, !dbg !10793
  %tobool16 = icmp ne i8* %25, null, !dbg !10790
  br i1 %tobool16, label %if.end21, label %if.then17, !dbg !10794

if.then17:                                        ; preds = %if.end13
  %26 = load %struct.spi_mem*, %struct.spi_mem** %spimem.addr, align 8, !dbg !10795
  %call18 = call i8* @spi_mem_get_name(%struct.spi_mem* %26) #9, !dbg !10796
  %27 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10797
  %mtd19 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %27, i32 0, i32 0, !dbg !10798
  %name20 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %mtd19, i32 0, i32 13, !dbg !10799
  store i8* %call18, i8** %name20, align 8, !dbg !10800
  br label %if.end21, !dbg !10797

if.end21:                                         ; preds = %if.then17, %if.end13
  %28 = load %struct.flash_platform_data*, %struct.flash_platform_data** %data, align 8, !dbg !10801
  %tobool22 = icmp ne %struct.flash_platform_data* %28, null, !dbg !10801
  br i1 %tobool22, label %land.lhs.true23, label %if.else, !dbg !10803

land.lhs.true23:                                  ; preds = %if.end21
  %29 = load %struct.flash_platform_data*, %struct.flash_platform_data** %data, align 8, !dbg !10804
  %type = getelementptr inbounds %struct.flash_platform_data, %struct.flash_platform_data* %29, i32 0, i32 3, !dbg !10805
  %30 = load i8*, i8** %type, align 8, !dbg !10805
  %tobool24 = icmp ne i8* %30, null, !dbg !10804
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !10806

if.then25:                                        ; preds = %land.lhs.true23
  %31 = load %struct.flash_platform_data*, %struct.flash_platform_data** %data, align 8, !dbg !10807
  %type26 = getelementptr inbounds %struct.flash_platform_data, %struct.flash_platform_data* %31, i32 0, i32 3, !dbg !10808
  %32 = load i8*, i8** %type26, align 8, !dbg !10808
  store i8* %32, i8** %flash_name, align 8, !dbg !10809
  br label %if.end34, !dbg !10810

if.else:                                          ; preds = %land.lhs.true23, %if.end21
  %33 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !10811
  %modalias = getelementptr inbounds %struct.spi_device, %struct.spi_device* %33, i32 0, i32 11, !dbg !10813
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %modalias, i64 0, i64 0, !dbg !10811
  %call27 = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0)) #9, !dbg !10814
  %tobool28 = icmp ne i32 %call27, 0, !dbg !10814
  br i1 %tobool28, label %if.else30, label %if.then29, !dbg !10815

if.then29:                                        ; preds = %if.else
  store i8* null, i8** %flash_name, align 8, !dbg !10816
  br label %if.end33, !dbg !10817

if.else30:                                        ; preds = %if.else
  %34 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !10818
  %modalias31 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %34, i32 0, i32 11, !dbg !10819
  %arraydecay32 = getelementptr inbounds [32 x i8], [32 x i8]* %modalias31, i64 0, i64 0, !dbg !10818
  store i8* %arraydecay32, i8** %flash_name, align 8, !dbg !10820
  br label %if.end33

if.end33:                                         ; preds = %if.else30, %if.then29
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then25
  %35 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10821
  %36 = load i8*, i8** %flash_name, align 8, !dbg !10822
  %call35 = call i32 @spi_nor_scan(%struct.spi_nor* %35, i8* %36, %struct.spi_nor_hwcaps* %hwcaps) #9, !dbg !10823
  store i32 %call35, i32* %ret, align 4, !dbg !10824
  %37 = load i32, i32* %ret, align 4, !dbg !10825
  %tobool36 = icmp ne i32 %37, 0, !dbg !10825
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !10827

if.then37:                                        ; preds = %if.end34
  %38 = load i32, i32* %ret, align 4, !dbg !10828
  store i32 %38, i32* %retval, align 4, !dbg !10829
  br label %return, !dbg !10829

if.end38:                                         ; preds = %if.end34
  %39 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10830
  %page_size = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %39, i32 0, i32 8, !dbg !10832
  %40 = load i32, i32* %page_size, align 8, !dbg !10832
  %conv = zext i32 %40 to i64, !dbg !10830
  %cmp = icmp ugt i64 %conv, 4096, !dbg !10833
  br i1 %cmp, label %if.then40, label %if.end52, !dbg !10834

if.then40:                                        ; preds = %if.end38
  %41 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10835
  %page_size41 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %41, i32 0, i32 8, !dbg !10837
  %42 = load i32, i32* %page_size41, align 8, !dbg !10837
  %conv42 = zext i32 %42 to i64, !dbg !10835
  %43 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10838
  %bouncebuf_size = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %43, i32 0, i32 5, !dbg !10839
  store i64 %conv42, i64* %bouncebuf_size, align 8, !dbg !10840
  %44 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10841
  %dev43 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %44, i32 0, i32 2, !dbg !10842
  %45 = load %struct.device*, %struct.device** %dev43, align 8, !dbg !10842
  %46 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10843
  %bouncebuf = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %46, i32 0, i32 4, !dbg !10844
  %47 = load i8*, i8** %bouncebuf, align 8, !dbg !10844
  call void @devm_kfree(%struct.device* %45, i8* %47) #9, !dbg !10845
  %48 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10846
  %dev44 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %48, i32 0, i32 2, !dbg !10847
  %49 = load %struct.device*, %struct.device** %dev44, align 8, !dbg !10847
  %50 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10848
  %bouncebuf_size45 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %50, i32 0, i32 5, !dbg !10849
  %51 = load i64, i64* %bouncebuf_size45, align 8, !dbg !10849
  %call46 = call noalias i8* @devm_kmalloc(%struct.device* %49, i64 %51, i32 3264) #9, !dbg !10850
  %52 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10851
  %bouncebuf47 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %52, i32 0, i32 4, !dbg !10852
  store i8* %call46, i8** %bouncebuf47, align 8, !dbg !10853
  %53 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10854
  %bouncebuf48 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %53, i32 0, i32 4, !dbg !10856
  %54 = load i8*, i8** %bouncebuf48, align 8, !dbg !10856
  %tobool49 = icmp ne i8* %54, null, !dbg !10854
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !10857

if.then50:                                        ; preds = %if.then40
  store i32 -12, i32* %retval, align 4, !dbg !10858
  br label %return, !dbg !10858

if.end51:                                         ; preds = %if.then40
  br label %if.end52, !dbg !10859

if.end52:                                         ; preds = %if.end51, %if.end38
  %55 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10860
  %call53 = call i32 @spi_nor_create_read_dirmap(%struct.spi_nor* %55) #9, !dbg !10861
  store i32 %call53, i32* %ret, align 4, !dbg !10862
  %56 = load i32, i32* %ret, align 4, !dbg !10863
  %tobool54 = icmp ne i32 %56, 0, !dbg !10863
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !10865

if.then55:                                        ; preds = %if.end52
  %57 = load i32, i32* %ret, align 4, !dbg !10866
  store i32 %57, i32* %retval, align 4, !dbg !10867
  br label %return, !dbg !10867

if.end56:                                         ; preds = %if.end52
  %58 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10868
  %call57 = call i32 @spi_nor_create_write_dirmap(%struct.spi_nor* %58) #9, !dbg !10869
  store i32 %call57, i32* %ret, align 4, !dbg !10870
  %59 = load i32, i32* %ret, align 4, !dbg !10871
  %tobool58 = icmp ne i32 %59, 0, !dbg !10871
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !10873

if.then59:                                        ; preds = %if.end56
  %60 = load i32, i32* %ret, align 4, !dbg !10874
  store i32 %60, i32* %retval, align 4, !dbg !10875
  br label %return, !dbg !10875

if.end60:                                         ; preds = %if.end56
  %61 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10876
  %mtd61 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %61, i32 0, i32 0, !dbg !10876
  %62 = load %struct.flash_platform_data*, %struct.flash_platform_data** %data, align 8, !dbg !10876
  %tobool62 = icmp ne %struct.flash_platform_data* %62, null, !dbg !10876
  br i1 %tobool62, label %cond.true, label %cond.false, !dbg !10876

cond.true:                                        ; preds = %if.end60
  %63 = load %struct.flash_platform_data*, %struct.flash_platform_data** %data, align 8, !dbg !10876
  %parts = getelementptr inbounds %struct.flash_platform_data, %struct.flash_platform_data* %63, i32 0, i32 1, !dbg !10876
  %64 = load %struct.mtd_partition*, %struct.mtd_partition** %parts, align 8, !dbg !10876
  br label %cond.end, !dbg !10876

cond.false:                                       ; preds = %if.end60
  br label %cond.end, !dbg !10876

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.mtd_partition* [ %64, %cond.true ], [ null, %cond.false ], !dbg !10876
  %65 = load %struct.flash_platform_data*, %struct.flash_platform_data** %data, align 8, !dbg !10876
  %tobool63 = icmp ne %struct.flash_platform_data* %65, null, !dbg !10876
  br i1 %tobool63, label %cond.true64, label %cond.false65, !dbg !10876

cond.true64:                                      ; preds = %cond.end
  %66 = load %struct.flash_platform_data*, %struct.flash_platform_data** %data, align 8, !dbg !10876
  %nr_parts = getelementptr inbounds %struct.flash_platform_data, %struct.flash_platform_data* %66, i32 0, i32 2, !dbg !10876
  %67 = load i32, i32* %nr_parts, align 8, !dbg !10876
  br label %cond.end66, !dbg !10876

cond.false65:                                     ; preds = %cond.end
  br label %cond.end66, !dbg !10876

cond.end66:                                       ; preds = %cond.false65, %cond.true64
  %cond67 = phi i32 [ %67, %cond.true64 ], [ 0, %cond.false65 ], !dbg !10876
  %call68 = call i32 @mtd_device_parse_register(%struct.mtd_info* %mtd61, i8** null, %struct.mtd_part_parser_data* null, %struct.mtd_partition* %cond, i32 %cond67) #9, !dbg !10876
  store i32 %call68, i32* %retval, align 4, !dbg !10877
  br label %return, !dbg !10877

return:                                           ; preds = %cond.end66, %if.then59, %if.then55, %if.then50, %if.then37, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !10878
  ret i32 %68, !dbg !10878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_remove(%struct.spi_mem* %spimem) #0 !dbg !10879 {
entry:
  %spimem.addr = alloca %struct.spi_mem*, align 8
  %nor = alloca %struct.spi_nor*, align 8
  store %struct.spi_mem* %spimem, %struct.spi_mem** %spimem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_mem** %spimem.addr, metadata !10880, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor, metadata !10882, metadata !DIExpression()), !dbg !10883
  %0 = load %struct.spi_mem*, %struct.spi_mem** %spimem.addr, align 8, !dbg !10884
  %call = call i8* @spi_mem_get_drvdata(%struct.spi_mem* %0) #9, !dbg !10885
  %1 = bitcast i8* %call to %struct.spi_nor*, !dbg !10885
  store %struct.spi_nor* %1, %struct.spi_nor** %nor, align 8, !dbg !10883
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10886
  call void @spi_nor_restore(%struct.spi_nor* %2) #9, !dbg !10887
  %3 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10888
  %mtd = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %3, i32 0, i32 0, !dbg !10889
  %call1 = call i32 @mtd_device_unregister(%struct.mtd_info* %mtd) #9, !dbg !10890
  ret i32 %call1, !dbg !10891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_shutdown(%struct.spi_mem* %spimem) #0 !dbg !10892 {
entry:
  %spimem.addr = alloca %struct.spi_mem*, align 8
  %nor = alloca %struct.spi_nor*, align 8
  store %struct.spi_mem* %spimem, %struct.spi_mem** %spimem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_mem** %spimem.addr, metadata !10893, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor, metadata !10895, metadata !DIExpression()), !dbg !10896
  %0 = load %struct.spi_mem*, %struct.spi_mem** %spimem.addr, align 8, !dbg !10897
  %call = call i8* @spi_mem_get_drvdata(%struct.spi_mem* %0) #9, !dbg !10898
  %1 = bitcast i8* %call to %struct.spi_nor*, !dbg !10898
  store %struct.spi_nor* %1, %struct.spi_nor** %nor, align 8, !dbg !10896
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor, align 8, !dbg !10899
  call void @spi_nor_restore(%struct.spi_nor* %2) #9, !dbg !10900
  ret void, !dbg !10901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_platdata(%struct.device* %dev) #0 !dbg !10902 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10905, metadata !DIExpression()), !dbg !10906
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10907
  %platform_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 7, !dbg !10908
  %1 = load i8*, i8** %platform_data, align 8, !dbg !10908
  ret i8* %1, !dbg !10909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_nor_set_flash_node(%struct.spi_nor* %nor, %struct.device_node* %np) #0 !dbg !10910 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !10913, metadata !DIExpression()), !dbg !10914
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !10915, metadata !DIExpression()), !dbg !10916
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10917
  %mtd = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 0, !dbg !10918
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !10919
  call void @mtd_set_of_node(%struct.mtd_info* %mtd, %struct.device_node* %1) #9, !dbg !10920
  ret void, !dbg !10921
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_mem_set_drvdata(%struct.spi_mem* %mem, i8* %data) #0 !dbg !10922 {
entry:
  %mem.addr = alloca %struct.spi_mem*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.spi_mem* %mem, %struct.spi_mem** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_mem** %mem.addr, metadata !10925, metadata !DIExpression()), !dbg !10926
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10927, metadata !DIExpression()), !dbg !10928
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10929
  %1 = load %struct.spi_mem*, %struct.spi_mem** %mem.addr, align 8, !dbg !10930
  %drvpriv = getelementptr inbounds %struct.spi_mem, %struct.spi_mem* %1, i32 0, i32 1, !dbg !10931
  store i8* %0, i8** %drvpriv, align 8, !dbg !10932
  ret void, !dbg !10933
}

; Function Attrs: noredzone
declare dso_local i8* @spi_mem_get_name(%struct.spi_mem*) #3

; Function Attrs: noredzone
declare dso_local void @devm_kfree(%struct.device*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_create_read_dirmap(%struct.spi_nor* %nor) #0 !dbg !10934 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %info = alloca %struct.spi_mem_dirmap_info, align 8
  %op = alloca %struct.spi_mem_op*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !10935, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.declare(metadata %struct.spi_mem_dirmap_info* %info, metadata !10937, metadata !DIExpression()), !dbg !10938
  %op_tmpl = getelementptr inbounds %struct.spi_mem_dirmap_info, %struct.spi_mem_dirmap_info* %info, i32 0, i32 0, !dbg !10939
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op_tmpl, i32 0, i32 0, !dbg !10940
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !10940
  store i8 1, i8* %nbytes, align 8, !dbg !10940
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !10940
  store i8 1, i8* %buswidth, align 1, !dbg !10940
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !10940
  %bf.load = load i8, i8* %dtr, align 2, !dbg !10940
  %bf.clear = and i8 %bf.load, -2, !dbg !10940
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !10940
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !10940
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10940
  %read_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 11, !dbg !10940
  %1 = load i8, i8* %read_opcode, align 2, !dbg !10940
  %conv = zext i8 %1 to i16, !dbg !10940
  store i16 %conv, i16* %opcode, align 4, !dbg !10940
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op_tmpl, i32 0, i32 1, !dbg !10940
  %nbytes1 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !10940
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10940
  %addr_width = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 9, !dbg !10940
  %3 = load i8, i8* %addr_width, align 4, !dbg !10940
  store i8 %3, i8* %nbytes1, align 8, !dbg !10940
  %buswidth2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !10940
  store i8 1, i8* %buswidth2, align 1, !dbg !10940
  %dtr3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !10940
  %bf.load4 = load i8, i8* %dtr3, align 2, !dbg !10940
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !10940
  store i8 %bf.clear5, i8* %dtr3, align 2, !dbg !10940
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !10940
  store i64 0, i64* %val, align 8, !dbg !10940
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op_tmpl, i32 0, i32 2, !dbg !10940
  %nbytes6 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !10940
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10940
  %read_dummy = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 12, !dbg !10940
  %5 = load i8, i8* %read_dummy, align 1, !dbg !10940
  store i8 %5, i8* %nbytes6, align 8, !dbg !10940
  %buswidth7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !10940
  store i8 1, i8* %buswidth7, align 1, !dbg !10940
  %dtr8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !10940
  %bf.load9 = load i8, i8* %dtr8, align 2, !dbg !10940
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !10940
  store i8 %bf.clear10, i8* %dtr8, align 2, !dbg !10940
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op_tmpl, i32 0, i32 3, !dbg !10940
  %buswidth11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !10940
  store i8 1, i8* %buswidth11, align 8, !dbg !10940
  %dtr12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !10940
  %bf.load13 = load i8, i8* %dtr12, align 1, !dbg !10940
  %bf.clear14 = and i8 %bf.load13, -2, !dbg !10940
  store i8 %bf.clear14, i8* %dtr12, align 1, !dbg !10940
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !10940
  store i32 1, i32* %dir, align 4, !dbg !10940
  %nbytes15 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !10940
  store i32 0, i32* %nbytes15, align 8, !dbg !10940
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !10940
  %in = bitcast %union.anon.73* %buf to i8**, !dbg !10940
  store i8* null, i8** %in, align 8, !dbg !10940
  %offset = getelementptr inbounds %struct.spi_mem_dirmap_info, %struct.spi_mem_dirmap_info* %info, i32 0, i32 1, !dbg !10939
  store i64 0, i64* %offset, align 8, !dbg !10939
  %length = getelementptr inbounds %struct.spi_mem_dirmap_info, %struct.spi_mem_dirmap_info* %info, i32 0, i32 2, !dbg !10939
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10941
  %mtd = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 0, !dbg !10942
  %size = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %mtd, i32 0, i32 2, !dbg !10943
  %7 = load i64, i64* %size, align 8, !dbg !10943
  store i64 %7, i64* %length, align 8, !dbg !10939
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op** %op, metadata !10944, metadata !DIExpression()), !dbg !10945
  %op_tmpl16 = getelementptr inbounds %struct.spi_mem_dirmap_info, %struct.spi_mem_dirmap_info* %info, i32 0, i32 0, !dbg !10946
  store %struct.spi_mem_op* %op_tmpl16, %struct.spi_mem_op** %op, align 8, !dbg !10945
  %8 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10947
  %read_proto = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %8, i32 0, i32 14, !dbg !10948
  %9 = load i32, i32* %read_proto, align 4, !dbg !10948
  %call = call zeroext i8 @spi_nor_get_protocol_inst_nbits(i32 %9) #9, !dbg !10949
  %10 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !10950
  %cmd17 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %10, i32 0, i32 0, !dbg !10951
  %buswidth18 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd17, i32 0, i32 1, !dbg !10952
  store i8 %call, i8* %buswidth18, align 1, !dbg !10953
  %11 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10954
  %read_proto19 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %11, i32 0, i32 14, !dbg !10955
  %12 = load i32, i32* %read_proto19, align 4, !dbg !10955
  %call20 = call zeroext i8 @spi_nor_get_protocol_addr_nbits(i32 %12) #9, !dbg !10956
  %13 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !10957
  %addr21 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %13, i32 0, i32 1, !dbg !10958
  %buswidth22 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr21, i32 0, i32 1, !dbg !10959
  store i8 %call20, i8* %buswidth22, align 1, !dbg !10960
  %14 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !10961
  %addr23 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %14, i32 0, i32 1, !dbg !10962
  %buswidth24 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr23, i32 0, i32 1, !dbg !10963
  %15 = load i8, i8* %buswidth24, align 1, !dbg !10963
  %16 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !10964
  %dummy25 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %16, i32 0, i32 2, !dbg !10965
  %buswidth26 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy25, i32 0, i32 1, !dbg !10966
  store i8 %15, i8* %buswidth26, align 1, !dbg !10967
  %17 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10968
  %read_proto27 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %17, i32 0, i32 14, !dbg !10969
  %18 = load i32, i32* %read_proto27, align 4, !dbg !10969
  %call28 = call zeroext i8 @spi_nor_get_protocol_data_nbits(i32 %18) #9, !dbg !10970
  %19 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !10971
  %data29 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %19, i32 0, i32 3, !dbg !10972
  %buswidth30 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data29, i32 0, i32 0, !dbg !10973
  store i8 %call28, i8* %buswidth30, align 8, !dbg !10974
  %20 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10975
  %read_dummy31 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %20, i32 0, i32 12, !dbg !10976
  %21 = load i8, i8* %read_dummy31, align 1, !dbg !10976
  %conv32 = zext i8 %21 to i32, !dbg !10975
  %22 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !10977
  %dummy33 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %22, i32 0, i32 2, !dbg !10978
  %buswidth34 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy33, i32 0, i32 1, !dbg !10979
  %23 = load i8, i8* %buswidth34, align 1, !dbg !10979
  %conv35 = zext i8 %23 to i32, !dbg !10977
  %mul = mul i32 %conv32, %conv35, !dbg !10980
  %div = sdiv i32 %mul, 8, !dbg !10981
  %conv36 = trunc i32 %div to i8, !dbg !10982
  %24 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !10983
  %dummy37 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %24, i32 0, i32 2, !dbg !10984
  %nbytes38 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy37, i32 0, i32 0, !dbg !10985
  store i8 %conv36, i8* %nbytes38, align 8, !dbg !10986
  %25 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10987
  %dev = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %25, i32 0, i32 2, !dbg !10988
  %26 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10988
  %27 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10989
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %27, i32 0, i32 3, !dbg !10990
  %28 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !10990
  %call39 = call %struct.spi_mem_dirmap_desc* @devm_spi_mem_dirmap_create(%struct.device* %26, %struct.spi_mem* %28, %struct.spi_mem_dirmap_info* %info) #9, !dbg !10991
  %29 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10992
  %dirmap = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %29, i32 0, i32 21, !dbg !10993
  %rdesc = getelementptr inbounds %struct.anon.74, %struct.anon.74* %dirmap, i32 0, i32 0, !dbg !10994
  store %struct.spi_mem_dirmap_desc* %call39, %struct.spi_mem_dirmap_desc** %rdesc, align 8, !dbg !10995
  %30 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !10996
  %dirmap40 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %30, i32 0, i32 21, !dbg !10997
  %rdesc41 = getelementptr inbounds %struct.anon.74, %struct.anon.74* %dirmap40, i32 0, i32 0, !dbg !10998
  %31 = load %struct.spi_mem_dirmap_desc*, %struct.spi_mem_dirmap_desc** %rdesc41, align 8, !dbg !10998
  %32 = bitcast %struct.spi_mem_dirmap_desc* %31 to i8*, !dbg !10996
  %call42 = call i32 @PTR_ERR_OR_ZERO(i8* %32) #9, !dbg !10999
  ret i32 %call42, !dbg !11000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_nor_create_write_dirmap(%struct.spi_nor* %nor) #0 !dbg !11001 {
entry:
  %nor.addr = alloca %struct.spi_nor*, align 8
  %info = alloca %struct.spi_mem_dirmap_info, align 8
  %op = alloca %struct.spi_mem_op*, align 8
  store %struct.spi_nor* %nor, %struct.spi_nor** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_nor** %nor.addr, metadata !11002, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.declare(metadata %struct.spi_mem_dirmap_info* %info, metadata !11004, metadata !DIExpression()), !dbg !11005
  %op_tmpl = getelementptr inbounds %struct.spi_mem_dirmap_info, %struct.spi_mem_dirmap_info* %info, i32 0, i32 0, !dbg !11006
  %cmd = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op_tmpl, i32 0, i32 0, !dbg !11007
  %nbytes = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 0, !dbg !11007
  store i8 1, i8* %nbytes, align 8, !dbg !11007
  %buswidth = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 1, !dbg !11007
  store i8 1, i8* %buswidth, align 1, !dbg !11007
  %dtr = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 2, !dbg !11007
  %bf.load = load i8, i8* %dtr, align 2, !dbg !11007
  %bf.clear = and i8 %bf.load, -2, !dbg !11007
  store i8 %bf.clear, i8* %dtr, align 2, !dbg !11007
  %opcode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd, i32 0, i32 3, !dbg !11007
  %0 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11007
  %program_opcode = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %0, i32 0, i32 13, !dbg !11007
  %1 = load i8, i8* %program_opcode, align 8, !dbg !11007
  %conv = zext i8 %1 to i16, !dbg !11007
  store i16 %conv, i16* %opcode, align 4, !dbg !11007
  %addr = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op_tmpl, i32 0, i32 1, !dbg !11007
  %nbytes1 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 0, !dbg !11007
  %2 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11007
  %addr_width = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %2, i32 0, i32 9, !dbg !11007
  %3 = load i8, i8* %addr_width, align 4, !dbg !11007
  store i8 %3, i8* %nbytes1, align 8, !dbg !11007
  %buswidth2 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 1, !dbg !11007
  store i8 1, i8* %buswidth2, align 1, !dbg !11007
  %dtr3 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 2, !dbg !11007
  %bf.load4 = load i8, i8* %dtr3, align 2, !dbg !11007
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !11007
  store i8 %bf.clear5, i8* %dtr3, align 2, !dbg !11007
  %val = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr, i32 0, i32 3, !dbg !11007
  store i64 0, i64* %val, align 8, !dbg !11007
  %dummy = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op_tmpl, i32 0, i32 2, !dbg !11007
  %nbytes6 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 0, !dbg !11007
  store i8 0, i8* %nbytes6, align 8, !dbg !11007
  %buswidth7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 1, !dbg !11007
  store i8 0, i8* %buswidth7, align 1, !dbg !11007
  %dtr8 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy, i32 0, i32 2, !dbg !11007
  %bf.load9 = load i8, i8* %dtr8, align 2, !dbg !11007
  %bf.clear10 = and i8 %bf.load9, -2, !dbg !11007
  store i8 %bf.clear10, i8* %dtr8, align 2, !dbg !11007
  %data = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %op_tmpl, i32 0, i32 3, !dbg !11007
  %buswidth11 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 0, !dbg !11007
  store i8 1, i8* %buswidth11, align 8, !dbg !11007
  %dtr12 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 1, !dbg !11007
  %bf.load13 = load i8, i8* %dtr12, align 1, !dbg !11007
  %bf.clear14 = and i8 %bf.load13, -2, !dbg !11007
  store i8 %bf.clear14, i8* %dtr12, align 1, !dbg !11007
  %dir = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 2, !dbg !11007
  store i32 2, i32* %dir, align 4, !dbg !11007
  %nbytes15 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 3, !dbg !11007
  store i32 0, i32* %nbytes15, align 8, !dbg !11007
  %buf = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data, i32 0, i32 4, !dbg !11007
  %out = bitcast %union.anon.73* %buf to i8**, !dbg !11007
  store i8* null, i8** %out, align 8, !dbg !11007
  %offset = getelementptr inbounds %struct.spi_mem_dirmap_info, %struct.spi_mem_dirmap_info* %info, i32 0, i32 1, !dbg !11006
  store i64 0, i64* %offset, align 8, !dbg !11006
  %length = getelementptr inbounds %struct.spi_mem_dirmap_info, %struct.spi_mem_dirmap_info* %info, i32 0, i32 2, !dbg !11006
  %4 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11008
  %mtd = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %4, i32 0, i32 0, !dbg !11009
  %size = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %mtd, i32 0, i32 2, !dbg !11010
  %5 = load i64, i64* %size, align 8, !dbg !11010
  store i64 %5, i64* %length, align 8, !dbg !11006
  call void @llvm.dbg.declare(metadata %struct.spi_mem_op** %op, metadata !11011, metadata !DIExpression()), !dbg !11012
  %op_tmpl16 = getelementptr inbounds %struct.spi_mem_dirmap_info, %struct.spi_mem_dirmap_info* %info, i32 0, i32 0, !dbg !11013
  store %struct.spi_mem_op* %op_tmpl16, %struct.spi_mem_op** %op, align 8, !dbg !11012
  %6 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11014
  %write_proto = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %6, i32 0, i32 15, !dbg !11015
  %7 = load i32, i32* %write_proto, align 8, !dbg !11015
  %call = call zeroext i8 @spi_nor_get_protocol_inst_nbits(i32 %7) #9, !dbg !11016
  %8 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !11017
  %cmd17 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %8, i32 0, i32 0, !dbg !11018
  %buswidth18 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cmd17, i32 0, i32 1, !dbg !11019
  store i8 %call, i8* %buswidth18, align 1, !dbg !11020
  %9 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11021
  %write_proto19 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %9, i32 0, i32 15, !dbg !11022
  %10 = load i32, i32* %write_proto19, align 8, !dbg !11022
  %call20 = call zeroext i8 @spi_nor_get_protocol_addr_nbits(i32 %10) #9, !dbg !11023
  %11 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !11024
  %addr21 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %11, i32 0, i32 1, !dbg !11025
  %buswidth22 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr21, i32 0, i32 1, !dbg !11026
  store i8 %call20, i8* %buswidth22, align 1, !dbg !11027
  %12 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !11028
  %addr23 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %12, i32 0, i32 1, !dbg !11029
  %buswidth24 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr23, i32 0, i32 1, !dbg !11030
  %13 = load i8, i8* %buswidth24, align 1, !dbg !11030
  %14 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !11031
  %dummy25 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %14, i32 0, i32 2, !dbg !11032
  %buswidth26 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %dummy25, i32 0, i32 1, !dbg !11033
  store i8 %13, i8* %buswidth26, align 1, !dbg !11034
  %15 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11035
  %write_proto27 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %15, i32 0, i32 15, !dbg !11036
  %16 = load i32, i32* %write_proto27, align 8, !dbg !11036
  %call28 = call zeroext i8 @spi_nor_get_protocol_data_nbits(i32 %16) #9, !dbg !11037
  %17 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !11038
  %data29 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %17, i32 0, i32 3, !dbg !11039
  %buswidth30 = getelementptr inbounds %struct.anon.72, %struct.anon.72* %data29, i32 0, i32 0, !dbg !11040
  store i8 %call28, i8* %buswidth30, align 8, !dbg !11041
  %18 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11042
  %program_opcode31 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %18, i32 0, i32 13, !dbg !11044
  %19 = load i8, i8* %program_opcode31, align 8, !dbg !11044
  %conv32 = zext i8 %19 to i32, !dbg !11042
  %cmp = icmp eq i32 %conv32, 173, !dbg !11045
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11046

land.lhs.true:                                    ; preds = %entry
  %20 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11047
  %sst_write_second = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %20, i32 0, i32 17, !dbg !11048
  %21 = load i8, i8* %sst_write_second, align 8, !dbg !11048
  %tobool = trunc i8 %21 to i1, !dbg !11048
  br i1 %tobool, label %if.then, label %if.end, !dbg !11049

if.then:                                          ; preds = %land.lhs.true
  %22 = load %struct.spi_mem_op*, %struct.spi_mem_op** %op, align 8, !dbg !11050
  %addr35 = getelementptr inbounds %struct.spi_mem_op, %struct.spi_mem_op* %22, i32 0, i32 1, !dbg !11051
  %nbytes36 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %addr35, i32 0, i32 0, !dbg !11052
  store i8 0, i8* %nbytes36, align 8, !dbg !11053
  br label %if.end, !dbg !11050

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %23 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11054
  %dev = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %23, i32 0, i32 2, !dbg !11055
  %24 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11055
  %25 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11056
  %spimem = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %25, i32 0, i32 3, !dbg !11057
  %26 = load %struct.spi_mem*, %struct.spi_mem** %spimem, align 8, !dbg !11057
  %call37 = call %struct.spi_mem_dirmap_desc* @devm_spi_mem_dirmap_create(%struct.device* %24, %struct.spi_mem* %26, %struct.spi_mem_dirmap_info* %info) #9, !dbg !11058
  %27 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11059
  %dirmap = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %27, i32 0, i32 21, !dbg !11060
  %wdesc = getelementptr inbounds %struct.anon.74, %struct.anon.74* %dirmap, i32 0, i32 1, !dbg !11061
  store %struct.spi_mem_dirmap_desc* %call37, %struct.spi_mem_dirmap_desc** %wdesc, align 8, !dbg !11062
  %28 = load %struct.spi_nor*, %struct.spi_nor** %nor.addr, align 8, !dbg !11063
  %dirmap38 = getelementptr inbounds %struct.spi_nor, %struct.spi_nor* %28, i32 0, i32 21, !dbg !11064
  %wdesc39 = getelementptr inbounds %struct.anon.74, %struct.anon.74* %dirmap38, i32 0, i32 1, !dbg !11065
  %29 = load %struct.spi_mem_dirmap_desc*, %struct.spi_mem_dirmap_desc** %wdesc39, align 8, !dbg !11065
  %30 = bitcast %struct.spi_mem_dirmap_desc* %29 to i8*, !dbg !11063
  %call40 = call i32 @PTR_ERR_OR_ZERO(i8* %30) #9, !dbg !11066
  ret i32 %call40, !dbg !11067
}

; Function Attrs: noredzone
declare dso_local i32 @mtd_device_parse_register(%struct.mtd_info*, i8**, %struct.mtd_part_parser_data*, %struct.mtd_partition*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtd_set_of_node(%struct.mtd_info* %mtd, %struct.device_node* %np) #0 !dbg !11068 {
entry:
  %mtd.addr = alloca %struct.mtd_info*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  store %struct.mtd_info* %mtd, %struct.mtd_info** %mtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtd_info** %mtd.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !11073, metadata !DIExpression()), !dbg !11074
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !11075
  %1 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !11076
  %dev = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %1, i32 0, i32 55, !dbg !11077
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 23, !dbg !11078
  store %struct.device_node* %0, %struct.device_node** %of_node, align 8, !dbg !11079
  %2 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !11080
  %name = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %2, i32 0, i32 13, !dbg !11082
  %3 = load i8*, i8** %name, align 8, !dbg !11082
  %tobool = icmp ne i8* %3, null, !dbg !11080
  br i1 %tobool, label %if.end, label %if.then, !dbg !11083

if.then:                                          ; preds = %entry
  %4 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !11084
  %5 = load %struct.mtd_info*, %struct.mtd_info** %mtd.addr, align 8, !dbg !11085
  %name1 = getelementptr inbounds %struct.mtd_info, %struct.mtd_info* %5, i32 0, i32 13, !dbg !11086
  %call = call i32 @of_property_read_string(%struct.device_node* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i8** %name1) #9, !dbg !11087
  br label %if.end, !dbg !11087

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11088
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_string(%struct.device_node*, i8*, i8**) #3

; Function Attrs: noredzone
declare dso_local %struct.spi_mem_dirmap_desc* @devm_spi_mem_dirmap_create(%struct.device*, %struct.spi_mem*, %struct.spi_mem_dirmap_info*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @PTR_ERR_OR_ZERO(i8* %ptr) #0 !dbg !11089 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11090, metadata !DIExpression()), !dbg !11091
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11092
  %call = call zeroext i1 @IS_ERR(i8* %0) #9, !dbg !11094
  br i1 %call, label %if.then, label %if.else, !dbg !11095

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !11096
  %call1 = call i64 @PTR_ERR(i8* %1) #9, !dbg !11097
  %conv = trunc i64 %call1 to i32, !dbg !11097
  store i32 %conv, i32* %retval, align 4, !dbg !11098
  br label %return, !dbg !11098

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11099
  br label %return, !dbg !11099

return:                                           ; preds = %if.else, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !11100
  ret i32 %2, !dbg !11100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @spi_mem_get_drvdata(%struct.spi_mem* %mem) #0 !dbg !11101 {
entry:
  %mem.addr = alloca %struct.spi_mem*, align 8
  store %struct.spi_mem* %mem, %struct.spi_mem** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_mem** %mem.addr, metadata !11104, metadata !DIExpression()), !dbg !11105
  %0 = load %struct.spi_mem*, %struct.spi_mem** %mem.addr, align 8, !dbg !11106
  %drvpriv = getelementptr inbounds %struct.spi_mem, %struct.spi_mem* %0, i32 0, i32 1, !dbg !11107
  %1 = load i8*, i8** %drvpriv, align 8, !dbg !11107
  ret i8* %1, !dbg !11108
}

; Function Attrs: noredzone
declare dso_local i32 @mtd_device_unregister(%struct.mtd_info*) #3

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind willreturn }
attributes #9 = { noredzone }
attributes #10 = { nounwind readonly }
attributes #11 = { cold noredzone }
attributes #12 = { nounwind readnone }
attributes #13 = { nounwind }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { noredzone nounwind }

!llvm.dbg.cu = !{!11}
!llvm.module.flags = !{!4711, !4712, !4713, !4714}
!llvm.ident = !{!4715}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "spi_nor_3to4_read", scope: !2, file: !3, line: 1031, type: !4708, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "spi_nor_convert_3to4_read", scope: !3, file: !3, line: 1029, type: !4, scopeLine: 1030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!3 = !DIFile(filename: "drivers/mtd/spi-nor/core.c", directory: "/home/lizy2001/genbc/linux")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !6}
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !7, line: 17, baseType: !8)
!7 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !9, line: 21, baseType: !10)
!9 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!10 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!11 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !12, retainedTypes: !181, globals: !4088, splitDebugInlining: false, nameTableKind: None)
!12 = !{!13, !21, !27, !32, !38, !45, !51, !60, !68, !74, !80, !87, !95, !101, !107, !124, !141, !146, !164, !174}
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !14, line: 15, baseType: !15, size: 32, elements: !16)
!14 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!15 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!16 = !{!17, !18, !19, !20}
!17 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !22, line: 546, baseType: !15, size: 32, elements: !23)
!22 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!23 = !{!24, !25, !26}
!24 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!25 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!26 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !28, line: 65, baseType: !15, size: 32, elements: !29)
!28 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!29 = !{!30, !31}
!30 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!31 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!32 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !33, line: 16, baseType: !15, size: 32, elements: !34)
!33 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!34 = !{!35, !36, !37}
!35 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!36 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!38 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !39, line: 59, baseType: !15, size: 32, elements: !40)
!39 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!40 = !{!41, !42, !43, !44}
!41 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!43 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!44 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !46, line: 54, baseType: !15, size: 32, elements: !47)
!46 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!47 = !{!48, !49, !50}
!48 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!49 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!50 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !52, line: 296, baseType: !15, size: 32, elements: !53)
!52 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!53 = !{!54, !55, !56, !57, !58, !59}
!54 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!55 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!56 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!57 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!58 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !61, line: 9, baseType: !15, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65, !66, !67}
!63 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!67 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !69, line: 26, baseType: !15, size: 32, elements: !70)
!69 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!70 = !{!71, !72, !73}
!71 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!72 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!73 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !75, line: 44, baseType: !15, size: 32, elements: !76)
!75 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!76 = !{!77, !78, !79}
!77 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!78 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!79 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !81, line: 343, baseType: !15, size: 32, elements: !82)
!81 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !84, !85, !86}
!83 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!86 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !88, line: 524, baseType: !15, size: 32, elements: !89)
!88 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!89 = !{!90, !91, !92, !93, !94}
!90 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!93 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!94 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !88, line: 502, baseType: !15, size: 32, elements: !96)
!96 = !{!97, !98, !99, !100}
!97 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "spi_mem_data_dir", file: !102, line: 65, baseType: !15, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/spi/spi-mem.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "SPI_MEM_NO_DATA", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "SPI_MEM_DATA_IN", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "SPI_MEM_DATA_OUT", value: 2, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "spi_nor_protocol", file: !108, line: 169, baseType: !15, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/mtd/spi-nor.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123}
!110 = !DIEnumerator(name: "SNOR_PROTO_1_1_1", value: 65793, isUnsigned: true)
!111 = !DIEnumerator(name: "SNOR_PROTO_1_1_2", value: 65794, isUnsigned: true)
!112 = !DIEnumerator(name: "SNOR_PROTO_1_1_4", value: 65796, isUnsigned: true)
!113 = !DIEnumerator(name: "SNOR_PROTO_1_1_8", value: 65800, isUnsigned: true)
!114 = !DIEnumerator(name: "SNOR_PROTO_1_2_2", value: 66050, isUnsigned: true)
!115 = !DIEnumerator(name: "SNOR_PROTO_1_4_4", value: 66564, isUnsigned: true)
!116 = !DIEnumerator(name: "SNOR_PROTO_1_8_8", value: 67592, isUnsigned: true)
!117 = !DIEnumerator(name: "SNOR_PROTO_2_2_2", value: 131586, isUnsigned: true)
!118 = !DIEnumerator(name: "SNOR_PROTO_4_4_4", value: 263172, isUnsigned: true)
!119 = !DIEnumerator(name: "SNOR_PROTO_8_8_8", value: 526344, isUnsigned: true)
!120 = !DIEnumerator(name: "SNOR_PROTO_1_1_1_DTR", value: 16843009, isUnsigned: true)
!121 = !DIEnumerator(name: "SNOR_PROTO_1_2_2_DTR", value: 16843266, isUnsigned: true)
!122 = !DIEnumerator(name: "SNOR_PROTO_1_4_4_DTR", value: 16843780, isUnsigned: true)
!123 = !DIEnumerator(name: "SNOR_PROTO_1_8_8_DTR", value: 16844808, isUnsigned: true)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "spi_nor_option_flags", file: !125, line: 14, baseType: !15, size: 32, elements: !126)
!125 = !DIFile(filename: "drivers/mtd/spi-nor/core.h", directory: "/home/lizy2001/genbc/linux")
!126 = !{!127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140}
!127 = !DIEnumerator(name: "SNOR_F_USE_FSR", value: 1, isUnsigned: true)
!128 = !DIEnumerator(name: "SNOR_F_HAS_SR_TB", value: 2, isUnsigned: true)
!129 = !DIEnumerator(name: "SNOR_F_NO_OP_CHIP_ERASE", value: 4, isUnsigned: true)
!130 = !DIEnumerator(name: "SNOR_F_READY_XSR_RDY", value: 8, isUnsigned: true)
!131 = !DIEnumerator(name: "SNOR_F_USE_CLSR", value: 16, isUnsigned: true)
!132 = !DIEnumerator(name: "SNOR_F_BROKEN_RESET", value: 32, isUnsigned: true)
!133 = !DIEnumerator(name: "SNOR_F_4B_OPCODES", value: 64, isUnsigned: true)
!134 = !DIEnumerator(name: "SNOR_F_HAS_4BAIT", value: 128, isUnsigned: true)
!135 = !DIEnumerator(name: "SNOR_F_HAS_LOCK", value: 256, isUnsigned: true)
!136 = !DIEnumerator(name: "SNOR_F_HAS_16BIT_SR", value: 512, isUnsigned: true)
!137 = !DIEnumerator(name: "SNOR_F_NO_READ_CR", value: 1024, isUnsigned: true)
!138 = !DIEnumerator(name: "SNOR_F_HAS_SR_TB_BIT6", value: 2048, isUnsigned: true)
!139 = !DIEnumerator(name: "SNOR_F_HAS_4BIT_BP", value: 4096, isUnsigned: true)
!140 = !DIEnumerator(name: "SNOR_F_HAS_SR_BP3_BIT6", value: 8192, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !142, line: 10, baseType: !15, size: 32, elements: !143)
!142 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!143 = !{!144, !145}
!144 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "spi_nor_read_command_index", file: !125, line: 43, baseType: !15, size: 32, elements: !147)
!147 = !{!148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163}
!148 = !DIEnumerator(name: "SNOR_CMD_READ", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "SNOR_CMD_READ_FAST", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "SNOR_CMD_READ_1_1_1_DTR", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "SNOR_CMD_READ_1_1_2", value: 3, isUnsigned: true)
!152 = !DIEnumerator(name: "SNOR_CMD_READ_1_2_2", value: 4, isUnsigned: true)
!153 = !DIEnumerator(name: "SNOR_CMD_READ_2_2_2", value: 5, isUnsigned: true)
!154 = !DIEnumerator(name: "SNOR_CMD_READ_1_2_2_DTR", value: 6, isUnsigned: true)
!155 = !DIEnumerator(name: "SNOR_CMD_READ_1_1_4", value: 7, isUnsigned: true)
!156 = !DIEnumerator(name: "SNOR_CMD_READ_1_4_4", value: 8, isUnsigned: true)
!157 = !DIEnumerator(name: "SNOR_CMD_READ_4_4_4", value: 9, isUnsigned: true)
!158 = !DIEnumerator(name: "SNOR_CMD_READ_1_4_4_DTR", value: 10, isUnsigned: true)
!159 = !DIEnumerator(name: "SNOR_CMD_READ_1_1_8", value: 11, isUnsigned: true)
!160 = !DIEnumerator(name: "SNOR_CMD_READ_1_8_8", value: 12, isUnsigned: true)
!161 = !DIEnumerator(name: "SNOR_CMD_READ_8_8_8", value: 13, isUnsigned: true)
!162 = !DIEnumerator(name: "SNOR_CMD_READ_1_8_8_DTR", value: 14, isUnsigned: true)
!163 = !DIEnumerator(name: "SNOR_CMD_READ_MAX", value: 15, isUnsigned: true)
!164 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "spi_nor_pp_command_index", file: !125, line: 69, baseType: !15, size: 32, elements: !165)
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173}
!166 = !DIEnumerator(name: "SNOR_CMD_PP", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "SNOR_CMD_PP_1_1_4", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "SNOR_CMD_PP_1_4_4", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "SNOR_CMD_PP_4_4_4", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "SNOR_CMD_PP_1_1_8", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "SNOR_CMD_PP_1_8_8", value: 5, isUnsigned: true)
!172 = !DIEnumerator(name: "SNOR_CMD_PP_8_8_8", value: 6, isUnsigned: true)
!173 = !DIEnumerator(name: "SNOR_CMD_PP_MAX", value: 7, isUnsigned: true)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !175, line: 305, baseType: !15, size: 32, elements: !176)
!175 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!176 = !{!177, !178, !179, !180}
!177 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!178 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!181 = !{!182, !183, !185, !186, !187, !204, !188, !202, !15, !1033, !1108, !250, !4079, !198, !4086, !702}
!182 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !184, line: 148, baseType: !15)
!184 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!185 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!186 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !190, line: 640, size: 48640, elements: !191)
!190 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!191 = !{!192, !200, !203, !205, !215, !216, !217, !218, !219, !220, !221, !222, !226, !260, !272, !378, !379, !380, !391, !392, !394, !395, !3387, !3388, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3465, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3480, !3481, !3482, !3484, !3485, !3486, !3487, !3488, !3489, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3513, !3518, !3519, !3520, !3521, !3522, !3524, !3527, !3530, !3533, !3536, !3540, !3641, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3687, !3688, !3689, !3690, !3691, !3696, !3697, !3698, !3701, !3702, !3705, !3708, !3711, !3712, !3744, !3747, !3748, !3827, !3828, !3831, !3832, !3835, !3836, !3837, !3841, !3842, !3843, !3856, !3857, !3858, !3868, !3873, !3874, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3908}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !189, file: !190, line: 646, baseType: !193, size: 128)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !194, line: 56, size: 128, elements: !195)
!194 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!195 = !{!196, !197}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !193, file: !194, line: 57, baseType: !186, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !193, file: !194, line: 58, baseType: !198, size: 32, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !7, line: 21, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !9, line: 27, baseType: !15)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !189, file: !190, line: 649, baseType: !201, size: 64, offset: 128)
!201 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !202)
!202 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !189, file: !190, line: 657, baseType: !204, size: 64, offset: 192)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !189, file: !190, line: 658, baseType: !206, size: 32, offset: 256)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !207, line: 113, baseType: !208)
!207 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !207, line: 111, size: 32, elements: !209)
!209 = !{!210}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !208, file: !207, line: 112, baseType: !211, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !184, line: 168, baseType: !212)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 166, size: 32, elements: !213)
!213 = !{!214}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !212, file: !184, line: 167, baseType: !182, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !189, file: !190, line: 660, baseType: !15, size: 32, offset: 288)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !189, file: !190, line: 661, baseType: !15, size: 32, offset: 320)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !189, file: !190, line: 684, baseType: !182, size: 32, offset: 352)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !189, file: !190, line: 686, baseType: !182, size: 32, offset: 384)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !189, file: !190, line: 687, baseType: !182, size: 32, offset: 416)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !189, file: !190, line: 688, baseType: !182, size: 32, offset: 448)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !189, file: !190, line: 689, baseType: !15, size: 32, offset: 480)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !189, file: !190, line: 691, baseType: !223, size: 64, offset: 512)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !225)
!225 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !190, line: 691, flags: DIFlagFwdDecl)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !189, file: !190, line: 692, baseType: !227, size: 832, offset: 576)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !190, line: 451, size: 832, elements: !228)
!228 = !{!229, !234, !242, !248, !249, !253, !254, !255, !256, !257}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !227, file: !190, line: 453, baseType: !230, size: 128)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !190, line: 325, size: 128, elements: !231)
!231 = !{!232, !233}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !230, file: !190, line: 326, baseType: !186, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !230, file: !190, line: 327, baseType: !198, size: 32, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !227, file: !190, line: 454, baseType: !235, size: 192, align: 64, offset: 128)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !236, line: 24, size: 192, align: 64, elements: !237)
!236 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!237 = !{!238, !239, !241}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !235, file: !236, line: 25, baseType: !186, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !235, file: !236, line: 26, baseType: !240, size: 64, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !235, file: !236, line: 27, baseType: !240, size: 64, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !227, file: !190, line: 455, baseType: !243, size: 128, offset: 320)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !184, line: 178, size: 128, elements: !244)
!244 = !{!245, !247}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !243, file: !184, line: 179, baseType: !246, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !243, file: !184, line: 179, baseType: !246, size: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !227, file: !190, line: 456, baseType: !15, size: 32, offset: 448)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !227, file: !190, line: 458, baseType: !250, size: 64, offset: 512)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !7, line: 23, baseType: !251)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !9, line: 31, baseType: !252)
!252 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !227, file: !190, line: 459, baseType: !250, size: 64, offset: 576)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !227, file: !190, line: 460, baseType: !250, size: 64, offset: 640)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !227, file: !190, line: 461, baseType: !250, size: 64, offset: 704)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !227, file: !190, line: 463, baseType: !250, size: 64, offset: 768)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !227, file: !190, line: 465, baseType: !258, offset: 832)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !190, line: 415, elements: !259)
!259 = !{}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !189, file: !190, line: 693, baseType: !261, size: 384, offset: 1408)
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !190, line: 489, size: 384, elements: !262)
!262 = !{!263, !264, !265, !266, !267, !269, !270}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !261, file: !190, line: 490, baseType: !243, size: 128)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !261, file: !190, line: 491, baseType: !186, size: 64, offset: 128)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !261, file: !190, line: 492, baseType: !186, size: 64, offset: 192)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !261, file: !190, line: 493, baseType: !15, size: 32, offset: 256)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !261, file: !190, line: 494, baseType: !268, size: 16, offset: 288)
!268 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !261, file: !190, line: 495, baseType: !268, size: 16, offset: 304)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !261, file: !190, line: 497, baseType: !271, size: 64, offset: 320)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !189, file: !190, line: 697, baseType: !273, size: 1792, offset: 1792)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !190, line: 507, size: 1792, elements: !274)
!274 = !{!275, !276, !277, !278, !279, !280, !281, !284, !285, !286, !287, !288, !289, !290, !375, !376}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !273, file: !190, line: 508, baseType: !235, size: 192, align: 64)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !273, file: !190, line: 515, baseType: !250, size: 64, offset: 192)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !273, file: !190, line: 516, baseType: !250, size: 64, offset: 256)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !273, file: !190, line: 517, baseType: !250, size: 64, offset: 320)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !273, file: !190, line: 518, baseType: !250, size: 64, offset: 384)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !273, file: !190, line: 519, baseType: !250, size: 64, offset: 448)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !273, file: !190, line: 526, baseType: !282, size: 64, offset: 512)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !7, line: 22, baseType: !283)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !9, line: 30, baseType: !185)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !273, file: !190, line: 527, baseType: !250, size: 64, offset: 576)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !273, file: !190, line: 528, baseType: !15, size: 32, offset: 640)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !273, file: !190, line: 554, baseType: !15, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !273, file: !190, line: 555, baseType: !15, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !273, file: !190, line: 556, baseType: !15, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !273, file: !190, line: 557, baseType: !15, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !273, file: !190, line: 563, baseType: !291, size: 512, offset: 704)
!291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !28, line: 118, size: 512, elements: !292)
!292 = !{!293, !301, !302, !307, !371, !372, !373, !374}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !291, file: !28, line: 119, baseType: !294, size: 256)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !295, line: 9, size: 256, elements: !296)
!295 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!296 = !{!297, !298}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !294, file: !295, line: 10, baseType: !235, size: 192, align: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !294, file: !295, line: 11, baseType: !299, size: 64, offset: 192)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !300, line: 29, baseType: !282)
!300 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!301 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !291, file: !28, line: 120, baseType: !299, size: 64, offset: 256)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !291, file: !28, line: 121, baseType: !303, size: 64, offset: 320)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DISubroutineType(types: !305)
!305 = !{!27, !306}
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !291, file: !28, line: 122, baseType: !308, size: 64, offset: 384)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !28, line: 159, size: 512, align: 512, elements: !310)
!310 = !{!311, !339, !340, !344, !354, !355, !366, !370}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !309, file: !28, line: 160, baseType: !312, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !28, line: 214, size: 4608, align: 512, elements: !314)
!314 = !{!315, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !313, file: !28, line: 215, baseType: !316)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !317, line: 29, baseType: !318)
!317 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !317, line: 20, elements: !319)
!319 = !{!320}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !318, file: !317, line: 21, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !322, line: 25, baseType: !323)
!322 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !322, line: 25, elements: !259)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !313, file: !28, line: 216, baseType: !15, size: 32)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !313, file: !28, line: 217, baseType: !15, size: 32, offset: 32)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !313, file: !28, line: 218, baseType: !15, size: 32, offset: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !313, file: !28, line: 219, baseType: !15, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !313, file: !28, line: 220, baseType: !15, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !313, file: !28, line: 221, baseType: !15, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !313, file: !28, line: 222, baseType: !15, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !313, file: !28, line: 233, baseType: !299, size: 64, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !313, file: !28, line: 234, baseType: !306, size: 64, offset: 192)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !313, file: !28, line: 235, baseType: !299, size: 64, offset: 256)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !313, file: !28, line: 236, baseType: !306, size: 64, offset: 320)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !313, file: !28, line: 237, baseType: !336, size: 4096, offset: 512)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 4096, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 8)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !309, file: !28, line: 161, baseType: !15, size: 32, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !309, file: !28, line: 162, baseType: !341, size: 32, offset: 96)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !184, line: 27, baseType: !342)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !343, line: 96, baseType: !182)
!343 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!344 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !309, file: !28, line: 163, baseType: !345, size: 32, offset: 128)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !346, line: 276, baseType: !347)
!346 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !346, line: 276, size: 32, elements: !348)
!348 = !{!349}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !347, file: !346, line: 276, baseType: !350, size: 32)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !346, line: 70, baseType: !351)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !346, line: 65, size: 32, elements: !352)
!352 = !{!353}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !351, file: !346, line: 66, baseType: !15, size: 32)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !309, file: !28, line: 164, baseType: !306, size: 64, offset: 192)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !309, file: !28, line: 165, baseType: !356, size: 128, offset: 256)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !295, line: 14, size: 128, elements: !357)
!357 = !{!358}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !356, file: !295, line: 15, baseType: !359, size: 128)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !236, line: 125, size: 128, elements: !360)
!360 = !{!361, !365}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !359, file: !236, line: 126, baseType: !362, size: 64)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !236, line: 31, size: 64, elements: !363)
!363 = !{!364}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !362, file: !236, line: 32, baseType: !240, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !359, file: !236, line: 127, baseType: !240, size: 64, offset: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !309, file: !28, line: 166, baseType: !367, size: 64, offset: 384)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DISubroutineType(types: !369)
!369 = !{!299}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !309, file: !28, line: 167, baseType: !299, size: 64, offset: 448)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !291, file: !28, line: 123, baseType: !6, size: 8, offset: 448)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !291, file: !28, line: 124, baseType: !6, size: 8, offset: 456)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !291, file: !28, line: 125, baseType: !6, size: 8, offset: 464)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !291, file: !28, line: 126, baseType: !6, size: 8, offset: 472)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !273, file: !190, line: 572, baseType: !291, size: 512, offset: 1216)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !273, file: !190, line: 580, baseType: !377, size: 64, offset: 1728)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !189, file: !190, line: 721, baseType: !15, size: 32, offset: 3584)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !189, file: !190, line: 722, baseType: !182, size: 32, offset: 3616)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !189, file: !190, line: 723, baseType: !381, size: 64, offset: 3648)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !384, line: 17, baseType: !385)
!384 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !384, line: 17, size: 64, elements: !386)
!386 = !{!387}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !385, file: !384, line: 17, baseType: !388, size: 64)
!388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 64, elements: !389)
!389 = !{!390}
!390 = !DISubrange(count: 1)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !189, file: !190, line: 724, baseType: !383, size: 64, offset: 3712)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !189, file: !190, line: 749, baseType: !393, offset: 3776)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !190, line: 290, elements: !259)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !189, file: !190, line: 751, baseType: !243, size: 128, offset: 3776)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !189, file: !190, line: 757, baseType: !396, size: 64, offset: 3904)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !398, line: 388, size: 7296, elements: !399)
!398 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!399 = !{!400, !3383}
!400 = !DIDerivedType(tag: DW_TAG_member, scope: !397, file: !398, line: 389, baseType: !401, size: 7296)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !397, file: !398, line: 389, size: 7296, elements: !402)
!402 = !{!403, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3306, !3312, !3315, !3354, !3355, !3367, !3368, !3371, !3372, !3373, !3376, !3377, !3378, !3381, !3382}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !401, file: !398, line: 390, baseType: !404, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !398, line: 305, size: 1472, elements: !406)
!406 = !{!407, !408, !409, !410, !411, !412, !413, !414, !422, !423, !428, !429, !432, !3252, !3253, !3254, !3255, !3256}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !405, file: !398, line: 308, baseType: !186, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !405, file: !398, line: 309, baseType: !186, size: 64, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !405, file: !398, line: 313, baseType: !404, size: 64, offset: 128)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !405, file: !398, line: 313, baseType: !404, size: 64, offset: 192)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !405, file: !398, line: 315, baseType: !235, size: 192, align: 64, offset: 256)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !405, file: !398, line: 323, baseType: !186, size: 64, offset: 448)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !405, file: !398, line: 327, baseType: !396, size: 64, offset: 512)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !405, file: !398, line: 333, baseType: !415, size: 64, offset: 576)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !416, line: 284, baseType: !417)
!416 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !416, line: 284, size: 64, elements: !418)
!418 = !{!419}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !417, file: !416, line: 284, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !421, line: 19, baseType: !186)
!421 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!422 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !405, file: !398, line: 334, baseType: !186, size: 64, offset: 640)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !405, file: !398, line: 343, baseType: !424, size: 256, offset: 704)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !405, file: !398, line: 340, size: 256, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !424, file: !398, line: 341, baseType: !235, size: 192, align: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !424, file: !398, line: 342, baseType: !186, size: 64, offset: 192)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !405, file: !398, line: 351, baseType: !243, size: 128, offset: 960)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !405, file: !398, line: 353, baseType: !430, size: 64, offset: 1088)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !398, line: 353, flags: DIFlagFwdDecl)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !405, file: !398, line: 356, baseType: !433, size: 64, offset: 1152)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !435)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !22, line: 557, size: 832, elements: !436)
!436 = !{!437, !441, !442, !446, !450, !3226, !3230, !3234, !3238, !3239, !3240, !3244, !3248}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !435, file: !22, line: 558, baseType: !438, size: 64)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DISubroutineType(types: !440)
!440 = !{null, !404}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !435, file: !22, line: 559, baseType: !438, size: 64, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !435, file: !22, line: 560, baseType: !443, size: 64, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DISubroutineType(types: !445)
!445 = !{!182, !404, !186}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !435, file: !22, line: 561, baseType: !447, size: 64, offset: 192)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DISubroutineType(types: !449)
!449 = !{!182, !404}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !435, file: !22, line: 562, baseType: !451, size: 64, offset: 256)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DISubroutineType(types: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !398, line: 682, baseType: !15)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !22, line: 508, size: 768, elements: !457)
!457 = !{!458, !459, !460, !461, !462, !463, !470, !477, !483, !3220, !3221, !3223, !3225}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !456, file: !22, line: 509, baseType: !404, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !456, file: !22, line: 510, baseType: !15, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !456, file: !22, line: 511, baseType: !183, size: 32, offset: 96)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !456, file: !22, line: 512, baseType: !186, size: 64, offset: 128)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !456, file: !22, line: 513, baseType: !186, size: 64, offset: 192)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !456, file: !22, line: 514, baseType: !464, size: 64, offset: 256)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !416, line: 385, baseType: !466)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !416, line: 385, size: 64, elements: !467)
!467 = !{!468}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !466, file: !416, line: 385, baseType: !469, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !421, line: 15, baseType: !186)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !456, file: !22, line: 516, baseType: !471, size: 64, offset: 320)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !416, line: 359, baseType: !473)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !416, line: 359, size: 64, elements: !474)
!474 = !{!475}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !473, file: !416, line: 359, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !421, line: 16, baseType: !186)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !456, file: !22, line: 519, baseType: !478, size: 64, offset: 384)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !421, line: 21, baseType: !479)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !421, line: 21, size: 64, elements: !480)
!480 = !{!481}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !479, file: !421, line: 21, baseType: !482, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !421, line: 14, baseType: !186)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !456, file: !22, line: 521, baseType: !484, size: 64, offset: 448)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !398, line: 68, size: 512, align: 128, elements: !486)
!486 = !{!487, !488, !3212, !3219}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !485, file: !398, line: 69, baseType: !186, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, scope: !485, file: !398, line: 77, baseType: !489, size: 320, offset: 64)
!489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !485, file: !398, line: 77, size: 320, elements: !490)
!490 = !{!491, !3083, !3088, !3116, !3124, !3130, !3143, !3211}
!491 = !DIDerivedType(tag: DW_TAG_member, scope: !489, file: !398, line: 78, baseType: !492, size: 320)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !489, file: !398, line: 78, size: 320, elements: !493)
!493 = !{!494, !495, !3081, !3082}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !492, file: !398, line: 84, baseType: !243, size: 128)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !492, file: !398, line: 86, baseType: !496, size: 64, offset: 128)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !52, line: 451, size: 1216, align: 64, elements: !498)
!498 = !{!499, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !3076, !3077, !3078, !3079, !3080}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !497, file: !52, line: 452, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !52, line: 610, size: 4224, elements: !502)
!502 = !{!503, !505, !506, !514, !521, !522, !2898, !2899, !2900, !2901, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2942, !2950, !2951, !2952, !2970, !2971, !2972, !2973}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !501, file: !52, line: 611, baseType: !504, size: 16)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !184, line: 19, baseType: !268)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !501, file: !52, line: 612, baseType: !268, size: 16, offset: 16)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !501, file: !52, line: 613, baseType: !507, size: 32, offset: 32)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !508, line: 23, baseType: !509)
!508 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 21, size: 32, elements: !510)
!510 = !{!511}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !509, file: !508, line: 22, baseType: !512, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !184, line: 32, baseType: !513)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !343, line: 49, baseType: !15)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !501, file: !52, line: 614, baseType: !515, size: 32, offset: 64)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !508, line: 28, baseType: !516)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 26, size: 32, elements: !517)
!517 = !{!518}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !516, file: !508, line: 27, baseType: !519, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !184, line: 33, baseType: !520)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !343, line: 50, baseType: !15)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !501, file: !52, line: 615, baseType: !15, size: 32, offset: 96)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !501, file: !52, line: 622, baseType: !523, size: 64, offset: 128)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !52, line: 1864, size: 1536, align: 512, elements: !526)
!526 = !{!527, !2775, !2785, !2789, !2795, !2799, !2803, !2807, !2811, !2815, !2819, !2820, !2824, !2828, !2848, !2874, !2878, !2884, !2889, !2893, !2894}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !525, file: !52, line: 1865, baseType: !528, size: 64)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DISubroutineType(types: !530)
!530 = !{!531, !500, !531, !15}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !533, line: 89, size: 1536, elements: !534)
!533 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!534 = !{!535, !536, !541, !549, !550, !565, !566, !570, !589, !663, !2759, !2760, !2761, !2767, !2768, !2769}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !532, file: !533, line: 91, baseType: !15, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !532, file: !533, line: 92, baseType: !537, size: 32, offset: 32)
!537 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !346, line: 277, baseType: !538)
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !346, line: 277, size: 32, elements: !539)
!539 = !{!540}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !538, file: !346, line: 277, baseType: !350, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !532, file: !533, line: 93, baseType: !542, size: 128, offset: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !543, line: 38, size: 128, elements: !544)
!543 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!544 = !{!545, !547}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !542, file: !543, line: 39, baseType: !546, size: 64)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !542, file: !543, line: 39, baseType: !548, size: 64, offset: 64)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !532, file: !533, line: 94, baseType: !531, size: 64, offset: 192)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !532, file: !533, line: 95, baseType: !551, size: 128, offset: 256)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !533, line: 47, size: 128, elements: !552)
!552 = !{!553, !562}
!553 = !DIDerivedType(tag: DW_TAG_member, scope: !551, file: !533, line: 48, baseType: !554, size: 64)
!554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !551, file: !533, line: 48, size: 64, elements: !555)
!555 = !{!556, !561}
!556 = !DIDerivedType(tag: DW_TAG_member, scope: !554, file: !533, line: 49, baseType: !557, size: 64)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !554, file: !533, line: 49, size: 64, elements: !558)
!558 = !{!559, !560}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !557, file: !533, line: 50, baseType: !198, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !557, file: !533, line: 50, baseType: !198, size: 32, offset: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !554, file: !533, line: 52, baseType: !250, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !551, file: !533, line: 54, baseType: !563, size: 64, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !532, file: !533, line: 96, baseType: !500, size: 64, offset: 384)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !532, file: !533, line: 98, baseType: !567, size: 256, offset: 448)
!567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 256, elements: !568)
!568 = !{!569}
!569 = !DISubrange(count: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !532, file: !533, line: 101, baseType: !571, size: 32, offset: 704)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !572, line: 25, size: 32, elements: !573)
!572 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!573 = !{!574}
!574 = !DIDerivedType(tag: DW_TAG_member, scope: !571, file: !572, line: 26, baseType: !575, size: 32)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !571, file: !572, line: 26, size: 32, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !575, file: !572, line: 30, baseType: !578, size: 32)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !572, line: 30, size: 32, elements: !579)
!579 = !{!580, !588}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !578, file: !572, line: 31, baseType: !581)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !317, line: 83, baseType: !582)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !317, line: 71, elements: !583)
!583 = !{!584}
!584 = !DIDerivedType(tag: DW_TAG_member, scope: !582, file: !317, line: 72, baseType: !585)
!585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !582, file: !317, line: 72, elements: !586)
!586 = !{!587}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !585, file: !317, line: 73, baseType: !318)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !578, file: !572, line: 32, baseType: !182, size: 32)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !532, file: !533, line: 102, baseType: !590, size: 64, offset: 768)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !592)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !533, line: 135, size: 1024, align: 512, elements: !593)
!593 = !{!594, !598, !599, !606, !615, !619, !623, !627, !628, !632, !637, !649, !657}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !592, file: !533, line: 136, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DISubroutineType(types: !597)
!597 = !{!182, !531, !15}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !592, file: !533, line: 137, baseType: !595, size: 64, offset: 64)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !592, file: !533, line: 138, baseType: !600, size: 64, offset: 128)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = !DISubroutineType(types: !602)
!602 = !{!182, !603, !605}
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !532)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !592, file: !533, line: 139, baseType: !607, size: 64, offset: 192)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DISubroutineType(types: !609)
!609 = !{!182, !603, !15, !610, !613}
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !612)
!612 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !592, file: !533, line: 141, baseType: !616, size: 64, offset: 256)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DISubroutineType(types: !618)
!618 = !{!182, !603}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !592, file: !533, line: 142, baseType: !620, size: 64, offset: 320)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DISubroutineType(types: !622)
!622 = !{!182, !531}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !592, file: !533, line: 143, baseType: !624, size: 64, offset: 384)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DISubroutineType(types: !626)
!626 = !{null, !531}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !592, file: !533, line: 144, baseType: !624, size: 64, offset: 448)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !592, file: !533, line: 145, baseType: !629, size: 64, offset: 512)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{null, !531, !500}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !592, file: !533, line: 146, baseType: !633, size: 64, offset: 576)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{!636, !531, !636, !182}
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !592, file: !533, line: 147, baseType: !638, size: 64, offset: 640)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DISubroutineType(types: !640)
!640 = !{!641, !643}
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !533, line: 18, flags: DIFlagFwdDecl)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !645, line: 8, size: 128, elements: !646)
!645 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!646 = !{!647, !648}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !644, file: !645, line: 9, baseType: !641, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !644, file: !645, line: 10, baseType: !531, size: 64, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !592, file: !533, line: 148, baseType: !650, size: 64, offset: 704)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DISubroutineType(types: !652)
!652 = !{!182, !653, !655}
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !644)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !184, line: 30, baseType: !656)
!656 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !592, file: !533, line: 149, baseType: !658, size: 64, offset: 768)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DISubroutineType(types: !660)
!660 = !{!531, !531, !661}
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !501)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !532, file: !533, line: 103, baseType: !664, size: 64, offset: 832)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !52, line: 1416, size: 9472, elements: !666)
!666 = !{!667, !668, !671, !672, !673, !676, !728, !810, !906, !989, !993, !994, !995, !996, !997, !1005, !1006, !1007, !1012, !1016, !1017, !1020, !1023, !2617, !2618, !2619, !2660, !2687, !2688, !2689, !2690, !2691, !2692, !2695, !2696, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2726, !2727, !2728, !2729, !2730, !2733, !2734, !2735, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !665, file: !52, line: 1417, baseType: !243, size: 128)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !665, file: !52, line: 1418, baseType: !669, size: 32, offset: 128)
!669 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !184, line: 16, baseType: !670)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !184, line: 13, baseType: !198)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !665, file: !52, line: 1419, baseType: !10, size: 8, offset: 160)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !665, file: !52, line: 1420, baseType: !186, size: 64, offset: 192)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !665, file: !52, line: 1421, baseType: !674, size: 64, offset: 256)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !184, line: 46, baseType: !675)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !343, line: 88, baseType: !185)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !665, file: !52, line: 1422, baseType: !677, size: 64, offset: 320)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !52, line: 2228, size: 576, elements: !679)
!679 = !{!680, !681, !682, !689, !693, !697, !701, !705, !706, !716, !719, !720, !721, !725, !726, !727}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !678, file: !52, line: 2229, baseType: !610, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !678, file: !52, line: 2230, baseType: !182, size: 32, offset: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !678, file: !52, line: 2238, baseType: !683, size: 64, offset: 128)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DISubroutineType(types: !685)
!685 = !{!182, !686}
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !688, line: 28, flags: DIFlagFwdDecl)
!688 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!689 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !678, file: !52, line: 2239, baseType: !690, size: 64, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!692 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !52, line: 70, flags: DIFlagFwdDecl)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !678, file: !52, line: 2240, baseType: !694, size: 64, offset: 256)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!531, !677, !182, !610, !204}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !678, file: !52, line: 2242, baseType: !698, size: 64, offset: 320)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{null, !664}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !678, file: !52, line: 2243, baseType: !702, size: 64, offset: 384)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !704, line: 76, flags: DIFlagFwdDecl)
!704 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!705 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !678, file: !52, line: 2244, baseType: !677, size: 64, offset: 448)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !678, file: !52, line: 2245, baseType: !707, size: 64, offset: 512)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !184, line: 182, size: 64, elements: !708)
!708 = !{!709}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !707, file: !184, line: 183, baseType: !710, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !184, line: 186, size: 128, elements: !712)
!712 = !{!713, !714}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !711, file: !184, line: 187, baseType: !710, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !711, file: !184, line: 187, baseType: !715, size: 64, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !678, file: !52, line: 2247, baseType: !717, offset: 576)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !718, line: 187, elements: !259)
!718 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!719 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !678, file: !52, line: 2248, baseType: !717, offset: 576)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !678, file: !52, line: 2249, baseType: !717, offset: 576)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !678, file: !52, line: 2250, baseType: !722, offset: 576)
!722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !717, elements: !723)
!723 = !{!724}
!724 = !DISubrange(count: 3)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !678, file: !52, line: 2252, baseType: !717, offset: 576)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !678, file: !52, line: 2253, baseType: !717, offset: 576)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !678, file: !52, line: 2254, baseType: !717, offset: 576)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !665, file: !52, line: 1423, baseType: !729, size: 64, offset: 384)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !731)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !52, line: 1935, size: 1472, elements: !732)
!732 = !{!733, !737, !741, !742, !746, !752, !756, !757, !758, !762, !766, !767, !768, !769, !775, !780, !781, !787, !788, !789, !790, !794, !809}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !731, file: !52, line: 1936, baseType: !734, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DISubroutineType(types: !736)
!736 = !{!500, !664}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !731, file: !52, line: 1937, baseType: !738, size: 64, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{null, !500}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !731, file: !52, line: 1938, baseType: !738, size: 64, offset: 128)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !731, file: !52, line: 1940, baseType: !743, size: 64, offset: 192)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DISubroutineType(types: !745)
!745 = !{null, !500, !182}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !731, file: !52, line: 1941, baseType: !747, size: 64, offset: 256)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{!182, !500, !750}
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !22, line: 40, flags: DIFlagFwdDecl)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !731, file: !52, line: 1942, baseType: !753, size: 64, offset: 320)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DISubroutineType(types: !755)
!755 = !{!182, !500}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !731, file: !52, line: 1943, baseType: !738, size: 64, offset: 384)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !731, file: !52, line: 1944, baseType: !698, size: 64, offset: 448)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !731, file: !52, line: 1945, baseType: !759, size: 64, offset: 512)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DISubroutineType(types: !761)
!761 = !{!182, !664, !182}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !731, file: !52, line: 1946, baseType: !763, size: 64, offset: 576)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{!182, !664}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !731, file: !52, line: 1947, baseType: !763, size: 64, offset: 640)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !731, file: !52, line: 1948, baseType: !763, size: 64, offset: 704)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !731, file: !52, line: 1949, baseType: !763, size: 64, offset: 768)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !731, file: !52, line: 1950, baseType: !770, size: 64, offset: 832)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DISubroutineType(types: !772)
!772 = !{!182, !531, !773}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !52, line: 57, flags: DIFlagFwdDecl)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !731, file: !52, line: 1951, baseType: !776, size: 64, offset: 896)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!182, !664, !779, !636}
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !731, file: !52, line: 1952, baseType: !698, size: 64, offset: 960)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !731, file: !52, line: 1954, baseType: !782, size: 64, offset: 1024)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{!182, !785, !531}
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !416, line: 539, flags: DIFlagFwdDecl)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !731, file: !52, line: 1955, baseType: !782, size: 64, offset: 1088)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !731, file: !52, line: 1956, baseType: !782, size: 64, offset: 1152)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !731, file: !52, line: 1957, baseType: !782, size: 64, offset: 1216)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !731, file: !52, line: 1963, baseType: !791, size: 64, offset: 1280)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DISubroutineType(types: !793)
!793 = !{!182, !664, !484, !183}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !731, file: !52, line: 1964, baseType: !795, size: 64, offset: 1344)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DISubroutineType(types: !797)
!797 = !{!202, !664, !798}
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !800, line: 12, size: 256, elements: !801)
!800 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!801 = !{!802, !803, !804, !805, !806}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !799, file: !800, line: 13, baseType: !183, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !799, file: !800, line: 16, baseType: !182, size: 32, offset: 32)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !799, file: !800, line: 23, baseType: !186, size: 64, offset: 64)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !799, file: !800, line: 30, baseType: !186, size: 64, offset: 128)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !799, file: !800, line: 33, baseType: !807, size: 64, offset: 192)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !398, line: 27, flags: DIFlagFwdDecl)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !731, file: !52, line: 1966, baseType: !795, size: 64, offset: 1408)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !665, file: !52, line: 1424, baseType: !811, size: 64, offset: 448)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !46, line: 322, size: 704, elements: !814)
!814 = !{!815, !875, !879, !883, !884, !885, !886, !887, !892, !897, !901}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !813, file: !46, line: 323, baseType: !816, size: 64)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DISubroutineType(types: !818)
!818 = !{!182, !819}
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !46, line: 294, size: 1600, elements: !821)
!821 = !{!822, !823, !824, !825, !826, !839, !840, !841, !842, !858, !859, !860}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !820, file: !46, line: 295, baseType: !711, size: 128)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !820, file: !46, line: 296, baseType: !243, size: 128, offset: 128)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !820, file: !46, line: 297, baseType: !243, size: 128, offset: 256)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !820, file: !46, line: 298, baseType: !243, size: 128, offset: 384)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !820, file: !46, line: 299, baseType: !827, size: 192, offset: 512)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !828, line: 53, size: 192, elements: !829)
!828 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!829 = !{!830, !837, !838}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !827, file: !828, line: 54, baseType: !831, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !832, line: 13, baseType: !833)
!832 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !184, line: 175, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 173, size: 64, elements: !835)
!835 = !{!836}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !834, file: !184, line: 174, baseType: !282, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !827, file: !828, line: 55, baseType: !581, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !827, file: !828, line: 59, baseType: !243, size: 128, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !820, file: !46, line: 300, baseType: !581, offset: 704)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !820, file: !46, line: 301, baseType: !211, size: 32, offset: 704)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !820, file: !46, line: 302, baseType: !664, size: 64, offset: 768)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !820, file: !46, line: 303, baseType: !843, size: 64, offset: 832)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !46, line: 68, size: 64, elements: !844)
!844 = !{!845, !857}
!845 = !DIDerivedType(tag: DW_TAG_member, scope: !843, file: !46, line: 69, baseType: !846, size: 32)
!846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !843, file: !46, line: 69, size: 32, elements: !847)
!847 = !{!848, !849, !850}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !846, file: !46, line: 70, baseType: !507, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !846, file: !46, line: 71, baseType: !515, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !846, file: !46, line: 72, baseType: !851, size: 32)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !852, line: 24, baseType: !853)
!852 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !852, line: 22, size: 32, elements: !854)
!854 = !{!855}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !853, file: !852, line: 23, baseType: !856, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !852, line: 20, baseType: !513)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !843, file: !46, line: 74, baseType: !45, size: 32, offset: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !820, file: !46, line: 304, baseType: !674, size: 64, offset: 896)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !820, file: !46, line: 305, baseType: !186, size: 64, offset: 960)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !820, file: !46, line: 306, baseType: !861, size: 576, offset: 1024)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !46, line: 205, size: 576, elements: !862)
!862 = !{!863, !865, !866, !867, !868, !869, !870, !871, !874}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !861, file: !46, line: 206, baseType: !864, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !46, line: 66, baseType: !185)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !861, file: !46, line: 207, baseType: !864, size: 64, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !861, file: !46, line: 208, baseType: !864, size: 64, offset: 128)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !861, file: !46, line: 209, baseType: !864, size: 64, offset: 192)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !861, file: !46, line: 210, baseType: !864, size: 64, offset: 256)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !861, file: !46, line: 211, baseType: !864, size: 64, offset: 320)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !861, file: !46, line: 212, baseType: !864, size: 64, offset: 384)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !861, file: !46, line: 213, baseType: !872, size: 64, offset: 448)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !873, line: 8, baseType: !283)
!873 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!874 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !861, file: !46, line: 214, baseType: !872, size: 64, offset: 512)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !813, file: !46, line: 324, baseType: !876, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DISubroutineType(types: !878)
!878 = !{!819, !664, !182}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !813, file: !46, line: 325, baseType: !880, size: 64, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{null, !819}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !813, file: !46, line: 326, baseType: !816, size: 64, offset: 192)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !813, file: !46, line: 327, baseType: !816, size: 64, offset: 256)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !813, file: !46, line: 328, baseType: !816, size: 64, offset: 320)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !813, file: !46, line: 329, baseType: !759, size: 64, offset: 384)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !813, file: !46, line: 332, baseType: !888, size: 64, offset: 448)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{!891, !500}
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !813, file: !46, line: 333, baseType: !893, size: 64, offset: 512)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{!182, !500, !896}
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !813, file: !46, line: 335, baseType: !898, size: 64, offset: 576)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{!182, !500, !891}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !813, file: !46, line: 337, baseType: !902, size: 64, offset: 640)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{!182, !664, !905}
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !665, file: !52, line: 1425, baseType: !907, size: 64, offset: 512)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !909)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !46, line: 428, size: 704, elements: !910)
!910 = !{!911, !915, !916, !920, !921, !922, !937, !960, !964, !965, !988}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !909, file: !46, line: 429, baseType: !912, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!182, !664, !182, !182, !653}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !909, file: !46, line: 430, baseType: !759, size: 64, offset: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !909, file: !46, line: 431, baseType: !917, size: 64, offset: 128)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!182, !664, !15}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !909, file: !46, line: 432, baseType: !917, size: 64, offset: 192)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !909, file: !46, line: 433, baseType: !759, size: 64, offset: 256)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !909, file: !46, line: 434, baseType: !923, size: 64, offset: 320)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{!182, !664, !182, !926}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !46, line: 415, size: 256, elements: !928)
!928 = !{!929, !930, !931, !932, !933, !934, !935, !936}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !927, file: !46, line: 416, baseType: !182, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !927, file: !46, line: 417, baseType: !15, size: 32, offset: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !927, file: !46, line: 418, baseType: !15, size: 32, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !927, file: !46, line: 420, baseType: !15, size: 32, offset: 96)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !927, file: !46, line: 421, baseType: !15, size: 32, offset: 128)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !927, file: !46, line: 422, baseType: !15, size: 32, offset: 160)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !927, file: !46, line: 423, baseType: !15, size: 32, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !927, file: !46, line: 424, baseType: !15, size: 32, offset: 224)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !909, file: !46, line: 435, baseType: !938, size: 64, offset: 384)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{!182, !664, !843, !941}
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !46, line: 343, size: 960, elements: !943)
!943 = !{!944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !942, file: !46, line: 344, baseType: !182, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !942, file: !46, line: 345, baseType: !250, size: 64, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !942, file: !46, line: 346, baseType: !250, size: 64, offset: 128)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !942, file: !46, line: 347, baseType: !250, size: 64, offset: 192)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !942, file: !46, line: 348, baseType: !250, size: 64, offset: 256)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !942, file: !46, line: 349, baseType: !250, size: 64, offset: 320)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !942, file: !46, line: 350, baseType: !250, size: 64, offset: 384)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !942, file: !46, line: 351, baseType: !282, size: 64, offset: 448)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !942, file: !46, line: 353, baseType: !282, size: 64, offset: 512)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !942, file: !46, line: 354, baseType: !182, size: 32, offset: 576)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !942, file: !46, line: 355, baseType: !182, size: 32, offset: 608)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !942, file: !46, line: 356, baseType: !250, size: 64, offset: 640)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !942, file: !46, line: 357, baseType: !250, size: 64, offset: 704)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !942, file: !46, line: 358, baseType: !250, size: 64, offset: 768)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !942, file: !46, line: 359, baseType: !282, size: 64, offset: 832)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !942, file: !46, line: 360, baseType: !182, size: 32, offset: 896)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !909, file: !46, line: 436, baseType: !961, size: 64, offset: 448)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DISubroutineType(types: !963)
!963 = !{!182, !664, !905, !941}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !909, file: !46, line: 438, baseType: !938, size: 64, offset: 512)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !909, file: !46, line: 439, baseType: !966, size: 64, offset: 576)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!182, !664, !969}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !46, line: 409, size: 1408, elements: !971)
!971 = !{!972, !973}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !970, file: !46, line: 410, baseType: !15, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !970, file: !46, line: 411, baseType: !974, size: 1344, offset: 64)
!974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !975, size: 1344, elements: !723)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !46, line: 395, size: 448, elements: !976)
!976 = !{!977, !978, !979, !980, !981, !982, !983, !984, !985, !987}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !975, file: !46, line: 396, baseType: !15, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !975, file: !46, line: 397, baseType: !15, size: 32, offset: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !975, file: !46, line: 399, baseType: !15, size: 32, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !975, file: !46, line: 400, baseType: !15, size: 32, offset: 96)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !975, file: !46, line: 401, baseType: !15, size: 32, offset: 128)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !975, file: !46, line: 402, baseType: !15, size: 32, offset: 160)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !975, file: !46, line: 403, baseType: !15, size: 32, offset: 192)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !975, file: !46, line: 404, baseType: !252, size: 64, offset: 256)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !975, file: !46, line: 405, baseType: !986, size: 64, offset: 320)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !184, line: 126, baseType: !250)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !975, file: !46, line: 406, baseType: !986, size: 64, offset: 384)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !909, file: !46, line: 440, baseType: !917, size: 64, offset: 640)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !665, file: !52, line: 1426, baseType: !990, size: 64, offset: 576)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!992 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !52, line: 49, flags: DIFlagFwdDecl)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !665, file: !52, line: 1427, baseType: !186, size: 64, offset: 640)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !665, file: !52, line: 1428, baseType: !186, size: 64, offset: 704)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !665, file: !52, line: 1429, baseType: !186, size: 64, offset: 768)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !665, file: !52, line: 1430, baseType: !531, size: 64, offset: 832)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !665, file: !52, line: 1431, baseType: !998, size: 256, offset: 896)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !999, line: 35, size: 256, elements: !1000)
!999 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1000 = !{!1001, !1002, !1003, !1004}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !998, file: !999, line: 36, baseType: !831, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !998, file: !999, line: 42, baseType: !831, size: 64, offset: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !998, file: !999, line: 46, baseType: !316, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !998, file: !999, line: 47, baseType: !243, size: 128, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !665, file: !52, line: 1432, baseType: !182, size: 32, offset: 1152)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !665, file: !52, line: 1433, baseType: !211, size: 32, offset: 1184)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !665, file: !52, line: 1437, baseType: !1008, size: 64, offset: 1216)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1011)
!1011 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !52, line: 1437, flags: DIFlagFwdDecl)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !665, file: !52, line: 1449, baseType: !1013, size: 64, offset: 1280)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !543, line: 34, size: 64, elements: !1014)
!1014 = !{!1015}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1013, file: !543, line: 35, baseType: !546, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !665, file: !52, line: 1450, baseType: !243, size: 128, offset: 1344)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !665, file: !52, line: 1451, baseType: !1018, size: 64, offset: 1472)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !52, line: 699, flags: DIFlagFwdDecl)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !665, file: !52, line: 1452, baseType: !1021, size: 64, offset: 1536)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !190, line: 40, flags: DIFlagFwdDecl)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !665, file: !52, line: 1453, baseType: !1024, size: 64, offset: 1600)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !1026, line: 235, size: 9664, elements: !1027)
!1026 = !DIFile(filename: "./include/linux/mtd/mtd.h", directory: "/home/lizy2001/genbc/linux")
!1027 = !{!1028, !1030, !1032, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1061, !1082, !1083, !1084, !1085, !1094, !1104, !1116, !1120, !1125, !1131, !1132, !1149, !1150, !1161, !1162, !1163, !1164, !1165, !1166, !1177, !1181, !1185, !1186, !1187, !1191, !1192, !1193, !1194, !1198, !1199, !1200, !1201, !1202, !1203, !1215, !1222, !1223, !1224, !1225, !2589, !2590, !2596, !2600, !2601, !2602}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1025, file: !1026, line: 236, baseType: !1029, size: 8)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_char", file: !184, line: 79, baseType: !10)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1025, file: !1026, line: 237, baseType: !1031, size: 32, offset: 32)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !184, line: 104, baseType: !198)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1025, file: !1026, line: 238, baseType: !1033, size: 64, offset: 64)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !184, line: 107, baseType: !250)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "erasesize", scope: !1025, file: !1026, line: 244, baseType: !1031, size: 32, offset: 128)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "writesize", scope: !1025, file: !1026, line: 252, baseType: !1031, size: 32, offset: 160)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "writebufsize", scope: !1025, file: !1026, line: 263, baseType: !1031, size: 32, offset: 192)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "oobsize", scope: !1025, file: !1026, line: 265, baseType: !1031, size: 32, offset: 224)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "oobavail", scope: !1025, file: !1026, line: 266, baseType: !1031, size: 32, offset: 256)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "erasesize_shift", scope: !1025, file: !1026, line: 272, baseType: !15, size: 32, offset: 288)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "writesize_shift", scope: !1025, file: !1026, line: 273, baseType: !15, size: 32, offset: 320)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "erasesize_mask", scope: !1025, file: !1026, line: 275, baseType: !15, size: 32, offset: 352)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "writesize_mask", scope: !1025, file: !1026, line: 276, baseType: !15, size: 32, offset: 384)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "bitflip_threshold", scope: !1025, file: !1026, line: 285, baseType: !15, size: 32, offset: 416)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1025, file: !1026, line: 288, baseType: !610, size: 64, offset: 448)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1025, file: !1026, line: 289, baseType: !182, size: 32, offset: 512)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "ooblayout", scope: !1025, file: !1026, line: 292, baseType: !1047, size: 64, offset: 576)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_ooblayout_ops", file: !1026, line: 101, size: 128, elements: !1050)
!1050 = !{!1051, !1060}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "ecc", scope: !1049, file: !1026, line: 102, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!182, !1024, !182, !1055}
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_oob_region", file: !1026, line: 87, size: 64, elements: !1057)
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1056, file: !1026, line: 88, baseType: !198, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1056, file: !1026, line: 89, baseType: !198, size: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1049, file: !1026, line: 104, baseType: !1052, size: 64, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "pairing", scope: !1025, file: !1026, line: 295, baseType: !1062, size: 64, offset: 640)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_pairing_scheme", file: !1026, line: 176, size: 192, elements: !1065)
!1065 = !{!1066, !1067, !1076}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1064, file: !1026, line: 177, baseType: !182, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "get_info", scope: !1064, file: !1026, line: 178, baseType: !1068, size: 64, offset: 64)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!182, !1024, !182, !1071}
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_pairing_info", file: !1026, line: 138, size: 64, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "pair", scope: !1072, file: !1026, line: 139, baseType: !182, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1072, file: !1026, line: 140, baseType: !182, size: 32, offset: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "get_wunit", scope: !1064, file: !1026, line: 180, baseType: !1077, size: 64, offset: 128)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!182, !1024, !1080}
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1072)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "ecc_step_size", scope: !1025, file: !1026, line: 298, baseType: !15, size: 32, offset: 704)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "ecc_strength", scope: !1025, file: !1026, line: 301, baseType: !15, size: 32, offset: 736)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "numeraseregions", scope: !1025, file: !1026, line: 306, baseType: !182, size: 32, offset: 768)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "eraseregions", scope: !1025, file: !1026, line: 307, baseType: !1086, size: 64, offset: 832)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_erase_region_info", file: !1026, line: 36, size: 192, elements: !1088)
!1088 = !{!1089, !1090, !1091, !1092}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1087, file: !1026, line: 37, baseType: !1033, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "erasesize", scope: !1087, file: !1026, line: 38, baseType: !1031, size: 32, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "numblocks", scope: !1087, file: !1026, line: 39, baseType: !1031, size: 32, offset: 96)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "lockmap", scope: !1087, file: !1026, line: 40, baseType: !1093, size: 64, offset: 128)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "_erase", scope: !1025, file: !1026, line: 313, baseType: !1095, size: 64, offset: 896)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!182, !1024, !1098}
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "erase_info", file: !1026, line: 30, size: 192, elements: !1100)
!1100 = !{!1101, !1102, !1103}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1099, file: !1026, line: 31, baseType: !1033, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1099, file: !1026, line: 32, baseType: !1033, size: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "fail_addr", scope: !1099, file: !1026, line: 33, baseType: !1033, size: 64, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "_point", scope: !1025, file: !1026, line: 314, baseType: !1105, size: 64, offset: 960)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!182, !1024, !674, !1108, !1111, !1112, !1113}
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !184, line: 55, baseType: !1109)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !343, line: 72, baseType: !1110)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !343, line: 16, baseType: !186)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !184, line: 158, baseType: !1115)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !184, line: 153, baseType: !250)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "_unpoint", scope: !1025, file: !1026, line: 316, baseType: !1117, size: 64, offset: 1024)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{!182, !1024, !674, !1108}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !1025, file: !1026, line: 317, baseType: !1121, size: 64, offset: 1088)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!182, !1024, !674, !1108, !1111, !1124}
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !1025, file: !1026, line: 319, baseType: !1126, size: 64, offset: 1152)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!182, !1024, !674, !1108, !1111, !1129}
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "_panic_write", scope: !1025, file: !1026, line: 321, baseType: !1126, size: 64, offset: 1216)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "_read_oob", scope: !1025, file: !1026, line: 323, baseType: !1133, size: 64, offset: 1280)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!182, !1024, !674, !1136}
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_oob_ops", file: !1026, line: 64, size: 512, elements: !1138)
!1138 = !{!1139, !1140, !1141, !1142, !1143, !1144, !1145, !1148}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1137, file: !1026, line: 65, baseType: !15, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1137, file: !1026, line: 66, baseType: !1108, size: 64, offset: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "retlen", scope: !1137, file: !1026, line: 67, baseType: !1108, size: 64, offset: 128)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "ooblen", scope: !1137, file: !1026, line: 68, baseType: !1108, size: 64, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "oobretlen", scope: !1137, file: !1026, line: 69, baseType: !1108, size: 64, offset: 256)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "ooboffs", scope: !1137, file: !1026, line: 70, baseType: !1031, size: 32, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "datbuf", scope: !1137, file: !1026, line: 71, baseType: !1146, size: 64, offset: 384)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !184, line: 102, baseType: !6)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "oobbuf", scope: !1137, file: !1026, line: 72, baseType: !1146, size: 64, offset: 448)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "_write_oob", scope: !1025, file: !1026, line: 325, baseType: !1133, size: 64, offset: 1344)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "_get_fact_prot_info", scope: !1025, file: !1026, line: 327, baseType: !1151, size: 64, offset: 1408)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!182, !1024, !1108, !1111, !1154}
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "otp_info", file: !1156, line: 146, size: 96, elements: !1157)
!1156 = !DIFile(filename: "./include/uapi/mtd/mtd-abi.h", directory: "/home/lizy2001/genbc/linux")
!1157 = !{!1158, !1159, !1160}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1155, file: !1156, line: 147, baseType: !199, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1155, file: !1156, line: 148, baseType: !199, size: 32, offset: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !1155, file: !1156, line: 149, baseType: !199, size: 32, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "_read_fact_prot_reg", scope: !1025, file: !1026, line: 329, baseType: !1121, size: 64, offset: 1472)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "_get_user_prot_info", scope: !1025, file: !1026, line: 331, baseType: !1151, size: 64, offset: 1536)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "_read_user_prot_reg", scope: !1025, file: !1026, line: 333, baseType: !1121, size: 64, offset: 1600)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "_write_user_prot_reg", scope: !1025, file: !1026, line: 335, baseType: !1121, size: 64, offset: 1664)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "_lock_user_prot_reg", scope: !1025, file: !1026, line: 337, baseType: !1117, size: 64, offset: 1728)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "_writev", scope: !1025, file: !1026, line: 339, baseType: !1167, size: 64, offset: 1792)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!182, !1024, !1170, !186, !674, !1111}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1173, line: 15, size: 128, elements: !1174)
!1173 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1174 = !{!1175, !1176}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1172, file: !1173, line: 16, baseType: !204, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1172, file: !1173, line: 17, baseType: !1108, size: 64, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "_sync", scope: !1025, file: !1026, line: 341, baseType: !1178, size: 64, offset: 1856)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{null, !1024}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1025, file: !1026, line: 342, baseType: !1182, size: 64, offset: 1920)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{!182, !1024, !674, !1033}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "_unlock", scope: !1025, file: !1026, line: 343, baseType: !1182, size: 64, offset: 1984)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "_is_locked", scope: !1025, file: !1026, line: 344, baseType: !1182, size: 64, offset: 2048)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "_block_isreserved", scope: !1025, file: !1026, line: 345, baseType: !1188, size: 64, offset: 2112)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!182, !1024, !674}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "_block_isbad", scope: !1025, file: !1026, line: 346, baseType: !1188, size: 64, offset: 2176)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "_block_markbad", scope: !1025, file: !1026, line: 347, baseType: !1188, size: 64, offset: 2240)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "_max_bad_blocks", scope: !1025, file: !1026, line: 348, baseType: !1117, size: 64, offset: 2304)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "_suspend", scope: !1025, file: !1026, line: 349, baseType: !1195, size: 64, offset: 2368)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!182, !1024}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "_resume", scope: !1025, file: !1026, line: 350, baseType: !1178, size: 64, offset: 2432)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "_reboot", scope: !1025, file: !1026, line: 351, baseType: !1178, size: 64, offset: 2496)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "_get_device", scope: !1025, file: !1026, line: 356, baseType: !1195, size: 64, offset: 2560)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "_put_device", scope: !1025, file: !1026, line: 357, baseType: !1178, size: 64, offset: 2624)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "oops_panic_write", scope: !1025, file: !1026, line: 363, baseType: !655, size: 8, offset: 2688)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "reboot_notifier", scope: !1025, file: !1026, line: 365, baseType: !1204, size: 192, offset: 2752)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !1205, line: 54, size: 192, elements: !1206)
!1205 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!1206 = !{!1207, !1213, !1214}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !1204, file: !1205, line: 55, baseType: !1208, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !1205, line: 51, baseType: !1209)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!182, !1212, !186, !204}
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1204, file: !1205, line: 56, baseType: !1212, size: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !1204, file: !1205, line: 57, baseType: !182, size: 32, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "ecc_stats", scope: !1025, file: !1026, line: 368, baseType: !1216, size: 128, offset: 2944)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_ecc_stats", file: !1156, line: 250, size: 128, elements: !1217)
!1217 = !{!1218, !1219, !1220, !1221}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "corrected", scope: !1216, file: !1156, line: 251, baseType: !199, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "failed", scope: !1216, file: !1156, line: 252, baseType: !199, size: 32, offset: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "badblocks", scope: !1216, file: !1156, line: 253, baseType: !199, size: 32, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "bbtblocks", scope: !1216, file: !1156, line: 254, baseType: !199, size: 32, offset: 96)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "subpage_sft", scope: !1025, file: !1026, line: 370, baseType: !182, size: 32, offset: 3072)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1025, file: !1026, line: 372, baseType: !204, size: 64, offset: 3136)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1025, file: !1026, line: 374, baseType: !702, size: 64, offset: 3200)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1025, file: !1026, line: 375, baseType: !1226, size: 5568, offset: 3264)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !81, line: 461, size: 5568, elements: !1227)
!1227 = !{!1228, !2098, !2100, !2103, !2104, !2155, !2247, !2248, !2249, !2250, !2251, !2260, !2386, !2399, !2402, !2403, !2407, !2409, !2410, !2411, !2415, !2421, !2422, !2425, !2540, !2541, !2542, !2543, !2544, !2545, !2577, !2578, !2579, !2582, !2585, !2586, !2587, !2588}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1226, file: !81, line: 462, baseType: !1229, size: 512)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1230, line: 64, size: 512, elements: !1231)
!1230 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1231 = !{!1232, !1233, !1234, !1236, !1278, !1943, !2088, !2093, !2094, !2095, !2096, !2097}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1229, file: !1230, line: 65, baseType: !610, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1229, file: !1230, line: 66, baseType: !243, size: 128, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1229, file: !1230, line: 67, baseType: !1235, size: 64, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1229, file: !1230, line: 68, baseType: !1237, size: 64, offset: 256)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1230, line: 192, size: 704, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1238, file: !1230, line: 193, baseType: !243, size: 128)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1238, file: !1230, line: 194, baseType: !581, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1238, file: !1230, line: 195, baseType: !1229, size: 512, offset: 128)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1238, file: !1230, line: 196, baseType: !1244, size: 64, offset: 640)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1230, line: 156, size: 192, elements: !1247)
!1247 = !{!1248, !1253, !1258}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1246, file: !1230, line: 157, baseType: !1249, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1250)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!182, !1237, !1235}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1246, file: !1230, line: 158, baseType: !1254, size: 64, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1255)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!610, !1237, !1235}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1246, file: !1230, line: 159, baseType: !1259, size: 64, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1260)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!182, !1237, !1235, !1263}
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1230, line: 148, size: 20736, elements: !1265)
!1265 = !{!1266, !1268, !1272, !1273, !1277}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1264, file: !1230, line: 149, baseType: !1267, size: 192)
!1267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !636, size: 192, elements: !723)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1264, file: !1230, line: 150, baseType: !1269, size: 4096, offset: 192)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !636, size: 4096, elements: !1270)
!1270 = !{!1271}
!1271 = !DISubrange(count: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1264, file: !1230, line: 151, baseType: !182, size: 32, offset: 4288)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1264, file: !1230, line: 152, baseType: !1274, size: 16384, offset: 4320)
!1274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 16384, elements: !1275)
!1275 = !{!1276}
!1276 = !DISubrange(count: 2048)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1264, file: !1230, line: 153, baseType: !182, size: 32, offset: 20704)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1229, file: !1230, line: 69, baseType: !1279, size: 64, offset: 320)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1230, line: 138, size: 448, elements: !1281)
!1281 = !{!1282, !1286, !1308, !1310, !1900, !1933, !1937}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1280, file: !1230, line: 139, baseType: !1283, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{null, !1235}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !1280, file: !1230, line: 140, baseType: !1287, size: 64, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !1290, line: 230, size: 128, elements: !1291)
!1290 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!1291 = !{!1292, !1304}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1289, file: !1290, line: 231, baseType: !1293, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!1296, !1235, !1299, !636}
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !184, line: 60, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !343, line: 73, baseType: !1298)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !343, line: 15, baseType: !202)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !1290, line: 30, size: 128, elements: !1301)
!1301 = !{!1302, !1303}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1300, file: !1290, line: 31, baseType: !610, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1300, file: !1290, line: 32, baseType: !504, size: 16, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1289, file: !1290, line: 232, baseType: !1305, size: 64, offset: 64)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!1296, !1235, !1299, !610, !1108}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !1280, file: !1230, line: 141, baseType: !1309, size: 64, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !1280, file: !1230, line: 142, baseType: !1311, size: 64, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1314)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !1290, line: 84, size: 320, elements: !1315)
!1315 = !{!1316, !1317, !1321, !1897, !1898}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1314, file: !1290, line: 85, baseType: !610, size: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !1314, file: !1290, line: 86, baseType: !1318, size: 64, offset: 64)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!504, !1235, !1299, !182}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !1314, file: !1290, line: 88, baseType: !1322, size: 64, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!504, !1235, !1325, !182}
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !1290, line: 168, size: 448, elements: !1327)
!1327 = !{!1328, !1329, !1330, !1331, !1892, !1893}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1326, file: !1290, line: 169, baseType: !1300, size: 128)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1326, file: !1290, line: 170, baseType: !1108, size: 64, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1326, file: !1290, line: 171, baseType: !204, size: 64, offset: 192)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1326, file: !1290, line: 172, baseType: !1332, size: 64, offset: 256)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!1296, !1335, !1235, !1325, !636, !674, !1108}
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !52, line: 916, size: 1856, align: 32, elements: !1337)
!1337 = !{!1338, !1356, !1357, !1358, !1649, !1650, !1651, !1652, !1653, !1655, !1656, !1657, !1687, !1874, !1883, !1884, !1885, !1886, !1887, !1888, !1891}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1336, file: !52, line: 920, baseType: !1339, size: 128)
!1339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1336, file: !52, line: 917, size: 128, elements: !1340)
!1340 = !{!1341, !1347}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1339, file: !52, line: 918, baseType: !1342, size: 64)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1343, line: 58, size: 64, elements: !1344)
!1343 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1344 = !{!1345}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1342, file: !1343, line: 59, baseType: !1346, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1339, file: !52, line: 919, baseType: !1348, size: 128, align: 64)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !184, line: 216, size: 128, align: 64, elements: !1349)
!1349 = !{!1350, !1352}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1348, file: !184, line: 217, baseType: !1351, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1348, file: !184, line: 218, baseType: !1353, size: 64, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{null, !1351}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1336, file: !52, line: 921, baseType: !644, size: 128, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1336, file: !52, line: 922, baseType: !500, size: 64, offset: 256)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1336, file: !52, line: 923, baseType: !1359, size: 64, offset: 320)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !52, line: 1822, size: 2048, elements: !1362)
!1362 = !{!1363, !1364, !1368, !1373, !1377, !1437, !1438, !1442, !1455, !1456, !1464, !1468, !1469, !1473, !1474, !1478, !1483, !1484, !1488, !1492, !1606, !1610, !1614, !1618, !1619, !1623, !1627, !1632, !1636, !1640, !1644, !1648}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1361, file: !52, line: 1823, baseType: !702, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1361, file: !52, line: 1824, baseType: !1365, size: 64, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!674, !1335, !674, !182}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1361, file: !52, line: 1825, baseType: !1369, size: 64, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!1296, !1335, !636, !1108, !1372}
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1361, file: !52, line: 1826, baseType: !1374, size: 64, offset: 192)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{!1296, !1335, !610, !1108, !1372}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1361, file: !52, line: 1827, baseType: !1378, size: 64, offset: 256)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{!1296, !1381, !1403}
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !52, line: 320, size: 384, elements: !1383)
!1383 = !{!1384, !1385, !1386, !1390, !1391, !1392, !1395, !1396}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1382, file: !52, line: 321, baseType: !1335, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1382, file: !52, line: 326, baseType: !674, size: 64, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1382, file: !52, line: 327, baseType: !1387, size: 64, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{null, !1381, !202, !202}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1382, file: !52, line: 328, baseType: !204, size: 64, offset: 192)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1382, file: !52, line: 329, baseType: !182, size: 32, offset: 256)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1382, file: !52, line: 330, baseType: !1393, size: 16, offset: 288)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !7, line: 19, baseType: !1394)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !9, line: 24, baseType: !268)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1382, file: !52, line: 331, baseType: !1393, size: 16, offset: 304)
!1396 = !DIDerivedType(tag: DW_TAG_member, scope: !1382, file: !52, line: 332, baseType: !1397, size: 64, offset: 320)
!1397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1382, file: !52, line: 332, size: 64, elements: !1398)
!1398 = !{!1399, !1400}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1397, file: !52, line: 333, baseType: !15, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1397, file: !52, line: 334, baseType: !1401, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !52, line: 334, flags: DIFlagFwdDecl)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1173, line: 29, size: 320, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409, !1428}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1404, file: !1173, line: 35, baseType: !15, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1404, file: !1173, line: 36, baseType: !1108, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1404, file: !1173, line: 37, baseType: !1108, size: 64, offset: 128)
!1409 = !DIDerivedType(tag: DW_TAG_member, scope: !1404, file: !1173, line: 38, baseType: !1410, size: 64, offset: 192)
!1410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1404, file: !1173, line: 38, size: 64, elements: !1411)
!1411 = !{!1412, !1420, !1421, !1425}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1410, file: !1173, line: 39, baseType: !1413, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1416, line: 17, size: 128, elements: !1417)
!1416 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1417 = !{!1418, !1419}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1415, file: !1416, line: 19, baseType: !204, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1415, file: !1416, line: 20, baseType: !1109, size: 64, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1410, file: !1173, line: 40, baseType: !1170, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1410, file: !1173, line: 41, baseType: !1422, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1424)
!1424 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1173, line: 41, flags: DIFlagFwdDecl)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1410, file: !1173, line: 42, baseType: !1426, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !190, line: 53, flags: DIFlagFwdDecl)
!1428 = !DIDerivedType(tag: DW_TAG_member, scope: !1404, file: !1173, line: 44, baseType: !1429, size: 64, offset: 256)
!1429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1404, file: !1173, line: 44, size: 64, elements: !1430)
!1430 = !{!1431, !1432}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1429, file: !1173, line: 45, baseType: !186, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, scope: !1429, file: !1173, line: 46, baseType: !1433, size: 64)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1429, file: !1173, line: 46, size: 64, elements: !1434)
!1434 = !{!1435, !1436}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1433, file: !1173, line: 47, baseType: !15, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1433, file: !1173, line: 48, baseType: !15, size: 32, offset: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1361, file: !52, line: 1828, baseType: !1378, size: 64, offset: 320)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1361, file: !52, line: 1829, baseType: !1439, size: 64, offset: 384)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!182, !1381, !655}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1361, file: !52, line: 1830, baseType: !1443, size: 64, offset: 448)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!182, !1335, !1446}
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !52, line: 1776, size: 128, elements: !1448)
!1448 = !{!1449, !1454}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1447, file: !52, line: 1777, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !52, line: 1773, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!182, !1446, !610, !182, !674, !250, !15}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1447, file: !52, line: 1778, baseType: !674, size: 64, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1361, file: !52, line: 1831, baseType: !1443, size: 64, offset: 512)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1361, file: !52, line: 1832, baseType: !1457, size: 64, offset: 576)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!1460, !1335, !1462}
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1461, line: 52, baseType: !15)
!1461 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !688, line: 27, flags: DIFlagFwdDecl)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1361, file: !52, line: 1833, baseType: !1465, size: 64, offset: 640)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!202, !1335, !15, !186}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1361, file: !52, line: 1834, baseType: !1465, size: 64, offset: 704)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1361, file: !52, line: 1835, baseType: !1470, size: 64, offset: 768)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!182, !1335, !404}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1361, file: !52, line: 1836, baseType: !186, size: 64, offset: 832)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1361, file: !52, line: 1837, baseType: !1475, size: 64, offset: 896)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!182, !500, !1335}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1361, file: !52, line: 1838, baseType: !1479, size: 64, offset: 960)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!182, !1335, !1482}
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !52, line: 1007, baseType: !204)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1361, file: !52, line: 1839, baseType: !1475, size: 64, offset: 1024)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1361, file: !52, line: 1840, baseType: !1485, size: 64, offset: 1088)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!182, !1335, !674, !674, !182}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1361, file: !52, line: 1841, baseType: !1489, size: 64, offset: 1152)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!182, !182, !1335, !182}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1361, file: !52, line: 1842, baseType: !1493, size: 64, offset: 1216)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!182, !1335, !182, !1496}
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !52, line: 1062, size: 1664, elements: !1498)
!1498 = !{!1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1516, !1517, !1518, !1519, !1536, !1537, !1538, !1551, !1582}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1497, file: !52, line: 1063, baseType: !1496, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1497, file: !52, line: 1064, baseType: !243, size: 128, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1497, file: !52, line: 1065, baseType: !711, size: 128, offset: 192)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1497, file: !52, line: 1066, baseType: !243, size: 128, offset: 320)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1497, file: !52, line: 1069, baseType: !243, size: 128, offset: 448)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1497, file: !52, line: 1072, baseType: !1482, size: 64, offset: 576)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1497, file: !52, line: 1073, baseType: !15, size: 32, offset: 640)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1497, file: !52, line: 1074, baseType: !10, size: 8, offset: 672)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1497, file: !52, line: 1075, baseType: !15, size: 32, offset: 704)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1497, file: !52, line: 1076, baseType: !182, size: 32, offset: 736)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1497, file: !52, line: 1077, baseType: !1510, size: 128, offset: 768)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1511, line: 40, baseType: !1512)
!1511 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1511, line: 36, size: 128, elements: !1513)
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1512, file: !1511, line: 37, baseType: !581)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1512, file: !1511, line: 38, baseType: !243, size: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1497, file: !52, line: 1078, baseType: !1335, size: 64, offset: 896)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1497, file: !52, line: 1079, baseType: !674, size: 64, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1497, file: !52, line: 1080, baseType: !674, size: 64, offset: 1024)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1497, file: !52, line: 1082, baseType: !1520, size: 64, offset: 1088)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !52, line: 1314, size: 320, elements: !1522)
!1522 = !{!1523, !1531, !1532, !1533, !1534, !1535}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1521, file: !52, line: 1315, baseType: !1524)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1525, line: 20, baseType: !1526)
!1525 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1525, line: 11, elements: !1527)
!1527 = !{!1528}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1526, file: !1525, line: 12, baseType: !1529)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !322, line: 33, baseType: !1530)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !322, line: 31, elements: !259)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1521, file: !52, line: 1316, baseType: !182, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1521, file: !52, line: 1317, baseType: !182, size: 32, offset: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1521, file: !52, line: 1318, baseType: !1520, size: 64, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1521, file: !52, line: 1319, baseType: !1335, size: 64, offset: 128)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1521, file: !52, line: 1320, baseType: !1348, size: 128, align: 64, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1497, file: !52, line: 1084, baseType: !186, size: 64, offset: 1152)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1497, file: !52, line: 1085, baseType: !186, size: 64, offset: 1216)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1497, file: !52, line: 1087, baseType: !1539, size: 64, offset: 1280)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !52, line: 1011, size: 128, elements: !1542)
!1542 = !{!1543, !1547}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1541, file: !52, line: 1012, baseType: !1544, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{null, !1496, !1496}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1541, file: !52, line: 1013, baseType: !1548, size: 64, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{null, !1496}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1497, file: !52, line: 1088, baseType: !1552, size: 64, offset: 1344)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !52, line: 1016, size: 512, elements: !1555)
!1555 = !{!1556, !1560, !1564, !1565, !1569, !1573, !1577, !1581}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1554, file: !52, line: 1017, baseType: !1557, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!1482, !1482}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1554, file: !52, line: 1018, baseType: !1561, size: 64, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{null, !1482}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1554, file: !52, line: 1019, baseType: !1548, size: 64, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1554, file: !52, line: 1020, baseType: !1566, size: 64, offset: 192)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!182, !1496, !182}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1554, file: !52, line: 1021, baseType: !1570, size: 64, offset: 256)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!655, !1496}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1554, file: !52, line: 1022, baseType: !1574, size: 64, offset: 320)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!182, !1496, !182, !246}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1554, file: !52, line: 1023, baseType: !1578, size: 64, offset: 384)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{null, !1496, !1112}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1554, file: !52, line: 1024, baseType: !1570, size: 64, offset: 448)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1497, file: !52, line: 1097, baseType: !1583, size: 256, offset: 1408)
!1583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1497, file: !52, line: 1089, size: 256, elements: !1584)
!1584 = !{!1585, !1594, !1600}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1583, file: !52, line: 1090, baseType: !1586, size: 256)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1587, line: 10, size: 256, elements: !1588)
!1587 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1588 = !{!1589, !1590, !1593}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1586, file: !1587, line: 11, baseType: !198, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1586, file: !1587, line: 12, baseType: !1591, size: 64, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1587, line: 5, flags: DIFlagFwdDecl)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1586, file: !1587, line: 13, baseType: !243, size: 128, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1583, file: !52, line: 1091, baseType: !1595, size: 64)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1587, line: 17, size: 64, elements: !1596)
!1596 = !{!1597}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1595, file: !1587, line: 18, baseType: !1598, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1587, line: 16, flags: DIFlagFwdDecl)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1583, file: !52, line: 1096, baseType: !1601, size: 192)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1583, file: !52, line: 1092, size: 192, elements: !1602)
!1602 = !{!1603, !1604, !1605}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1601, file: !52, line: 1093, baseType: !243, size: 128)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1601, file: !52, line: 1094, baseType: !182, size: 32, offset: 128)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1601, file: !52, line: 1095, baseType: !15, size: 32, offset: 160)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1361, file: !52, line: 1843, baseType: !1607, size: 64, offset: 1280)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!1296, !1335, !484, !182, !1108, !1372, !182}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1361, file: !52, line: 1844, baseType: !1611, size: 64, offset: 1344)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DISubroutineType(types: !1613)
!1613 = !{!186, !1335, !186, !186, !186, !186}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1361, file: !52, line: 1845, baseType: !1615, size: 64, offset: 1408)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!182, !182}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1361, file: !52, line: 1846, baseType: !1493, size: 64, offset: 1472)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1361, file: !52, line: 1847, baseType: !1620, size: 64, offset: 1536)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{!1296, !1426, !1335, !1372, !1108, !15}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1361, file: !52, line: 1848, baseType: !1624, size: 64, offset: 1600)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!1296, !1335, !1372, !1426, !1108, !15}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1361, file: !52, line: 1849, baseType: !1628, size: 64, offset: 1664)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!182, !1335, !202, !1631, !1112}
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1361, file: !52, line: 1850, baseType: !1633, size: 64, offset: 1728)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{!202, !1335, !182, !674, !674}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1361, file: !52, line: 1852, baseType: !1637, size: 64, offset: 1792)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{null, !785, !1335}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1361, file: !52, line: 1856, baseType: !1641, size: 64, offset: 1856)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{!1296, !1335, !674, !1335, !674, !1108, !15}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1361, file: !52, line: 1858, baseType: !1645, size: 64, offset: 1920)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!674, !1335, !674, !1335, !674, !674, !15}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1361, file: !52, line: 1861, baseType: !1485, size: 64, offset: 1984)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1336, file: !52, line: 929, baseType: !581, offset: 384)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1336, file: !52, line: 930, baseType: !51, size: 32, offset: 384)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1336, file: !52, line: 931, baseType: !831, size: 64, offset: 448)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1336, file: !52, line: 932, baseType: !15, size: 32, offset: 512)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1336, file: !52, line: 933, baseType: !1654, size: 32, offset: 544)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !184, line: 150, baseType: !15)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1336, file: !52, line: 934, baseType: !827, size: 192, offset: 576)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1336, file: !52, line: 935, baseType: !674, size: 64, offset: 768)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1336, file: !52, line: 936, baseType: !1658, size: 192, offset: 832)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !52, line: 885, size: 192, elements: !1659)
!1659 = !{!1660, !1661, !1683, !1684, !1685, !1686}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1658, file: !52, line: 886, baseType: !1524)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1658, file: !52, line: 887, baseType: !1662, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !61, line: 59, size: 768, elements: !1664)
!1664 = !{!1665, !1666, !1667, !1668, !1672, !1673, !1674, !1675}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1663, file: !61, line: 61, baseType: !206, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1663, file: !61, line: 62, baseType: !15, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1663, file: !61, line: 63, baseType: !581, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1663, file: !61, line: 65, baseType: !1669, size: 256, offset: 64)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 256, elements: !1670)
!1670 = !{!1671}
!1671 = !DISubrange(count: 4)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1663, file: !61, line: 66, baseType: !707, size: 64, offset: 320)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1663, file: !61, line: 68, baseType: !1510, size: 128, offset: 384)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1663, file: !61, line: 69, baseType: !1348, size: 128, align: 64, offset: 512)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1663, file: !61, line: 70, baseType: !1676, size: 128, offset: 640)
!1676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1677, size: 128, elements: !389)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !61, line: 54, size: 128, elements: !1678)
!1678 = !{!1679, !1680}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1677, file: !61, line: 55, baseType: !182, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1677, file: !61, line: 56, baseType: !1681, size: 64, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !61, line: 56, flags: DIFlagFwdDecl)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1658, file: !52, line: 888, baseType: !60, size: 32, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1658, file: !52, line: 889, baseType: !507, size: 32, offset: 96)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1658, file: !52, line: 889, baseType: !507, size: 32, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1658, file: !52, line: 890, baseType: !182, size: 32, offset: 160)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1336, file: !52, line: 937, baseType: !1688, size: 64, offset: 1024)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1690)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1691, line: 111, size: 1280, elements: !1692)
!1691 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1692 = !{!1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1712, !1713, !1714, !1715, !1716, !1717, !1827, !1828, !1829, !1830, !1856, !1859, !1869}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1690, file: !1691, line: 112, baseType: !211, size: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1690, file: !1691, line: 120, baseType: !507, size: 32, offset: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1690, file: !1691, line: 121, baseType: !515, size: 32, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1690, file: !1691, line: 122, baseType: !507, size: 32, offset: 96)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1690, file: !1691, line: 123, baseType: !515, size: 32, offset: 128)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1690, file: !1691, line: 124, baseType: !507, size: 32, offset: 160)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1690, file: !1691, line: 125, baseType: !515, size: 32, offset: 192)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1690, file: !1691, line: 126, baseType: !507, size: 32, offset: 224)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1690, file: !1691, line: 127, baseType: !515, size: 32, offset: 256)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1690, file: !1691, line: 128, baseType: !15, size: 32, offset: 288)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1690, file: !1691, line: 129, baseType: !1704, size: 64, offset: 320)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1705, line: 26, baseType: !1706)
!1705 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1705, line: 24, size: 64, elements: !1707)
!1707 = !{!1708}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1706, file: !1705, line: 25, baseType: !1709, size: 64)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 64, elements: !1710)
!1710 = !{!1711}
!1711 = !DISubrange(count: 2)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1690, file: !1691, line: 130, baseType: !1704, size: 64, offset: 384)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1690, file: !1691, line: 131, baseType: !1704, size: 64, offset: 448)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1690, file: !1691, line: 132, baseType: !1704, size: 64, offset: 512)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1690, file: !1691, line: 133, baseType: !1704, size: 64, offset: 576)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1690, file: !1691, line: 135, baseType: !10, size: 8, offset: 640)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1690, file: !1691, line: 137, baseType: !1718, size: 64, offset: 704)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1720, line: 189, size: 1664, elements: !1721)
!1720 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1721 = !{!1722, !1723, !1728, !1733, !1734, !1737, !1738, !1743, !1744, !1745, !1746, !1748, !1749, !1750, !1752, !1753, !1791, !1812}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1719, file: !1720, line: 190, baseType: !206, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1719, file: !1720, line: 191, baseType: !1724, size: 32, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1720, line: 28, baseType: !1725)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !184, line: 98, baseType: !1726)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !7, line: 20, baseType: !1727)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !9, line: 26, baseType: !182)
!1728 = !DIDerivedType(tag: DW_TAG_member, scope: !1719, file: !1720, line: 192, baseType: !1729, size: 192, offset: 64)
!1729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1719, file: !1720, line: 192, size: 192, elements: !1730)
!1730 = !{!1731, !1732}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1729, file: !1720, line: 193, baseType: !243, size: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1729, file: !1720, line: 194, baseType: !235, size: 192, align: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1719, file: !1720, line: 199, baseType: !998, size: 256, offset: 256)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1719, file: !1720, line: 200, baseType: !1735, size: 64, offset: 512)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1720, line: 200, flags: DIFlagFwdDecl)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1719, file: !1720, line: 201, baseType: !204, size: 64, offset: 576)
!1738 = !DIDerivedType(tag: DW_TAG_member, scope: !1719, file: !1720, line: 202, baseType: !1739, size: 64, offset: 640)
!1739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1719, file: !1720, line: 202, size: 64, elements: !1740)
!1740 = !{!1741, !1742}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1739, file: !1720, line: 203, baseType: !872, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1739, file: !1720, line: 204, baseType: !872, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1719, file: !1720, line: 206, baseType: !872, size: 64, offset: 704)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1719, file: !1720, line: 207, baseType: !507, size: 32, offset: 768)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1719, file: !1720, line: 208, baseType: !515, size: 32, offset: 800)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1719, file: !1720, line: 209, baseType: !1747, size: 32, offset: 832)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1720, line: 31, baseType: !1031)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1719, file: !1720, line: 210, baseType: !268, size: 16, offset: 864)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1719, file: !1720, line: 211, baseType: !268, size: 16, offset: 880)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1719, file: !1720, line: 215, baseType: !1751, size: 16, offset: 896)
!1751 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1719, file: !1720, line: 222, baseType: !186, size: 64, offset: 960)
!1753 = !DIDerivedType(tag: DW_TAG_member, scope: !1719, file: !1720, line: 239, baseType: !1754, size: 320, offset: 1024)
!1754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1719, file: !1720, line: 239, size: 320, elements: !1755)
!1755 = !{!1756, !1783}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1754, file: !1720, line: 240, baseType: !1757, size: 320)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1720, line: 108, size: 320, elements: !1758)
!1758 = !{!1759, !1760, !1772, !1775, !1782}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1757, file: !1720, line: 110, baseType: !186, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, scope: !1757, file: !1720, line: 111, baseType: !1761, size: 64, offset: 64)
!1761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1757, file: !1720, line: 111, size: 64, elements: !1762)
!1762 = !{!1763, !1771}
!1763 = !DIDerivedType(tag: DW_TAG_member, scope: !1761, file: !1720, line: 112, baseType: !1764, size: 64)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1761, file: !1720, line: 112, size: 64, elements: !1765)
!1765 = !{!1766, !1767}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1764, file: !1720, line: 114, baseType: !1393, size: 16)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1764, file: !1720, line: 115, baseType: !1768, size: 48, offset: 16)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 48, elements: !1769)
!1769 = !{!1770}
!1770 = !DISubrange(count: 6)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1761, file: !1720, line: 121, baseType: !186, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1757, file: !1720, line: 123, baseType: !1773, size: 64, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1720, line: 96, flags: DIFlagFwdDecl)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1757, file: !1720, line: 124, baseType: !1776, size: 64, offset: 192)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1720, line: 102, size: 192, elements: !1778)
!1778 = !{!1779, !1780, !1781}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1777, file: !1720, line: 103, baseType: !1348, size: 128, align: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1777, file: !1720, line: 104, baseType: !206, size: 32, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1777, file: !1720, line: 105, baseType: !655, size: 8, offset: 160)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1757, file: !1720, line: 125, baseType: !610, size: 64, offset: 256)
!1783 = !DIDerivedType(tag: DW_TAG_member, scope: !1754, file: !1720, line: 241, baseType: !1784, size: 320)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1754, file: !1720, line: 241, size: 320, elements: !1785)
!1785 = !{!1786, !1787, !1788, !1789, !1790}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1784, file: !1720, line: 242, baseType: !186, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1784, file: !1720, line: 243, baseType: !186, size: 64, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1784, file: !1720, line: 244, baseType: !1773, size: 64, offset: 128)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1784, file: !1720, line: 245, baseType: !1776, size: 64, offset: 192)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1784, file: !1720, line: 246, baseType: !636, size: 64, offset: 256)
!1791 = !DIDerivedType(tag: DW_TAG_member, scope: !1719, file: !1720, line: 254, baseType: !1792, size: 256, offset: 1344)
!1792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1719, file: !1720, line: 254, size: 256, elements: !1793)
!1793 = !{!1794, !1800}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1792, file: !1720, line: 255, baseType: !1795, size: 256)
!1795 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1720, line: 128, size: 256, elements: !1796)
!1796 = !{!1797, !1798}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1795, file: !1720, line: 129, baseType: !204, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1795, file: !1720, line: 130, baseType: !1799, size: 256)
!1799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 256, elements: !1670)
!1800 = !DIDerivedType(tag: DW_TAG_member, scope: !1792, file: !1720, line: 256, baseType: !1801, size: 256)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1792, file: !1720, line: 256, size: 256, elements: !1802)
!1802 = !{!1803, !1804}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1801, file: !1720, line: 258, baseType: !243, size: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1801, file: !1720, line: 259, baseType: !1805, size: 128, offset: 128)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1806, line: 22, size: 128, elements: !1807)
!1806 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1807 = !{!1808, !1811}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1805, file: !1806, line: 23, baseType: !1809, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1806, line: 23, flags: DIFlagFwdDecl)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1805, file: !1806, line: 24, baseType: !186, size: 64, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1719, file: !1720, line: 274, baseType: !1813, size: 64, offset: 1600)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1720, line: 170, size: 192, elements: !1815)
!1815 = !{!1816, !1825, !1826}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1814, file: !1720, line: 171, baseType: !1817, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1720, line: 165, baseType: !1818)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!182, !1718, !1821, !1823, !1718}
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1774)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1795)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1814, file: !1720, line: 172, baseType: !1718, size: 64, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1814, file: !1720, line: 173, baseType: !1773, size: 64, offset: 128)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1690, file: !1691, line: 138, baseType: !1718, size: 64, offset: 768)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1690, file: !1691, line: 139, baseType: !1718, size: 64, offset: 832)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1690, file: !1691, line: 140, baseType: !1718, size: 64, offset: 896)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1690, file: !1691, line: 145, baseType: !1831, size: 64, offset: 960)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1833, line: 13, size: 896, elements: !1834)
!1833 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1834 = !{!1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1832, file: !1833, line: 14, baseType: !206, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1832, file: !1833, line: 15, baseType: !211, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1832, file: !1833, line: 16, baseType: !211, size: 32, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1832, file: !1833, line: 21, baseType: !831, size: 64, offset: 128)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1832, file: !1833, line: 27, baseType: !186, size: 64, offset: 192)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1832, file: !1833, line: 28, baseType: !186, size: 64, offset: 256)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1832, file: !1833, line: 29, baseType: !831, size: 64, offset: 320)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1832, file: !1833, line: 32, baseType: !711, size: 128, offset: 384)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1832, file: !1833, line: 33, baseType: !507, size: 32, offset: 512)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1832, file: !1833, line: 37, baseType: !831, size: 64, offset: 576)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1832, file: !1833, line: 44, baseType: !1846, size: 256, offset: 640)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1847, line: 15, size: 256, elements: !1848)
!1847 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1848 = !{!1849, !1850, !1851, !1852, !1853, !1854, !1855}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1846, file: !1847, line: 16, baseType: !316)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1846, file: !1847, line: 18, baseType: !182, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1846, file: !1847, line: 19, baseType: !182, size: 32, offset: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1846, file: !1847, line: 20, baseType: !182, size: 32, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1846, file: !1847, line: 21, baseType: !182, size: 32, offset: 96)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1846, file: !1847, line: 22, baseType: !186, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1846, file: !1847, line: 23, baseType: !186, size: 64, offset: 192)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1690, file: !1691, line: 146, baseType: !1857, size: 64, offset: 1024)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !508, line: 18, flags: DIFlagFwdDecl)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1690, file: !1691, line: 147, baseType: !1860, size: 64, offset: 1088)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1691, line: 25, size: 64, elements: !1862)
!1862 = !{!1863, !1864, !1865}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1861, file: !1691, line: 26, baseType: !211, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1861, file: !1691, line: 27, baseType: !182, size: 32, offset: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1861, file: !1691, line: 28, baseType: !1866, offset: 64)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, elements: !1867)
!1867 = !{!1868}
!1868 = !DISubrange(count: 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, scope: !1690, file: !1691, line: 149, baseType: !1870, size: 128, offset: 1152)
!1870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1690, file: !1691, line: 149, size: 128, elements: !1871)
!1871 = !{!1872, !1873}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1870, file: !1691, line: 150, baseType: !182, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1870, file: !1691, line: 151, baseType: !1348, size: 128, align: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1336, file: !52, line: 938, baseType: !1875, size: 256, offset: 1088)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !52, line: 896, size: 256, elements: !1876)
!1876 = !{!1877, !1878, !1879, !1880, !1881, !1882}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1875, file: !52, line: 897, baseType: !186, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1875, file: !52, line: 898, baseType: !15, size: 32, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !1875, file: !52, line: 899, baseType: !15, size: 32, offset: 96)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1875, file: !52, line: 902, baseType: !15, size: 32, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !1875, file: !52, line: 903, baseType: !15, size: 32, offset: 160)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !1875, file: !52, line: 904, baseType: !674, size: 64, offset: 192)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1336, file: !52, line: 940, baseType: !250, size: 64, offset: 1344)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1336, file: !52, line: 945, baseType: !204, size: 64, offset: 1408)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1336, file: !52, line: 949, baseType: !243, size: 128, offset: 1472)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1336, file: !52, line: 950, baseType: !243, size: 128, offset: 1600)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1336, file: !52, line: 952, baseType: !496, size: 64, offset: 1728)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1336, file: !52, line: 953, baseType: !1889, size: 32, offset: 1792)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1890, line: 8, baseType: !198)
!1890 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1336, file: !52, line: 954, baseType: !1889, size: 32, offset: 1824)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1326, file: !1290, line: 174, baseType: !1332, size: 64, offset: 320)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1326, file: !1290, line: 176, baseType: !1894, size: 64, offset: 384)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{!182, !1335, !1235, !1325, !404}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1314, file: !1290, line: 90, baseType: !1309, size: 64, offset: 192)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !1314, file: !1290, line: 91, baseType: !1899, size: 64, offset: 256)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !1280, file: !1230, line: 143, baseType: !1901, size: 64, offset: 256)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DISubroutineType(types: !1903)
!1903 = !{!1904, !1235}
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1906)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !69, line: 39, size: 384, elements: !1907)
!1907 = !{!1908, !1909, !1913, !1917, !1925, !1929}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1906, file: !69, line: 40, baseType: !68, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !1906, file: !69, line: 41, baseType: !1910, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!655}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !1906, file: !69, line: 42, baseType: !1914, size: 64, offset: 128)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DISubroutineType(types: !1916)
!1916 = !{!204}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !1906, file: !69, line: 43, baseType: !1918, size: 64, offset: 192)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DISubroutineType(types: !1920)
!1920 = !{!1921, !1923}
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !69, line: 19, flags: DIFlagFwdDecl)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !1906, file: !69, line: 44, baseType: !1926, size: 64, offset: 256)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!1921}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !1906, file: !69, line: 45, baseType: !1930, size: 64, offset: 320)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{null, !204}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1280, file: !1230, line: 144, baseType: !1934, size: 64, offset: 320)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!1921, !1235}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1280, file: !1230, line: 145, baseType: !1938, size: 64, offset: 384)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{null, !1235, !1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1229, file: !1230, line: 70, baseType: !1944, size: 64, offset: 384)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !688, line: 123, size: 1024, elements: !1946)
!1946 = !{!1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !2081, !2082, !2083, !2084, !2085}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1945, file: !688, line: 124, baseType: !211, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1945, file: !688, line: 125, baseType: !211, size: 32, offset: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1945, file: !688, line: 135, baseType: !1944, size: 64, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1945, file: !688, line: 136, baseType: !610, size: 64, offset: 128)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1945, file: !688, line: 138, baseType: !235, size: 192, align: 64, offset: 192)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1945, file: !688, line: 140, baseType: !1921, size: 64, offset: 384)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1945, file: !688, line: 141, baseType: !15, size: 32, offset: 448)
!1954 = !DIDerivedType(tag: DW_TAG_member, scope: !1945, file: !688, line: 142, baseType: !1955, size: 256, offset: 512)
!1955 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1945, file: !688, line: 142, size: 256, elements: !1956)
!1956 = !{!1957, !2009, !2013}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1955, file: !688, line: 143, baseType: !1958, size: 192)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !688, line: 91, size: 192, elements: !1959)
!1959 = !{!1960, !1961, !1962}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !1958, file: !688, line: 92, baseType: !186, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1958, file: !688, line: 94, baseType: !362, size: 64, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1958, file: !688, line: 100, baseType: !1963, size: 64, offset: 128)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !688, line: 180, size: 704, elements: !1965)
!1965 = !{!1966, !1967, !1968, !1981, !1982, !1983, !2007, !2008}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1964, file: !688, line: 182, baseType: !1944, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1964, file: !688, line: 183, baseType: !15, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !1964, file: !688, line: 186, baseType: !1969, size: 192, offset: 128)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1970, line: 19, size: 192, elements: !1971)
!1970 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1971 = !{!1972, !1979, !1980}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1969, file: !1970, line: 20, baseType: !1973, size: 128)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1974, line: 292, size: 128, elements: !1975)
!1974 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1975 = !{!1976, !1977, !1978}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1973, file: !1974, line: 293, baseType: !581)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1973, file: !1974, line: 295, baseType: !183, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1973, file: !1974, line: 296, baseType: !204, size: 64, offset: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1969, file: !1970, line: 21, baseType: !15, size: 32, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1969, file: !1970, line: 22, baseType: !15, size: 32, offset: 160)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !1964, file: !688, line: 187, baseType: !198, size: 32, offset: 320)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !1964, file: !688, line: 188, baseType: !198, size: 32, offset: 352)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !1964, file: !688, line: 189, baseType: !1984, size: 64, offset: 384)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !688, line: 168, size: 320, elements: !1986)
!1986 = !{!1987, !1991, !1995, !1999, !2003}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1985, file: !688, line: 169, baseType: !1988, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!182, !785, !1963}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1985, file: !688, line: 171, baseType: !1992, size: 64, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!182, !1944, !610, !504}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1985, file: !688, line: 173, baseType: !1996, size: 64, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{!182, !1944}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1985, file: !688, line: 174, baseType: !2000, size: 64, offset: 192)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!182, !1944, !1944, !610}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1985, file: !688, line: 176, baseType: !2004, size: 64, offset: 256)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{!182, !785, !1944, !1963}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !1964, file: !688, line: 192, baseType: !243, size: 128, offset: 448)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !1964, file: !688, line: 194, baseType: !1510, size: 128, offset: 576)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1955, file: !688, line: 144, baseType: !2010, size: 64)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !688, line: 103, size: 64, elements: !2011)
!2011 = !{!2012}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !2010, file: !688, line: 104, baseType: !1944, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1955, file: !688, line: 145, baseType: !2014, size: 256)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !688, line: 107, size: 256, elements: !2015)
!2015 = !{!2016, !2076, !2079, !2080}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2014, file: !688, line: 108, baseType: !2017, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2019)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !688, line: 217, size: 768, elements: !2020)
!2020 = !{!2021, !2041, !2045, !2049, !2053, !2057, !2061, !2065, !2066, !2067, !2068, !2072}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2019, file: !688, line: 222, baseType: !2022, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{!182, !2025}
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !688, line: 197, size: 1088, elements: !2027)
!2027 = !{!2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2026, file: !688, line: 199, baseType: !1944, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2026, file: !688, line: 200, baseType: !1335, size: 64, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !2026, file: !688, line: 201, baseType: !785, size: 64, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2026, file: !688, line: 202, baseType: !204, size: 64, offset: 192)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2026, file: !688, line: 205, baseType: !827, size: 192, offset: 256)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !2026, file: !688, line: 206, baseType: !827, size: 192, offset: 448)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2026, file: !688, line: 207, baseType: !182, size: 32, offset: 640)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2026, file: !688, line: 208, baseType: !243, size: 128, offset: 704)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !2026, file: !688, line: 209, baseType: !636, size: 64, offset: 832)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2026, file: !688, line: 211, baseType: !1108, size: 64, offset: 896)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !2026, file: !688, line: 212, baseType: !655, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !2026, file: !688, line: 213, baseType: !655, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2026, file: !688, line: 214, baseType: !433, size: 64, offset: 1024)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2019, file: !688, line: 223, baseType: !2042, size: 64, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{null, !2025}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !2019, file: !688, line: 236, baseType: !2046, size: 64, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{!182, !785, !204}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !2019, file: !688, line: 238, baseType: !2050, size: 64, offset: 192)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{!204, !785, !1372}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !2019, file: !688, line: 239, baseType: !2054, size: 64, offset: 256)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DISubroutineType(types: !2056)
!2056 = !{!204, !785, !204, !1372}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !2019, file: !688, line: 240, baseType: !2058, size: 64, offset: 320)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{null, !785, !204}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2019, file: !688, line: 242, baseType: !2062, size: 64, offset: 384)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = !DISubroutineType(types: !2064)
!2064 = !{!1296, !2025, !636, !1108, !674}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2019, file: !688, line: 252, baseType: !1108, size: 64, offset: 448)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !2019, file: !688, line: 259, baseType: !655, size: 8, offset: 512)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2019, file: !688, line: 260, baseType: !2062, size: 64, offset: 576)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2019, file: !688, line: 263, baseType: !2069, size: 64, offset: 640)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{!1460, !2025, !1462}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2019, file: !688, line: 266, baseType: !2073, size: 64, offset: 704)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!182, !2025, !404}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2014, file: !688, line: 109, baseType: !2077, size: 64, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !688, line: 31, flags: DIFlagFwdDecl)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2014, file: !688, line: 110, baseType: !674, size: 64, offset: 128)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !2014, file: !688, line: 111, baseType: !1944, size: 64, offset: 192)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1945, file: !688, line: 148, baseType: !204, size: 64, offset: 768)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1945, file: !688, line: 154, baseType: !250, size: 64, offset: 832)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1945, file: !688, line: 156, baseType: !268, size: 16, offset: 896)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1945, file: !688, line: 157, baseType: !504, size: 16, offset: 912)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !1945, file: !688, line: 158, baseType: !2086, size: 64, offset: 960)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !688, line: 32, flags: DIFlagFwdDecl)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1229, file: !1230, line: 71, baseType: !2089, size: 32, offset: 448)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2090, line: 19, size: 32, elements: !2091)
!2090 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2091 = !{!2092}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2089, file: !2090, line: 20, baseType: !206, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1229, file: !1230, line: 75, baseType: !15, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1229, file: !1230, line: 76, baseType: !15, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1229, file: !1230, line: 77, baseType: !15, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1229, file: !1230, line: 78, baseType: !15, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1229, file: !1230, line: 79, baseType: !15, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1226, file: !81, line: 463, baseType: !2099, size: 64, offset: 512)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1226, file: !81, line: 465, baseType: !2101, size: 64, offset: 576)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !81, line: 36, flags: DIFlagFwdDecl)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1226, file: !81, line: 467, baseType: !610, size: 64, offset: 640)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1226, file: !81, line: 468, baseType: !2105, size: 64, offset: 704)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2107)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !81, line: 87, size: 384, elements: !2108)
!2108 = !{!2109, !2110, !2111, !2115, !2120, !2124}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2107, file: !81, line: 88, baseType: !610, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2107, file: !81, line: 89, baseType: !1311, size: 64, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2107, file: !81, line: 90, baseType: !2112, size: 64, offset: 128)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!182, !2099, !1263}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2107, file: !81, line: 91, baseType: !2116, size: 64, offset: 192)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!636, !2099, !2119, !1941, !1942}
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2107, file: !81, line: 93, baseType: !2121, size: 64, offset: 256)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{null, !2099}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2107, file: !81, line: 95, baseType: !2125, size: 64, offset: 320)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2127)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !88, line: 278, size: 1472, elements: !2128)
!2128 = !{!2129, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !2127, file: !88, line: 279, baseType: !2130, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!182, !2099}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2127, file: !88, line: 280, baseType: !2121, size: 64, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2127, file: !88, line: 281, baseType: !2130, size: 64, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2127, file: !88, line: 282, baseType: !2130, size: 64, offset: 192)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !2127, file: !88, line: 283, baseType: !2130, size: 64, offset: 256)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !2127, file: !88, line: 284, baseType: !2130, size: 64, offset: 320)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !2127, file: !88, line: 285, baseType: !2130, size: 64, offset: 384)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !2127, file: !88, line: 286, baseType: !2130, size: 64, offset: 448)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !2127, file: !88, line: 287, baseType: !2130, size: 64, offset: 512)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !2127, file: !88, line: 288, baseType: !2130, size: 64, offset: 576)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !2127, file: !88, line: 289, baseType: !2130, size: 64, offset: 640)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !2127, file: !88, line: 290, baseType: !2130, size: 64, offset: 704)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !2127, file: !88, line: 291, baseType: !2130, size: 64, offset: 768)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !2127, file: !88, line: 292, baseType: !2130, size: 64, offset: 832)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !2127, file: !88, line: 293, baseType: !2130, size: 64, offset: 896)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !2127, file: !88, line: 294, baseType: !2130, size: 64, offset: 960)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !2127, file: !88, line: 295, baseType: !2130, size: 64, offset: 1024)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !2127, file: !88, line: 296, baseType: !2130, size: 64, offset: 1088)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !2127, file: !88, line: 297, baseType: !2130, size: 64, offset: 1152)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !2127, file: !88, line: 298, baseType: !2130, size: 64, offset: 1216)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !2127, file: !88, line: 299, baseType: !2130, size: 64, offset: 1280)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !2127, file: !88, line: 300, baseType: !2130, size: 64, offset: 1344)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !2127, file: !88, line: 301, baseType: !2130, size: 64, offset: 1408)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1226, file: !81, line: 470, baseType: !2156, size: 64, offset: 768)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !2158, line: 82, size: 1408, elements: !2159)
!2158 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!2159 = !{!2160, !2161, !2162, !2163, !2164, !2165, !2166, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2242, !2245, !2246}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2157, file: !2158, line: 83, baseType: !610, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2157, file: !2158, line: 84, baseType: !610, size: 64, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !2157, file: !2158, line: 85, baseType: !2099, size: 64, offset: 128)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !2157, file: !2158, line: 86, baseType: !1311, size: 64, offset: 192)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2157, file: !2158, line: 87, baseType: !1311, size: 64, offset: 256)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !2157, file: !2158, line: 88, baseType: !1311, size: 64, offset: 320)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !2157, file: !2158, line: 90, baseType: !2167, size: 64, offset: 384)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!182, !2099, !2170}
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !75, line: 95, size: 1152, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2176, !2177, !2178, !2179, !2193, !2206, !2207, !2208, !2209, !2210, !2218, !2219, !2220, !2221, !2222, !2223}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2171, file: !75, line: 96, baseType: !610, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2171, file: !75, line: 97, baseType: !2156, size: 64, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2171, file: !75, line: 99, baseType: !702, size: 64, offset: 128)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !2171, file: !75, line: 100, baseType: !610, size: 64, offset: 192)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !2171, file: !75, line: 102, baseType: !655, size: 8, offset: 256)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !2171, file: !75, line: 103, baseType: !74, size: 32, offset: 288)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !2171, file: !75, line: 105, baseType: !2180, size: 64, offset: 320)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2182)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !2183, line: 262, size: 1600, elements: !2184)
!2183 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!2184 = !{!2185, !2187, !2188, !2192}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2182, file: !2183, line: 263, baseType: !2186, size: 256)
!2186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 256, elements: !568)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2182, file: !2183, line: 264, baseType: !2186, size: 256, offset: 256)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !2182, file: !2183, line: 265, baseType: !2189, size: 1024, offset: 512)
!2189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 1024, elements: !2190)
!2190 = !{!2191}
!2191 = !DISubrange(count: 128)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2182, file: !2183, line: 266, baseType: !1921, size: 64, offset: 1536)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !2171, file: !75, line: 106, baseType: !2194, size: 64, offset: 384)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2196)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !2183, line: 210, size: 256, elements: !2197)
!2197 = !{!2198, !2202, !2204, !2205}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2196, file: !2183, line: 211, baseType: !2199, size: 72)
!2199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 72, elements: !2200)
!2200 = !{!2201}
!2201 = !DISubrange(count: 9)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2196, file: !2183, line: 212, baseType: !2203, size: 64, offset: 128)
!2203 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !2183, line: 14, baseType: !186)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !2196, file: !2183, line: 213, baseType: !199, size: 32, offset: 192)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !2196, file: !2183, line: 214, baseType: !199, size: 32, offset: 224)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2171, file: !75, line: 108, baseType: !2130, size: 64, offset: 448)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2171, file: !75, line: 109, baseType: !2121, size: 64, offset: 512)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2171, file: !75, line: 110, baseType: !2130, size: 64, offset: 576)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2171, file: !75, line: 111, baseType: !2121, size: 64, offset: 640)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2171, file: !75, line: 112, baseType: !2211, size: 64, offset: 704)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{!182, !2099, !2214}
!2214 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !88, line: 52, baseType: !2215)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !88, line: 50, size: 32, elements: !2216)
!2216 = !{!2217}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2215, file: !88, line: 51, baseType: !182, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2171, file: !75, line: 113, baseType: !2130, size: 64, offset: 768)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2171, file: !75, line: 114, baseType: !1311, size: 64, offset: 832)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2171, file: !75, line: 115, baseType: !1311, size: 64, offset: 896)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2171, file: !75, line: 117, baseType: !2125, size: 64, offset: 960)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !2171, file: !75, line: 118, baseType: !2121, size: 64, offset: 1024)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2171, file: !75, line: 120, baseType: !2224, size: 64, offset: 1088)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !75, line: 120, flags: DIFlagFwdDecl)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2157, file: !2158, line: 91, baseType: !2112, size: 64, offset: 448)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2157, file: !2158, line: 92, baseType: !2130, size: 64, offset: 512)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2157, file: !2158, line: 93, baseType: !2121, size: 64, offset: 576)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2157, file: !2158, line: 94, baseType: !2130, size: 64, offset: 640)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2157, file: !2158, line: 95, baseType: !2121, size: 64, offset: 704)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !2157, file: !2158, line: 97, baseType: !2130, size: 64, offset: 768)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !2157, file: !2158, line: 98, baseType: !2130, size: 64, offset: 832)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2157, file: !2158, line: 100, baseType: !2211, size: 64, offset: 896)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2157, file: !2158, line: 101, baseType: !2130, size: 64, offset: 960)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !2157, file: !2158, line: 103, baseType: !2130, size: 64, offset: 1024)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !2157, file: !2158, line: 105, baseType: !2130, size: 64, offset: 1088)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2157, file: !2158, line: 107, baseType: !2125, size: 64, offset: 1152)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !2157, file: !2158, line: 109, baseType: !2239, size: 64, offset: 1216)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2241)
!2241 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !2158, line: 109, flags: DIFlagFwdDecl)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2157, file: !2158, line: 111, baseType: !2243, size: 64, offset: 1280)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !2158, line: 111, flags: DIFlagFwdDecl)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !2157, file: !2158, line: 112, baseType: !717, offset: 1344)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !2157, file: !2158, line: 114, baseType: !655, size: 8, offset: 1344)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1226, file: !81, line: 471, baseType: !2170, size: 64, offset: 832)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1226, file: !81, line: 473, baseType: !204, size: 64, offset: 896)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1226, file: !81, line: 475, baseType: !204, size: 64, offset: 960)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1226, file: !81, line: 480, baseType: !827, size: 192, offset: 1024)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1226, file: !81, line: 484, baseType: !2252, size: 576, offset: 1216)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !81, line: 361, size: 576, elements: !2253)
!2253 = !{!2254, !2255, !2256, !2257, !2258, !2259}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !2252, file: !81, line: 362, baseType: !243, size: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !2252, file: !81, line: 363, baseType: !243, size: 128, offset: 128)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !2252, file: !81, line: 364, baseType: !243, size: 128, offset: 256)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !2252, file: !81, line: 365, baseType: !243, size: 128, offset: 384)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !2252, file: !81, line: 366, baseType: !655, size: 8, offset: 512)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2252, file: !81, line: 367, baseType: !80, size: 32, offset: 544)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1226, file: !81, line: 485, baseType: !2261, size: 2304, offset: 1792)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !88, line: 565, size: 2304, elements: !2262)
!2262 = !{!2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2288, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2379, !2383}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !2261, file: !88, line: 566, baseType: !2214, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !2261, file: !88, line: 567, baseType: !15, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !2261, file: !88, line: 568, baseType: !15, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !2261, file: !88, line: 569, baseType: !655, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !2261, file: !88, line: 570, baseType: !655, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !2261, file: !88, line: 571, baseType: !655, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !2261, file: !88, line: 572, baseType: !655, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !2261, file: !88, line: 573, baseType: !655, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !2261, file: !88, line: 574, baseType: !655, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !2261, file: !88, line: 575, baseType: !655, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !2261, file: !88, line: 576, baseType: !655, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !2261, file: !88, line: 577, baseType: !198, size: 32, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2261, file: !88, line: 578, baseType: !581, offset: 96)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2261, file: !88, line: 580, baseType: !243, size: 128, offset: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2261, file: !88, line: 581, baseType: !2278, size: 192, offset: 256)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2279, line: 26, size: 192, elements: !2280)
!2279 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2280 = !{!2281, !2282}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2278, file: !2279, line: 27, baseType: !15, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2278, file: !2279, line: 28, baseType: !2283, size: 128, offset: 64)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2284, line: 43, size: 128, elements: !2285)
!2284 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2285 = !{!2286, !2287}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2283, file: !2284, line: 44, baseType: !316)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2283, file: !2284, line: 45, baseType: !243, size: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !2261, file: !88, line: 582, baseType: !2289, size: 64, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 64)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !2291, line: 43, size: 1472, elements: !2292)
!2291 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!2292 = !{!2293, !2294, !2295, !2296, !2297, !2300, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2290, file: !2291, line: 44, baseType: !610, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2290, file: !2291, line: 45, baseType: !182, size: 32, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2290, file: !2291, line: 46, baseType: !243, size: 128, offset: 128)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2290, file: !2291, line: 47, baseType: !581, offset: 256)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2290, file: !2291, line: 48, baseType: !2298, size: 64, offset: 256)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64)
!2299 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !88, line: 533, flags: DIFlagFwdDecl)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2290, file: !2291, line: 49, baseType: !2301, size: 320, offset: 320)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2302, line: 11, size: 320, elements: !2303)
!2302 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2303 = !{!2304, !2305, !2306, !2311}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2301, file: !2302, line: 16, baseType: !711, size: 128)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2301, file: !2302, line: 17, baseType: !186, size: 64, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2301, file: !2302, line: 18, baseType: !2307, size: 64, offset: 192)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DISubroutineType(types: !2309)
!2309 = !{null, !2310}
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2301, file: !2302, line: 19, baseType: !198, size: 32, offset: 256)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2290, file: !2291, line: 50, baseType: !186, size: 64, offset: 640)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !2290, file: !2291, line: 51, baseType: !299, size: 64, offset: 704)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !2290, file: !2291, line: 52, baseType: !299, size: 64, offset: 768)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !2290, file: !2291, line: 53, baseType: !299, size: 64, offset: 832)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !2290, file: !2291, line: 54, baseType: !299, size: 64, offset: 896)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !2290, file: !2291, line: 55, baseType: !299, size: 64, offset: 960)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !2290, file: !2291, line: 56, baseType: !186, size: 64, offset: 1024)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !2290, file: !2291, line: 57, baseType: !186, size: 64, offset: 1088)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !2290, file: !2291, line: 58, baseType: !186, size: 64, offset: 1152)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !2290, file: !2291, line: 59, baseType: !186, size: 64, offset: 1216)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !2290, file: !2291, line: 60, baseType: !186, size: 64, offset: 1280)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2290, file: !2291, line: 61, baseType: !2099, size: 64, offset: 1344)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2290, file: !2291, line: 62, baseType: !655, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !2290, file: !2291, line: 63, baseType: !655, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !2261, file: !88, line: 583, baseType: !655, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !2261, file: !88, line: 584, baseType: !655, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !2261, file: !88, line: 585, baseType: !655, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !2261, file: !88, line: 586, baseType: !15, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !2261, file: !88, line: 587, baseType: !15, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !2261, file: !88, line: 592, baseType: !291, size: 512, offset: 576)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2261, file: !88, line: 593, baseType: !250, size: 64, offset: 1088)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2261, file: !88, line: 594, baseType: !2334, size: 256, offset: 1152)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2335, line: 102, size: 256, elements: !2336)
!2335 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2336 = !{!2337, !2338, !2339}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2334, file: !2335, line: 103, baseType: !831, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2334, file: !2335, line: 104, baseType: !243, size: 128, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2334, file: !2335, line: 105, baseType: !2340, size: 64, offset: 192)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2335, line: 21, baseType: !2341)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{null, !2344}
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !2261, file: !88, line: 595, baseType: !1510, size: 128, offset: 1408)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2261, file: !88, line: 596, baseType: !2298, size: 64, offset: 1536)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !2261, file: !88, line: 597, baseType: !211, size: 32, offset: 1600)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !2261, file: !88, line: 598, baseType: !211, size: 32, offset: 1632)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !2261, file: !88, line: 599, baseType: !15, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !2261, file: !88, line: 600, baseType: !15, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !2261, file: !88, line: 601, baseType: !15, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !2261, file: !88, line: 602, baseType: !15, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !2261, file: !88, line: 603, baseType: !15, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !2261, file: !88, line: 604, baseType: !655, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !2261, file: !88, line: 605, baseType: !15, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !2261, file: !88, line: 606, baseType: !15, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !2261, file: !88, line: 607, baseType: !15, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !2261, file: !88, line: 608, baseType: !15, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !2261, file: !88, line: 609, baseType: !15, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !2261, file: !88, line: 610, baseType: !15, size: 32, offset: 1696)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2261, file: !88, line: 611, baseType: !87, size: 32, offset: 1728)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !2261, file: !88, line: 612, baseType: !95, size: 32, offset: 1760)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !2261, file: !88, line: 613, baseType: !182, size: 32, offset: 1792)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !2261, file: !88, line: 614, baseType: !182, size: 32, offset: 1824)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !2261, file: !88, line: 615, baseType: !250, size: 64, offset: 1856)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !2261, file: !88, line: 616, baseType: !250, size: 64, offset: 1920)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !2261, file: !88, line: 617, baseType: !250, size: 64, offset: 1984)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !2261, file: !88, line: 618, baseType: !250, size: 64, offset: 2048)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !2261, file: !88, line: 620, baseType: !2370, size: 64, offset: 2112)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !88, line: 536, size: 256, elements: !2372)
!2372 = !{!2373, !2374, !2375, !2376}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2371, file: !88, line: 537, baseType: !581)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2371, file: !88, line: 538, baseType: !15, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !2371, file: !88, line: 540, baseType: !243, size: 128, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !2371, file: !88, line: 543, baseType: !2377, size: 64, offset: 192)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!2378 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !88, line: 534, flags: DIFlagFwdDecl)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !2261, file: !88, line: 621, baseType: !2380, size: 64, offset: 2176)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{null, !2099, !1726}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !2261, file: !88, line: 622, baseType: !2384, size: 64, offset: 2240)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !88, line: 622, flags: DIFlagFwdDecl)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1226, file: !81, line: 486, baseType: !2387, size: 64, offset: 4096)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !88, line: 642, size: 1792, elements: !2389)
!2389 = !{!2390, !2391, !2392, !2396, !2397, !2398}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2388, file: !88, line: 643, baseType: !2127, size: 1472)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2388, file: !88, line: 644, baseType: !2130, size: 64, offset: 1472)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !2388, file: !88, line: 645, baseType: !2393, size: 64, offset: 1536)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2394 = !DISubroutineType(types: !2395)
!2395 = !{null, !2099, !655}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !2388, file: !88, line: 646, baseType: !2130, size: 64, offset: 1600)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !2388, file: !88, line: 647, baseType: !2121, size: 64, offset: 1664)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !2388, file: !88, line: 648, baseType: !2121, size: 64, offset: 1728)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1226, file: !81, line: 493, baseType: !2400, size: 64, offset: 4160)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !81, line: 493, flags: DIFlagFwdDecl)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1226, file: !81, line: 499, baseType: !243, size: 128, offset: 4224)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1226, file: !81, line: 502, baseType: !2404, size: 64, offset: 4352)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2406)
!2406 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !81, line: 502, flags: DIFlagFwdDecl)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1226, file: !81, line: 504, baseType: !2408, size: 64, offset: 4416)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1226, file: !81, line: 505, baseType: !250, size: 64, offset: 4480)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1226, file: !81, line: 510, baseType: !250, size: 64, offset: 4544)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1226, file: !81, line: 511, baseType: !2412, size: 64, offset: 4608)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2414)
!2414 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !81, line: 511, flags: DIFlagFwdDecl)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1226, file: !81, line: 513, baseType: !2416, size: 64, offset: 4672)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !81, line: 288, size: 128, elements: !2418)
!2418 = !{!2419, !2420}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !2417, file: !81, line: 293, baseType: !15, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !2417, file: !81, line: 294, baseType: !186, size: 64, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1226, file: !81, line: 515, baseType: !243, size: 128, offset: 4736)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1226, file: !81, line: 526, baseType: !2423, offset: 4864)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !2424, line: 5, elements: !259)
!2424 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1226, file: !81, line: 528, baseType: !2426, size: 64, offset: 4864)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !2428, line: 51, size: 1344, elements: !2429)
!2428 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!2429 = !{!2430, !2431, !2433, !2434, !2524, !2533, !2534, !2535, !2536, !2537, !2538, !2539}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2427, file: !2428, line: 52, baseType: !610, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !2427, file: !2428, line: 53, baseType: !2432, size: 32, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !2428, line: 28, baseType: !198)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !2427, file: !2428, line: 54, baseType: !610, size: 64, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2427, file: !2428, line: 55, baseType: !2435, size: 192, offset: 192)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !2436, line: 17, size: 192, elements: !2437)
!2436 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!2437 = !{!2438, !2440, !2523}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !2435, file: !2436, line: 18, baseType: !2439, size: 64)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2435, file: !2436, line: 19, baseType: !2441, size: 64, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2443)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !2436, line: 110, size: 1152, elements: !2444)
!2444 = !{!2445, !2449, !2453, !2459, !2465, !2469, !2473, !2478, !2482, !2483, !2487, !2491, !2495, !2506, !2507, !2508, !2509, !2519}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2443, file: !2436, line: 111, baseType: !2446, size: 64)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!2439, !2439}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !2443, file: !2436, line: 112, baseType: !2450, size: 64, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{null, !2439}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !2443, file: !2436, line: 113, baseType: !2454, size: 64, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!655, !2457}
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2435)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !2443, file: !2436, line: 114, baseType: !2460, size: 64, offset: 192)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64)
!2461 = !DISubroutineType(types: !2462)
!2462 = !{!1921, !2457, !2463}
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1226)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !2443, file: !2436, line: 116, baseType: !2466, size: 64, offset: 256)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2467 = !DISubroutineType(types: !2468)
!2468 = !{!655, !2457, !610}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !2443, file: !2436, line: 118, baseType: !2470, size: 64, offset: 320)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{!182, !2457, !610, !15, !204, !1108}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !2443, file: !2436, line: 123, baseType: !2474, size: 64, offset: 384)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2475 = !DISubroutineType(types: !2476)
!2476 = !{!182, !2457, !610, !2477, !1108}
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !2443, file: !2436, line: 126, baseType: !2479, size: 64, offset: 448)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = !DISubroutineType(types: !2481)
!2481 = !{!610, !2457}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !2443, file: !2436, line: 127, baseType: !2479, size: 64, offset: 512)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !2443, file: !2436, line: 128, baseType: !2484, size: 64, offset: 576)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!2439, !2457}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !2443, file: !2436, line: 130, baseType: !2488, size: 64, offset: 640)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{!2439, !2457, !2439}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !2443, file: !2436, line: 133, baseType: !2492, size: 64, offset: 704)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!2439, !2457, !610}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !2443, file: !2436, line: 135, baseType: !2496, size: 64, offset: 768)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{!182, !2457, !610, !610, !15, !15, !2499}
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !2436, line: 43, size: 640, elements: !2501)
!2501 = !{!2502, !2503, !2504}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2500, file: !2436, line: 44, baseType: !2439, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !2500, file: !2436, line: 45, baseType: !15, size: 32, offset: 64)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2500, file: !2436, line: 46, baseType: !2505, size: 512, offset: 128)
!2505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 512, elements: !337)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !2443, file: !2436, line: 140, baseType: !2488, size: 64, offset: 832)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !2443, file: !2436, line: 143, baseType: !2484, size: 64, offset: 896)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !2443, file: !2436, line: 145, baseType: !2446, size: 64, offset: 960)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !2443, file: !2436, line: 146, baseType: !2510, size: 64, offset: 1024)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{!182, !2457, !2513}
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !2436, line: 29, size: 128, elements: !2515)
!2515 = !{!2516, !2517, !2518}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2514, file: !2436, line: 30, baseType: !15, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2514, file: !2436, line: 31, baseType: !15, size: 32, offset: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !2514, file: !2436, line: 32, baseType: !2457, size: 64, offset: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !2443, file: !2436, line: 148, baseType: !2520, size: 64, offset: 1088)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{!182, !2457, !2099}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2435, file: !2436, line: 20, baseType: !2099, size: 64, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2427, file: !2428, line: 57, baseType: !2525, size: 64, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !2428, line: 31, size: 704, elements: !2527)
!2527 = !{!2528, !2529, !2530, !2531, !2532}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2526, file: !2428, line: 32, baseType: !636, size: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2526, file: !2428, line: 33, baseType: !182, size: 32, offset: 64)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2526, file: !2428, line: 34, baseType: !204, size: 64, offset: 128)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2526, file: !2428, line: 35, baseType: !2525, size: 64, offset: 192)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2526, file: !2428, line: 43, baseType: !1326, size: 448, offset: 256)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !2427, file: !2428, line: 58, baseType: !2525, size: 64, offset: 448)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2427, file: !2428, line: 59, baseType: !2426, size: 64, offset: 512)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2427, file: !2428, line: 60, baseType: !2426, size: 64, offset: 576)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2427, file: !2428, line: 61, baseType: !2426, size: 64, offset: 640)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2427, file: !2428, line: 63, baseType: !1229, size: 512, offset: 704)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2427, file: !2428, line: 65, baseType: !186, size: 64, offset: 1216)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2427, file: !2428, line: 66, baseType: !204, size: 64, offset: 1280)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1226, file: !81, line: 529, baseType: !2439, size: 64, offset: 4928)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1226, file: !81, line: 534, baseType: !669, size: 32, offset: 4992)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1226, file: !81, line: 535, baseType: !198, size: 32, offset: 5024)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1226, file: !81, line: 537, baseType: !581, offset: 5056)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1226, file: !81, line: 538, baseType: !243, size: 128, offset: 5056)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1226, file: !81, line: 540, baseType: !2546, size: 64, offset: 5184)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !2548, line: 54, size: 960, elements: !2549)
!2548 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!2549 = !{!2550, !2551, !2552, !2553, !2554, !2555, !2556, !2560, !2564, !2565, !2566, !2567, !2571, !2575, !2576}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2547, file: !2548, line: 55, baseType: !610, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2547, file: !2548, line: 56, baseType: !702, size: 64, offset: 64)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !2547, file: !2548, line: 58, baseType: !1311, size: 64, offset: 128)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2547, file: !2548, line: 59, baseType: !1311, size: 64, offset: 192)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !2547, file: !2548, line: 60, baseType: !1235, size: 64, offset: 256)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !2547, file: !2548, line: 62, baseType: !2112, size: 64, offset: 320)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2547, file: !2548, line: 63, baseType: !2557, size: 64, offset: 384)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!636, !2099, !2119}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !2547, file: !2548, line: 65, baseType: !2561, size: 64, offset: 448)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{null, !2546}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !2547, file: !2548, line: 66, baseType: !2121, size: 64, offset: 512)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !2547, file: !2548, line: 68, baseType: !2130, size: 64, offset: 576)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !2547, file: !2548, line: 70, baseType: !1904, size: 64, offset: 640)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2547, file: !2548, line: 71, baseType: !2568, size: 64, offset: 704)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!1921, !2099}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2547, file: !2548, line: 73, baseType: !2572, size: 64, offset: 768)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64)
!2573 = !DISubroutineType(types: !2574)
!2574 = !{null, !2099, !1941, !1942}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2547, file: !2548, line: 75, baseType: !2125, size: 64, offset: 832)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2547, file: !2548, line: 77, baseType: !2243, size: 64, offset: 896)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1226, file: !81, line: 541, baseType: !1311, size: 64, offset: 5248)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1226, file: !81, line: 543, baseType: !2121, size: 64, offset: 5312)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1226, file: !81, line: 544, baseType: !2580, size: 64, offset: 5376)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !81, line: 45, flags: DIFlagFwdDecl)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1226, file: !81, line: 545, baseType: !2583, size: 64, offset: 5440)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64)
!2584 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !81, line: 47, flags: DIFlagFwdDecl)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1226, file: !81, line: 547, baseType: !655, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1226, file: !81, line: 548, baseType: !655, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1226, file: !81, line: 549, baseType: !655, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1226, file: !81, line: 550, baseType: !655, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "usecount", scope: !1025, file: !1026, line: 376, baseType: !182, size: 32, offset: 8832)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "dbg", scope: !1025, file: !1026, line: 377, baseType: !2591, size: 192, offset: 8896)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_debug_info", file: !1026, line: 191, size: 192, elements: !2592)
!2592 = !{!2593, !2594, !2595}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "dfs_dir", scope: !2591, file: !1026, line: 192, baseType: !531, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "partname", scope: !2591, file: !1026, line: 194, baseType: !610, size: 64, offset: 64)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "partid", scope: !2591, file: !1026, line: 195, baseType: !610, size: 64, offset: 128)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "nvmem", scope: !1025, file: !1026, line: 378, baseType: !2597, size: 64, offset: 9088)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DICompositeType(tag: DW_TAG_structure_type, name: "nvmem_device", file: !2599, line: 16, flags: DIFlagFwdDecl)
!2599 = !DIFile(filename: "./include/linux/nvmem-provider.h", directory: "/home/lizy2001/genbc/linux")
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1025, file: !1026, line: 386, baseType: !1024, size: 64, offset: 9152)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "partitions", scope: !1025, file: !1026, line: 389, baseType: !243, size: 128, offset: 9216)
!2602 = !DIDerivedType(tag: DW_TAG_member, scope: !1025, file: !1026, line: 391, baseType: !2603, size: 320, offset: 9344)
!2603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1025, file: !1026, line: 391, size: 320, elements: !2604)
!2604 = !{!2605, !2612}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2603, file: !1026, line: 392, baseType: !2606, size: 320)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_part", file: !1026, line: 211, size: 320, elements: !2607)
!2607 = !{!2608, !2609, !2610, !2611}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2606, file: !1026, line: 212, baseType: !243, size: 128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2606, file: !1026, line: 213, baseType: !250, size: 64, offset: 128)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2606, file: !1026, line: 214, baseType: !250, size: 64, offset: 192)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2606, file: !1026, line: 215, baseType: !198, size: 32, offset: 256)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !2603, file: !1026, line: 393, baseType: !2613, size: 256)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_master", file: !1026, line: 230, size: 256, elements: !2614)
!2614 = !{!2615, !2616}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "partitions_lock", scope: !2613, file: !1026, line: 231, baseType: !827, size: 192)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "suspended", scope: !2613, file: !1026, line: 232, baseType: !15, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !665, file: !52, line: 1454, baseType: !711, size: 128, offset: 1664)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !665, file: !52, line: 1455, baseType: !15, size: 32, offset: 1792)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !665, file: !52, line: 1456, baseType: !2620, size: 2432, offset: 1856)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !46, line: 518, size: 2432, elements: !2621)
!2621 = !{!2622, !2623, !2624, !2626, !2658}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2620, file: !46, line: 519, baseType: !15, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2620, file: !46, line: 520, baseType: !998, size: 256, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2620, file: !46, line: 521, baseType: !2625, size: 192, offset: 320)
!2625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !500, size: 192, elements: !723)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2620, file: !46, line: 522, baseType: !2627, size: 1728, offset: 512)
!2627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2628, size: 1728, elements: !723)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !46, line: 222, size: 576, elements: !2629)
!2629 = !{!2630, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2628, file: !46, line: 223, baseType: !2631, size: 64)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 64)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !46, line: 443, size: 256, elements: !2633)
!2633 = !{!2634, !2635, !2648, !2649}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2632, file: !46, line: 444, baseType: !182, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2632, file: !46, line: 445, baseType: !2636, size: 64, offset: 64)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2638)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !46, line: 310, size: 512, elements: !2639)
!2639 = !{!2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2638, file: !46, line: 311, baseType: !759, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2638, file: !46, line: 312, baseType: !759, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2638, file: !46, line: 313, baseType: !759, size: 64, offset: 128)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2638, file: !46, line: 314, baseType: !759, size: 64, offset: 192)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2638, file: !46, line: 315, baseType: !816, size: 64, offset: 256)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2638, file: !46, line: 316, baseType: !816, size: 64, offset: 320)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2638, file: !46, line: 317, baseType: !816, size: 64, offset: 384)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2638, file: !46, line: 318, baseType: !902, size: 64, offset: 448)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2632, file: !46, line: 446, baseType: !702, size: 64, offset: 128)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2632, file: !46, line: 447, baseType: !2631, size: 64, offset: 192)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2628, file: !46, line: 224, baseType: !182, size: 32, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2628, file: !46, line: 226, baseType: !243, size: 128, offset: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2628, file: !46, line: 227, baseType: !186, size: 64, offset: 256)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2628, file: !46, line: 228, baseType: !15, size: 32, offset: 320)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2628, file: !46, line: 229, baseType: !15, size: 32, offset: 352)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2628, file: !46, line: 230, baseType: !864, size: 64, offset: 384)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2628, file: !46, line: 231, baseType: !864, size: 64, offset: 448)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2628, file: !46, line: 232, baseType: !204, size: 64, offset: 512)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2620, file: !46, line: 523, baseType: !2659, size: 192, offset: 2240)
!2659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2636, size: 192, elements: !723)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !665, file: !52, line: 1458, baseType: !2661, size: 2112, offset: 4288)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !52, line: 1410, size: 2112, elements: !2662)
!2662 = !{!2663, !2664, !2665}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2661, file: !52, line: 1411, baseType: !182, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2661, file: !52, line: 1412, baseType: !1510, size: 128, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2661, file: !52, line: 1413, baseType: !2666, size: 1920, offset: 192)
!2666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2667, size: 1920, elements: !723)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2668, line: 12, size: 640, elements: !2669)
!2668 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2669 = !{!2670, !2678, !2680, !2685, !2686}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2667, file: !2668, line: 13, baseType: !2671, size: 320)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2672, line: 17, size: 320, elements: !2673)
!2672 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2673 = !{!2674, !2675, !2676, !2677}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2671, file: !2672, line: 18, baseType: !182, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2671, file: !2672, line: 19, baseType: !182, size: 32, offset: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2671, file: !2672, line: 20, baseType: !1510, size: 128, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2671, file: !2672, line: 22, baseType: !1348, size: 128, align: 64, offset: 192)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2667, file: !2668, line: 14, baseType: !2679, size: 64, offset: 320)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2667, file: !2668, line: 15, baseType: !2681, size: 64, offset: 384)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2682, line: 16, size: 64, elements: !2683)
!2682 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2683 = !{!2684}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2681, file: !2682, line: 17, baseType: !188, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2667, file: !2668, line: 16, baseType: !1510, size: 128, offset: 448)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2667, file: !2668, line: 17, baseType: !211, size: 32, offset: 576)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !665, file: !52, line: 1465, baseType: !204, size: 64, offset: 6400)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !665, file: !52, line: 1468, baseType: !198, size: 32, offset: 6464)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !665, file: !52, line: 1470, baseType: !872, size: 64, offset: 6528)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !665, file: !52, line: 1471, baseType: !872, size: 64, offset: 6592)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !665, file: !52, line: 1473, baseType: !199, size: 32, offset: 6656)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !665, file: !52, line: 1474, baseType: !2693, size: 64, offset: 6720)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 64)
!2694 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !52, line: 603, flags: DIFlagFwdDecl)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !665, file: !52, line: 1477, baseType: !2186, size: 256, offset: 6784)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !665, file: !52, line: 1478, baseType: !2697, size: 128, offset: 7040)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2698, line: 18, baseType: !2699)
!2698 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2698, line: 16, size: 128, elements: !2700)
!2700 = !{!2701}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2699, file: !2698, line: 17, baseType: !2702, size: 128)
!2702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !2703)
!2703 = !{!2704}
!2704 = !DISubrange(count: 16)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !665, file: !52, line: 1480, baseType: !15, size: 32, offset: 7168)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !665, file: !52, line: 1481, baseType: !1654, size: 32, offset: 7200)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !665, file: !52, line: 1487, baseType: !827, size: 192, offset: 7232)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !665, file: !52, line: 1493, baseType: !610, size: 64, offset: 7424)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !665, file: !52, line: 1495, baseType: !590, size: 64, offset: 7488)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !665, file: !52, line: 1500, baseType: !182, size: 32, offset: 7552)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !665, file: !52, line: 1502, baseType: !2712, size: 448, offset: 7616)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !800, line: 60, size: 448, elements: !2713)
!2713 = !{!2714, !2719, !2720, !2721, !2722, !2723, !2724}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2712, file: !800, line: 61, baseType: !2715, size: 64)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{!186, !2718, !798}
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2712, file: !800, line: 63, baseType: !2715, size: 64, offset: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2712, file: !800, line: 66, baseType: !202, size: 64, offset: 128)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2712, file: !800, line: 67, baseType: !182, size: 32, offset: 192)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2712, file: !800, line: 68, baseType: !15, size: 32, offset: 224)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2712, file: !800, line: 71, baseType: !243, size: 128, offset: 256)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2712, file: !800, line: 77, baseType: !2725, size: 64, offset: 384)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !665, file: !52, line: 1505, baseType: !831, size: 64, offset: 8064)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !665, file: !52, line: 1508, baseType: !831, size: 64, offset: 8128)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !665, file: !52, line: 1511, baseType: !182, size: 32, offset: 8192)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !665, file: !52, line: 1514, baseType: !1889, size: 32, offset: 8224)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !665, file: !52, line: 1517, baseType: !2731, size: 64, offset: 8256)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2335, line: 18, flags: DIFlagFwdDecl)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !665, file: !52, line: 1518, baseType: !707, size: 64, offset: 8320)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !665, file: !52, line: 1525, baseType: !1857, size: 64, offset: 8384)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !665, file: !52, line: 1532, baseType: !2736, size: 64, offset: 8448)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2737, line: 52, size: 64, elements: !2738)
!2737 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2738 = !{!2739}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2736, file: !2737, line: 53, baseType: !2740, size: 64)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2737, line: 40, size: 256, elements: !2742)
!2742 = !{!2743, !2744, !2749}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2741, file: !2737, line: 42, baseType: !581)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2741, file: !2737, line: 44, baseType: !2745, size: 192)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2737, line: 28, size: 192, elements: !2746)
!2746 = !{!2747, !2748}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2745, file: !2737, line: 29, baseType: !243, size: 128)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2745, file: !2737, line: 31, baseType: !202, size: 64, offset: 128)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2741, file: !2737, line: 49, baseType: !202, size: 64, offset: 192)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !665, file: !52, line: 1533, baseType: !2736, size: 64, offset: 8512)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !665, file: !52, line: 1534, baseType: !1348, size: 128, align: 64, offset: 8576)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !665, file: !52, line: 1535, baseType: !2334, size: 256, offset: 8704)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !665, file: !52, line: 1537, baseType: !827, size: 192, offset: 8960)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !665, file: !52, line: 1542, baseType: !182, size: 32, offset: 9152)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !665, file: !52, line: 1545, baseType: !581, offset: 9184)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !665, file: !52, line: 1546, baseType: !243, size: 128, offset: 9216)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !665, file: !52, line: 1548, baseType: !581, offset: 9344)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !665, file: !52, line: 1549, baseType: !243, size: 128, offset: 9344)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !532, file: !533, line: 104, baseType: !186, size: 64, offset: 896)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !532, file: !533, line: 105, baseType: !204, size: 64, offset: 960)
!2761 = !DIDerivedType(tag: DW_TAG_member, scope: !532, file: !533, line: 107, baseType: !2762, size: 128, offset: 1024)
!2762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !532, file: !533, line: 107, size: 128, elements: !2763)
!2763 = !{!2764, !2765}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !2762, file: !533, line: 108, baseType: !243, size: 128)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !2762, file: !533, line: 109, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !532, file: !533, line: 111, baseType: !243, size: 128, offset: 1152)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !532, file: !533, line: 112, baseType: !243, size: 128, offset: 1280)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !532, file: !533, line: 120, baseType: !2770, size: 128, offset: 1408)
!2770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !532, file: !533, line: 116, size: 128, elements: !2771)
!2771 = !{!2772, !2773, !2774}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !2770, file: !533, line: 117, baseType: !711, size: 128)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !2770, file: !533, line: 118, baseType: !542, size: 128)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !2770, file: !533, line: 119, baseType: !1348, size: 128, align: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !525, file: !52, line: 1866, baseType: !2776, size: 64, offset: 64)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!610, !531, !500, !2779}
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !2781, line: 10, size: 128, elements: !2782)
!2781 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!2782 = !{!2783, !2784}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2780, file: !2781, line: 11, baseType: !1930, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !2780, file: !2781, line: 12, baseType: !204, size: 64, offset: 64)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !525, file: !52, line: 1867, baseType: !2786, size: 64, offset: 128)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{!182, !500, !182}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !525, file: !52, line: 1868, baseType: !2790, size: 64, offset: 192)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{!2793, !500, !182}
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !52, line: 581, flags: DIFlagFwdDecl)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !525, file: !52, line: 1870, baseType: !2796, size: 64, offset: 256)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{!182, !531, !636, !182}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !525, file: !52, line: 1872, baseType: !2800, size: 64, offset: 320)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{!182, !500, !531, !504, !655}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !525, file: !52, line: 1873, baseType: !2804, size: 64, offset: 384)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DISubroutineType(types: !2806)
!2806 = !{!182, !531, !500, !531}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !525, file: !52, line: 1874, baseType: !2808, size: 64, offset: 448)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{!182, !500, !531}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !525, file: !52, line: 1875, baseType: !2812, size: 64, offset: 512)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!182, !500, !531, !610}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !525, file: !52, line: 1876, baseType: !2816, size: 64, offset: 576)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!182, !500, !531, !504}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !525, file: !52, line: 1877, baseType: !2808, size: 64, offset: 640)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !525, file: !52, line: 1878, baseType: !2821, size: 64, offset: 704)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!2822 = !DISubroutineType(types: !2823)
!2823 = !{!182, !500, !531, !504, !669}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !525, file: !52, line: 1879, baseType: !2825, size: 64, offset: 768)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 64)
!2826 = !DISubroutineType(types: !2827)
!2827 = !{!182, !500, !531, !500, !531, !15}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !525, file: !52, line: 1881, baseType: !2829, size: 64, offset: 832)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!182, !531, !2832}
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 64)
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !52, line: 219, size: 640, elements: !2834)
!2834 = !{!2835, !2836, !2837, !2838, !2839, !2840, !2845, !2846, !2847}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !2833, file: !52, line: 220, baseType: !15, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !2833, file: !52, line: 221, baseType: !504, size: 16, offset: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !2833, file: !52, line: 222, baseType: !507, size: 32, offset: 64)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !2833, file: !52, line: 223, baseType: !515, size: 32, offset: 96)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !2833, file: !52, line: 224, baseType: !674, size: 64, offset: 128)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !2833, file: !52, line: 225, baseType: !2841, size: 128, offset: 192)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !873, line: 13, size: 128, elements: !2842)
!2842 = !{!2843, !2844}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2841, file: !873, line: 14, baseType: !872, size: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2841, file: !873, line: 15, baseType: !202, size: 64, offset: 64)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !2833, file: !52, line: 226, baseType: !2841, size: 128, offset: 320)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !2833, file: !52, line: 227, baseType: !2841, size: 128, offset: 448)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !2833, file: !52, line: 234, baseType: !1335, size: 64, offset: 576)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !525, file: !52, line: 1882, baseType: !2849, size: 64, offset: 896)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!182, !653, !2852, !198, !15}
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !2854, line: 22, size: 1152, elements: !2855)
!2854 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!2855 = !{!2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !2853, file: !2854, line: 23, baseType: !198, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2853, file: !2854, line: 24, baseType: !504, size: 16, offset: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !2853, file: !2854, line: 25, baseType: !15, size: 32, offset: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !2853, file: !2854, line: 26, baseType: !1031, size: 32, offset: 96)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2853, file: !2854, line: 27, baseType: !250, size: 64, offset: 128)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !2853, file: !2854, line: 28, baseType: !250, size: 64, offset: 192)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2853, file: !2854, line: 37, baseType: !250, size: 64, offset: 256)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2853, file: !2854, line: 38, baseType: !669, size: 32, offset: 320)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !2853, file: !2854, line: 39, baseType: !669, size: 32, offset: 352)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2853, file: !2854, line: 40, baseType: !507, size: 32, offset: 384)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2853, file: !2854, line: 41, baseType: !515, size: 32, offset: 416)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2853, file: !2854, line: 42, baseType: !674, size: 64, offset: 448)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !2853, file: !2854, line: 43, baseType: !2841, size: 128, offset: 512)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !2853, file: !2854, line: 44, baseType: !2841, size: 128, offset: 640)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2853, file: !2854, line: 45, baseType: !2841, size: 128, offset: 768)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !2853, file: !2854, line: 46, baseType: !2841, size: 128, offset: 896)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2853, file: !2854, line: 47, baseType: !250, size: 64, offset: 1024)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !2853, file: !2854, line: 48, baseType: !250, size: 64, offset: 1088)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !525, file: !52, line: 1883, baseType: !2875, size: 64, offset: 960)
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 64)
!2876 = !DISubroutineType(types: !2877)
!2877 = !{!1296, !531, !636, !1108}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !525, file: !52, line: 1884, baseType: !2879, size: 64, offset: 1024)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{!182, !500, !2882, !250, !250}
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !52, line: 50, flags: DIFlagFwdDecl)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !525, file: !52, line: 1886, baseType: !2885, size: 64, offset: 1088)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = !DISubroutineType(types: !2887)
!2887 = !{!182, !500, !2888, !182}
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !525, file: !52, line: 1887, baseType: !2890, size: 64, offset: 1152)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{!182, !500, !531, !1335, !15, !504}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !525, file: !52, line: 1890, baseType: !2816, size: 64, offset: 1216)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !525, file: !52, line: 1891, baseType: !2895, size: 64, offset: 1280)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!182, !500, !2793, !182}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !501, file: !52, line: 623, baseType: !664, size: 64, offset: 192)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !501, file: !52, line: 624, baseType: !496, size: 64, offset: 256)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !501, file: !52, line: 631, baseType: !186, size: 64, offset: 320)
!2901 = !DIDerivedType(tag: DW_TAG_member, scope: !501, file: !52, line: 639, baseType: !2902, size: 32, offset: 384)
!2902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !501, file: !52, line: 639, size: 32, elements: !2903)
!2903 = !{!2904, !2906}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2902, file: !52, line: 640, baseType: !2905, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2902, file: !52, line: 641, baseType: !15, size: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !501, file: !52, line: 643, baseType: !669, size: 32, offset: 416)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !501, file: !52, line: 644, baseType: !674, size: 64, offset: 448)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !501, file: !52, line: 645, baseType: !2841, size: 128, offset: 512)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !501, file: !52, line: 646, baseType: !2841, size: 128, offset: 640)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !501, file: !52, line: 647, baseType: !2841, size: 128, offset: 768)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !501, file: !52, line: 648, baseType: !581, offset: 896)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !501, file: !52, line: 649, baseType: !268, size: 16, offset: 896)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !501, file: !52, line: 650, baseType: !6, size: 8, offset: 912)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !501, file: !52, line: 651, baseType: !6, size: 8, offset: 920)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !501, file: !52, line: 652, baseType: !986, size: 64, offset: 960)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !501, file: !52, line: 659, baseType: !186, size: 64, offset: 1024)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !501, file: !52, line: 660, baseType: !998, size: 256, offset: 1088)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !501, file: !52, line: 662, baseType: !186, size: 64, offset: 1344)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !501, file: !52, line: 663, baseType: !186, size: 64, offset: 1408)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !501, file: !52, line: 665, baseType: !711, size: 128, offset: 1472)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !501, file: !52, line: 666, baseType: !243, size: 128, offset: 1600)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !501, file: !52, line: 675, baseType: !243, size: 128, offset: 1728)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !501, file: !52, line: 676, baseType: !243, size: 128, offset: 1856)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !501, file: !52, line: 677, baseType: !243, size: 128, offset: 1984)
!2926 = !DIDerivedType(tag: DW_TAG_member, scope: !501, file: !52, line: 678, baseType: !2927, size: 128, offset: 2112)
!2927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !501, file: !52, line: 678, size: 128, elements: !2928)
!2928 = !{!2929, !2930}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2927, file: !52, line: 679, baseType: !707, size: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2927, file: !52, line: 680, baseType: !1348, size: 128, align: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !501, file: !52, line: 682, baseType: !833, size: 64, offset: 2240)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !501, file: !52, line: 683, baseType: !833, size: 64, offset: 2304)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !501, file: !52, line: 684, baseType: !211, size: 32, offset: 2368)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !501, file: !52, line: 685, baseType: !211, size: 32, offset: 2400)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !501, file: !52, line: 686, baseType: !211, size: 32, offset: 2432)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !501, file: !52, line: 688, baseType: !211, size: 32, offset: 2464)
!2937 = !DIDerivedType(tag: DW_TAG_member, scope: !501, file: !52, line: 690, baseType: !2938, size: 64, offset: 2496)
!2938 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !501, file: !52, line: 690, size: 64, elements: !2939)
!2939 = !{!2940, !2941}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2938, file: !52, line: 691, baseType: !1359, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2938, file: !52, line: 692, baseType: !738, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !501, file: !52, line: 694, baseType: !2943, size: 64, offset: 2560)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !52, line: 1100, size: 384, elements: !2945)
!2945 = !{!2946, !2947, !2948, !2949}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2944, file: !52, line: 1101, baseType: !581)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2944, file: !52, line: 1102, baseType: !243, size: 128)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2944, file: !52, line: 1103, baseType: !243, size: 128, offset: 128)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2944, file: !52, line: 1104, baseType: !243, size: 128, offset: 256)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !501, file: !52, line: 695, baseType: !497, size: 1216, align: 64, offset: 2624)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !501, file: !52, line: 696, baseType: !243, size: 128, offset: 3840)
!2952 = !DIDerivedType(tag: DW_TAG_member, scope: !501, file: !52, line: 697, baseType: !2953, size: 64, offset: 3968)
!2953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !501, file: !52, line: 697, size: 64, elements: !2954)
!2954 = !{!2955, !2956, !2957, !2968, !2969}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2953, file: !52, line: 698, baseType: !1426, size: 64)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2953, file: !52, line: 699, baseType: !1018, size: 64)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2953, file: !52, line: 700, baseType: !2958, size: 64)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 64)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !2960, line: 14, size: 832, elements: !2961)
!2960 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!2961 = !{!2962, !2963, !2964, !2965, !2966, !2967}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2959, file: !2960, line: 15, baseType: !1229, size: 512)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2959, file: !2960, line: 16, baseType: !702, size: 64, offset: 512)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2959, file: !2960, line: 17, baseType: !1359, size: 64, offset: 576)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2959, file: !2960, line: 18, baseType: !243, size: 128, offset: 640)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2959, file: !2960, line: 19, baseType: !669, size: 32, offset: 768)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2959, file: !2960, line: 20, baseType: !15, size: 32, offset: 800)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2953, file: !52, line: 701, baseType: !636, size: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2953, file: !52, line: 702, baseType: !15, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !501, file: !52, line: 705, baseType: !199, size: 32, offset: 4032)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !501, file: !52, line: 708, baseType: !199, size: 32, offset: 4064)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !501, file: !52, line: 709, baseType: !2693, size: 64, offset: 4096)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !501, file: !52, line: 720, baseType: !204, size: 64, offset: 4160)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !497, file: !52, line: 453, baseType: !1973, size: 128, offset: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !497, file: !52, line: 454, baseType: !183, size: 32, offset: 192)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !497, file: !52, line: 455, baseType: !211, size: 32, offset: 224)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !497, file: !52, line: 460, baseType: !359, size: 128, offset: 256)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !497, file: !52, line: 461, baseType: !998, size: 256, offset: 384)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !497, file: !52, line: 462, baseType: !186, size: 64, offset: 640)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !497, file: !52, line: 463, baseType: !186, size: 64, offset: 704)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !497, file: !52, line: 464, baseType: !186, size: 64, offset: 768)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !497, file: !52, line: 465, baseType: !2983, size: 64, offset: 832)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2985)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !52, line: 367, size: 1408, elements: !2986)
!2986 = !{!2987, !2991, !2995, !2999, !3003, !3007, !3013, !3018, !3022, !3027, !3031, !3035, !3039, !3040, !3044, !3050, !3051, !3052, !3056, !3061, !3065, !3072}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !2985, file: !52, line: 368, baseType: !2988, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!182, !484, !750}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !2985, file: !52, line: 369, baseType: !2992, size: 64, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{!182, !1335, !484}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !2985, file: !52, line: 372, baseType: !2996, size: 64, offset: 128)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{!182, !496, !750}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !2985, file: !52, line: 375, baseType: !3000, size: 64, offset: 192)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!182, !484}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !2985, file: !52, line: 381, baseType: !3004, size: 64, offset: 256)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{!182, !1335, !496, !246, !15}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !2985, file: !52, line: 383, baseType: !3008, size: 64, offset: 320)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3009 = !DISubroutineType(types: !3010)
!3010 = !{null, !3011}
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64)
!3012 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !52, line: 290, flags: DIFlagFwdDecl)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !2985, file: !52, line: 385, baseType: !3014, size: 64, offset: 384)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!182, !1335, !496, !674, !15, !15, !3017, !1112}
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !2985, file: !52, line: 388, baseType: !3019, size: 64, offset: 448)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{!182, !1335, !496, !674, !15, !15, !484, !204}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !2985, file: !52, line: 393, baseType: !3023, size: 64, offset: 512)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{!3026, !496, !3026}
!3026 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !184, line: 125, baseType: !250)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !2985, file: !52, line: 394, baseType: !3028, size: 64, offset: 576)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DISubroutineType(types: !3030)
!3030 = !{null, !484, !15, !15}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !2985, file: !52, line: 395, baseType: !3032, size: 64, offset: 640)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{!182, !484, !183}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !2985, file: !52, line: 396, baseType: !3036, size: 64, offset: 704)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{null, !484}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !2985, file: !52, line: 397, baseType: !1378, size: 64, offset: 768)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !2985, file: !52, line: 402, baseType: !3041, size: 64, offset: 832)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!182, !496, !484, !484, !13}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !2985, file: !52, line: 404, baseType: !3045, size: 64, offset: 896)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{!655, !484, !3048}
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !3049, line: 305, baseType: !15)
!3049 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !2985, file: !52, line: 405, baseType: !3036, size: 64, offset: 960)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !2985, file: !52, line: 406, baseType: !3000, size: 64, offset: 1024)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !2985, file: !52, line: 407, baseType: !3053, size: 64, offset: 1088)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!182, !484, !186, !186}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !2985, file: !52, line: 409, baseType: !3057, size: 64, offset: 1152)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DISubroutineType(types: !3059)
!3059 = !{null, !484, !3060, !3060}
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !2985, file: !52, line: 410, baseType: !3062, size: 64, offset: 1216)
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3063 = !DISubroutineType(types: !3064)
!3064 = !{!182, !496, !484}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !2985, file: !52, line: 413, baseType: !3066, size: 64, offset: 1280)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!182, !3069, !1335, !3071}
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !52, line: 61, flags: DIFlagFwdDecl)
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !2985, file: !52, line: 415, baseType: !3073, size: 64, offset: 1344)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{null, !1335}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !497, file: !52, line: 466, baseType: !186, size: 64, offset: 896)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !497, file: !52, line: 467, baseType: !1889, size: 32, offset: 960)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !497, file: !52, line: 468, baseType: !581, offset: 992)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !497, file: !52, line: 469, baseType: !243, size: 128, offset: 1024)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !497, file: !52, line: 470, baseType: !204, size: 64, offset: 1152)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !492, file: !398, line: 87, baseType: !186, size: 64, offset: 192)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !492, file: !398, line: 94, baseType: !186, size: 64, offset: 256)
!3083 = !DIDerivedType(tag: DW_TAG_member, scope: !489, file: !398, line: 96, baseType: !3084, size: 64)
!3084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !489, file: !398, line: 96, size: 64, elements: !3085)
!3085 = !{!3086}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !3084, file: !398, line: 101, baseType: !3087, size: 64)
!3087 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !184, line: 143, baseType: !250)
!3088 = !DIDerivedType(tag: DW_TAG_member, scope: !489, file: !398, line: 103, baseType: !3089, size: 320)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !489, file: !398, line: 103, size: 320, elements: !3090)
!3090 = !{!3091, !3101, !3104, !3105}
!3091 = !DIDerivedType(tag: DW_TAG_member, scope: !3089, file: !398, line: 104, baseType: !3092, size: 128)
!3092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3089, file: !398, line: 104, size: 128, elements: !3093)
!3093 = !{!3094, !3095}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !3092, file: !398, line: 105, baseType: !243, size: 128)
!3095 = !DIDerivedType(tag: DW_TAG_member, scope: !3092, file: !398, line: 106, baseType: !3096, size: 128)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3092, file: !398, line: 106, size: 128, elements: !3097)
!3097 = !{!3098, !3099, !3100}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3096, file: !398, line: 107, baseType: !484, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3096, file: !398, line: 109, baseType: !182, size: 32, offset: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !3096, file: !398, line: 110, baseType: !182, size: 32, offset: 96)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !3089, file: !398, line: 117, baseType: !3102, size: 64, offset: 128)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !398, line: 117, flags: DIFlagFwdDecl)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !3089, file: !398, line: 119, baseType: !204, size: 64, offset: 192)
!3105 = !DIDerivedType(tag: DW_TAG_member, scope: !3089, file: !398, line: 120, baseType: !3106, size: 64, offset: 256)
!3106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3089, file: !398, line: 120, size: 64, elements: !3107)
!3107 = !{!3108, !3109, !3110}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !3106, file: !398, line: 121, baseType: !204, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !3106, file: !398, line: 122, baseType: !186, size: 64)
!3110 = !DIDerivedType(tag: DW_TAG_member, scope: !3106, file: !398, line: 123, baseType: !3111, size: 32)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3106, file: !398, line: 123, size: 32, elements: !3112)
!3112 = !{!3113, !3114, !3115}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !3111, file: !398, line: 124, baseType: !15, size: 16, flags: DIFlagBitField, extraData: i64 0)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3111, file: !398, line: 125, baseType: !15, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3111, file: !398, line: 126, baseType: !15, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3116 = !DIDerivedType(tag: DW_TAG_member, scope: !489, file: !398, line: 130, baseType: !3117, size: 192)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !489, file: !398, line: 130, size: 192, elements: !3118)
!3118 = !{!3119, !3120, !3121, !3122, !3123}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !3117, file: !398, line: 131, baseType: !186, size: 64)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !3117, file: !398, line: 134, baseType: !10, size: 8, offset: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !3117, file: !398, line: 135, baseType: !10, size: 8, offset: 72)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !3117, file: !398, line: 136, baseType: !211, size: 32, offset: 96)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !3117, file: !398, line: 137, baseType: !15, size: 32, offset: 128)
!3124 = !DIDerivedType(tag: DW_TAG_member, scope: !489, file: !398, line: 139, baseType: !3125, size: 256)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !489, file: !398, line: 139, size: 256, elements: !3126)
!3126 = !{!3127, !3128, !3129}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !3125, file: !398, line: 140, baseType: !186, size: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !3125, file: !398, line: 141, baseType: !211, size: 32, offset: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !3125, file: !398, line: 143, baseType: !243, size: 128, offset: 128)
!3130 = !DIDerivedType(tag: DW_TAG_member, scope: !489, file: !398, line: 145, baseType: !3131, size: 256)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !489, file: !398, line: 145, size: 256, elements: !3132)
!3132 = !{!3133, !3134, !3136, !3137, !3142}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !3131, file: !398, line: 146, baseType: !186, size: 64)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !3131, file: !398, line: 147, baseType: !3135, size: 64, offset: 64)
!3135 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !416, line: 509, baseType: !484)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !3131, file: !398, line: 148, baseType: !186, size: 64, offset: 128)
!3137 = !DIDerivedType(tag: DW_TAG_member, scope: !3131, file: !398, line: 149, baseType: !3138, size: 64, offset: 192)
!3138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3131, file: !398, line: 149, size: 64, elements: !3139)
!3139 = !{!3140, !3141}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !3138, file: !398, line: 150, baseType: !396, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !3138, file: !398, line: 151, baseType: !211, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !3131, file: !398, line: 156, baseType: !581, offset: 256)
!3143 = !DIDerivedType(tag: DW_TAG_member, scope: !489, file: !398, line: 159, baseType: !3144, size: 128)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !489, file: !398, line: 159, size: 128, elements: !3145)
!3145 = !{!3146, !3210}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3144, file: !398, line: 161, baseType: !3147, size: 64)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 64)
!3148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !39, line: 110, size: 1152, elements: !3149)
!3149 = !{!3150, !3160, !3181, !3182, !3183, !3184, !3185, !3197, !3198, !3199}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3148, file: !39, line: 111, baseType: !3151, size: 384)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !39, line: 19, size: 384, elements: !3152)
!3152 = !{!3153, !3155, !3156, !3157, !3158, !3159}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3151, file: !39, line: 20, baseType: !3154, size: 64)
!3154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3151, file: !39, line: 21, baseType: !3154, size: 64, offset: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3151, file: !39, line: 22, baseType: !3154, size: 64, offset: 128)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3151, file: !39, line: 23, baseType: !186, size: 64, offset: 192)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3151, file: !39, line: 24, baseType: !186, size: 64, offset: 256)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3151, file: !39, line: 25, baseType: !186, size: 64, offset: 320)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3148, file: !39, line: 112, baseType: !3161, size: 64, offset: 384)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3163, line: 105, size: 128, elements: !3164)
!3163 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3164 = !{!3165, !3166}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3162, file: !3163, line: 110, baseType: !186, size: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3162, file: !3163, line: 118, baseType: !3167, size: 64, offset: 64)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 64)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3163, line: 95, size: 448, elements: !3169)
!3169 = !{!3170, !3171, !3176, !3177, !3178, !3179, !3180}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3168, file: !3163, line: 96, baseType: !831, size: 64)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3168, file: !3163, line: 97, baseType: !3172, size: 64, offset: 64)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3163, line: 60, baseType: !3174)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{null, !3161}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3168, file: !3163, line: 98, baseType: !3172, size: 64, offset: 128)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3168, file: !3163, line: 99, baseType: !655, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3168, file: !3163, line: 100, baseType: !655, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3168, file: !3163, line: 101, baseType: !1348, size: 128, align: 64, offset: 256)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3168, file: !3163, line: 102, baseType: !3161, size: 64, offset: 384)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3148, file: !39, line: 113, baseType: !3162, size: 128, offset: 448)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3148, file: !39, line: 114, baseType: !2278, size: 192, offset: 576)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3148, file: !39, line: 115, baseType: !38, size: 32, offset: 768)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3148, file: !39, line: 116, baseType: !15, size: 32, offset: 800)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3148, file: !39, line: 117, baseType: !3186, size: 64, offset: 832)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3188)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !39, line: 67, size: 256, elements: !3189)
!3189 = !{!3190, !3191, !3195, !3196}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3188, file: !39, line: 73, baseType: !3036, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3188, file: !39, line: 78, baseType: !3192, size: 64, offset: 64)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{null, !3147}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3188, file: !39, line: 83, baseType: !3192, size: 64, offset: 128)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3188, file: !39, line: 89, baseType: !451, size: 64, offset: 192)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3148, file: !39, line: 118, baseType: !204, size: 64, offset: 896)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3148, file: !39, line: 119, baseType: !182, size: 32, offset: 960)
!3199 = !DIDerivedType(tag: DW_TAG_member, scope: !3148, file: !39, line: 120, baseType: !3200, size: 128, offset: 1024)
!3200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3148, file: !39, line: 120, size: 128, elements: !3201)
!3201 = !{!3202, !3208}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3200, file: !39, line: 121, baseType: !3203, size: 128)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3204, line: 6, size: 128, elements: !3205)
!3204 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3205 = !{!3206, !3207}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3203, file: !3204, line: 7, baseType: !250, size: 64)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3203, file: !3204, line: 8, baseType: !250, size: 64, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3200, file: !39, line: 122, baseType: !3209)
!3209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3203, elements: !1867)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3144, file: !398, line: 162, baseType: !204, size: 64, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !489, file: !398, line: 176, baseType: !1348, size: 128, align: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, scope: !485, file: !398, line: 179, baseType: !3213, size: 32, offset: 384)
!3213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !485, file: !398, line: 179, size: 32, elements: !3214)
!3214 = !{!3215, !3216, !3217, !3218}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3213, file: !398, line: 184, baseType: !211, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3213, file: !398, line: 192, baseType: !15, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3213, file: !398, line: 194, baseType: !15, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3213, file: !398, line: 195, baseType: !182, size: 32)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !485, file: !398, line: 199, baseType: !211, size: 32, offset: 416)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !456, file: !22, line: 522, baseType: !484, size: 64, offset: 512)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !456, file: !22, line: 528, baseType: !3222, size: 64, offset: 576)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !456, file: !22, line: 532, baseType: !3224, size: 64, offset: 640)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !456, file: !22, line: 536, baseType: !3135, size: 64, offset: 704)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !435, file: !22, line: 563, baseType: !3227, size: 64, offset: 320)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 64)
!3228 = !DISubroutineType(types: !3229)
!3229 = !{!454, !455, !21}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !435, file: !22, line: 565, baseType: !3231, size: 64, offset: 384)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{null, !455, !186, !186}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !435, file: !22, line: 567, baseType: !3235, size: 64, offset: 448)
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 64)
!3236 = !DISubroutineType(types: !3237)
!3237 = !{!186, !404}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !435, file: !22, line: 571, baseType: !451, size: 64, offset: 512)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !435, file: !22, line: 574, baseType: !451, size: 64, offset: 576)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !435, file: !22, line: 579, baseType: !3241, size: 64, offset: 640)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{!182, !404, !186, !204, !182, !182}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !435, file: !22, line: 585, baseType: !3245, size: 64, offset: 704)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{!610, !404}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !435, file: !22, line: 615, baseType: !3249, size: 64, offset: 768)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 64)
!3250 = !DISubroutineType(types: !3251)
!3251 = !{!484, !404, !186}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !405, file: !398, line: 359, baseType: !186, size: 64, offset: 1216)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !405, file: !398, line: 361, baseType: !1335, size: 64, offset: 1280)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !405, file: !398, line: 362, baseType: !204, size: 64, offset: 1344)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !405, file: !398, line: 365, baseType: !831, size: 64, offset: 1408)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !405, file: !398, line: 373, baseType: !3257, offset: 1472)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !398, line: 296, elements: !259)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !401, file: !398, line: 391, baseType: !362, size: 64, offset: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !401, file: !398, line: 392, baseType: !250, size: 64, offset: 128)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !401, file: !398, line: 394, baseType: !1611, size: 64, offset: 192)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !401, file: !398, line: 398, baseType: !186, size: 64, offset: 256)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !401, file: !398, line: 399, baseType: !186, size: 64, offset: 320)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !401, file: !398, line: 405, baseType: !186, size: 64, offset: 384)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !401, file: !398, line: 406, baseType: !186, size: 64, offset: 448)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !401, file: !398, line: 407, baseType: !3266, size: 64, offset: 512)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !416, line: 286, baseType: !3268)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !416, line: 286, size: 64, elements: !3269)
!3269 = !{!3270}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !3268, file: !416, line: 286, baseType: !3271, size: 64)
!3271 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !421, line: 18, baseType: !186)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !401, file: !398, line: 416, baseType: !211, size: 32, offset: 576)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !401, file: !398, line: 428, baseType: !211, size: 32, offset: 608)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !401, file: !398, line: 437, baseType: !211, size: 32, offset: 640)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !401, file: !398, line: 447, baseType: !211, size: 32, offset: 672)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !401, file: !398, line: 450, baseType: !831, size: 64, offset: 704)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !401, file: !398, line: 452, baseType: !182, size: 32, offset: 768)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !401, file: !398, line: 454, baseType: !581, offset: 800)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !401, file: !398, line: 457, baseType: !998, size: 256, offset: 832)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !401, file: !398, line: 459, baseType: !243, size: 128, offset: 1088)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !401, file: !398, line: 466, baseType: !186, size: 64, offset: 1216)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !401, file: !398, line: 467, baseType: !186, size: 64, offset: 1280)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !401, file: !398, line: 469, baseType: !186, size: 64, offset: 1344)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !401, file: !398, line: 470, baseType: !186, size: 64, offset: 1408)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !401, file: !398, line: 471, baseType: !833, size: 64, offset: 1472)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !401, file: !398, line: 472, baseType: !186, size: 64, offset: 1536)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !401, file: !398, line: 473, baseType: !186, size: 64, offset: 1600)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !401, file: !398, line: 474, baseType: !186, size: 64, offset: 1664)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !401, file: !398, line: 475, baseType: !186, size: 64, offset: 1728)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !401, file: !398, line: 477, baseType: !581, offset: 1792)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !401, file: !398, line: 478, baseType: !186, size: 64, offset: 1792)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !401, file: !398, line: 478, baseType: !186, size: 64, offset: 1856)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !401, file: !398, line: 478, baseType: !186, size: 64, offset: 1920)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !401, file: !398, line: 478, baseType: !186, size: 64, offset: 1984)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !401, file: !398, line: 479, baseType: !186, size: 64, offset: 2048)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !401, file: !398, line: 479, baseType: !186, size: 64, offset: 2112)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !401, file: !398, line: 479, baseType: !186, size: 64, offset: 2176)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !401, file: !398, line: 480, baseType: !186, size: 64, offset: 2240)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !401, file: !398, line: 480, baseType: !186, size: 64, offset: 2304)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !401, file: !398, line: 480, baseType: !186, size: 64, offset: 2368)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !401, file: !398, line: 480, baseType: !186, size: 64, offset: 2432)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !401, file: !398, line: 482, baseType: !3303, size: 2816, offset: 2496)
!3303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 2816, elements: !3304)
!3304 = !{!3305}
!3305 = !DISubrange(count: 44)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !401, file: !398, line: 488, baseType: !3307, size: 256, offset: 5312)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !3308, line: 60, size: 256, elements: !3309)
!3308 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!3309 = !{!3310}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3307, file: !3308, line: 61, baseType: !3311, size: 256)
!3311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !831, size: 256, elements: !1670)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !401, file: !398, line: 490, baseType: !3313, size: 64, offset: 5568)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !398, line: 490, flags: DIFlagFwdDecl)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !401, file: !398, line: 493, baseType: !3316, size: 896, offset: 5632)
!3316 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !3317, line: 53, baseType: !3318)
!3317 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!3318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3317, line: 13, size: 896, elements: !3319)
!3319 = !{!3320, !3321, !3322, !3323, !3326, !3327, !3328, !3329, !3349, !3350, !3351}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !3318, file: !3317, line: 18, baseType: !250, size: 64)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !3318, file: !3317, line: 28, baseType: !833, size: 64, offset: 64)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !3318, file: !3317, line: 31, baseType: !998, size: 256, offset: 128)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !3318, file: !3317, line: 32, baseType: !3324, size: 64, offset: 384)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !3317, line: 32, flags: DIFlagFwdDecl)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !3318, file: !3317, line: 37, baseType: !268, size: 16, offset: 448)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3318, file: !3317, line: 40, baseType: !827, size: 192, offset: 512)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !3318, file: !3317, line: 41, baseType: !204, size: 64, offset: 704)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !3318, file: !3317, line: 42, baseType: !3330, size: 64, offset: 768)
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3332)
!3332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !3333, line: 13, size: 896, elements: !3334)
!3333 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!3334 = !{!3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3332, file: !3333, line: 14, baseType: !204, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3332, file: !3333, line: 15, baseType: !186, size: 64, offset: 64)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !3332, file: !3333, line: 17, baseType: !186, size: 64, offset: 128)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !3332, file: !3333, line: 17, baseType: !186, size: 64, offset: 192)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !3332, file: !3333, line: 19, baseType: !202, size: 64, offset: 256)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !3332, file: !3333, line: 21, baseType: !202, size: 64, offset: 320)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !3332, file: !3333, line: 22, baseType: !202, size: 64, offset: 384)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !3332, file: !3333, line: 23, baseType: !202, size: 64, offset: 448)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !3332, file: !3333, line: 24, baseType: !202, size: 64, offset: 512)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !3332, file: !3333, line: 25, baseType: !202, size: 64, offset: 576)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !3332, file: !3333, line: 26, baseType: !202, size: 64, offset: 640)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !3332, file: !3333, line: 27, baseType: !202, size: 64, offset: 704)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !3332, file: !3333, line: 28, baseType: !202, size: 64, offset: 768)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !3332, file: !3333, line: 29, baseType: !202, size: 64, offset: 832)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !3318, file: !3317, line: 44, baseType: !211, size: 32, offset: 832)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !3318, file: !3317, line: 50, baseType: !1393, size: 16, offset: 864)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !3318, file: !3317, line: 51, baseType: !3352, size: 16, offset: 880)
!3352 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !7, line: 18, baseType: !3353)
!3353 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !9, line: 23, baseType: !1751)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !401, file: !398, line: 495, baseType: !186, size: 64, offset: 6528)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !401, file: !398, line: 497, baseType: !3356, size: 64, offset: 6592)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !398, line: 381, size: 384, elements: !3358)
!3358 = !{!3359, !3360, !3366}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3357, file: !398, line: 382, baseType: !211, size: 32)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !3357, file: !398, line: 383, baseType: !3361, size: 128, offset: 64)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !398, line: 376, size: 128, elements: !3362)
!3362 = !{!3363, !3364}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3361, file: !398, line: 377, baseType: !188, size: 64)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3361, file: !398, line: 378, baseType: !3365, size: 64, offset: 64)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3361, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !3357, file: !398, line: 384, baseType: !2278, size: 192, offset: 192)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !401, file: !398, line: 500, baseType: !581, offset: 6656)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !401, file: !398, line: 501, baseType: !3369, size: 64, offset: 6656)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !398, line: 387, flags: DIFlagFwdDecl)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !401, file: !398, line: 516, baseType: !1857, size: 64, offset: 6720)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !401, file: !398, line: 519, baseType: !1335, size: 64, offset: 6784)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !401, file: !398, line: 521, baseType: !3374, size: 64, offset: 6848)
!3374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3375, size: 64)
!3375 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !398, line: 521, flags: DIFlagFwdDecl)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !401, file: !398, line: 545, baseType: !211, size: 32, offset: 6912)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !401, file: !398, line: 548, baseType: !655, size: 8, offset: 6944)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !401, file: !398, line: 550, baseType: !3379, offset: 6952)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3380, line: 142, elements: !259)
!3380 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !401, file: !398, line: 554, baseType: !2334, size: 256, offset: 6976)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !401, file: !398, line: 557, baseType: !198, size: 32, offset: 7232)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !397, file: !398, line: 565, baseType: !3384, offset: 7296)
!3384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, elements: !3385)
!3385 = !{!3386}
!3386 = !DISubrange(count: -1)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !189, file: !190, line: 758, baseType: !396, size: 64, offset: 3968)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !189, file: !190, line: 761, baseType: !3389, size: 320, offset: 4032)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !3308, line: 34, size: 320, elements: !3390)
!3390 = !{!3391, !3392}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !3389, file: !3308, line: 35, baseType: !250, size: 64)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !3389, file: !3308, line: 36, baseType: !3393, size: 256, offset: 64)
!3393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 256, elements: !1670)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !189, file: !190, line: 766, baseType: !182, size: 32, offset: 4352)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !189, file: !190, line: 767, baseType: !182, size: 32, offset: 4384)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !189, file: !190, line: 768, baseType: !182, size: 32, offset: 4416)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !189, file: !190, line: 770, baseType: !182, size: 32, offset: 4448)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !189, file: !190, line: 772, baseType: !186, size: 64, offset: 4480)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !189, file: !190, line: 775, baseType: !15, size: 32, offset: 4544)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !189, file: !190, line: 778, baseType: !15, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !189, file: !190, line: 779, baseType: !15, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !189, file: !190, line: 780, baseType: !15, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !189, file: !190, line: 803, baseType: !15, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !189, file: !190, line: 806, baseType: !15, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !189, file: !190, line: 807, baseType: !15, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !189, file: !190, line: 809, baseType: !15, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !189, file: !190, line: 815, baseType: !15, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !189, file: !190, line: 831, baseType: !186, size: 64, offset: 4672)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !189, file: !190, line: 833, baseType: !3410, size: 384, offset: 4736)
!3410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !33, line: 25, size: 384, elements: !3411)
!3411 = !{!3412, !3417}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3410, file: !33, line: 26, baseType: !3413, size: 64)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!202, !3416}
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3417 = !DIDerivedType(tag: DW_TAG_member, scope: !3410, file: !33, line: 27, baseType: !3418, size: 320, offset: 64)
!3418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3410, file: !33, line: 27, size: 320, elements: !3419)
!3419 = !{!3420, !3430, !3455}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !3418, file: !33, line: 36, baseType: !3421, size: 320)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3418, file: !33, line: 29, size: 320, elements: !3422)
!3422 = !{!3423, !3425, !3426, !3427, !3428, !3429}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !3421, file: !33, line: 30, baseType: !3424, size: 64)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3421, file: !33, line: 31, baseType: !198, size: 32, offset: 64)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3421, file: !33, line: 32, baseType: !198, size: 32, offset: 96)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !3421, file: !33, line: 33, baseType: !198, size: 32, offset: 128)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3421, file: !33, line: 34, baseType: !250, size: 64, offset: 192)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !3421, file: !33, line: 35, baseType: !3424, size: 64, offset: 256)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !3418, file: !33, line: 46, baseType: !3431, size: 192)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3418, file: !33, line: 38, size: 192, elements: !3432)
!3432 = !{!3433, !3434, !3435, !3454}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !3431, file: !33, line: 39, baseType: !341, size: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3431, file: !33, line: 40, baseType: !32, size: 32, offset: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, scope: !3431, file: !33, line: 41, baseType: !3436, size: 64, offset: 64)
!3436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3431, file: !33, line: 41, size: 64, elements: !3437)
!3437 = !{!3438, !3446}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !3436, file: !33, line: 42, baseType: !3439, size: 64)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !3441, line: 7, size: 128, elements: !3442)
!3441 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!3442 = !{!3443, !3445}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3440, file: !3441, line: 8, baseType: !3444, size: 64)
!3444 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !343, line: 93, baseType: !185)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3440, file: !3441, line: 9, baseType: !185, size: 64, offset: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !3436, file: !33, line: 43, baseType: !3447, size: 64)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !3449, line: 7, size: 64, elements: !3450)
!3449 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!3450 = !{!3451, !3453}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3448, file: !3449, line: 8, baseType: !3452, size: 32)
!3452 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !3449, line: 5, baseType: !1726)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3448, file: !3449, line: 9, baseType: !1726, size: 32, offset: 32)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3431, file: !33, line: 45, baseType: !250, size: 64, offset: 128)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3418, file: !33, line: 54, baseType: !3456, size: 256)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3418, file: !33, line: 48, size: 256, elements: !3457)
!3457 = !{!3458, !3461, !3462, !3463, !3464}
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !3456, file: !33, line: 49, baseType: !3459, size: 64)
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !33, line: 14, flags: DIFlagFwdDecl)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !3456, file: !33, line: 50, baseType: !182, size: 32, offset: 64)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !3456, file: !33, line: 51, baseType: !182, size: 32, offset: 96)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3456, file: !33, line: 52, baseType: !186, size: 64, offset: 128)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3456, file: !33, line: 53, baseType: !186, size: 64, offset: 192)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !189, file: !190, line: 835, baseType: !3466, size: 32, offset: 5120)
!3466 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !184, line: 22, baseType: !3467)
!3467 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !343, line: 28, baseType: !182)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !189, file: !190, line: 836, baseType: !3466, size: 32, offset: 5152)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !189, file: !190, line: 840, baseType: !186, size: 64, offset: 5184)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !189, file: !190, line: 849, baseType: !188, size: 64, offset: 5248)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !189, file: !190, line: 852, baseType: !188, size: 64, offset: 5312)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !189, file: !190, line: 857, baseType: !243, size: 128, offset: 5376)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !189, file: !190, line: 858, baseType: !243, size: 128, offset: 5504)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !189, file: !190, line: 859, baseType: !188, size: 64, offset: 5632)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !189, file: !190, line: 867, baseType: !243, size: 128, offset: 5696)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !189, file: !190, line: 868, baseType: !243, size: 128, offset: 5824)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !189, file: !190, line: 871, baseType: !1662, size: 64, offset: 5952)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !189, file: !190, line: 872, baseType: !3479, size: 512, offset: 6016)
!3479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 512, elements: !1670)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !189, file: !190, line: 873, baseType: !243, size: 128, offset: 6528)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !189, file: !190, line: 874, baseType: !243, size: 128, offset: 6656)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !189, file: !190, line: 876, baseType: !3483, size: 64, offset: 6784)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !189, file: !190, line: 879, baseType: !779, size: 64, offset: 6848)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !189, file: !190, line: 882, baseType: !779, size: 64, offset: 6912)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !189, file: !190, line: 884, baseType: !250, size: 64, offset: 6976)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !189, file: !190, line: 885, baseType: !250, size: 64, offset: 7040)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !189, file: !190, line: 890, baseType: !250, size: 64, offset: 7104)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !189, file: !190, line: 891, baseType: !3490, size: 128, offset: 7168)
!3490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !190, line: 242, size: 128, elements: !3491)
!3491 = !{!3492, !3493, !3494}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3490, file: !190, line: 244, baseType: !250, size: 64)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3490, file: !190, line: 245, baseType: !250, size: 64, offset: 64)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3490, file: !190, line: 246, baseType: !316, offset: 128)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !189, file: !190, line: 900, baseType: !186, size: 64, offset: 7296)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !189, file: !190, line: 901, baseType: !186, size: 64, offset: 7360)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !189, file: !190, line: 904, baseType: !250, size: 64, offset: 7424)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !189, file: !190, line: 907, baseType: !250, size: 64, offset: 7488)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !189, file: !190, line: 910, baseType: !186, size: 64, offset: 7552)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !189, file: !190, line: 911, baseType: !186, size: 64, offset: 7616)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !189, file: !190, line: 914, baseType: !3502, size: 640, offset: 7680)
!3502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !3503, line: 123, size: 640, elements: !3504)
!3503 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!3504 = !{!3505, !3511, !3512}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !3502, file: !3503, line: 124, baseType: !3506, size: 576)
!3506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3507, size: 576, elements: !723)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !3503, line: 108, size: 192, elements: !3508)
!3508 = !{!3509, !3510}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !3507, file: !3503, line: 109, baseType: !250, size: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !3507, file: !3503, line: 110, baseType: !356, size: 128, offset: 64)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !3502, file: !3503, line: 125, baseType: !15, size: 32, offset: 576)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !3502, file: !3503, line: 126, baseType: !15, size: 32, offset: 608)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !189, file: !190, line: 917, baseType: !3514, size: 192, offset: 8320)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !3503, line: 134, size: 192, elements: !3515)
!3515 = !{!3516, !3517}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3514, file: !3503, line: 135, baseType: !1348, size: 128, align: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !3514, file: !3503, line: 136, baseType: !15, size: 32, offset: 128)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !189, file: !190, line: 923, baseType: !1688, size: 64, offset: 8512)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !189, file: !190, line: 926, baseType: !1688, size: 64, offset: 8576)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !189, file: !190, line: 929, baseType: !1688, size: 64, offset: 8640)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !189, file: !190, line: 933, baseType: !1718, size: 64, offset: 8704)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !189, file: !190, line: 943, baseType: !3523, size: 128, offset: 8768)
!3523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 128, elements: !2703)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !189, file: !190, line: 945, baseType: !3525, size: 64, offset: 8896)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !190, line: 49, flags: DIFlagFwdDecl)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !189, file: !190, line: 956, baseType: !3528, size: 64, offset: 8960)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !190, line: 45, flags: DIFlagFwdDecl)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !189, file: !190, line: 959, baseType: !3531, size: 64, offset: 9024)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !190, line: 959, flags: DIFlagFwdDecl)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !189, file: !190, line: 962, baseType: !3534, size: 64, offset: 9088)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !190, line: 66, flags: DIFlagFwdDecl)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !189, file: !190, line: 966, baseType: !3537, size: 64, offset: 9152)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !3539, line: 35, flags: DIFlagFwdDecl)
!3539 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !189, file: !190, line: 969, baseType: !3541, size: 64, offset: 9216)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3543, line: 82, size: 7296, elements: !3544)
!3543 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3544 = !{!3545, !3546, !3547, !3548, !3549, !3550, !3551, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3580, !3589, !3590, !3592, !3593, !3594, !3597, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3627, !3628, !3635, !3636, !3637, !3638, !3639, !3640}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3542, file: !3543, line: 83, baseType: !206, size: 32)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3542, file: !3543, line: 84, baseType: !211, size: 32, offset: 32)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3542, file: !3543, line: 85, baseType: !182, size: 32, offset: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3542, file: !3543, line: 86, baseType: !243, size: 128, offset: 128)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3542, file: !3543, line: 88, baseType: !1510, size: 128, offset: 256)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3542, file: !3543, line: 91, baseType: !188, size: 64, offset: 384)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3542, file: !3543, line: 94, baseType: !3552, size: 192, offset: 448)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3553, line: 30, size: 192, elements: !3554)
!3553 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3554 = !{!3555, !3556}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3552, file: !3553, line: 31, baseType: !243, size: 128)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3552, file: !3553, line: 32, baseType: !3557, size: 64, offset: 128)
!3557 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3558, line: 25, baseType: !3559)
!3558 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3558, line: 23, size: 64, elements: !3560)
!3560 = !{!3561}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3559, file: !3558, line: 24, baseType: !388, size: 64)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3542, file: !3543, line: 97, baseType: !707, size: 64, offset: 640)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3542, file: !3543, line: 100, baseType: !182, size: 32, offset: 704)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3542, file: !3543, line: 106, baseType: !182, size: 32, offset: 736)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3542, file: !3543, line: 107, baseType: !188, size: 64, offset: 768)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3542, file: !3543, line: 110, baseType: !182, size: 32, offset: 832)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3542, file: !3543, line: 111, baseType: !15, size: 32, offset: 864)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3542, file: !3543, line: 122, baseType: !15, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3542, file: !3543, line: 123, baseType: !15, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3542, file: !3543, line: 128, baseType: !182, size: 32, offset: 928)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3542, file: !3543, line: 129, baseType: !243, size: 128, offset: 960)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3542, file: !3543, line: 132, baseType: !291, size: 512, offset: 1088)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3542, file: !3543, line: 133, baseType: !299, size: 64, offset: 1600)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3542, file: !3543, line: 140, baseType: !3575, size: 256, offset: 1664)
!3575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3576, size: 256, elements: !1710)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3543, line: 38, size: 128, elements: !3577)
!3577 = !{!3578, !3579}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3576, file: !3543, line: 39, baseType: !250, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3576, file: !3543, line: 40, baseType: !250, size: 64, offset: 64)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3542, file: !3543, line: 146, baseType: !3581, size: 192, offset: 1920)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3543, line: 66, size: 192, elements: !3582)
!3582 = !{!3583}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3581, file: !3543, line: 67, baseType: !3584, size: 192)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3543, line: 47, size: 192, elements: !3585)
!3585 = !{!3586, !3587, !3588}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3584, file: !3543, line: 48, baseType: !833, size: 64)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3584, file: !3543, line: 49, baseType: !833, size: 64, offset: 64)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3584, file: !3543, line: 50, baseType: !833, size: 64, offset: 128)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3542, file: !3543, line: 150, baseType: !3502, size: 640, offset: 2112)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3542, file: !3543, line: 153, baseType: !3591, size: 256, offset: 2752)
!3591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1662, size: 256, elements: !1670)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3542, file: !3543, line: 159, baseType: !1662, size: 64, offset: 3008)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3542, file: !3543, line: 162, baseType: !182, size: 32, offset: 3072)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3542, file: !3543, line: 164, baseType: !3595, size: 64, offset: 3136)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3596 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3543, line: 164, flags: DIFlagFwdDecl)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3542, file: !3543, line: 175, baseType: !3598, size: 32, offset: 3200)
!3598 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !346, line: 805, baseType: !3599)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 798, size: 32, elements: !3600)
!3600 = !{!3601, !3602}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3599, file: !346, line: 803, baseType: !537, size: 32)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3599, file: !346, line: 804, baseType: !581, offset: 32)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3542, file: !3543, line: 176, baseType: !250, size: 64, offset: 3264)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3542, file: !3543, line: 176, baseType: !250, size: 64, offset: 3328)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3542, file: !3543, line: 176, baseType: !250, size: 64, offset: 3392)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3542, file: !3543, line: 176, baseType: !250, size: 64, offset: 3456)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3542, file: !3543, line: 177, baseType: !250, size: 64, offset: 3520)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3542, file: !3543, line: 178, baseType: !250, size: 64, offset: 3584)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3542, file: !3543, line: 179, baseType: !3490, size: 128, offset: 3648)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3542, file: !3543, line: 180, baseType: !186, size: 64, offset: 3776)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3542, file: !3543, line: 180, baseType: !186, size: 64, offset: 3840)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3542, file: !3543, line: 180, baseType: !186, size: 64, offset: 3904)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3542, file: !3543, line: 180, baseType: !186, size: 64, offset: 3968)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3542, file: !3543, line: 181, baseType: !186, size: 64, offset: 4032)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3542, file: !3543, line: 181, baseType: !186, size: 64, offset: 4096)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3542, file: !3543, line: 181, baseType: !186, size: 64, offset: 4160)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3542, file: !3543, line: 181, baseType: !186, size: 64, offset: 4224)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3542, file: !3543, line: 182, baseType: !186, size: 64, offset: 4288)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3542, file: !3543, line: 182, baseType: !186, size: 64, offset: 4352)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3542, file: !3543, line: 182, baseType: !186, size: 64, offset: 4416)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3542, file: !3543, line: 182, baseType: !186, size: 64, offset: 4480)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3542, file: !3543, line: 183, baseType: !186, size: 64, offset: 4544)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3542, file: !3543, line: 183, baseType: !186, size: 64, offset: 4608)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3542, file: !3543, line: 184, baseType: !3625, offset: 4672)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3626, line: 12, elements: !259)
!3626 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3542, file: !3543, line: 192, baseType: !252, size: 64, offset: 4672)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3542, file: !3543, line: 203, baseType: !3629, size: 2048, offset: 4736)
!3629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3630, size: 2048, elements: !2703)
!3630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3631, line: 43, size: 128, elements: !3632)
!3631 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3632 = !{!3633, !3634}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3630, file: !3631, line: 44, baseType: !1110, size: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3630, file: !3631, line: 45, baseType: !1110, size: 64, offset: 64)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3542, file: !3543, line: 220, baseType: !655, size: 8, offset: 6784)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3542, file: !3543, line: 221, baseType: !1751, size: 16, offset: 6800)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3542, file: !3543, line: 222, baseType: !1751, size: 16, offset: 6816)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3542, file: !3543, line: 224, baseType: !396, size: 64, offset: 6848)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3542, file: !3543, line: 227, baseType: !827, size: 192, offset: 6912)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3542, file: !3543, line: 233, baseType: !827, size: 192, offset: 7104)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !189, file: !190, line: 970, baseType: !3642, size: 64, offset: 9280)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3543, line: 20, size: 16576, elements: !3644)
!3644 = !{!3645, !3646, !3647, !3648}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3643, file: !3543, line: 21, baseType: !581)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3643, file: !3543, line: 22, baseType: !206, size: 32)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3643, file: !3543, line: 23, baseType: !1510, size: 128, offset: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3643, file: !3543, line: 24, baseType: !3649, size: 16384, offset: 192)
!3649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3650, size: 16384, elements: !1270)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3553, line: 49, size: 256, elements: !3651)
!3651 = !{!3652}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3650, file: !3553, line: 50, baseType: !3653, size: 256)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3553, line: 35, size: 256, elements: !3654)
!3654 = !{!3655, !3662, !3663, !3669}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3653, file: !3553, line: 37, baseType: !3656, size: 64)
!3656 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3657, line: 19, baseType: !3658)
!3657 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3657, line: 18, baseType: !3660)
!3660 = !DISubroutineType(types: !3661)
!3661 = !{null, !182}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3653, file: !3553, line: 38, baseType: !186, size: 64, offset: 64)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3653, file: !3553, line: 44, baseType: !3664, size: 64, offset: 128)
!3664 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3657, line: 22, baseType: !3665)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 64)
!3666 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3657, line: 21, baseType: !3667)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{null}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3653, file: !3553, line: 46, baseType: !3557, size: 64, offset: 192)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !189, file: !190, line: 971, baseType: !3557, size: 64, offset: 9344)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !189, file: !190, line: 972, baseType: !3557, size: 64, offset: 9408)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !189, file: !190, line: 974, baseType: !3557, size: 64, offset: 9472)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !189, file: !190, line: 975, baseType: !3552, size: 192, offset: 9536)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !189, file: !190, line: 976, baseType: !186, size: 64, offset: 9728)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !189, file: !190, line: 977, baseType: !1108, size: 64, offset: 9792)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !189, file: !190, line: 978, baseType: !15, size: 32, offset: 9856)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !189, file: !190, line: 980, baseType: !1351, size: 64, offset: 9920)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !189, file: !190, line: 989, baseType: !3679, size: 128, offset: 9984)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3680, line: 35, size: 128, elements: !3681)
!3680 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3681 = !{!3682, !3683, !3684}
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3679, file: !3680, line: 36, baseType: !182, size: 32)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3679, file: !3680, line: 37, baseType: !211, size: 32, offset: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3679, file: !3680, line: 38, baseType: !3685, size: 64, offset: 64)
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 64)
!3686 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3680, line: 23, flags: DIFlagFwdDecl)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !189, file: !190, line: 992, baseType: !250, size: 64, offset: 10112)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !189, file: !190, line: 993, baseType: !250, size: 64, offset: 10176)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !189, file: !190, line: 996, baseType: !581, offset: 10240)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !189, file: !190, line: 999, baseType: !316, offset: 10240)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !189, file: !190, line: 1001, baseType: !3692, size: 64, offset: 10240)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !190, line: 636, size: 64, elements: !3693)
!3693 = !{!3694}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3692, file: !190, line: 637, baseType: !3695, size: 64)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !189, file: !190, line: 1005, baseType: !359, size: 128, offset: 10304)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !189, file: !190, line: 1007, baseType: !188, size: 64, offset: 10432)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !189, file: !190, line: 1009, baseType: !3699, size: 64, offset: 10496)
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3700, size: 64)
!3700 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !190, line: 1009, flags: DIFlagFwdDecl)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !189, file: !190, line: 1043, baseType: !204, size: 64, offset: 10560)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !189, file: !190, line: 1046, baseType: !3703, size: 64, offset: 10624)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !190, line: 41, flags: DIFlagFwdDecl)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !189, file: !190, line: 1050, baseType: !3706, size: 64, offset: 10688)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !190, line: 42, flags: DIFlagFwdDecl)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !189, file: !190, line: 1054, baseType: !3709, size: 64, offset: 10752)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3710, size: 64)
!3710 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !190, line: 55, flags: DIFlagFwdDecl)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !189, file: !190, line: 1056, baseType: !1021, size: 64, offset: 10816)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !189, file: !190, line: 1058, baseType: !3713, size: 64, offset: 10880)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3715, line: 99, size: 704, elements: !3716)
!3715 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3716 = !{!3717, !3718, !3719, !3720, !3721, !3722, !3723, !3742, !3743}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3714, file: !3715, line: 100, baseType: !831, size: 64)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3714, file: !3715, line: 101, baseType: !211, size: 32, offset: 64)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3714, file: !3715, line: 102, baseType: !211, size: 32, offset: 96)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3714, file: !3715, line: 105, baseType: !581, offset: 128)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3714, file: !3715, line: 107, baseType: !268, size: 16, offset: 128)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3714, file: !3715, line: 109, baseType: !1973, size: 128, offset: 192)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3714, file: !3715, line: 110, baseType: !3724, size: 64, offset: 320)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3715, line: 73, size: 448, elements: !3726)
!3726 = !{!3727, !3730, !3731, !3736, !3741}
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3725, file: !3715, line: 74, baseType: !3728, size: 64)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3715, line: 74, flags: DIFlagFwdDecl)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3725, file: !3715, line: 75, baseType: !3713, size: 64, offset: 64)
!3731 = !DIDerivedType(tag: DW_TAG_member, scope: !3725, file: !3715, line: 83, baseType: !3732, size: 128, offset: 128)
!3732 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3725, file: !3715, line: 83, size: 128, elements: !3733)
!3733 = !{!3734, !3735}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3732, file: !3715, line: 84, baseType: !243, size: 128)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3732, file: !3715, line: 85, baseType: !3102, size: 64)
!3736 = !DIDerivedType(tag: DW_TAG_member, scope: !3725, file: !3715, line: 87, baseType: !3737, size: 128, offset: 256)
!3737 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3725, file: !3715, line: 87, size: 128, elements: !3738)
!3738 = !{!3739, !3740}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3737, file: !3715, line: 88, baseType: !711, size: 128)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3737, file: !3715, line: 89, baseType: !1348, size: 128, align: 64)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3725, file: !3715, line: 92, baseType: !15, size: 32, offset: 384)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3714, file: !3715, line: 111, baseType: !707, size: 64, offset: 384)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3714, file: !3715, line: 113, baseType: !2334, size: 256, offset: 448)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !189, file: !190, line: 1061, baseType: !3745, size: 64, offset: 10944)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 64)
!3746 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !190, line: 43, flags: DIFlagFwdDecl)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !189, file: !190, line: 1064, baseType: !186, size: 64, offset: 11008)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !189, file: !190, line: 1065, baseType: !3749, size: 64, offset: 11072)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3553, line: 14, baseType: !3751)
!3751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3553, line: 12, size: 384, elements: !3752)
!3752 = !{!3753}
!3753 = !DIDerivedType(tag: DW_TAG_member, scope: !3751, file: !3553, line: 13, baseType: !3754, size: 384)
!3754 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3751, file: !3553, line: 13, size: 384, elements: !3755)
!3755 = !{!3756, !3757, !3758, !3759}
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3754, file: !3553, line: 13, baseType: !182, size: 32)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3754, file: !3553, line: 13, baseType: !182, size: 32, offset: 32)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3754, file: !3553, line: 13, baseType: !182, size: 32, offset: 64)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3754, file: !3553, line: 13, baseType: !3760, size: 256, offset: 128)
!3760 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3761, line: 32, size: 256, elements: !3762)
!3761 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3762 = !{!3763, !3768, !3781, !3787, !3796, !3816, !3821}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3760, file: !3761, line: 37, baseType: !3764, size: 64)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3760, file: !3761, line: 34, size: 64, elements: !3765)
!3765 = !{!3766, !3767}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3764, file: !3761, line: 35, baseType: !3467, size: 32)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3764, file: !3761, line: 36, baseType: !513, size: 32, offset: 32)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3760, file: !3761, line: 45, baseType: !3769, size: 192)
!3769 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3760, file: !3761, line: 40, size: 192, elements: !3770)
!3770 = !{!3771, !3773, !3774, !3780}
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3769, file: !3761, line: 41, baseType: !3772, size: 32)
!3772 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !343, line: 95, baseType: !182)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3769, file: !3761, line: 42, baseType: !182, size: 32, offset: 32)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3769, file: !3761, line: 43, baseType: !3775, size: 64, offset: 64)
!3775 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3761, line: 11, baseType: !3776)
!3776 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3761, line: 8, size: 64, elements: !3777)
!3777 = !{!3778, !3779}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3776, file: !3761, line: 9, baseType: !182, size: 32)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3776, file: !3761, line: 10, baseType: !204, size: 64)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3769, file: !3761, line: 44, baseType: !182, size: 32, offset: 128)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3760, file: !3761, line: 52, baseType: !3782, size: 128)
!3782 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3760, file: !3761, line: 48, size: 128, elements: !3783)
!3783 = !{!3784, !3785, !3786}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3782, file: !3761, line: 49, baseType: !3467, size: 32)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3782, file: !3761, line: 50, baseType: !513, size: 32, offset: 32)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3782, file: !3761, line: 51, baseType: !3775, size: 64, offset: 64)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3760, file: !3761, line: 61, baseType: !3788, size: 256)
!3788 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3760, file: !3761, line: 55, size: 256, elements: !3789)
!3789 = !{!3790, !3791, !3792, !3793, !3795}
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3788, file: !3761, line: 56, baseType: !3467, size: 32)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3788, file: !3761, line: 57, baseType: !513, size: 32, offset: 32)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3788, file: !3761, line: 58, baseType: !182, size: 32, offset: 64)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3788, file: !3761, line: 59, baseType: !3794, size: 64, offset: 128)
!3794 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !343, line: 94, baseType: !1298)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3788, file: !3761, line: 60, baseType: !3794, size: 64, offset: 192)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3760, file: !3761, line: 95, baseType: !3797, size: 256)
!3797 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3760, file: !3761, line: 64, size: 256, elements: !3798)
!3798 = !{!3799, !3800}
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3797, file: !3761, line: 65, baseType: !204, size: 64)
!3800 = !DIDerivedType(tag: DW_TAG_member, scope: !3797, file: !3761, line: 77, baseType: !3801, size: 192, offset: 64)
!3801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3797, file: !3761, line: 77, size: 192, elements: !3802)
!3802 = !{!3803, !3804, !3811}
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3801, file: !3761, line: 82, baseType: !1751, size: 16)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3801, file: !3761, line: 88, baseType: !3805, size: 192)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3801, file: !3761, line: 84, size: 192, elements: !3806)
!3806 = !{!3807, !3809, !3810}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3805, file: !3761, line: 85, baseType: !3808, size: 64)
!3808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 64, elements: !337)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3805, file: !3761, line: 86, baseType: !204, size: 64, offset: 64)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3805, file: !3761, line: 87, baseType: !204, size: 64, offset: 128)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3801, file: !3761, line: 93, baseType: !3812, size: 96)
!3812 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3801, file: !3761, line: 90, size: 96, elements: !3813)
!3813 = !{!3814, !3815}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3812, file: !3761, line: 91, baseType: !3808, size: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3812, file: !3761, line: 92, baseType: !199, size: 32, offset: 64)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3760, file: !3761, line: 101, baseType: !3817, size: 128)
!3817 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3760, file: !3761, line: 98, size: 128, elements: !3818)
!3818 = !{!3819, !3820}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3817, file: !3761, line: 99, baseType: !202, size: 64)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3817, file: !3761, line: 100, baseType: !182, size: 32, offset: 64)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3760, file: !3761, line: 108, baseType: !3822, size: 128)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3760, file: !3761, line: 104, size: 128, elements: !3823)
!3823 = !{!3824, !3825, !3826}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3822, file: !3761, line: 105, baseType: !204, size: 64)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3822, file: !3761, line: 106, baseType: !182, size: 32, offset: 64)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3822, file: !3761, line: 107, baseType: !15, size: 32, offset: 96)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !189, file: !190, line: 1067, baseType: !3625, offset: 11136)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !189, file: !190, line: 1099, baseType: !3829, size: 64, offset: 11136)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !190, line: 56, flags: DIFlagFwdDecl)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !189, file: !190, line: 1103, baseType: !243, size: 128, offset: 11200)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !189, file: !190, line: 1104, baseType: !3833, size: 64, offset: 11328)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !190, line: 46, flags: DIFlagFwdDecl)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !189, file: !190, line: 1105, baseType: !827, size: 192, offset: 11392)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !189, file: !190, line: 1106, baseType: !15, size: 32, offset: 11584)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !189, file: !190, line: 1109, baseType: !3838, size: 128, offset: 11648)
!3838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3839, size: 128, elements: !1710)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !190, line: 51, flags: DIFlagFwdDecl)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !189, file: !190, line: 1110, baseType: !827, size: 192, offset: 11776)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !189, file: !190, line: 1111, baseType: !243, size: 128, offset: 11968)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !189, file: !190, line: 1173, baseType: !3844, size: 64, offset: 12096)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3846, line: 62, size: 256, align: 256, elements: !3847)
!3846 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3847 = !{!3848, !3849, !3850, !3855}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3845, file: !3846, line: 75, baseType: !199, size: 32)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3845, file: !3846, line: 90, baseType: !199, size: 32, offset: 32)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3845, file: !3846, line: 124, baseType: !3851, size: 64, offset: 64)
!3851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3845, file: !3846, line: 109, size: 64, elements: !3852)
!3852 = !{!3853, !3854}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3851, file: !3846, line: 110, baseType: !251, size: 64)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3851, file: !3846, line: 112, baseType: !251, size: 64)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3845, file: !3846, line: 144, baseType: !199, size: 32, offset: 128)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !189, file: !190, line: 1174, baseType: !198, size: 32, offset: 12160)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !189, file: !190, line: 1179, baseType: !186, size: 64, offset: 12224)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !189, file: !190, line: 1182, baseType: !3859, size: 128, offset: 12288)
!3859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !3308, line: 76, size: 128, elements: !3860)
!3860 = !{!3861, !3866, !3867}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3859, file: !3308, line: 85, baseType: !3862, size: 64)
!3862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3863, line: 7, size: 64, elements: !3864)
!3863 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3864 = !{!3865}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3862, file: !3863, line: 12, baseType: !385, size: 64)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3859, file: !3308, line: 88, baseType: !655, size: 8, offset: 64)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3859, file: !3308, line: 95, baseType: !655, size: 8, offset: 72)
!3868 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !190, line: 1184, baseType: !3869, size: 128, offset: 12416)
!3869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !189, file: !190, line: 1184, size: 128, elements: !3870)
!3870 = !{!3871, !3872}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3869, file: !190, line: 1185, baseType: !206, size: 32)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3869, file: !190, line: 1186, baseType: !1348, size: 128, align: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !189, file: !190, line: 1190, baseType: !1426, size: 64, offset: 12544)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !189, file: !190, line: 1192, baseType: !3875, size: 128, offset: 12608)
!3875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !3308, line: 64, size: 128, elements: !3876)
!3876 = !{!3877, !3878, !3879}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3875, file: !3308, line: 65, baseType: !484, size: 64)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3875, file: !3308, line: 67, baseType: !199, size: 32, offset: 64)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3875, file: !3308, line: 68, baseType: !199, size: 32, offset: 96)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !189, file: !190, line: 1206, baseType: !182, size: 32, offset: 12736)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !189, file: !190, line: 1207, baseType: !182, size: 32, offset: 12768)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !189, file: !190, line: 1209, baseType: !186, size: 64, offset: 12800)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !189, file: !190, line: 1219, baseType: !250, size: 64, offset: 12864)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !189, file: !190, line: 1220, baseType: !250, size: 64, offset: 12928)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !189, file: !190, line: 1317, baseType: !182, size: 32, offset: 12992)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !189, file: !190, line: 1319, baseType: !188, size: 64, offset: 13056)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !189, file: !190, line: 1322, baseType: !3888, size: 64, offset: 13120)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3890, line: 56, size: 512, elements: !3891)
!3890 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3891 = !{!3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3889, file: !3890, line: 57, baseType: !3888, size: 64)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3889, file: !3890, line: 58, baseType: !204, size: 64, offset: 64)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3889, file: !3890, line: 59, baseType: !186, size: 64, offset: 128)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3889, file: !3890, line: 60, baseType: !186, size: 64, offset: 192)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3889, file: !3890, line: 61, baseType: !3017, size: 64, offset: 256)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3889, file: !3890, line: 62, baseType: !15, size: 32, offset: 320)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3889, file: !3890, line: 63, baseType: !1115, size: 64, offset: 384)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3889, file: !3890, line: 64, baseType: !1921, size: 64, offset: 448)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !189, file: !190, line: 1326, baseType: !206, size: 32, offset: 13184)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !189, file: !190, line: 1342, baseType: !204, size: 64, offset: 13248)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !189, file: !190, line: 1343, baseType: !251, size: 64, offset: 13312)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !189, file: !190, line: 1344, baseType: !250, size: 64, offset: 13376)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !189, file: !190, line: 1345, baseType: !251, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !189, file: !190, line: 1346, baseType: !251, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !189, file: !190, line: 1347, baseType: !251, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !189, file: !190, line: 1348, baseType: !1348, size: 128, align: 64, offset: 13504)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !189, file: !190, line: 1358, baseType: !3909, size: 34816, offset: 13824)
!3909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3910, line: 485, size: 34816, elements: !3911)
!3910 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3911 = !{!3912, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3941, !3942, !3943, !3944, !3945, !3946, !3949, !3950, !3951}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3909, file: !3910, line: 487, baseType: !3913, size: 192)
!3913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3914, size: 192, elements: !723)
!3914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3915, line: 16, size: 64, elements: !3916)
!3915 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3916 = !{!3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3914, file: !3915, line: 17, baseType: !1393, size: 16)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3914, file: !3915, line: 18, baseType: !1393, size: 16, offset: 16)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3914, file: !3915, line: 19, baseType: !1393, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3914, file: !3915, line: 19, baseType: !1393, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3914, file: !3915, line: 19, baseType: !1393, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3914, file: !3915, line: 19, baseType: !1393, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3914, file: !3915, line: 19, baseType: !1393, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3914, file: !3915, line: 20, baseType: !1393, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3914, file: !3915, line: 20, baseType: !1393, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3914, file: !3915, line: 20, baseType: !1393, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3914, file: !3915, line: 20, baseType: !1393, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3914, file: !3915, line: 20, baseType: !1393, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3914, file: !3915, line: 20, baseType: !1393, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3909, file: !3910, line: 491, baseType: !186, size: 64, offset: 192)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3909, file: !3910, line: 495, baseType: !268, size: 16, offset: 256)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3909, file: !3910, line: 496, baseType: !268, size: 16, offset: 272)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3909, file: !3910, line: 497, baseType: !268, size: 16, offset: 288)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3909, file: !3910, line: 498, baseType: !268, size: 16, offset: 304)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3909, file: !3910, line: 502, baseType: !186, size: 64, offset: 320)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3909, file: !3910, line: 503, baseType: !186, size: 64, offset: 384)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3909, file: !3910, line: 514, baseType: !3938, size: 256, offset: 448)
!3938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3939, size: 256, elements: !1670)
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3910, line: 483, flags: DIFlagFwdDecl)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3909, file: !3910, line: 516, baseType: !186, size: 64, offset: 704)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3909, file: !3910, line: 518, baseType: !186, size: 64, offset: 768)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3909, file: !3910, line: 520, baseType: !186, size: 64, offset: 832)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3909, file: !3910, line: 521, baseType: !186, size: 64, offset: 896)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3909, file: !3910, line: 522, baseType: !186, size: 64, offset: 960)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3909, file: !3910, line: 528, baseType: !3947, size: 64, offset: 1024)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3948, size: 64)
!3948 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3910, line: 10, flags: DIFlagFwdDecl)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3909, file: !3910, line: 535, baseType: !186, size: 64, offset: 1088)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3909, file: !3910, line: 537, baseType: !15, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3909, file: !3910, line: 540, baseType: !3952, size: 33280, offset: 1536)
!3952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3953, line: 317, size: 33280, elements: !3954)
!3953 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3954 = !{!3955, !3956, !3957}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3952, file: !3953, line: 330, baseType: !15, size: 32)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3952, file: !3953, line: 337, baseType: !186, size: 64, offset: 64)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3952, file: !3953, line: 348, baseType: !3958, size: 32768, offset: 512)
!3958 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3953, line: 304, size: 32768, elements: !3959)
!3959 = !{!3960, !3975, !4012, !4062, !4075}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3958, file: !3953, line: 305, baseType: !3961, size: 896)
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3953, line: 12, size: 896, elements: !3962)
!3962 = !{!3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3974}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3961, file: !3953, line: 13, baseType: !198, size: 32)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3961, file: !3953, line: 14, baseType: !198, size: 32, offset: 32)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3961, file: !3953, line: 15, baseType: !198, size: 32, offset: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3961, file: !3953, line: 16, baseType: !198, size: 32, offset: 96)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3961, file: !3953, line: 17, baseType: !198, size: 32, offset: 128)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3961, file: !3953, line: 18, baseType: !198, size: 32, offset: 160)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3961, file: !3953, line: 19, baseType: !198, size: 32, offset: 192)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3961, file: !3953, line: 22, baseType: !3971, size: 640, offset: 224)
!3971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 640, elements: !3972)
!3972 = !{!3973}
!3973 = !DISubrange(count: 20)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3961, file: !3953, line: 25, baseType: !198, size: 32, offset: 864)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3958, file: !3953, line: 306, baseType: !3976, size: 4096, align: 128)
!3976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3953, line: 34, size: 4096, align: 128, elements: !3977)
!3977 = !{!3978, !3979, !3980, !3981, !3982, !3997, !3998, !3999, !4001, !4003, !4007}
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3976, file: !3953, line: 35, baseType: !1393, size: 16)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3976, file: !3953, line: 36, baseType: !1393, size: 16, offset: 16)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3976, file: !3953, line: 37, baseType: !1393, size: 16, offset: 32)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3976, file: !3953, line: 38, baseType: !1393, size: 16, offset: 48)
!3982 = !DIDerivedType(tag: DW_TAG_member, scope: !3976, file: !3953, line: 39, baseType: !3983, size: 128, offset: 64)
!3983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3976, file: !3953, line: 39, size: 128, elements: !3984)
!3984 = !{!3985, !3990}
!3985 = !DIDerivedType(tag: DW_TAG_member, scope: !3983, file: !3953, line: 40, baseType: !3986, size: 128)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3983, file: !3953, line: 40, size: 128, elements: !3987)
!3987 = !{!3988, !3989}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3986, file: !3953, line: 41, baseType: !250, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3986, file: !3953, line: 42, baseType: !250, size: 64, offset: 64)
!3990 = !DIDerivedType(tag: DW_TAG_member, scope: !3983, file: !3953, line: 44, baseType: !3991, size: 128)
!3991 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3983, file: !3953, line: 44, size: 128, elements: !3992)
!3992 = !{!3993, !3994, !3995, !3996}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3991, file: !3953, line: 45, baseType: !198, size: 32)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3991, file: !3953, line: 46, baseType: !198, size: 32, offset: 32)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3991, file: !3953, line: 47, baseType: !198, size: 32, offset: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3991, file: !3953, line: 48, baseType: !198, size: 32, offset: 96)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3976, file: !3953, line: 51, baseType: !198, size: 32, offset: 192)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3976, file: !3953, line: 52, baseType: !198, size: 32, offset: 224)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3976, file: !3953, line: 55, baseType: !4000, size: 1024, offset: 256)
!4000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 1024, elements: !568)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3976, file: !3953, line: 58, baseType: !4002, size: 2048, offset: 1280)
!4002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 2048, elements: !1270)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3976, file: !3953, line: 60, baseType: !4004, size: 384, offset: 3328)
!4004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 384, elements: !4005)
!4005 = !{!4006}
!4006 = !DISubrange(count: 12)
!4007 = !DIDerivedType(tag: DW_TAG_member, scope: !3976, file: !3953, line: 62, baseType: !4008, size: 384, offset: 3712)
!4008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3976, file: !3953, line: 62, size: 384, elements: !4009)
!4009 = !{!4010, !4011}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4008, file: !3953, line: 63, baseType: !4004, size: 384)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4008, file: !3953, line: 64, baseType: !4004, size: 384)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3958, file: !3953, line: 307, baseType: !4013, size: 1088)
!4013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3953, line: 79, size: 1088, elements: !4014)
!4014 = !{!4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4061}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4013, file: !3953, line: 80, baseType: !198, size: 32)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4013, file: !3953, line: 81, baseType: !198, size: 32, offset: 32)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4013, file: !3953, line: 82, baseType: !198, size: 32, offset: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4013, file: !3953, line: 83, baseType: !198, size: 32, offset: 96)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4013, file: !3953, line: 84, baseType: !198, size: 32, offset: 128)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4013, file: !3953, line: 85, baseType: !198, size: 32, offset: 160)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4013, file: !3953, line: 86, baseType: !198, size: 32, offset: 192)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4013, file: !3953, line: 88, baseType: !3971, size: 640, offset: 224)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4013, file: !3953, line: 89, baseType: !6, size: 8, offset: 864)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4013, file: !3953, line: 90, baseType: !6, size: 8, offset: 872)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4013, file: !3953, line: 91, baseType: !6, size: 8, offset: 880)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4013, file: !3953, line: 92, baseType: !6, size: 8, offset: 888)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4013, file: !3953, line: 93, baseType: !6, size: 8, offset: 896)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4013, file: !3953, line: 94, baseType: !6, size: 8, offset: 904)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4013, file: !3953, line: 95, baseType: !4030, size: 64, offset: 960)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4032, line: 11, size: 128, elements: !4033)
!4032 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4033 = !{!4034, !4035}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4031, file: !4032, line: 12, baseType: !202, size: 64)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4031, file: !4032, line: 13, baseType: !4036, size: 64, offset: 64)
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4038, line: 56, size: 1344, elements: !4039)
!4038 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4039 = !{!4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4037, file: !4038, line: 61, baseType: !186, size: 64)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4037, file: !4038, line: 62, baseType: !186, size: 64, offset: 64)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4037, file: !4038, line: 63, baseType: !186, size: 64, offset: 128)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4037, file: !4038, line: 64, baseType: !186, size: 64, offset: 192)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4037, file: !4038, line: 65, baseType: !186, size: 64, offset: 256)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4037, file: !4038, line: 66, baseType: !186, size: 64, offset: 320)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4037, file: !4038, line: 68, baseType: !186, size: 64, offset: 384)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4037, file: !4038, line: 69, baseType: !186, size: 64, offset: 448)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4037, file: !4038, line: 70, baseType: !186, size: 64, offset: 512)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4037, file: !4038, line: 71, baseType: !186, size: 64, offset: 576)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4037, file: !4038, line: 72, baseType: !186, size: 64, offset: 640)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4037, file: !4038, line: 73, baseType: !186, size: 64, offset: 704)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4037, file: !4038, line: 74, baseType: !186, size: 64, offset: 768)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4037, file: !4038, line: 75, baseType: !186, size: 64, offset: 832)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4037, file: !4038, line: 76, baseType: !186, size: 64, offset: 896)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4037, file: !4038, line: 81, baseType: !186, size: 64, offset: 960)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4037, file: !4038, line: 83, baseType: !186, size: 64, offset: 1024)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4037, file: !4038, line: 84, baseType: !186, size: 64, offset: 1088)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4037, file: !4038, line: 85, baseType: !186, size: 64, offset: 1152)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4037, file: !4038, line: 86, baseType: !186, size: 64, offset: 1216)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4037, file: !4038, line: 87, baseType: !186, size: 64, offset: 1280)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4013, file: !3953, line: 96, baseType: !198, size: 32, offset: 1024)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3958, file: !3953, line: 308, baseType: !4063, size: 4608, align: 512)
!4063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3953, line: 289, size: 4608, align: 512, elements: !4064)
!4064 = !{!4065, !4066, !4073}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4063, file: !3953, line: 290, baseType: !3976, size: 4096, align: 128)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4063, file: !3953, line: 291, baseType: !4067, size: 512, offset: 4096)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3953, line: 268, size: 512, elements: !4068)
!4068 = !{!4069, !4070, !4071}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4067, file: !3953, line: 269, baseType: !250, size: 64)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4067, file: !3953, line: 270, baseType: !250, size: 64, offset: 64)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4067, file: !3953, line: 271, baseType: !4072, size: 384, offset: 128)
!4072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 384, elements: !1769)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4063, file: !3953, line: 292, baseType: !4074, offset: 4608)
!4074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, elements: !1867)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3958, file: !3953, line: 309, baseType: !4076, size: 32768)
!4076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 32768, elements: !4077)
!4077 = !{!4078}
!4078 = !DISubrange(count: 4096)
!4079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4080, size: 64)
!4080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_erase_command", file: !125, line: 117, size: 256, elements: !4081)
!4081 = !{!4082, !4083, !4084, !4085}
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4080, file: !125, line: 118, baseType: !243, size: 128)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4080, file: !125, line: 119, baseType: !198, size: 32, offset: 128)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4080, file: !125, line: 120, baseType: !198, size: 32, offset: 160)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !4080, file: !125, line: 121, baseType: !6, size: 8, offset: 192)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !246)
!4088 = !{!0, !4089, !4098, !4617, !4619, !4624, !4629, !4634, !4639, !4644, !4649, !4652, !4657, !4659, !4665, !4670, !4673, !4700, !4705}
!4089 = !DIGlobalVariableExpression(var: !4090, expr: !DIExpression())
!4090 = distinct !DIGlobalVariable(name: "hwcaps_read2cmd", scope: !4091, file: !3, line: 2240, type: !4094, isLocal: true, isDefinition: true)
!4091 = distinct !DISubprogram(name: "spi_nor_hwcaps_read2cmd", scope: !3, file: !3, line: 2238, type: !4092, scopeLine: 2239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{!182, !198}
!4094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4095, size: 960, elements: !4096)
!4095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!4096 = !{!4097, !1711}
!4097 = !DISubrange(count: 15)
!4098 = !DIGlobalVariableExpression(var: !4099, expr: !DIExpression())
!4099 = distinct !DIGlobalVariable(name: "__key", scope: !4100, file: !3, line: 3125, type: !717, isLocal: true, isDefinition: true)
!4100 = distinct !DISubprogram(name: "spi_nor_scan", scope: !3, file: !3, line: 3084, type: !4101, scopeLine: 3086, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{!182, !4103, !610, !4547}
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4104, size: 64)
!4104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor", file: !108, line: 359, size: 10816, elements: !4105)
!4105 = !{!4106, !4107, !4108, !4109, !4438, !4440, !4441, !4561, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4610, !4611, !4616}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "mtd", scope: !4104, file: !108, line: 360, baseType: !1025, size: 9664)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4104, file: !108, line: 361, baseType: !827, size: 192, offset: 9664)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4104, file: !108, line: 362, baseType: !2099, size: 64, offset: 9856)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "spimem", scope: !4104, file: !108, line: 363, baseType: !4110, size: 64, offset: 9920)
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_mem", file: !102, line: 194, size: 192, elements: !4112)
!4112 = !{!4113, !4436, !4437}
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !4111, file: !102, line: 195, baseType: !4114, size: 64)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_device", file: !4116, line: 159, size: 8256, elements: !4117)
!4116 = !DIFile(filename: "./include/linux/spi/spi.h", directory: "/home/lizy2001/genbc/linux")
!4117 = !{!4118, !4119, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4115, file: !4116, line: 160, baseType: !1226, size: 5568)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !4115, file: !4116, line: 161, baseType: !4120, size: 64, offset: 5568)
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4121, size: 64)
!4121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_controller", file: !4116, line: 466, size: 11072, elements: !4122)
!4122 = !{!4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4139, !4140, !4141, !4142, !4143, !4144, !4148, !4157, !4175, !4179, !4229, !4230, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4272, !4276, !4277, !4278, !4279, !4280, !4284, !4288, !4292, !4378, !4379, !4380, !4381, !4382, !4387, !4388, !4389, !4390, !4409, !4412, !4413, !4414, !4415, !4419, !4420}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4121, file: !4116, line: 467, baseType: !1226, size: 5568)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4121, file: !4116, line: 469, baseType: !243, size: 128, offset: 5568)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "bus_num", scope: !4121, file: !4116, line: 477, baseType: !3352, size: 16, offset: 5696)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "num_chipselect", scope: !4121, file: !4116, line: 482, baseType: !1393, size: 16, offset: 5712)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !4121, file: !4116, line: 487, baseType: !1393, size: 16, offset: 5728)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "mode_bits", scope: !4121, file: !4116, line: 490, baseType: !198, size: 32, offset: 5760)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "buswidth_override_bits", scope: !4121, file: !4116, line: 493, baseType: !198, size: 32, offset: 5792)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_word_mask", scope: !4121, file: !4116, line: 496, baseType: !198, size: 32, offset: 5824)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "min_speed_hz", scope: !4121, file: !4116, line: 501, baseType: !198, size: 32, offset: 5856)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed_hz", scope: !4121, file: !4116, line: 502, baseType: !198, size: 32, offset: 5888)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4121, file: !4116, line: 505, baseType: !1393, size: 16, offset: 5920)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !4121, file: !4116, line: 515, baseType: !655, size: 8, offset: 5936)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "max_transfer_size", scope: !4121, file: !4116, line: 521, baseType: !4136, size: 64, offset: 5952)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!1108, !4114}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "max_message_size", scope: !4121, file: !4116, line: 522, baseType: !4136, size: 64, offset: 6016)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "io_mutex", scope: !4121, file: !4116, line: 525, baseType: !827, size: 192, offset: 6080)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock_spinlock", scope: !4121, file: !4116, line: 528, baseType: !581, offset: 6272)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock_mutex", scope: !4121, file: !4116, line: 529, baseType: !827, size: 192, offset: 6272)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock_flag", scope: !4121, file: !4116, line: 532, baseType: !655, size: 8, offset: 6464)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !4121, file: !4116, line: 540, baseType: !4145, size: 64, offset: 6528)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{!182, !4114}
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "set_cs_timing", scope: !4121, file: !4116, line: 550, baseType: !4149, size: 64, offset: 6592)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!182, !4114, !4152, !4152, !4152}
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4153, size: 64)
!4153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_delay", file: !4116, line: 98, size: 32, elements: !4154)
!4154 = !{!4155, !4156}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4153, file: !4116, line: 102, baseType: !1393, size: 16)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !4153, file: !4116, line: 103, baseType: !6, size: 8, offset: 16)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "transfer", scope: !4121, file: !4116, line: 572, baseType: !4158, size: 64, offset: 6656)
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 64)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!182, !4114, !4161}
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_message", file: !4116, line: 999, size: 832, elements: !4163)
!4163 = !{!4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "transfers", scope: !4162, file: !4116, line: 1000, baseType: !243, size: 128)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !4162, file: !4116, line: 1002, baseType: !4114, size: 64, offset: 128)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "is_dma_mapped", scope: !4162, file: !4116, line: 1004, baseType: !15, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4162, file: !4116, line: 1018, baseType: !1930, size: 64, offset: 256)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4162, file: !4116, line: 1019, baseType: !204, size: 64, offset: 320)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length", scope: !4162, file: !4116, line: 1020, baseType: !15, size: 32, offset: 384)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4162, file: !4116, line: 1021, baseType: !15, size: 32, offset: 416)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4162, file: !4116, line: 1022, baseType: !182, size: 32, offset: 448)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4162, file: !4116, line: 1028, baseType: !243, size: 128, offset: 512)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4162, file: !4116, line: 1029, baseType: !204, size: 64, offset: 640)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4162, file: !4116, line: 1032, baseType: !243, size: 128, offset: 704)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4121, file: !4116, line: 576, baseType: !4176, size: 64, offset: 6720)
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4177, size: 64)
!4177 = !DISubroutineType(types: !4178)
!4178 = !{null, !4114}
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "can_dma", scope: !4121, file: !4116, line: 585, baseType: !4180, size: 64, offset: 6784)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!655, !4120, !4114, !4183}
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_transfer", file: !4116, line: 926, size: 1152, elements: !4185)
!4185 = !{!4186, !4187, !4188, !4189, !4190, !4191, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4226, !4227, !4228}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "tx_buf", scope: !4184, file: !4116, line: 932, baseType: !1921, size: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buf", scope: !4184, file: !4116, line: 933, baseType: !204, size: 64, offset: 64)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4184, file: !4116, line: 934, baseType: !15, size: 32, offset: 128)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dma", scope: !4184, file: !4116, line: 936, baseType: !3087, size: 64, offset: 192)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dma", scope: !4184, file: !4116, line: 937, baseType: !3087, size: 64, offset: 256)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sg", scope: !4184, file: !4116, line: 938, baseType: !4192, size: 128, offset: 320)
!4192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !4193, line: 42, size: 128, elements: !4194)
!4193 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4194 = !{!4195, !4204, !4205}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !4192, file: !4193, line: 43, baseType: !4196, size: 64)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4193, line: 11, size: 256, elements: !4198)
!4198 = !{!4199, !4200, !4201, !4202, !4203}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4197, file: !4193, line: 12, baseType: !186, size: 64)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4197, file: !4193, line: 13, baseType: !15, size: 32, offset: 64)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4197, file: !4193, line: 14, baseType: !15, size: 32, offset: 96)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4197, file: !4193, line: 15, baseType: !3087, size: 64, offset: 128)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4197, file: !4193, line: 17, baseType: !15, size: 32, offset: 192)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !4192, file: !4193, line: 44, baseType: !15, size: 32, offset: 64)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !4192, file: !4193, line: 45, baseType: !15, size: 32, offset: 96)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sg", scope: !4184, file: !4116, line: 939, baseType: !4192, size: 128, offset: 448)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "cs_change", scope: !4184, file: !4116, line: 941, baseType: !15, size: 1, offset: 576, flags: DIFlagBitField, extraData: i64 576)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "tx_nbits", scope: !4184, file: !4116, line: 942, baseType: !15, size: 3, offset: 577, flags: DIFlagBitField, extraData: i64 576)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nbits", scope: !4184, file: !4116, line: 943, baseType: !15, size: 3, offset: 580, flags: DIFlagBitField, extraData: i64 576)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_word", scope: !4184, file: !4116, line: 947, baseType: !6, size: 8, offset: 584)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "delay_usecs", scope: !4184, file: !4116, line: 948, baseType: !1393, size: 16, offset: 592)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !4184, file: !4116, line: 949, baseType: !4153, size: 32, offset: 608)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "cs_change_delay", scope: !4184, file: !4116, line: 950, baseType: !4153, size: 32, offset: 640)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "word_delay", scope: !4184, file: !4116, line: 951, baseType: !4153, size: 32, offset: 672)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "speed_hz", scope: !4184, file: !4116, line: 952, baseType: !198, size: 32, offset: 704)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "effective_speed_hz", scope: !4184, file: !4116, line: 954, baseType: !198, size: 32, offset: 736)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_sts_word_pre", scope: !4184, file: !4116, line: 956, baseType: !15, size: 32, offset: 768)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_sts_word_post", scope: !4184, file: !4116, line: 957, baseType: !15, size: 32, offset: 800)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_sts", scope: !4184, file: !4116, line: 959, baseType: !4220, size: 64, offset: 832)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_system_timestamp", file: !4222, line: 33, size: 256, elements: !4223)
!4222 = !DIFile(filename: "./include/linux/ptp_clock_kernel.h", directory: "/home/lizy2001/genbc/linux")
!4223 = !{!4224, !4225}
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "pre_ts", scope: !4221, file: !4222, line: 34, baseType: !2841, size: 128)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "post_ts", scope: !4221, file: !4222, line: 35, baseType: !2841, size: 128, offset: 128)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "timestamped", scope: !4184, file: !4116, line: 961, baseType: !655, size: 8, offset: 896)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_list", scope: !4184, file: !4116, line: 963, baseType: !243, size: 128, offset: 960)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !4184, file: !4116, line: 966, baseType: !1393, size: 16, offset: 1088)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !4121, file: !4116, line: 595, baseType: !655, size: 8, offset: 6848)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "kworker", scope: !4121, file: !4116, line: 596, baseType: !4231, size: 64, offset: 6912)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64)
!4232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kthread_worker", file: !4233, line: 89, size: 448, elements: !4234)
!4233 = !DIFile(filename: "./include/linux/kthread.h", directory: "/home/lizy2001/genbc/linux")
!4234 = !{!4235, !4236, !4237, !4238, !4239, !4240}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4232, file: !4233, line: 90, baseType: !15, size: 32)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4232, file: !4233, line: 91, baseType: !316, offset: 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !4232, file: !4233, line: 92, baseType: !243, size: 128, offset: 64)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_work_list", scope: !4232, file: !4233, line: 93, baseType: !243, size: 128, offset: 192)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4232, file: !4233, line: 94, baseType: !188, size: 64, offset: 320)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "current_work", scope: !4232, file: !4233, line: 95, baseType: !4241, size: 64, offset: 384)
!4241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4242, size: 64)
!4242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kthread_work", file: !4233, line: 98, size: 320, elements: !4243)
!4243 = !{!4244, !4245, !4250, !4251}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4242, file: !4233, line: 99, baseType: !243, size: 128)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4242, file: !4233, line: 100, baseType: !4246, size: 64, offset: 128)
!4246 = !DIDerivedType(tag: DW_TAG_typedef, name: "kthread_work_func_t", file: !4233, line: 82, baseType: !4247)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{null, !4241}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "worker", scope: !4242, file: !4233, line: 101, baseType: !4231, size: 64, offset: 192)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "canceling", scope: !4242, file: !4233, line: 103, baseType: !182, size: 32, offset: 256)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "pump_messages", scope: !4121, file: !4116, line: 597, baseType: !4242, size: 320, offset: 6976)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !4121, file: !4116, line: 598, baseType: !581, offset: 7296)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4121, file: !4116, line: 599, baseType: !243, size: 128, offset: 7296)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "cur_msg", scope: !4121, file: !4116, line: 600, baseType: !4161, size: 64, offset: 7424)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "idling", scope: !4121, file: !4116, line: 601, baseType: !655, size: 8, offset: 7488)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !4121, file: !4116, line: 602, baseType: !655, size: 8, offset: 7496)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !4121, file: !4116, line: 603, baseType: !655, size: 8, offset: 7504)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !4121, file: !4116, line: 604, baseType: !655, size: 8, offset: 7512)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "auto_runtime_pm", scope: !4121, file: !4116, line: 605, baseType: !655, size: 8, offset: 7520)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "cur_msg_prepared", scope: !4121, file: !4116, line: 606, baseType: !655, size: 8, offset: 7528)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "cur_msg_mapped", scope: !4121, file: !4116, line: 607, baseType: !655, size: 8, offset: 7536)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "last_cs_enable", scope: !4121, file: !4116, line: 608, baseType: !655, size: 8, offset: 7544)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "last_cs_mode_high", scope: !4121, file: !4116, line: 609, baseType: !655, size: 8, offset: 7552)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "fallback", scope: !4121, file: !4116, line: 610, baseType: !655, size: 8, offset: 7560)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_completion", scope: !4121, file: !4116, line: 611, baseType: !2278, size: 192, offset: 7616)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "max_dma_len", scope: !4121, file: !4116, line: 612, baseType: !1108, size: 64, offset: 7808)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_transfer_hardware", scope: !4121, file: !4116, line: 614, baseType: !4269, size: 64, offset: 7872)
!4269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4270, size: 64)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!182, !4120}
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_one_message", scope: !4121, file: !4116, line: 615, baseType: !4273, size: 64, offset: 7936)
!4273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4274, size: 64)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!182, !4120, !4161}
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_transfer_hardware", scope: !4121, file: !4116, line: 617, baseType: !4269, size: 64, offset: 8000)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_message", scope: !4121, file: !4116, line: 618, baseType: !4273, size: 64, offset: 8064)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_message", scope: !4121, file: !4116, line: 620, baseType: !4273, size: 64, offset: 8128)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "slave_abort", scope: !4121, file: !4116, line: 622, baseType: !4269, size: 64, offset: 8192)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "set_cs", scope: !4121, file: !4116, line: 628, baseType: !4281, size: 64, offset: 8256)
!4281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4282, size: 64)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{null, !4114, !655}
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_one", scope: !4121, file: !4116, line: 629, baseType: !4285, size: 64, offset: 8320)
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4286, size: 64)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!182, !4120, !4114, !4183}
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "handle_err", scope: !4121, file: !4116, line: 631, baseType: !4289, size: 64, offset: 8384)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{null, !4120, !4161}
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "mem_ops", scope: !4121, file: !4116, line: 635, baseType: !4293, size: 64, offset: 8448)
!4293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4294, size: 64)
!4294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4295)
!4295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_controller_mem_ops", file: !102, line: 264, size: 512, elements: !4296)
!4296 = !{!4297, !4336, !4342, !4346, !4350, !4366, !4370, !4374}
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_op_size", scope: !4295, file: !102, line: 265, baseType: !4298, size: 64)
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 64)
!4299 = !DISubroutineType(types: !4300)
!4300 = !{!182, !4110, !4301}
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_mem_op", file: !102, line: 98, size: 448, elements: !4303)
!4303 = !{!4304, !4311, !4318, !4324}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4302, file: !102, line: 104, baseType: !4305, size: 48)
!4305 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4302, file: !102, line: 99, size: 48, elements: !4306)
!4306 = !{!4307, !4308, !4309, !4310}
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !4305, file: !102, line: 100, baseType: !6, size: 8)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "buswidth", scope: !4305, file: !102, line: 101, baseType: !6, size: 8, offset: 8)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "dtr", scope: !4305, file: !102, line: 102, baseType: !6, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !4305, file: !102, line: 103, baseType: !1393, size: 16, offset: 32)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4302, file: !102, line: 111, baseType: !4312, size: 128, offset: 64)
!4312 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4302, file: !102, line: 106, size: 128, elements: !4313)
!4313 = !{!4314, !4315, !4316, !4317}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !4312, file: !102, line: 107, baseType: !6, size: 8)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "buswidth", scope: !4312, file: !102, line: 108, baseType: !6, size: 8, offset: 8)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "dtr", scope: !4312, file: !102, line: 109, baseType: !6, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4312, file: !102, line: 110, baseType: !250, size: 64, offset: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !4302, file: !102, line: 117, baseType: !4319, size: 24, offset: 192)
!4319 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4302, file: !102, line: 113, size: 24, elements: !4320)
!4320 = !{!4321, !4322, !4323}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !4319, file: !102, line: 114, baseType: !6, size: 8)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "buswidth", scope: !4319, file: !102, line: 115, baseType: !6, size: 8, offset: 8)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "dtr", scope: !4319, file: !102, line: 116, baseType: !6, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4302, file: !102, line: 128, baseType: !4325, size: 192, offset: 256)
!4325 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4302, file: !102, line: 119, size: 192, elements: !4326)
!4326 = !{!4327, !4328, !4329, !4330, !4331}
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "buswidth", scope: !4325, file: !102, line: 120, baseType: !6, size: 8)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "dtr", scope: !4325, file: !102, line: 121, baseType: !6, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4325, file: !102, line: 122, baseType: !101, size: 32, offset: 32)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !4325, file: !102, line: 123, baseType: !15, size: 32, offset: 64)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4325, file: !102, line: 127, baseType: !4332, size: 64, offset: 128)
!4332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4325, file: !102, line: 124, size: 64, elements: !4333)
!4333 = !{!4334, !4335}
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !4332, file: !102, line: 125, baseType: !204, size: 64)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !4332, file: !102, line: 126, baseType: !1921, size: 64)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "supports_op", scope: !4295, file: !102, line: 266, baseType: !4337, size: 64, offset: 64)
!4337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4338, size: 64)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{!655, !4110, !4340}
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4302)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "exec_op", scope: !4295, file: !102, line: 268, baseType: !4343, size: 64, offset: 128)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 64)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!182, !4110, !4340}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4295, file: !102, line: 270, baseType: !4347, size: 64, offset: 192)
!4347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4348, size: 64)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{!610, !4110}
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "dirmap_create", scope: !4295, file: !102, line: 271, baseType: !4351, size: 64, offset: 256)
!4351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4352, size: 64)
!4352 = !DISubroutineType(types: !4353)
!4353 = !{!182, !4354}
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_mem_dirmap_desc", file: !102, line: 175, size: 768, elements: !4356)
!4356 = !{!4357, !4358, !4364, !4365}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !4355, file: !102, line: 176, baseType: !4110, size: 64)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4355, file: !102, line: 177, baseType: !4359, size: 576, offset: 64)
!4359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_mem_dirmap_info", file: !102, line: 152, size: 576, elements: !4360)
!4360 = !{!4361, !4362, !4363}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "op_tmpl", scope: !4359, file: !102, line: 153, baseType: !4302, size: 448)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4359, file: !102, line: 154, baseType: !250, size: 64, offset: 448)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4359, file: !102, line: 155, baseType: !250, size: 64, offset: 512)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "nodirmap", scope: !4355, file: !102, line: 178, baseType: !15, size: 32, offset: 640)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4355, file: !102, line: 179, baseType: !204, size: 64, offset: 704)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "dirmap_destroy", scope: !4295, file: !102, line: 272, baseType: !4367, size: 64, offset: 320)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{null, !4354}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "dirmap_read", scope: !4295, file: !102, line: 273, baseType: !4371, size: 64, offset: 384)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!1296, !4354, !250, !1108, !204}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "dirmap_write", scope: !4295, file: !102, line: 275, baseType: !4375, size: 64, offset: 448)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!1296, !4354, !250, !1108, !1921}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "cs_setup", scope: !4121, file: !4116, line: 638, baseType: !4153, size: 32, offset: 8512)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "cs_hold", scope: !4121, file: !4116, line: 639, baseType: !4153, size: 32, offset: 8544)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "cs_inactive", scope: !4121, file: !4116, line: 640, baseType: !4153, size: 32, offset: 8576)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "cs_gpios", scope: !4121, file: !4116, line: 643, baseType: !779, size: 64, offset: 8640)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "cs_gpiods", scope: !4121, file: !4116, line: 644, baseType: !4383, size: 64, offset: 8704)
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 64)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4385, size: 64)
!4385 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !4386, line: 19, flags: DIFlagFwdDecl)
!4386 = !DIFile(filename: "./include/linux/gpio/consumer.h", directory: "/home/lizy2001/genbc/linux")
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "use_gpio_descriptors", scope: !4121, file: !4116, line: 645, baseType: !655, size: 8, offset: 8768)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "unused_native_cs", scope: !4121, file: !4116, line: 646, baseType: !6, size: 8, offset: 8776)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "max_native_cs", scope: !4121, file: !4116, line: 647, baseType: !6, size: 8, offset: 8784)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !4121, file: !4116, line: 650, baseType: !4391, size: 1792, offset: 8832)
!4391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_statistics", file: !4116, line: 56, size: 1792, elements: !4392)
!4392 = !{!4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4408}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4391, file: !4116, line: 57, baseType: !581)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "messages", scope: !4391, file: !4116, line: 59, baseType: !186, size: 64)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "transfers", scope: !4391, file: !4116, line: 60, baseType: !186, size: 64, offset: 64)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !4391, file: !4116, line: 61, baseType: !186, size: 64, offset: 128)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "timedout", scope: !4391, file: !4116, line: 62, baseType: !186, size: 64, offset: 192)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "spi_sync", scope: !4391, file: !4116, line: 64, baseType: !186, size: 64, offset: 256)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "spi_sync_immediate", scope: !4391, file: !4116, line: 65, baseType: !186, size: 64, offset: 320)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "spi_async", scope: !4391, file: !4116, line: 66, baseType: !186, size: 64, offset: 384)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !4391, file: !4116, line: 68, baseType: !252, size: 64, offset: 448)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_rx", scope: !4391, file: !4116, line: 69, baseType: !252, size: 64, offset: 512)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_tx", scope: !4391, file: !4116, line: 70, baseType: !252, size: 64, offset: 576)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_bytes_histo", scope: !4391, file: !4116, line: 73, baseType: !4405, size: 1088, offset: 640)
!4405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 1088, elements: !4406)
!4406 = !{!4407}
!4407 = !DISubrange(count: 17)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "transfers_split_maxsize", scope: !4391, file: !4116, line: 75, baseType: !186, size: 64, offset: 1728)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "dma_tx", scope: !4121, file: !4116, line: 653, baseType: !4410, size: 64, offset: 10624)
!4410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4411, size: 64)
!4411 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan", file: !4116, line: 18, flags: DIFlagFwdDecl)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "dma_rx", scope: !4121, file: !4116, line: 654, baseType: !4410, size: 64, offset: 10688)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "dummy_rx", scope: !4121, file: !4116, line: 657, baseType: !204, size: 64, offset: 10752)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "dummy_tx", scope: !4121, file: !4116, line: 658, baseType: !204, size: 64, offset: 10816)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "fw_translate_cs", scope: !4121, file: !4116, line: 660, baseType: !4416, size: 64, offset: 10880)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = !DISubroutineType(types: !4418)
!4418 = !{!182, !4120, !15}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_sts_supported", scope: !4121, file: !4116, line: 666, baseType: !655, size: 8, offset: 10944)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags", scope: !4121, file: !4116, line: 669, baseType: !186, size: 64, offset: 11008)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !4115, file: !4116, line: 162, baseType: !4120, size: 64, offset: 5632)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed_hz", scope: !4115, file: !4116, line: 163, baseType: !198, size: 32, offset: 5696)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select", scope: !4115, file: !4116, line: 164, baseType: !6, size: 8, offset: 5728)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_word", scope: !4115, file: !4116, line: 165, baseType: !6, size: 8, offset: 5736)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !4115, file: !4116, line: 166, baseType: !655, size: 8, offset: 5744)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4115, file: !4116, line: 167, baseType: !198, size: 32, offset: 5760)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4115, file: !4116, line: 188, baseType: !182, size: 32, offset: 5792)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "controller_state", scope: !4115, file: !4116, line: 189, baseType: !204, size: 64, offset: 5824)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "controller_data", scope: !4115, file: !4116, line: 190, baseType: !204, size: 64, offset: 5888)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "modalias", scope: !4115, file: !4116, line: 191, baseType: !2186, size: 256, offset: 5952)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4115, file: !4116, line: 192, baseType: !610, size: 64, offset: 6208)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "cs_gpio", scope: !4115, file: !4116, line: 193, baseType: !182, size: 32, offset: 6272)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "cs_gpiod", scope: !4115, file: !4116, line: 194, baseType: !4384, size: 64, offset: 6336)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "word_delay", scope: !4115, file: !4116, line: 195, baseType: !4153, size: 32, offset: 6400)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !4115, file: !4116, line: 198, baseType: !4391, size: 1792, offset: 6464)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "drvpriv", scope: !4111, file: !102, line: 196, baseType: !204, size: 64, offset: 64)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4111, file: !102, line: 197, baseType: !610, size: 64, offset: 128)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "bouncebuf", scope: !4104, file: !108, line: 364, baseType: !4439, size: 64, offset: 9984)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "bouncebuf_size", scope: !4104, file: !108, line: 365, baseType: !1108, size: 64, offset: 10048)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4104, file: !108, line: 366, baseType: !4442, size: 64, offset: 10112)
!4442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4443, size: 64)
!4443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4444)
!4444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flash_info", file: !125, line: 254, size: 320, elements: !4445)
!4445 = !{!4446, !4447, !4449, !4450, !4451, !4452, !4453, !4454, !4455}
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4444, file: !125, line: 255, baseType: !636, size: 64)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4444, file: !125, line: 262, baseType: !4448, size: 48, offset: 64)
!4448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 48, elements: !1769)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !4444, file: !125, line: 263, baseType: !6, size: 8, offset: 112)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !4444, file: !125, line: 268, baseType: !15, size: 32, offset: 128)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "n_sectors", scope: !4444, file: !125, line: 269, baseType: !1393, size: 16, offset: 160)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !4444, file: !125, line: 271, baseType: !1393, size: 16, offset: 176)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "addr_width", scope: !4444, file: !125, line: 272, baseType: !1393, size: 16, offset: 192)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4444, file: !125, line: 274, baseType: !198, size: 32, offset: 224)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "fixups", scope: !4444, file: !125, line: 316, baseType: !4456, size: 64, offset: 256)
!4456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4457, size: 64)
!4457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4458)
!4458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_fixups", file: !125, line: 245, size: 192, elements: !4459)
!4459 = !{!4460, !4464, !4560}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "default_init", scope: !4458, file: !125, line: 246, baseType: !4461, size: 64)
!4461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 64)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{null, !4103}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "post_bfpt", scope: !4458, file: !125, line: 247, baseType: !4465, size: 64, offset: 64)
!4465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 64)
!4466 = !DISubroutineType(types: !4467)
!4467 = !{!182, !4103, !4468, !4480, !4485}
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4470)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sfdp_parameter_header", file: !4471, line: 93, size: 64, elements: !4472)
!4471 = !DIFile(filename: "drivers/mtd/spi-nor/sfdp.h", directory: "/home/lizy2001/genbc/linux")
!4472 = !{!4473, !4474, !4475, !4476, !4477, !4479}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "id_lsb", scope: !4470, file: !4471, line: 94, baseType: !6, size: 8)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4470, file: !4471, line: 95, baseType: !6, size: 8, offset: 8)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !4470, file: !4471, line: 96, baseType: !6, size: 8, offset: 16)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4470, file: !4471, line: 97, baseType: !6, size: 8, offset: 24)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "parameter_table_pointer", scope: !4470, file: !4471, line: 98, baseType: !4478, size: 24, offset: 32)
!4478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 24, elements: !723)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "id_msb", scope: !4470, file: !4471, line: 99, baseType: !6, size: 8, offset: 56)
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4481, size: 64)
!4481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4482)
!4482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sfdp_bfpt", file: !4471, line: 25, size: 640, elements: !4483)
!4483 = !{!4484}
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !4482, file: !4471, line: 26, baseType: !3971, size: 640)
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4486, size: 64)
!4486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_flash_parameter", file: !125, line: 212, size: 2624, elements: !4487)
!4487 = !{!4488, !4489, !4490, !4494, !4503, !4511, !4531, !4535, !4539, !4543, !4549}
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4486, file: !125, line: 213, baseType: !250, size: 64)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !4486, file: !125, line: 214, baseType: !198, size: 32, offset: 64)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "hwcaps", scope: !4486, file: !125, line: 216, baseType: !4491, size: 32, offset: 96)
!4491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_hwcaps", file: !108, line: 220, size: 32, elements: !4492)
!4492 = !{!4493}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4491, file: !108, line: 221, baseType: !198, size: 32)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "reads", scope: !4486, file: !125, line: 217, baseType: !4495, size: 960, offset: 128)
!4495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4496, size: 960, elements: !4502)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_read_command", file: !125, line: 31, size: 64, elements: !4497)
!4497 = !{!4498, !4499, !4500, !4501}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "num_mode_clocks", scope: !4496, file: !125, line: 32, baseType: !6, size: 8)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "num_wait_states", scope: !4496, file: !125, line: 33, baseType: !6, size: 8, offset: 8)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !4496, file: !125, line: 34, baseType: !6, size: 8, offset: 16)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !4496, file: !125, line: 35, baseType: !107, size: 32, offset: 32)
!4502 = !{!4097}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "page_programs", scope: !4486, file: !125, line: 218, baseType: !4504, size: 448, offset: 1088)
!4504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4505, size: 448, elements: !4509)
!4505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_pp_command", file: !125, line: 38, size: 64, elements: !4506)
!4506 = !{!4507, !4508}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !4505, file: !125, line: 39, baseType: !6, size: 8)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !4505, file: !125, line: 40, baseType: !107, size: 32, offset: 32)
!4509 = !{!4510}
!4510 = !DISubrange(count: 7)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "erase_map", scope: !4486, file: !125, line: 220, baseType: !4512, size: 768, offset: 1536)
!4512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_erase_map", file: !125, line: 166, size: 768, elements: !4513)
!4513 = !{!4514, !4520, !4521, !4530}
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "regions", scope: !4512, file: !125, line: 167, baseType: !4515, size: 64)
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_erase_region", file: !125, line: 135, size: 128, elements: !4517)
!4517 = !{!4518, !4519}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4516, file: !125, line: 136, baseType: !250, size: 64)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4516, file: !125, line: 137, baseType: !250, size: 64, offset: 64)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "uniform_region", scope: !4512, file: !125, line: 168, baseType: !4516, size: 128, offset: 64)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "erase_type", scope: !4512, file: !125, line: 169, baseType: !4522, size: 512, offset: 192)
!4522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4523, size: 512, elements: !1670)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_erase_type", file: !125, line: 98, size: 128, elements: !4524)
!4524 = !{!4525, !4526, !4527, !4528, !4529}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4523, file: !125, line: 99, baseType: !198, size: 32)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "size_shift", scope: !4523, file: !125, line: 100, baseType: !198, size: 32, offset: 32)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "size_mask", scope: !4523, file: !125, line: 101, baseType: !198, size: 32, offset: 64)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !4523, file: !125, line: 102, baseType: !6, size: 8, offset: 96)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !4523, file: !125, line: 103, baseType: !6, size: 8, offset: 104)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "uniform_erase_type", scope: !4512, file: !125, line: 170, baseType: !6, size: 8, offset: 704)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "quad_enable", scope: !4486, file: !125, line: 222, baseType: !4532, size: 64, offset: 2304)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 64)
!4533 = !DISubroutineType(types: !4534)
!4534 = !{!182, !4103}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "set_4byte_addr_mode", scope: !4486, file: !125, line: 223, baseType: !4536, size: 64, offset: 2368)
!4536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4537, size: 64)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!182, !4103, !655}
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "convert_addr", scope: !4486, file: !125, line: 224, baseType: !4540, size: 64, offset: 2432)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{!198, !4103, !198}
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !4486, file: !125, line: 225, baseType: !4544, size: 64, offset: 2496)
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4545 = !DISubroutineType(types: !4546)
!4546 = !{!182, !4103, !4547}
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4548, size: 64)
!4548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4491)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "locking_ops", scope: !4486, file: !125, line: 227, baseType: !4550, size: 64, offset: 2560)
!4550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4551, size: 64)
!4551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4552)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_locking_ops", file: !125, line: 179, size: 192, elements: !4553)
!4553 = !{!4554, !4558, !4559}
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4552, file: !125, line: 180, baseType: !4555, size: 64)
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4556, size: 64)
!4556 = !DISubroutineType(types: !4557)
!4557 = !{!182, !4103, !674, !1033}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "unlock", scope: !4552, file: !125, line: 181, baseType: !4555, size: 64, offset: 64)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "is_locked", scope: !4552, file: !125, line: 182, baseType: !4555, size: 64, offset: 128)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "post_sfdp", scope: !4458, file: !125, line: 251, baseType: !4461, size: 64, offset: 128)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !4104, file: !108, line: 367, baseType: !4562, size: 64, offset: 10176)
!4562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4563, size: 64)
!4563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4564)
!4564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_manufacturer", file: !125, line: 376, size: 256, elements: !4565)
!4565 = !{!4566, !4567, !4568, !4569}
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4564, file: !125, line: 377, baseType: !610, size: 64)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !4564, file: !125, line: 378, baseType: !4442, size: 64, offset: 64)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "nparts", scope: !4564, file: !125, line: 379, baseType: !15, size: 32, offset: 128)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "fixups", scope: !4564, file: !125, line: 380, baseType: !4456, size: 64, offset: 192)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !4104, file: !108, line: 368, baseType: !198, size: 32, offset: 10240)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "addr_width", scope: !4104, file: !108, line: 369, baseType: !6, size: 8, offset: 10272)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "erase_opcode", scope: !4104, file: !108, line: 370, baseType: !6, size: 8, offset: 10280)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "read_opcode", scope: !4104, file: !108, line: 371, baseType: !6, size: 8, offset: 10288)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "read_dummy", scope: !4104, file: !108, line: 372, baseType: !6, size: 8, offset: 10296)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "program_opcode", scope: !4104, file: !108, line: 373, baseType: !6, size: 8, offset: 10304)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "read_proto", scope: !4104, file: !108, line: 374, baseType: !107, size: 32, offset: 10336)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "write_proto", scope: !4104, file: !108, line: 375, baseType: !107, size: 32, offset: 10368)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "reg_proto", scope: !4104, file: !108, line: 376, baseType: !107, size: 32, offset: 10400)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "sst_write_second", scope: !4104, file: !108, line: 377, baseType: !655, size: 8, offset: 10432)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4104, file: !108, line: 378, baseType: !198, size: 32, offset: 10464)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "controller_ops", scope: !4104, file: !108, line: 380, baseType: !4582, size: 64, offset: 10496)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 64)
!4583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4584)
!4584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_nor_controller_ops", file: !108, line: 308, size: 448, elements: !4585)
!4585 = !{!4586, !4587, !4588, !4592, !4598, !4602, !4606}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4584, file: !108, line: 309, baseType: !4532, size: 64)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare", scope: !4584, file: !108, line: 310, baseType: !4461, size: 64, offset: 64)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "read_reg", scope: !4584, file: !108, line: 311, baseType: !4589, size: 64, offset: 128)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!182, !4103, !6, !4439, !1108}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "write_reg", scope: !4584, file: !108, line: 312, baseType: !4593, size: 64, offset: 192)
!4593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4594, size: 64)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!182, !4103, !6, !4596, !1108}
!4596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4597, size: 64)
!4597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4584, file: !108, line: 315, baseType: !4599, size: 64, offset: 256)
!4599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 64)
!4600 = !DISubroutineType(types: !4601)
!4601 = !{!1296, !4103, !674, !1108, !4439}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4584, file: !108, line: 316, baseType: !4603, size: 64, offset: 320)
!4603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4604, size: 64)
!4604 = !DISubroutineType(types: !4605)
!4605 = !{!1296, !4103, !674, !1108, !4596}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "erase", scope: !4584, file: !108, line: 318, baseType: !4607, size: 64, offset: 384)
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{!182, !4103, !674}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !4104, file: !108, line: 382, baseType: !4485, size: 64, offset: 10560)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "dirmap", scope: !4104, file: !108, line: 387, baseType: !4612, size: 128, offset: 10624)
!4612 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4104, file: !108, line: 384, size: 128, elements: !4613)
!4613 = !{!4614, !4615}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "rdesc", scope: !4612, file: !108, line: 385, baseType: !4354, size: 64)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "wdesc", scope: !4612, file: !108, line: 386, baseType: !4354, size: 64, offset: 64)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4104, file: !108, line: 389, baseType: !204, size: 64, offset: 10752)
!4617 = !DIGlobalVariableExpression(var: !4618, expr: !DIExpression())
!4618 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_spi_nor_driver_init250", scope: !11, file: !3, line: 3462, type: !204, isLocal: true, isDefinition: true)
!4619 = !DIGlobalVariableExpression(var: !4620, expr: !DIExpression())
!4620 = distinct !DIGlobalVariable(name: "__exitcall_spi_nor_driver_exit", scope: !11, file: !3, line: 3462, type: !4621, isLocal: true, isDefinition: true)
!4621 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4622, line: 117, baseType: !4623)
!4622 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!4624 = !DIGlobalVariableExpression(var: !4625, expr: !DIExpression())
!4625 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file251", scope: !11, file: !3, line: 3464, type: !4626, isLocal: true, isDefinition: true, align: 8)
!4626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 328, elements: !4627)
!4627 = !{!4628}
!4628 = !DISubrange(count: 41)
!4629 = !DIGlobalVariableExpression(var: !4630, expr: !DIExpression())
!4630 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license252", scope: !11, file: !3, line: 3464, type: !4631, isLocal: true, isDefinition: true, align: 8)
!4631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 184, elements: !4632)
!4632 = !{!4633}
!4633 = !DISubrange(count: 23)
!4634 = !DIGlobalVariableExpression(var: !4635, expr: !DIExpression())
!4635 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author253", scope: !11, file: !3, line: 3465, type: !4636, isLocal: true, isDefinition: true, align: 8)
!4636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 384, elements: !4637)
!4637 = !{!4638}
!4638 = !DISubrange(count: 48)
!4639 = !DIGlobalVariableExpression(var: !4640, expr: !DIExpression())
!4640 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author254", scope: !11, file: !3, line: 3466, type: !4641, isLocal: true, isDefinition: true, align: 8)
!4641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 232, elements: !4642)
!4642 = !{!4643}
!4643 = !DISubrange(count: 29)
!4644 = !DIGlobalVariableExpression(var: !4645, expr: !DIExpression())
!4645 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description255", scope: !11, file: !3, line: 3467, type: !4646, isLocal: true, isDefinition: true, align: 8)
!4646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 336, elements: !4647)
!4647 = !{!4648}
!4648 = !DISubrange(count: 42)
!4649 = !DIGlobalVariableExpression(var: !4650, expr: !DIExpression())
!4650 = distinct !DIGlobalVariable(name: "manufacturers", scope: !11, file: !3, line: 2009, type: !4651, isLocal: true, isDefinition: true)
!4651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4562, size: 1088, elements: !4406)
!4652 = !DIGlobalVariableExpression(var: !4653, expr: !DIExpression())
!4653 = distinct !DIGlobalVariable(name: "hwcaps_pp2cmd", scope: !4654, file: !3, line: 2264, type: !4655, isLocal: true, isDefinition: true)
!4654 = distinct !DISubprogram(name: "spi_nor_hwcaps_pp2cmd", scope: !3, file: !3, line: 2262, type: !4092, scopeLine: 2263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4095, size: 448, elements: !4656)
!4656 = !{!4510, !1711}
!4657 = !DIGlobalVariableExpression(var: !4658, expr: !DIExpression())
!4658 = distinct !DIGlobalVariable(name: "spi_nor_sr_locking_ops", scope: !11, file: !3, line: 1858, type: !4551, isLocal: true, isDefinition: true)
!4659 = !DIGlobalVariableExpression(var: !4660, expr: !DIExpression())
!4660 = distinct !DIGlobalVariable(name: "spi_nor_3to4_program", scope: !4661, file: !3, line: 1052, type: !4662, isLocal: true, isDefinition: true)
!4661 = distinct !DISubprogram(name: "spi_nor_convert_3to4_program", scope: !3, file: !3, line: 1050, type: !4, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4597, size: 80, elements: !4663)
!4663 = !{!4664, !1711}
!4664 = !DISubrange(count: 5)
!4665 = !DIGlobalVariableExpression(var: !4666, expr: !DIExpression())
!4666 = distinct !DIGlobalVariable(name: "spi_nor_3to4_erase", scope: !4667, file: !3, line: 1066, type: !4668, isLocal: true, isDefinition: true)
!4667 = distinct !DISubprogram(name: "spi_nor_convert_3to4_erase", scope: !3, file: !3, line: 1064, type: !4, scopeLine: 1065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4597, size: 48, elements: !4669)
!4669 = !{!724, !1711}
!4670 = !DIGlobalVariableExpression(var: !4671, expr: !DIExpression())
!4671 = distinct !DIGlobalVariable(name: "__warned", scope: !4672, file: !3, line: 2958, type: !655, isLocal: true, isDefinition: true)
!4672 = distinct !DISubprogram(name: "spi_nor_init", scope: !3, file: !3, line: 2934, type: !4533, scopeLine: 2935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4673 = !DIGlobalVariableExpression(var: !4674, expr: !DIExpression())
!4674 = distinct !DIGlobalVariable(name: "spi_nor_driver", scope: !11, file: !3, line: 3450, type: !4675, isLocal: true, isDefinition: true)
!4675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_mem_driver", file: !102, line: 295, size: 1600, elements: !4676)
!4676 = !{!4677, !4691, !4695, !4696}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "spidrv", scope: !4675, file: !102, line: 296, baseType: !4678, size: 1408)
!4678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_driver", file: !4116, line: 278, size: 1408, elements: !4679)
!4679 = !{!4680, !4687, !4688, !4689, !4690}
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4678, file: !4116, line: 279, baseType: !4681, size: 64)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4683)
!4683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_device_id", file: !2183, line: 494, size: 320, elements: !4684)
!4684 = !{!4685, !4686}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4683, file: !2183, line: 495, baseType: !2186, size: 256)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4683, file: !2183, line: 496, baseType: !2203, size: 64, offset: 256)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4678, file: !4116, line: 280, baseType: !4145, size: 64, offset: 64)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4678, file: !4116, line: 281, baseType: !4145, size: 64, offset: 128)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4678, file: !4116, line: 282, baseType: !4176, size: 64, offset: 192)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4678, file: !4116, line: 283, baseType: !2171, size: 1152, offset: 256)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4675, file: !102, line: 297, baseType: !4692, size: 64, offset: 1408)
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 64)
!4693 = !DISubroutineType(types: !4694)
!4694 = !{!182, !4110}
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4675, file: !102, line: 298, baseType: !4692, size: 64, offset: 1472)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4675, file: !102, line: 299, baseType: !4697, size: 64, offset: 1536)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4698 = !DISubroutineType(types: !4699)
!4699 = !{null, !4110}
!4700 = !DIGlobalVariableExpression(var: !4701, expr: !DIExpression())
!4701 = distinct !DIGlobalVariable(name: "spi_nor_dev_ids", scope: !11, file: !3, line: 3390, type: !4702, isLocal: true, isDefinition: true)
!4702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4682, size: 17280, elements: !4703)
!4703 = !{!4704}
!4704 = !DISubrange(count: 54)
!4705 = !DIGlobalVariableExpression(var: !4706, expr: !DIExpression())
!4706 = distinct !DIGlobalVariable(name: "spi_nor_of_table", scope: !11, file: !3, line: 3435, type: !4707, isLocal: true, isDefinition: true)
!4707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2181, size: 3200, elements: !1710)
!4708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4597, size: 176, elements: !4709)
!4709 = !{!4710, !1711}
!4710 = !DISubrange(count: 11)
!4711 = !{i32 7, !"Dwarf Version", i32 4}
!4712 = !{i32 2, !"Debug Info Version", i32 3}
!4713 = !{i32 1, !"wchar_size", i32 2}
!4714 = !{i32 1, !"Code Model", i32 2}
!4715 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4716 = distinct !DISubprogram(name: "spi_nor_read_data", scope: !3, file: !3, line: 143, type: !4600, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4717 = !DILocalVariable(name: "nor", arg: 1, scope: !4716, file: !3, line: 143, type: !4103)
!4718 = !DILocation(line: 143, column: 43, scope: !4716)
!4719 = !DILocalVariable(name: "from", arg: 2, scope: !4716, file: !3, line: 143, type: !674)
!4720 = !DILocation(line: 143, column: 55, scope: !4716)
!4721 = !DILocalVariable(name: "len", arg: 3, scope: !4716, file: !3, line: 143, type: !1108)
!4722 = !DILocation(line: 143, column: 68, scope: !4716)
!4723 = !DILocalVariable(name: "buf", arg: 4, scope: !4716, file: !3, line: 143, type: !4439)
!4724 = !DILocation(line: 143, column: 77, scope: !4716)
!4725 = !DILocation(line: 145, column: 6, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 145, column: 6)
!4727 = !DILocation(line: 145, column: 11, scope: !4726)
!4728 = !DILocation(line: 145, column: 6, scope: !4716)
!4729 = !DILocation(line: 146, column: 35, scope: !4726)
!4730 = !DILocation(line: 146, column: 40, scope: !4726)
!4731 = !DILocation(line: 146, column: 46, scope: !4726)
!4732 = !DILocation(line: 146, column: 51, scope: !4726)
!4733 = !DILocation(line: 146, column: 10, scope: !4726)
!4734 = !DILocation(line: 146, column: 3, scope: !4726)
!4735 = !DILocation(line: 148, column: 9, scope: !4716)
!4736 = !DILocation(line: 148, column: 14, scope: !4716)
!4737 = !DILocation(line: 148, column: 30, scope: !4716)
!4738 = !DILocation(line: 148, column: 35, scope: !4716)
!4739 = !DILocation(line: 148, column: 40, scope: !4716)
!4740 = !DILocation(line: 148, column: 46, scope: !4716)
!4741 = !DILocation(line: 148, column: 51, scope: !4716)
!4742 = !DILocation(line: 148, column: 2, scope: !4716)
!4743 = !DILocation(line: 149, column: 1, scope: !4716)
!4744 = distinct !DISubprogram(name: "spi_nor_spimem_read_data", scope: !3, file: !3, line: 95, type: !4600, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4745 = !DILocalVariable(name: "nor", arg: 1, scope: !4744, file: !3, line: 95, type: !4103)
!4746 = !DILocation(line: 95, column: 57, scope: !4744)
!4747 = !DILocalVariable(name: "from", arg: 2, scope: !4744, file: !3, line: 95, type: !674)
!4748 = !DILocation(line: 95, column: 69, scope: !4744)
!4749 = !DILocalVariable(name: "len", arg: 3, scope: !4744, file: !3, line: 96, type: !1108)
!4750 = !DILocation(line: 96, column: 13, scope: !4744)
!4751 = !DILocalVariable(name: "buf", arg: 4, scope: !4744, file: !3, line: 96, type: !4439)
!4752 = !DILocation(line: 96, column: 22, scope: !4744)
!4753 = !DILocalVariable(name: "op", scope: !4744, file: !3, line: 98, type: !4302)
!4754 = !DILocation(line: 98, column: 20, scope: !4744)
!4755 = !DILocation(line: 99, column: 3, scope: !4744)
!4756 = !DILocalVariable(name: "usebouncebuf", scope: !4744, file: !3, line: 103, type: !655)
!4757 = !DILocation(line: 103, column: 7, scope: !4744)
!4758 = !DILocalVariable(name: "nbytes", scope: !4744, file: !3, line: 104, type: !1296)
!4759 = !DILocation(line: 104, column: 10, scope: !4744)
!4760 = !DILocalVariable(name: "error", scope: !4744, file: !3, line: 105, type: !182)
!4761 = !DILocation(line: 105, column: 6, scope: !4744)
!4762 = !DILocation(line: 108, column: 52, scope: !4744)
!4763 = !DILocation(line: 108, column: 57, scope: !4744)
!4764 = !DILocation(line: 108, column: 20, scope: !4744)
!4765 = !DILocation(line: 108, column: 5, scope: !4744)
!4766 = !DILocation(line: 108, column: 9, scope: !4744)
!4767 = !DILocation(line: 108, column: 18, scope: !4744)
!4768 = !DILocation(line: 109, column: 53, scope: !4744)
!4769 = !DILocation(line: 109, column: 58, scope: !4744)
!4770 = !DILocation(line: 109, column: 21, scope: !4744)
!4771 = !DILocation(line: 109, column: 5, scope: !4744)
!4772 = !DILocation(line: 109, column: 10, scope: !4744)
!4773 = !DILocation(line: 109, column: 19, scope: !4744)
!4774 = !DILocation(line: 110, column: 25, scope: !4744)
!4775 = !DILocation(line: 110, column: 30, scope: !4744)
!4776 = !DILocation(line: 110, column: 5, scope: !4744)
!4777 = !DILocation(line: 110, column: 11, scope: !4744)
!4778 = !DILocation(line: 110, column: 20, scope: !4744)
!4779 = !DILocation(line: 111, column: 53, scope: !4744)
!4780 = !DILocation(line: 111, column: 58, scope: !4744)
!4781 = !DILocation(line: 111, column: 21, scope: !4744)
!4782 = !DILocation(line: 111, column: 5, scope: !4744)
!4783 = !DILocation(line: 111, column: 10, scope: !4744)
!4784 = !DILocation(line: 111, column: 19, scope: !4744)
!4785 = !DILocation(line: 114, column: 21, scope: !4744)
!4786 = !DILocation(line: 114, column: 26, scope: !4744)
!4787 = !DILocation(line: 114, column: 42, scope: !4744)
!4788 = !DILocation(line: 114, column: 48, scope: !4744)
!4789 = !DILocation(line: 114, column: 39, scope: !4744)
!4790 = !DILocation(line: 114, column: 37, scope: !4744)
!4791 = !DILocation(line: 114, column: 58, scope: !4744)
!4792 = !DILocation(line: 114, column: 20, scope: !4744)
!4793 = !DILocation(line: 114, column: 5, scope: !4744)
!4794 = !DILocation(line: 114, column: 11, scope: !4744)
!4795 = !DILocation(line: 114, column: 18, scope: !4744)
!4796 = !DILocation(line: 116, column: 39, scope: !4744)
!4797 = !DILocation(line: 116, column: 17, scope: !4744)
!4798 = !DILocation(line: 116, column: 15, scope: !4744)
!4799 = !DILocation(line: 118, column: 6, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 118, column: 6)
!4801 = !DILocation(line: 118, column: 11, scope: !4800)
!4802 = !DILocation(line: 118, column: 18, scope: !4800)
!4803 = !DILocation(line: 118, column: 6, scope: !4744)
!4804 = !DILocation(line: 119, column: 32, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 118, column: 25)
!4806 = !DILocation(line: 119, column: 37, scope: !4805)
!4807 = !DILocation(line: 119, column: 44, scope: !4805)
!4808 = !DILocation(line: 119, column: 54, scope: !4805)
!4809 = !DILocation(line: 119, column: 59, scope: !4805)
!4810 = !DILocation(line: 120, column: 14, scope: !4805)
!4811 = !DILocation(line: 120, column: 19, scope: !4805)
!4812 = !DILocation(line: 120, column: 11, scope: !4805)
!4813 = !DILocation(line: 120, column: 30, scope: !4805)
!4814 = !DILocation(line: 120, column: 35, scope: !4805)
!4815 = !DILocation(line: 120, column: 39, scope: !4805)
!4816 = !DILocation(line: 119, column: 12, scope: !4805)
!4817 = !DILocation(line: 119, column: 10, scope: !4805)
!4818 = !DILocation(line: 121, column: 2, scope: !4805)
!4819 = !DILocation(line: 122, column: 34, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 121, column: 9)
!4821 = !DILocation(line: 122, column: 11, scope: !4820)
!4822 = !DILocation(line: 122, column: 9, scope: !4820)
!4823 = !DILocation(line: 123, column: 7, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 123, column: 7)
!4825 = !DILocation(line: 123, column: 7, scope: !4820)
!4826 = !DILocation(line: 124, column: 11, scope: !4824)
!4827 = !DILocation(line: 124, column: 4, scope: !4824)
!4828 = !DILocation(line: 125, column: 15, scope: !4820)
!4829 = !DILocation(line: 125, column: 20, scope: !4820)
!4830 = !DILocation(line: 125, column: 12, scope: !4820)
!4831 = !DILocation(line: 125, column: 10, scope: !4820)
!4832 = !DILocation(line: 128, column: 6, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 128, column: 6)
!4834 = !DILocation(line: 128, column: 19, scope: !4833)
!4835 = !DILocation(line: 128, column: 22, scope: !4833)
!4836 = !DILocation(line: 128, column: 29, scope: !4833)
!4837 = !DILocation(line: 128, column: 6, scope: !4744)
!4838 = !DILocation(line: 129, column: 10, scope: !4833)
!4839 = !DILocation(line: 129, column: 18, scope: !4833)
!4840 = !DILocation(line: 129, column: 23, scope: !4833)
!4841 = !DILocation(line: 129, column: 27, scope: !4833)
!4842 = !DILocation(line: 129, column: 31, scope: !4833)
!4843 = !DILocation(line: 129, column: 3, scope: !4833)
!4844 = !DILocation(line: 131, column: 9, scope: !4744)
!4845 = !DILocation(line: 131, column: 2, scope: !4744)
!4846 = !DILocation(line: 132, column: 1, scope: !4744)
!4847 = distinct !DISubprogram(name: "spi_nor_write_data", scope: !3, file: !3, line: 204, type: !4604, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4848 = !DILocalVariable(name: "nor", arg: 1, scope: !4847, file: !3, line: 204, type: !4103)
!4849 = !DILocation(line: 204, column: 44, scope: !4847)
!4850 = !DILocalVariable(name: "to", arg: 2, scope: !4847, file: !3, line: 204, type: !674)
!4851 = !DILocation(line: 204, column: 56, scope: !4847)
!4852 = !DILocalVariable(name: "len", arg: 3, scope: !4847, file: !3, line: 204, type: !1108)
!4853 = !DILocation(line: 204, column: 67, scope: !4847)
!4854 = !DILocalVariable(name: "buf", arg: 4, scope: !4847, file: !3, line: 205, type: !4596)
!4855 = !DILocation(line: 205, column: 17, scope: !4847)
!4856 = !DILocation(line: 207, column: 6, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 207, column: 6)
!4858 = !DILocation(line: 207, column: 11, scope: !4857)
!4859 = !DILocation(line: 207, column: 6, scope: !4847)
!4860 = !DILocation(line: 208, column: 36, scope: !4857)
!4861 = !DILocation(line: 208, column: 41, scope: !4857)
!4862 = !DILocation(line: 208, column: 45, scope: !4857)
!4863 = !DILocation(line: 208, column: 50, scope: !4857)
!4864 = !DILocation(line: 208, column: 10, scope: !4857)
!4865 = !DILocation(line: 208, column: 3, scope: !4857)
!4866 = !DILocation(line: 210, column: 9, scope: !4847)
!4867 = !DILocation(line: 210, column: 14, scope: !4847)
!4868 = !DILocation(line: 210, column: 30, scope: !4847)
!4869 = !DILocation(line: 210, column: 36, scope: !4847)
!4870 = !DILocation(line: 210, column: 41, scope: !4847)
!4871 = !DILocation(line: 210, column: 45, scope: !4847)
!4872 = !DILocation(line: 210, column: 50, scope: !4847)
!4873 = !DILocation(line: 210, column: 2, scope: !4847)
!4874 = !DILocation(line: 211, column: 1, scope: !4847)
!4875 = distinct !DISubprogram(name: "spi_nor_spimem_write_data", scope: !3, file: !3, line: 161, type: !4604, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4876 = !DILocalVariable(name: "nor", arg: 1, scope: !4875, file: !3, line: 161, type: !4103)
!4877 = !DILocation(line: 161, column: 58, scope: !4875)
!4878 = !DILocalVariable(name: "to", arg: 2, scope: !4875, file: !3, line: 161, type: !674)
!4879 = !DILocation(line: 161, column: 70, scope: !4875)
!4880 = !DILocalVariable(name: "len", arg: 3, scope: !4875, file: !3, line: 162, type: !1108)
!4881 = !DILocation(line: 162, column: 14, scope: !4875)
!4882 = !DILocalVariable(name: "buf", arg: 4, scope: !4875, file: !3, line: 162, type: !4596)
!4883 = !DILocation(line: 162, column: 29, scope: !4875)
!4884 = !DILocalVariable(name: "op", scope: !4875, file: !3, line: 164, type: !4302)
!4885 = !DILocation(line: 164, column: 20, scope: !4875)
!4886 = !DILocation(line: 165, column: 3, scope: !4875)
!4887 = !DILocalVariable(name: "nbytes", scope: !4875, file: !3, line: 169, type: !1296)
!4888 = !DILocation(line: 169, column: 10, scope: !4875)
!4889 = !DILocalVariable(name: "error", scope: !4875, file: !3, line: 170, type: !182)
!4890 = !DILocation(line: 170, column: 6, scope: !4875)
!4891 = !DILocation(line: 172, column: 52, scope: !4875)
!4892 = !DILocation(line: 172, column: 57, scope: !4875)
!4893 = !DILocation(line: 172, column: 20, scope: !4875)
!4894 = !DILocation(line: 172, column: 5, scope: !4875)
!4895 = !DILocation(line: 172, column: 9, scope: !4875)
!4896 = !DILocation(line: 172, column: 18, scope: !4875)
!4897 = !DILocation(line: 173, column: 53, scope: !4875)
!4898 = !DILocation(line: 173, column: 58, scope: !4875)
!4899 = !DILocation(line: 173, column: 21, scope: !4875)
!4900 = !DILocation(line: 173, column: 5, scope: !4875)
!4901 = !DILocation(line: 173, column: 10, scope: !4875)
!4902 = !DILocation(line: 173, column: 19, scope: !4875)
!4903 = !DILocation(line: 174, column: 53, scope: !4875)
!4904 = !DILocation(line: 174, column: 58, scope: !4875)
!4905 = !DILocation(line: 174, column: 21, scope: !4875)
!4906 = !DILocation(line: 174, column: 5, scope: !4875)
!4907 = !DILocation(line: 174, column: 10, scope: !4875)
!4908 = !DILocation(line: 174, column: 19, scope: !4875)
!4909 = !DILocation(line: 176, column: 6, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 176, column: 6)
!4911 = !DILocation(line: 176, column: 11, scope: !4910)
!4912 = !DILocation(line: 176, column: 26, scope: !4910)
!4913 = !DILocation(line: 176, column: 46, scope: !4910)
!4914 = !DILocation(line: 176, column: 49, scope: !4910)
!4915 = !DILocation(line: 176, column: 54, scope: !4910)
!4916 = !DILocation(line: 176, column: 6, scope: !4875)
!4917 = !DILocation(line: 177, column: 6, scope: !4910)
!4918 = !DILocation(line: 177, column: 11, scope: !4910)
!4919 = !DILocation(line: 177, column: 18, scope: !4910)
!4920 = !DILocation(line: 177, column: 3, scope: !4910)
!4921 = !DILocation(line: 179, column: 28, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 179, column: 6)
!4923 = !DILocation(line: 179, column: 6, scope: !4922)
!4924 = !DILocation(line: 179, column: 6, scope: !4875)
!4925 = !DILocation(line: 180, column: 10, scope: !4922)
!4926 = !DILocation(line: 180, column: 15, scope: !4922)
!4927 = !DILocation(line: 180, column: 26, scope: !4922)
!4928 = !DILocation(line: 180, column: 34, scope: !4922)
!4929 = !DILocation(line: 180, column: 39, scope: !4922)
!4930 = !DILocation(line: 180, column: 31, scope: !4922)
!4931 = !DILocation(line: 180, column: 3, scope: !4922)
!4932 = !DILocation(line: 182, column: 6, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 182, column: 6)
!4934 = !DILocation(line: 182, column: 11, scope: !4933)
!4935 = !DILocation(line: 182, column: 18, scope: !4933)
!4936 = !DILocation(line: 182, column: 6, scope: !4875)
!4937 = !DILocation(line: 183, column: 33, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 182, column: 25)
!4939 = !DILocation(line: 183, column: 38, scope: !4938)
!4940 = !DILocation(line: 183, column: 45, scope: !4938)
!4941 = !DILocation(line: 183, column: 55, scope: !4938)
!4942 = !DILocation(line: 183, column: 60, scope: !4938)
!4943 = !DILocation(line: 184, column: 15, scope: !4938)
!4944 = !DILocation(line: 184, column: 20, scope: !4938)
!4945 = !DILocation(line: 184, column: 12, scope: !4938)
!4946 = !DILocation(line: 184, column: 31, scope: !4938)
!4947 = !DILocation(line: 184, column: 36, scope: !4938)
!4948 = !DILocation(line: 184, column: 40, scope: !4938)
!4949 = !DILocation(line: 183, column: 12, scope: !4938)
!4950 = !DILocation(line: 183, column: 10, scope: !4938)
!4951 = !DILocation(line: 185, column: 2, scope: !4938)
!4952 = !DILocation(line: 186, column: 34, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 185, column: 9)
!4954 = !DILocation(line: 186, column: 11, scope: !4953)
!4955 = !DILocation(line: 186, column: 9, scope: !4953)
!4956 = !DILocation(line: 187, column: 7, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 187, column: 7)
!4958 = !DILocation(line: 187, column: 7, scope: !4953)
!4959 = !DILocation(line: 188, column: 11, scope: !4957)
!4960 = !DILocation(line: 188, column: 4, scope: !4957)
!4961 = !DILocation(line: 189, column: 15, scope: !4953)
!4962 = !DILocation(line: 189, column: 20, scope: !4953)
!4963 = !DILocation(line: 189, column: 12, scope: !4953)
!4964 = !DILocation(line: 189, column: 10, scope: !4953)
!4965 = !DILocation(line: 192, column: 9, scope: !4875)
!4966 = !DILocation(line: 192, column: 2, scope: !4875)
!4967 = !DILocation(line: 193, column: 1, scope: !4875)
!4968 = distinct !DISubprogram(name: "spi_nor_write_enable", scope: !3, file: !3, line: 219, type: !4533, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4969 = !DILocalVariable(name: "nor", arg: 1, scope: !4968, file: !3, line: 219, type: !4103)
!4970 = !DILocation(line: 219, column: 42, scope: !4968)
!4971 = !DILocalVariable(name: "ret", scope: !4968, file: !3, line: 221, type: !182)
!4972 = !DILocation(line: 221, column: 6, scope: !4968)
!4973 = !DILocation(line: 223, column: 6, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 223, column: 6)
!4975 = !DILocation(line: 223, column: 11, scope: !4974)
!4976 = !DILocation(line: 223, column: 6, scope: !4968)
!4977 = !DILocalVariable(name: "op", scope: !4978, file: !3, line: 224, type: !4302)
!4978 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 223, column: 19)
!4979 = !DILocation(line: 224, column: 21, scope: !4978)
!4980 = !DILocation(line: 230, column: 25, scope: !4978)
!4981 = !DILocation(line: 230, column: 30, scope: !4978)
!4982 = !DILocation(line: 230, column: 9, scope: !4978)
!4983 = !DILocation(line: 230, column: 7, scope: !4978)
!4984 = !DILocation(line: 231, column: 2, scope: !4978)
!4985 = !DILocation(line: 232, column: 9, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 231, column: 9)
!4987 = !DILocation(line: 232, column: 14, scope: !4986)
!4988 = !DILocation(line: 232, column: 30, scope: !4986)
!4989 = !DILocation(line: 232, column: 40, scope: !4986)
!4990 = !DILocation(line: 232, column: 7, scope: !4986)
!4991 = !DILocation(line: 236, column: 6, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 236, column: 6)
!4993 = !DILocation(line: 236, column: 6, scope: !4968)
!4994 = !DILocation(line: 237, column: 3, scope: !4992)
!4995 = !DILocation(line: 239, column: 9, scope: !4968)
!4996 = !DILocation(line: 239, column: 2, scope: !4968)
!4997 = distinct !DISubprogram(name: "spi_nor_write_disable", scope: !3, file: !3, line: 248, type: !4533, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!4998 = !DILocalVariable(name: "nor", arg: 1, scope: !4997, file: !3, line: 248, type: !4103)
!4999 = !DILocation(line: 248, column: 43, scope: !4997)
!5000 = !DILocalVariable(name: "ret", scope: !4997, file: !3, line: 250, type: !182)
!5001 = !DILocation(line: 250, column: 6, scope: !4997)
!5002 = !DILocation(line: 252, column: 6, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 252, column: 6)
!5004 = !DILocation(line: 252, column: 11, scope: !5003)
!5005 = !DILocation(line: 252, column: 6, scope: !4997)
!5006 = !DILocalVariable(name: "op", scope: !5007, file: !3, line: 253, type: !4302)
!5007 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 252, column: 19)
!5008 = !DILocation(line: 253, column: 21, scope: !5007)
!5009 = !DILocation(line: 259, column: 25, scope: !5007)
!5010 = !DILocation(line: 259, column: 30, scope: !5007)
!5011 = !DILocation(line: 259, column: 9, scope: !5007)
!5012 = !DILocation(line: 259, column: 7, scope: !5007)
!5013 = !DILocation(line: 260, column: 2, scope: !5007)
!5014 = !DILocation(line: 261, column: 9, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 260, column: 9)
!5016 = !DILocation(line: 261, column: 14, scope: !5015)
!5017 = !DILocation(line: 261, column: 30, scope: !5015)
!5018 = !DILocation(line: 261, column: 40, scope: !5015)
!5019 = !DILocation(line: 261, column: 7, scope: !5015)
!5020 = !DILocation(line: 265, column: 6, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 265, column: 6)
!5022 = !DILocation(line: 265, column: 6, scope: !4997)
!5023 = !DILocation(line: 266, column: 3, scope: !5021)
!5024 = !DILocation(line: 268, column: 9, scope: !4997)
!5025 = !DILocation(line: 268, column: 2, scope: !4997)
!5026 = distinct !DISubprogram(name: "spi_nor_set_4byte_addr_mode", scope: !3, file: !3, line: 372, type: !4537, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5027 = !DILocalVariable(name: "nor", arg: 1, scope: !5026, file: !3, line: 372, type: !4103)
!5028 = !DILocation(line: 372, column: 49, scope: !5026)
!5029 = !DILocalVariable(name: "enable", arg: 2, scope: !5026, file: !3, line: 372, type: !655)
!5030 = !DILocation(line: 372, column: 59, scope: !5026)
!5031 = !DILocalVariable(name: "ret", scope: !5026, file: !3, line: 374, type: !182)
!5032 = !DILocation(line: 374, column: 6, scope: !5026)
!5033 = !DILocation(line: 376, column: 6, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5026, file: !3, line: 376, column: 6)
!5035 = !DILocation(line: 376, column: 11, scope: !5034)
!5036 = !DILocation(line: 376, column: 6, scope: !5026)
!5037 = !DILocalVariable(name: "op", scope: !5038, file: !3, line: 377, type: !4302)
!5038 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 376, column: 19)
!5039 = !DILocation(line: 377, column: 21, scope: !5038)
!5040 = !DILocation(line: 378, column: 4, scope: !5038)
!5041 = !DILocation(line: 386, column: 25, scope: !5038)
!5042 = !DILocation(line: 386, column: 30, scope: !5038)
!5043 = !DILocation(line: 386, column: 9, scope: !5038)
!5044 = !DILocation(line: 386, column: 7, scope: !5038)
!5045 = !DILocation(line: 387, column: 2, scope: !5038)
!5046 = !DILocation(line: 388, column: 9, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 387, column: 9)
!5048 = !DILocation(line: 388, column: 14, scope: !5047)
!5049 = !DILocation(line: 388, column: 30, scope: !5047)
!5050 = !DILocation(line: 388, column: 40, scope: !5047)
!5051 = !DILocation(line: 389, column: 12, scope: !5047)
!5052 = !DILocation(line: 388, column: 7, scope: !5047)
!5053 = !DILocation(line: 394, column: 6, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5026, file: !3, line: 394, column: 6)
!5055 = !DILocation(line: 394, column: 6, scope: !5026)
!5056 = !DILocation(line: 395, column: 3, scope: !5054)
!5057 = !DILocation(line: 397, column: 9, scope: !5026)
!5058 = !DILocation(line: 397, column: 2, scope: !5026)
!5059 = distinct !DISubprogram(name: "spi_nor_write_ear", scope: !3, file: !3, line: 441, type: !5060, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{!182, !4103, !6}
!5062 = !DILocalVariable(name: "nor", arg: 1, scope: !5059, file: !3, line: 441, type: !4103)
!5063 = !DILocation(line: 441, column: 39, scope: !5059)
!5064 = !DILocalVariable(name: "ear", arg: 2, scope: !5059, file: !3, line: 441, type: !6)
!5065 = !DILocation(line: 441, column: 47, scope: !5059)
!5066 = !DILocalVariable(name: "ret", scope: !5059, file: !3, line: 443, type: !182)
!5067 = !DILocation(line: 443, column: 6, scope: !5059)
!5068 = !DILocation(line: 445, column: 22, scope: !5059)
!5069 = !DILocation(line: 445, column: 2, scope: !5059)
!5070 = !DILocation(line: 445, column: 7, scope: !5059)
!5071 = !DILocation(line: 445, column: 20, scope: !5059)
!5072 = !DILocation(line: 447, column: 6, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 447, column: 6)
!5074 = !DILocation(line: 447, column: 11, scope: !5073)
!5075 = !DILocation(line: 447, column: 6, scope: !5059)
!5076 = !DILocalVariable(name: "op", scope: !5077, file: !3, line: 448, type: !4302)
!5077 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 447, column: 19)
!5078 = !DILocation(line: 448, column: 21, scope: !5077)
!5079 = !DILocation(line: 449, column: 4, scope: !5077)
!5080 = !DILocation(line: 454, column: 25, scope: !5077)
!5081 = !DILocation(line: 454, column: 30, scope: !5077)
!5082 = !DILocation(line: 454, column: 9, scope: !5077)
!5083 = !DILocation(line: 454, column: 7, scope: !5077)
!5084 = !DILocation(line: 455, column: 2, scope: !5077)
!5085 = !DILocation(line: 456, column: 9, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 455, column: 9)
!5087 = !DILocation(line: 456, column: 14, scope: !5086)
!5088 = !DILocation(line: 456, column: 30, scope: !5086)
!5089 = !DILocation(line: 456, column: 40, scope: !5086)
!5090 = !DILocation(line: 457, column: 12, scope: !5086)
!5091 = !DILocation(line: 457, column: 17, scope: !5086)
!5092 = !DILocation(line: 456, column: 7, scope: !5086)
!5093 = !DILocation(line: 460, column: 6, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 460, column: 6)
!5095 = !DILocation(line: 460, column: 6, scope: !5059)
!5096 = !DILocation(line: 461, column: 3, scope: !5094)
!5097 = !DILocation(line: 463, column: 9, scope: !5059)
!5098 = !DILocation(line: 463, column: 2, scope: !5059)
!5099 = distinct !DISubprogram(name: "spi_nor_xread_sr", scope: !3, file: !3, line: 474, type: !5100, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{!182, !4103, !4439}
!5102 = !DILocalVariable(name: "nor", arg: 1, scope: !5099, file: !3, line: 474, type: !4103)
!5103 = !DILocation(line: 474, column: 38, scope: !5099)
!5104 = !DILocalVariable(name: "sr", arg: 2, scope: !5099, file: !3, line: 474, type: !4439)
!5105 = !DILocation(line: 474, column: 47, scope: !5099)
!5106 = !DILocalVariable(name: "ret", scope: !5099, file: !3, line: 476, type: !182)
!5107 = !DILocation(line: 476, column: 6, scope: !5099)
!5108 = !DILocation(line: 478, column: 6, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 478, column: 6)
!5110 = !DILocation(line: 478, column: 11, scope: !5109)
!5111 = !DILocation(line: 478, column: 6, scope: !5099)
!5112 = !DILocalVariable(name: "op", scope: !5113, file: !3, line: 479, type: !4302)
!5113 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 478, column: 19)
!5114 = !DILocation(line: 479, column: 21, scope: !5113)
!5115 = !DILocation(line: 480, column: 4, scope: !5113)
!5116 = !DILocation(line: 485, column: 25, scope: !5113)
!5117 = !DILocation(line: 485, column: 30, scope: !5113)
!5118 = !DILocation(line: 485, column: 9, scope: !5113)
!5119 = !DILocation(line: 485, column: 7, scope: !5113)
!5120 = !DILocation(line: 486, column: 2, scope: !5113)
!5121 = !DILocation(line: 487, column: 9, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 486, column: 9)
!5123 = !DILocation(line: 487, column: 14, scope: !5122)
!5124 = !DILocation(line: 487, column: 30, scope: !5122)
!5125 = !DILocation(line: 487, column: 39, scope: !5122)
!5126 = !DILocation(line: 488, column: 11, scope: !5122)
!5127 = !DILocation(line: 487, column: 7, scope: !5122)
!5128 = !DILocation(line: 491, column: 6, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 491, column: 6)
!5130 = !DILocation(line: 491, column: 6, scope: !5099)
!5131 = !DILocation(line: 492, column: 3, scope: !5129)
!5132 = !DILocation(line: 494, column: 9, scope: !5099)
!5133 = !DILocation(line: 494, column: 2, scope: !5099)
!5134 = distinct !DISubprogram(name: "spi_nor_wait_till_ready", scope: !3, file: !3, line: 709, type: !4533, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5135 = !DILocalVariable(name: "nor", arg: 1, scope: !5134, file: !3, line: 709, type: !4103)
!5136 = !DILocation(line: 709, column: 45, scope: !5134)
!5137 = !DILocation(line: 711, column: 46, scope: !5134)
!5138 = !DILocation(line: 711, column: 9, scope: !5134)
!5139 = !DILocation(line: 711, column: 2, scope: !5134)
!5140 = distinct !DISubprogram(name: "spi_nor_wait_till_ready_with_timeout", scope: !3, file: !3, line: 676, type: !5141, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!182, !4103, !186}
!5143 = !DILocalVariable(name: "nor", arg: 1, scope: !5140, file: !3, line: 676, type: !4103)
!5144 = !DILocation(line: 676, column: 65, scope: !5140)
!5145 = !DILocalVariable(name: "timeout_jiffies", arg: 2, scope: !5140, file: !3, line: 677, type: !186)
!5146 = !DILocation(line: 677, column: 21, scope: !5140)
!5147 = !DILocalVariable(name: "deadline", scope: !5140, file: !3, line: 679, type: !186)
!5148 = !DILocation(line: 679, column: 16, scope: !5140)
!5149 = !DILocalVariable(name: "timeout", scope: !5140, file: !3, line: 680, type: !182)
!5150 = !DILocation(line: 680, column: 6, scope: !5140)
!5151 = !DILocalVariable(name: "ret", scope: !5140, file: !3, line: 680, type: !182)
!5152 = !DILocation(line: 680, column: 19, scope: !5140)
!5153 = !DILocation(line: 682, column: 13, scope: !5140)
!5154 = !DILocation(line: 682, column: 23, scope: !5140)
!5155 = !DILocation(line: 682, column: 21, scope: !5140)
!5156 = !DILocation(line: 682, column: 11, scope: !5140)
!5157 = !DILocation(line: 684, column: 2, scope: !5140)
!5158 = !DILocation(line: 684, column: 10, scope: !5140)
!5159 = !DILocation(line: 684, column: 9, scope: !5140)
!5160 = !DILocation(line: 685, column: 7, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 685, column: 7)
!5162 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 684, column: 19)
!5163 = !DILocation(line: 685, column: 7, scope: !5162)
!5164 = !DILocation(line: 686, column: 12, scope: !5161)
!5165 = !DILocation(line: 686, column: 4, scope: !5161)
!5166 = !DILocation(line: 688, column: 23, scope: !5162)
!5167 = !DILocation(line: 688, column: 9, scope: !5162)
!5168 = !DILocation(line: 688, column: 7, scope: !5162)
!5169 = !DILocation(line: 689, column: 7, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 689, column: 7)
!5171 = !DILocation(line: 689, column: 11, scope: !5170)
!5172 = !DILocation(line: 689, column: 7, scope: !5162)
!5173 = !DILocation(line: 690, column: 11, scope: !5170)
!5174 = !DILocation(line: 690, column: 4, scope: !5170)
!5175 = !DILocation(line: 691, column: 7, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 691, column: 7)
!5177 = !DILocation(line: 691, column: 7, scope: !5162)
!5178 = !DILocation(line: 692, column: 4, scope: !5176)
!5179 = !DILocation(line: 694, column: 3, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 694, column: 3)
!5181 = distinct !{!5181, !5157, !5182}
!5182 = !DILocation(line: 695, column: 2, scope: !5140)
!5183 = !DILocation(line: 699, column: 2, scope: !5140)
!5184 = !DILocation(line: 700, column: 1, scope: !5140)
!5185 = !DILocalVariable(name: "opcode", arg: 1, scope: !2, file: !3, line: 1029, type: !6)
!5186 = !DILocation(line: 1029, column: 33, scope: !2)
!5187 = !DILocation(line: 1046, column: 32, scope: !2)
!5188 = !DILocation(line: 1046, column: 9, scope: !2)
!5189 = !DILocation(line: 1046, column: 2, scope: !2)
!5190 = distinct !DISubprogram(name: "spi_nor_convert_opcode", scope: !3, file: !3, line: 1017, type: !5191, scopeLine: 1018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!6, !6, !5193, !1108}
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5194, size: 64)
!5194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4597, size: 16, elements: !1710)
!5195 = !DILocalVariable(name: "opcode", arg: 1, scope: !5190, file: !3, line: 1017, type: !6)
!5196 = !DILocation(line: 1017, column: 37, scope: !5190)
!5197 = !DILocalVariable(name: "table", arg: 2, scope: !5190, file: !3, line: 1017, type: !5193)
!5198 = !DILocation(line: 1017, column: 54, scope: !5190)
!5199 = !DILocalVariable(name: "size", arg: 3, scope: !5190, file: !3, line: 1017, type: !1108)
!5200 = !DILocation(line: 1017, column: 73, scope: !5190)
!5201 = !DILocalVariable(name: "i", scope: !5190, file: !3, line: 1019, type: !1108)
!5202 = !DILocation(line: 1019, column: 9, scope: !5190)
!5203 = !DILocation(line: 1021, column: 9, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 1021, column: 2)
!5205 = !DILocation(line: 1021, column: 7, scope: !5204)
!5206 = !DILocation(line: 1021, column: 14, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 1021, column: 2)
!5208 = !DILocation(line: 1021, column: 18, scope: !5207)
!5209 = !DILocation(line: 1021, column: 16, scope: !5207)
!5210 = !DILocation(line: 1021, column: 2, scope: !5204)
!5211 = !DILocation(line: 1022, column: 7, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 1022, column: 7)
!5213 = !DILocation(line: 1022, column: 13, scope: !5212)
!5214 = !DILocation(line: 1022, column: 22, scope: !5212)
!5215 = !DILocation(line: 1022, column: 19, scope: !5212)
!5216 = !DILocation(line: 1022, column: 7, scope: !5207)
!5217 = !DILocation(line: 1023, column: 11, scope: !5212)
!5218 = !DILocation(line: 1023, column: 17, scope: !5212)
!5219 = !DILocation(line: 1023, column: 4, scope: !5212)
!5220 = !DILocation(line: 1021, column: 25, scope: !5207)
!5221 = !DILocation(line: 1021, column: 2, scope: !5207)
!5222 = distinct !{!5222, !5210, !5223}
!5223 = !DILocation(line: 1023, column: 21, scope: !5204)
!5224 = !DILocation(line: 1026, column: 9, scope: !5190)
!5225 = !DILocation(line: 1026, column: 2, scope: !5190)
!5226 = !DILocation(line: 1027, column: 1, scope: !5190)
!5227 = distinct !DISubprogram(name: "spi_nor_lock_and_prep", scope: !3, file: !3, line: 1100, type: !4533, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5228 = !DILocalVariable(name: "nor", arg: 1, scope: !5227, file: !3, line: 1100, type: !4103)
!5229 = !DILocation(line: 1100, column: 43, scope: !5227)
!5230 = !DILocalVariable(name: "ret", scope: !5227, file: !3, line: 1102, type: !182)
!5231 = !DILocation(line: 1102, column: 6, scope: !5227)
!5232 = !DILocation(line: 1104, column: 14, scope: !5227)
!5233 = !DILocation(line: 1104, column: 19, scope: !5227)
!5234 = !DILocation(line: 1104, column: 2, scope: !5227)
!5235 = !DILocation(line: 1106, column: 6, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 1106, column: 6)
!5237 = !DILocation(line: 1106, column: 11, scope: !5236)
!5238 = !DILocation(line: 1106, column: 26, scope: !5236)
!5239 = !DILocation(line: 1106, column: 30, scope: !5236)
!5240 = !DILocation(line: 1106, column: 35, scope: !5236)
!5241 = !DILocation(line: 1106, column: 51, scope: !5236)
!5242 = !DILocation(line: 1106, column: 6, scope: !5227)
!5243 = !DILocation(line: 1107, column: 9, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5236, file: !3, line: 1106, column: 60)
!5245 = !DILocation(line: 1107, column: 14, scope: !5244)
!5246 = !DILocation(line: 1107, column: 30, scope: !5244)
!5247 = !DILocation(line: 1107, column: 38, scope: !5244)
!5248 = !DILocation(line: 1107, column: 7, scope: !5244)
!5249 = !DILocation(line: 1108, column: 7, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 1108, column: 7)
!5251 = !DILocation(line: 1108, column: 7, scope: !5244)
!5252 = !DILocation(line: 1109, column: 18, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 1108, column: 12)
!5254 = !DILocation(line: 1109, column: 23, scope: !5253)
!5255 = !DILocation(line: 1109, column: 4, scope: !5253)
!5256 = !DILocation(line: 1110, column: 11, scope: !5253)
!5257 = !DILocation(line: 1110, column: 4, scope: !5253)
!5258 = !DILocation(line: 1112, column: 2, scope: !5244)
!5259 = !DILocation(line: 1113, column: 9, scope: !5227)
!5260 = !DILocation(line: 1113, column: 2, scope: !5227)
!5261 = !DILocation(line: 1114, column: 1, scope: !5227)
!5262 = distinct !DISubprogram(name: "spi_nor_unlock_and_unprep", scope: !3, file: !3, line: 1116, type: !4462, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5263 = !DILocalVariable(name: "nor", arg: 1, scope: !5262, file: !3, line: 1116, type: !4103)
!5264 = !DILocation(line: 1116, column: 48, scope: !5262)
!5265 = !DILocation(line: 1118, column: 6, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 1118, column: 6)
!5267 = !DILocation(line: 1118, column: 11, scope: !5266)
!5268 = !DILocation(line: 1118, column: 26, scope: !5266)
!5269 = !DILocation(line: 1118, column: 29, scope: !5266)
!5270 = !DILocation(line: 1118, column: 34, scope: !5266)
!5271 = !DILocation(line: 1118, column: 50, scope: !5266)
!5272 = !DILocation(line: 1118, column: 6, scope: !5262)
!5273 = !DILocation(line: 1119, column: 3, scope: !5266)
!5274 = !DILocation(line: 1119, column: 8, scope: !5266)
!5275 = !DILocation(line: 1119, column: 24, scope: !5266)
!5276 = !DILocation(line: 1119, column: 34, scope: !5266)
!5277 = !DILocation(line: 1120, column: 16, scope: !5262)
!5278 = !DILocation(line: 1120, column: 21, scope: !5262)
!5279 = !DILocation(line: 1120, column: 2, scope: !5262)
!5280 = !DILocation(line: 1121, column: 1, scope: !5262)
!5281 = distinct !DISubprogram(name: "spi_nor_region_next", scope: !3, file: !3, line: 1250, type: !5282, scopeLine: 1251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{!4515, !4515}
!5284 = !DILocalVariable(name: "region", arg: 1, scope: !5281, file: !3, line: 1250, type: !4515)
!5285 = !DILocation(line: 1250, column: 50, scope: !5281)
!5286 = !DILocation(line: 1252, column: 29, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 1252, column: 6)
!5288 = !DILocation(line: 1252, column: 6, scope: !5287)
!5289 = !DILocation(line: 1252, column: 6, scope: !5281)
!5290 = !DILocation(line: 1253, column: 3, scope: !5287)
!5291 = !DILocation(line: 1254, column: 8, scope: !5281)
!5292 = !DILocation(line: 1255, column: 9, scope: !5281)
!5293 = !DILocation(line: 1255, column: 2, scope: !5281)
!5294 = !DILocation(line: 1256, column: 1, scope: !5281)
!5295 = distinct !DISubprogram(name: "spi_nor_region_is_last", scope: !3, file: !3, line: 1233, type: !5296, scopeLine: 1234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5296 = !DISubroutineType(types: !5297)
!5297 = !{!250, !5298}
!5298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5299, size: 64)
!5299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4516)
!5300 = !DILocalVariable(name: "region", arg: 1, scope: !5295, file: !3, line: 1233, type: !5298)
!5301 = !DILocation(line: 1233, column: 70, scope: !5295)
!5302 = !DILocation(line: 1235, column: 9, scope: !5295)
!5303 = !DILocation(line: 1235, column: 17, scope: !5295)
!5304 = !DILocation(line: 1235, column: 24, scope: !5295)
!5305 = !DILocation(line: 1235, column: 2, scope: !5295)
!5306 = distinct !DISubprogram(name: "spi_nor_sr1_bit6_quad_enable", scope: !3, file: !3, line: 1918, type: !4533, scopeLine: 1919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5307 = !DILocalVariable(name: "nor", arg: 1, scope: !5306, file: !3, line: 1918, type: !4103)
!5308 = !DILocation(line: 1918, column: 50, scope: !5306)
!5309 = !DILocalVariable(name: "ret", scope: !5306, file: !3, line: 1920, type: !182)
!5310 = !DILocation(line: 1920, column: 6, scope: !5306)
!5311 = !DILocation(line: 1922, column: 24, scope: !5306)
!5312 = !DILocation(line: 1922, column: 29, scope: !5306)
!5313 = !DILocation(line: 1922, column: 34, scope: !5306)
!5314 = !DILocation(line: 1922, column: 8, scope: !5306)
!5315 = !DILocation(line: 1922, column: 6, scope: !5306)
!5316 = !DILocation(line: 1923, column: 6, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 1923, column: 6)
!5318 = !DILocation(line: 1923, column: 6, scope: !5306)
!5319 = !DILocation(line: 1924, column: 10, scope: !5317)
!5320 = !DILocation(line: 1924, column: 3, scope: !5317)
!5321 = !DILocation(line: 1926, column: 6, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 1926, column: 6)
!5323 = !DILocation(line: 1926, column: 11, scope: !5322)
!5324 = !DILocation(line: 1926, column: 24, scope: !5322)
!5325 = !DILocation(line: 1926, column: 6, scope: !5306)
!5326 = !DILocation(line: 1927, column: 3, scope: !5322)
!5327 = !DILocation(line: 1929, column: 2, scope: !5306)
!5328 = !DILocation(line: 1929, column: 7, scope: !5306)
!5329 = !DILocation(line: 1929, column: 20, scope: !5306)
!5330 = !DILocation(line: 1931, column: 37, scope: !5306)
!5331 = !DILocation(line: 1931, column: 42, scope: !5306)
!5332 = !DILocation(line: 1931, column: 47, scope: !5306)
!5333 = !DILocation(line: 1931, column: 9, scope: !5306)
!5334 = !DILocation(line: 1931, column: 2, scope: !5306)
!5335 = !DILocation(line: 1932, column: 1, scope: !5306)
!5336 = distinct !DISubprogram(name: "spi_nor_read_sr", scope: !3, file: !3, line: 279, type: !5100, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5337 = !DILocalVariable(name: "nor", arg: 1, scope: !5336, file: !3, line: 279, type: !4103)
!5338 = !DILocation(line: 279, column: 44, scope: !5336)
!5339 = !DILocalVariable(name: "sr", arg: 2, scope: !5336, file: !3, line: 279, type: !4439)
!5340 = !DILocation(line: 279, column: 53, scope: !5336)
!5341 = !DILocalVariable(name: "ret", scope: !5336, file: !3, line: 281, type: !182)
!5342 = !DILocation(line: 281, column: 6, scope: !5336)
!5343 = !DILocation(line: 283, column: 6, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 283, column: 6)
!5345 = !DILocation(line: 283, column: 11, scope: !5344)
!5346 = !DILocation(line: 283, column: 6, scope: !5336)
!5347 = !DILocalVariable(name: "op", scope: !5348, file: !3, line: 284, type: !4302)
!5348 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 283, column: 19)
!5349 = !DILocation(line: 284, column: 21, scope: !5348)
!5350 = !DILocation(line: 285, column: 4, scope: !5348)
!5351 = !DILocation(line: 290, column: 25, scope: !5348)
!5352 = !DILocation(line: 290, column: 30, scope: !5348)
!5353 = !DILocation(line: 290, column: 9, scope: !5348)
!5354 = !DILocation(line: 290, column: 7, scope: !5348)
!5355 = !DILocation(line: 291, column: 2, scope: !5348)
!5356 = !DILocation(line: 292, column: 9, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 291, column: 9)
!5358 = !DILocation(line: 292, column: 14, scope: !5357)
!5359 = !DILocation(line: 292, column: 30, scope: !5357)
!5360 = !DILocation(line: 292, column: 39, scope: !5357)
!5361 = !DILocation(line: 293, column: 11, scope: !5357)
!5362 = !DILocation(line: 292, column: 7, scope: !5357)
!5363 = !DILocation(line: 296, column: 6, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 296, column: 6)
!5365 = !DILocation(line: 296, column: 6, scope: !5336)
!5366 = !DILocation(line: 297, column: 3, scope: !5364)
!5367 = !DILocation(line: 299, column: 9, scope: !5336)
!5368 = !DILocation(line: 299, column: 2, scope: !5336)
!5369 = distinct !DISubprogram(name: "spi_nor_write_sr1_and_check", scope: !3, file: !3, line: 760, type: !5060, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5370 = !DILocalVariable(name: "nor", arg: 1, scope: !5369, file: !3, line: 760, type: !4103)
!5371 = !DILocation(line: 760, column: 56, scope: !5369)
!5372 = !DILocalVariable(name: "sr1", arg: 2, scope: !5369, file: !3, line: 760, type: !6)
!5373 = !DILocation(line: 760, column: 64, scope: !5369)
!5374 = !DILocalVariable(name: "ret", scope: !5369, file: !3, line: 762, type: !182)
!5375 = !DILocation(line: 762, column: 6, scope: !5369)
!5376 = !DILocation(line: 764, column: 22, scope: !5369)
!5377 = !DILocation(line: 764, column: 2, scope: !5369)
!5378 = !DILocation(line: 764, column: 7, scope: !5369)
!5379 = !DILocation(line: 764, column: 20, scope: !5369)
!5380 = !DILocation(line: 766, column: 25, scope: !5369)
!5381 = !DILocation(line: 766, column: 30, scope: !5369)
!5382 = !DILocation(line: 766, column: 35, scope: !5369)
!5383 = !DILocation(line: 766, column: 8, scope: !5369)
!5384 = !DILocation(line: 766, column: 6, scope: !5369)
!5385 = !DILocation(line: 767, column: 6, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 767, column: 6)
!5387 = !DILocation(line: 767, column: 6, scope: !5369)
!5388 = !DILocation(line: 768, column: 10, scope: !5386)
!5389 = !DILocation(line: 768, column: 3, scope: !5386)
!5390 = !DILocation(line: 770, column: 24, scope: !5369)
!5391 = !DILocation(line: 770, column: 29, scope: !5369)
!5392 = !DILocation(line: 770, column: 34, scope: !5369)
!5393 = !DILocation(line: 770, column: 8, scope: !5369)
!5394 = !DILocation(line: 770, column: 6, scope: !5369)
!5395 = !DILocation(line: 771, column: 6, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 771, column: 6)
!5397 = !DILocation(line: 771, column: 6, scope: !5369)
!5398 = !DILocation(line: 772, column: 10, scope: !5396)
!5399 = !DILocation(line: 772, column: 3, scope: !5396)
!5400 = !DILocation(line: 774, column: 6, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 774, column: 6)
!5402 = !DILocation(line: 774, column: 11, scope: !5401)
!5403 = !DILocation(line: 774, column: 27, scope: !5401)
!5404 = !DILocation(line: 774, column: 24, scope: !5401)
!5405 = !DILocation(line: 774, column: 6, scope: !5369)
!5406 = !DILocation(line: 776, column: 3, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 774, column: 32)
!5408 = !DILocation(line: 779, column: 2, scope: !5369)
!5409 = !DILocation(line: 780, column: 1, scope: !5369)
!5410 = distinct !DISubprogram(name: "spi_nor_sr2_bit1_quad_enable", scope: !3, file: !3, line: 1943, type: !4533, scopeLine: 1944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5411 = !DILocalVariable(name: "nor", arg: 1, scope: !5410, file: !3, line: 1943, type: !4103)
!5412 = !DILocation(line: 1943, column: 50, scope: !5410)
!5413 = !DILocalVariable(name: "ret", scope: !5410, file: !3, line: 1945, type: !182)
!5414 = !DILocation(line: 1945, column: 6, scope: !5410)
!5415 = !DILocation(line: 1947, column: 6, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1947, column: 6)
!5417 = !DILocation(line: 1947, column: 11, scope: !5416)
!5418 = !DILocation(line: 1947, column: 17, scope: !5416)
!5419 = !DILocation(line: 1947, column: 6, scope: !5410)
!5420 = !DILocation(line: 1948, column: 43, scope: !5416)
!5421 = !DILocation(line: 1948, column: 10, scope: !5416)
!5422 = !DILocation(line: 1948, column: 3, scope: !5416)
!5423 = !DILocation(line: 1950, column: 24, scope: !5410)
!5424 = !DILocation(line: 1950, column: 29, scope: !5410)
!5425 = !DILocation(line: 1950, column: 34, scope: !5410)
!5426 = !DILocation(line: 1950, column: 8, scope: !5410)
!5427 = !DILocation(line: 1950, column: 6, scope: !5410)
!5428 = !DILocation(line: 1951, column: 6, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1951, column: 6)
!5430 = !DILocation(line: 1951, column: 6, scope: !5410)
!5431 = !DILocation(line: 1952, column: 10, scope: !5429)
!5432 = !DILocation(line: 1952, column: 3, scope: !5429)
!5433 = !DILocation(line: 1954, column: 6, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1954, column: 6)
!5435 = !DILocation(line: 1954, column: 11, scope: !5434)
!5436 = !DILocation(line: 1954, column: 24, scope: !5434)
!5437 = !DILocation(line: 1954, column: 6, scope: !5410)
!5438 = !DILocation(line: 1955, column: 3, scope: !5434)
!5439 = !DILocation(line: 1957, column: 2, scope: !5410)
!5440 = !DILocation(line: 1957, column: 7, scope: !5410)
!5441 = !DILocation(line: 1957, column: 20, scope: !5410)
!5442 = !DILocation(line: 1959, column: 42, scope: !5410)
!5443 = !DILocation(line: 1959, column: 47, scope: !5410)
!5444 = !DILocation(line: 1959, column: 52, scope: !5410)
!5445 = !DILocation(line: 1959, column: 9, scope: !5410)
!5446 = !DILocation(line: 1959, column: 2, scope: !5410)
!5447 = !DILocation(line: 1960, column: 1, scope: !5410)
!5448 = distinct !DISubprogram(name: "spi_nor_write_16bit_cr_and_check", scope: !3, file: !3, line: 857, type: !5060, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5449 = !DILocalVariable(name: "nor", arg: 1, scope: !5448, file: !3, line: 857, type: !4103)
!5450 = !DILocation(line: 857, column: 61, scope: !5448)
!5451 = !DILocalVariable(name: "cr", arg: 2, scope: !5448, file: !3, line: 857, type: !6)
!5452 = !DILocation(line: 857, column: 69, scope: !5448)
!5453 = !DILocalVariable(name: "ret", scope: !5448, file: !3, line: 859, type: !182)
!5454 = !DILocation(line: 859, column: 6, scope: !5448)
!5455 = !DILocalVariable(name: "sr_cr", scope: !5448, file: !3, line: 860, type: !4439)
!5456 = !DILocation(line: 860, column: 6, scope: !5448)
!5457 = !DILocation(line: 860, column: 14, scope: !5448)
!5458 = !DILocation(line: 860, column: 19, scope: !5448)
!5459 = !DILocalVariable(name: "sr_written", scope: !5448, file: !3, line: 861, type: !6)
!5460 = !DILocation(line: 861, column: 5, scope: !5448)
!5461 = !DILocation(line: 864, column: 24, scope: !5448)
!5462 = !DILocation(line: 864, column: 29, scope: !5448)
!5463 = !DILocation(line: 864, column: 8, scope: !5448)
!5464 = !DILocation(line: 864, column: 6, scope: !5448)
!5465 = !DILocation(line: 865, column: 6, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 865, column: 6)
!5467 = !DILocation(line: 865, column: 6, scope: !5448)
!5468 = !DILocation(line: 866, column: 10, scope: !5466)
!5469 = !DILocation(line: 866, column: 3, scope: !5466)
!5470 = !DILocation(line: 868, column: 13, scope: !5448)
!5471 = !DILocation(line: 868, column: 2, scope: !5448)
!5472 = !DILocation(line: 868, column: 11, scope: !5448)
!5473 = !DILocation(line: 870, column: 25, scope: !5448)
!5474 = !DILocation(line: 870, column: 30, scope: !5448)
!5475 = !DILocation(line: 870, column: 8, scope: !5448)
!5476 = !DILocation(line: 870, column: 6, scope: !5448)
!5477 = !DILocation(line: 871, column: 6, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 871, column: 6)
!5479 = !DILocation(line: 871, column: 6, scope: !5448)
!5480 = !DILocation(line: 872, column: 10, scope: !5478)
!5481 = !DILocation(line: 872, column: 3, scope: !5478)
!5482 = !DILocation(line: 874, column: 15, scope: !5448)
!5483 = !DILocation(line: 874, column: 13, scope: !5448)
!5484 = !DILocation(line: 876, column: 24, scope: !5448)
!5485 = !DILocation(line: 876, column: 29, scope: !5448)
!5486 = !DILocation(line: 876, column: 8, scope: !5448)
!5487 = !DILocation(line: 876, column: 6, scope: !5448)
!5488 = !DILocation(line: 877, column: 6, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 877, column: 6)
!5490 = !DILocation(line: 877, column: 6, scope: !5448)
!5491 = !DILocation(line: 878, column: 10, scope: !5489)
!5492 = !DILocation(line: 878, column: 3, scope: !5489)
!5493 = !DILocation(line: 880, column: 6, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 880, column: 6)
!5495 = !DILocation(line: 880, column: 20, scope: !5494)
!5496 = !DILocation(line: 880, column: 17, scope: !5494)
!5497 = !DILocation(line: 880, column: 6, scope: !5448)
!5498 = !DILocation(line: 882, column: 3, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 880, column: 30)
!5500 = !DILocation(line: 885, column: 6, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 885, column: 6)
!5502 = !DILocation(line: 885, column: 11, scope: !5501)
!5503 = !DILocation(line: 885, column: 17, scope: !5501)
!5504 = !DILocation(line: 885, column: 6, scope: !5448)
!5505 = !DILocation(line: 886, column: 3, scope: !5501)
!5506 = !DILocation(line: 888, column: 24, scope: !5448)
!5507 = !DILocation(line: 888, column: 30, scope: !5448)
!5508 = !DILocation(line: 888, column: 8, scope: !5448)
!5509 = !DILocation(line: 888, column: 6, scope: !5448)
!5510 = !DILocation(line: 889, column: 6, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 889, column: 6)
!5512 = !DILocation(line: 889, column: 6, scope: !5448)
!5513 = !DILocation(line: 890, column: 10, scope: !5511)
!5514 = !DILocation(line: 890, column: 3, scope: !5511)
!5515 = !DILocation(line: 892, column: 6, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 892, column: 6)
!5517 = !DILocation(line: 892, column: 12, scope: !5516)
!5518 = !DILocation(line: 892, column: 9, scope: !5516)
!5519 = !DILocation(line: 892, column: 6, scope: !5448)
!5520 = !DILocation(line: 894, column: 3, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 892, column: 22)
!5522 = !DILocation(line: 897, column: 2, scope: !5448)
!5523 = !DILocation(line: 898, column: 1, scope: !5448)
!5524 = distinct !DISubprogram(name: "spi_nor_read_cr", scope: !3, file: !3, line: 342, type: !5100, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5525 = !DILocalVariable(name: "nor", arg: 1, scope: !5524, file: !3, line: 342, type: !4103)
!5526 = !DILocation(line: 342, column: 44, scope: !5524)
!5527 = !DILocalVariable(name: "cr", arg: 2, scope: !5524, file: !3, line: 342, type: !4439)
!5528 = !DILocation(line: 342, column: 53, scope: !5524)
!5529 = !DILocalVariable(name: "ret", scope: !5524, file: !3, line: 344, type: !182)
!5530 = !DILocation(line: 344, column: 6, scope: !5524)
!5531 = !DILocation(line: 346, column: 6, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 346, column: 6)
!5533 = !DILocation(line: 346, column: 11, scope: !5532)
!5534 = !DILocation(line: 346, column: 6, scope: !5524)
!5535 = !DILocalVariable(name: "op", scope: !5536, file: !3, line: 347, type: !4302)
!5536 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 346, column: 19)
!5537 = !DILocation(line: 347, column: 21, scope: !5536)
!5538 = !DILocation(line: 348, column: 4, scope: !5536)
!5539 = !DILocation(line: 353, column: 25, scope: !5536)
!5540 = !DILocation(line: 353, column: 30, scope: !5536)
!5541 = !DILocation(line: 353, column: 9, scope: !5536)
!5542 = !DILocation(line: 353, column: 7, scope: !5536)
!5543 = !DILocation(line: 354, column: 2, scope: !5536)
!5544 = !DILocation(line: 355, column: 9, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 354, column: 9)
!5546 = !DILocation(line: 355, column: 14, scope: !5545)
!5547 = !DILocation(line: 355, column: 30, scope: !5545)
!5548 = !DILocation(line: 355, column: 39, scope: !5545)
!5549 = !DILocation(line: 355, column: 60, scope: !5545)
!5550 = !DILocation(line: 355, column: 7, scope: !5545)
!5551 = !DILocation(line: 358, column: 6, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 358, column: 6)
!5553 = !DILocation(line: 358, column: 6, scope: !5524)
!5554 = !DILocation(line: 359, column: 3, scope: !5552)
!5555 = !DILocation(line: 361, column: 9, scope: !5524)
!5556 = !DILocation(line: 361, column: 2, scope: !5524)
!5557 = distinct !DISubprogram(name: "spi_nor_sr2_bit7_quad_enable", scope: !3, file: !3, line: 1974, type: !4533, scopeLine: 1975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5558 = !DILocalVariable(name: "nor", arg: 1, scope: !5557, file: !3, line: 1974, type: !4103)
!5559 = !DILocation(line: 1974, column: 50, scope: !5557)
!5560 = !DILocalVariable(name: "sr2", scope: !5557, file: !3, line: 1976, type: !4439)
!5561 = !DILocation(line: 1976, column: 6, scope: !5557)
!5562 = !DILocation(line: 1976, column: 12, scope: !5557)
!5563 = !DILocation(line: 1976, column: 17, scope: !5557)
!5564 = !DILocalVariable(name: "ret", scope: !5557, file: !3, line: 1977, type: !182)
!5565 = !DILocation(line: 1977, column: 6, scope: !5557)
!5566 = !DILocalVariable(name: "sr2_written", scope: !5557, file: !3, line: 1978, type: !6)
!5567 = !DILocation(line: 1978, column: 5, scope: !5557)
!5568 = !DILocation(line: 1981, column: 25, scope: !5557)
!5569 = !DILocation(line: 1981, column: 30, scope: !5557)
!5570 = !DILocation(line: 1981, column: 8, scope: !5557)
!5571 = !DILocation(line: 1981, column: 6, scope: !5557)
!5572 = !DILocation(line: 1982, column: 6, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 1982, column: 6)
!5574 = !DILocation(line: 1982, column: 6, scope: !5557)
!5575 = !DILocation(line: 1983, column: 10, scope: !5573)
!5576 = !DILocation(line: 1983, column: 3, scope: !5573)
!5577 = !DILocation(line: 1984, column: 7, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 1984, column: 6)
!5579 = !DILocation(line: 1984, column: 6, scope: !5578)
!5580 = !DILocation(line: 1984, column: 11, scope: !5578)
!5581 = !DILocation(line: 1984, column: 6, scope: !5557)
!5582 = !DILocation(line: 1985, column: 3, scope: !5578)
!5583 = !DILocation(line: 1988, column: 3, scope: !5557)
!5584 = !DILocation(line: 1988, column: 7, scope: !5557)
!5585 = !DILocation(line: 1990, column: 26, scope: !5557)
!5586 = !DILocation(line: 1990, column: 31, scope: !5557)
!5587 = !DILocation(line: 1990, column: 8, scope: !5557)
!5588 = !DILocation(line: 1990, column: 6, scope: !5557)
!5589 = !DILocation(line: 1991, column: 6, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 1991, column: 6)
!5591 = !DILocation(line: 1991, column: 6, scope: !5557)
!5592 = !DILocation(line: 1992, column: 10, scope: !5590)
!5593 = !DILocation(line: 1992, column: 3, scope: !5590)
!5594 = !DILocation(line: 1994, column: 17, scope: !5557)
!5595 = !DILocation(line: 1994, column: 16, scope: !5557)
!5596 = !DILocation(line: 1994, column: 14, scope: !5557)
!5597 = !DILocation(line: 1997, column: 25, scope: !5557)
!5598 = !DILocation(line: 1997, column: 30, scope: !5557)
!5599 = !DILocation(line: 1997, column: 8, scope: !5557)
!5600 = !DILocation(line: 1997, column: 6, scope: !5557)
!5601 = !DILocation(line: 1998, column: 6, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 1998, column: 6)
!5603 = !DILocation(line: 1998, column: 6, scope: !5557)
!5604 = !DILocation(line: 1999, column: 10, scope: !5602)
!5605 = !DILocation(line: 1999, column: 3, scope: !5602)
!5606 = !DILocation(line: 2001, column: 7, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 2001, column: 6)
!5608 = !DILocation(line: 2001, column: 6, scope: !5607)
!5609 = !DILocation(line: 2001, column: 14, scope: !5607)
!5610 = !DILocation(line: 2001, column: 11, scope: !5607)
!5611 = !DILocation(line: 2001, column: 6, scope: !5557)
!5612 = !DILocation(line: 2003, column: 3, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 2001, column: 27)
!5614 = !DILocation(line: 2006, column: 2, scope: !5557)
!5615 = !DILocation(line: 2007, column: 1, scope: !5557)
!5616 = distinct !DISubprogram(name: "spi_nor_read_sr2", scope: !3, file: !3, line: 963, type: !5100, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5617 = !DILocalVariable(name: "nor", arg: 1, scope: !5616, file: !3, line: 963, type: !4103)
!5618 = !DILocation(line: 963, column: 45, scope: !5616)
!5619 = !DILocalVariable(name: "sr2", arg: 2, scope: !5616, file: !3, line: 963, type: !4439)
!5620 = !DILocation(line: 963, column: 54, scope: !5616)
!5621 = !DILocalVariable(name: "ret", scope: !5616, file: !3, line: 965, type: !182)
!5622 = !DILocation(line: 965, column: 6, scope: !5616)
!5623 = !DILocation(line: 967, column: 6, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 967, column: 6)
!5625 = !DILocation(line: 967, column: 11, scope: !5624)
!5626 = !DILocation(line: 967, column: 6, scope: !5616)
!5627 = !DILocalVariable(name: "op", scope: !5628, file: !3, line: 968, type: !4302)
!5628 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 967, column: 19)
!5629 = !DILocation(line: 968, column: 21, scope: !5628)
!5630 = !DILocation(line: 969, column: 4, scope: !5628)
!5631 = !DILocation(line: 974, column: 25, scope: !5628)
!5632 = !DILocation(line: 974, column: 30, scope: !5628)
!5633 = !DILocation(line: 974, column: 9, scope: !5628)
!5634 = !DILocation(line: 974, column: 7, scope: !5628)
!5635 = !DILocation(line: 975, column: 2, scope: !5628)
!5636 = !DILocation(line: 976, column: 9, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 975, column: 9)
!5638 = !DILocation(line: 976, column: 14, scope: !5637)
!5639 = !DILocation(line: 976, column: 30, scope: !5637)
!5640 = !DILocation(line: 976, column: 39, scope: !5637)
!5641 = !DILocation(line: 977, column: 11, scope: !5637)
!5642 = !DILocation(line: 976, column: 7, scope: !5637)
!5643 = !DILocation(line: 980, column: 6, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 980, column: 6)
!5645 = !DILocation(line: 980, column: 6, scope: !5616)
!5646 = !DILocation(line: 981, column: 3, scope: !5644)
!5647 = !DILocation(line: 983, column: 9, scope: !5616)
!5648 = !DILocation(line: 983, column: 2, scope: !5616)
!5649 = distinct !DISubprogram(name: "spi_nor_write_sr2", scope: !3, file: !3, line: 925, type: !5650, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5650 = !DISubroutineType(types: !5651)
!5651 = !{!182, !4103, !4596}
!5652 = !DILocalVariable(name: "nor", arg: 1, scope: !5649, file: !3, line: 925, type: !4103)
!5653 = !DILocation(line: 925, column: 46, scope: !5649)
!5654 = !DILocalVariable(name: "sr2", arg: 2, scope: !5649, file: !3, line: 925, type: !4596)
!5655 = !DILocation(line: 925, column: 61, scope: !5649)
!5656 = !DILocalVariable(name: "ret", scope: !5649, file: !3, line: 927, type: !182)
!5657 = !DILocation(line: 927, column: 6, scope: !5649)
!5658 = !DILocation(line: 929, column: 29, scope: !5649)
!5659 = !DILocation(line: 929, column: 8, scope: !5649)
!5660 = !DILocation(line: 929, column: 6, scope: !5649)
!5661 = !DILocation(line: 930, column: 6, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 930, column: 6)
!5663 = !DILocation(line: 930, column: 6, scope: !5649)
!5664 = !DILocation(line: 931, column: 10, scope: !5662)
!5665 = !DILocation(line: 931, column: 3, scope: !5662)
!5666 = !DILocation(line: 933, column: 6, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 933, column: 6)
!5668 = !DILocation(line: 933, column: 11, scope: !5667)
!5669 = !DILocation(line: 933, column: 6, scope: !5649)
!5670 = !DILocalVariable(name: "op", scope: !5671, file: !3, line: 934, type: !4302)
!5671 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 933, column: 19)
!5672 = !DILocation(line: 934, column: 21, scope: !5671)
!5673 = !DILocation(line: 935, column: 4, scope: !5671)
!5674 = !DILocation(line: 940, column: 25, scope: !5671)
!5675 = !DILocation(line: 940, column: 30, scope: !5671)
!5676 = !DILocation(line: 940, column: 9, scope: !5671)
!5677 = !DILocation(line: 940, column: 7, scope: !5671)
!5678 = !DILocation(line: 941, column: 2, scope: !5671)
!5679 = !DILocation(line: 942, column: 9, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 941, column: 9)
!5681 = !DILocation(line: 942, column: 14, scope: !5680)
!5682 = !DILocation(line: 942, column: 30, scope: !5680)
!5683 = !DILocation(line: 942, column: 40, scope: !5680)
!5684 = !DILocation(line: 943, column: 12, scope: !5680)
!5685 = !DILocation(line: 942, column: 7, scope: !5680)
!5686 = !DILocation(line: 946, column: 6, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 946, column: 6)
!5688 = !DILocation(line: 946, column: 6, scope: !5649)
!5689 = !DILocation(line: 948, column: 10, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 946, column: 11)
!5691 = !DILocation(line: 948, column: 3, scope: !5690)
!5692 = !DILocation(line: 951, column: 33, scope: !5649)
!5693 = !DILocation(line: 951, column: 9, scope: !5649)
!5694 = !DILocation(line: 951, column: 2, scope: !5649)
!5695 = !DILocation(line: 952, column: 1, scope: !5649)
!5696 = distinct !DISubprogram(name: "spi_nor_set_pp_settings", scope: !3, file: !3, line: 2220, type: !5697, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5697 = !DISubroutineType(types: !5698)
!5698 = !{null, !5699, !6, !107}
!5699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!5700 = !DILocalVariable(name: "pp", arg: 1, scope: !5696, file: !3, line: 2220, type: !5699)
!5701 = !DILocation(line: 2220, column: 57, scope: !5696)
!5702 = !DILocalVariable(name: "opcode", arg: 2, scope: !5696, file: !3, line: 2220, type: !6)
!5703 = !DILocation(line: 2220, column: 64, scope: !5696)
!5704 = !DILocalVariable(name: "proto", arg: 3, scope: !5696, file: !3, line: 2221, type: !107)
!5705 = !DILocation(line: 2221, column: 31, scope: !5696)
!5706 = !DILocation(line: 2223, column: 15, scope: !5696)
!5707 = !DILocation(line: 2223, column: 2, scope: !5696)
!5708 = !DILocation(line: 2223, column: 6, scope: !5696)
!5709 = !DILocation(line: 2223, column: 13, scope: !5696)
!5710 = !DILocation(line: 2224, column: 14, scope: !5696)
!5711 = !DILocation(line: 2224, column: 2, scope: !5696)
!5712 = !DILocation(line: 2224, column: 6, scope: !5696)
!5713 = !DILocation(line: 2224, column: 12, scope: !5696)
!5714 = !DILocation(line: 2225, column: 1, scope: !5696)
!5715 = !DILocalVariable(name: "hwcaps", arg: 1, scope: !4091, file: !3, line: 2238, type: !198)
!5716 = !DILocation(line: 2238, column: 33, scope: !4091)
!5717 = !DILocation(line: 2258, column: 28, scope: !4091)
!5718 = !DILocation(line: 2258, column: 9, scope: !4091)
!5719 = !DILocation(line: 2258, column: 2, scope: !4091)
!5720 = distinct !DISubprogram(name: "spi_nor_hwcaps2cmd", scope: !3, file: !3, line: 2227, type: !5721, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5721 = !DISubroutineType(types: !5722)
!5722 = !{!182, !198, !5723, !1108}
!5723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5724, size: 64)
!5724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4095, size: 64, elements: !1710)
!5725 = !DILocalVariable(name: "hwcaps", arg: 1, scope: !5720, file: !3, line: 2227, type: !198)
!5726 = !DILocation(line: 2227, column: 35, scope: !5720)
!5727 = !DILocalVariable(name: "table", arg: 2, scope: !5720, file: !3, line: 2227, type: !5723)
!5728 = !DILocation(line: 2227, column: 53, scope: !5720)
!5729 = !DILocalVariable(name: "size", arg: 3, scope: !5720, file: !3, line: 2227, type: !1108)
!5730 = !DILocation(line: 2227, column: 72, scope: !5720)
!5731 = !DILocalVariable(name: "i", scope: !5720, file: !3, line: 2229, type: !1108)
!5732 = !DILocation(line: 2229, column: 9, scope: !5720)
!5733 = !DILocation(line: 2231, column: 9, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 2231, column: 2)
!5735 = !DILocation(line: 2231, column: 7, scope: !5734)
!5736 = !DILocation(line: 2231, column: 14, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5734, file: !3, line: 2231, column: 2)
!5738 = !DILocation(line: 2231, column: 18, scope: !5737)
!5739 = !DILocation(line: 2231, column: 16, scope: !5737)
!5740 = !DILocation(line: 2231, column: 2, scope: !5734)
!5741 = !DILocation(line: 2232, column: 7, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 2232, column: 7)
!5743 = !DILocation(line: 2232, column: 13, scope: !5742)
!5744 = !DILocation(line: 2232, column: 27, scope: !5742)
!5745 = !DILocation(line: 2232, column: 19, scope: !5742)
!5746 = !DILocation(line: 2232, column: 7, scope: !5737)
!5747 = !DILocation(line: 2233, column: 11, scope: !5742)
!5748 = !DILocation(line: 2233, column: 17, scope: !5742)
!5749 = !DILocation(line: 2233, column: 4, scope: !5742)
!5750 = !DILocation(line: 2231, column: 25, scope: !5737)
!5751 = !DILocation(line: 2231, column: 2, scope: !5737)
!5752 = distinct !{!5752, !5740, !5753}
!5753 = !DILocation(line: 2233, column: 21, scope: !5734)
!5754 = !DILocation(line: 2235, column: 2, scope: !5720)
!5755 = !DILocation(line: 2236, column: 1, scope: !5720)
!5756 = distinct !DISubprogram(name: "spi_nor_set_erase_type", scope: !3, file: !3, line: 2404, type: !5757, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5757 = !DISubroutineType(types: !5758)
!5758 = !{null, !5759, !198, !6}
!5759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 64)
!5760 = !DILocalVariable(name: "x", arg: 1, scope: !5761, file: !5762, line: 283, type: !182)
!5761 = distinct !DISubprogram(name: "ffs", scope: !5762, file: !5762, line: 283, type: !1616, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5762 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5763 = !DILocation(line: 283, column: 36, scope: !5761, inlinedAt: !5764)
!5764 = distinct !DILocation(line: 2410, column: 22, scope: !5756)
!5765 = !DILocalVariable(name: "r", scope: !5761, file: !5762, line: 285, type: !182)
!5766 = !DILocation(line: 285, column: 6, scope: !5761, inlinedAt: !5764)
!5767 = !DILocalVariable(name: "erase", arg: 1, scope: !5756, file: !3, line: 2404, type: !5759)
!5768 = !DILocation(line: 2404, column: 56, scope: !5756)
!5769 = !DILocalVariable(name: "size", arg: 2, scope: !5756, file: !3, line: 2404, type: !198)
!5770 = !DILocation(line: 2404, column: 67, scope: !5756)
!5771 = !DILocalVariable(name: "opcode", arg: 3, scope: !5756, file: !3, line: 2405, type: !6)
!5772 = !DILocation(line: 2405, column: 11, scope: !5756)
!5773 = !DILocation(line: 2407, column: 16, scope: !5756)
!5774 = !DILocation(line: 2407, column: 2, scope: !5756)
!5775 = !DILocation(line: 2407, column: 9, scope: !5756)
!5776 = !DILocation(line: 2407, column: 14, scope: !5756)
!5777 = !DILocation(line: 2408, column: 18, scope: !5756)
!5778 = !DILocation(line: 2408, column: 2, scope: !5756)
!5779 = !DILocation(line: 2408, column: 9, scope: !5756)
!5780 = !DILocation(line: 2408, column: 16, scope: !5756)
!5781 = !DILocation(line: 2410, column: 26, scope: !5756)
!5782 = !DILocation(line: 2410, column: 33, scope: !5756)
!5783 = !DILocation(line: 299, column: 14, scope: !5761, inlinedAt: !5764)
!5784 = !DILocation(line: 297, column: 2, scope: !5761, inlinedAt: !5764)
!5785 = !{i32 399134}
!5786 = !DILocation(line: 310, column: 9, scope: !5761, inlinedAt: !5764)
!5787 = !DILocation(line: 310, column: 11, scope: !5761, inlinedAt: !5764)
!5788 = !DILocation(line: 2410, column: 39, scope: !5756)
!5789 = !DILocation(line: 2410, column: 2, scope: !5756)
!5790 = !DILocation(line: 2410, column: 9, scope: !5756)
!5791 = !DILocation(line: 2410, column: 20, scope: !5756)
!5792 = !DILocation(line: 2411, column: 27, scope: !5756)
!5793 = !DILocation(line: 2411, column: 34, scope: !5756)
!5794 = !DILocation(line: 2411, column: 24, scope: !5756)
!5795 = !DILocation(line: 2411, column: 46, scope: !5756)
!5796 = !DILocation(line: 2411, column: 2, scope: !5756)
!5797 = !DILocation(line: 2411, column: 9, scope: !5756)
!5798 = !DILocation(line: 2411, column: 19, scope: !5756)
!5799 = !DILocation(line: 2412, column: 1, scope: !5756)
!5800 = distinct !DISubprogram(name: "spi_nor_init_uniform_erase_map", scope: !3, file: !3, line: 2421, type: !5801, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5801 = !DISubroutineType(types: !5802)
!5802 = !{null, !5803, !6, !250}
!5803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!5804 = !DILocalVariable(name: "map", arg: 1, scope: !5800, file: !3, line: 2421, type: !5803)
!5805 = !DILocation(line: 2421, column: 63, scope: !5800)
!5806 = !DILocalVariable(name: "erase_mask", arg: 2, scope: !5800, file: !3, line: 2422, type: !6)
!5807 = !DILocation(line: 2422, column: 12, scope: !5800)
!5808 = !DILocalVariable(name: "flash_size", arg: 3, scope: !5800, file: !3, line: 2422, type: !250)
!5809 = !DILocation(line: 2422, column: 28, scope: !5800)
!5810 = !DILocation(line: 2425, column: 32, scope: !5800)
!5811 = !DILocation(line: 2425, column: 43, scope: !5800)
!5812 = !DILocation(line: 2425, column: 67, scope: !5800)
!5813 = !DILocation(line: 2425, column: 2, scope: !5800)
!5814 = !DILocation(line: 2425, column: 7, scope: !5800)
!5815 = !DILocation(line: 2425, column: 22, scope: !5800)
!5816 = !DILocation(line: 2425, column: 29, scope: !5800)
!5817 = !DILocation(line: 2427, column: 29, scope: !5800)
!5818 = !DILocation(line: 2427, column: 2, scope: !5800)
!5819 = !DILocation(line: 2427, column: 7, scope: !5800)
!5820 = !DILocation(line: 2427, column: 22, scope: !5800)
!5821 = !DILocation(line: 2427, column: 27, scope: !5800)
!5822 = !DILocation(line: 2428, column: 18, scope: !5800)
!5823 = !DILocation(line: 2428, column: 23, scope: !5800)
!5824 = !DILocation(line: 2428, column: 2, scope: !5800)
!5825 = !DILocation(line: 2428, column: 7, scope: !5800)
!5826 = !DILocation(line: 2428, column: 15, scope: !5800)
!5827 = !DILocation(line: 2429, column: 28, scope: !5800)
!5828 = !DILocation(line: 2429, column: 2, scope: !5800)
!5829 = !DILocation(line: 2429, column: 7, scope: !5800)
!5830 = !DILocation(line: 2429, column: 26, scope: !5800)
!5831 = !DILocation(line: 2430, column: 1, scope: !5800)
!5832 = distinct !DISubprogram(name: "spi_nor_post_bfpt_fixups", scope: !3, file: !3, line: 2432, type: !4466, scopeLine: 2436, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5833 = !DILocalVariable(name: "nor", arg: 1, scope: !5832, file: !3, line: 2432, type: !4103)
!5834 = !DILocation(line: 2432, column: 46, scope: !5832)
!5835 = !DILocalVariable(name: "bfpt_header", arg: 2, scope: !5832, file: !3, line: 2433, type: !4468)
!5836 = !DILocation(line: 2433, column: 45, scope: !5832)
!5837 = !DILocalVariable(name: "bfpt", arg: 3, scope: !5832, file: !3, line: 2434, type: !4480)
!5838 = !DILocation(line: 2434, column: 33, scope: !5832)
!5839 = !DILocalVariable(name: "params", arg: 4, scope: !5832, file: !3, line: 2435, type: !4485)
!5840 = !DILocation(line: 2435, column: 41, scope: !5832)
!5841 = !DILocalVariable(name: "ret", scope: !5832, file: !3, line: 2437, type: !182)
!5842 = !DILocation(line: 2437, column: 6, scope: !5832)
!5843 = !DILocation(line: 2439, column: 6, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 2439, column: 6)
!5845 = !DILocation(line: 2439, column: 11, scope: !5844)
!5846 = !DILocation(line: 2439, column: 24, scope: !5844)
!5847 = !DILocation(line: 2439, column: 27, scope: !5844)
!5848 = !DILocation(line: 2439, column: 32, scope: !5844)
!5849 = !DILocation(line: 2439, column: 46, scope: !5844)
!5850 = !DILocation(line: 2439, column: 53, scope: !5844)
!5851 = !DILocation(line: 2440, column: 6, scope: !5844)
!5852 = !DILocation(line: 2440, column: 11, scope: !5844)
!5853 = !DILocation(line: 2440, column: 25, scope: !5844)
!5854 = !DILocation(line: 2440, column: 33, scope: !5844)
!5855 = !DILocation(line: 2439, column: 6, scope: !5832)
!5856 = !DILocation(line: 2441, column: 9, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 2440, column: 44)
!5858 = !DILocation(line: 2441, column: 14, scope: !5857)
!5859 = !DILocation(line: 2441, column: 28, scope: !5857)
!5860 = !DILocation(line: 2441, column: 36, scope: !5857)
!5861 = !DILocation(line: 2441, column: 46, scope: !5857)
!5862 = !DILocation(line: 2441, column: 51, scope: !5857)
!5863 = !DILocation(line: 2442, column: 11, scope: !5857)
!5864 = !DILocation(line: 2442, column: 17, scope: !5857)
!5865 = !DILocation(line: 2441, column: 7, scope: !5857)
!5866 = !DILocation(line: 2443, column: 7, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 2443, column: 7)
!5868 = !DILocation(line: 2443, column: 7, scope: !5857)
!5869 = !DILocation(line: 2444, column: 11, scope: !5867)
!5870 = !DILocation(line: 2444, column: 4, scope: !5867)
!5871 = !DILocation(line: 2445, column: 2, scope: !5857)
!5872 = !DILocation(line: 2447, column: 6, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 2447, column: 6)
!5874 = !DILocation(line: 2447, column: 11, scope: !5873)
!5875 = !DILocation(line: 2447, column: 17, scope: !5873)
!5876 = !DILocation(line: 2447, column: 24, scope: !5873)
!5877 = !DILocation(line: 2447, column: 27, scope: !5873)
!5878 = !DILocation(line: 2447, column: 32, scope: !5873)
!5879 = !DILocation(line: 2447, column: 38, scope: !5873)
!5880 = !DILocation(line: 2447, column: 46, scope: !5873)
!5881 = !DILocation(line: 2447, column: 6, scope: !5832)
!5882 = !DILocation(line: 2448, column: 10, scope: !5873)
!5883 = !DILocation(line: 2448, column: 15, scope: !5873)
!5884 = !DILocation(line: 2448, column: 21, scope: !5873)
!5885 = !DILocation(line: 2448, column: 29, scope: !5873)
!5886 = !DILocation(line: 2448, column: 39, scope: !5873)
!5887 = !DILocation(line: 2448, column: 44, scope: !5873)
!5888 = !DILocation(line: 2448, column: 57, scope: !5873)
!5889 = !DILocation(line: 2449, column: 11, scope: !5873)
!5890 = !DILocation(line: 2448, column: 3, scope: !5873)
!5891 = !DILocation(line: 2451, column: 2, scope: !5832)
!5892 = !DILocation(line: 2452, column: 1, scope: !5832)
!5893 = distinct !DISubprogram(name: "spi_nor_restore", scope: !3, file: !3, line: 2979, type: !4462, scopeLine: 2980, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !259)
!5894 = !DILocalVariable(name: "nor", arg: 1, scope: !5893, file: !3, line: 2979, type: !4103)
!5895 = !DILocation(line: 2979, column: 38, scope: !5893)
!5896 = !DILocation(line: 2982, column: 6, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 2982, column: 6)
!5898 = !DILocation(line: 2982, column: 11, scope: !5897)
!5899 = !DILocation(line: 2982, column: 22, scope: !5897)
!5900 = !DILocation(line: 2982, column: 27, scope: !5897)
!5901 = !DILocation(line: 2982, column: 32, scope: !5897)
!5902 = !DILocation(line: 2982, column: 37, scope: !5897)
!5903 = !DILocation(line: 2982, column: 43, scope: !5897)
!5904 = !DILocation(line: 2982, column: 64, scope: !5897)
!5905 = !DILocation(line: 2983, column: 6, scope: !5897)
!5906 = !DILocation(line: 2983, column: 11, scope: !5897)
!5907 = !DILocation(line: 2983, column: 17, scope: !5897)
!5908 = !DILocation(line: 2982, column: 6, scope: !5893)
!5909 = !DILocation(line: 2984, column: 3, scope: !5897)
!5910 = !DILocation(line: 2984, column: 8, scope: !5897)
!5911 = !DILocation(line: 2984, column: 16, scope: !5897)
!5912 = !DILocation(line: 2984, column: 36, scope: !5897)
!5913 = !DILocation(line: 2985, column: 1, scope: !5893)
!5914 = !DILocalVariable(name: "nor", arg: 1, scope: !4100, file: !3, line: 3084, type: !4103)
!5915 = !DILocation(line: 3084, column: 34, scope: !4100)
!5916 = !DILocalVariable(name: "name", arg: 2, scope: !4100, file: !3, line: 3084, type: !610)
!5917 = !DILocation(line: 3084, column: 51, scope: !4100)
!5918 = !DILocalVariable(name: "hwcaps", arg: 3, scope: !4100, file: !3, line: 3085, type: !4547)
!5919 = !DILocation(line: 3085, column: 33, scope: !4100)
!5920 = !DILocalVariable(name: "info", scope: !4100, file: !3, line: 3087, type: !4442)
!5921 = !DILocation(line: 3087, column: 27, scope: !4100)
!5922 = !DILocalVariable(name: "dev", scope: !4100, file: !3, line: 3088, type: !2099)
!5923 = !DILocation(line: 3088, column: 17, scope: !4100)
!5924 = !DILocation(line: 3088, column: 23, scope: !4100)
!5925 = !DILocation(line: 3088, column: 28, scope: !4100)
!5926 = !DILocalVariable(name: "mtd", scope: !4100, file: !3, line: 3089, type: !1024)
!5927 = !DILocation(line: 3089, column: 19, scope: !4100)
!5928 = !DILocation(line: 3089, column: 26, scope: !4100)
!5929 = !DILocation(line: 3089, column: 31, scope: !4100)
!5930 = !DILocalVariable(name: "np", scope: !4100, file: !3, line: 3090, type: !2426)
!5931 = !DILocation(line: 3090, column: 22, scope: !4100)
!5932 = !DILocation(line: 3090, column: 50, scope: !4100)
!5933 = !DILocation(line: 3090, column: 27, scope: !4100)
!5934 = !DILocalVariable(name: "ret", scope: !4100, file: !3, line: 3091, type: !182)
!5935 = !DILocation(line: 3091, column: 6, scope: !4100)
!5936 = !DILocalVariable(name: "i", scope: !4100, file: !3, line: 3092, type: !182)
!5937 = !DILocation(line: 3092, column: 6, scope: !4100)
!5938 = !DILocation(line: 3094, column: 22, scope: !4100)
!5939 = !DILocation(line: 3094, column: 8, scope: !4100)
!5940 = !DILocation(line: 3094, column: 6, scope: !4100)
!5941 = !DILocation(line: 3095, column: 6, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3095, column: 6)
!5943 = !DILocation(line: 3095, column: 6, scope: !4100)
!5944 = !DILocation(line: 3096, column: 10, scope: !5942)
!5945 = !DILocation(line: 3096, column: 3, scope: !5942)
!5946 = !DILocation(line: 3099, column: 2, scope: !4100)
!5947 = !DILocation(line: 3099, column: 7, scope: !4100)
!5948 = !DILocation(line: 3099, column: 17, scope: !4100)
!5949 = !DILocation(line: 3100, column: 2, scope: !4100)
!5950 = !DILocation(line: 3100, column: 7, scope: !4100)
!5951 = !DILocation(line: 3100, column: 18, scope: !4100)
!5952 = !DILocation(line: 3101, column: 2, scope: !4100)
!5953 = !DILocation(line: 3101, column: 7, scope: !4100)
!5954 = !DILocation(line: 3101, column: 19, scope: !4100)
!5955 = !DILocation(line: 3111, column: 2, scope: !4100)
!5956 = !DILocation(line: 3111, column: 7, scope: !4100)
!5957 = !DILocation(line: 3111, column: 22, scope: !4100)
!5958 = !DILocation(line: 3112, column: 32, scope: !4100)
!5959 = !DILocation(line: 3112, column: 37, scope: !4100)
!5960 = !DILocation(line: 3112, column: 42, scope: !4100)
!5961 = !DILocation(line: 3112, column: 19, scope: !4100)
!5962 = !DILocation(line: 3112, column: 2, scope: !4100)
!5963 = !DILocation(line: 3112, column: 7, scope: !4100)
!5964 = !DILocation(line: 3112, column: 17, scope: !4100)
!5965 = !DILocation(line: 3114, column: 7, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3114, column: 6)
!5967 = !DILocation(line: 3114, column: 12, scope: !5966)
!5968 = !DILocation(line: 3114, column: 6, scope: !4100)
!5969 = !DILocation(line: 3115, column: 3, scope: !5966)
!5970 = !DILocation(line: 3117, column: 32, scope: !4100)
!5971 = !DILocation(line: 3117, column: 37, scope: !4100)
!5972 = !DILocation(line: 3117, column: 9, scope: !4100)
!5973 = !DILocation(line: 3117, column: 7, scope: !4100)
!5974 = !DILocation(line: 3118, column: 13, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3118, column: 6)
!5976 = !DILocation(line: 3118, column: 6, scope: !5975)
!5977 = !DILocation(line: 3118, column: 6, scope: !4100)
!5978 = !DILocation(line: 3119, column: 18, scope: !5975)
!5979 = !DILocation(line: 3119, column: 10, scope: !5975)
!5980 = !DILocation(line: 3119, column: 3, scope: !5975)
!5981 = !DILocation(line: 3121, column: 14, scope: !4100)
!5982 = !DILocation(line: 3121, column: 2, scope: !4100)
!5983 = !DILocation(line: 3121, column: 7, scope: !4100)
!5984 = !DILocation(line: 3121, column: 12, scope: !4100)
!5985 = !DILocation(line: 3123, column: 23, scope: !4100)
!5986 = !DILocation(line: 3123, column: 28, scope: !4100)
!5987 = !DILocation(line: 3123, column: 2, scope: !4100)
!5988 = !DILocation(line: 3125, column: 2, scope: !4100)
!5989 = !DILocation(line: 3125, column: 2, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3125, column: 2)
!5991 = !DILocation(line: 3132, column: 6, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3132, column: 6)
!5993 = !DILocation(line: 3132, column: 12, scope: !5992)
!5994 = !DILocation(line: 3132, column: 18, scope: !5992)
!5995 = !DILocation(line: 3132, column: 6, scope: !4100)
!5996 = !DILocation(line: 3133, column: 3, scope: !5992)
!5997 = !DILocation(line: 3133, column: 8, scope: !5992)
!5998 = !DILocation(line: 3133, column: 14, scope: !5992)
!5999 = !DILocation(line: 3135, column: 6, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3135, column: 6)
!6001 = !DILocation(line: 3135, column: 12, scope: !6000)
!6002 = !DILocation(line: 3135, column: 18, scope: !6000)
!6003 = !DILocation(line: 3135, column: 6, scope: !4100)
!6004 = !DILocation(line: 3136, column: 3, scope: !6000)
!6005 = !DILocation(line: 3136, column: 8, scope: !6000)
!6006 = !DILocation(line: 3136, column: 14, scope: !6000)
!6007 = !DILocation(line: 3138, column: 2, scope: !4100)
!6008 = !DILocation(line: 3138, column: 7, scope: !4100)
!6009 = !DILocation(line: 3138, column: 14, scope: !4100)
!6010 = !DILocation(line: 3141, column: 28, scope: !4100)
!6011 = !DILocation(line: 3141, column: 8, scope: !4100)
!6012 = !DILocation(line: 3141, column: 6, scope: !4100)
!6013 = !DILocation(line: 3142, column: 6, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3142, column: 6)
!6015 = !DILocation(line: 3142, column: 6, scope: !4100)
!6016 = !DILocation(line: 3143, column: 10, scope: !6014)
!6017 = !DILocation(line: 3143, column: 3, scope: !6014)
!6018 = !DILocation(line: 3145, column: 7, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3145, column: 6)
!6020 = !DILocation(line: 3145, column: 12, scope: !6019)
!6021 = !DILocation(line: 3145, column: 6, scope: !4100)
!6022 = !DILocation(line: 3146, column: 24, scope: !6019)
!6023 = !DILocation(line: 3146, column: 15, scope: !6019)
!6024 = !DILocation(line: 3146, column: 3, scope: !6019)
!6025 = !DILocation(line: 3146, column: 8, scope: !6019)
!6026 = !DILocation(line: 3146, column: 13, scope: !6019)
!6027 = !DILocation(line: 3147, column: 14, scope: !4100)
!6028 = !DILocation(line: 3147, column: 2, scope: !4100)
!6029 = !DILocation(line: 3147, column: 7, scope: !4100)
!6030 = !DILocation(line: 3147, column: 12, scope: !4100)
!6031 = !DILocation(line: 3148, column: 2, scope: !4100)
!6032 = !DILocation(line: 3148, column: 7, scope: !4100)
!6033 = !DILocation(line: 3148, column: 12, scope: !4100)
!6034 = !DILocation(line: 3149, column: 2, scope: !4100)
!6035 = !DILocation(line: 3149, column: 7, scope: !4100)
!6036 = !DILocation(line: 3149, column: 17, scope: !4100)
!6037 = !DILocation(line: 3150, column: 2, scope: !4100)
!6038 = !DILocation(line: 3150, column: 7, scope: !4100)
!6039 = !DILocation(line: 3150, column: 13, scope: !4100)
!6040 = !DILocation(line: 3151, column: 14, scope: !4100)
!6041 = !DILocation(line: 3151, column: 19, scope: !4100)
!6042 = !DILocation(line: 3151, column: 27, scope: !4100)
!6043 = !DILocation(line: 3151, column: 2, scope: !4100)
!6044 = !DILocation(line: 3151, column: 7, scope: !4100)
!6045 = !DILocation(line: 3151, column: 12, scope: !4100)
!6046 = !DILocation(line: 3152, column: 2, scope: !4100)
!6047 = !DILocation(line: 3152, column: 7, scope: !4100)
!6048 = !DILocation(line: 3152, column: 14, scope: !4100)
!6049 = !DILocation(line: 3153, column: 2, scope: !4100)
!6050 = !DILocation(line: 3153, column: 7, scope: !4100)
!6051 = !DILocation(line: 3153, column: 13, scope: !4100)
!6052 = !DILocation(line: 3154, column: 2, scope: !4100)
!6053 = !DILocation(line: 3154, column: 7, scope: !4100)
!6054 = !DILocation(line: 3154, column: 15, scope: !4100)
!6055 = !DILocation(line: 3156, column: 6, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3156, column: 6)
!6057 = !DILocation(line: 3156, column: 11, scope: !6056)
!6058 = !DILocation(line: 3156, column: 19, scope: !6056)
!6059 = !DILocation(line: 3156, column: 6, scope: !4100)
!6060 = !DILocation(line: 3157, column: 3, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 3156, column: 32)
!6062 = !DILocation(line: 3157, column: 8, scope: !6061)
!6063 = !DILocation(line: 3157, column: 14, scope: !6061)
!6064 = !DILocation(line: 3158, column: 3, scope: !6061)
!6065 = !DILocation(line: 3158, column: 8, scope: !6061)
!6066 = !DILocation(line: 3158, column: 16, scope: !6061)
!6067 = !DILocation(line: 3159, column: 3, scope: !6061)
!6068 = !DILocation(line: 3159, column: 8, scope: !6061)
!6069 = !DILocation(line: 3159, column: 19, scope: !6061)
!6070 = !DILocation(line: 3160, column: 2, scope: !6061)
!6071 = !DILocation(line: 3162, column: 6, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3162, column: 6)
!6073 = !DILocation(line: 3162, column: 12, scope: !6072)
!6074 = !DILocation(line: 3162, column: 18, scope: !6072)
!6075 = !DILocation(line: 3162, column: 6, scope: !4100)
!6076 = !DILocation(line: 3163, column: 3, scope: !6072)
!6077 = !DILocation(line: 3163, column: 8, scope: !6072)
!6078 = !DILocation(line: 3163, column: 14, scope: !6072)
!6079 = !DILocation(line: 3164, column: 6, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3164, column: 6)
!6081 = !DILocation(line: 3164, column: 12, scope: !6080)
!6082 = !DILocation(line: 3164, column: 18, scope: !6080)
!6083 = !DILocation(line: 3164, column: 6, scope: !4100)
!6084 = !DILocation(line: 3165, column: 3, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 3164, column: 36)
!6086 = !DILocation(line: 3165, column: 8, scope: !6085)
!6087 = !DILocation(line: 3165, column: 14, scope: !6085)
!6088 = !DILocation(line: 3166, column: 7, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 3166, column: 7)
!6090 = !DILocation(line: 3166, column: 13, scope: !6089)
!6091 = !DILocation(line: 3166, column: 19, scope: !6089)
!6092 = !DILocation(line: 3166, column: 7, scope: !6085)
!6093 = !DILocation(line: 3167, column: 4, scope: !6089)
!6094 = !DILocation(line: 3167, column: 9, scope: !6089)
!6095 = !DILocation(line: 3167, column: 15, scope: !6089)
!6096 = !DILocation(line: 3168, column: 2, scope: !6085)
!6097 = !DILocation(line: 3170, column: 6, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3170, column: 6)
!6099 = !DILocation(line: 3170, column: 12, scope: !6098)
!6100 = !DILocation(line: 3170, column: 18, scope: !6098)
!6101 = !DILocation(line: 3170, column: 6, scope: !4100)
!6102 = !DILocation(line: 3171, column: 3, scope: !6098)
!6103 = !DILocation(line: 3171, column: 8, scope: !6098)
!6104 = !DILocation(line: 3171, column: 14, scope: !6098)
!6105 = !DILocation(line: 3172, column: 6, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3172, column: 6)
!6107 = !DILocation(line: 3172, column: 12, scope: !6106)
!6108 = !DILocation(line: 3172, column: 18, scope: !6106)
!6109 = !DILocation(line: 3172, column: 6, scope: !4100)
!6110 = !DILocation(line: 3173, column: 3, scope: !6106)
!6111 = !DILocation(line: 3173, column: 8, scope: !6106)
!6112 = !DILocation(line: 3173, column: 14, scope: !6106)
!6113 = !DILocation(line: 3175, column: 6, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3175, column: 6)
!6115 = !DILocation(line: 3175, column: 12, scope: !6114)
!6116 = !DILocation(line: 3175, column: 18, scope: !6114)
!6117 = !DILocation(line: 3175, column: 6, scope: !4100)
!6118 = !DILocation(line: 3176, column: 3, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 3175, column: 37)
!6120 = !DILocation(line: 3176, column: 8, scope: !6119)
!6121 = !DILocation(line: 3176, column: 14, scope: !6119)
!6122 = !DILocation(line: 3177, column: 7, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 3177, column: 7)
!6124 = !DILocation(line: 3177, column: 13, scope: !6123)
!6125 = !DILocation(line: 3177, column: 19, scope: !6123)
!6126 = !DILocation(line: 3177, column: 7, scope: !6119)
!6127 = !DILocation(line: 3178, column: 4, scope: !6123)
!6128 = !DILocation(line: 3178, column: 9, scope: !6123)
!6129 = !DILocation(line: 3178, column: 15, scope: !6123)
!6130 = !DILocation(line: 3179, column: 2, scope: !6119)
!6131 = !DILocation(line: 3181, column: 6, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3181, column: 6)
!6133 = !DILocation(line: 3181, column: 12, scope: !6132)
!6134 = !DILocation(line: 3181, column: 18, scope: !6132)
!6135 = !DILocation(line: 3181, column: 6, scope: !4100)
!6136 = !DILocation(line: 3182, column: 3, scope: !6132)
!6137 = !DILocation(line: 3182, column: 8, scope: !6132)
!6138 = !DILocation(line: 3182, column: 14, scope: !6132)
!6139 = !DILocation(line: 3184, column: 20, scope: !4100)
!6140 = !DILocation(line: 3184, column: 2, scope: !4100)
!6141 = !DILocation(line: 3184, column: 7, scope: !4100)
!6142 = !DILocation(line: 3184, column: 11, scope: !4100)
!6143 = !DILocation(line: 3184, column: 18, scope: !4100)
!6144 = !DILocation(line: 3185, column: 19, scope: !4100)
!6145 = !DILocation(line: 3185, column: 24, scope: !4100)
!6146 = !DILocation(line: 3185, column: 32, scope: !4100)
!6147 = !DILocation(line: 3185, column: 2, scope: !4100)
!6148 = !DILocation(line: 3185, column: 7, scope: !4100)
!6149 = !DILocation(line: 3185, column: 17, scope: !4100)
!6150 = !DILocation(line: 3186, column: 22, scope: !4100)
!6151 = !DILocation(line: 3186, column: 27, scope: !4100)
!6152 = !DILocation(line: 3186, column: 2, scope: !4100)
!6153 = !DILocation(line: 3186, column: 7, scope: !4100)
!6154 = !DILocation(line: 3186, column: 20, scope: !4100)
!6155 = !DILocation(line: 3188, column: 28, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3188, column: 6)
!6157 = !DILocation(line: 3188, column: 6, scope: !6156)
!6158 = !DILocation(line: 3188, column: 6, scope: !4100)
!6159 = !DILocation(line: 3189, column: 3, scope: !6156)
!6160 = !DILocation(line: 3189, column: 8, scope: !6156)
!6161 = !DILocation(line: 3189, column: 14, scope: !6156)
!6162 = !DILocation(line: 3197, column: 22, scope: !4100)
!6163 = !DILocation(line: 3197, column: 27, scope: !4100)
!6164 = !DILocation(line: 3197, column: 8, scope: !4100)
!6165 = !DILocation(line: 3197, column: 6, scope: !4100)
!6166 = !DILocation(line: 3198, column: 6, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3198, column: 6)
!6168 = !DILocation(line: 3198, column: 6, scope: !4100)
!6169 = !DILocation(line: 3199, column: 10, scope: !6167)
!6170 = !DILocation(line: 3199, column: 3, scope: !6167)
!6171 = !DILocation(line: 3201, column: 6, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3201, column: 6)
!6173 = !DILocation(line: 3201, column: 12, scope: !6172)
!6174 = !DILocation(line: 3201, column: 18, scope: !6172)
!6175 = !DILocation(line: 3201, column: 6, scope: !4100)
!6176 = !DILocation(line: 3202, column: 3, scope: !6172)
!6177 = !DILocation(line: 3202, column: 8, scope: !6172)
!6178 = !DILocation(line: 3202, column: 14, scope: !6172)
!6179 = !DILocation(line: 3204, column: 31, scope: !4100)
!6180 = !DILocation(line: 3204, column: 8, scope: !4100)
!6181 = !DILocation(line: 3204, column: 6, scope: !4100)
!6182 = !DILocation(line: 3205, column: 6, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3205, column: 6)
!6184 = !DILocation(line: 3205, column: 6, scope: !4100)
!6185 = !DILocation(line: 3206, column: 10, scope: !6183)
!6186 = !DILocation(line: 3206, column: 3, scope: !6183)
!6187 = !DILocation(line: 3209, column: 21, scope: !4100)
!6188 = !DILocation(line: 3209, column: 8, scope: !4100)
!6189 = !DILocation(line: 3209, column: 6, scope: !4100)
!6190 = !DILocation(line: 3210, column: 6, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3210, column: 6)
!6192 = !DILocation(line: 3210, column: 6, scope: !4100)
!6193 = !DILocation(line: 3211, column: 10, scope: !6191)
!6194 = !DILocation(line: 3211, column: 3, scope: !6191)
!6195 = !DILocation(line: 3213, column: 2, scope: !4100)
!6196 = !DILocation(line: 3222, column: 6, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 3222, column: 6)
!6198 = !DILocation(line: 3222, column: 11, scope: !6197)
!6199 = !DILocation(line: 3222, column: 6, scope: !4100)
!6200 = !DILocation(line: 3223, column: 10, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 3223, column: 3)
!6202 = !DILocation(line: 3223, column: 8, scope: !6201)
!6203 = !DILocation(line: 3223, column: 15, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 3223, column: 3)
!6205 = !DILocation(line: 3223, column: 19, scope: !6204)
!6206 = !DILocation(line: 3223, column: 24, scope: !6204)
!6207 = !DILocation(line: 3223, column: 17, scope: !6204)
!6208 = !DILocation(line: 3223, column: 3, scope: !6201)
!6209 = !DILocation(line: 3224, column: 4, scope: !6204)
!6210 = !DILocation(line: 3223, column: 42, scope: !6204)
!6211 = !DILocation(line: 3223, column: 3, scope: !6204)
!6212 = distinct !{!6212, !6208, !6213}
!6213 = !DILocation(line: 3224, column: 4, scope: !6201)
!6214 = !DILocation(line: 3232, column: 2, scope: !4100)
!6215 = !DILocation(line: 3233, column: 1, scope: !4100)
!6216 = distinct !DISubprogram(name: "spi_nor_get_flash_node", scope: !108, file: !108, line: 398, type: !6217, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!2426, !4103}
!6219 = !DILocalVariable(name: "nor", arg: 1, scope: !6216, file: !108, line: 398, type: !4103)
!6220 = !DILocation(line: 398, column: 74, scope: !6216)
!6221 = !DILocation(line: 400, column: 26, scope: !6216)
!6222 = !DILocation(line: 400, column: 31, scope: !6216)
!6223 = !DILocation(line: 400, column: 9, scope: !6216)
!6224 = !DILocation(line: 400, column: 2, scope: !6216)
!6225 = distinct !DISubprogram(name: "spi_nor_check", scope: !3, file: !3, line: 2186, type: !4533, scopeLine: 2187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6226 = !DILocalVariable(name: "nor", arg: 1, scope: !6225, file: !3, line: 2186, type: !4103)
!6227 = !DILocation(line: 2186, column: 42, scope: !6225)
!6228 = !DILocation(line: 2188, column: 7, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 2188, column: 6)
!6230 = !DILocation(line: 2188, column: 12, scope: !6229)
!6231 = !DILocation(line: 2188, column: 16, scope: !6229)
!6232 = !DILocation(line: 2189, column: 8, scope: !6229)
!6233 = !DILocation(line: 2189, column: 13, scope: !6229)
!6234 = !DILocation(line: 2189, column: 20, scope: !6229)
!6235 = !DILocation(line: 2189, column: 24, scope: !6229)
!6236 = !DILocation(line: 2189, column: 29, scope: !6229)
!6237 = !DILocation(line: 2189, column: 45, scope: !6229)
!6238 = !DILocation(line: 2190, column: 8, scope: !6229)
!6239 = !DILocation(line: 2190, column: 13, scope: !6229)
!6240 = !DILocation(line: 2190, column: 20, scope: !6229)
!6241 = !DILocation(line: 2190, column: 23, scope: !6229)
!6242 = !DILocation(line: 2190, column: 28, scope: !6229)
!6243 = !DILocation(line: 2190, column: 43, scope: !6229)
!6244 = !DILocation(line: 2191, column: 8, scope: !6229)
!6245 = !DILocation(line: 2191, column: 13, scope: !6229)
!6246 = !DILocation(line: 2191, column: 29, scope: !6229)
!6247 = !DILocation(line: 2191, column: 34, scope: !6229)
!6248 = !DILocation(line: 2192, column: 8, scope: !6229)
!6249 = !DILocation(line: 2192, column: 13, scope: !6229)
!6250 = !DILocation(line: 2192, column: 29, scope: !6229)
!6251 = !DILocation(line: 2192, column: 35, scope: !6229)
!6252 = !DILocation(line: 2193, column: 8, scope: !6229)
!6253 = !DILocation(line: 2193, column: 13, scope: !6229)
!6254 = !DILocation(line: 2193, column: 29, scope: !6229)
!6255 = !DILocation(line: 2193, column: 38, scope: !6229)
!6256 = !DILocation(line: 2194, column: 8, scope: !6229)
!6257 = !DILocation(line: 2194, column: 13, scope: !6229)
!6258 = !DILocation(line: 2194, column: 29, scope: !6229)
!6259 = !DILocation(line: 2188, column: 6, scope: !6225)
!6260 = !DILocation(line: 2195, column: 3, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 2194, column: 42)
!6262 = !DILocation(line: 2196, column: 3, scope: !6261)
!6263 = !DILocation(line: 2199, column: 6, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 2199, column: 6)
!6265 = !DILocation(line: 2199, column: 11, scope: !6264)
!6266 = !DILocation(line: 2199, column: 18, scope: !6264)
!6267 = !DILocation(line: 2199, column: 21, scope: !6264)
!6268 = !DILocation(line: 2199, column: 26, scope: !6264)
!6269 = !DILocation(line: 2199, column: 6, scope: !6225)
!6270 = !DILocation(line: 2200, column: 3, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 2199, column: 42)
!6272 = !DILocation(line: 2201, column: 3, scope: !6271)
!6273 = !DILocation(line: 2204, column: 2, scope: !6225)
!6274 = !DILocation(line: 2205, column: 1, scope: !6225)
!6275 = distinct !DISubprogram(name: "spi_nor_get_flash_info", scope: !3, file: !3, line: 3044, type: !6276, scopeLine: 3046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6276 = !DISubroutineType(types: !6277)
!6277 = !{!4442, !4103, !610}
!6278 = !DILocalVariable(name: "nor", arg: 1, scope: !6275, file: !3, line: 3044, type: !4103)
!6279 = !DILocation(line: 3044, column: 72, scope: !6275)
!6280 = !DILocalVariable(name: "name", arg: 2, scope: !6275, file: !3, line: 3045, type: !610)
!6281 = !DILocation(line: 3045, column: 26, scope: !6275)
!6282 = !DILocalVariable(name: "info", scope: !6275, file: !3, line: 3047, type: !4442)
!6283 = !DILocation(line: 3047, column: 27, scope: !6275)
!6284 = !DILocation(line: 3049, column: 6, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 3049, column: 6)
!6286 = !DILocation(line: 3049, column: 6, scope: !6275)
!6287 = !DILocation(line: 3050, column: 27, scope: !6285)
!6288 = !DILocation(line: 3050, column: 32, scope: !6285)
!6289 = !DILocation(line: 3050, column: 10, scope: !6285)
!6290 = !DILocation(line: 3050, column: 8, scope: !6285)
!6291 = !DILocation(line: 3050, column: 3, scope: !6285)
!6292 = !DILocation(line: 3052, column: 7, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 3052, column: 6)
!6294 = !DILocation(line: 3052, column: 6, scope: !6275)
!6295 = !DILocation(line: 3053, column: 26, scope: !6293)
!6296 = !DILocation(line: 3053, column: 10, scope: !6293)
!6297 = !DILocation(line: 3053, column: 8, scope: !6293)
!6298 = !DILocation(line: 3053, column: 3, scope: !6293)
!6299 = !DILocation(line: 3054, column: 21, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 3054, column: 6)
!6301 = !DILocation(line: 3054, column: 6, scope: !6300)
!6302 = !DILocation(line: 3054, column: 6, scope: !6275)
!6303 = !DILocation(line: 3055, column: 10, scope: !6300)
!6304 = !DILocation(line: 3055, column: 3, scope: !6300)
!6305 = !DILocation(line: 3061, column: 6, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 3061, column: 6)
!6307 = !DILocation(line: 3061, column: 11, scope: !6306)
!6308 = !DILocation(line: 3061, column: 14, scope: !6306)
!6309 = !DILocation(line: 3061, column: 20, scope: !6306)
!6310 = !DILocation(line: 3061, column: 6, scope: !6275)
!6311 = !DILocalVariable(name: "jinfo", scope: !6312, file: !3, line: 3062, type: !4442)
!6312 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 3061, column: 28)
!6313 = !DILocation(line: 3062, column: 28, scope: !6312)
!6314 = !DILocation(line: 3064, column: 27, scope: !6312)
!6315 = !DILocation(line: 3064, column: 11, scope: !6312)
!6316 = !DILocation(line: 3064, column: 9, scope: !6312)
!6317 = !DILocation(line: 3065, column: 14, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 3065, column: 7)
!6319 = !DILocation(line: 3065, column: 7, scope: !6318)
!6320 = !DILocation(line: 3065, column: 7, scope: !6312)
!6321 = !DILocation(line: 3066, column: 11, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 3065, column: 22)
!6323 = !DILocation(line: 3066, column: 4, scope: !6322)
!6324 = !DILocation(line: 3067, column: 14, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 3067, column: 14)
!6326 = !DILocation(line: 3067, column: 23, scope: !6325)
!6327 = !DILocation(line: 3067, column: 20, scope: !6325)
!6328 = !DILocation(line: 3067, column: 14, scope: !6318)
!6329 = !DILocation(line: 3075, column: 4, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 3067, column: 29)
!6331 = !DILocation(line: 3077, column: 11, scope: !6330)
!6332 = !DILocation(line: 3077, column: 9, scope: !6330)
!6333 = !DILocation(line: 3078, column: 3, scope: !6330)
!6334 = !DILocation(line: 3079, column: 2, scope: !6312)
!6335 = !DILocation(line: 3081, column: 9, scope: !6275)
!6336 = !DILocation(line: 3081, column: 2, scope: !6275)
!6337 = !DILocation(line: 3082, column: 1, scope: !6275)
!6338 = distinct !DISubprogram(name: "IS_ERR", scope: !6339, file: !6339, line: 34, type: !6340, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6339 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!6340 = !DISubroutineType(types: !6341)
!6341 = !{!655, !1921}
!6342 = !DILocalVariable(name: "ptr", arg: 1, scope: !6338, file: !6339, line: 34, type: !1921)
!6343 = !DILocation(line: 34, column: 60, scope: !6338)
!6344 = !DILocation(line: 36, column: 9, scope: !6338)
!6345 = !DILocation(line: 36, column: 2, scope: !6338)
!6346 = distinct !DISubprogram(name: "PTR_ERR", scope: !6339, file: !6339, line: 29, type: !6347, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6347 = !DISubroutineType(types: !6348)
!6348 = !{!202, !1921}
!6349 = !DILocalVariable(name: "ptr", arg: 1, scope: !6346, file: !6339, line: 29, type: !1921)
!6350 = !DILocation(line: 29, column: 61, scope: !6346)
!6351 = !DILocation(line: 31, column: 16, scope: !6346)
!6352 = !DILocation(line: 31, column: 9, scope: !6346)
!6353 = !DILocation(line: 31, column: 2, scope: !6346)
!6354 = distinct !DISubprogram(name: "spi_nor_debugfs_init", scope: !3, file: !3, line: 3034, type: !6355, scopeLine: 3036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{null, !4103, !4442}
!6357 = !DILocalVariable(name: "nor", arg: 1, scope: !6354, file: !3, line: 3034, type: !4103)
!6358 = !DILocation(line: 3034, column: 50, scope: !6354)
!6359 = !DILocalVariable(name: "info", arg: 2, scope: !6354, file: !3, line: 3035, type: !4442)
!6360 = !DILocation(line: 3035, column: 31, scope: !6354)
!6361 = !DILocalVariable(name: "mtd", scope: !6354, file: !3, line: 3037, type: !1024)
!6362 = !DILocation(line: 3037, column: 19, scope: !6354)
!6363 = !DILocation(line: 3037, column: 26, scope: !6354)
!6364 = !DILocation(line: 3037, column: 31, scope: !6354)
!6365 = !DILocation(line: 3039, column: 22, scope: !6354)
!6366 = !DILocation(line: 3039, column: 28, scope: !6354)
!6367 = !DILocation(line: 3039, column: 2, scope: !6354)
!6368 = !DILocation(line: 3039, column: 7, scope: !6354)
!6369 = !DILocation(line: 3039, column: 11, scope: !6354)
!6370 = !DILocation(line: 3039, column: 20, scope: !6354)
!6371 = !DILocation(line: 3040, column: 35, scope: !6354)
!6372 = !DILocation(line: 3040, column: 40, scope: !6354)
!6373 = !DILocation(line: 3041, column: 7, scope: !6354)
!6374 = !DILocation(line: 3041, column: 13, scope: !6354)
!6375 = !DILocation(line: 3041, column: 21, scope: !6354)
!6376 = !DILocation(line: 3041, column: 27, scope: !6354)
!6377 = !DILocation(line: 3040, column: 20, scope: !6354)
!6378 = !DILocation(line: 3040, column: 2, scope: !6354)
!6379 = !DILocation(line: 3040, column: 7, scope: !6354)
!6380 = !DILocation(line: 3040, column: 11, scope: !6354)
!6381 = !DILocation(line: 3040, column: 18, scope: !6354)
!6382 = !DILocation(line: 3042, column: 1, scope: !6354)
!6383 = distinct !DISubprogram(name: "spi_nor_write", scope: !3, file: !3, line: 2127, type: !1127, scopeLine: 2129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6384 = !DILocalVariable(name: "w", arg: 1, scope: !6385, file: !6386, line: 15, type: !15)
!6385 = distinct !DISubprogram(name: "__arch_hweight32", scope: !6386, file: !6386, line: 15, type: !6387, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6386 = !DIFile(filename: "./arch/x86/include/asm/arch_hweight.h", directory: "/home/lizy2001/genbc/linux")
!6387 = !DISubroutineType(types: !6388)
!6388 = !{!15, !15}
!6389 = !DILocation(line: 15, column: 67, scope: !6385, inlinedAt: !6390)
!6390 = distinct !DILocation(line: 2152, column: 7, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2152, column: 7)
!6392 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 2140, column: 25)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 2140, column: 2)
!6394 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 2140, column: 2)
!6395 = !DILocalVariable(name: "res", scope: !6385, file: !6386, line: 17, type: !15)
!6396 = !DILocation(line: 17, column: 15, scope: !6385, inlinedAt: !6390)
!6397 = !DILocalVariable(name: "mtd", arg: 1, scope: !6383, file: !3, line: 2127, type: !1024)
!6398 = !DILocation(line: 2127, column: 43, scope: !6383)
!6399 = !DILocalVariable(name: "to", arg: 2, scope: !6383, file: !3, line: 2127, type: !674)
!6400 = !DILocation(line: 2127, column: 55, scope: !6383)
!6401 = !DILocalVariable(name: "len", arg: 3, scope: !6383, file: !3, line: 2127, type: !1108)
!6402 = !DILocation(line: 2127, column: 66, scope: !6383)
!6403 = !DILocalVariable(name: "retlen", arg: 4, scope: !6383, file: !3, line: 2128, type: !1111)
!6404 = !DILocation(line: 2128, column: 10, scope: !6383)
!6405 = !DILocalVariable(name: "buf", arg: 5, scope: !6383, file: !3, line: 2128, type: !1129)
!6406 = !DILocation(line: 2128, column: 32, scope: !6383)
!6407 = !DILocalVariable(name: "nor", scope: !6383, file: !3, line: 2130, type: !4103)
!6408 = !DILocation(line: 2130, column: 18, scope: !6383)
!6409 = !DILocation(line: 2130, column: 39, scope: !6383)
!6410 = !DILocation(line: 2130, column: 24, scope: !6383)
!6411 = !DILocalVariable(name: "page_offset", scope: !6383, file: !3, line: 2131, type: !1108)
!6412 = !DILocation(line: 2131, column: 9, scope: !6383)
!6413 = !DILocalVariable(name: "page_remain", scope: !6383, file: !3, line: 2131, type: !1108)
!6414 = !DILocation(line: 2131, column: 22, scope: !6383)
!6415 = !DILocalVariable(name: "i", scope: !6383, file: !3, line: 2131, type: !1108)
!6416 = !DILocation(line: 2131, column: 35, scope: !6383)
!6417 = !DILocalVariable(name: "ret", scope: !6383, file: !3, line: 2132, type: !1296)
!6418 = !DILocation(line: 2132, column: 10, scope: !6383)
!6419 = !DILocation(line: 2136, column: 30, scope: !6383)
!6420 = !DILocation(line: 2136, column: 8, scope: !6383)
!6421 = !DILocation(line: 2136, column: 6, scope: !6383)
!6422 = !DILocation(line: 2137, column: 6, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 2137, column: 6)
!6424 = !DILocation(line: 2137, column: 6, scope: !6383)
!6425 = !DILocation(line: 2138, column: 10, scope: !6423)
!6426 = !DILocation(line: 2138, column: 3, scope: !6423)
!6427 = !DILocation(line: 2140, column: 9, scope: !6394)
!6428 = !DILocation(line: 2140, column: 7, scope: !6394)
!6429 = !DILocation(line: 2140, column: 14, scope: !6393)
!6430 = !DILocation(line: 2140, column: 18, scope: !6393)
!6431 = !DILocation(line: 2140, column: 16, scope: !6393)
!6432 = !DILocation(line: 2140, column: 2, scope: !6394)
!6433 = !DILocalVariable(name: "written", scope: !6392, file: !3, line: 2141, type: !1296)
!6434 = !DILocation(line: 2141, column: 11, scope: !6392)
!6435 = !DILocalVariable(name: "addr", scope: !6392, file: !3, line: 2142, type: !674)
!6436 = !DILocation(line: 2142, column: 10, scope: !6392)
!6437 = !DILocation(line: 2142, column: 17, scope: !6392)
!6438 = !DILocation(line: 2142, column: 22, scope: !6392)
!6439 = !DILocation(line: 2142, column: 20, scope: !6392)
!6440 = !DILocation(line: 2152, column: 7, scope: !6391)
!6441 = !DILocation(line: 21, column: 15, scope: !6385, inlinedAt: !6390)
!6442 = !DILocation(line: 19, column: 2, scope: !6385, inlinedAt: !6390)
!6443 = !{i32 -2147002266, i32 -2147002238, i32 -2147002232, i32 -2147002216, i32 -2147002200, i32 -2147002173, i32 -2147001840, i32 -2147002558, i32 -2147001834, i32 -2147001786, i32 -2147001722, i32 -2147001660, i32 -2147001603, i32 -2147001547, i32 -2147002478, i32 -2147002453, i32 -2147001313, i32 -2147001183, i32 -2147001252, i32 -2147001169, i32 -2147002353}
!6444 = !DILocation(line: 23, column: 9, scope: !6385, inlinedAt: !6390)
!6445 = !DILocation(line: 2152, column: 33, scope: !6391)
!6446 = !DILocation(line: 2152, column: 7, scope: !6392)
!6447 = !DILocation(line: 2153, column: 18, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2152, column: 39)
!6449 = !DILocation(line: 2153, column: 26, scope: !6448)
!6450 = !DILocation(line: 2153, column: 31, scope: !6448)
!6451 = !DILocation(line: 2153, column: 41, scope: !6448)
!6452 = !DILocation(line: 2153, column: 25, scope: !6448)
!6453 = !DILocation(line: 2153, column: 23, scope: !6448)
!6454 = !DILocation(line: 2153, column: 16, scope: !6448)
!6455 = !DILocation(line: 2154, column: 3, scope: !6448)
!6456 = !DILocalVariable(name: "aux", scope: !6457, file: !3, line: 2155, type: !1033)
!6457 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2154, column: 10)
!6458 = !DILocation(line: 2155, column: 13, scope: !6457)
!6459 = !DILocation(line: 2155, column: 19, scope: !6457)
!6460 = !DILocalVariable(name: "__base", scope: !6461, file: !3, line: 2157, type: !1031)
!6461 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 2157, column: 18)
!6462 = !DILocation(line: 2157, column: 18, scope: !6461)
!6463 = !DILocalVariable(name: "__rem", scope: !6461, file: !3, line: 2157, type: !1031)
!6464 = !DILocation(line: 2157, column: 18, scope: !6457)
!6465 = !DILocation(line: 2157, column: 16, scope: !6457)
!6466 = !DILocalVariable(name: "__UNIQUE_ID___x247", scope: !6467, file: !3, line: 2160, type: !1108)
!6467 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2160, column: 17)
!6468 = !DILocation(line: 2160, column: 17, scope: !6467)
!6469 = !DILocalVariable(name: "__UNIQUE_ID___y248", scope: !6467, file: !3, line: 2160, type: !1108)
!6470 = !DILocation(line: 2160, column: 15, scope: !6392)
!6471 = !DILocation(line: 2163, column: 31, scope: !6392)
!6472 = !DILocation(line: 2163, column: 36, scope: !6392)
!6473 = !DILocation(line: 2163, column: 10, scope: !6392)
!6474 = !DILocation(line: 2163, column: 8, scope: !6392)
!6475 = !DILocation(line: 2165, column: 30, scope: !6392)
!6476 = !DILocation(line: 2165, column: 9, scope: !6392)
!6477 = !DILocation(line: 2165, column: 7, scope: !6392)
!6478 = !DILocation(line: 2166, column: 7, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2166, column: 7)
!6480 = !DILocation(line: 2166, column: 7, scope: !6392)
!6481 = !DILocation(line: 2167, column: 4, scope: !6479)
!6482 = !DILocation(line: 2169, column: 28, scope: !6392)
!6483 = !DILocation(line: 2169, column: 33, scope: !6392)
!6484 = !DILocation(line: 2169, column: 39, scope: !6392)
!6485 = !DILocation(line: 2169, column: 52, scope: !6392)
!6486 = !DILocation(line: 2169, column: 58, scope: !6392)
!6487 = !DILocation(line: 2169, column: 56, scope: !6392)
!6488 = !DILocation(line: 2169, column: 9, scope: !6392)
!6489 = !DILocation(line: 2169, column: 7, scope: !6392)
!6490 = !DILocation(line: 2170, column: 7, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2170, column: 7)
!6492 = !DILocation(line: 2170, column: 11, scope: !6491)
!6493 = !DILocation(line: 2170, column: 7, scope: !6392)
!6494 = !DILocation(line: 2171, column: 4, scope: !6491)
!6495 = !DILocation(line: 2172, column: 13, scope: !6392)
!6496 = !DILocation(line: 2172, column: 11, scope: !6392)
!6497 = !DILocation(line: 2174, column: 33, scope: !6392)
!6498 = !DILocation(line: 2174, column: 9, scope: !6392)
!6499 = !DILocation(line: 2174, column: 7, scope: !6392)
!6500 = !DILocation(line: 2175, column: 7, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2175, column: 7)
!6502 = !DILocation(line: 2175, column: 7, scope: !6392)
!6503 = !DILocation(line: 2176, column: 4, scope: !6501)
!6504 = !DILocation(line: 2177, column: 14, scope: !6392)
!6505 = !DILocation(line: 2177, column: 4, scope: !6392)
!6506 = !DILocation(line: 2177, column: 11, scope: !6392)
!6507 = !DILocation(line: 2178, column: 8, scope: !6392)
!6508 = !DILocation(line: 2178, column: 5, scope: !6392)
!6509 = !DILocation(line: 2140, column: 2, scope: !6393)
!6510 = distinct !{!6510, !6432, !6511}
!6511 = !DILocation(line: 2179, column: 2, scope: !6394)
!6512 = !DILabel(scope: !6383, name: "write_err", file: !3, line: 2181)
!6513 = !DILocation(line: 2181, column: 1, scope: !6383)
!6514 = !DILocation(line: 2182, column: 28, scope: !6383)
!6515 = !DILocation(line: 2182, column: 2, scope: !6383)
!6516 = !DILocation(line: 2183, column: 9, scope: !6383)
!6517 = !DILocation(line: 2183, column: 2, scope: !6383)
!6518 = !DILocation(line: 2184, column: 1, scope: !6383)
!6519 = distinct !DISubprogram(name: "spi_nor_init_params", scope: !3, file: !3, line: 2878, type: !4533, scopeLine: 2879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6520 = !DILocalVariable(name: "nor", arg: 1, scope: !6519, file: !3, line: 2878, type: !4103)
!6521 = !DILocation(line: 2878, column: 48, scope: !6519)
!6522 = !DILocation(line: 2880, column: 29, scope: !6519)
!6523 = !DILocation(line: 2880, column: 34, scope: !6519)
!6524 = !DILocation(line: 2880, column: 16, scope: !6519)
!6525 = !DILocation(line: 2880, column: 2, scope: !6519)
!6526 = !DILocation(line: 2880, column: 7, scope: !6519)
!6527 = !DILocation(line: 2880, column: 14, scope: !6519)
!6528 = !DILocation(line: 2881, column: 7, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 2881, column: 6)
!6530 = !DILocation(line: 2881, column: 12, scope: !6529)
!6531 = !DILocation(line: 2881, column: 6, scope: !6519)
!6532 = !DILocation(line: 2882, column: 3, scope: !6529)
!6533 = !DILocation(line: 2884, column: 27, scope: !6519)
!6534 = !DILocation(line: 2884, column: 2, scope: !6519)
!6535 = !DILocation(line: 2886, column: 35, scope: !6519)
!6536 = !DILocation(line: 2886, column: 2, scope: !6519)
!6537 = !DILocation(line: 2888, column: 7, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 2888, column: 6)
!6539 = !DILocation(line: 2888, column: 12, scope: !6538)
!6540 = !DILocation(line: 2888, column: 18, scope: !6538)
!6541 = !DILocation(line: 2888, column: 24, scope: !6538)
!6542 = !DILocation(line: 2888, column: 67, scope: !6538)
!6543 = !DILocation(line: 2889, column: 8, scope: !6538)
!6544 = !DILocation(line: 2889, column: 13, scope: !6538)
!6545 = !DILocation(line: 2889, column: 19, scope: !6538)
!6546 = !DILocation(line: 2889, column: 25, scope: !6538)
!6547 = !DILocation(line: 2888, column: 6, scope: !6519)
!6548 = !DILocation(line: 2890, column: 28, scope: !6538)
!6549 = !DILocation(line: 2890, column: 3, scope: !6538)
!6550 = !DILocation(line: 2892, column: 27, scope: !6519)
!6551 = !DILocation(line: 2892, column: 2, scope: !6519)
!6552 = !DILocation(line: 2894, column: 27, scope: !6519)
!6553 = !DILocation(line: 2894, column: 2, scope: !6519)
!6554 = !DILocation(line: 2896, column: 2, scope: !6519)
!6555 = !DILocation(line: 2897, column: 1, scope: !6519)
!6556 = distinct !DISubprogram(name: "dev_name", scope: !81, file: !81, line: 609, type: !6557, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6557 = !DISubroutineType(types: !6558)
!6558 = !{!610, !2463}
!6559 = !DILocalVariable(name: "dev", arg: 1, scope: !6556, file: !81, line: 609, type: !2463)
!6560 = !DILocation(line: 609, column: 57, scope: !6556)
!6561 = !DILocation(line: 612, column: 6, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6556, file: !81, line: 612, column: 6)
!6563 = !DILocation(line: 612, column: 11, scope: !6562)
!6564 = !DILocation(line: 612, column: 6, scope: !6556)
!6565 = !DILocation(line: 613, column: 10, scope: !6562)
!6566 = !DILocation(line: 613, column: 15, scope: !6562)
!6567 = !DILocation(line: 613, column: 3, scope: !6562)
!6568 = !DILocation(line: 615, column: 23, scope: !6556)
!6569 = !DILocation(line: 615, column: 28, scope: !6556)
!6570 = !DILocation(line: 615, column: 9, scope: !6556)
!6571 = !DILocation(line: 615, column: 2, scope: !6556)
!6572 = !DILocation(line: 616, column: 1, scope: !6556)
!6573 = distinct !DISubprogram(name: "spi_nor_erase", scope: !3, file: !3, line: 1452, type: !1096, scopeLine: 1453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6574 = !DILocalVariable(name: "mtd", arg: 1, scope: !6573, file: !3, line: 1452, type: !1024)
!6575 = !DILocation(line: 1452, column: 43, scope: !6573)
!6576 = !DILocalVariable(name: "instr", arg: 2, scope: !6573, file: !3, line: 1452, type: !1098)
!6577 = !DILocation(line: 1452, column: 67, scope: !6573)
!6578 = !DILocalVariable(name: "nor", scope: !6573, file: !3, line: 1454, type: !4103)
!6579 = !DILocation(line: 1454, column: 18, scope: !6573)
!6580 = !DILocation(line: 1454, column: 39, scope: !6573)
!6581 = !DILocation(line: 1454, column: 24, scope: !6573)
!6582 = !DILocalVariable(name: "addr", scope: !6573, file: !3, line: 1455, type: !198)
!6583 = !DILocation(line: 1455, column: 6, scope: !6573)
!6584 = !DILocalVariable(name: "len", scope: !6573, file: !3, line: 1455, type: !198)
!6585 = !DILocation(line: 1455, column: 12, scope: !6573)
!6586 = !DILocalVariable(name: "rem", scope: !6573, file: !3, line: 1456, type: !1031)
!6587 = !DILocation(line: 1456, column: 11, scope: !6573)
!6588 = !DILocalVariable(name: "ret", scope: !6573, file: !3, line: 1457, type: !182)
!6589 = !DILocation(line: 1457, column: 6, scope: !6573)
!6590 = !DILocation(line: 1462, column: 32, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 1462, column: 6)
!6592 = !DILocation(line: 1462, column: 6, scope: !6591)
!6593 = !DILocation(line: 1462, column: 6, scope: !6573)
!6594 = !DILocation(line: 1463, column: 15, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 1462, column: 38)
!6596 = !DILocation(line: 1463, column: 22, scope: !6595)
!6597 = !DILocation(line: 1463, column: 27, scope: !6595)
!6598 = !DILocation(line: 1463, column: 32, scope: !6595)
!6599 = !DILocation(line: 1463, column: 3, scope: !6595)
!6600 = !DILocation(line: 1464, column: 7, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 1464, column: 7)
!6602 = !DILocation(line: 1464, column: 7, scope: !6595)
!6603 = !DILocation(line: 1465, column: 4, scope: !6601)
!6604 = !DILocation(line: 1466, column: 2, scope: !6595)
!6605 = !DILocation(line: 1468, column: 9, scope: !6573)
!6606 = !DILocation(line: 1468, column: 16, scope: !6573)
!6607 = !DILocation(line: 1468, column: 7, scope: !6573)
!6608 = !DILocation(line: 1469, column: 8, scope: !6573)
!6609 = !DILocation(line: 1469, column: 15, scope: !6573)
!6610 = !DILocation(line: 1469, column: 6, scope: !6573)
!6611 = !DILocation(line: 1471, column: 30, scope: !6573)
!6612 = !DILocation(line: 1471, column: 8, scope: !6573)
!6613 = !DILocation(line: 1471, column: 6, scope: !6573)
!6614 = !DILocation(line: 1472, column: 6, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 1472, column: 6)
!6616 = !DILocation(line: 1472, column: 6, scope: !6573)
!6617 = !DILocation(line: 1473, column: 10, scope: !6615)
!6618 = !DILocation(line: 1473, column: 3, scope: !6615)
!6619 = !DILocation(line: 1476, column: 6, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 1476, column: 6)
!6621 = !DILocation(line: 1476, column: 13, scope: !6620)
!6622 = !DILocation(line: 1476, column: 18, scope: !6620)
!6623 = !DILocation(line: 1476, column: 10, scope: !6620)
!6624 = !DILocation(line: 1476, column: 23, scope: !6620)
!6625 = !DILocation(line: 1476, column: 28, scope: !6620)
!6626 = !DILocation(line: 1476, column: 33, scope: !6620)
!6627 = !DILocation(line: 1476, column: 39, scope: !6620)
!6628 = !DILocation(line: 1476, column: 6, scope: !6573)
!6629 = !DILocalVariable(name: "timeout", scope: !6630, file: !3, line: 1477, type: !186)
!6630 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 1476, column: 67)
!6631 = !DILocation(line: 1477, column: 17, scope: !6630)
!6632 = !DILocation(line: 1479, column: 30, scope: !6630)
!6633 = !DILocation(line: 1479, column: 9, scope: !6630)
!6634 = !DILocation(line: 1479, column: 7, scope: !6630)
!6635 = !DILocation(line: 1480, column: 7, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 1480, column: 7)
!6637 = !DILocation(line: 1480, column: 7, scope: !6630)
!6638 = !DILocation(line: 1481, column: 4, scope: !6636)
!6639 = !DILocation(line: 1483, column: 28, scope: !6630)
!6640 = !DILocation(line: 1483, column: 9, scope: !6630)
!6641 = !DILocation(line: 1483, column: 7, scope: !6630)
!6642 = !DILocation(line: 1484, column: 7, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 1484, column: 7)
!6644 = !DILocation(line: 1484, column: 7, scope: !6630)
!6645 = !DILocation(line: 1485, column: 4, scope: !6643)
!6646 = !DILocalVariable(name: "__UNIQUE_ID___x244", scope: !6647, file: !3, line: 1493, type: !186)
!6647 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 1493, column: 13)
!6648 = !DILocation(line: 1493, column: 13, scope: !6647)
!6649 = !DILocalVariable(name: "__UNIQUE_ID___y245", scope: !6647, file: !3, line: 1493, type: !186)
!6650 = !DILocation(line: 1493, column: 11, scope: !6630)
!6651 = !DILocation(line: 1496, column: 46, scope: !6630)
!6652 = !DILocation(line: 1496, column: 51, scope: !6630)
!6653 = !DILocation(line: 1496, column: 9, scope: !6630)
!6654 = !DILocation(line: 1496, column: 7, scope: !6630)
!6655 = !DILocation(line: 1497, column: 7, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 1497, column: 7)
!6657 = !DILocation(line: 1497, column: 7, scope: !6630)
!6658 = !DILocation(line: 1498, column: 4, scope: !6656)
!6659 = !DILocation(line: 1506, column: 2, scope: !6630)
!6660 = !DILocation(line: 1506, column: 39, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 1506, column: 13)
!6662 = !DILocation(line: 1506, column: 13, scope: !6661)
!6663 = !DILocation(line: 1506, column: 13, scope: !6620)
!6664 = !DILocation(line: 1507, column: 3, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 1506, column: 45)
!6666 = !DILocation(line: 1507, column: 10, scope: !6665)
!6667 = !DILocation(line: 1508, column: 31, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 1507, column: 15)
!6669 = !DILocation(line: 1508, column: 10, scope: !6668)
!6670 = !DILocation(line: 1508, column: 8, scope: !6668)
!6671 = !DILocation(line: 1509, column: 8, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1509, column: 8)
!6673 = !DILocation(line: 1509, column: 8, scope: !6668)
!6674 = !DILocation(line: 1510, column: 5, scope: !6672)
!6675 = !DILocation(line: 1512, column: 31, scope: !6668)
!6676 = !DILocation(line: 1512, column: 36, scope: !6668)
!6677 = !DILocation(line: 1512, column: 10, scope: !6668)
!6678 = !DILocation(line: 1512, column: 8, scope: !6668)
!6679 = !DILocation(line: 1513, column: 8, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1513, column: 8)
!6681 = !DILocation(line: 1513, column: 8, scope: !6668)
!6682 = !DILocation(line: 1514, column: 5, scope: !6680)
!6683 = !DILocation(line: 1516, column: 12, scope: !6668)
!6684 = !DILocation(line: 1516, column: 17, scope: !6668)
!6685 = !DILocation(line: 1516, column: 9, scope: !6668)
!6686 = !DILocation(line: 1517, column: 11, scope: !6668)
!6687 = !DILocation(line: 1517, column: 16, scope: !6668)
!6688 = !DILocation(line: 1517, column: 8, scope: !6668)
!6689 = !DILocation(line: 1519, column: 34, scope: !6668)
!6690 = !DILocation(line: 1519, column: 10, scope: !6668)
!6691 = !DILocation(line: 1519, column: 8, scope: !6668)
!6692 = !DILocation(line: 1520, column: 8, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1520, column: 8)
!6694 = !DILocation(line: 1520, column: 8, scope: !6668)
!6695 = !DILocation(line: 1521, column: 5, scope: !6693)
!6696 = distinct !{!6696, !6664, !6697}
!6697 = !DILocation(line: 1522, column: 3, scope: !6665)
!6698 = !DILocation(line: 1525, column: 2, scope: !6665)
!6699 = !DILocation(line: 1526, column: 37, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 1525, column: 9)
!6701 = !DILocation(line: 1526, column: 42, scope: !6700)
!6702 = !DILocation(line: 1526, column: 48, scope: !6700)
!6703 = !DILocation(line: 1526, column: 9, scope: !6700)
!6704 = !DILocation(line: 1526, column: 7, scope: !6700)
!6705 = !DILocation(line: 1527, column: 7, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 1527, column: 7)
!6707 = !DILocation(line: 1527, column: 7, scope: !6700)
!6708 = !DILocation(line: 1528, column: 4, scope: !6706)
!6709 = !DILocation(line: 1531, column: 30, scope: !6573)
!6710 = !DILocation(line: 1531, column: 8, scope: !6573)
!6711 = !DILocation(line: 1531, column: 6, scope: !6573)
!6712 = !DILocation(line: 1531, column: 2, scope: !6573)
!6713 = !DILabel(scope: !6573, name: "erase_err", file: !3, line: 1533)
!6714 = !DILocation(line: 1533, column: 1, scope: !6573)
!6715 = !DILocation(line: 1534, column: 28, scope: !6573)
!6716 = !DILocation(line: 1534, column: 2, scope: !6573)
!6717 = !DILocation(line: 1536, column: 9, scope: !6573)
!6718 = !DILocation(line: 1536, column: 2, scope: !6573)
!6719 = !DILocation(line: 1537, column: 1, scope: !6573)
!6720 = distinct !DISubprogram(name: "spi_nor_read", scope: !3, file: !3, line: 2083, type: !1122, scopeLine: 2085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6721 = !DILocalVariable(name: "mtd", arg: 1, scope: !6720, file: !3, line: 2083, type: !1024)
!6722 = !DILocation(line: 2083, column: 42, scope: !6720)
!6723 = !DILocalVariable(name: "from", arg: 2, scope: !6720, file: !3, line: 2083, type: !674)
!6724 = !DILocation(line: 2083, column: 54, scope: !6720)
!6725 = !DILocalVariable(name: "len", arg: 3, scope: !6720, file: !3, line: 2083, type: !1108)
!6726 = !DILocation(line: 2083, column: 67, scope: !6720)
!6727 = !DILocalVariable(name: "retlen", arg: 4, scope: !6720, file: !3, line: 2084, type: !1111)
!6728 = !DILocation(line: 2084, column: 12, scope: !6720)
!6729 = !DILocalVariable(name: "buf", arg: 5, scope: !6720, file: !3, line: 2084, type: !1124)
!6730 = !DILocation(line: 2084, column: 28, scope: !6720)
!6731 = !DILocalVariable(name: "nor", scope: !6720, file: !3, line: 2086, type: !4103)
!6732 = !DILocation(line: 2086, column: 18, scope: !6720)
!6733 = !DILocation(line: 2086, column: 39, scope: !6720)
!6734 = !DILocation(line: 2086, column: 24, scope: !6720)
!6735 = !DILocalVariable(name: "ret", scope: !6720, file: !3, line: 2087, type: !1296)
!6736 = !DILocation(line: 2087, column: 10, scope: !6720)
!6737 = !DILocation(line: 2091, column: 30, scope: !6720)
!6738 = !DILocation(line: 2091, column: 8, scope: !6720)
!6739 = !DILocation(line: 2091, column: 6, scope: !6720)
!6740 = !DILocation(line: 2092, column: 6, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 2092, column: 6)
!6742 = !DILocation(line: 2092, column: 6, scope: !6720)
!6743 = !DILocation(line: 2093, column: 10, scope: !6741)
!6744 = !DILocation(line: 2093, column: 3, scope: !6741)
!6745 = !DILocation(line: 2095, column: 2, scope: !6720)
!6746 = !DILocation(line: 2095, column: 9, scope: !6720)
!6747 = !DILocalVariable(name: "addr", scope: !6748, file: !3, line: 2096, type: !674)
!6748 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 2095, column: 14)
!6749 = !DILocation(line: 2096, column: 10, scope: !6748)
!6750 = !DILocation(line: 2096, column: 17, scope: !6748)
!6751 = !DILocation(line: 2098, column: 31, scope: !6748)
!6752 = !DILocation(line: 2098, column: 36, scope: !6748)
!6753 = !DILocation(line: 2098, column: 10, scope: !6748)
!6754 = !DILocation(line: 2098, column: 8, scope: !6748)
!6755 = !DILocation(line: 2100, column: 27, scope: !6748)
!6756 = !DILocation(line: 2100, column: 32, scope: !6748)
!6757 = !DILocation(line: 2100, column: 38, scope: !6748)
!6758 = !DILocation(line: 2100, column: 43, scope: !6748)
!6759 = !DILocation(line: 2100, column: 9, scope: !6748)
!6760 = !DILocation(line: 2100, column: 7, scope: !6748)
!6761 = !DILocation(line: 2101, column: 7, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 2101, column: 7)
!6763 = !DILocation(line: 2101, column: 11, scope: !6762)
!6764 = !DILocation(line: 2101, column: 7, scope: !6748)
!6765 = !DILocation(line: 2103, column: 8, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 2101, column: 17)
!6767 = !DILocation(line: 2104, column: 4, scope: !6766)
!6768 = !DILocation(line: 2106, column: 7, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 2106, column: 7)
!6770 = !DILocation(line: 2106, column: 11, scope: !6769)
!6771 = !DILocation(line: 2106, column: 7, scope: !6748)
!6772 = !DILocation(line: 2107, column: 4, scope: !6769)
!6773 = !DILocalVariable(name: "__ret_warn_on", scope: !6774, file: !3, line: 2109, type: !182)
!6774 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 2109, column: 3)
!6775 = !DILocation(line: 2109, column: 3, scope: !6774)
!6776 = !DILocation(line: 2109, column: 3, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 2109, column: 3)
!6778 = !DILocation(line: 2109, column: 3, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 2109, column: 3)
!6780 = !DILocation(line: 2109, column: 3, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 2109, column: 3)
!6782 = !DILocation(line: 2109, column: 3, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 2109, column: 3)
!6784 = !{i32 -2141469660, i32 -2141469631, i32 -2141469585, i32 -2141469527, i32 -2141469473, i32 -2141469419, i32 -2141469364, i32 -2141469333}
!6785 = !DILocation(line: 2109, column: 3, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 2109, column: 3)
!6787 = !{i32 -2141468924, i32 -2141468917, i32 -2141468865, i32 -2141468834, i32 -2141468804}
!6788 = !DILocation(line: 2109, column: 3, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 2109, column: 3)
!6790 = !DILocation(line: 2110, column: 14, scope: !6748)
!6791 = !DILocation(line: 2110, column: 4, scope: !6748)
!6792 = !DILocation(line: 2110, column: 11, scope: !6748)
!6793 = !DILocation(line: 2111, column: 10, scope: !6748)
!6794 = !DILocation(line: 2111, column: 7, scope: !6748)
!6795 = !DILocation(line: 2112, column: 11, scope: !6748)
!6796 = !DILocation(line: 2112, column: 8, scope: !6748)
!6797 = !DILocation(line: 2113, column: 10, scope: !6748)
!6798 = !DILocation(line: 2113, column: 7, scope: !6748)
!6799 = distinct !{!6799, !6745, !6800}
!6800 = !DILocation(line: 2114, column: 2, scope: !6720)
!6801 = !DILocation(line: 2115, column: 6, scope: !6720)
!6802 = !DILocation(line: 2115, column: 2, scope: !6720)
!6803 = !DILabel(scope: !6720, name: "read_err", file: !3, line: 2117)
!6804 = !DILocation(line: 2117, column: 1, scope: !6720)
!6805 = !DILocation(line: 2118, column: 28, scope: !6720)
!6806 = !DILocation(line: 2118, column: 2, scope: !6720)
!6807 = !DILocation(line: 2119, column: 9, scope: !6720)
!6808 = !DILocation(line: 2119, column: 2, scope: !6720)
!6809 = !DILocation(line: 2120, column: 1, scope: !6720)
!6810 = distinct !DISubprogram(name: "spi_nor_resume", scope: !3, file: !3, line: 2967, type: !1179, scopeLine: 2968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6811 = !DILocalVariable(name: "mtd", arg: 1, scope: !6810, file: !3, line: 2967, type: !1024)
!6812 = !DILocation(line: 2967, column: 45, scope: !6810)
!6813 = !DILocalVariable(name: "nor", scope: !6810, file: !3, line: 2969, type: !4103)
!6814 = !DILocation(line: 2969, column: 18, scope: !6810)
!6815 = !DILocation(line: 2969, column: 39, scope: !6810)
!6816 = !DILocation(line: 2969, column: 24, scope: !6810)
!6817 = !DILocalVariable(name: "dev", scope: !6810, file: !3, line: 2970, type: !2099)
!6818 = !DILocation(line: 2970, column: 17, scope: !6810)
!6819 = !DILocation(line: 2970, column: 23, scope: !6810)
!6820 = !DILocation(line: 2970, column: 28, scope: !6810)
!6821 = !DILocalVariable(name: "ret", scope: !6810, file: !3, line: 2971, type: !182)
!6822 = !DILocation(line: 2971, column: 6, scope: !6810)
!6823 = !DILocation(line: 2974, column: 21, scope: !6810)
!6824 = !DILocation(line: 2974, column: 8, scope: !6810)
!6825 = !DILocation(line: 2974, column: 6, scope: !6810)
!6826 = !DILocation(line: 2975, column: 6, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 2975, column: 6)
!6828 = !DILocation(line: 2975, column: 6, scope: !6810)
!6829 = !DILocation(line: 2976, column: 3, scope: !6827)
!6830 = !DILocation(line: 2977, column: 1, scope: !6810)
!6831 = distinct !DISubprogram(name: "spi_nor_lock", scope: !3, file: !3, line: 1864, type: !1183, scopeLine: 1865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6832 = !DILocalVariable(name: "mtd", arg: 1, scope: !6831, file: !3, line: 1864, type: !1024)
!6833 = !DILocation(line: 1864, column: 42, scope: !6831)
!6834 = !DILocalVariable(name: "ofs", arg: 2, scope: !6831, file: !3, line: 1864, type: !674)
!6835 = !DILocation(line: 1864, column: 54, scope: !6831)
!6836 = !DILocalVariable(name: "len", arg: 3, scope: !6831, file: !3, line: 1864, type: !1033)
!6837 = !DILocation(line: 1864, column: 68, scope: !6831)
!6838 = !DILocalVariable(name: "nor", scope: !6831, file: !3, line: 1866, type: !4103)
!6839 = !DILocation(line: 1866, column: 18, scope: !6831)
!6840 = !DILocation(line: 1866, column: 39, scope: !6831)
!6841 = !DILocation(line: 1866, column: 24, scope: !6831)
!6842 = !DILocalVariable(name: "ret", scope: !6831, file: !3, line: 1867, type: !182)
!6843 = !DILocation(line: 1867, column: 6, scope: !6831)
!6844 = !DILocation(line: 1869, column: 30, scope: !6831)
!6845 = !DILocation(line: 1869, column: 8, scope: !6831)
!6846 = !DILocation(line: 1869, column: 6, scope: !6831)
!6847 = !DILocation(line: 1870, column: 6, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 1870, column: 6)
!6849 = !DILocation(line: 1870, column: 6, scope: !6831)
!6850 = !DILocation(line: 1871, column: 10, scope: !6848)
!6851 = !DILocation(line: 1871, column: 3, scope: !6848)
!6852 = !DILocation(line: 1873, column: 8, scope: !6831)
!6853 = !DILocation(line: 1873, column: 13, scope: !6831)
!6854 = !DILocation(line: 1873, column: 21, scope: !6831)
!6855 = !DILocation(line: 1873, column: 34, scope: !6831)
!6856 = !DILocation(line: 1873, column: 39, scope: !6831)
!6857 = !DILocation(line: 1873, column: 44, scope: !6831)
!6858 = !DILocation(line: 1873, column: 49, scope: !6831)
!6859 = !DILocation(line: 1873, column: 6, scope: !6831)
!6860 = !DILocation(line: 1875, column: 28, scope: !6831)
!6861 = !DILocation(line: 1875, column: 2, scope: !6831)
!6862 = !DILocation(line: 1876, column: 9, scope: !6831)
!6863 = !DILocation(line: 1876, column: 2, scope: !6831)
!6864 = !DILocation(line: 1877, column: 1, scope: !6831)
!6865 = distinct !DISubprogram(name: "spi_nor_unlock", scope: !3, file: !3, line: 1879, type: !1183, scopeLine: 1880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6866 = !DILocalVariable(name: "mtd", arg: 1, scope: !6865, file: !3, line: 1879, type: !1024)
!6867 = !DILocation(line: 1879, column: 44, scope: !6865)
!6868 = !DILocalVariable(name: "ofs", arg: 2, scope: !6865, file: !3, line: 1879, type: !674)
!6869 = !DILocation(line: 1879, column: 56, scope: !6865)
!6870 = !DILocalVariable(name: "len", arg: 3, scope: !6865, file: !3, line: 1879, type: !1033)
!6871 = !DILocation(line: 1879, column: 70, scope: !6865)
!6872 = !DILocalVariable(name: "nor", scope: !6865, file: !3, line: 1881, type: !4103)
!6873 = !DILocation(line: 1881, column: 18, scope: !6865)
!6874 = !DILocation(line: 1881, column: 39, scope: !6865)
!6875 = !DILocation(line: 1881, column: 24, scope: !6865)
!6876 = !DILocalVariable(name: "ret", scope: !6865, file: !3, line: 1882, type: !182)
!6877 = !DILocation(line: 1882, column: 6, scope: !6865)
!6878 = !DILocation(line: 1884, column: 30, scope: !6865)
!6879 = !DILocation(line: 1884, column: 8, scope: !6865)
!6880 = !DILocation(line: 1884, column: 6, scope: !6865)
!6881 = !DILocation(line: 1885, column: 6, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 1885, column: 6)
!6883 = !DILocation(line: 1885, column: 6, scope: !6865)
!6884 = !DILocation(line: 1886, column: 10, scope: !6882)
!6885 = !DILocation(line: 1886, column: 3, scope: !6882)
!6886 = !DILocation(line: 1888, column: 8, scope: !6865)
!6887 = !DILocation(line: 1888, column: 13, scope: !6865)
!6888 = !DILocation(line: 1888, column: 21, scope: !6865)
!6889 = !DILocation(line: 1888, column: 34, scope: !6865)
!6890 = !DILocation(line: 1888, column: 41, scope: !6865)
!6891 = !DILocation(line: 1888, column: 46, scope: !6865)
!6892 = !DILocation(line: 1888, column: 51, scope: !6865)
!6893 = !DILocation(line: 1888, column: 6, scope: !6865)
!6894 = !DILocation(line: 1890, column: 28, scope: !6865)
!6895 = !DILocation(line: 1890, column: 2, scope: !6865)
!6896 = !DILocation(line: 1891, column: 9, scope: !6865)
!6897 = !DILocation(line: 1891, column: 2, scope: !6865)
!6898 = !DILocation(line: 1892, column: 1, scope: !6865)
!6899 = distinct !DISubprogram(name: "spi_nor_is_locked", scope: !3, file: !3, line: 1894, type: !1183, scopeLine: 1895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6900 = !DILocalVariable(name: "mtd", arg: 1, scope: !6899, file: !3, line: 1894, type: !1024)
!6901 = !DILocation(line: 1894, column: 47, scope: !6899)
!6902 = !DILocalVariable(name: "ofs", arg: 2, scope: !6899, file: !3, line: 1894, type: !674)
!6903 = !DILocation(line: 1894, column: 59, scope: !6899)
!6904 = !DILocalVariable(name: "len", arg: 3, scope: !6899, file: !3, line: 1894, type: !1033)
!6905 = !DILocation(line: 1894, column: 73, scope: !6899)
!6906 = !DILocalVariable(name: "nor", scope: !6899, file: !3, line: 1896, type: !4103)
!6907 = !DILocation(line: 1896, column: 18, scope: !6899)
!6908 = !DILocation(line: 1896, column: 39, scope: !6899)
!6909 = !DILocation(line: 1896, column: 24, scope: !6899)
!6910 = !DILocalVariable(name: "ret", scope: !6899, file: !3, line: 1897, type: !182)
!6911 = !DILocation(line: 1897, column: 6, scope: !6899)
!6912 = !DILocation(line: 1899, column: 30, scope: !6899)
!6913 = !DILocation(line: 1899, column: 8, scope: !6899)
!6914 = !DILocation(line: 1899, column: 6, scope: !6899)
!6915 = !DILocation(line: 1900, column: 6, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 1900, column: 6)
!6917 = !DILocation(line: 1900, column: 6, scope: !6899)
!6918 = !DILocation(line: 1901, column: 10, scope: !6916)
!6919 = !DILocation(line: 1901, column: 3, scope: !6916)
!6920 = !DILocation(line: 1903, column: 8, scope: !6899)
!6921 = !DILocation(line: 1903, column: 13, scope: !6899)
!6922 = !DILocation(line: 1903, column: 21, scope: !6899)
!6923 = !DILocation(line: 1903, column: 34, scope: !6899)
!6924 = !DILocation(line: 1903, column: 44, scope: !6899)
!6925 = !DILocation(line: 1903, column: 49, scope: !6899)
!6926 = !DILocation(line: 1903, column: 54, scope: !6899)
!6927 = !DILocation(line: 1903, column: 6, scope: !6899)
!6928 = !DILocation(line: 1905, column: 28, scope: !6899)
!6929 = !DILocation(line: 1905, column: 2, scope: !6899)
!6930 = !DILocation(line: 1906, column: 9, scope: !6899)
!6931 = !DILocation(line: 1906, column: 2, scope: !6899)
!6932 = !DILocation(line: 1907, column: 1, scope: !6899)
!6933 = distinct !DISubprogram(name: "of_property_read_bool", scope: !2428, file: !2428, line: 1192, type: !6934, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6934 = !DISubroutineType(types: !6935)
!6935 = !{!655, !6936, !610}
!6936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6937, size: 64)
!6937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2427)
!6938 = !DILocalVariable(name: "np", arg: 1, scope: !6933, file: !2428, line: 1192, type: !6936)
!6939 = !DILocation(line: 1192, column: 68, scope: !6933)
!6940 = !DILocalVariable(name: "propname", arg: 2, scope: !6933, file: !2428, line: 1193, type: !610)
!6941 = !DILocation(line: 1193, column: 19, scope: !6933)
!6942 = !DILocalVariable(name: "prop", scope: !6933, file: !2428, line: 1195, type: !2525)
!6943 = !DILocation(line: 1195, column: 19, scope: !6933)
!6944 = !DILocation(line: 1195, column: 43, scope: !6933)
!6945 = !DILocation(line: 1195, column: 47, scope: !6933)
!6946 = !DILocation(line: 1195, column: 26, scope: !6933)
!6947 = !DILocation(line: 1197, column: 9, scope: !6933)
!6948 = !DILocation(line: 1197, column: 2, scope: !6933)
!6949 = distinct !DISubprogram(name: "spi_nor_setup", scope: !3, file: !3, line: 2666, type: !4545, scopeLine: 2668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6950 = !DILocalVariable(name: "nor", arg: 1, scope: !6949, file: !3, line: 2666, type: !4103)
!6951 = !DILocation(line: 2666, column: 42, scope: !6949)
!6952 = !DILocalVariable(name: "hwcaps", arg: 2, scope: !6949, file: !3, line: 2667, type: !4547)
!6953 = !DILocation(line: 2667, column: 34, scope: !6949)
!6954 = !DILocation(line: 2669, column: 7, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 2669, column: 6)
!6956 = !DILocation(line: 2669, column: 12, scope: !6955)
!6957 = !DILocation(line: 2669, column: 20, scope: !6955)
!6958 = !DILocation(line: 2669, column: 6, scope: !6949)
!6959 = !DILocation(line: 2670, column: 3, scope: !6955)
!6960 = !DILocation(line: 2672, column: 9, scope: !6949)
!6961 = !DILocation(line: 2672, column: 14, scope: !6949)
!6962 = !DILocation(line: 2672, column: 22, scope: !6949)
!6963 = !DILocation(line: 2672, column: 28, scope: !6949)
!6964 = !DILocation(line: 2672, column: 33, scope: !6949)
!6965 = !DILocation(line: 2672, column: 2, scope: !6949)
!6966 = !DILocation(line: 2673, column: 1, scope: !6949)
!6967 = distinct !DISubprogram(name: "spi_nor_set_addr_width", scope: !3, file: !3, line: 3005, type: !4533, scopeLine: 3006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!6968 = !DILocalVariable(name: "nor", arg: 1, scope: !6967, file: !3, line: 3005, type: !4103)
!6969 = !DILocation(line: 3005, column: 51, scope: !6967)
!6970 = !DILocation(line: 3007, column: 6, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 3007, column: 6)
!6972 = !DILocation(line: 3007, column: 11, scope: !6971)
!6973 = !DILocation(line: 3007, column: 6, scope: !6967)
!6974 = !DILocation(line: 3009, column: 2, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 3007, column: 23)
!6976 = !DILocation(line: 3009, column: 13, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 3009, column: 13)
!6978 = !DILocation(line: 3009, column: 18, scope: !6977)
!6979 = !DILocation(line: 3009, column: 24, scope: !6977)
!6980 = !DILocation(line: 3009, column: 13, scope: !6971)
!6981 = !DILocation(line: 3010, column: 21, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 3009, column: 36)
!6983 = !DILocation(line: 3010, column: 26, scope: !6982)
!6984 = !DILocation(line: 3010, column: 32, scope: !6982)
!6985 = !DILocation(line: 3010, column: 3, scope: !6982)
!6986 = !DILocation(line: 3010, column: 8, scope: !6982)
!6987 = !DILocation(line: 3010, column: 19, scope: !6982)
!6988 = !DILocation(line: 3011, column: 2, scope: !6982)
!6989 = !DILocation(line: 3012, column: 3, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 3011, column: 9)
!6991 = !DILocation(line: 3012, column: 8, scope: !6990)
!6992 = !DILocation(line: 3012, column: 19, scope: !6990)
!6993 = !DILocation(line: 3015, column: 6, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 3015, column: 6)
!6995 = !DILocation(line: 3015, column: 11, scope: !6994)
!6996 = !DILocation(line: 3015, column: 22, scope: !6994)
!6997 = !DILocation(line: 3015, column: 27, scope: !6994)
!6998 = !DILocation(line: 3015, column: 30, scope: !6994)
!6999 = !DILocation(line: 3015, column: 35, scope: !6994)
!7000 = !DILocation(line: 3015, column: 39, scope: !6994)
!7001 = !DILocation(line: 3015, column: 44, scope: !6994)
!7002 = !DILocation(line: 3015, column: 6, scope: !6967)
!7003 = !DILocation(line: 3017, column: 3, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 3015, column: 57)
!7005 = !DILocation(line: 3017, column: 8, scope: !7004)
!7006 = !DILocation(line: 3017, column: 19, scope: !7004)
!7007 = !DILocation(line: 3018, column: 2, scope: !7004)
!7008 = !DILocation(line: 3020, column: 6, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 3020, column: 6)
!7010 = !DILocation(line: 3020, column: 11, scope: !7009)
!7011 = !DILocation(line: 3020, column: 22, scope: !7009)
!7012 = !DILocation(line: 3020, column: 6, scope: !6967)
!7013 = !DILocation(line: 3023, column: 3, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 3020, column: 48)
!7015 = !DILocation(line: 3027, column: 6, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 3027, column: 6)
!7017 = !DILocation(line: 3027, column: 11, scope: !7016)
!7018 = !DILocation(line: 3027, column: 22, scope: !7016)
!7019 = !DILocation(line: 3027, column: 27, scope: !7016)
!7020 = !DILocation(line: 3027, column: 30, scope: !7016)
!7021 = !DILocation(line: 3027, column: 35, scope: !7016)
!7022 = !DILocation(line: 3027, column: 41, scope: !7016)
!7023 = !DILocation(line: 3027, column: 61, scope: !7016)
!7024 = !DILocation(line: 3028, column: 8, scope: !7016)
!7025 = !DILocation(line: 3028, column: 13, scope: !7016)
!7026 = !DILocation(line: 3028, column: 19, scope: !7016)
!7027 = !DILocation(line: 3027, column: 6, scope: !6967)
!7028 = !DILocation(line: 3029, column: 29, scope: !7016)
!7029 = !DILocation(line: 3029, column: 3, scope: !7016)
!7030 = !DILocation(line: 3031, column: 2, scope: !6967)
!7031 = !DILocation(line: 3032, column: 1, scope: !6967)
!7032 = !DILocalVariable(name: "nor", arg: 1, scope: !4672, file: !3, line: 2934, type: !4103)
!7033 = !DILocation(line: 2934, column: 41, scope: !4672)
!7034 = !DILocalVariable(name: "err", scope: !4672, file: !3, line: 2936, type: !182)
!7035 = !DILocation(line: 2936, column: 6, scope: !4672)
!7036 = !DILocation(line: 2938, column: 28, scope: !4672)
!7037 = !DILocation(line: 2938, column: 8, scope: !4672)
!7038 = !DILocation(line: 2938, column: 6, scope: !4672)
!7039 = !DILocation(line: 2939, column: 6, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 2939, column: 6)
!7041 = !DILocation(line: 2939, column: 6, scope: !4672)
!7042 = !DILocation(line: 2941, column: 10, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7040, file: !3, line: 2939, column: 11)
!7044 = !DILocation(line: 2941, column: 3, scope: !7043)
!7045 = !DILocation(line: 2944, column: 27, scope: !4672)
!7046 = !DILocation(line: 2944, column: 8, scope: !4672)
!7047 = !DILocation(line: 2944, column: 6, scope: !4672)
!7048 = !DILocation(line: 2945, column: 6, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 2945, column: 6)
!7050 = !DILocation(line: 2945, column: 6, scope: !4672)
!7051 = !DILocation(line: 2947, column: 10, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 2945, column: 11)
!7053 = !DILocation(line: 2947, column: 3, scope: !7052)
!7054 = !DILocation(line: 2950, column: 6, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 2950, column: 6)
!7056 = !DILocation(line: 2950, column: 11, scope: !7055)
!7057 = !DILocation(line: 2950, column: 22, scope: !7055)
!7058 = !DILocation(line: 2950, column: 27, scope: !7055)
!7059 = !DILocation(line: 2950, column: 32, scope: !7055)
!7060 = !DILocation(line: 2950, column: 37, scope: !7055)
!7061 = !DILocation(line: 2950, column: 43, scope: !7055)
!7062 = !DILocation(line: 2950, column: 6, scope: !4672)
!7063 = !DILocalVariable(name: "__ret_warn_once", scope: !7064, file: !3, line: 2958, type: !182)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 2958, column: 3)
!7065 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 2950, column: 65)
!7066 = !DILocation(line: 2958, column: 3, scope: !7064)
!7067 = !DILocation(line: 2958, column: 3, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7064, file: !3, line: 2958, column: 3)
!7069 = !DILocation(line: 0, scope: !7068)
!7070 = !DILocation(line: 2958, column: 3, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 2958, column: 3)
!7072 = !DILocalVariable(name: "__ret_warn_on", scope: !7073, file: !3, line: 2958, type: !182)
!7073 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 2958, column: 3)
!7074 = !DILocation(line: 2958, column: 3, scope: !7073)
!7075 = !DILocation(line: 2958, column: 3, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 2958, column: 3)
!7077 = !DILocation(line: 2958, column: 3, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 2958, column: 3)
!7079 = !DILocation(line: 2958, column: 3, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2958, column: 3)
!7081 = !DILocation(line: 2958, column: 3, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2958, column: 3)
!7083 = !DILocation(line: 2958, column: 3, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2958, column: 3)
!7085 = !DILocation(line: 2958, column: 3, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2958, column: 3)
!7087 = !{i32 -2141449877, i32 -2141449848, i32 -2141449802, i32 -2141449744, i32 -2141449690, i32 -2141449636, i32 -2141449581, i32 -2141449550}
!7088 = !DILocation(line: 2958, column: 3, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2958, column: 3)
!7090 = !{i32 -2141449130, i32 -2141449123, i32 -2141449071, i32 -2141449040, i32 -2141449010}
!7091 = !DILocation(line: 2958, column: 3, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 2958, column: 3)
!7093 = !DILocation(line: 2958, column: 3, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2958, column: 3)
!7095 = !DILocation(line: 2960, column: 3, scope: !7065)
!7096 = !DILocation(line: 2960, column: 8, scope: !7065)
!7097 = !DILocation(line: 2960, column: 16, scope: !7065)
!7098 = !DILocation(line: 2960, column: 36, scope: !7065)
!7099 = !DILocation(line: 2961, column: 2, scope: !7065)
!7100 = !DILocation(line: 2963, column: 2, scope: !4672)
!7101 = !DILocation(line: 2964, column: 1, scope: !4672)
!7102 = distinct !DISubprogram(name: "spi_nor_driver_init", scope: !3, file: !3, line: 3462, type: !7103, scopeLine: 3462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{!182}
!7105 = !DILocation(line: 3462, column: 1, scope: !7102)
!7106 = distinct !DISubprogram(name: "spi_nor_driver_exit", scope: !3, file: !3, line: 3462, type: !3667, scopeLine: 3462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7107 = !DILocation(line: 3462, column: 1, scope: !7106)
!7108 = distinct !DISubprogram(name: "spi_nor_get_protocol_inst_nbits", scope: !108, file: !108, line: 192, type: !7109, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7109 = !DISubroutineType(types: !7110)
!7110 = !{!6, !107}
!7111 = !DILocalVariable(name: "proto", arg: 1, scope: !7108, file: !108, line: 192, type: !107)
!7112 = !DILocation(line: 192, column: 72, scope: !7108)
!7113 = !DILocation(line: 194, column: 26, scope: !7108)
!7114 = !DILocation(line: 194, column: 32, scope: !7108)
!7115 = !DILocation(line: 194, column: 57, scope: !7108)
!7116 = !DILocation(line: 194, column: 9, scope: !7108)
!7117 = !DILocation(line: 194, column: 2, scope: !7108)
!7118 = distinct !DISubprogram(name: "spi_nor_get_protocol_addr_nbits", scope: !108, file: !108, line: 198, type: !7109, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7119 = !DILocalVariable(name: "proto", arg: 1, scope: !7118, file: !108, line: 198, type: !107)
!7120 = !DILocation(line: 198, column: 72, scope: !7118)
!7121 = !DILocation(line: 200, column: 26, scope: !7118)
!7122 = !DILocation(line: 200, column: 32, scope: !7118)
!7123 = !DILocation(line: 200, column: 57, scope: !7118)
!7124 = !DILocation(line: 200, column: 9, scope: !7118)
!7125 = !DILocation(line: 200, column: 2, scope: !7118)
!7126 = distinct !DISubprogram(name: "spi_nor_get_protocol_data_nbits", scope: !108, file: !108, line: 204, type: !7109, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7127 = !DILocalVariable(name: "proto", arg: 1, scope: !7126, file: !108, line: 204, type: !107)
!7128 = !DILocation(line: 204, column: 72, scope: !7126)
!7129 = !DILocation(line: 206, column: 26, scope: !7126)
!7130 = !DILocation(line: 206, column: 32, scope: !7126)
!7131 = !DILocation(line: 206, column: 57, scope: !7126)
!7132 = !DILocation(line: 206, column: 9, scope: !7126)
!7133 = !DILocation(line: 206, column: 2, scope: !7126)
!7134 = distinct !DISubprogram(name: "spi_nor_spimem_bounce", scope: !3, file: !3, line: 53, type: !7135, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{!655, !4103, !4301}
!7137 = !DILocalVariable(name: "nor", arg: 1, scope: !7134, file: !3, line: 53, type: !4103)
!7138 = !DILocation(line: 53, column: 51, scope: !7134)
!7139 = !DILocalVariable(name: "op", arg: 2, scope: !7134, file: !3, line: 53, type: !4301)
!7140 = !DILocation(line: 53, column: 75, scope: !7134)
!7141 = !DILocation(line: 56, column: 25, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 56, column: 6)
!7143 = !DILocation(line: 56, column: 29, scope: !7142)
!7144 = !DILocation(line: 56, column: 34, scope: !7142)
!7145 = !DILocation(line: 56, column: 38, scope: !7142)
!7146 = !DILocation(line: 56, column: 6, scope: !7142)
!7147 = !DILocation(line: 56, column: 42, scope: !7142)
!7148 = !DILocation(line: 57, column: 7, scope: !7142)
!7149 = !DILocation(line: 56, column: 6, scope: !7134)
!7150 = !DILocation(line: 58, column: 7, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 58, column: 7)
!7152 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 57, column: 41)
!7153 = !DILocation(line: 58, column: 11, scope: !7151)
!7154 = !DILocation(line: 58, column: 16, scope: !7151)
!7155 = !DILocation(line: 58, column: 25, scope: !7151)
!7156 = !DILocation(line: 58, column: 30, scope: !7151)
!7157 = !DILocation(line: 58, column: 23, scope: !7151)
!7158 = !DILocation(line: 58, column: 7, scope: !7152)
!7159 = !DILocation(line: 59, column: 22, scope: !7151)
!7160 = !DILocation(line: 59, column: 27, scope: !7151)
!7161 = !DILocation(line: 59, column: 4, scope: !7151)
!7162 = !DILocation(line: 59, column: 8, scope: !7151)
!7163 = !DILocation(line: 59, column: 13, scope: !7151)
!7164 = !DILocation(line: 59, column: 20, scope: !7151)
!7165 = !DILocation(line: 60, column: 21, scope: !7152)
!7166 = !DILocation(line: 60, column: 26, scope: !7152)
!7167 = !DILocation(line: 60, column: 3, scope: !7152)
!7168 = !DILocation(line: 60, column: 7, scope: !7152)
!7169 = !DILocation(line: 60, column: 12, scope: !7152)
!7170 = !DILocation(line: 60, column: 16, scope: !7152)
!7171 = !DILocation(line: 60, column: 19, scope: !7152)
!7172 = !DILocation(line: 61, column: 3, scope: !7152)
!7173 = !DILocation(line: 64, column: 2, scope: !7134)
!7174 = !DILocation(line: 65, column: 1, scope: !7134)
!7175 = distinct !DISubprogram(name: "spi_nor_spimem_exec_op", scope: !3, file: !3, line: 74, type: !7176, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7176 = !DISubroutineType(types: !7177)
!7177 = !{!182, !4103, !4301}
!7178 = !DILocalVariable(name: "nor", arg: 1, scope: !7175, file: !3, line: 74, type: !4103)
!7179 = !DILocation(line: 74, column: 51, scope: !7175)
!7180 = !DILocalVariable(name: "op", arg: 2, scope: !7175, file: !3, line: 74, type: !4301)
!7181 = !DILocation(line: 74, column: 75, scope: !7175)
!7182 = !DILocalVariable(name: "error", scope: !7175, file: !3, line: 76, type: !182)
!7183 = !DILocation(line: 76, column: 6, scope: !7175)
!7184 = !DILocation(line: 78, column: 33, scope: !7175)
!7185 = !DILocation(line: 78, column: 38, scope: !7175)
!7186 = !DILocation(line: 78, column: 46, scope: !7175)
!7187 = !DILocation(line: 78, column: 10, scope: !7175)
!7188 = !DILocation(line: 78, column: 8, scope: !7175)
!7189 = !DILocation(line: 79, column: 6, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 79, column: 6)
!7191 = !DILocation(line: 79, column: 6, scope: !7175)
!7192 = !DILocation(line: 80, column: 10, scope: !7190)
!7193 = !DILocation(line: 80, column: 3, scope: !7190)
!7194 = !DILocation(line: 82, column: 25, scope: !7175)
!7195 = !DILocation(line: 82, column: 30, scope: !7175)
!7196 = !DILocation(line: 82, column: 38, scope: !7175)
!7197 = !DILocation(line: 82, column: 9, scope: !7175)
!7198 = !DILocation(line: 82, column: 2, scope: !7175)
!7199 = !DILocation(line: 83, column: 1, scope: !7175)
!7200 = distinct !DISubprogram(name: "object_is_on_stack", scope: !7201, file: !7201, line: 81, type: !7202, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7201 = !DIFile(filename: "./include/linux/sched/task_stack.h", directory: "/home/lizy2001/genbc/linux")
!7202 = !DISubroutineType(types: !7203)
!7203 = !{!182, !1921}
!7204 = !DILocalVariable(name: "pscr_ret__", scope: !7205, file: !7206, line: 15, type: !188)
!7205 = distinct !DILexicalBlock(scope: !7207, file: !7206, line: 15, column: 9)
!7206 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!7207 = distinct !DISubprogram(name: "get_current", scope: !7206, file: !7206, line: 13, type: !7208, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7208 = !DISubroutineType(types: !7209)
!7209 = !{!188}
!7210 = !DILocation(line: 15, column: 9, scope: !7205, inlinedAt: !7211)
!7211 = distinct !DILocation(line: 83, column: 32, scope: !7200)
!7212 = !DILocalVariable(name: "__vpp_verify", scope: !7213, file: !7206, line: 15, type: !1921)
!7213 = distinct !DILexicalBlock(scope: !7205, file: !7206, line: 15, column: 9)
!7214 = !DILocation(line: 15, column: 9, scope: !7213, inlinedAt: !7211)
!7215 = !DILocalVariable(name: "pfo_val__", scope: !7216, file: !7206, line: 15, type: !250)
!7216 = distinct !DILexicalBlock(scope: !7205, file: !7206, line: 15, column: 9)
!7217 = !DILocation(line: 15, column: 9, scope: !7216, inlinedAt: !7211)
!7218 = !DILocalVariable(name: "obj", arg: 1, scope: !7200, file: !7201, line: 81, type: !1921)
!7219 = !DILocation(line: 81, column: 50, scope: !7200)
!7220 = !DILocalVariable(name: "stack", scope: !7200, file: !7201, line: 83, type: !204)
!7221 = !DILocation(line: 83, column: 8, scope: !7200)
!7222 = !{i32 -2146127610}
!7223 = !DILocation(line: 83, column: 16, scope: !7200)
!7224 = !DILocation(line: 85, column: 10, scope: !7200)
!7225 = !DILocation(line: 85, column: 17, scope: !7200)
!7226 = !DILocation(line: 85, column: 14, scope: !7200)
!7227 = !DILocation(line: 85, column: 24, scope: !7200)
!7228 = !DILocation(line: 85, column: 28, scope: !7200)
!7229 = !DILocation(line: 85, column: 35, scope: !7200)
!7230 = !DILocation(line: 85, column: 41, scope: !7200)
!7231 = !DILocation(line: 85, column: 32, scope: !7200)
!7232 = !DILocation(line: 0, scope: !7200)
!7233 = !DILocation(line: 85, column: 2, scope: !7200)
!7234 = distinct !DISubprogram(name: "task_stack_page", scope: !7201, file: !7201, line: 19, type: !7235, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7235 = !DISubroutineType(types: !7236)
!7236 = !{!204, !7237}
!7237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7238, size: 64)
!7238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !189)
!7239 = !DILocalVariable(name: "task", arg: 1, scope: !7234, file: !7201, line: 19, type: !7237)
!7240 = !DILocation(line: 19, column: 63, scope: !7234)
!7241 = !DILocation(line: 21, column: 9, scope: !7234)
!7242 = !DILocation(line: 21, column: 15, scope: !7234)
!7243 = !DILocation(line: 21, column: 2, scope: !7234)
!7244 = distinct !DISubprogram(name: "spi_nor_ready", scope: !3, file: !3, line: 652, type: !4533, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7245 = !DILocalVariable(name: "nor", arg: 1, scope: !7244, file: !3, line: 652, type: !4103)
!7246 = !DILocation(line: 652, column: 42, scope: !7244)
!7247 = !DILocalVariable(name: "sr", scope: !7244, file: !3, line: 654, type: !182)
!7248 = !DILocation(line: 654, column: 6, scope: !7244)
!7249 = !DILocalVariable(name: "fsr", scope: !7244, file: !3, line: 654, type: !182)
!7250 = !DILocation(line: 654, column: 10, scope: !7244)
!7251 = !DILocation(line: 656, column: 6, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 656, column: 6)
!7253 = !DILocation(line: 656, column: 11, scope: !7252)
!7254 = !DILocation(line: 656, column: 17, scope: !7252)
!7255 = !DILocation(line: 656, column: 6, scope: !7244)
!7256 = !DILocation(line: 657, column: 26, scope: !7252)
!7257 = !DILocation(line: 657, column: 8, scope: !7252)
!7258 = !DILocation(line: 657, column: 6, scope: !7252)
!7259 = !DILocation(line: 657, column: 3, scope: !7252)
!7260 = !DILocation(line: 659, column: 25, scope: !7252)
!7261 = !DILocation(line: 659, column: 8, scope: !7252)
!7262 = !DILocation(line: 659, column: 6, scope: !7252)
!7263 = !DILocation(line: 660, column: 6, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 660, column: 6)
!7265 = !DILocation(line: 660, column: 9, scope: !7264)
!7266 = !DILocation(line: 660, column: 6, scope: !7244)
!7267 = !DILocation(line: 661, column: 10, scope: !7264)
!7268 = !DILocation(line: 661, column: 3, scope: !7264)
!7269 = !DILocation(line: 662, column: 8, scope: !7244)
!7270 = !DILocation(line: 662, column: 13, scope: !7244)
!7271 = !DILocation(line: 662, column: 19, scope: !7244)
!7272 = !DILocation(line: 662, column: 56, scope: !7244)
!7273 = !DILocation(line: 662, column: 38, scope: !7244)
!7274 = !DILocation(line: 662, column: 6, scope: !7244)
!7275 = !DILocation(line: 663, column: 6, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 663, column: 6)
!7277 = !DILocation(line: 663, column: 10, scope: !7276)
!7278 = !DILocation(line: 663, column: 6, scope: !7244)
!7279 = !DILocation(line: 664, column: 10, scope: !7276)
!7280 = !DILocation(line: 664, column: 3, scope: !7276)
!7281 = !DILocation(line: 665, column: 9, scope: !7244)
!7282 = !DILocation(line: 665, column: 12, scope: !7244)
!7283 = !DILocation(line: 665, column: 15, scope: !7244)
!7284 = !DILocation(line: 0, scope: !7244)
!7285 = !DILocation(line: 665, column: 2, scope: !7244)
!7286 = !DILocation(line: 666, column: 1, scope: !7244)
!7287 = distinct !DISubprogram(name: "___might_sleep", scope: !7288, file: !7288, line: 248, type: !7289, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7288 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!7289 = !DISubroutineType(types: !7290)
!7290 = !{null, !610, !182, !182}
!7291 = !DILocalVariable(name: "file", arg: 1, scope: !7287, file: !7288, line: 248, type: !610)
!7292 = !DILocation(line: 248, column: 49, scope: !7287)
!7293 = !DILocalVariable(name: "line", arg: 2, scope: !7287, file: !7288, line: 248, type: !182)
!7294 = !DILocation(line: 248, column: 59, scope: !7287)
!7295 = !DILocalVariable(name: "preempt_offset", arg: 3, scope: !7287, file: !7288, line: 249, type: !182)
!7296 = !DILocation(line: 249, column: 12, scope: !7287)
!7297 = !DILocation(line: 249, column: 30, scope: !7287)
!7298 = distinct !DISubprogram(name: "spi_nor_xsr_ready", scope: !3, file: !3, line: 504, type: !4533, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7299 = !DILocalVariable(name: "nor", arg: 1, scope: !7298, file: !3, line: 504, type: !4103)
!7300 = !DILocation(line: 504, column: 46, scope: !7298)
!7301 = !DILocalVariable(name: "ret", scope: !7298, file: !3, line: 506, type: !182)
!7302 = !DILocation(line: 506, column: 6, scope: !7298)
!7303 = !DILocation(line: 508, column: 25, scope: !7298)
!7304 = !DILocation(line: 508, column: 30, scope: !7298)
!7305 = !DILocation(line: 508, column: 35, scope: !7298)
!7306 = !DILocation(line: 508, column: 8, scope: !7298)
!7307 = !DILocation(line: 508, column: 6, scope: !7298)
!7308 = !DILocation(line: 509, column: 6, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 509, column: 6)
!7310 = !DILocation(line: 509, column: 6, scope: !7298)
!7311 = !DILocation(line: 510, column: 10, scope: !7309)
!7312 = !DILocation(line: 510, column: 3, scope: !7309)
!7313 = !DILocation(line: 512, column: 12, scope: !7298)
!7314 = !DILocation(line: 512, column: 17, scope: !7298)
!7315 = !DILocation(line: 512, column: 30, scope: !7298)
!7316 = !DILocation(line: 512, column: 10, scope: !7298)
!7317 = !DILocation(line: 512, column: 9, scope: !7298)
!7318 = !DILocation(line: 512, column: 2, scope: !7298)
!7319 = !DILocation(line: 513, column: 1, scope: !7298)
!7320 = distinct !DISubprogram(name: "spi_nor_sr_ready", scope: !3, file: !3, line: 547, type: !4533, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7321 = !DILocalVariable(name: "nor", arg: 1, scope: !7320, file: !3, line: 547, type: !4103)
!7322 = !DILocation(line: 547, column: 45, scope: !7320)
!7323 = !DILocalVariable(name: "ret", scope: !7320, file: !3, line: 549, type: !182)
!7324 = !DILocation(line: 549, column: 6, scope: !7320)
!7325 = !DILocation(line: 549, column: 28, scope: !7320)
!7326 = !DILocation(line: 549, column: 33, scope: !7320)
!7327 = !DILocation(line: 549, column: 38, scope: !7320)
!7328 = !DILocation(line: 549, column: 12, scope: !7320)
!7329 = !DILocation(line: 551, column: 6, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 551, column: 6)
!7331 = !DILocation(line: 551, column: 6, scope: !7320)
!7332 = !DILocation(line: 552, column: 10, scope: !7330)
!7333 = !DILocation(line: 552, column: 3, scope: !7330)
!7334 = !DILocation(line: 554, column: 6, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 554, column: 6)
!7336 = !DILocation(line: 554, column: 11, scope: !7335)
!7337 = !DILocation(line: 554, column: 17, scope: !7335)
!7338 = !DILocation(line: 554, column: 35, scope: !7335)
!7339 = !DILocation(line: 555, column: 6, scope: !7335)
!7340 = !DILocation(line: 555, column: 11, scope: !7335)
!7341 = !DILocation(line: 555, column: 24, scope: !7335)
!7342 = !DILocation(line: 554, column: 6, scope: !7320)
!7343 = !DILocation(line: 556, column: 7, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 556, column: 7)
!7345 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 555, column: 49)
!7346 = !DILocation(line: 556, column: 12, scope: !7344)
!7347 = !DILocation(line: 556, column: 25, scope: !7344)
!7348 = !DILocation(line: 556, column: 7, scope: !7345)
!7349 = !DILocation(line: 557, column: 4, scope: !7344)
!7350 = !DILocation(line: 559, column: 4, scope: !7344)
!7351 = !DILocation(line: 561, column: 20, scope: !7345)
!7352 = !DILocation(line: 561, column: 3, scope: !7345)
!7353 = !DILocation(line: 569, column: 31, scope: !7345)
!7354 = !DILocation(line: 569, column: 9, scope: !7345)
!7355 = !DILocation(line: 569, column: 7, scope: !7345)
!7356 = !DILocation(line: 570, column: 7, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 570, column: 7)
!7358 = !DILocation(line: 570, column: 7, scope: !7345)
!7359 = !DILocation(line: 571, column: 11, scope: !7357)
!7360 = !DILocation(line: 571, column: 4, scope: !7357)
!7361 = !DILocation(line: 573, column: 3, scope: !7345)
!7362 = !DILocation(line: 576, column: 11, scope: !7320)
!7363 = !DILocation(line: 576, column: 16, scope: !7320)
!7364 = !DILocation(line: 576, column: 29, scope: !7320)
!7365 = !DILocation(line: 576, column: 9, scope: !7320)
!7366 = !DILocation(line: 576, column: 2, scope: !7320)
!7367 = !DILocation(line: 577, column: 1, scope: !7320)
!7368 = distinct !DISubprogram(name: "spi_nor_fsr_ready", scope: !3, file: !3, line: 611, type: !4533, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7369 = !DILocalVariable(name: "nor", arg: 1, scope: !7368, file: !3, line: 611, type: !4103)
!7370 = !DILocation(line: 611, column: 46, scope: !7368)
!7371 = !DILocalVariable(name: "ret", scope: !7368, file: !3, line: 613, type: !182)
!7372 = !DILocation(line: 613, column: 6, scope: !7368)
!7373 = !DILocation(line: 613, column: 29, scope: !7368)
!7374 = !DILocation(line: 613, column: 34, scope: !7368)
!7375 = !DILocation(line: 613, column: 39, scope: !7368)
!7376 = !DILocation(line: 613, column: 12, scope: !7368)
!7377 = !DILocation(line: 615, column: 6, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 615, column: 6)
!7379 = !DILocation(line: 615, column: 6, scope: !7368)
!7380 = !DILocation(line: 616, column: 10, scope: !7378)
!7381 = !DILocation(line: 616, column: 3, scope: !7378)
!7382 = !DILocation(line: 618, column: 6, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 618, column: 6)
!7384 = !DILocation(line: 618, column: 11, scope: !7383)
!7385 = !DILocation(line: 618, column: 24, scope: !7383)
!7386 = !DILocation(line: 618, column: 6, scope: !7368)
!7387 = !DILocation(line: 619, column: 7, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 619, column: 7)
!7389 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 618, column: 51)
!7390 = !DILocation(line: 619, column: 12, scope: !7388)
!7391 = !DILocation(line: 619, column: 25, scope: !7388)
!7392 = !DILocation(line: 619, column: 7, scope: !7389)
!7393 = !DILocation(line: 620, column: 4, scope: !7388)
!7394 = !DILocation(line: 622, column: 4, scope: !7388)
!7395 = !DILocation(line: 624, column: 7, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 624, column: 7)
!7397 = !DILocation(line: 624, column: 12, scope: !7396)
!7398 = !DILocation(line: 624, column: 25, scope: !7396)
!7399 = !DILocation(line: 624, column: 7, scope: !7389)
!7400 = !DILocation(line: 625, column: 4, scope: !7396)
!7401 = !DILocation(line: 628, column: 21, scope: !7389)
!7402 = !DILocation(line: 628, column: 3, scope: !7389)
!7403 = !DILocation(line: 636, column: 31, scope: !7389)
!7404 = !DILocation(line: 636, column: 9, scope: !7389)
!7405 = !DILocation(line: 636, column: 7, scope: !7389)
!7406 = !DILocation(line: 637, column: 7, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 637, column: 7)
!7408 = !DILocation(line: 637, column: 7, scope: !7389)
!7409 = !DILocation(line: 638, column: 11, scope: !7407)
!7410 = !DILocation(line: 638, column: 4, scope: !7407)
!7411 = !DILocation(line: 640, column: 3, scope: !7389)
!7412 = !DILocation(line: 643, column: 12, scope: !7368)
!7413 = !DILocation(line: 643, column: 17, scope: !7368)
!7414 = !DILocation(line: 643, column: 30, scope: !7368)
!7415 = !DILocation(line: 643, column: 10, scope: !7368)
!7416 = !DILocation(line: 643, column: 9, scope: !7368)
!7417 = !DILocation(line: 643, column: 2, scope: !7368)
!7418 = !DILocation(line: 644, column: 1, scope: !7368)
!7419 = distinct !DISubprogram(name: "spi_nor_clear_sr", scope: !3, file: !3, line: 519, type: !4462, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7420 = !DILocalVariable(name: "nor", arg: 1, scope: !7419, file: !3, line: 519, type: !4103)
!7421 = !DILocation(line: 519, column: 46, scope: !7419)
!7422 = !DILocalVariable(name: "ret", scope: !7419, file: !3, line: 521, type: !182)
!7423 = !DILocation(line: 521, column: 6, scope: !7419)
!7424 = !DILocation(line: 523, column: 6, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7419, file: !3, line: 523, column: 6)
!7426 = !DILocation(line: 523, column: 11, scope: !7425)
!7427 = !DILocation(line: 523, column: 6, scope: !7419)
!7428 = !DILocalVariable(name: "op", scope: !7429, file: !3, line: 524, type: !4302)
!7429 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 523, column: 19)
!7430 = !DILocation(line: 524, column: 21, scope: !7429)
!7431 = !DILocation(line: 530, column: 25, scope: !7429)
!7432 = !DILocation(line: 530, column: 30, scope: !7429)
!7433 = !DILocation(line: 530, column: 9, scope: !7429)
!7434 = !DILocation(line: 530, column: 7, scope: !7429)
!7435 = !DILocation(line: 531, column: 2, scope: !7429)
!7436 = !DILocation(line: 532, column: 9, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 531, column: 9)
!7438 = !DILocation(line: 532, column: 14, scope: !7437)
!7439 = !DILocation(line: 532, column: 30, scope: !7437)
!7440 = !DILocation(line: 532, column: 40, scope: !7437)
!7441 = !DILocation(line: 532, column: 7, scope: !7437)
!7442 = !DILocation(line: 536, column: 6, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7419, file: !3, line: 536, column: 6)
!7444 = !DILocation(line: 536, column: 6, scope: !7419)
!7445 = !DILocation(line: 537, column: 3, scope: !7443)
!7446 = !DILocation(line: 538, column: 1, scope: !7419)
!7447 = distinct !DISubprogram(name: "spi_nor_read_fsr", scope: !3, file: !3, line: 310, type: !5100, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7448 = !DILocalVariable(name: "nor", arg: 1, scope: !7447, file: !3, line: 310, type: !4103)
!7449 = !DILocation(line: 310, column: 45, scope: !7447)
!7450 = !DILocalVariable(name: "fsr", arg: 2, scope: !7447, file: !3, line: 310, type: !4439)
!7451 = !DILocation(line: 310, column: 54, scope: !7447)
!7452 = !DILocalVariable(name: "ret", scope: !7447, file: !3, line: 312, type: !182)
!7453 = !DILocation(line: 312, column: 6, scope: !7447)
!7454 = !DILocation(line: 314, column: 6, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 314, column: 6)
!7456 = !DILocation(line: 314, column: 11, scope: !7455)
!7457 = !DILocation(line: 314, column: 6, scope: !7447)
!7458 = !DILocalVariable(name: "op", scope: !7459, file: !3, line: 315, type: !4302)
!7459 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 314, column: 19)
!7460 = !DILocation(line: 315, column: 21, scope: !7459)
!7461 = !DILocation(line: 316, column: 4, scope: !7459)
!7462 = !DILocation(line: 321, column: 25, scope: !7459)
!7463 = !DILocation(line: 321, column: 30, scope: !7459)
!7464 = !DILocation(line: 321, column: 9, scope: !7459)
!7465 = !DILocation(line: 321, column: 7, scope: !7459)
!7466 = !DILocation(line: 322, column: 2, scope: !7459)
!7467 = !DILocation(line: 323, column: 9, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 322, column: 9)
!7469 = !DILocation(line: 323, column: 14, scope: !7468)
!7470 = !DILocation(line: 323, column: 30, scope: !7468)
!7471 = !DILocation(line: 323, column: 39, scope: !7468)
!7472 = !DILocation(line: 324, column: 11, scope: !7468)
!7473 = !DILocation(line: 323, column: 7, scope: !7468)
!7474 = !DILocation(line: 327, column: 6, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 327, column: 6)
!7476 = !DILocation(line: 327, column: 6, scope: !7447)
!7477 = !DILocation(line: 328, column: 3, scope: !7475)
!7478 = !DILocation(line: 330, column: 9, scope: !7447)
!7479 = !DILocation(line: 330, column: 2, scope: !7447)
!7480 = distinct !DISubprogram(name: "spi_nor_clear_fsr", scope: !3, file: !3, line: 583, type: !4462, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7481 = !DILocalVariable(name: "nor", arg: 1, scope: !7480, file: !3, line: 583, type: !4103)
!7482 = !DILocation(line: 583, column: 47, scope: !7480)
!7483 = !DILocalVariable(name: "ret", scope: !7480, file: !3, line: 585, type: !182)
!7484 = !DILocation(line: 585, column: 6, scope: !7480)
!7485 = !DILocation(line: 587, column: 6, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 587, column: 6)
!7487 = !DILocation(line: 587, column: 11, scope: !7486)
!7488 = !DILocation(line: 587, column: 6, scope: !7480)
!7489 = !DILocalVariable(name: "op", scope: !7490, file: !3, line: 588, type: !4302)
!7490 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 587, column: 19)
!7491 = !DILocation(line: 588, column: 21, scope: !7490)
!7492 = !DILocation(line: 594, column: 25, scope: !7490)
!7493 = !DILocation(line: 594, column: 30, scope: !7490)
!7494 = !DILocation(line: 594, column: 9, scope: !7490)
!7495 = !DILocation(line: 594, column: 7, scope: !7490)
!7496 = !DILocation(line: 595, column: 2, scope: !7490)
!7497 = !DILocation(line: 596, column: 9, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 595, column: 9)
!7499 = !DILocation(line: 596, column: 14, scope: !7498)
!7500 = !DILocation(line: 596, column: 30, scope: !7498)
!7501 = !DILocation(line: 596, column: 40, scope: !7498)
!7502 = !DILocation(line: 596, column: 7, scope: !7498)
!7503 = !DILocation(line: 600, column: 6, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 600, column: 6)
!7505 = !DILocation(line: 600, column: 6, scope: !7480)
!7506 = !DILocation(line: 601, column: 3, scope: !7504)
!7507 = !DILocation(line: 602, column: 1, scope: !7480)
!7508 = distinct !DISubprogram(name: "spi_nor_write_sr", scope: !3, file: !3, line: 723, type: !7509, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7509 = !DISubroutineType(types: !7510)
!7510 = !{!182, !4103, !4596, !1108}
!7511 = !DILocalVariable(name: "nor", arg: 1, scope: !7508, file: !3, line: 723, type: !4103)
!7512 = !DILocation(line: 723, column: 45, scope: !7508)
!7513 = !DILocalVariable(name: "sr", arg: 2, scope: !7508, file: !3, line: 723, type: !4596)
!7514 = !DILocation(line: 723, column: 60, scope: !7508)
!7515 = !DILocalVariable(name: "len", arg: 3, scope: !7508, file: !3, line: 723, type: !1108)
!7516 = !DILocation(line: 723, column: 71, scope: !7508)
!7517 = !DILocalVariable(name: "ret", scope: !7508, file: !3, line: 725, type: !182)
!7518 = !DILocation(line: 725, column: 6, scope: !7508)
!7519 = !DILocation(line: 727, column: 29, scope: !7508)
!7520 = !DILocation(line: 727, column: 8, scope: !7508)
!7521 = !DILocation(line: 727, column: 6, scope: !7508)
!7522 = !DILocation(line: 728, column: 6, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 728, column: 6)
!7524 = !DILocation(line: 728, column: 6, scope: !7508)
!7525 = !DILocation(line: 729, column: 10, scope: !7523)
!7526 = !DILocation(line: 729, column: 3, scope: !7523)
!7527 = !DILocation(line: 731, column: 6, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 731, column: 6)
!7529 = !DILocation(line: 731, column: 11, scope: !7528)
!7530 = !DILocation(line: 731, column: 6, scope: !7508)
!7531 = !DILocalVariable(name: "op", scope: !7532, file: !3, line: 732, type: !4302)
!7532 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 731, column: 19)
!7533 = !DILocation(line: 732, column: 21, scope: !7532)
!7534 = !DILocation(line: 733, column: 4, scope: !7532)
!7535 = !DILocation(line: 738, column: 25, scope: !7532)
!7536 = !DILocation(line: 738, column: 30, scope: !7532)
!7537 = !DILocation(line: 738, column: 9, scope: !7532)
!7538 = !DILocation(line: 738, column: 7, scope: !7532)
!7539 = !DILocation(line: 739, column: 2, scope: !7532)
!7540 = !DILocation(line: 740, column: 9, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 739, column: 9)
!7542 = !DILocation(line: 740, column: 14, scope: !7541)
!7543 = !DILocation(line: 740, column: 30, scope: !7541)
!7544 = !DILocation(line: 740, column: 40, scope: !7541)
!7545 = !DILocation(line: 741, column: 12, scope: !7541)
!7546 = !DILocation(line: 741, column: 16, scope: !7541)
!7547 = !DILocation(line: 740, column: 7, scope: !7541)
!7548 = !DILocation(line: 744, column: 6, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 744, column: 6)
!7550 = !DILocation(line: 744, column: 6, scope: !7508)
!7551 = !DILocation(line: 746, column: 10, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 744, column: 11)
!7553 = !DILocation(line: 746, column: 3, scope: !7552)
!7554 = !DILocation(line: 749, column: 33, scope: !7508)
!7555 = !DILocation(line: 749, column: 9, scope: !7508)
!7556 = !DILocation(line: 749, column: 2, scope: !7508)
!7557 = !DILocation(line: 750, column: 1, scope: !7508)
!7558 = distinct !DISubprogram(name: "mtd_get_of_node", scope: !1026, file: !1026, line: 463, type: !7559, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7559 = !DISubroutineType(types: !7560)
!7560 = !{!2426, !1024}
!7561 = !DILocalVariable(name: "mtd", arg: 1, scope: !7558, file: !1026, line: 463, type: !1024)
!7562 = !DILocation(line: 463, column: 68, scope: !7558)
!7563 = !DILocation(line: 465, column: 22, scope: !7558)
!7564 = !DILocation(line: 465, column: 27, scope: !7558)
!7565 = !DILocation(line: 465, column: 9, scope: !7558)
!7566 = !DILocation(line: 465, column: 2, scope: !7558)
!7567 = distinct !DISubprogram(name: "dev_of_node", scope: !81, file: !81, line: 754, type: !7568, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{!2426, !2099}
!7570 = !DILocalVariable(name: "dev", arg: 1, scope: !7567, file: !81, line: 754, type: !2099)
!7571 = !DILocation(line: 754, column: 62, scope: !7567)
!7572 = !DILocation(line: 756, column: 33, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7567, file: !81, line: 756, column: 6)
!7574 = !DILocation(line: 756, column: 6, scope: !7567)
!7575 = !DILocation(line: 757, column: 3, scope: !7573)
!7576 = !DILocation(line: 758, column: 9, scope: !7567)
!7577 = !DILocation(line: 758, column: 14, scope: !7567)
!7578 = !DILocation(line: 758, column: 2, scope: !7567)
!7579 = !DILocation(line: 759, column: 1, scope: !7567)
!7580 = distinct !DISubprogram(name: "spi_nor_match_id", scope: !3, file: !3, line: 2988, type: !6276, scopeLine: 2990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7581 = !DILocalVariable(name: "nor", arg: 1, scope: !7580, file: !3, line: 2988, type: !4103)
!7582 = !DILocation(line: 2988, column: 66, scope: !7580)
!7583 = !DILocalVariable(name: "name", arg: 2, scope: !7580, file: !3, line: 2989, type: !610)
!7584 = !DILocation(line: 2989, column: 20, scope: !7580)
!7585 = !DILocalVariable(name: "i", scope: !7580, file: !3, line: 2991, type: !15)
!7586 = !DILocation(line: 2991, column: 15, scope: !7580)
!7587 = !DILocalVariable(name: "j", scope: !7580, file: !3, line: 2991, type: !15)
!7588 = !DILocation(line: 2991, column: 18, scope: !7580)
!7589 = !DILocation(line: 2993, column: 9, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 2993, column: 2)
!7591 = !DILocation(line: 2993, column: 7, scope: !7590)
!7592 = !DILocation(line: 2993, column: 14, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 2993, column: 2)
!7594 = !DILocation(line: 2993, column: 16, scope: !7593)
!7595 = !DILocation(line: 2993, column: 2, scope: !7590)
!7596 = !DILocation(line: 2994, column: 10, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 2994, column: 3)
!7598 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 2993, column: 50)
!7599 = !DILocation(line: 2994, column: 8, scope: !7597)
!7600 = !DILocation(line: 2994, column: 15, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 2994, column: 3)
!7602 = !DILocation(line: 2994, column: 33, scope: !7601)
!7603 = !DILocation(line: 2994, column: 19, scope: !7601)
!7604 = !DILocation(line: 2994, column: 37, scope: !7601)
!7605 = !DILocation(line: 2994, column: 17, scope: !7601)
!7606 = !DILocation(line: 2994, column: 3, scope: !7597)
!7607 = !DILocation(line: 2995, column: 16, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 2995, column: 8)
!7609 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 2994, column: 50)
!7610 = !DILocation(line: 2995, column: 36, scope: !7608)
!7611 = !DILocation(line: 2995, column: 22, scope: !7608)
!7612 = !DILocation(line: 2995, column: 40, scope: !7608)
!7613 = !DILocation(line: 2995, column: 46, scope: !7608)
!7614 = !DILocation(line: 2995, column: 49, scope: !7608)
!7615 = !DILocation(line: 2995, column: 9, scope: !7608)
!7616 = !DILocation(line: 2995, column: 8, scope: !7609)
!7617 = !DILocation(line: 2996, column: 39, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 2995, column: 56)
!7619 = !DILocation(line: 2996, column: 25, scope: !7618)
!7620 = !DILocation(line: 2996, column: 5, scope: !7618)
!7621 = !DILocation(line: 2996, column: 10, scope: !7618)
!7622 = !DILocation(line: 2996, column: 23, scope: !7618)
!7623 = !DILocation(line: 2997, column: 27, scope: !7618)
!7624 = !DILocation(line: 2997, column: 13, scope: !7618)
!7625 = !DILocation(line: 2997, column: 31, scope: !7618)
!7626 = !DILocation(line: 2997, column: 37, scope: !7618)
!7627 = !DILocation(line: 2997, column: 5, scope: !7618)
!7628 = !DILocation(line: 2999, column: 3, scope: !7609)
!7629 = !DILocation(line: 2994, column: 46, scope: !7601)
!7630 = !DILocation(line: 2994, column: 3, scope: !7601)
!7631 = distinct !{!7631, !7606, !7632}
!7632 = !DILocation(line: 2999, column: 3, scope: !7597)
!7633 = !DILocation(line: 3000, column: 2, scope: !7598)
!7634 = !DILocation(line: 2993, column: 46, scope: !7593)
!7635 = !DILocation(line: 2993, column: 2, scope: !7593)
!7636 = distinct !{!7636, !7595, !7637}
!7637 = !DILocation(line: 3000, column: 2, scope: !7590)
!7638 = !DILocation(line: 3002, column: 2, scope: !7580)
!7639 = !DILocation(line: 3003, column: 1, scope: !7580)
!7640 = distinct !DISubprogram(name: "spi_nor_read_id", scope: !3, file: !3, line: 2044, type: !7641, scopeLine: 2045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7641 = !DISubroutineType(types: !7642)
!7642 = !{!4442, !4103}
!7643 = !DILocalVariable(name: "nor", arg: 1, scope: !7640, file: !3, line: 2044, type: !4103)
!7644 = !DILocation(line: 2044, column: 65, scope: !7640)
!7645 = !DILocalVariable(name: "info", scope: !7640, file: !3, line: 2046, type: !4442)
!7646 = !DILocation(line: 2046, column: 27, scope: !7640)
!7647 = !DILocalVariable(name: "id", scope: !7640, file: !3, line: 2047, type: !4439)
!7648 = !DILocation(line: 2047, column: 6, scope: !7640)
!7649 = !DILocation(line: 2047, column: 11, scope: !7640)
!7650 = !DILocation(line: 2047, column: 16, scope: !7640)
!7651 = !DILocalVariable(name: "i", scope: !7640, file: !3, line: 2048, type: !15)
!7652 = !DILocation(line: 2048, column: 15, scope: !7640)
!7653 = !DILocalVariable(name: "ret", scope: !7640, file: !3, line: 2049, type: !182)
!7654 = !DILocation(line: 2049, column: 6, scope: !7640)
!7655 = !DILocation(line: 2051, column: 6, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 2051, column: 6)
!7657 = !DILocation(line: 2051, column: 11, scope: !7656)
!7658 = !DILocation(line: 2051, column: 6, scope: !7640)
!7659 = !DILocalVariable(name: "op", scope: !7660, file: !3, line: 2052, type: !4302)
!7660 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 2051, column: 19)
!7661 = !DILocation(line: 2052, column: 21, scope: !7660)
!7662 = !DILocation(line: 2053, column: 4, scope: !7660)
!7663 = !DILocation(line: 2058, column: 25, scope: !7660)
!7664 = !DILocation(line: 2058, column: 30, scope: !7660)
!7665 = !DILocation(line: 2058, column: 9, scope: !7660)
!7666 = !DILocation(line: 2058, column: 7, scope: !7660)
!7667 = !DILocation(line: 2059, column: 2, scope: !7660)
!7668 = !DILocation(line: 2060, column: 9, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 2059, column: 9)
!7670 = !DILocation(line: 2060, column: 14, scope: !7669)
!7671 = !DILocation(line: 2060, column: 30, scope: !7669)
!7672 = !DILocation(line: 2060, column: 39, scope: !7669)
!7673 = !DILocation(line: 2060, column: 60, scope: !7669)
!7674 = !DILocation(line: 2060, column: 7, scope: !7669)
!7675 = !DILocation(line: 2063, column: 6, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 2063, column: 6)
!7677 = !DILocation(line: 2063, column: 6, scope: !7640)
!7678 = !DILocation(line: 2065, column: 18, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 2063, column: 11)
!7680 = !DILocation(line: 2065, column: 10, scope: !7679)
!7681 = !DILocation(line: 2065, column: 3, scope: !7679)
!7682 = !DILocation(line: 2068, column: 9, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 2068, column: 2)
!7684 = !DILocation(line: 2068, column: 7, scope: !7683)
!7685 = !DILocation(line: 2068, column: 14, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 2068, column: 2)
!7687 = !DILocation(line: 2068, column: 16, scope: !7686)
!7688 = !DILocation(line: 2068, column: 2, scope: !7683)
!7689 = !DILocation(line: 2069, column: 50, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7686, file: !3, line: 2068, column: 50)
!7691 = !DILocation(line: 2069, column: 36, scope: !7690)
!7692 = !DILocation(line: 2069, column: 54, scope: !7690)
!7693 = !DILocation(line: 2070, column: 22, scope: !7690)
!7694 = !DILocation(line: 2070, column: 8, scope: !7690)
!7695 = !DILocation(line: 2070, column: 26, scope: !7690)
!7696 = !DILocation(line: 2071, column: 8, scope: !7690)
!7697 = !DILocation(line: 2069, column: 10, scope: !7690)
!7698 = !DILocation(line: 2069, column: 8, scope: !7690)
!7699 = !DILocation(line: 2072, column: 7, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 2072, column: 7)
!7701 = !DILocation(line: 2072, column: 7, scope: !7690)
!7702 = !DILocation(line: 2073, column: 38, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7700, file: !3, line: 2072, column: 13)
!7704 = !DILocation(line: 2073, column: 24, scope: !7703)
!7705 = !DILocation(line: 2073, column: 4, scope: !7703)
!7706 = !DILocation(line: 2073, column: 9, scope: !7703)
!7707 = !DILocation(line: 2073, column: 22, scope: !7703)
!7708 = !DILocation(line: 2074, column: 11, scope: !7703)
!7709 = !DILocation(line: 2074, column: 4, scope: !7703)
!7710 = !DILocation(line: 2076, column: 2, scope: !7690)
!7711 = !DILocation(line: 2068, column: 46, scope: !7686)
!7712 = !DILocation(line: 2068, column: 2, scope: !7686)
!7713 = distinct !{!7713, !7688, !7714}
!7714 = !DILocation(line: 2076, column: 2, scope: !7683)
!7715 = !DILocation(line: 2078, column: 2, scope: !7640)
!7716 = !DILocation(line: 2080, column: 9, scope: !7640)
!7717 = !DILocation(line: 2080, column: 2, scope: !7640)
!7718 = !DILocation(line: 2081, column: 1, scope: !7640)
!7719 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !6339, file: !6339, line: 39, type: !6340, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7720 = !DILocalVariable(name: "ptr", arg: 1, scope: !7719, file: !6339, line: 39, type: !1921)
!7721 = !DILocation(line: 39, column: 68, scope: !7719)
!7722 = !DILocation(line: 41, column: 9, scope: !7719)
!7723 = !DILocation(line: 41, column: 24, scope: !7719)
!7724 = !DILocation(line: 41, column: 27, scope: !7719)
!7725 = !DILocation(line: 41, column: 2, scope: !7719)
!7726 = distinct !DISubprogram(name: "ERR_PTR", scope: !6339, file: !6339, line: 24, type: !7727, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7727 = !DISubroutineType(types: !7728)
!7728 = !{!204, !202}
!7729 = !DILocalVariable(name: "error", arg: 1, scope: !7726, file: !6339, line: 24, type: !202)
!7730 = !DILocation(line: 24, column: 48, scope: !7726)
!7731 = !DILocation(line: 26, column: 18, scope: !7726)
!7732 = !DILocation(line: 26, column: 9, scope: !7726)
!7733 = !DILocation(line: 26, column: 2, scope: !7726)
!7734 = distinct !DISubprogram(name: "spi_nor_search_part_by_id", scope: !3, file: !3, line: 2030, type: !7735, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{!4442, !4442, !15, !4596}
!7737 = !DILocalVariable(name: "parts", arg: 1, scope: !7734, file: !3, line: 2030, type: !4442)
!7738 = !DILocation(line: 2030, column: 52, scope: !7734)
!7739 = !DILocalVariable(name: "nparts", arg: 2, scope: !7734, file: !3, line: 2030, type: !15)
!7740 = !DILocation(line: 2030, column: 72, scope: !7734)
!7741 = !DILocalVariable(name: "id", arg: 3, scope: !7734, file: !3, line: 2031, type: !4596)
!7742 = !DILocation(line: 2031, column: 16, scope: !7734)
!7743 = !DILocalVariable(name: "i", scope: !7734, file: !3, line: 2033, type: !15)
!7744 = !DILocation(line: 2033, column: 15, scope: !7734)
!7745 = !DILocation(line: 2035, column: 9, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 2035, column: 2)
!7747 = !DILocation(line: 2035, column: 7, scope: !7746)
!7748 = !DILocation(line: 2035, column: 14, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 2035, column: 2)
!7750 = !DILocation(line: 2035, column: 18, scope: !7749)
!7751 = !DILocation(line: 2035, column: 16, scope: !7749)
!7752 = !DILocation(line: 2035, column: 2, scope: !7746)
!7753 = !DILocation(line: 2036, column: 7, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 2036, column: 7)
!7755 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 2035, column: 31)
!7756 = !DILocation(line: 2036, column: 13, scope: !7754)
!7757 = !DILocation(line: 2036, column: 16, scope: !7754)
!7758 = !DILocation(line: 2036, column: 23, scope: !7754)
!7759 = !DILocation(line: 2037, column: 15, scope: !7754)
!7760 = !DILocation(line: 2037, column: 21, scope: !7754)
!7761 = !DILocation(line: 2037, column: 24, scope: !7754)
!7762 = !DILocation(line: 2037, column: 28, scope: !7754)
!7763 = !DILocation(line: 2037, column: 32, scope: !7754)
!7764 = !DILocation(line: 2037, column: 38, scope: !7754)
!7765 = !DILocation(line: 2037, column: 41, scope: !7754)
!7766 = !DILocation(line: 2037, column: 8, scope: !7754)
!7767 = !DILocation(line: 2036, column: 7, scope: !7755)
!7768 = !DILocation(line: 2038, column: 12, scope: !7754)
!7769 = !DILocation(line: 2038, column: 18, scope: !7754)
!7770 = !DILocation(line: 2038, column: 4, scope: !7754)
!7771 = !DILocation(line: 2039, column: 2, scope: !7755)
!7772 = !DILocation(line: 2035, column: 27, scope: !7749)
!7773 = !DILocation(line: 2035, column: 2, scope: !7749)
!7774 = distinct !{!7774, !7752, !7775}
!7775 = !DILocation(line: 2039, column: 2, scope: !7746)
!7776 = !DILocation(line: 2041, column: 2, scope: !7734)
!7777 = !DILocation(line: 2042, column: 1, scope: !7734)
!7778 = distinct !DISubprogram(name: "mtd_to_spi_nor", scope: !125, file: !125, line: 436, type: !7779, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7779 = !DISubroutineType(types: !7780)
!7780 = !{!4103, !1024}
!7781 = !DILocalVariable(name: "mtd", arg: 1, scope: !7778, file: !125, line: 436, type: !1024)
!7782 = !DILocation(line: 436, column: 71, scope: !7778)
!7783 = !DILocation(line: 438, column: 9, scope: !7778)
!7784 = !DILocation(line: 438, column: 14, scope: !7778)
!7785 = !DILocation(line: 438, column: 2, scope: !7778)
!7786 = distinct !DISubprogram(name: "spi_nor_convert_addr", scope: !3, file: !3, line: 1123, type: !7787, scopeLine: 1124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7787 = !DISubroutineType(types: !7788)
!7788 = !{!198, !4103, !674}
!7789 = !DILocalVariable(name: "nor", arg: 1, scope: !7786, file: !3, line: 1123, type: !4103)
!7790 = !DILocation(line: 1123, column: 49, scope: !7786)
!7791 = !DILocalVariable(name: "addr", arg: 2, scope: !7786, file: !3, line: 1123, type: !674)
!7792 = !DILocation(line: 1123, column: 61, scope: !7786)
!7793 = !DILocation(line: 1125, column: 7, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7786, file: !3, line: 1125, column: 6)
!7795 = !DILocation(line: 1125, column: 12, scope: !7794)
!7796 = !DILocation(line: 1125, column: 20, scope: !7794)
!7797 = !DILocation(line: 1125, column: 6, scope: !7786)
!7798 = !DILocation(line: 1126, column: 10, scope: !7794)
!7799 = !DILocation(line: 1126, column: 3, scope: !7794)
!7800 = !DILocation(line: 1128, column: 9, scope: !7786)
!7801 = !DILocation(line: 1128, column: 14, scope: !7786)
!7802 = !DILocation(line: 1128, column: 22, scope: !7786)
!7803 = !DILocation(line: 1128, column: 35, scope: !7786)
!7804 = !DILocation(line: 1128, column: 40, scope: !7786)
!7805 = !DILocation(line: 1128, column: 2, scope: !7786)
!7806 = !DILocation(line: 1129, column: 1, scope: !7786)
!7807 = distinct !DISubprogram(name: "devm_kzalloc", scope: !81, file: !81, line: 215, type: !7808, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7808 = !DISubroutineType(types: !7809)
!7809 = !{!204, !2099, !1108, !183}
!7810 = !DILocalVariable(name: "dev", arg: 1, scope: !7807, file: !81, line: 215, type: !2099)
!7811 = !DILocation(line: 215, column: 49, scope: !7807)
!7812 = !DILocalVariable(name: "size", arg: 2, scope: !7807, file: !81, line: 215, type: !1108)
!7813 = !DILocation(line: 215, column: 61, scope: !7807)
!7814 = !DILocalVariable(name: "gfp", arg: 3, scope: !7807, file: !81, line: 215, type: !183)
!7815 = !DILocation(line: 215, column: 73, scope: !7807)
!7816 = !DILocation(line: 217, column: 22, scope: !7807)
!7817 = !DILocation(line: 217, column: 27, scope: !7807)
!7818 = !DILocation(line: 217, column: 33, scope: !7807)
!7819 = !DILocation(line: 217, column: 37, scope: !7807)
!7820 = !DILocation(line: 217, column: 9, scope: !7807)
!7821 = !DILocation(line: 217, column: 2, scope: !7807)
!7822 = distinct !DISubprogram(name: "spi_nor_info_init_params", scope: !3, file: !3, line: 2716, type: !4462, scopeLine: 2717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!7823 = !DILocalVariable(name: "nor", arg: 1, scope: !7822, file: !3, line: 2716, type: !4103)
!7824 = !DILocation(line: 2716, column: 54, scope: !7822)
!7825 = !DILocalVariable(name: "params", scope: !7822, file: !3, line: 2718, type: !4485)
!7826 = !DILocation(line: 2718, column: 34, scope: !7822)
!7827 = !DILocation(line: 2718, column: 43, scope: !7822)
!7828 = !DILocation(line: 2718, column: 48, scope: !7822)
!7829 = !DILocalVariable(name: "map", scope: !7822, file: !3, line: 2719, type: !5803)
!7830 = !DILocation(line: 2719, column: 28, scope: !7822)
!7831 = !DILocation(line: 2719, column: 35, scope: !7822)
!7832 = !DILocation(line: 2719, column: 43, scope: !7822)
!7833 = !DILocalVariable(name: "info", scope: !7822, file: !3, line: 2720, type: !4442)
!7834 = !DILocation(line: 2720, column: 27, scope: !7822)
!7835 = !DILocation(line: 2720, column: 34, scope: !7822)
!7836 = !DILocation(line: 2720, column: 39, scope: !7822)
!7837 = !DILocalVariable(name: "np", scope: !7822, file: !3, line: 2721, type: !2426)
!7838 = !DILocation(line: 2721, column: 22, scope: !7822)
!7839 = !DILocation(line: 2721, column: 50, scope: !7822)
!7840 = !DILocation(line: 2721, column: 27, scope: !7822)
!7841 = !DILocalVariable(name: "i", scope: !7822, file: !3, line: 2722, type: !6)
!7842 = !DILocation(line: 2722, column: 5, scope: !7822)
!7843 = !DILocalVariable(name: "erase_mask", scope: !7822, file: !3, line: 2722, type: !6)
!7844 = !DILocation(line: 2722, column: 8, scope: !7822)
!7845 = !DILocation(line: 2725, column: 2, scope: !7822)
!7846 = !DILocation(line: 2725, column: 10, scope: !7822)
!7847 = !DILocation(line: 2725, column: 22, scope: !7822)
!7848 = !DILocation(line: 2726, column: 2, scope: !7822)
!7849 = !DILocation(line: 2726, column: 10, scope: !7822)
!7850 = !DILocation(line: 2726, column: 30, scope: !7822)
!7851 = !DILocation(line: 2727, column: 2, scope: !7822)
!7852 = !DILocation(line: 2727, column: 10, scope: !7822)
!7853 = !DILocation(line: 2727, column: 16, scope: !7822)
!7854 = !DILocation(line: 2729, column: 2, scope: !7822)
!7855 = !DILocation(line: 2729, column: 7, scope: !7822)
!7856 = !DILocation(line: 2729, column: 13, scope: !7822)
!7857 = !DILocation(line: 2732, column: 22, scope: !7822)
!7858 = !DILocation(line: 2732, column: 28, scope: !7822)
!7859 = !DILocation(line: 2732, column: 17, scope: !7822)
!7860 = !DILocation(line: 2732, column: 42, scope: !7822)
!7861 = !DILocation(line: 2732, column: 48, scope: !7822)
!7862 = !DILocation(line: 2732, column: 40, scope: !7822)
!7863 = !DILocation(line: 2732, column: 2, scope: !7822)
!7864 = !DILocation(line: 2732, column: 10, scope: !7822)
!7865 = !DILocation(line: 2732, column: 15, scope: !7822)
!7866 = !DILocation(line: 2733, column: 22, scope: !7822)
!7867 = !DILocation(line: 2733, column: 28, scope: !7822)
!7868 = !DILocation(line: 2733, column: 2, scope: !7822)
!7869 = !DILocation(line: 2733, column: 10, scope: !7822)
!7870 = !DILocation(line: 2733, column: 20, scope: !7822)
!7871 = !DILocation(line: 2735, column: 8, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 2735, column: 6)
!7873 = !DILocation(line: 2735, column: 14, scope: !7872)
!7874 = !DILocation(line: 2735, column: 20, scope: !7872)
!7875 = !DILocation(line: 2735, column: 6, scope: !7822)
!7876 = !DILocation(line: 2737, column: 3, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 2735, column: 38)
!7878 = !DILocation(line: 2737, column: 11, scope: !7877)
!7879 = !DILocation(line: 2737, column: 18, scope: !7877)
!7880 = !DILocation(line: 2737, column: 23, scope: !7877)
!7881 = !DILocation(line: 2740, column: 7, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 2740, column: 7)
!7883 = !DILocation(line: 2740, column: 10, scope: !7882)
!7884 = !DILocation(line: 2740, column: 36, scope: !7882)
!7885 = !DILocation(line: 2740, column: 14, scope: !7882)
!7886 = !DILocation(line: 2740, column: 7, scope: !7877)
!7887 = !DILocation(line: 2741, column: 4, scope: !7882)
!7888 = !DILocation(line: 2741, column: 12, scope: !7882)
!7889 = !DILocation(line: 2741, column: 19, scope: !7882)
!7890 = !DILocation(line: 2741, column: 24, scope: !7882)
!7891 = !DILocation(line: 2742, column: 2, scope: !7877)
!7892 = !DILocation(line: 2745, column: 2, scope: !7822)
!7893 = !DILocation(line: 2745, column: 10, scope: !7822)
!7894 = !DILocation(line: 2745, column: 17, scope: !7822)
!7895 = !DILocation(line: 2745, column: 22, scope: !7822)
!7896 = !DILocation(line: 2746, column: 29, scope: !7822)
!7897 = !DILocation(line: 2746, column: 37, scope: !7822)
!7898 = !DILocation(line: 2746, column: 2, scope: !7822)
!7899 = !DILocation(line: 2750, column: 6, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 2750, column: 6)
!7901 = !DILocation(line: 2750, column: 14, scope: !7900)
!7902 = !DILocation(line: 2750, column: 21, scope: !7900)
!7903 = !DILocation(line: 2750, column: 26, scope: !7900)
!7904 = !DILocation(line: 2750, column: 6, scope: !7822)
!7905 = !DILocation(line: 2751, column: 30, scope: !7900)
!7906 = !DILocation(line: 2751, column: 38, scope: !7900)
!7907 = !DILocation(line: 2751, column: 3, scope: !7900)
!7908 = !DILocation(line: 2755, column: 6, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 2755, column: 6)
!7910 = !DILocation(line: 2755, column: 12, scope: !7909)
!7911 = !DILocation(line: 2755, column: 18, scope: !7909)
!7912 = !DILocation(line: 2755, column: 6, scope: !7822)
!7913 = !DILocation(line: 2756, column: 3, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 2755, column: 39)
!7915 = !DILocation(line: 2756, column: 11, scope: !7914)
!7916 = !DILocation(line: 2756, column: 18, scope: !7914)
!7917 = !DILocation(line: 2756, column: 23, scope: !7914)
!7918 = !DILocation(line: 2757, column: 30, scope: !7914)
!7919 = !DILocation(line: 2757, column: 38, scope: !7914)
!7920 = !DILocation(line: 2757, column: 3, scope: !7914)
!7921 = !DILocation(line: 2760, column: 2, scope: !7914)
!7922 = !DILocation(line: 2762, column: 6, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 2762, column: 6)
!7924 = !DILocation(line: 2762, column: 12, scope: !7923)
!7925 = !DILocation(line: 2762, column: 18, scope: !7923)
!7926 = !DILocation(line: 2762, column: 6, scope: !7822)
!7927 = !DILocation(line: 2763, column: 3, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 2762, column: 39)
!7929 = !DILocation(line: 2763, column: 11, scope: !7928)
!7930 = !DILocation(line: 2763, column: 18, scope: !7928)
!7931 = !DILocation(line: 2763, column: 23, scope: !7928)
!7932 = !DILocation(line: 2764, column: 30, scope: !7928)
!7933 = !DILocation(line: 2764, column: 38, scope: !7928)
!7934 = !DILocation(line: 2764, column: 3, scope: !7928)
!7935 = !DILocation(line: 2767, column: 2, scope: !7928)
!7936 = !DILocation(line: 2769, column: 6, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 2769, column: 6)
!7938 = !DILocation(line: 2769, column: 12, scope: !7937)
!7939 = !DILocation(line: 2769, column: 18, scope: !7937)
!7940 = !DILocation(line: 2769, column: 6, scope: !7822)
!7941 = !DILocation(line: 2770, column: 3, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 2769, column: 40)
!7943 = !DILocation(line: 2770, column: 11, scope: !7942)
!7944 = !DILocation(line: 2770, column: 18, scope: !7942)
!7945 = !DILocation(line: 2770, column: 23, scope: !7942)
!7946 = !DILocation(line: 2771, column: 30, scope: !7942)
!7947 = !DILocation(line: 2771, column: 38, scope: !7942)
!7948 = !DILocation(line: 2771, column: 3, scope: !7942)
!7949 = !DILocation(line: 2774, column: 2, scope: !7942)
!7950 = !DILocation(line: 2777, column: 2, scope: !7822)
!7951 = !DILocation(line: 2777, column: 10, scope: !7822)
!7952 = !DILocation(line: 2777, column: 17, scope: !7822)
!7953 = !DILocation(line: 2777, column: 22, scope: !7822)
!7954 = !DILocation(line: 2778, column: 27, scope: !7822)
!7955 = !DILocation(line: 2778, column: 35, scope: !7822)
!7956 = !DILocation(line: 2778, column: 2, scope: !7822)
!7957 = !DILocation(line: 2785, column: 13, scope: !7822)
!7958 = !DILocation(line: 2786, column: 4, scope: !7822)
!7959 = !DILocation(line: 2787, column: 6, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 2787, column: 6)
!7961 = !DILocation(line: 2787, column: 12, scope: !7960)
!7962 = !DILocation(line: 2787, column: 18, scope: !7960)
!7963 = !DILocation(line: 2787, column: 6, scope: !7822)
!7964 = !DILocation(line: 2788, column: 17, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7960, file: !3, line: 2787, column: 33)
!7966 = !DILocation(line: 2788, column: 14, scope: !7965)
!7967 = !DILocation(line: 2789, column: 27, scope: !7965)
!7968 = !DILocation(line: 2789, column: 32, scope: !7965)
!7969 = !DILocation(line: 2789, column: 43, scope: !7965)
!7970 = !DILocation(line: 2789, column: 3, scope: !7965)
!7971 = !DILocation(line: 2791, column: 4, scope: !7965)
!7972 = !DILocation(line: 2792, column: 2, scope: !7965)
!7973 = !DILocation(line: 2792, column: 13, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7960, file: !3, line: 2792, column: 13)
!7975 = !DILocation(line: 2792, column: 19, scope: !7974)
!7976 = !DILocation(line: 2792, column: 25, scope: !7974)
!7977 = !DILocation(line: 2792, column: 13, scope: !7960)
!7978 = !DILocation(line: 2793, column: 17, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 2792, column: 36)
!7980 = !DILocation(line: 2793, column: 14, scope: !7979)
!7981 = !DILocation(line: 2794, column: 27, scope: !7979)
!7982 = !DILocation(line: 2794, column: 32, scope: !7979)
!7983 = !DILocation(line: 2794, column: 43, scope: !7979)
!7984 = !DILocation(line: 2794, column: 3, scope: !7979)
!7985 = !DILocation(line: 2796, column: 4, scope: !7979)
!7986 = !DILocation(line: 2797, column: 2, scope: !7979)
!7987 = !DILocation(line: 2798, column: 16, scope: !7822)
!7988 = !DILocation(line: 2798, column: 13, scope: !7822)
!7989 = !DILocation(line: 2799, column: 26, scope: !7822)
!7990 = !DILocation(line: 2799, column: 31, scope: !7822)
!7991 = !DILocation(line: 2799, column: 42, scope: !7822)
!7992 = !DILocation(line: 2799, column: 46, scope: !7822)
!7993 = !DILocation(line: 2799, column: 52, scope: !7822)
!7994 = !DILocation(line: 2799, column: 2, scope: !7822)
!7995 = !DILocation(line: 2801, column: 33, scope: !7822)
!7996 = !DILocation(line: 2801, column: 38, scope: !7822)
!7997 = !DILocation(line: 2801, column: 50, scope: !7822)
!7998 = !DILocation(line: 2801, column: 58, scope: !7822)
!7999 = !DILocation(line: 2801, column: 2, scope: !7822)
!8000 = !DILocation(line: 2802, column: 1, scope: !7822)
!8001 = distinct !DISubprogram(name: "spi_nor_manufacturer_init_params", scope: !3, file: !3, line: 2680, type: !4462, scopeLine: 2681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8002 = !DILocalVariable(name: "nor", arg: 1, scope: !8001, file: !3, line: 2680, type: !4103)
!8003 = !DILocation(line: 2680, column: 62, scope: !8001)
!8004 = !DILocation(line: 2682, column: 6, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 2682, column: 6)
!8006 = !DILocation(line: 2682, column: 11, scope: !8005)
!8007 = !DILocation(line: 2682, column: 24, scope: !8005)
!8008 = !DILocation(line: 2682, column: 27, scope: !8005)
!8009 = !DILocation(line: 2682, column: 32, scope: !8005)
!8010 = !DILocation(line: 2682, column: 46, scope: !8005)
!8011 = !DILocation(line: 2682, column: 53, scope: !8005)
!8012 = !DILocation(line: 2683, column: 6, scope: !8005)
!8013 = !DILocation(line: 2683, column: 11, scope: !8005)
!8014 = !DILocation(line: 2683, column: 25, scope: !8005)
!8015 = !DILocation(line: 2683, column: 33, scope: !8005)
!8016 = !DILocation(line: 2682, column: 6, scope: !8001)
!8017 = !DILocation(line: 2684, column: 3, scope: !8005)
!8018 = !DILocation(line: 2684, column: 8, scope: !8005)
!8019 = !DILocation(line: 2684, column: 22, scope: !8005)
!8020 = !DILocation(line: 2684, column: 30, scope: !8005)
!8021 = !DILocation(line: 2684, column: 43, scope: !8005)
!8022 = !DILocation(line: 2686, column: 6, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 2686, column: 6)
!8024 = !DILocation(line: 2686, column: 11, scope: !8023)
!8025 = !DILocation(line: 2686, column: 17, scope: !8023)
!8026 = !DILocation(line: 2686, column: 24, scope: !8023)
!8027 = !DILocation(line: 2686, column: 27, scope: !8023)
!8028 = !DILocation(line: 2686, column: 32, scope: !8023)
!8029 = !DILocation(line: 2686, column: 38, scope: !8023)
!8030 = !DILocation(line: 2686, column: 46, scope: !8023)
!8031 = !DILocation(line: 2686, column: 6, scope: !8001)
!8032 = !DILocation(line: 2687, column: 3, scope: !8023)
!8033 = !DILocation(line: 2687, column: 8, scope: !8023)
!8034 = !DILocation(line: 2687, column: 14, scope: !8023)
!8035 = !DILocation(line: 2687, column: 22, scope: !8023)
!8036 = !DILocation(line: 2687, column: 35, scope: !8023)
!8037 = !DILocation(line: 2688, column: 1, scope: !8001)
!8038 = distinct !DISubprogram(name: "spi_nor_sfdp_init_params", scope: !3, file: !3, line: 2698, type: !4462, scopeLine: 2699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8039 = !DILocalVariable(name: "nor", arg: 1, scope: !8038, file: !3, line: 2698, type: !4103)
!8040 = !DILocation(line: 2698, column: 54, scope: !8038)
!8041 = !DILocalVariable(name: "sfdp_params", scope: !8038, file: !3, line: 2700, type: !4486)
!8042 = !DILocation(line: 2700, column: 33, scope: !8038)
!8043 = !DILocation(line: 2702, column: 2, scope: !8038)
!8044 = !DILocation(line: 2702, column: 23, scope: !8038)
!8045 = !DILocation(line: 2702, column: 28, scope: !8038)
!8046 = !DILocation(line: 2704, column: 25, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 2704, column: 6)
!8048 = !DILocation(line: 2704, column: 30, scope: !8047)
!8049 = !DILocation(line: 2704, column: 35, scope: !8047)
!8050 = !DILocation(line: 2704, column: 6, scope: !8047)
!8051 = !DILocation(line: 2704, column: 6, scope: !8038)
!8052 = !DILocation(line: 2705, column: 10, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 2704, column: 44)
!8054 = !DILocation(line: 2705, column: 15, scope: !8053)
!8055 = !DILocation(line: 2705, column: 3, scope: !8053)
!8056 = !DILocation(line: 2706, column: 3, scope: !8053)
!8057 = !DILocation(line: 2706, column: 8, scope: !8053)
!8058 = !DILocation(line: 2706, column: 19, scope: !8053)
!8059 = !DILocation(line: 2707, column: 3, scope: !8053)
!8060 = !DILocation(line: 2707, column: 8, scope: !8053)
!8061 = !DILocation(line: 2707, column: 14, scope: !8053)
!8062 = !DILocation(line: 2708, column: 2, scope: !8053)
!8063 = !DILocation(line: 2709, column: 1, scope: !8038)
!8064 = distinct !DISubprogram(name: "spi_nor_post_sfdp_fixups", scope: !3, file: !3, line: 2814, type: !4462, scopeLine: 2815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8065 = !DILocalVariable(name: "nor", arg: 1, scope: !8064, file: !3, line: 2814, type: !4103)
!8066 = !DILocation(line: 2814, column: 54, scope: !8064)
!8067 = !DILocation(line: 2816, column: 6, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 2816, column: 6)
!8069 = !DILocation(line: 2816, column: 11, scope: !8068)
!8070 = !DILocation(line: 2816, column: 24, scope: !8068)
!8071 = !DILocation(line: 2816, column: 27, scope: !8068)
!8072 = !DILocation(line: 2816, column: 32, scope: !8068)
!8073 = !DILocation(line: 2816, column: 46, scope: !8068)
!8074 = !DILocation(line: 2816, column: 53, scope: !8068)
!8075 = !DILocation(line: 2817, column: 6, scope: !8068)
!8076 = !DILocation(line: 2817, column: 11, scope: !8068)
!8077 = !DILocation(line: 2817, column: 25, scope: !8068)
!8078 = !DILocation(line: 2817, column: 33, scope: !8068)
!8079 = !DILocation(line: 2816, column: 6, scope: !8064)
!8080 = !DILocation(line: 2818, column: 3, scope: !8068)
!8081 = !DILocation(line: 2818, column: 8, scope: !8068)
!8082 = !DILocation(line: 2818, column: 22, scope: !8068)
!8083 = !DILocation(line: 2818, column: 30, scope: !8068)
!8084 = !DILocation(line: 2818, column: 40, scope: !8068)
!8085 = !DILocation(line: 2820, column: 6, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 2820, column: 6)
!8087 = !DILocation(line: 2820, column: 11, scope: !8086)
!8088 = !DILocation(line: 2820, column: 17, scope: !8086)
!8089 = !DILocation(line: 2820, column: 24, scope: !8086)
!8090 = !DILocation(line: 2820, column: 27, scope: !8086)
!8091 = !DILocation(line: 2820, column: 32, scope: !8086)
!8092 = !DILocation(line: 2820, column: 38, scope: !8086)
!8093 = !DILocation(line: 2820, column: 46, scope: !8086)
!8094 = !DILocation(line: 2820, column: 6, scope: !8064)
!8095 = !DILocation(line: 2821, column: 3, scope: !8086)
!8096 = !DILocation(line: 2821, column: 8, scope: !8086)
!8097 = !DILocation(line: 2821, column: 14, scope: !8086)
!8098 = !DILocation(line: 2821, column: 22, scope: !8086)
!8099 = !DILocation(line: 2821, column: 32, scope: !8086)
!8100 = !DILocation(line: 2822, column: 1, scope: !8064)
!8101 = distinct !DISubprogram(name: "spi_nor_late_init_params", scope: !3, file: !3, line: 2831, type: !4462, scopeLine: 2832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8102 = !DILocalVariable(name: "nor", arg: 1, scope: !8101, file: !3, line: 2831, type: !4103)
!8103 = !DILocation(line: 2831, column: 54, scope: !8101)
!8104 = !DILocation(line: 2837, column: 6, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 2837, column: 6)
!8106 = !DILocation(line: 2837, column: 11, scope: !8105)
!8107 = !DILocation(line: 2837, column: 17, scope: !8105)
!8108 = !DILocation(line: 2837, column: 35, scope: !8105)
!8109 = !DILocation(line: 2837, column: 39, scope: !8105)
!8110 = !DILocation(line: 2837, column: 44, scope: !8105)
!8111 = !DILocation(line: 2837, column: 52, scope: !8105)
!8112 = !DILocation(line: 2837, column: 6, scope: !8101)
!8113 = !DILocation(line: 2838, column: 3, scope: !8105)
!8114 = !DILocation(line: 2838, column: 8, scope: !8105)
!8115 = !DILocation(line: 2838, column: 16, scope: !8105)
!8116 = !DILocation(line: 2838, column: 28, scope: !8105)
!8117 = !DILocation(line: 2839, column: 1, scope: !8101)
!8118 = distinct !DISubprogram(name: "spansion_set_4byte_addr_mode", scope: !3, file: !3, line: 409, type: !4537, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8119 = !DILocalVariable(name: "nor", arg: 1, scope: !8118, file: !3, line: 409, type: !4103)
!8120 = !DILocation(line: 409, column: 57, scope: !8118)
!8121 = !DILocalVariable(name: "enable", arg: 2, scope: !8118, file: !3, line: 409, type: !655)
!8122 = !DILocation(line: 409, column: 67, scope: !8118)
!8123 = !DILocalVariable(name: "ret", scope: !8118, file: !3, line: 411, type: !182)
!8124 = !DILocation(line: 411, column: 6, scope: !8118)
!8125 = !DILocation(line: 413, column: 22, scope: !8118)
!8126 = !DILocation(line: 413, column: 29, scope: !8118)
!8127 = !DILocation(line: 413, column: 2, scope: !8118)
!8128 = !DILocation(line: 413, column: 7, scope: !8118)
!8129 = !DILocation(line: 413, column: 20, scope: !8118)
!8130 = !DILocation(line: 415, column: 6, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 415, column: 6)
!8132 = !DILocation(line: 415, column: 11, scope: !8131)
!8133 = !DILocation(line: 415, column: 6, scope: !8118)
!8134 = !DILocalVariable(name: "op", scope: !8135, file: !3, line: 416, type: !4302)
!8135 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 415, column: 19)
!8136 = !DILocation(line: 416, column: 21, scope: !8135)
!8137 = !DILocation(line: 417, column: 4, scope: !8135)
!8138 = !DILocation(line: 422, column: 25, scope: !8135)
!8139 = !DILocation(line: 422, column: 30, scope: !8135)
!8140 = !DILocation(line: 422, column: 9, scope: !8135)
!8141 = !DILocation(line: 422, column: 7, scope: !8135)
!8142 = !DILocation(line: 423, column: 2, scope: !8135)
!8143 = !DILocation(line: 424, column: 9, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 423, column: 9)
!8145 = !DILocation(line: 424, column: 14, scope: !8144)
!8146 = !DILocation(line: 424, column: 30, scope: !8144)
!8147 = !DILocation(line: 424, column: 40, scope: !8144)
!8148 = !DILocation(line: 425, column: 12, scope: !8144)
!8149 = !DILocation(line: 425, column: 17, scope: !8144)
!8150 = !DILocation(line: 424, column: 7, scope: !8144)
!8151 = !DILocation(line: 428, column: 6, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 428, column: 6)
!8153 = !DILocation(line: 428, column: 6, scope: !8118)
!8154 = !DILocation(line: 429, column: 3, scope: !8152)
!8155 = !DILocation(line: 431, column: 9, scope: !8118)
!8156 = !DILocation(line: 431, column: 2, scope: !8118)
!8157 = distinct !DISubprogram(name: "spi_nor_default_setup", scope: !3, file: !3, line: 2605, type: !4545, scopeLine: 2607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8158 = !DILocalVariable(name: "nor", arg: 1, scope: !8157, file: !3, line: 2605, type: !4103)
!8159 = !DILocation(line: 2605, column: 50, scope: !8157)
!8160 = !DILocalVariable(name: "hwcaps", arg: 2, scope: !8157, file: !3, line: 2606, type: !4547)
!8161 = !DILocation(line: 2606, column: 35, scope: !8157)
!8162 = !DILocalVariable(name: "params", scope: !8157, file: !3, line: 2608, type: !4485)
!8163 = !DILocation(line: 2608, column: 34, scope: !8157)
!8164 = !DILocation(line: 2608, column: 43, scope: !8157)
!8165 = !DILocation(line: 2608, column: 48, scope: !8157)
!8166 = !DILocalVariable(name: "ignored_mask", scope: !8157, file: !3, line: 2609, type: !198)
!8167 = !DILocation(line: 2609, column: 6, scope: !8157)
!8168 = !DILocalVariable(name: "shared_mask", scope: !8157, file: !3, line: 2609, type: !198)
!8169 = !DILocation(line: 2609, column: 20, scope: !8157)
!8170 = !DILocalVariable(name: "err", scope: !8157, file: !3, line: 2610, type: !182)
!8171 = !DILocation(line: 2610, column: 6, scope: !8157)
!8172 = !DILocation(line: 2616, column: 16, scope: !8157)
!8173 = !DILocation(line: 2616, column: 24, scope: !8157)
!8174 = !DILocation(line: 2616, column: 31, scope: !8157)
!8175 = !DILocation(line: 2616, column: 39, scope: !8157)
!8176 = !DILocation(line: 2616, column: 46, scope: !8157)
!8177 = !DILocation(line: 2616, column: 29, scope: !8157)
!8178 = !DILocation(line: 2616, column: 14, scope: !8157)
!8179 = !DILocation(line: 2618, column: 6, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 2618, column: 6)
!8181 = !DILocation(line: 2618, column: 11, scope: !8180)
!8182 = !DILocation(line: 2618, column: 6, scope: !8157)
!8183 = !DILocation(line: 2624, column: 32, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 2618, column: 19)
!8185 = !DILocation(line: 2624, column: 3, scope: !8184)
!8186 = !DILocation(line: 2625, column: 2, scope: !8184)
!8187 = !DILocation(line: 2631, column: 16, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 2625, column: 9)
!8189 = !DILocation(line: 2632, column: 7, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 2632, column: 7)
!8191 = !DILocation(line: 2632, column: 21, scope: !8190)
!8192 = !DILocation(line: 2632, column: 19, scope: !8190)
!8193 = !DILocation(line: 2632, column: 7, scope: !8188)
!8194 = !DILocation(line: 2635, column: 20, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 2632, column: 35)
!8196 = !DILocation(line: 2635, column: 19, scope: !8195)
!8197 = !DILocation(line: 2635, column: 16, scope: !8195)
!8198 = !DILocation(line: 2636, column: 3, scope: !8195)
!8199 = !DILocation(line: 2640, column: 28, scope: !8157)
!8200 = !DILocation(line: 2640, column: 33, scope: !8157)
!8201 = !DILocation(line: 2640, column: 8, scope: !8157)
!8202 = !DILocation(line: 2640, column: 6, scope: !8157)
!8203 = !DILocation(line: 2641, column: 6, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 2641, column: 6)
!8205 = !DILocation(line: 2641, column: 6, scope: !8157)
!8206 = !DILocation(line: 2644, column: 10, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 2641, column: 11)
!8208 = !DILocation(line: 2644, column: 3, scope: !8207)
!8209 = !DILocation(line: 2648, column: 26, scope: !8157)
!8210 = !DILocation(line: 2648, column: 31, scope: !8157)
!8211 = !DILocation(line: 2648, column: 8, scope: !8157)
!8212 = !DILocation(line: 2648, column: 6, scope: !8157)
!8213 = !DILocation(line: 2649, column: 6, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 2649, column: 6)
!8215 = !DILocation(line: 2649, column: 6, scope: !8157)
!8216 = !DILocation(line: 2652, column: 10, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 2649, column: 11)
!8218 = !DILocation(line: 2652, column: 3, scope: !8217)
!8219 = !DILocation(line: 2656, column: 29, scope: !8157)
!8220 = !DILocation(line: 2656, column: 8, scope: !8157)
!8221 = !DILocation(line: 2656, column: 6, scope: !8157)
!8222 = !DILocation(line: 2657, column: 6, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 2657, column: 6)
!8224 = !DILocation(line: 2657, column: 6, scope: !8157)
!8225 = !DILocation(line: 2660, column: 10, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 2657, column: 11)
!8227 = !DILocation(line: 2660, column: 3, scope: !8226)
!8228 = !DILocation(line: 2663, column: 2, scope: !8157)
!8229 = !DILocation(line: 2664, column: 1, scope: !8157)
!8230 = distinct !DISubprogram(name: "spi_nor_set_read_settings", scope: !3, file: !3, line: 2208, type: !8231, scopeLine: 2213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8231 = !DISubroutineType(types: !8232)
!8232 = !{null, !8233, !6, !6, !6, !107}
!8233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!8234 = !DILocalVariable(name: "read", arg: 1, scope: !8230, file: !3, line: 2208, type: !8233)
!8235 = !DILocation(line: 2208, column: 56, scope: !8230)
!8236 = !DILocalVariable(name: "num_mode_clocks", arg: 2, scope: !8230, file: !3, line: 2209, type: !6)
!8237 = !DILocation(line: 2209, column: 9, scope: !8230)
!8238 = !DILocalVariable(name: "num_wait_states", arg: 3, scope: !8230, file: !3, line: 2210, type: !6)
!8239 = !DILocation(line: 2210, column: 9, scope: !8230)
!8240 = !DILocalVariable(name: "opcode", arg: 4, scope: !8230, file: !3, line: 2211, type: !6)
!8241 = !DILocation(line: 2211, column: 9, scope: !8230)
!8242 = !DILocalVariable(name: "proto", arg: 5, scope: !8230, file: !3, line: 2212, type: !107)
!8243 = !DILocation(line: 2212, column: 28, scope: !8230)
!8244 = !DILocation(line: 2214, column: 26, scope: !8230)
!8245 = !DILocation(line: 2214, column: 2, scope: !8230)
!8246 = !DILocation(line: 2214, column: 8, scope: !8230)
!8247 = !DILocation(line: 2214, column: 24, scope: !8230)
!8248 = !DILocation(line: 2215, column: 26, scope: !8230)
!8249 = !DILocation(line: 2215, column: 2, scope: !8230)
!8250 = !DILocation(line: 2215, column: 8, scope: !8230)
!8251 = !DILocation(line: 2215, column: 24, scope: !8230)
!8252 = !DILocation(line: 2216, column: 17, scope: !8230)
!8253 = !DILocation(line: 2216, column: 2, scope: !8230)
!8254 = !DILocation(line: 2216, column: 8, scope: !8230)
!8255 = !DILocation(line: 2216, column: 15, scope: !8230)
!8256 = !DILocation(line: 2217, column: 16, scope: !8230)
!8257 = !DILocation(line: 2217, column: 2, scope: !8230)
!8258 = !DILocation(line: 2217, column: 8, scope: !8230)
!8259 = !DILocation(line: 2217, column: 14, scope: !8230)
!8260 = !DILocation(line: 2218, column: 1, scope: !8230)
!8261 = distinct !DISubprogram(name: "spi_nor_spimem_adjust_hwcaps", scope: !3, file: !3, line: 2366, type: !8262, scopeLine: 2367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8262 = !DISubroutineType(types: !8263)
!8263 = !{null, !4103, !3424}
!8264 = !DILocalVariable(name: "nor", arg: 1, scope: !8261, file: !3, line: 2366, type: !4103)
!8265 = !DILocation(line: 2366, column: 46, scope: !8261)
!8266 = !DILocalVariable(name: "hwcaps", arg: 2, scope: !8261, file: !3, line: 2366, type: !3424)
!8267 = !DILocation(line: 2366, column: 56, scope: !8261)
!8268 = !DILocalVariable(name: "params", scope: !8261, file: !3, line: 2368, type: !4485)
!8269 = !DILocation(line: 2368, column: 34, scope: !8261)
!8270 = !DILocation(line: 2368, column: 43, scope: !8261)
!8271 = !DILocation(line: 2368, column: 48, scope: !8261)
!8272 = !DILocalVariable(name: "cap", scope: !8261, file: !3, line: 2369, type: !15)
!8273 = !DILocation(line: 2369, column: 15, scope: !8261)
!8274 = !DILocation(line: 2372, column: 3, scope: !8261)
!8275 = !DILocation(line: 2372, column: 10, scope: !8261)
!8276 = !DILocation(line: 2375, column: 3, scope: !8261)
!8277 = !DILocation(line: 2375, column: 10, scope: !8261)
!8278 = !DILocation(line: 2377, column: 11, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8261, file: !3, line: 2377, column: 2)
!8280 = !DILocation(line: 2377, column: 7, scope: !8279)
!8281 = !DILocation(line: 2377, column: 16, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 2377, column: 2)
!8283 = !DILocation(line: 2377, column: 20, scope: !8282)
!8284 = !DILocation(line: 2377, column: 2, scope: !8279)
!8285 = !DILocalVariable(name: "rdidx", scope: !8286, file: !3, line: 2378, type: !182)
!8286 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 2377, column: 62)
!8287 = !DILocation(line: 2378, column: 7, scope: !8286)
!8288 = !DILocalVariable(name: "ppidx", scope: !8286, file: !3, line: 2378, type: !182)
!8289 = !DILocation(line: 2378, column: 14, scope: !8286)
!8290 = !DILocation(line: 2380, column: 10, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 2380, column: 7)
!8292 = !DILocation(line: 2380, column: 9, scope: !8291)
!8293 = !DILocation(line: 2380, column: 19, scope: !8291)
!8294 = !DILocation(line: 2380, column: 17, scope: !8291)
!8295 = !DILocation(line: 2380, column: 7, scope: !8286)
!8296 = !DILocation(line: 2381, column: 4, scope: !8291)
!8297 = !DILocation(line: 2383, column: 35, scope: !8286)
!8298 = !DILocation(line: 2383, column: 11, scope: !8286)
!8299 = !DILocation(line: 2383, column: 9, scope: !8286)
!8300 = !DILocation(line: 2384, column: 7, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 2384, column: 7)
!8302 = !DILocation(line: 2384, column: 13, scope: !8301)
!8303 = !DILocation(line: 2384, column: 18, scope: !8301)
!8304 = !DILocation(line: 2385, column: 35, scope: !8301)
!8305 = !DILocation(line: 2385, column: 41, scope: !8301)
!8306 = !DILocation(line: 2385, column: 49, scope: !8301)
!8307 = !DILocation(line: 2385, column: 55, scope: !8301)
!8308 = !DILocation(line: 2385, column: 7, scope: !8301)
!8309 = !DILocation(line: 2384, column: 7, scope: !8286)
!8310 = !DILocation(line: 2386, column: 16, scope: !8301)
!8311 = !DILocation(line: 2386, column: 15, scope: !8301)
!8312 = !DILocation(line: 2386, column: 5, scope: !8301)
!8313 = !DILocation(line: 2386, column: 12, scope: !8301)
!8314 = !DILocation(line: 2386, column: 4, scope: !8301)
!8315 = !DILocation(line: 2388, column: 33, scope: !8286)
!8316 = !DILocation(line: 2388, column: 11, scope: !8286)
!8317 = !DILocation(line: 2388, column: 9, scope: !8286)
!8318 = !DILocation(line: 2389, column: 7, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 2389, column: 7)
!8320 = !DILocation(line: 2389, column: 13, scope: !8319)
!8321 = !DILocation(line: 2389, column: 7, scope: !8286)
!8322 = !DILocation(line: 2390, column: 4, scope: !8319)
!8323 = !DILocation(line: 2392, column: 31, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 2392, column: 7)
!8325 = !DILocation(line: 2393, column: 11, scope: !8324)
!8326 = !DILocation(line: 2393, column: 19, scope: !8324)
!8327 = !DILocation(line: 2393, column: 33, scope: !8324)
!8328 = !DILocation(line: 2392, column: 7, scope: !8324)
!8329 = !DILocation(line: 2392, column: 7, scope: !8286)
!8330 = !DILocation(line: 2394, column: 16, scope: !8324)
!8331 = !DILocation(line: 2394, column: 15, scope: !8324)
!8332 = !DILocation(line: 2394, column: 5, scope: !8324)
!8333 = !DILocation(line: 2394, column: 12, scope: !8324)
!8334 = !DILocation(line: 2394, column: 4, scope: !8324)
!8335 = !DILocation(line: 2395, column: 2, scope: !8286)
!8336 = !DILocation(line: 2377, column: 58, scope: !8282)
!8337 = !DILocation(line: 2377, column: 2, scope: !8282)
!8338 = distinct !{!8338, !8284, !8339}
!8339 = !DILocation(line: 2395, column: 2, scope: !8279)
!8340 = !DILocation(line: 2396, column: 1, scope: !8261)
!8341 = distinct !DISubprogram(name: "spi_nor_select_read", scope: !3, file: !3, line: 2454, type: !8342, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!182, !4103, !198}
!8344 = !DILocalVariable(name: "x", arg: 1, scope: !8345, file: !5762, line: 324, type: !15)
!8345 = distinct !DISubprogram(name: "fls", scope: !5762, file: !5762, line: 324, type: !8346, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8346 = !DISubroutineType(types: !8347)
!8347 = !{!182, !15}
!8348 = !DILocation(line: 324, column: 45, scope: !8345, inlinedAt: !8349)
!8349 = distinct !DILocation(line: 2457, column: 24, scope: !8341)
!8350 = !DILocalVariable(name: "r", scope: !8345, file: !5762, line: 326, type: !182)
!8351 = !DILocation(line: 326, column: 6, scope: !8345, inlinedAt: !8349)
!8352 = !DILocalVariable(name: "nor", arg: 1, scope: !8341, file: !3, line: 2454, type: !4103)
!8353 = !DILocation(line: 2454, column: 48, scope: !8341)
!8354 = !DILocalVariable(name: "shared_hwcaps", arg: 2, scope: !8341, file: !3, line: 2455, type: !198)
!8355 = !DILocation(line: 2455, column: 15, scope: !8341)
!8356 = !DILocalVariable(name: "cmd", scope: !8341, file: !3, line: 2457, type: !182)
!8357 = !DILocation(line: 2457, column: 6, scope: !8341)
!8358 = !DILocalVariable(name: "best_match", scope: !8341, file: !3, line: 2457, type: !182)
!8359 = !DILocation(line: 2457, column: 11, scope: !8341)
!8360 = !DILocation(line: 2457, column: 28, scope: !8341)
!8361 = !DILocation(line: 2457, column: 42, scope: !8341)
!8362 = !DILocation(line: 340, column: 14, scope: !8345, inlinedAt: !8349)
!8363 = !DILocation(line: 338, column: 2, scope: !8345, inlinedAt: !8349)
!8364 = !{i32 400235}
!8365 = !DILocation(line: 351, column: 9, scope: !8345, inlinedAt: !8349)
!8366 = !DILocation(line: 351, column: 11, scope: !8345, inlinedAt: !8349)
!8367 = !DILocation(line: 2457, column: 67, scope: !8341)
!8368 = !DILocalVariable(name: "read", scope: !8341, file: !3, line: 2458, type: !8369)
!8369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8370, size: 64)
!8370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4496)
!8371 = !DILocation(line: 2458, column: 37, scope: !8341)
!8372 = !DILocation(line: 2460, column: 6, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 2460, column: 6)
!8374 = !DILocation(line: 2460, column: 17, scope: !8373)
!8375 = !DILocation(line: 2460, column: 6, scope: !8341)
!8376 = !DILocation(line: 2461, column: 3, scope: !8373)
!8377 = !DILocation(line: 2463, column: 32, scope: !8341)
!8378 = !DILocation(line: 2463, column: 8, scope: !8341)
!8379 = !DILocation(line: 2463, column: 6, scope: !8341)
!8380 = !DILocation(line: 2464, column: 6, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 2464, column: 6)
!8382 = !DILocation(line: 2464, column: 10, scope: !8381)
!8383 = !DILocation(line: 2464, column: 6, scope: !8341)
!8384 = !DILocation(line: 2465, column: 3, scope: !8381)
!8385 = !DILocation(line: 2467, column: 10, scope: !8341)
!8386 = !DILocation(line: 2467, column: 15, scope: !8341)
!8387 = !DILocation(line: 2467, column: 23, scope: !8341)
!8388 = !DILocation(line: 2467, column: 29, scope: !8341)
!8389 = !DILocation(line: 2467, column: 7, scope: !8341)
!8390 = !DILocation(line: 2468, column: 21, scope: !8341)
!8391 = !DILocation(line: 2468, column: 27, scope: !8341)
!8392 = !DILocation(line: 2468, column: 2, scope: !8341)
!8393 = !DILocation(line: 2468, column: 7, scope: !8341)
!8394 = !DILocation(line: 2468, column: 19, scope: !8341)
!8395 = !DILocation(line: 2469, column: 20, scope: !8341)
!8396 = !DILocation(line: 2469, column: 26, scope: !8341)
!8397 = !DILocation(line: 2469, column: 2, scope: !8341)
!8398 = !DILocation(line: 2469, column: 7, scope: !8341)
!8399 = !DILocation(line: 2469, column: 18, scope: !8341)
!8400 = !DILocation(line: 2481, column: 20, scope: !8341)
!8401 = !DILocation(line: 2481, column: 26, scope: !8341)
!8402 = !DILocation(line: 2481, column: 44, scope: !8341)
!8403 = !DILocation(line: 2481, column: 50, scope: !8341)
!8404 = !DILocation(line: 2481, column: 42, scope: !8341)
!8405 = !DILocation(line: 2481, column: 2, scope: !8341)
!8406 = !DILocation(line: 2481, column: 7, scope: !8341)
!8407 = !DILocation(line: 2481, column: 18, scope: !8341)
!8408 = !DILocation(line: 2482, column: 2, scope: !8341)
!8409 = !DILocation(line: 2483, column: 1, scope: !8341)
!8410 = distinct !DISubprogram(name: "spi_nor_select_pp", scope: !3, file: !3, line: 2485, type: !8342, scopeLine: 2487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8411 = !DILocation(line: 324, column: 45, scope: !8345, inlinedAt: !8412)
!8412 = distinct !DILocation(line: 2488, column: 24, scope: !8410)
!8413 = !DILocation(line: 326, column: 6, scope: !8345, inlinedAt: !8412)
!8414 = !DILocalVariable(name: "nor", arg: 1, scope: !8410, file: !3, line: 2485, type: !4103)
!8415 = !DILocation(line: 2485, column: 46, scope: !8410)
!8416 = !DILocalVariable(name: "shared_hwcaps", arg: 2, scope: !8410, file: !3, line: 2486, type: !198)
!8417 = !DILocation(line: 2486, column: 13, scope: !8410)
!8418 = !DILocalVariable(name: "cmd", scope: !8410, file: !3, line: 2488, type: !182)
!8419 = !DILocation(line: 2488, column: 6, scope: !8410)
!8420 = !DILocalVariable(name: "best_match", scope: !8410, file: !3, line: 2488, type: !182)
!8421 = !DILocation(line: 2488, column: 11, scope: !8410)
!8422 = !DILocation(line: 2488, column: 28, scope: !8410)
!8423 = !DILocation(line: 2488, column: 42, scope: !8410)
!8424 = !DILocation(line: 340, column: 14, scope: !8345, inlinedAt: !8412)
!8425 = !DILocation(line: 338, column: 2, scope: !8345, inlinedAt: !8412)
!8426 = !DILocation(line: 351, column: 9, scope: !8345, inlinedAt: !8412)
!8427 = !DILocation(line: 351, column: 11, scope: !8345, inlinedAt: !8412)
!8428 = !DILocation(line: 2488, column: 65, scope: !8410)
!8429 = !DILocalVariable(name: "pp", scope: !8410, file: !3, line: 2489, type: !8430)
!8430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8431, size: 64)
!8431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4505)
!8432 = !DILocation(line: 2489, column: 35, scope: !8410)
!8433 = !DILocation(line: 2491, column: 6, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 2491, column: 6)
!8435 = !DILocation(line: 2491, column: 17, scope: !8434)
!8436 = !DILocation(line: 2491, column: 6, scope: !8410)
!8437 = !DILocation(line: 2492, column: 3, scope: !8434)
!8438 = !DILocation(line: 2494, column: 30, scope: !8410)
!8439 = !DILocation(line: 2494, column: 8, scope: !8410)
!8440 = !DILocation(line: 2494, column: 6, scope: !8410)
!8441 = !DILocation(line: 2495, column: 6, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 2495, column: 6)
!8443 = !DILocation(line: 2495, column: 10, scope: !8442)
!8444 = !DILocation(line: 2495, column: 6, scope: !8410)
!8445 = !DILocation(line: 2496, column: 3, scope: !8442)
!8446 = !DILocation(line: 2498, column: 8, scope: !8410)
!8447 = !DILocation(line: 2498, column: 13, scope: !8410)
!8448 = !DILocation(line: 2498, column: 21, scope: !8410)
!8449 = !DILocation(line: 2498, column: 35, scope: !8410)
!8450 = !DILocation(line: 2498, column: 5, scope: !8410)
!8451 = !DILocation(line: 2499, column: 24, scope: !8410)
!8452 = !DILocation(line: 2499, column: 28, scope: !8410)
!8453 = !DILocation(line: 2499, column: 2, scope: !8410)
!8454 = !DILocation(line: 2499, column: 7, scope: !8410)
!8455 = !DILocation(line: 2499, column: 22, scope: !8410)
!8456 = !DILocation(line: 2500, column: 21, scope: !8410)
!8457 = !DILocation(line: 2500, column: 25, scope: !8410)
!8458 = !DILocation(line: 2500, column: 2, scope: !8410)
!8459 = !DILocation(line: 2500, column: 7, scope: !8410)
!8460 = !DILocation(line: 2500, column: 19, scope: !8410)
!8461 = !DILocation(line: 2501, column: 2, scope: !8410)
!8462 = !DILocation(line: 2502, column: 1, scope: !8410)
!8463 = distinct !DISubprogram(name: "spi_nor_select_erase", scope: !3, file: !3, line: 2557, type: !4533, scopeLine: 2558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8464 = !DILocalVariable(name: "nor", arg: 1, scope: !8463, file: !3, line: 2557, type: !4103)
!8465 = !DILocation(line: 2557, column: 49, scope: !8463)
!8466 = !DILocalVariable(name: "map", scope: !8463, file: !3, line: 2559, type: !5803)
!8467 = !DILocation(line: 2559, column: 28, scope: !8463)
!8468 = !DILocation(line: 2559, column: 35, scope: !8463)
!8469 = !DILocation(line: 2559, column: 40, scope: !8463)
!8470 = !DILocation(line: 2559, column: 48, scope: !8463)
!8471 = !DILocalVariable(name: "erase", scope: !8463, file: !3, line: 2560, type: !8472)
!8472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8473, size: 64)
!8473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4523)
!8474 = !DILocation(line: 2560, column: 35, scope: !8463)
!8475 = !DILocalVariable(name: "mtd", scope: !8463, file: !3, line: 2561, type: !1024)
!8476 = !DILocation(line: 2561, column: 19, scope: !8463)
!8477 = !DILocation(line: 2561, column: 26, scope: !8463)
!8478 = !DILocation(line: 2561, column: 31, scope: !8463)
!8479 = !DILocalVariable(name: "wanted_size", scope: !8463, file: !3, line: 2562, type: !198)
!8480 = !DILocation(line: 2562, column: 6, scope: !8463)
!8481 = !DILocation(line: 2562, column: 20, scope: !8463)
!8482 = !DILocation(line: 2562, column: 25, scope: !8463)
!8483 = !DILocation(line: 2562, column: 31, scope: !8463)
!8484 = !DILocalVariable(name: "i", scope: !8463, file: !3, line: 2563, type: !182)
!8485 = !DILocation(line: 2563, column: 6, scope: !8463)
!8486 = !DILocation(line: 2575, column: 14, scope: !8463)
!8487 = !DILocation(line: 2578, column: 32, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 2578, column: 6)
!8489 = !DILocation(line: 2578, column: 6, scope: !8488)
!8490 = !DILocation(line: 2578, column: 6, scope: !8463)
!8491 = !DILocation(line: 2579, column: 40, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 2578, column: 38)
!8493 = !DILocation(line: 2579, column: 45, scope: !8492)
!8494 = !DILocation(line: 2579, column: 11, scope: !8492)
!8495 = !DILocation(line: 2579, column: 9, scope: !8492)
!8496 = !DILocation(line: 2580, column: 8, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8492, file: !3, line: 2580, column: 7)
!8498 = !DILocation(line: 2580, column: 7, scope: !8492)
!8499 = !DILocation(line: 2581, column: 4, scope: !8497)
!8500 = !DILocation(line: 2582, column: 23, scope: !8492)
!8501 = !DILocation(line: 2582, column: 30, scope: !8492)
!8502 = !DILocation(line: 2582, column: 3, scope: !8492)
!8503 = !DILocation(line: 2582, column: 8, scope: !8492)
!8504 = !DILocation(line: 2582, column: 21, scope: !8492)
!8505 = !DILocation(line: 2583, column: 20, scope: !8492)
!8506 = !DILocation(line: 2583, column: 27, scope: !8492)
!8507 = !DILocation(line: 2583, column: 3, scope: !8492)
!8508 = !DILocation(line: 2583, column: 8, scope: !8492)
!8509 = !DILocation(line: 2583, column: 18, scope: !8492)
!8510 = !DILocation(line: 2584, column: 3, scope: !8492)
!8511 = !DILocation(line: 2591, column: 9, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 2591, column: 2)
!8513 = !DILocation(line: 2591, column: 7, scope: !8512)
!8514 = !DILocation(line: 2591, column: 36, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8512, file: !3, line: 2591, column: 2)
!8516 = !DILocation(line: 2591, column: 38, scope: !8515)
!8517 = !DILocation(line: 2591, column: 2, scope: !8512)
!8518 = !DILocation(line: 2592, column: 7, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 2592, column: 7)
!8520 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 2591, column: 49)
!8521 = !DILocation(line: 2592, column: 12, scope: !8519)
!8522 = !DILocation(line: 2592, column: 23, scope: !8519)
!8523 = !DILocation(line: 2592, column: 26, scope: !8519)
!8524 = !DILocation(line: 2592, column: 7, scope: !8520)
!8525 = !DILocation(line: 2593, column: 13, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 2592, column: 32)
!8527 = !DILocation(line: 2593, column: 18, scope: !8526)
!8528 = !DILocation(line: 2593, column: 29, scope: !8526)
!8529 = !DILocation(line: 2593, column: 10, scope: !8526)
!8530 = !DILocation(line: 2594, column: 4, scope: !8526)
!8531 = !DILocation(line: 2596, column: 2, scope: !8520)
!8532 = !DILocation(line: 2591, column: 45, scope: !8515)
!8533 = !DILocation(line: 2591, column: 2, scope: !8515)
!8534 = distinct !{!8534, !8517, !8535}
!8535 = !DILocation(line: 2596, column: 2, scope: !8512)
!8536 = !DILocation(line: 2598, column: 7, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 2598, column: 6)
!8538 = !DILocation(line: 2598, column: 6, scope: !8463)
!8539 = !DILocation(line: 2599, column: 3, scope: !8537)
!8540 = !DILocation(line: 2601, column: 19, scope: !8463)
!8541 = !DILocation(line: 2601, column: 26, scope: !8463)
!8542 = !DILocation(line: 2601, column: 2, scope: !8463)
!8543 = !DILocation(line: 2601, column: 7, scope: !8463)
!8544 = !DILocation(line: 2601, column: 17, scope: !8463)
!8545 = !DILocation(line: 2602, column: 2, scope: !8463)
!8546 = !DILocation(line: 2603, column: 1, scope: !8463)
!8547 = distinct !DISubprogram(name: "spi_nor_spimem_check_readop", scope: !3, file: !3, line: 2317, type: !8548, scopeLine: 2319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8548 = !DISubroutineType(types: !8549)
!8549 = !{!182, !4103, !8369}
!8550 = !DILocalVariable(name: "nor", arg: 1, scope: !8547, file: !3, line: 2317, type: !4103)
!8551 = !DILocation(line: 2317, column: 56, scope: !8547)
!8552 = !DILocalVariable(name: "read", arg: 2, scope: !8547, file: !3, line: 2318, type: !8369)
!8553 = !DILocation(line: 2318, column: 47, scope: !8547)
!8554 = !DILocalVariable(name: "op", scope: !8547, file: !3, line: 2320, type: !4302)
!8555 = !DILocation(line: 2320, column: 20, scope: !8547)
!8556 = !DILocation(line: 2320, column: 25, scope: !8547)
!8557 = !DILocation(line: 2325, column: 52, scope: !8547)
!8558 = !DILocation(line: 2325, column: 58, scope: !8547)
!8559 = !DILocation(line: 2325, column: 20, scope: !8547)
!8560 = !DILocation(line: 2325, column: 5, scope: !8547)
!8561 = !DILocation(line: 2325, column: 9, scope: !8547)
!8562 = !DILocation(line: 2325, column: 18, scope: !8547)
!8563 = !DILocation(line: 2326, column: 53, scope: !8547)
!8564 = !DILocation(line: 2326, column: 59, scope: !8547)
!8565 = !DILocation(line: 2326, column: 21, scope: !8547)
!8566 = !DILocation(line: 2326, column: 5, scope: !8547)
!8567 = !DILocation(line: 2326, column: 10, scope: !8547)
!8568 = !DILocation(line: 2326, column: 19, scope: !8547)
!8569 = !DILocation(line: 2327, column: 53, scope: !8547)
!8570 = !DILocation(line: 2327, column: 59, scope: !8547)
!8571 = !DILocation(line: 2327, column: 21, scope: !8547)
!8572 = !DILocation(line: 2327, column: 5, scope: !8547)
!8573 = !DILocation(line: 2327, column: 10, scope: !8547)
!8574 = !DILocation(line: 2327, column: 19, scope: !8547)
!8575 = !DILocation(line: 2328, column: 25, scope: !8547)
!8576 = !DILocation(line: 2328, column: 30, scope: !8547)
!8577 = !DILocation(line: 2328, column: 5, scope: !8547)
!8578 = !DILocation(line: 2328, column: 11, scope: !8547)
!8579 = !DILocation(line: 2328, column: 20, scope: !8547)
!8580 = !DILocation(line: 2329, column: 21, scope: !8547)
!8581 = !DILocation(line: 2329, column: 27, scope: !8547)
!8582 = !DILocation(line: 2329, column: 45, scope: !8547)
!8583 = !DILocation(line: 2329, column: 51, scope: !8547)
!8584 = !DILocation(line: 2329, column: 43, scope: !8547)
!8585 = !DILocation(line: 2330, column: 9, scope: !8547)
!8586 = !DILocation(line: 2330, column: 15, scope: !8547)
!8587 = !DILocation(line: 2330, column: 6, scope: !8547)
!8588 = !DILocation(line: 2329, column: 68, scope: !8547)
!8589 = !DILocation(line: 2330, column: 24, scope: !8547)
!8590 = !DILocation(line: 2329, column: 20, scope: !8547)
!8591 = !DILocation(line: 2329, column: 5, scope: !8547)
!8592 = !DILocation(line: 2329, column: 11, scope: !8547)
!8593 = !DILocation(line: 2329, column: 18, scope: !8547)
!8594 = !DILocation(line: 2332, column: 33, scope: !8547)
!8595 = !DILocation(line: 2332, column: 9, scope: !8547)
!8596 = !DILocation(line: 2332, column: 2, scope: !8547)
!8597 = !DILocalVariable(name: "hwcaps", arg: 1, scope: !4654, file: !3, line: 2262, type: !198)
!8598 = !DILocation(line: 2262, column: 38, scope: !4654)
!8599 = !DILocation(line: 2274, column: 28, scope: !4654)
!8600 = !DILocation(line: 2274, column: 9, scope: !4654)
!8601 = !DILocation(line: 2274, column: 2, scope: !4654)
!8602 = distinct !DISubprogram(name: "spi_nor_spimem_check_pp", scope: !3, file: !3, line: 2343, type: !8603, scopeLine: 2345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8603 = !DISubroutineType(types: !8604)
!8604 = !{!182, !4103, !8430}
!8605 = !DILocalVariable(name: "nor", arg: 1, scope: !8602, file: !3, line: 2343, type: !4103)
!8606 = !DILocation(line: 2343, column: 52, scope: !8602)
!8607 = !DILocalVariable(name: "pp", arg: 2, scope: !8602, file: !3, line: 2344, type: !8430)
!8608 = !DILocation(line: 2344, column: 41, scope: !8602)
!8609 = !DILocalVariable(name: "op", scope: !8602, file: !3, line: 2346, type: !4302)
!8610 = !DILocation(line: 2346, column: 20, scope: !8602)
!8611 = !DILocation(line: 2346, column: 25, scope: !8602)
!8612 = !DILocation(line: 2351, column: 52, scope: !8602)
!8613 = !DILocation(line: 2351, column: 56, scope: !8602)
!8614 = !DILocation(line: 2351, column: 20, scope: !8602)
!8615 = !DILocation(line: 2351, column: 5, scope: !8602)
!8616 = !DILocation(line: 2351, column: 9, scope: !8602)
!8617 = !DILocation(line: 2351, column: 18, scope: !8602)
!8618 = !DILocation(line: 2352, column: 53, scope: !8602)
!8619 = !DILocation(line: 2352, column: 57, scope: !8602)
!8620 = !DILocation(line: 2352, column: 21, scope: !8602)
!8621 = !DILocation(line: 2352, column: 5, scope: !8602)
!8622 = !DILocation(line: 2352, column: 10, scope: !8602)
!8623 = !DILocation(line: 2352, column: 19, scope: !8602)
!8624 = !DILocation(line: 2353, column: 53, scope: !8602)
!8625 = !DILocation(line: 2353, column: 57, scope: !8602)
!8626 = !DILocation(line: 2353, column: 21, scope: !8602)
!8627 = !DILocation(line: 2353, column: 5, scope: !8602)
!8628 = !DILocation(line: 2353, column: 10, scope: !8602)
!8629 = !DILocation(line: 2353, column: 19, scope: !8602)
!8630 = !DILocation(line: 2355, column: 33, scope: !8602)
!8631 = !DILocation(line: 2355, column: 9, scope: !8602)
!8632 = !DILocation(line: 2355, column: 2, scope: !8602)
!8633 = distinct !DISubprogram(name: "spi_nor_spimem_check_op", scope: !3, file: !3, line: 2286, type: !7176, scopeLine: 2288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8634 = !DILocalVariable(name: "nor", arg: 1, scope: !8633, file: !3, line: 2286, type: !4103)
!8635 = !DILocation(line: 2286, column: 52, scope: !8633)
!8636 = !DILocalVariable(name: "op", arg: 2, scope: !8633, file: !3, line: 2287, type: !4301)
!8637 = !DILocation(line: 2287, column: 27, scope: !8633)
!8638 = !DILocation(line: 2295, column: 2, scope: !8633)
!8639 = !DILocation(line: 2295, column: 6, scope: !8633)
!8640 = !DILocation(line: 2295, column: 11, scope: !8633)
!8641 = !DILocation(line: 2295, column: 18, scope: !8633)
!8642 = !DILocation(line: 2296, column: 27, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 2296, column: 6)
!8644 = !DILocation(line: 2296, column: 32, scope: !8643)
!8645 = !DILocation(line: 2296, column: 40, scope: !8643)
!8646 = !DILocation(line: 2296, column: 7, scope: !8643)
!8647 = !DILocation(line: 2296, column: 6, scope: !8633)
!8648 = !DILocation(line: 2297, column: 7, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 2297, column: 7)
!8650 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 2296, column: 45)
!8651 = !DILocation(line: 2297, column: 12, scope: !8649)
!8652 = !DILocation(line: 2297, column: 16, scope: !8649)
!8653 = !DILocation(line: 2297, column: 21, scope: !8649)
!8654 = !DILocation(line: 2297, column: 7, scope: !8650)
!8655 = !DILocation(line: 2298, column: 4, scope: !8649)
!8656 = !DILocation(line: 2301, column: 3, scope: !8650)
!8657 = !DILocation(line: 2301, column: 7, scope: !8650)
!8658 = !DILocation(line: 2301, column: 12, scope: !8650)
!8659 = !DILocation(line: 2301, column: 19, scope: !8650)
!8660 = !DILocation(line: 2302, column: 28, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 2302, column: 7)
!8662 = !DILocation(line: 2302, column: 33, scope: !8661)
!8663 = !DILocation(line: 2302, column: 41, scope: !8661)
!8664 = !DILocation(line: 2302, column: 8, scope: !8661)
!8665 = !DILocation(line: 2302, column: 7, scope: !8650)
!8666 = !DILocation(line: 2303, column: 4, scope: !8661)
!8667 = !DILocation(line: 2304, column: 2, scope: !8650)
!8668 = !DILocation(line: 2306, column: 2, scope: !8633)
!8669 = !DILocation(line: 2307, column: 1, scope: !8633)
!8670 = distinct !DISubprogram(name: "spi_nor_has_uniform_erase", scope: !3, file: !3, line: 1076, type: !8671, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{!655, !8673}
!8673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8674, size: 64)
!8674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4104)
!8675 = !DILocalVariable(name: "nor", arg: 1, scope: !8670, file: !3, line: 1076, type: !8673)
!8676 = !DILocation(line: 1076, column: 61, scope: !8670)
!8677 = !DILocation(line: 1078, column: 11, scope: !8670)
!8678 = !DILocation(line: 1078, column: 16, scope: !8670)
!8679 = !DILocation(line: 1078, column: 24, scope: !8670)
!8680 = !DILocation(line: 1078, column: 34, scope: !8670)
!8681 = !DILocation(line: 1078, column: 10, scope: !8670)
!8682 = !DILocation(line: 1078, column: 9, scope: !8670)
!8683 = !DILocation(line: 1078, column: 2, scope: !8670)
!8684 = distinct !DISubprogram(name: "spi_nor_select_uniform_erase", scope: !3, file: !3, line: 2517, type: !8685, scopeLine: 2519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8685 = !DISubroutineType(types: !8686)
!8686 = !{!8472, !5803, !8687}
!8687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!8688 = !DILocalVariable(name: "map", arg: 1, scope: !8684, file: !3, line: 2517, type: !5803)
!8689 = !DILocation(line: 2517, column: 56, scope: !8684)
!8690 = !DILocalVariable(name: "wanted_size", arg: 2, scope: !8684, file: !3, line: 2518, type: !8687)
!8691 = !DILocation(line: 2518, column: 19, scope: !8684)
!8692 = !DILocalVariable(name: "tested_erase", scope: !8684, file: !3, line: 2520, type: !8472)
!8693 = !DILocation(line: 2520, column: 35, scope: !8684)
!8694 = !DILocalVariable(name: "erase", scope: !8684, file: !3, line: 2520, type: !8472)
!8695 = !DILocation(line: 2520, column: 50, scope: !8684)
!8696 = !DILocalVariable(name: "i", scope: !8684, file: !3, line: 2521, type: !182)
!8697 = !DILocation(line: 2521, column: 6, scope: !8684)
!8698 = !DILocalVariable(name: "uniform_erase_type", scope: !8684, file: !3, line: 2522, type: !6)
!8699 = !DILocation(line: 2522, column: 5, scope: !8684)
!8700 = !DILocation(line: 2522, column: 26, scope: !8684)
!8701 = !DILocation(line: 2522, column: 31, scope: !8684)
!8702 = !DILocation(line: 2524, column: 9, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8684, file: !3, line: 2524, column: 2)
!8704 = !DILocation(line: 2524, column: 7, scope: !8703)
!8705 = !DILocation(line: 2524, column: 36, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 2524, column: 2)
!8707 = !DILocation(line: 2524, column: 38, scope: !8706)
!8708 = !DILocation(line: 2524, column: 2, scope: !8703)
!8709 = !DILocation(line: 2525, column: 9, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 2525, column: 7)
!8711 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 2524, column: 49)
!8712 = !DILocation(line: 2525, column: 30, scope: !8710)
!8713 = !DILocation(line: 2525, column: 28, scope: !8710)
!8714 = !DILocation(line: 2525, column: 7, scope: !8711)
!8715 = !DILocation(line: 2526, column: 4, scope: !8710)
!8716 = !DILocation(line: 2528, column: 19, scope: !8711)
!8717 = !DILocation(line: 2528, column: 24, scope: !8711)
!8718 = !DILocation(line: 2528, column: 35, scope: !8711)
!8719 = !DILocation(line: 2528, column: 16, scope: !8711)
!8720 = !DILocation(line: 2534, column: 7, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 2534, column: 7)
!8722 = !DILocation(line: 2534, column: 21, scope: !8721)
!8723 = !DILocation(line: 2534, column: 29, scope: !8721)
!8724 = !DILocation(line: 2534, column: 26, scope: !8721)
!8725 = !DILocation(line: 2534, column: 7, scope: !8711)
!8726 = !DILocation(line: 2535, column: 12, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 2534, column: 42)
!8728 = !DILocation(line: 2535, column: 10, scope: !8727)
!8729 = !DILocation(line: 2536, column: 4, scope: !8727)
!8730 = !DILocation(line: 2543, column: 8, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 2543, column: 7)
!8732 = !DILocation(line: 2543, column: 14, scope: !8731)
!8733 = !DILocation(line: 2543, column: 17, scope: !8731)
!8734 = !DILocation(line: 2543, column: 31, scope: !8731)
!8735 = !DILocation(line: 2543, column: 7, scope: !8711)
!8736 = !DILocation(line: 2544, column: 12, scope: !8731)
!8737 = !DILocation(line: 2544, column: 10, scope: !8731)
!8738 = !DILocation(line: 2544, column: 4, scope: !8731)
!8739 = !DILocation(line: 2546, column: 2, scope: !8711)
!8740 = !DILocation(line: 2524, column: 45, scope: !8706)
!8741 = !DILocation(line: 2524, column: 2, scope: !8706)
!8742 = distinct !{!8742, !8708, !8743}
!8743 = !DILocation(line: 2546, column: 2, scope: !8703)
!8744 = !DILocation(line: 2548, column: 7, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8684, file: !3, line: 2548, column: 6)
!8746 = !DILocation(line: 2548, column: 6, scope: !8684)
!8747 = !DILocation(line: 2549, column: 3, scope: !8745)
!8748 = !DILocation(line: 2552, column: 2, scope: !8684)
!8749 = !DILocation(line: 2552, column: 7, scope: !8684)
!8750 = !DILocation(line: 2552, column: 26, scope: !8684)
!8751 = !DILocation(line: 2553, column: 29, scope: !8684)
!8752 = !DILocation(line: 2553, column: 2, scope: !8684)
!8753 = !DILocation(line: 2553, column: 7, scope: !8684)
!8754 = !DILocation(line: 2553, column: 26, scope: !8684)
!8755 = !DILocation(line: 2554, column: 9, scope: !8684)
!8756 = !DILocation(line: 2554, column: 2, scope: !8684)
!8757 = !DILocation(line: 2555, column: 1, scope: !8684)
!8758 = distinct !DISubprogram(name: "spi_nor_sr_lock", scope: !3, file: !3, line: 1677, type: !4556, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8759 = !DILocalVariable(name: "nor", arg: 1, scope: !8758, file: !3, line: 1677, type: !4103)
!8760 = !DILocation(line: 1677, column: 44, scope: !8758)
!8761 = !DILocalVariable(name: "ofs", arg: 2, scope: !8758, file: !3, line: 1677, type: !674)
!8762 = !DILocation(line: 1677, column: 56, scope: !8758)
!8763 = !DILocalVariable(name: "len", arg: 3, scope: !8758, file: !3, line: 1677, type: !1033)
!8764 = !DILocation(line: 1677, column: 70, scope: !8758)
!8765 = !DILocalVariable(name: "mtd", scope: !8758, file: !3, line: 1679, type: !1024)
!8766 = !DILocation(line: 1679, column: 19, scope: !8758)
!8767 = !DILocation(line: 1679, column: 26, scope: !8758)
!8768 = !DILocation(line: 1679, column: 31, scope: !8758)
!8769 = !DILocalVariable(name: "min_prot_len", scope: !8758, file: !3, line: 1680, type: !250)
!8770 = !DILocation(line: 1680, column: 6, scope: !8758)
!8771 = !DILocalVariable(name: "ret", scope: !8758, file: !3, line: 1681, type: !182)
!8772 = !DILocation(line: 1681, column: 6, scope: !8758)
!8773 = !DILocalVariable(name: "status_old", scope: !8758, file: !3, line: 1681, type: !182)
!8774 = !DILocation(line: 1681, column: 11, scope: !8758)
!8775 = !DILocalVariable(name: "status_new", scope: !8758, file: !3, line: 1681, type: !182)
!8776 = !DILocation(line: 1681, column: 23, scope: !8758)
!8777 = !DILocalVariable(name: "mask", scope: !8758, file: !3, line: 1682, type: !6)
!8778 = !DILocation(line: 1682, column: 5, scope: !8758)
!8779 = !DILocation(line: 1682, column: 35, scope: !8758)
!8780 = !DILocation(line: 1682, column: 12, scope: !8758)
!8781 = !DILocalVariable(name: "tb_mask", scope: !8758, file: !3, line: 1683, type: !6)
!8782 = !DILocation(line: 1683, column: 5, scope: !8758)
!8783 = !DILocation(line: 1683, column: 38, scope: !8758)
!8784 = !DILocation(line: 1683, column: 15, scope: !8758)
!8785 = !DILocalVariable(name: "pow", scope: !8758, file: !3, line: 1684, type: !6)
!8786 = !DILocation(line: 1684, column: 5, scope: !8758)
!8787 = !DILocalVariable(name: "val", scope: !8758, file: !3, line: 1684, type: !6)
!8788 = !DILocation(line: 1684, column: 10, scope: !8758)
!8789 = !DILocalVariable(name: "lock_len", scope: !8758, file: !3, line: 1685, type: !674)
!8790 = !DILocation(line: 1685, column: 9, scope: !8758)
!8791 = !DILocalVariable(name: "can_be_top", scope: !8758, file: !3, line: 1686, type: !655)
!8792 = !DILocation(line: 1686, column: 7, scope: !8758)
!8793 = !DILocalVariable(name: "can_be_bottom", scope: !8758, file: !3, line: 1686, type: !655)
!8794 = !DILocation(line: 1686, column: 26, scope: !8758)
!8795 = !DILocation(line: 1686, column: 42, scope: !8758)
!8796 = !DILocation(line: 1686, column: 47, scope: !8758)
!8797 = !DILocation(line: 1686, column: 53, scope: !8758)
!8798 = !DILocalVariable(name: "use_top", scope: !8758, file: !3, line: 1687, type: !655)
!8799 = !DILocation(line: 1687, column: 7, scope: !8758)
!8800 = !DILocation(line: 1689, column: 24, scope: !8758)
!8801 = !DILocation(line: 1689, column: 29, scope: !8758)
!8802 = !DILocation(line: 1689, column: 34, scope: !8758)
!8803 = !DILocation(line: 1689, column: 8, scope: !8758)
!8804 = !DILocation(line: 1689, column: 6, scope: !8758)
!8805 = !DILocation(line: 1690, column: 6, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 1690, column: 6)
!8807 = !DILocation(line: 1690, column: 6, scope: !8758)
!8808 = !DILocation(line: 1691, column: 10, scope: !8806)
!8809 = !DILocation(line: 1691, column: 3, scope: !8806)
!8810 = !DILocation(line: 1693, column: 15, scope: !8758)
!8811 = !DILocation(line: 1693, column: 20, scope: !8758)
!8812 = !DILocation(line: 1693, column: 13, scope: !8758)
!8813 = !DILocation(line: 1696, column: 27, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 1696, column: 6)
!8815 = !DILocation(line: 1696, column: 32, scope: !8814)
!8816 = !DILocation(line: 1696, column: 37, scope: !8814)
!8817 = !DILocation(line: 1696, column: 42, scope: !8814)
!8818 = !DILocation(line: 1696, column: 6, scope: !8814)
!8819 = !DILocation(line: 1696, column: 6, scope: !8758)
!8820 = !DILocation(line: 1697, column: 3, scope: !8814)
!8821 = !DILocation(line: 1700, column: 28, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 1700, column: 6)
!8823 = !DILocation(line: 1700, column: 36, scope: !8822)
!8824 = !DILocation(line: 1700, column: 41, scope: !8822)
!8825 = !DILocation(line: 1700, column: 7, scope: !8822)
!8826 = !DILocation(line: 1700, column: 6, scope: !8758)
!8827 = !DILocation(line: 1701, column: 17, scope: !8822)
!8828 = !DILocation(line: 1701, column: 3, scope: !8822)
!8829 = !DILocation(line: 1704, column: 28, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 1704, column: 6)
!8831 = !DILocation(line: 1704, column: 33, scope: !8830)
!8832 = !DILocation(line: 1704, column: 39, scope: !8830)
!8833 = !DILocation(line: 1704, column: 37, scope: !8830)
!8834 = !DILocation(line: 1704, column: 44, scope: !8830)
!8835 = !DILocation(line: 1704, column: 49, scope: !8830)
!8836 = !DILocation(line: 1704, column: 57, scope: !8830)
!8837 = !DILocation(line: 1704, column: 63, scope: !8830)
!8838 = !DILocation(line: 1704, column: 61, scope: !8830)
!8839 = !DILocation(line: 1704, column: 54, scope: !8830)
!8840 = !DILocation(line: 1705, column: 7, scope: !8830)
!8841 = !DILocation(line: 1704, column: 7, scope: !8830)
!8842 = !DILocation(line: 1704, column: 6, scope: !8758)
!8843 = !DILocation(line: 1706, column: 14, scope: !8830)
!8844 = !DILocation(line: 1706, column: 3, scope: !8830)
!8845 = !DILocation(line: 1708, column: 7, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 1708, column: 6)
!8847 = !DILocation(line: 1708, column: 21, scope: !8846)
!8848 = !DILocation(line: 1708, column: 25, scope: !8846)
!8849 = !DILocation(line: 1708, column: 6, scope: !8758)
!8850 = !DILocation(line: 1709, column: 3, scope: !8846)
!8851 = !DILocation(line: 1712, column: 12, scope: !8758)
!8852 = !DILocation(line: 1712, column: 10, scope: !8758)
!8853 = !DILocation(line: 1715, column: 6, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 1715, column: 6)
!8855 = !DILocation(line: 1715, column: 6, scope: !8758)
!8856 = !DILocation(line: 1716, column: 14, scope: !8854)
!8857 = !DILocation(line: 1716, column: 19, scope: !8854)
!8858 = !DILocation(line: 1716, column: 26, scope: !8854)
!8859 = !DILocation(line: 1716, column: 24, scope: !8854)
!8860 = !DILocation(line: 1716, column: 12, scope: !8854)
!8861 = !DILocation(line: 1716, column: 3, scope: !8854)
!8862 = !DILocation(line: 1718, column: 14, scope: !8854)
!8863 = !DILocation(line: 1718, column: 20, scope: !8854)
!8864 = !DILocation(line: 1718, column: 18, scope: !8854)
!8865 = !DILocation(line: 1718, column: 12, scope: !8854)
!8866 = !DILocation(line: 1720, column: 6, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 1720, column: 6)
!8868 = !DILocation(line: 1720, column: 18, scope: !8867)
!8869 = !DILocation(line: 1720, column: 23, scope: !8867)
!8870 = !DILocation(line: 1720, column: 15, scope: !8867)
!8871 = !DILocation(line: 1720, column: 6, scope: !8758)
!8872 = !DILocation(line: 1721, column: 9, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 1720, column: 29)
!8874 = !DILocation(line: 1721, column: 7, scope: !8873)
!8875 = !DILocation(line: 1722, column: 2, scope: !8873)
!8876 = !DILocation(line: 1723, column: 49, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 1722, column: 9)
!8878 = !DILocation(line: 1723, column: 18, scope: !8877)
!8879 = !DILocation(line: 1723, column: 16, scope: !8877)
!8880 = !DILocation(line: 1724, column: 9, scope: !8877)
!8881 = !DILocation(line: 1724, column: 27, scope: !8877)
!8882 = !DILocation(line: 1724, column: 25, scope: !8877)
!8883 = !DILocation(line: 1724, column: 47, scope: !8877)
!8884 = !DILocation(line: 1724, column: 7, scope: !8877)
!8885 = !DILocation(line: 1725, column: 9, scope: !8877)
!8886 = !DILocation(line: 1725, column: 13, scope: !8877)
!8887 = !DILocation(line: 1725, column: 7, scope: !8877)
!8888 = !DILocation(line: 1727, column: 7, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 1727, column: 7)
!8890 = !DILocation(line: 1727, column: 12, scope: !8889)
!8891 = !DILocation(line: 1727, column: 18, scope: !8889)
!8892 = !DILocation(line: 1727, column: 43, scope: !8889)
!8893 = !DILocation(line: 1727, column: 46, scope: !8889)
!8894 = !DILocation(line: 1727, column: 50, scope: !8889)
!8895 = !DILocation(line: 1727, column: 7, scope: !8877)
!8896 = !DILocation(line: 1728, column: 11, scope: !8889)
!8897 = !DILocation(line: 1728, column: 15, scope: !8889)
!8898 = !DILocation(line: 1728, column: 26, scope: !8889)
!8899 = !DILocation(line: 1728, column: 10, scope: !8889)
!8900 = !DILocation(line: 1728, column: 8, scope: !8889)
!8901 = !DILocation(line: 1728, column: 4, scope: !8889)
!8902 = !DILocation(line: 1730, column: 7, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 1730, column: 7)
!8904 = !DILocation(line: 1730, column: 14, scope: !8903)
!8905 = !DILocation(line: 1730, column: 13, scope: !8903)
!8906 = !DILocation(line: 1730, column: 11, scope: !8903)
!8907 = !DILocation(line: 1730, column: 7, scope: !8877)
!8908 = !DILocation(line: 1731, column: 4, scope: !8903)
!8909 = !DILocation(line: 1734, column: 9, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 1734, column: 7)
!8911 = !DILocation(line: 1734, column: 15, scope: !8910)
!8912 = !DILocation(line: 1734, column: 13, scope: !8910)
!8913 = !DILocation(line: 1734, column: 7, scope: !8877)
!8914 = !DILocation(line: 1735, column: 4, scope: !8910)
!8915 = !DILocation(line: 1738, column: 16, scope: !8758)
!8916 = !DILocation(line: 1738, column: 30, scope: !8758)
!8917 = !DILocation(line: 1738, column: 29, scope: !8758)
!8918 = !DILocation(line: 1738, column: 27, scope: !8758)
!8919 = !DILocation(line: 1738, column: 38, scope: !8758)
!8920 = !DILocation(line: 1738, column: 37, scope: !8758)
!8921 = !DILocation(line: 1738, column: 35, scope: !8758)
!8922 = !DILocation(line: 1738, column: 49, scope: !8758)
!8923 = !DILocation(line: 1738, column: 47, scope: !8758)
!8924 = !DILocation(line: 1738, column: 13, scope: !8758)
!8925 = !DILocation(line: 1741, column: 13, scope: !8758)
!8926 = !DILocation(line: 1743, column: 7, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 1743, column: 6)
!8928 = !DILocation(line: 1743, column: 6, scope: !8758)
!8929 = !DILocation(line: 1744, column: 17, scope: !8927)
!8930 = !DILocation(line: 1744, column: 14, scope: !8927)
!8931 = !DILocation(line: 1744, column: 3, scope: !8927)
!8932 = !DILocation(line: 1747, column: 6, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 1747, column: 6)
!8934 = !DILocation(line: 1747, column: 20, scope: !8933)
!8935 = !DILocation(line: 1747, column: 17, scope: !8933)
!8936 = !DILocation(line: 1747, column: 6, scope: !8758)
!8937 = !DILocation(line: 1748, column: 3, scope: !8933)
!8938 = !DILocation(line: 1751, column: 7, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 1751, column: 6)
!8940 = !DILocation(line: 1751, column: 20, scope: !8939)
!8941 = !DILocation(line: 1751, column: 18, scope: !8939)
!8942 = !DILocation(line: 1751, column: 29, scope: !8939)
!8943 = !DILocation(line: 1751, column: 42, scope: !8939)
!8944 = !DILocation(line: 1751, column: 40, scope: !8939)
!8945 = !DILocation(line: 1751, column: 26, scope: !8939)
!8946 = !DILocation(line: 1751, column: 6, scope: !8758)
!8947 = !DILocation(line: 1752, column: 3, scope: !8939)
!8948 = !DILocation(line: 1754, column: 36, scope: !8758)
!8949 = !DILocation(line: 1754, column: 41, scope: !8758)
!8950 = !DILocation(line: 1754, column: 9, scope: !8758)
!8951 = !DILocation(line: 1754, column: 2, scope: !8758)
!8952 = !DILocation(line: 1755, column: 1, scope: !8758)
!8953 = distinct !DISubprogram(name: "spi_nor_sr_unlock", scope: !3, file: !3, line: 1762, type: !4556, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!8954 = !DILocalVariable(name: "nor", arg: 1, scope: !8953, file: !3, line: 1762, type: !4103)
!8955 = !DILocation(line: 1762, column: 46, scope: !8953)
!8956 = !DILocalVariable(name: "ofs", arg: 2, scope: !8953, file: !3, line: 1762, type: !674)
!8957 = !DILocation(line: 1762, column: 58, scope: !8953)
!8958 = !DILocalVariable(name: "len", arg: 3, scope: !8953, file: !3, line: 1762, type: !1033)
!8959 = !DILocation(line: 1762, column: 72, scope: !8953)
!8960 = !DILocalVariable(name: "mtd", scope: !8953, file: !3, line: 1764, type: !1024)
!8961 = !DILocation(line: 1764, column: 19, scope: !8953)
!8962 = !DILocation(line: 1764, column: 26, scope: !8953)
!8963 = !DILocation(line: 1764, column: 31, scope: !8953)
!8964 = !DILocalVariable(name: "min_prot_len", scope: !8953, file: !3, line: 1765, type: !250)
!8965 = !DILocation(line: 1765, column: 6, scope: !8953)
!8966 = !DILocalVariable(name: "ret", scope: !8953, file: !3, line: 1766, type: !182)
!8967 = !DILocation(line: 1766, column: 6, scope: !8953)
!8968 = !DILocalVariable(name: "status_old", scope: !8953, file: !3, line: 1766, type: !182)
!8969 = !DILocation(line: 1766, column: 11, scope: !8953)
!8970 = !DILocalVariable(name: "status_new", scope: !8953, file: !3, line: 1766, type: !182)
!8971 = !DILocation(line: 1766, column: 23, scope: !8953)
!8972 = !DILocalVariable(name: "mask", scope: !8953, file: !3, line: 1767, type: !6)
!8973 = !DILocation(line: 1767, column: 5, scope: !8953)
!8974 = !DILocation(line: 1767, column: 35, scope: !8953)
!8975 = !DILocation(line: 1767, column: 12, scope: !8953)
!8976 = !DILocalVariable(name: "tb_mask", scope: !8953, file: !3, line: 1768, type: !6)
!8977 = !DILocation(line: 1768, column: 5, scope: !8953)
!8978 = !DILocation(line: 1768, column: 38, scope: !8953)
!8979 = !DILocation(line: 1768, column: 15, scope: !8953)
!8980 = !DILocalVariable(name: "pow", scope: !8953, file: !3, line: 1769, type: !6)
!8981 = !DILocation(line: 1769, column: 5, scope: !8953)
!8982 = !DILocalVariable(name: "val", scope: !8953, file: !3, line: 1769, type: !6)
!8983 = !DILocation(line: 1769, column: 10, scope: !8953)
!8984 = !DILocalVariable(name: "lock_len", scope: !8953, file: !3, line: 1770, type: !674)
!8985 = !DILocation(line: 1770, column: 9, scope: !8953)
!8986 = !DILocalVariable(name: "can_be_top", scope: !8953, file: !3, line: 1771, type: !655)
!8987 = !DILocation(line: 1771, column: 7, scope: !8953)
!8988 = !DILocalVariable(name: "can_be_bottom", scope: !8953, file: !3, line: 1771, type: !655)
!8989 = !DILocation(line: 1771, column: 26, scope: !8953)
!8990 = !DILocation(line: 1771, column: 42, scope: !8953)
!8991 = !DILocation(line: 1771, column: 47, scope: !8953)
!8992 = !DILocation(line: 1771, column: 53, scope: !8953)
!8993 = !DILocalVariable(name: "use_top", scope: !8953, file: !3, line: 1772, type: !655)
!8994 = !DILocation(line: 1772, column: 7, scope: !8953)
!8995 = !DILocation(line: 1774, column: 24, scope: !8953)
!8996 = !DILocation(line: 1774, column: 29, scope: !8953)
!8997 = !DILocation(line: 1774, column: 34, scope: !8953)
!8998 = !DILocation(line: 1774, column: 8, scope: !8953)
!8999 = !DILocation(line: 1774, column: 6, scope: !8953)
!9000 = !DILocation(line: 1775, column: 6, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1775, column: 6)
!9002 = !DILocation(line: 1775, column: 6, scope: !8953)
!9003 = !DILocation(line: 1776, column: 10, scope: !9001)
!9004 = !DILocation(line: 1776, column: 3, scope: !9001)
!9005 = !DILocation(line: 1778, column: 15, scope: !8953)
!9006 = !DILocation(line: 1778, column: 20, scope: !8953)
!9007 = !DILocation(line: 1778, column: 13, scope: !8953)
!9008 = !DILocation(line: 1781, column: 29, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1781, column: 6)
!9010 = !DILocation(line: 1781, column: 34, scope: !9009)
!9011 = !DILocation(line: 1781, column: 39, scope: !9009)
!9012 = !DILocation(line: 1781, column: 44, scope: !9009)
!9013 = !DILocation(line: 1781, column: 6, scope: !9009)
!9014 = !DILocation(line: 1781, column: 6, scope: !8953)
!9015 = !DILocation(line: 1782, column: 3, scope: !9009)
!9016 = !DILocation(line: 1785, column: 30, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1785, column: 6)
!9018 = !DILocation(line: 1785, column: 38, scope: !9017)
!9019 = !DILocation(line: 1785, column: 43, scope: !9017)
!9020 = !DILocation(line: 1785, column: 7, scope: !9017)
!9021 = !DILocation(line: 1785, column: 6, scope: !8953)
!9022 = !DILocation(line: 1786, column: 14, scope: !9017)
!9023 = !DILocation(line: 1786, column: 3, scope: !9017)
!9024 = !DILocation(line: 1789, column: 30, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1789, column: 6)
!9026 = !DILocation(line: 1789, column: 35, scope: !9025)
!9027 = !DILocation(line: 1789, column: 41, scope: !9025)
!9028 = !DILocation(line: 1789, column: 39, scope: !9025)
!9029 = !DILocation(line: 1789, column: 46, scope: !9025)
!9030 = !DILocation(line: 1789, column: 51, scope: !9025)
!9031 = !DILocation(line: 1789, column: 59, scope: !9025)
!9032 = !DILocation(line: 1789, column: 65, scope: !9025)
!9033 = !DILocation(line: 1789, column: 63, scope: !9025)
!9034 = !DILocation(line: 1789, column: 56, scope: !9025)
!9035 = !DILocation(line: 1790, column: 9, scope: !9025)
!9036 = !DILocation(line: 1789, column: 7, scope: !9025)
!9037 = !DILocation(line: 1789, column: 6, scope: !8953)
!9038 = !DILocation(line: 1791, column: 17, scope: !9025)
!9039 = !DILocation(line: 1791, column: 3, scope: !9025)
!9040 = !DILocation(line: 1793, column: 7, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1793, column: 6)
!9042 = !DILocation(line: 1793, column: 21, scope: !9041)
!9043 = !DILocation(line: 1793, column: 25, scope: !9041)
!9044 = !DILocation(line: 1793, column: 6, scope: !8953)
!9045 = !DILocation(line: 1794, column: 3, scope: !9041)
!9046 = !DILocation(line: 1797, column: 12, scope: !8953)
!9047 = !DILocation(line: 1797, column: 10, scope: !8953)
!9048 = !DILocation(line: 1800, column: 6, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1800, column: 6)
!9050 = !DILocation(line: 1800, column: 6, scope: !8953)
!9051 = !DILocation(line: 1801, column: 14, scope: !9049)
!9052 = !DILocation(line: 1801, column: 19, scope: !9049)
!9053 = !DILocation(line: 1801, column: 27, scope: !9049)
!9054 = !DILocation(line: 1801, column: 33, scope: !9049)
!9055 = !DILocation(line: 1801, column: 31, scope: !9049)
!9056 = !DILocation(line: 1801, column: 24, scope: !9049)
!9057 = !DILocation(line: 1801, column: 12, scope: !9049)
!9058 = !DILocation(line: 1801, column: 3, scope: !9049)
!9059 = !DILocation(line: 1803, column: 14, scope: !9049)
!9060 = !DILocation(line: 1803, column: 12, scope: !9049)
!9061 = !DILocation(line: 1805, column: 6, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1805, column: 6)
!9063 = !DILocation(line: 1805, column: 15, scope: !9062)
!9064 = !DILocation(line: 1805, column: 6, scope: !8953)
!9065 = !DILocation(line: 1806, column: 7, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 1805, column: 21)
!9067 = !DILocation(line: 1807, column: 2, scope: !9066)
!9068 = !DILocation(line: 1808, column: 49, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 1807, column: 9)
!9070 = !DILocation(line: 1808, column: 18, scope: !9069)
!9071 = !DILocation(line: 1808, column: 16, scope: !9069)
!9072 = !DILocation(line: 1809, column: 9, scope: !9069)
!9073 = !DILocation(line: 1809, column: 27, scope: !9069)
!9074 = !DILocation(line: 1809, column: 25, scope: !9069)
!9075 = !DILocation(line: 1809, column: 47, scope: !9069)
!9076 = !DILocation(line: 1809, column: 7, scope: !9069)
!9077 = !DILocation(line: 1810, column: 9, scope: !9069)
!9078 = !DILocation(line: 1810, column: 13, scope: !9069)
!9079 = !DILocation(line: 1810, column: 7, scope: !9069)
!9080 = !DILocation(line: 1812, column: 7, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1812, column: 7)
!9082 = !DILocation(line: 1812, column: 12, scope: !9081)
!9083 = !DILocation(line: 1812, column: 18, scope: !9081)
!9084 = !DILocation(line: 1812, column: 43, scope: !9081)
!9085 = !DILocation(line: 1812, column: 46, scope: !9081)
!9086 = !DILocation(line: 1812, column: 50, scope: !9081)
!9087 = !DILocation(line: 1812, column: 7, scope: !9069)
!9088 = !DILocation(line: 1813, column: 11, scope: !9081)
!9089 = !DILocation(line: 1813, column: 15, scope: !9081)
!9090 = !DILocation(line: 1813, column: 26, scope: !9081)
!9091 = !DILocation(line: 1813, column: 10, scope: !9081)
!9092 = !DILocation(line: 1813, column: 8, scope: !9081)
!9093 = !DILocation(line: 1813, column: 4, scope: !9081)
!9094 = !DILocation(line: 1816, column: 7, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1816, column: 7)
!9096 = !DILocation(line: 1816, column: 14, scope: !9095)
!9097 = !DILocation(line: 1816, column: 13, scope: !9095)
!9098 = !DILocation(line: 1816, column: 11, scope: !9095)
!9099 = !DILocation(line: 1816, column: 7, scope: !9069)
!9100 = !DILocation(line: 1817, column: 4, scope: !9095)
!9101 = !DILocation(line: 1820, column: 16, scope: !8953)
!9102 = !DILocation(line: 1820, column: 30, scope: !8953)
!9103 = !DILocation(line: 1820, column: 29, scope: !8953)
!9104 = !DILocation(line: 1820, column: 27, scope: !8953)
!9105 = !DILocation(line: 1820, column: 38, scope: !8953)
!9106 = !DILocation(line: 1820, column: 37, scope: !8953)
!9107 = !DILocation(line: 1820, column: 35, scope: !8953)
!9108 = !DILocation(line: 1820, column: 49, scope: !8953)
!9109 = !DILocation(line: 1820, column: 47, scope: !8953)
!9110 = !DILocation(line: 1820, column: 13, scope: !8953)
!9111 = !DILocation(line: 1823, column: 6, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1823, column: 6)
!9113 = !DILocation(line: 1823, column: 15, scope: !9112)
!9114 = !DILocation(line: 1823, column: 6, scope: !8953)
!9115 = !DILocation(line: 1824, column: 14, scope: !9112)
!9116 = !DILocation(line: 1824, column: 3, scope: !9112)
!9117 = !DILocation(line: 1826, column: 7, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1826, column: 6)
!9119 = !DILocation(line: 1826, column: 6, scope: !8953)
!9120 = !DILocation(line: 1827, column: 17, scope: !9118)
!9121 = !DILocation(line: 1827, column: 14, scope: !9118)
!9122 = !DILocation(line: 1827, column: 3, scope: !9118)
!9123 = !DILocation(line: 1830, column: 6, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1830, column: 6)
!9125 = !DILocation(line: 1830, column: 20, scope: !9124)
!9126 = !DILocation(line: 1830, column: 17, scope: !9124)
!9127 = !DILocation(line: 1830, column: 6, scope: !8953)
!9128 = !DILocation(line: 1831, column: 3, scope: !9124)
!9129 = !DILocation(line: 1834, column: 7, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1834, column: 6)
!9131 = !DILocation(line: 1834, column: 20, scope: !9130)
!9132 = !DILocation(line: 1834, column: 18, scope: !9130)
!9133 = !DILocation(line: 1834, column: 29, scope: !9130)
!9134 = !DILocation(line: 1834, column: 42, scope: !9130)
!9135 = !DILocation(line: 1834, column: 40, scope: !9130)
!9136 = !DILocation(line: 1834, column: 26, scope: !9130)
!9137 = !DILocation(line: 1834, column: 6, scope: !8953)
!9138 = !DILocation(line: 1835, column: 3, scope: !9130)
!9139 = !DILocation(line: 1837, column: 36, scope: !8953)
!9140 = !DILocation(line: 1837, column: 41, scope: !8953)
!9141 = !DILocation(line: 1837, column: 9, scope: !8953)
!9142 = !DILocation(line: 1837, column: 2, scope: !8953)
!9143 = !DILocation(line: 1838, column: 1, scope: !8953)
!9144 = distinct !DISubprogram(name: "spi_nor_sr_is_locked", scope: !3, file: !3, line: 1847, type: !4556, scopeLine: 1848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9145 = !DILocalVariable(name: "nor", arg: 1, scope: !9144, file: !3, line: 1847, type: !4103)
!9146 = !DILocation(line: 1847, column: 49, scope: !9144)
!9147 = !DILocalVariable(name: "ofs", arg: 2, scope: !9144, file: !3, line: 1847, type: !674)
!9148 = !DILocation(line: 1847, column: 61, scope: !9144)
!9149 = !DILocalVariable(name: "len", arg: 3, scope: !9144, file: !3, line: 1847, type: !1033)
!9150 = !DILocation(line: 1847, column: 75, scope: !9144)
!9151 = !DILocalVariable(name: "ret", scope: !9144, file: !3, line: 1849, type: !182)
!9152 = !DILocation(line: 1849, column: 6, scope: !9144)
!9153 = !DILocation(line: 1851, column: 24, scope: !9144)
!9154 = !DILocation(line: 1851, column: 29, scope: !9144)
!9155 = !DILocation(line: 1851, column: 34, scope: !9144)
!9156 = !DILocation(line: 1851, column: 8, scope: !9144)
!9157 = !DILocation(line: 1851, column: 6, scope: !9144)
!9158 = !DILocation(line: 1852, column: 6, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 1852, column: 6)
!9160 = !DILocation(line: 1852, column: 6, scope: !9144)
!9161 = !DILocation(line: 1853, column: 10, scope: !9159)
!9162 = !DILocation(line: 1853, column: 3, scope: !9159)
!9163 = !DILocation(line: 1855, column: 30, scope: !9144)
!9164 = !DILocation(line: 1855, column: 35, scope: !9144)
!9165 = !DILocation(line: 1855, column: 40, scope: !9144)
!9166 = !DILocation(line: 1855, column: 45, scope: !9144)
!9167 = !DILocation(line: 1855, column: 50, scope: !9144)
!9168 = !DILocation(line: 1855, column: 9, scope: !9144)
!9169 = !DILocation(line: 1855, column: 2, scope: !9144)
!9170 = !DILocation(line: 1856, column: 1, scope: !9144)
!9171 = distinct !DISubprogram(name: "spi_nor_get_sr_bp_mask", scope: !3, file: !3, line: 1539, type: !9172, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9172 = !DISubroutineType(types: !9173)
!9173 = !{!6, !4103}
!9174 = !DILocalVariable(name: "nor", arg: 1, scope: !9171, file: !3, line: 1539, type: !4103)
!9175 = !DILocation(line: 1539, column: 50, scope: !9171)
!9176 = !DILocalVariable(name: "mask", scope: !9171, file: !3, line: 1541, type: !6)
!9177 = !DILocation(line: 1541, column: 5, scope: !9171)
!9178 = !DILocation(line: 1543, column: 6, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9171, file: !3, line: 1543, column: 6)
!9180 = !DILocation(line: 1543, column: 11, scope: !9179)
!9181 = !DILocation(line: 1543, column: 17, scope: !9179)
!9182 = !DILocation(line: 1543, column: 6, scope: !9171)
!9183 = !DILocation(line: 1544, column: 10, scope: !9179)
!9184 = !DILocation(line: 1544, column: 15, scope: !9179)
!9185 = !DILocation(line: 1544, column: 3, scope: !9179)
!9186 = !DILocation(line: 1546, column: 6, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9171, file: !3, line: 1546, column: 6)
!9188 = !DILocation(line: 1546, column: 11, scope: !9187)
!9189 = !DILocation(line: 1546, column: 17, scope: !9187)
!9190 = !DILocation(line: 1546, column: 6, scope: !9171)
!9191 = !DILocation(line: 1547, column: 10, scope: !9187)
!9192 = !DILocation(line: 1547, column: 15, scope: !9187)
!9193 = !DILocation(line: 1547, column: 3, scope: !9187)
!9194 = !DILocation(line: 1549, column: 9, scope: !9171)
!9195 = !DILocation(line: 1549, column: 2, scope: !9171)
!9196 = !DILocation(line: 1550, column: 1, scope: !9171)
!9197 = distinct !DISubprogram(name: "spi_nor_get_sr_tb_mask", scope: !3, file: !3, line: 1552, type: !9172, scopeLine: 1553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9198 = !DILocalVariable(name: "nor", arg: 1, scope: !9197, file: !3, line: 1552, type: !4103)
!9199 = !DILocation(line: 1552, column: 50, scope: !9197)
!9200 = !DILocation(line: 1554, column: 6, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 1554, column: 6)
!9202 = !DILocation(line: 1554, column: 11, scope: !9201)
!9203 = !DILocation(line: 1554, column: 17, scope: !9201)
!9204 = !DILocation(line: 1554, column: 6, scope: !9197)
!9205 = !DILocation(line: 1555, column: 3, scope: !9201)
!9206 = !DILocation(line: 1557, column: 3, scope: !9201)
!9207 = !DILocation(line: 1558, column: 1, scope: !9197)
!9208 = distinct !DISubprogram(name: "spi_nor_is_locked_sr", scope: !3, file: !3, line: 1632, type: !9209, scopeLine: 1634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9209 = !DISubroutineType(types: !9210)
!9210 = !{!182, !4103, !674, !1033, !6}
!9211 = !DILocalVariable(name: "nor", arg: 1, scope: !9208, file: !3, line: 1632, type: !4103)
!9212 = !DILocation(line: 1632, column: 49, scope: !9208)
!9213 = !DILocalVariable(name: "ofs", arg: 2, scope: !9208, file: !3, line: 1632, type: !674)
!9214 = !DILocation(line: 1632, column: 61, scope: !9208)
!9215 = !DILocalVariable(name: "len", arg: 3, scope: !9208, file: !3, line: 1632, type: !1033)
!9216 = !DILocation(line: 1632, column: 75, scope: !9208)
!9217 = !DILocalVariable(name: "sr", arg: 4, scope: !9208, file: !3, line: 1633, type: !6)
!9218 = !DILocation(line: 1633, column: 8, scope: !9208)
!9219 = !DILocation(line: 1635, column: 38, scope: !9208)
!9220 = !DILocation(line: 1635, column: 43, scope: !9208)
!9221 = !DILocation(line: 1635, column: 48, scope: !9208)
!9222 = !DILocation(line: 1635, column: 53, scope: !9208)
!9223 = !DILocation(line: 1635, column: 9, scope: !9208)
!9224 = !DILocation(line: 1635, column: 2, scope: !9208)
!9225 = distinct !DISubprogram(name: "spi_nor_get_min_prot_length_sr", scope: !3, file: !3, line: 1560, type: !9226, scopeLine: 1561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9226 = !DISubroutineType(types: !9227)
!9227 = !{!250, !4103}
!9228 = !DILocalVariable(name: "nor", arg: 1, scope: !9225, file: !3, line: 1560, type: !4103)
!9229 = !DILocation(line: 1560, column: 59, scope: !9225)
!9230 = !DILocalVariable(name: "bp_slots", scope: !9225, file: !3, line: 1562, type: !15)
!9231 = !DILocation(line: 1562, column: 15, scope: !9225)
!9232 = !DILocalVariable(name: "bp_slots_needed", scope: !9225, file: !3, line: 1562, type: !15)
!9233 = !DILocation(line: 1562, column: 25, scope: !9225)
!9234 = !DILocalVariable(name: "mask", scope: !9225, file: !3, line: 1563, type: !6)
!9235 = !DILocation(line: 1563, column: 5, scope: !9225)
!9236 = !DILocation(line: 1563, column: 35, scope: !9225)
!9237 = !DILocation(line: 1563, column: 12, scope: !9225)
!9238 = !DILocation(line: 1566, column: 19, scope: !9225)
!9239 = !DILocation(line: 1566, column: 16, scope: !9225)
!9240 = !DILocation(line: 1566, column: 35, scope: !9225)
!9241 = !DILocation(line: 1566, column: 11, scope: !9225)
!9242 = !DILocation(line: 1567, column: 20, scope: !9225)
!9243 = !DILocation(line: 1567, column: 18, scope: !9225)
!9244 = !DILocation(line: 1569, column: 6, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 1569, column: 6)
!9246 = !DILocation(line: 1569, column: 24, scope: !9245)
!9247 = !DILocation(line: 1569, column: 22, scope: !9245)
!9248 = !DILocation(line: 1569, column: 6, scope: !9225)
!9249 = !DILocation(line: 1570, column: 10, scope: !9245)
!9250 = !DILocation(line: 1570, column: 15, scope: !9245)
!9251 = !DILocation(line: 1570, column: 21, scope: !9245)
!9252 = !DILocation(line: 1571, column: 5, scope: !9245)
!9253 = !DILocation(line: 1571, column: 23, scope: !9245)
!9254 = !DILocation(line: 1571, column: 21, scope: !9245)
!9255 = !DILocation(line: 1570, column: 33, scope: !9245)
!9256 = !DILocation(line: 1570, column: 3, scope: !9245)
!9257 = !DILocation(line: 1573, column: 10, scope: !9245)
!9258 = !DILocation(line: 1573, column: 15, scope: !9245)
!9259 = !DILocation(line: 1573, column: 21, scope: !9245)
!9260 = !DILocation(line: 1573, column: 3, scope: !9245)
!9261 = !DILocation(line: 1574, column: 1, scope: !9225)
!9262 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9263, file: !9263, line: 30, type: !9264, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9263 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9264 = !DISubroutineType(types: !9265)
!9265 = !{!182, !250}
!9266 = !DILocalVariable(name: "x", arg: 1, scope: !9267, file: !5762, line: 366, type: !251)
!9267 = distinct !DISubprogram(name: "fls64", scope: !5762, file: !5762, line: 366, type: !9268, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9268 = !DISubroutineType(types: !9269)
!9269 = !{!182, !251}
!9270 = !DILocation(line: 366, column: 40, scope: !9267, inlinedAt: !9271)
!9271 = distinct !DILocation(line: 32, column: 9, scope: !9262)
!9272 = !DILocalVariable(name: "bitpos", scope: !9267, file: !5762, line: 368, type: !182)
!9273 = !DILocation(line: 368, column: 6, scope: !9267, inlinedAt: !9271)
!9274 = !DILocalVariable(name: "n", arg: 1, scope: !9262, file: !9263, line: 30, type: !250)
!9275 = !DILocation(line: 30, column: 21, scope: !9262)
!9276 = !DILocation(line: 32, column: 15, scope: !9262)
!9277 = !DILocation(line: 374, column: 2, scope: !9267, inlinedAt: !9271)
!9278 = !DILocation(line: 376, column: 14, scope: !9267, inlinedAt: !9271)
!9279 = !{i32 401201}
!9280 = !DILocation(line: 377, column: 9, scope: !9267, inlinedAt: !9271)
!9281 = !DILocation(line: 377, column: 16, scope: !9267, inlinedAt: !9271)
!9282 = !DILocation(line: 32, column: 18, scope: !9262)
!9283 = !DILocation(line: 32, column: 2, scope: !9262)
!9284 = distinct !DISubprogram(name: "spi_nor_write_sr_and_check", scope: !3, file: !3, line: 909, type: !5060, scopeLine: 910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9285 = !DILocalVariable(name: "nor", arg: 1, scope: !9284, file: !3, line: 909, type: !4103)
!9286 = !DILocation(line: 909, column: 55, scope: !9284)
!9287 = !DILocalVariable(name: "sr1", arg: 2, scope: !9284, file: !3, line: 909, type: !6)
!9288 = !DILocation(line: 909, column: 63, scope: !9284)
!9289 = !DILocation(line: 911, column: 6, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 911, column: 6)
!9291 = !DILocation(line: 911, column: 11, scope: !9290)
!9292 = !DILocation(line: 911, column: 17, scope: !9290)
!9293 = !DILocation(line: 911, column: 6, scope: !9284)
!9294 = !DILocation(line: 912, column: 43, scope: !9290)
!9295 = !DILocation(line: 912, column: 48, scope: !9290)
!9296 = !DILocation(line: 912, column: 10, scope: !9290)
!9297 = !DILocation(line: 912, column: 3, scope: !9290)
!9298 = !DILocation(line: 914, column: 37, scope: !9284)
!9299 = !DILocation(line: 914, column: 42, scope: !9284)
!9300 = !DILocation(line: 914, column: 9, scope: !9284)
!9301 = !DILocation(line: 914, column: 2, scope: !9284)
!9302 = !DILocation(line: 915, column: 1, scope: !9284)
!9303 = distinct !DISubprogram(name: "spi_nor_check_lock_status_sr", scope: !3, file: !3, line: 1613, type: !9304, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9304 = !DISubroutineType(types: !9305)
!9305 = !{!182, !4103, !674, !1033, !6, !655}
!9306 = !DILocalVariable(name: "nor", arg: 1, scope: !9303, file: !3, line: 1613, type: !4103)
!9307 = !DILocation(line: 1613, column: 57, scope: !9303)
!9308 = !DILocalVariable(name: "ofs", arg: 2, scope: !9303, file: !3, line: 1613, type: !674)
!9309 = !DILocation(line: 1613, column: 69, scope: !9303)
!9310 = !DILocalVariable(name: "len", arg: 3, scope: !9303, file: !3, line: 1614, type: !1033)
!9311 = !DILocation(line: 1614, column: 15, scope: !9303)
!9312 = !DILocalVariable(name: "sr", arg: 4, scope: !9303, file: !3, line: 1614, type: !6)
!9313 = !DILocation(line: 1614, column: 23, scope: !9303)
!9314 = !DILocalVariable(name: "locked", arg: 5, scope: !9303, file: !3, line: 1614, type: !655)
!9315 = !DILocation(line: 1614, column: 32, scope: !9303)
!9316 = !DILocalVariable(name: "lock_offs", scope: !9303, file: !3, line: 1616, type: !674)
!9317 = !DILocation(line: 1616, column: 9, scope: !9303)
!9318 = !DILocalVariable(name: "lock_len", scope: !9303, file: !3, line: 1617, type: !1033)
!9319 = !DILocation(line: 1617, column: 11, scope: !9303)
!9320 = !DILocation(line: 1619, column: 7, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 1619, column: 6)
!9322 = !DILocation(line: 1619, column: 6, scope: !9303)
!9323 = !DILocation(line: 1620, column: 3, scope: !9321)
!9324 = !DILocation(line: 1622, column: 30, scope: !9303)
!9325 = !DILocation(line: 1622, column: 35, scope: !9303)
!9326 = !DILocation(line: 1622, column: 2, scope: !9303)
!9327 = !DILocation(line: 1624, column: 6, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 1624, column: 6)
!9329 = !DILocation(line: 1624, column: 6, scope: !9303)
!9330 = !DILocation(line: 1626, column: 11, scope: !9328)
!9331 = !DILocation(line: 1626, column: 17, scope: !9328)
!9332 = !DILocation(line: 1626, column: 15, scope: !9328)
!9333 = !DILocation(line: 1626, column: 24, scope: !9328)
!9334 = !DILocation(line: 1626, column: 36, scope: !9328)
!9335 = !DILocation(line: 1626, column: 34, scope: !9328)
!9336 = !DILocation(line: 1626, column: 21, scope: !9328)
!9337 = !DILocation(line: 1626, column: 46, scope: !9328)
!9338 = !DILocation(line: 1626, column: 50, scope: !9328)
!9339 = !DILocation(line: 1626, column: 57, scope: !9328)
!9340 = !DILocation(line: 1626, column: 54, scope: !9328)
!9341 = !DILocation(line: 0, scope: !9328)
!9342 = !DILocation(line: 1626, column: 3, scope: !9328)
!9343 = !DILocation(line: 1629, column: 11, scope: !9328)
!9344 = !DILocation(line: 1629, column: 18, scope: !9328)
!9345 = !DILocation(line: 1629, column: 30, scope: !9328)
!9346 = !DILocation(line: 1629, column: 28, scope: !9328)
!9347 = !DILocation(line: 1629, column: 15, scope: !9328)
!9348 = !DILocation(line: 1629, column: 40, scope: !9328)
!9349 = !DILocation(line: 1629, column: 44, scope: !9328)
!9350 = !DILocation(line: 1629, column: 50, scope: !9328)
!9351 = !DILocation(line: 1629, column: 48, scope: !9328)
!9352 = !DILocation(line: 1629, column: 57, scope: !9328)
!9353 = !DILocation(line: 1629, column: 54, scope: !9328)
!9354 = !DILocation(line: 1629, column: 3, scope: !9328)
!9355 = !DILocation(line: 1630, column: 1, scope: !9303)
!9356 = distinct !DISubprogram(name: "spi_nor_get_locked_range_sr", scope: !3, file: !3, line: 1576, type: !9357, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9357 = !DISubroutineType(types: !9358)
!9358 = !{null, !4103, !6, !1372, !9359}
!9359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!9360 = !DILocalVariable(name: "nor", arg: 1, scope: !9356, file: !3, line: 1576, type: !4103)
!9361 = !DILocation(line: 1576, column: 57, scope: !9356)
!9362 = !DILocalVariable(name: "sr", arg: 2, scope: !9356, file: !3, line: 1576, type: !6)
!9363 = !DILocation(line: 1576, column: 65, scope: !9356)
!9364 = !DILocalVariable(name: "ofs", arg: 3, scope: !9356, file: !3, line: 1576, type: !1372)
!9365 = !DILocation(line: 1576, column: 77, scope: !9356)
!9366 = !DILocalVariable(name: "len", arg: 4, scope: !9356, file: !3, line: 1577, type: !9359)
!9367 = !DILocation(line: 1577, column: 16, scope: !9356)
!9368 = !DILocalVariable(name: "mtd", scope: !9356, file: !3, line: 1579, type: !1024)
!9369 = !DILocation(line: 1579, column: 19, scope: !9356)
!9370 = !DILocation(line: 1579, column: 26, scope: !9356)
!9371 = !DILocation(line: 1579, column: 31, scope: !9356)
!9372 = !DILocalVariable(name: "min_prot_len", scope: !9356, file: !3, line: 1580, type: !250)
!9373 = !DILocation(line: 1580, column: 6, scope: !9356)
!9374 = !DILocalVariable(name: "mask", scope: !9356, file: !3, line: 1581, type: !6)
!9375 = !DILocation(line: 1581, column: 5, scope: !9356)
!9376 = !DILocation(line: 1581, column: 35, scope: !9356)
!9377 = !DILocation(line: 1581, column: 12, scope: !9356)
!9378 = !DILocalVariable(name: "tb_mask", scope: !9356, file: !3, line: 1582, type: !6)
!9379 = !DILocation(line: 1582, column: 5, scope: !9356)
!9380 = !DILocation(line: 1582, column: 38, scope: !9356)
!9381 = !DILocation(line: 1582, column: 15, scope: !9356)
!9382 = !DILocalVariable(name: "bp", scope: !9356, file: !3, line: 1583, type: !6)
!9383 = !DILocation(line: 1583, column: 5, scope: !9356)
!9384 = !DILocalVariable(name: "val", scope: !9356, file: !3, line: 1583, type: !6)
!9385 = !DILocation(line: 1583, column: 9, scope: !9356)
!9386 = !DILocation(line: 1583, column: 15, scope: !9356)
!9387 = !DILocation(line: 1583, column: 20, scope: !9356)
!9388 = !DILocation(line: 1583, column: 18, scope: !9356)
!9389 = !DILocation(line: 1585, column: 6, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 1585, column: 6)
!9391 = !DILocation(line: 1585, column: 11, scope: !9390)
!9392 = !DILocation(line: 1585, column: 17, scope: !9390)
!9393 = !DILocation(line: 1585, column: 42, scope: !9390)
!9394 = !DILocation(line: 1585, column: 45, scope: !9390)
!9395 = !DILocation(line: 1585, column: 49, scope: !9390)
!9396 = !DILocation(line: 1585, column: 6, scope: !9356)
!9397 = !DILocation(line: 1586, column: 10, scope: !9390)
!9398 = !DILocation(line: 1586, column: 14, scope: !9390)
!9399 = !DILocation(line: 1586, column: 30, scope: !9390)
!9400 = !DILocation(line: 1586, column: 9, scope: !9390)
!9401 = !DILocation(line: 1586, column: 7, scope: !9390)
!9402 = !DILocation(line: 1586, column: 3, scope: !9390)
!9403 = !DILocation(line: 1588, column: 7, scope: !9356)
!9404 = !DILocation(line: 1588, column: 11, scope: !9356)
!9405 = !DILocation(line: 1588, column: 5, scope: !9356)
!9406 = !DILocation(line: 1590, column: 7, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 1590, column: 6)
!9408 = !DILocation(line: 1590, column: 6, scope: !9356)
!9409 = !DILocation(line: 1592, column: 4, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 1590, column: 11)
!9411 = !DILocation(line: 1592, column: 8, scope: !9410)
!9412 = !DILocation(line: 1593, column: 4, scope: !9410)
!9413 = !DILocation(line: 1593, column: 8, scope: !9410)
!9414 = !DILocation(line: 1594, column: 3, scope: !9410)
!9415 = !DILocation(line: 1597, column: 48, scope: !9356)
!9416 = !DILocation(line: 1597, column: 17, scope: !9356)
!9417 = !DILocation(line: 1597, column: 15, scope: !9356)
!9418 = !DILocation(line: 1598, column: 9, scope: !9356)
!9419 = !DILocation(line: 1598, column: 26, scope: !9356)
!9420 = !DILocation(line: 1598, column: 29, scope: !9356)
!9421 = !DILocation(line: 1598, column: 22, scope: !9356)
!9422 = !DILocation(line: 1598, column: 3, scope: !9356)
!9423 = !DILocation(line: 1598, column: 7, scope: !9356)
!9424 = !DILocation(line: 1600, column: 7, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 1600, column: 6)
!9426 = !DILocation(line: 1600, column: 6, scope: !9425)
!9427 = !DILocation(line: 1600, column: 13, scope: !9425)
!9428 = !DILocation(line: 1600, column: 18, scope: !9425)
!9429 = !DILocation(line: 1600, column: 11, scope: !9425)
!9430 = !DILocation(line: 1600, column: 6, scope: !9356)
!9431 = !DILocation(line: 1601, column: 10, scope: !9425)
!9432 = !DILocation(line: 1601, column: 15, scope: !9425)
!9433 = !DILocation(line: 1601, column: 4, scope: !9425)
!9434 = !DILocation(line: 1601, column: 8, scope: !9425)
!9435 = !DILocation(line: 1601, column: 3, scope: !9425)
!9436 = !DILocation(line: 1603, column: 6, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 1603, column: 6)
!9438 = !DILocation(line: 1603, column: 11, scope: !9437)
!9439 = !DILocation(line: 1603, column: 17, scope: !9437)
!9440 = !DILocation(line: 1603, column: 36, scope: !9437)
!9441 = !DILocation(line: 1603, column: 39, scope: !9437)
!9442 = !DILocation(line: 1603, column: 44, scope: !9437)
!9443 = !DILocation(line: 1603, column: 42, scope: !9437)
!9444 = !DILocation(line: 1603, column: 6, scope: !9356)
!9445 = !DILocation(line: 1604, column: 4, scope: !9437)
!9446 = !DILocation(line: 1604, column: 8, scope: !9437)
!9447 = !DILocation(line: 1604, column: 3, scope: !9437)
!9448 = !DILocation(line: 1606, column: 10, scope: !9437)
!9449 = !DILocation(line: 1606, column: 15, scope: !9437)
!9450 = !DILocation(line: 1606, column: 23, scope: !9437)
!9451 = !DILocation(line: 1606, column: 22, scope: !9437)
!9452 = !DILocation(line: 1606, column: 20, scope: !9437)
!9453 = !DILocation(line: 1606, column: 4, scope: !9437)
!9454 = !DILocation(line: 1606, column: 8, scope: !9437)
!9455 = !DILocation(line: 1607, column: 1, scope: !9356)
!9456 = distinct !DISubprogram(name: "__arch_hweight8", scope: !6386, file: !6386, line: 31, type: !6387, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9457 = !DILocation(line: 15, column: 67, scope: !6385, inlinedAt: !9458)
!9458 = distinct !DILocation(line: 33, column: 9, scope: !9456)
!9459 = !DILocation(line: 17, column: 15, scope: !6385, inlinedAt: !9458)
!9460 = !DILocalVariable(name: "w", arg: 1, scope: !9456, file: !6386, line: 31, type: !15)
!9461 = !DILocation(line: 31, column: 57, scope: !9456)
!9462 = !DILocation(line: 33, column: 26, scope: !9456)
!9463 = !DILocation(line: 33, column: 28, scope: !9456)
!9464 = !DILocation(line: 21, column: 15, scope: !6385, inlinedAt: !9458)
!9465 = !DILocation(line: 19, column: 2, scope: !6385, inlinedAt: !9458)
!9466 = !DILocation(line: 23, column: 9, scope: !6385, inlinedAt: !9458)
!9467 = !DILocation(line: 33, column: 2, scope: !9456)
!9468 = distinct !DISubprogram(name: "__ilog2_u32", scope: !9263, file: !9263, line: 22, type: !4092, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9469 = !DILocation(line: 324, column: 45, scope: !8345, inlinedAt: !9470)
!9470 = distinct !DILocation(line: 24, column: 9, scope: !9468)
!9471 = !DILocation(line: 326, column: 6, scope: !8345, inlinedAt: !9470)
!9472 = !DILocalVariable(name: "n", arg: 1, scope: !9468, file: !9263, line: 22, type: !198)
!9473 = !DILocation(line: 22, column: 21, scope: !9468)
!9474 = !DILocation(line: 24, column: 13, scope: !9468)
!9475 = !DILocation(line: 340, column: 14, scope: !8345, inlinedAt: !9470)
!9476 = !DILocation(line: 338, column: 2, scope: !8345, inlinedAt: !9470)
!9477 = !DILocation(line: 351, column: 9, scope: !8345, inlinedAt: !9470)
!9478 = !DILocation(line: 351, column: 11, scope: !8345, inlinedAt: !9470)
!9479 = !DILocation(line: 24, column: 16, scope: !9468)
!9480 = !DILocation(line: 24, column: 2, scope: !9468)
!9481 = distinct !DISubprogram(name: "spi_nor_write_16bit_sr_and_check", scope: !3, file: !3, line: 792, type: !5060, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9482 = !DILocalVariable(name: "nor", arg: 1, scope: !9481, file: !3, line: 792, type: !4103)
!9483 = !DILocation(line: 792, column: 61, scope: !9481)
!9484 = !DILocalVariable(name: "sr1", arg: 2, scope: !9481, file: !3, line: 792, type: !6)
!9485 = !DILocation(line: 792, column: 69, scope: !9481)
!9486 = !DILocalVariable(name: "ret", scope: !9481, file: !3, line: 794, type: !182)
!9487 = !DILocation(line: 794, column: 6, scope: !9481)
!9488 = !DILocalVariable(name: "sr_cr", scope: !9481, file: !3, line: 795, type: !4439)
!9489 = !DILocation(line: 795, column: 6, scope: !9481)
!9490 = !DILocation(line: 795, column: 14, scope: !9481)
!9491 = !DILocation(line: 795, column: 19, scope: !9481)
!9492 = !DILocalVariable(name: "cr_written", scope: !9481, file: !3, line: 796, type: !6)
!9493 = !DILocation(line: 796, column: 5, scope: !9481)
!9494 = !DILocation(line: 799, column: 8, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9481, file: !3, line: 799, column: 6)
!9496 = !DILocation(line: 799, column: 13, scope: !9495)
!9497 = !DILocation(line: 799, column: 19, scope: !9495)
!9498 = !DILocation(line: 799, column: 6, scope: !9481)
!9499 = !DILocation(line: 800, column: 25, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 799, column: 41)
!9501 = !DILocation(line: 800, column: 31, scope: !9500)
!9502 = !DILocation(line: 800, column: 9, scope: !9500)
!9503 = !DILocation(line: 800, column: 7, scope: !9500)
!9504 = !DILocation(line: 801, column: 7, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 801, column: 7)
!9506 = !DILocation(line: 801, column: 7, scope: !9500)
!9507 = !DILocation(line: 802, column: 11, scope: !9505)
!9508 = !DILocation(line: 802, column: 4, scope: !9505)
!9509 = !DILocation(line: 803, column: 2, scope: !9500)
!9510 = !DILocation(line: 803, column: 13, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 803, column: 13)
!9512 = !DILocation(line: 803, column: 18, scope: !9511)
!9513 = !DILocation(line: 803, column: 26, scope: !9511)
!9514 = !DILocation(line: 803, column: 13, scope: !9495)
!9515 = !DILocation(line: 819, column: 3, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 803, column: 39)
!9517 = !DILocation(line: 819, column: 12, scope: !9516)
!9518 = !DILocation(line: 820, column: 2, scope: !9516)
!9519 = !DILocation(line: 821, column: 3, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 820, column: 9)
!9521 = !DILocation(line: 821, column: 12, scope: !9520)
!9522 = !DILocation(line: 824, column: 13, scope: !9481)
!9523 = !DILocation(line: 824, column: 2, scope: !9481)
!9524 = !DILocation(line: 824, column: 11, scope: !9481)
!9525 = !DILocation(line: 826, column: 25, scope: !9481)
!9526 = !DILocation(line: 826, column: 30, scope: !9481)
!9527 = !DILocation(line: 826, column: 8, scope: !9481)
!9528 = !DILocation(line: 826, column: 6, scope: !9481)
!9529 = !DILocation(line: 827, column: 6, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9481, file: !3, line: 827, column: 6)
!9531 = !DILocation(line: 827, column: 6, scope: !9481)
!9532 = !DILocation(line: 828, column: 10, scope: !9530)
!9533 = !DILocation(line: 828, column: 3, scope: !9530)
!9534 = !DILocation(line: 830, column: 6, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9481, file: !3, line: 830, column: 6)
!9536 = !DILocation(line: 830, column: 11, scope: !9535)
!9537 = !DILocation(line: 830, column: 17, scope: !9535)
!9538 = !DILocation(line: 830, column: 6, scope: !9481)
!9539 = !DILocation(line: 831, column: 3, scope: !9535)
!9540 = !DILocation(line: 833, column: 15, scope: !9481)
!9541 = !DILocation(line: 833, column: 13, scope: !9481)
!9542 = !DILocation(line: 835, column: 24, scope: !9481)
!9543 = !DILocation(line: 835, column: 30, scope: !9481)
!9544 = !DILocation(line: 835, column: 8, scope: !9481)
!9545 = !DILocation(line: 835, column: 6, scope: !9481)
!9546 = !DILocation(line: 836, column: 6, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9481, file: !3, line: 836, column: 6)
!9548 = !DILocation(line: 836, column: 6, scope: !9481)
!9549 = !DILocation(line: 837, column: 10, scope: !9547)
!9550 = !DILocation(line: 837, column: 3, scope: !9547)
!9551 = !DILocation(line: 839, column: 6, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9481, file: !3, line: 839, column: 6)
!9553 = !DILocation(line: 839, column: 20, scope: !9552)
!9554 = !DILocation(line: 839, column: 17, scope: !9552)
!9555 = !DILocation(line: 839, column: 6, scope: !9481)
!9556 = !DILocation(line: 841, column: 3, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 839, column: 30)
!9558 = !DILocation(line: 844, column: 2, scope: !9481)
!9559 = !DILocation(line: 845, column: 1, scope: !9481)
!9560 = distinct !DISubprogram(name: "spi_nor_is_unlocked_sr", scope: !3, file: !3, line: 1638, type: !9209, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9561 = !DILocalVariable(name: "nor", arg: 1, scope: !9560, file: !3, line: 1638, type: !4103)
!9562 = !DILocation(line: 1638, column: 51, scope: !9560)
!9563 = !DILocalVariable(name: "ofs", arg: 2, scope: !9560, file: !3, line: 1638, type: !674)
!9564 = !DILocation(line: 1638, column: 63, scope: !9560)
!9565 = !DILocalVariable(name: "len", arg: 3, scope: !9560, file: !3, line: 1638, type: !1033)
!9566 = !DILocation(line: 1638, column: 77, scope: !9560)
!9567 = !DILocalVariable(name: "sr", arg: 4, scope: !9560, file: !3, line: 1639, type: !6)
!9568 = !DILocation(line: 1639, column: 10, scope: !9560)
!9569 = !DILocation(line: 1641, column: 38, scope: !9560)
!9570 = !DILocation(line: 1641, column: 43, scope: !9560)
!9571 = !DILocation(line: 1641, column: 48, scope: !9560)
!9572 = !DILocation(line: 1641, column: 53, scope: !9560)
!9573 = !DILocation(line: 1641, column: 9, scope: !9560)
!9574 = !DILocation(line: 1641, column: 2, scope: !9560)
!9575 = distinct !DISubprogram(name: "kobject_name", scope: !1230, file: !1230, line: 88, type: !9576, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9576 = !DISubroutineType(types: !9577)
!9577 = !{!610, !9578}
!9578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9579, size: 64)
!9579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1229)
!9580 = !DILocalVariable(name: "kobj", arg: 1, scope: !9575, file: !1230, line: 88, type: !9578)
!9581 = !DILocation(line: 88, column: 62, scope: !9575)
!9582 = !DILocation(line: 90, column: 9, scope: !9575)
!9583 = !DILocation(line: 90, column: 15, scope: !9575)
!9584 = !DILocation(line: 90, column: 2, scope: !9575)
!9585 = distinct !DISubprogram(name: "div_u64_rem", scope: !9586, file: !9586, line: 25, type: !9587, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9586 = !DIFile(filename: "./include/linux/math64.h", directory: "/home/lizy2001/genbc/linux")
!9587 = !DISubroutineType(types: !9588)
!9588 = !{!250, !250, !198, !3424}
!9589 = !DILocalVariable(name: "dividend", arg: 1, scope: !9585, file: !9586, line: 25, type: !250)
!9590 = !DILocation(line: 25, column: 35, scope: !9585)
!9591 = !DILocalVariable(name: "divisor", arg: 2, scope: !9585, file: !9586, line: 25, type: !198)
!9592 = !DILocation(line: 25, column: 49, scope: !9585)
!9593 = !DILocalVariable(name: "remainder", arg: 3, scope: !9585, file: !9586, line: 25, type: !3424)
!9594 = !DILocation(line: 25, column: 63, scope: !9585)
!9595 = !DILocation(line: 27, column: 15, scope: !9585)
!9596 = !DILocation(line: 27, column: 26, scope: !9585)
!9597 = !DILocation(line: 27, column: 24, scope: !9585)
!9598 = !DILocation(line: 27, column: 3, scope: !9585)
!9599 = !DILocation(line: 27, column: 13, scope: !9585)
!9600 = !DILocation(line: 28, column: 9, scope: !9585)
!9601 = !DILocation(line: 28, column: 20, scope: !9585)
!9602 = !DILocation(line: 28, column: 18, scope: !9585)
!9603 = !DILocation(line: 28, column: 2, scope: !9585)
!9604 = distinct !DISubprogram(name: "spi_nor_erase_chip", scope: !3, file: !3, line: 992, type: !4533, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9605 = !DILocalVariable(name: "nor", arg: 1, scope: !9604, file: !3, line: 992, type: !4103)
!9606 = !DILocation(line: 992, column: 47, scope: !9604)
!9607 = !DILocalVariable(name: "ret", scope: !9604, file: !3, line: 994, type: !182)
!9608 = !DILocation(line: 994, column: 6, scope: !9604)
!9609 = !DILocation(line: 998, column: 6, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 998, column: 6)
!9611 = !DILocation(line: 998, column: 11, scope: !9610)
!9612 = !DILocation(line: 998, column: 6, scope: !9604)
!9613 = !DILocalVariable(name: "op", scope: !9614, file: !3, line: 999, type: !4302)
!9614 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 998, column: 19)
!9615 = !DILocation(line: 999, column: 21, scope: !9614)
!9616 = !DILocation(line: 1005, column: 25, scope: !9614)
!9617 = !DILocation(line: 1005, column: 30, scope: !9614)
!9618 = !DILocation(line: 1005, column: 9, scope: !9614)
!9619 = !DILocation(line: 1005, column: 7, scope: !9614)
!9620 = !DILocation(line: 1006, column: 2, scope: !9614)
!9621 = !DILocation(line: 1007, column: 9, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 1006, column: 9)
!9623 = !DILocation(line: 1007, column: 14, scope: !9622)
!9624 = !DILocation(line: 1007, column: 30, scope: !9622)
!9625 = !DILocation(line: 1007, column: 40, scope: !9622)
!9626 = !DILocation(line: 1007, column: 7, scope: !9622)
!9627 = !DILocation(line: 1011, column: 6, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 1011, column: 6)
!9629 = !DILocation(line: 1011, column: 6, scope: !9604)
!9630 = !DILocation(line: 1012, column: 3, scope: !9628)
!9631 = !DILocation(line: 1014, column: 9, scope: !9604)
!9632 = !DILocation(line: 1014, column: 2, scope: !9604)
!9633 = distinct !DISubprogram(name: "spi_nor_erase_sector", scope: !3, file: !3, line: 1134, type: !8342, scopeLine: 1135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9634 = !DILocalVariable(name: "nor", arg: 1, scope: !9633, file: !3, line: 1134, type: !4103)
!9635 = !DILocation(line: 1134, column: 49, scope: !9633)
!9636 = !DILocalVariable(name: "addr", arg: 2, scope: !9633, file: !3, line: 1134, type: !198)
!9637 = !DILocation(line: 1134, column: 58, scope: !9633)
!9638 = !DILocalVariable(name: "i", scope: !9633, file: !3, line: 1136, type: !182)
!9639 = !DILocation(line: 1136, column: 6, scope: !9633)
!9640 = !DILocation(line: 1138, column: 30, scope: !9633)
!9641 = !DILocation(line: 1138, column: 35, scope: !9633)
!9642 = !DILocation(line: 1138, column: 9, scope: !9633)
!9643 = !DILocation(line: 1138, column: 7, scope: !9633)
!9644 = !DILocation(line: 1140, column: 6, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 1140, column: 6)
!9646 = !DILocation(line: 1140, column: 11, scope: !9645)
!9647 = !DILocation(line: 1140, column: 6, scope: !9633)
!9648 = !DILocalVariable(name: "op", scope: !9649, file: !3, line: 1141, type: !4302)
!9649 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 1140, column: 19)
!9650 = !DILocation(line: 1141, column: 21, scope: !9649)
!9651 = !DILocation(line: 1142, column: 4, scope: !9649)
!9652 = !DILocation(line: 1147, column: 26, scope: !9649)
!9653 = !DILocation(line: 1147, column: 31, scope: !9649)
!9654 = !DILocation(line: 1147, column: 10, scope: !9649)
!9655 = !DILocation(line: 1147, column: 3, scope: !9649)
!9656 = !DILocation(line: 1148, column: 13, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 1148, column: 13)
!9658 = !DILocation(line: 1148, column: 18, scope: !9657)
!9659 = !DILocation(line: 1148, column: 34, scope: !9657)
!9660 = !DILocation(line: 1148, column: 13, scope: !9645)
!9661 = !DILocation(line: 1149, column: 10, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 1148, column: 41)
!9663 = !DILocation(line: 1149, column: 15, scope: !9662)
!9664 = !DILocation(line: 1149, column: 31, scope: !9662)
!9665 = !DILocation(line: 1149, column: 37, scope: !9662)
!9666 = !DILocation(line: 1149, column: 42, scope: !9662)
!9667 = !DILocation(line: 1149, column: 3, scope: !9662)
!9668 = !DILocation(line: 1156, column: 11, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 1156, column: 2)
!9670 = !DILocation(line: 1156, column: 16, scope: !9669)
!9671 = !DILocation(line: 1156, column: 27, scope: !9669)
!9672 = !DILocation(line: 1156, column: 9, scope: !9669)
!9673 = !DILocation(line: 1156, column: 7, scope: !9669)
!9674 = !DILocation(line: 1156, column: 32, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 1156, column: 2)
!9676 = !DILocation(line: 1156, column: 34, scope: !9675)
!9677 = !DILocation(line: 1156, column: 2, scope: !9669)
!9678 = !DILocation(line: 1157, column: 23, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1156, column: 45)
!9680 = !DILocation(line: 1157, column: 28, scope: !9679)
!9681 = !DILocation(line: 1157, column: 3, scope: !9679)
!9682 = !DILocation(line: 1157, column: 8, scope: !9679)
!9683 = !DILocation(line: 1157, column: 18, scope: !9679)
!9684 = !DILocation(line: 1157, column: 21, scope: !9679)
!9685 = !DILocation(line: 1158, column: 8, scope: !9679)
!9686 = !DILocation(line: 1159, column: 2, scope: !9679)
!9687 = !DILocation(line: 1156, column: 41, scope: !9675)
!9688 = !DILocation(line: 1156, column: 2, scope: !9675)
!9689 = distinct !{!9689, !9677, !9690}
!9690 = !DILocation(line: 1159, column: 2, scope: !9669)
!9691 = !DILocation(line: 1161, column: 9, scope: !9633)
!9692 = !DILocation(line: 1161, column: 14, scope: !9633)
!9693 = !DILocation(line: 1161, column: 30, scope: !9633)
!9694 = !DILocation(line: 1161, column: 40, scope: !9633)
!9695 = !DILocation(line: 1161, column: 45, scope: !9633)
!9696 = !DILocation(line: 1161, column: 50, scope: !9633)
!9697 = !DILocation(line: 1162, column: 12, scope: !9633)
!9698 = !DILocation(line: 1162, column: 17, scope: !9633)
!9699 = !DILocation(line: 1162, column: 28, scope: !9633)
!9700 = !DILocation(line: 1162, column: 33, scope: !9633)
!9701 = !DILocation(line: 1161, column: 2, scope: !9633)
!9702 = !DILocation(line: 1163, column: 1, scope: !9633)
!9703 = distinct !DISubprogram(name: "spi_nor_erase_multi_sectors", scope: !3, file: !3, line: 1409, type: !9704, scopeLine: 1410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9704 = !DISubroutineType(types: !9705)
!9705 = !{!182, !4103, !250, !198}
!9706 = !DILocalVariable(name: "nor", arg: 1, scope: !9703, file: !3, line: 1409, type: !4103)
!9707 = !DILocation(line: 1409, column: 56, scope: !9703)
!9708 = !DILocalVariable(name: "addr", arg: 2, scope: !9703, file: !3, line: 1409, type: !250)
!9709 = !DILocation(line: 1409, column: 65, scope: !9703)
!9710 = !DILocalVariable(name: "len", arg: 3, scope: !9703, file: !3, line: 1409, type: !198)
!9711 = !DILocation(line: 1409, column: 75, scope: !9703)
!9712 = !DILocalVariable(name: "erase_list", scope: !9703, file: !3, line: 1411, type: !243)
!9713 = !DILocation(line: 1411, column: 2, scope: !9703)
!9714 = !DILocalVariable(name: "cmd", scope: !9703, file: !3, line: 1412, type: !4079)
!9715 = !DILocation(line: 1412, column: 32, scope: !9703)
!9716 = !DILocalVariable(name: "next", scope: !9703, file: !3, line: 1412, type: !4079)
!9717 = !DILocation(line: 1412, column: 38, scope: !9703)
!9718 = !DILocalVariable(name: "ret", scope: !9703, file: !3, line: 1413, type: !182)
!9719 = !DILocation(line: 1413, column: 6, scope: !9703)
!9720 = !DILocation(line: 1415, column: 36, scope: !9703)
!9721 = !DILocation(line: 1415, column: 54, scope: !9703)
!9722 = !DILocation(line: 1415, column: 60, scope: !9703)
!9723 = !DILocation(line: 1415, column: 8, scope: !9703)
!9724 = !DILocation(line: 1415, column: 6, scope: !9703)
!9725 = !DILocation(line: 1416, column: 6, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 1416, column: 6)
!9727 = !DILocation(line: 1416, column: 6, scope: !9703)
!9728 = !DILocation(line: 1417, column: 10, scope: !9726)
!9729 = !DILocation(line: 1417, column: 3, scope: !9726)
!9730 = !DILocalVariable(name: "__mptr", scope: !9731, file: !3, line: 1419, type: !204)
!9731 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1419, column: 2)
!9732 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 1419, column: 2)
!9733 = !DILocation(line: 1419, column: 2, scope: !9731)
!9734 = !DILocation(line: 1419, column: 2, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 1419, column: 2)
!9736 = !DILocation(line: 1419, column: 2, scope: !9732)
!9737 = !DILocalVariable(name: "__mptr", scope: !9738, file: !3, line: 1419, type: !204)
!9738 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1419, column: 2)
!9739 = !DILocation(line: 1419, column: 2, scope: !9738)
!9740 = !DILocation(line: 1419, column: 2, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 1419, column: 2)
!9742 = !DILocation(line: 1419, column: 2, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1419, column: 2)
!9744 = !DILocation(line: 1420, column: 23, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 1419, column: 57)
!9746 = !DILocation(line: 1420, column: 28, scope: !9745)
!9747 = !DILocation(line: 1420, column: 3, scope: !9745)
!9748 = !DILocation(line: 1420, column: 8, scope: !9745)
!9749 = !DILocation(line: 1420, column: 21, scope: !9745)
!9750 = !DILocation(line: 1421, column: 3, scope: !9745)
!9751 = !DILocation(line: 1421, column: 10, scope: !9745)
!9752 = !DILocation(line: 1421, column: 15, scope: !9745)
!9753 = !DILocation(line: 1422, column: 31, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 1421, column: 22)
!9755 = !DILocation(line: 1422, column: 10, scope: !9754)
!9756 = !DILocation(line: 1422, column: 8, scope: !9754)
!9757 = !DILocation(line: 1423, column: 8, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 1423, column: 8)
!9759 = !DILocation(line: 1423, column: 8, scope: !9754)
!9760 = !DILocation(line: 1424, column: 5, scope: !9758)
!9761 = !DILocation(line: 1426, column: 31, scope: !9754)
!9762 = !DILocation(line: 1426, column: 36, scope: !9754)
!9763 = !DILocation(line: 1426, column: 10, scope: !9754)
!9764 = !DILocation(line: 1426, column: 8, scope: !9754)
!9765 = !DILocation(line: 1427, column: 8, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 1427, column: 8)
!9767 = !DILocation(line: 1427, column: 8, scope: !9754)
!9768 = !DILocation(line: 1428, column: 5, scope: !9766)
!9769 = !DILocation(line: 1430, column: 12, scope: !9754)
!9770 = !DILocation(line: 1430, column: 17, scope: !9754)
!9771 = !DILocation(line: 1430, column: 9, scope: !9754)
!9772 = !DILocation(line: 1431, column: 4, scope: !9754)
!9773 = !DILocation(line: 1431, column: 9, scope: !9754)
!9774 = !DILocation(line: 1431, column: 14, scope: !9754)
!9775 = !DILocation(line: 1433, column: 34, scope: !9754)
!9776 = !DILocation(line: 1433, column: 10, scope: !9754)
!9777 = !DILocation(line: 1433, column: 8, scope: !9754)
!9778 = !DILocation(line: 1434, column: 8, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 1434, column: 8)
!9780 = !DILocation(line: 1434, column: 8, scope: !9754)
!9781 = !DILocation(line: 1435, column: 5, scope: !9779)
!9782 = distinct !{!9782, !9750, !9783}
!9783 = !DILocation(line: 1436, column: 3, scope: !9745)
!9784 = !DILocation(line: 1437, column: 13, scope: !9745)
!9785 = !DILocation(line: 1437, column: 18, scope: !9745)
!9786 = !DILocation(line: 1437, column: 3, scope: !9745)
!9787 = !DILocation(line: 1438, column: 9, scope: !9745)
!9788 = !DILocation(line: 1438, column: 3, scope: !9745)
!9789 = !DILocation(line: 1439, column: 2, scope: !9745)
!9790 = !DILocalVariable(name: "__mptr", scope: !9791, file: !3, line: 1419, type: !204)
!9791 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 1419, column: 2)
!9792 = !DILocation(line: 1419, column: 2, scope: !9791)
!9793 = !DILocation(line: 1419, column: 2, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9791, file: !3, line: 1419, column: 2)
!9795 = distinct !{!9795, !9736, !9796}
!9796 = !DILocation(line: 1439, column: 2, scope: !9732)
!9797 = !DILocation(line: 1441, column: 2, scope: !9703)
!9798 = !DILabel(scope: !9703, name: "destroy_erase_cmd_list", file: !3, line: 1443)
!9799 = !DILocation(line: 1443, column: 1, scope: !9703)
!9800 = !DILocation(line: 1444, column: 2, scope: !9703)
!9801 = !DILocation(line: 1445, column: 9, scope: !9703)
!9802 = !DILocation(line: 1445, column: 2, scope: !9703)
!9803 = !DILocation(line: 1446, column: 1, scope: !9703)
!9804 = distinct !DISubprogram(name: "spi_nor_init_erase_cmd_list", scope: !3, file: !3, line: 1343, type: !9805, scopeLine: 1346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9805 = !DISubroutineType(types: !9806)
!9806 = !{!182, !4103, !246, !250, !198}
!9807 = !DILocalVariable(name: "nor", arg: 1, scope: !9804, file: !3, line: 1343, type: !4103)
!9808 = !DILocation(line: 1343, column: 56, scope: !9804)
!9809 = !DILocalVariable(name: "erase_list", arg: 2, scope: !9804, file: !3, line: 1344, type: !246)
!9810 = !DILocation(line: 1344, column: 30, scope: !9804)
!9811 = !DILocalVariable(name: "addr", arg: 3, scope: !9804, file: !3, line: 1345, type: !250)
!9812 = !DILocation(line: 1345, column: 16, scope: !9804)
!9813 = !DILocalVariable(name: "len", arg: 4, scope: !9804, file: !3, line: 1345, type: !198)
!9814 = !DILocation(line: 1345, column: 26, scope: !9804)
!9815 = !DILocalVariable(name: "map", scope: !9804, file: !3, line: 1347, type: !9816)
!9816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9817, size: 64)
!9817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4512)
!9818 = !DILocation(line: 1347, column: 34, scope: !9804)
!9819 = !DILocation(line: 1347, column: 41, scope: !9804)
!9820 = !DILocation(line: 1347, column: 46, scope: !9804)
!9821 = !DILocation(line: 1347, column: 54, scope: !9804)
!9822 = !DILocalVariable(name: "erase", scope: !9804, file: !3, line: 1348, type: !8472)
!9823 = !DILocation(line: 1348, column: 35, scope: !9804)
!9824 = !DILocalVariable(name: "prev_erase", scope: !9804, file: !3, line: 1348, type: !8472)
!9825 = !DILocation(line: 1348, column: 43, scope: !9804)
!9826 = !DILocalVariable(name: "region", scope: !9804, file: !3, line: 1349, type: !4515)
!9827 = !DILocation(line: 1349, column: 31, scope: !9804)
!9828 = !DILocalVariable(name: "cmd", scope: !9804, file: !3, line: 1350, type: !4079)
!9829 = !DILocation(line: 1350, column: 32, scope: !9804)
!9830 = !DILocalVariable(name: "region_end", scope: !9804, file: !3, line: 1351, type: !250)
!9831 = !DILocation(line: 1351, column: 6, scope: !9804)
!9832 = !DILocalVariable(name: "ret", scope: !9804, file: !3, line: 1352, type: !182)
!9833 = !DILocation(line: 1352, column: 6, scope: !9804)
!9834 = !DILocation(line: 1354, column: 37, scope: !9804)
!9835 = !DILocation(line: 1354, column: 42, scope: !9804)
!9836 = !DILocation(line: 1354, column: 11, scope: !9804)
!9837 = !DILocation(line: 1354, column: 9, scope: !9804)
!9838 = !DILocation(line: 1355, column: 13, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 1355, column: 6)
!9840 = !DILocation(line: 1355, column: 6, scope: !9839)
!9841 = !DILocation(line: 1355, column: 6, scope: !9804)
!9842 = !DILocation(line: 1356, column: 18, scope: !9839)
!9843 = !DILocation(line: 1356, column: 10, scope: !9839)
!9844 = !DILocation(line: 1356, column: 3, scope: !9839)
!9845 = !DILocation(line: 1358, column: 34, scope: !9804)
!9846 = !DILocation(line: 1358, column: 15, scope: !9804)
!9847 = !DILocation(line: 1358, column: 13, scope: !9804)
!9848 = !DILocation(line: 1360, column: 2, scope: !9804)
!9849 = !DILocation(line: 1360, column: 9, scope: !9804)
!9850 = !DILocation(line: 1361, column: 40, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 1360, column: 14)
!9852 = !DILocation(line: 1361, column: 45, scope: !9851)
!9853 = !DILocation(line: 1361, column: 53, scope: !9851)
!9854 = !DILocation(line: 1361, column: 59, scope: !9851)
!9855 = !DILocation(line: 1361, column: 11, scope: !9851)
!9856 = !DILocation(line: 1361, column: 9, scope: !9851)
!9857 = !DILocation(line: 1362, column: 8, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9851, file: !3, line: 1362, column: 7)
!9859 = !DILocation(line: 1362, column: 7, scope: !9851)
!9860 = !DILocation(line: 1363, column: 4, scope: !9858)
!9861 = !DILocation(line: 1365, column: 7, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9851, file: !3, line: 1365, column: 7)
!9863 = !DILocation(line: 1365, column: 21, scope: !9862)
!9864 = !DILocation(line: 1365, column: 18, scope: !9862)
!9865 = !DILocation(line: 1365, column: 27, scope: !9862)
!9866 = !DILocation(line: 1366, column: 7, scope: !9862)
!9867 = !DILocation(line: 1366, column: 15, scope: !9862)
!9868 = !DILocation(line: 1366, column: 22, scope: !9862)
!9869 = !DILocation(line: 1365, column: 7, scope: !9851)
!9870 = !DILocation(line: 1367, column: 33, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9862, file: !3, line: 1366, column: 46)
!9872 = !DILocation(line: 1367, column: 41, scope: !9871)
!9873 = !DILocation(line: 1367, column: 10, scope: !9871)
!9874 = !DILocation(line: 1367, column: 8, scope: !9871)
!9875 = !DILocation(line: 1368, column: 15, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 1368, column: 8)
!9877 = !DILocation(line: 1368, column: 8, scope: !9876)
!9878 = !DILocation(line: 1368, column: 8, scope: !9871)
!9879 = !DILocation(line: 1369, column: 19, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9876, file: !3, line: 1368, column: 21)
!9881 = !DILocation(line: 1369, column: 11, scope: !9880)
!9882 = !DILocation(line: 1369, column: 9, scope: !9880)
!9883 = !DILocation(line: 1370, column: 5, scope: !9880)
!9884 = !DILocation(line: 1373, column: 19, scope: !9871)
!9885 = !DILocation(line: 1373, column: 24, scope: !9871)
!9886 = !DILocation(line: 1373, column: 30, scope: !9871)
!9887 = !DILocation(line: 1373, column: 4, scope: !9871)
!9888 = !DILocation(line: 1374, column: 3, scope: !9871)
!9889 = !DILocation(line: 1375, column: 4, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9862, file: !3, line: 1374, column: 10)
!9891 = !DILocation(line: 1375, column: 9, scope: !9890)
!9892 = !DILocation(line: 1375, column: 14, scope: !9890)
!9893 = !DILocation(line: 1378, column: 11, scope: !9851)
!9894 = !DILocation(line: 1378, column: 16, scope: !9851)
!9895 = !DILocation(line: 1378, column: 8, scope: !9851)
!9896 = !DILocation(line: 1379, column: 10, scope: !9851)
!9897 = !DILocation(line: 1379, column: 15, scope: !9851)
!9898 = !DILocation(line: 1379, column: 7, scope: !9851)
!9899 = !DILocation(line: 1381, column: 7, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9851, file: !3, line: 1381, column: 7)
!9901 = !DILocation(line: 1381, column: 11, scope: !9900)
!9902 = !DILocation(line: 1381, column: 14, scope: !9900)
!9903 = !DILocation(line: 1381, column: 22, scope: !9900)
!9904 = !DILocation(line: 1381, column: 19, scope: !9900)
!9905 = !DILocation(line: 1381, column: 7, scope: !9851)
!9906 = !DILocation(line: 1382, column: 33, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 1381, column: 34)
!9908 = !DILocation(line: 1382, column: 13, scope: !9907)
!9909 = !DILocation(line: 1382, column: 11, scope: !9907)
!9910 = !DILocation(line: 1383, column: 9, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 1383, column: 8)
!9912 = !DILocation(line: 1383, column: 8, scope: !9907)
!9913 = !DILocation(line: 1384, column: 5, scope: !9911)
!9914 = !DILocation(line: 1385, column: 36, scope: !9907)
!9915 = !DILocation(line: 1385, column: 17, scope: !9907)
!9916 = !DILocation(line: 1385, column: 15, scope: !9907)
!9917 = !DILocation(line: 1386, column: 3, scope: !9907)
!9918 = !DILocation(line: 1388, column: 16, scope: !9851)
!9919 = !DILocation(line: 1388, column: 14, scope: !9851)
!9920 = distinct !{!9920, !9848, !9921}
!9921 = !DILocation(line: 1389, column: 2, scope: !9804)
!9922 = !DILocation(line: 1391, column: 2, scope: !9804)
!9923 = !DILabel(scope: !9804, name: "destroy_erase_cmd_list", file: !3, line: 1393)
!9924 = !DILocation(line: 1393, column: 1, scope: !9804)
!9925 = !DILocation(line: 1394, column: 33, scope: !9804)
!9926 = !DILocation(line: 1394, column: 2, scope: !9804)
!9927 = !DILocation(line: 1395, column: 9, scope: !9804)
!9928 = !DILocation(line: 1395, column: 2, scope: !9804)
!9929 = !DILocation(line: 1396, column: 1, scope: !9804)
!9930 = distinct !DISubprogram(name: "list_del", scope: !9931, file: !9931, line: 144, type: !9932, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9931 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!9932 = !DISubroutineType(types: !9933)
!9933 = !{null, !246}
!9934 = !DILocalVariable(name: "entry", arg: 1, scope: !9930, file: !9931, line: 144, type: !246)
!9935 = !DILocation(line: 144, column: 47, scope: !9930)
!9936 = !DILocation(line: 146, column: 19, scope: !9930)
!9937 = !DILocation(line: 146, column: 2, scope: !9930)
!9938 = !DILocation(line: 147, column: 2, scope: !9930)
!9939 = !DILocation(line: 147, column: 9, scope: !9930)
!9940 = !DILocation(line: 147, column: 14, scope: !9930)
!9941 = !DILocation(line: 148, column: 2, scope: !9930)
!9942 = !DILocation(line: 148, column: 9, scope: !9930)
!9943 = !DILocation(line: 148, column: 14, scope: !9930)
!9944 = !DILocation(line: 149, column: 1, scope: !9930)
!9945 = distinct !DISubprogram(name: "spi_nor_destroy_erase_cmd_list", scope: !3, file: !3, line: 1320, type: !9932, scopeLine: 1321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9946 = !DILocalVariable(name: "erase_list", arg: 1, scope: !9945, file: !3, line: 1320, type: !246)
!9947 = !DILocation(line: 1320, column: 62, scope: !9945)
!9948 = !DILocalVariable(name: "cmd", scope: !9945, file: !3, line: 1322, type: !4079)
!9949 = !DILocation(line: 1322, column: 32, scope: !9945)
!9950 = !DILocalVariable(name: "next", scope: !9945, file: !3, line: 1322, type: !4079)
!9951 = !DILocation(line: 1322, column: 38, scope: !9945)
!9952 = !DILocalVariable(name: "__mptr", scope: !9953, file: !3, line: 1324, type: !204)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 1324, column: 2)
!9954 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 1324, column: 2)
!9955 = !DILocation(line: 1324, column: 2, scope: !9953)
!9956 = !DILocation(line: 1324, column: 2, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 1324, column: 2)
!9958 = !DILocation(line: 1324, column: 2, scope: !9954)
!9959 = !DILocalVariable(name: "__mptr", scope: !9960, file: !3, line: 1324, type: !204)
!9960 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 1324, column: 2)
!9961 = !DILocation(line: 1324, column: 2, scope: !9960)
!9962 = !DILocation(line: 1324, column: 2, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 1324, column: 2)
!9964 = !DILocation(line: 1324, column: 2, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 1324, column: 2)
!9966 = !DILocation(line: 1325, column: 13, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 1324, column: 56)
!9968 = !DILocation(line: 1325, column: 18, scope: !9967)
!9969 = !DILocation(line: 1325, column: 3, scope: !9967)
!9970 = !DILocation(line: 1326, column: 9, scope: !9967)
!9971 = !DILocation(line: 1326, column: 3, scope: !9967)
!9972 = !DILocation(line: 1327, column: 2, scope: !9967)
!9973 = !DILocalVariable(name: "__mptr", scope: !9974, file: !3, line: 1324, type: !204)
!9974 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 1324, column: 2)
!9975 = !DILocation(line: 1324, column: 2, scope: !9974)
!9976 = !DILocation(line: 1324, column: 2, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 1324, column: 2)
!9978 = distinct !{!9978, !9958, !9979}
!9979 = !DILocation(line: 1327, column: 2, scope: !9954)
!9980 = !DILocation(line: 1328, column: 1, scope: !9945)
!9981 = distinct !DISubprogram(name: "spi_nor_find_erase_region", scope: !3, file: !3, line: 1268, type: !9982, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!9982 = !DISubroutineType(types: !9983)
!9983 = !{!4515, !9816, !250}
!9984 = !DILocalVariable(name: "map", arg: 1, scope: !9981, file: !3, line: 1268, type: !9816)
!9985 = !DILocation(line: 1268, column: 59, scope: !9981)
!9986 = !DILocalVariable(name: "addr", arg: 2, scope: !9981, file: !3, line: 1268, type: !250)
!9987 = !DILocation(line: 1268, column: 68, scope: !9981)
!9988 = !DILocalVariable(name: "region", scope: !9981, file: !3, line: 1270, type: !4515)
!9989 = !DILocation(line: 1270, column: 31, scope: !9981)
!9990 = !DILocation(line: 1270, column: 40, scope: !9981)
!9991 = !DILocation(line: 1270, column: 45, scope: !9981)
!9992 = !DILocalVariable(name: "region_start", scope: !9981, file: !3, line: 1271, type: !250)
!9993 = !DILocation(line: 1271, column: 6, scope: !9981)
!9994 = !DILocation(line: 1271, column: 21, scope: !9981)
!9995 = !DILocation(line: 1271, column: 29, scope: !9981)
!9996 = !DILocation(line: 1271, column: 36, scope: !9981)
!9997 = !DILocalVariable(name: "region_end", scope: !9981, file: !3, line: 1272, type: !250)
!9998 = !DILocation(line: 1272, column: 6, scope: !9981)
!9999 = !DILocation(line: 1272, column: 19, scope: !9981)
!10000 = !DILocation(line: 1272, column: 34, scope: !9981)
!10001 = !DILocation(line: 1272, column: 42, scope: !9981)
!10002 = !DILocation(line: 1272, column: 32, scope: !9981)
!10003 = !DILocation(line: 1274, column: 2, scope: !9981)
!10004 = !DILocation(line: 1274, column: 9, scope: !9981)
!10005 = !DILocation(line: 1274, column: 16, scope: !9981)
!10006 = !DILocation(line: 1274, column: 14, scope: !9981)
!10007 = !DILocation(line: 1274, column: 29, scope: !9981)
!10008 = !DILocation(line: 1274, column: 32, scope: !9981)
!10009 = !DILocation(line: 1274, column: 40, scope: !9981)
!10010 = !DILocation(line: 1274, column: 37, scope: !9981)
!10011 = !DILocation(line: 1275, column: 32, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 1274, column: 52)
!10013 = !DILocation(line: 1275, column: 12, scope: !10012)
!10014 = !DILocation(line: 1275, column: 10, scope: !10012)
!10015 = !DILocation(line: 1276, column: 8, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 1276, column: 7)
!10017 = !DILocation(line: 1276, column: 7, scope: !10012)
!10018 = !DILocation(line: 1277, column: 11, scope: !10016)
!10019 = !DILocation(line: 1277, column: 4, scope: !10016)
!10020 = !DILocation(line: 1279, column: 18, scope: !10012)
!10021 = !DILocation(line: 1279, column: 26, scope: !10012)
!10022 = !DILocation(line: 1279, column: 33, scope: !10012)
!10023 = !DILocation(line: 1279, column: 16, scope: !10012)
!10024 = !DILocation(line: 1280, column: 16, scope: !10012)
!10025 = !DILocation(line: 1280, column: 31, scope: !10012)
!10026 = !DILocation(line: 1280, column: 39, scope: !10012)
!10027 = !DILocation(line: 1280, column: 29, scope: !10012)
!10028 = !DILocation(line: 1280, column: 14, scope: !10012)
!10029 = distinct !{!10029, !10003, !10030}
!10030 = !DILocation(line: 1281, column: 2, scope: !9981)
!10031 = !DILocation(line: 1283, column: 9, scope: !9981)
!10032 = !DILocation(line: 1283, column: 2, scope: !9981)
!10033 = !DILocation(line: 1284, column: 1, scope: !9981)
!10034 = distinct !DISubprogram(name: "spi_nor_region_end", scope: !3, file: !3, line: 1238, type: !5296, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10035 = !DILocalVariable(name: "region", arg: 1, scope: !10034, file: !3, line: 1238, type: !5298)
!10036 = !DILocation(line: 1238, column: 66, scope: !10034)
!10037 = !DILocation(line: 1240, column: 10, scope: !10034)
!10038 = !DILocation(line: 1240, column: 18, scope: !10034)
!10039 = !DILocation(line: 1240, column: 25, scope: !10034)
!10040 = !DILocation(line: 1240, column: 53, scope: !10034)
!10041 = !DILocation(line: 1240, column: 61, scope: !10034)
!10042 = !DILocation(line: 1240, column: 51, scope: !10034)
!10043 = !DILocation(line: 1240, column: 2, scope: !10034)
!10044 = distinct !DISubprogram(name: "spi_nor_find_best_erase_type", scope: !3, file: !3, line: 1195, type: !10045, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10045 = !DISubroutineType(types: !10046)
!10046 = !{!8472, !9816, !5298, !250, !198}
!10047 = !DILocalVariable(name: "map", arg: 1, scope: !10044, file: !3, line: 1195, type: !9816)
!10048 = !DILocation(line: 1195, column: 62, scope: !10044)
!10049 = !DILocalVariable(name: "region", arg: 2, scope: !10044, file: !3, line: 1196, type: !5298)
!10050 = !DILocation(line: 1196, column: 44, scope: !10044)
!10051 = !DILocalVariable(name: "addr", arg: 3, scope: !10044, file: !3, line: 1197, type: !250)
!10052 = !DILocation(line: 1197, column: 13, scope: !10044)
!10053 = !DILocalVariable(name: "len", arg: 4, scope: !10044, file: !3, line: 1197, type: !198)
!10054 = !DILocation(line: 1197, column: 23, scope: !10044)
!10055 = !DILocalVariable(name: "erase", scope: !10044, file: !3, line: 1199, type: !8472)
!10056 = !DILocation(line: 1199, column: 35, scope: !10044)
!10057 = !DILocalVariable(name: "rem", scope: !10044, file: !3, line: 1200, type: !198)
!10058 = !DILocation(line: 1200, column: 6, scope: !10044)
!10059 = !DILocalVariable(name: "i", scope: !10044, file: !3, line: 1201, type: !182)
!10060 = !DILocation(line: 1201, column: 6, scope: !10044)
!10061 = !DILocalVariable(name: "erase_mask", scope: !10044, file: !3, line: 1202, type: !6)
!10062 = !DILocation(line: 1202, column: 5, scope: !10044)
!10063 = !DILocation(line: 1202, column: 18, scope: !10044)
!10064 = !DILocation(line: 1202, column: 26, scope: !10044)
!10065 = !DILocation(line: 1202, column: 33, scope: !10044)
!10066 = !DILocation(line: 1208, column: 9, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10044, file: !3, line: 1208, column: 2)
!10068 = !DILocation(line: 1208, column: 7, scope: !10067)
!10069 = !DILocation(line: 1208, column: 36, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10067, file: !3, line: 1208, column: 2)
!10071 = !DILocation(line: 1208, column: 38, scope: !10070)
!10072 = !DILocation(line: 1208, column: 2, scope: !10067)
!10073 = !DILocation(line: 1210, column: 9, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 1210, column: 7)
!10075 = distinct !DILexicalBlock(scope: !10070, file: !3, line: 1208, column: 49)
!10076 = !DILocation(line: 1210, column: 22, scope: !10074)
!10077 = !DILocation(line: 1210, column: 20, scope: !10074)
!10078 = !DILocation(line: 1210, column: 7, scope: !10075)
!10079 = !DILocation(line: 1211, column: 4, scope: !10074)
!10080 = !DILocation(line: 1213, column: 12, scope: !10075)
!10081 = !DILocation(line: 1213, column: 17, scope: !10075)
!10082 = !DILocation(line: 1213, column: 28, scope: !10075)
!10083 = !DILocation(line: 1213, column: 9, scope: !10075)
!10084 = !DILocation(line: 1216, column: 7, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 1216, column: 7)
!10086 = !DILocation(line: 1216, column: 14, scope: !10085)
!10087 = !DILocation(line: 1216, column: 21, scope: !10085)
!10088 = !DILocation(line: 1216, column: 19, scope: !10085)
!10089 = !DILocation(line: 1216, column: 7, scope: !10075)
!10090 = !DILocation(line: 1217, column: 4, scope: !10085)
!10091 = !DILocation(line: 1220, column: 7, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 1220, column: 7)
!10093 = !DILocation(line: 1220, column: 15, scope: !10092)
!10094 = !DILocation(line: 1220, column: 22, scope: !10092)
!10095 = !DILocation(line: 1220, column: 7, scope: !10075)
!10096 = !DILocation(line: 1221, column: 11, scope: !10092)
!10097 = !DILocation(line: 1221, column: 4, scope: !10092)
!10098 = !DILocation(line: 1223, column: 29, scope: !10075)
!10099 = !DILocation(line: 1223, column: 36, scope: !10075)
!10100 = !DILocation(line: 1223, column: 3, scope: !10075)
!10101 = !DILocation(line: 1224, column: 7, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 1224, column: 7)
!10103 = !DILocation(line: 1224, column: 7, scope: !10075)
!10104 = !DILocation(line: 1225, column: 4, scope: !10102)
!10105 = !DILocation(line: 1227, column: 11, scope: !10102)
!10106 = !DILocation(line: 1227, column: 4, scope: !10102)
!10107 = !DILocation(line: 1208, column: 45, scope: !10070)
!10108 = !DILocation(line: 1208, column: 2, scope: !10070)
!10109 = distinct !{!10109, !10072, !10110}
!10110 = !DILocation(line: 1228, column: 2, scope: !10067)
!10111 = !DILocation(line: 1230, column: 2, scope: !10044)
!10112 = !DILocation(line: 1231, column: 1, scope: !10044)
!10113 = distinct !DISubprogram(name: "spi_nor_init_erase_cmd", scope: !3, file: !3, line: 1295, type: !10114, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{!4079, !5298, !8472}
!10116 = !DILocalVariable(name: "s", arg: 1, scope: !10117, file: !175, line: 445, type: !3102)
!10117 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !175, file: !175, line: 445, type: !10118, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10118 = !DISubroutineType(types: !10119)
!10119 = !{!204, !3102, !183, !1108}
!10120 = !DILocation(line: 445, column: 72, scope: !10117, inlinedAt: !10121)
!10121 = distinct !DILocation(line: 552, column: 10, scope: !10122, inlinedAt: !10127)
!10122 = distinct !DILexicalBlock(scope: !10123, file: !175, line: 540, column: 34)
!10123 = distinct !DILexicalBlock(scope: !10124, file: !175, line: 540, column: 6)
!10124 = distinct !DISubprogram(name: "kmalloc", scope: !175, file: !175, line: 538, type: !10125, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10125 = !DISubroutineType(types: !10126)
!10126 = !{!204, !1108, !183}
!10127 = distinct !DILocation(line: 1300, column: 8, scope: !10113)
!10128 = !DILocalVariable(name: "flags", arg: 2, scope: !10117, file: !175, line: 446, type: !183)
!10129 = !DILocation(line: 446, column: 9, scope: !10117, inlinedAt: !10121)
!10130 = !DILocalVariable(name: "size", arg: 3, scope: !10117, file: !175, line: 446, type: !1108)
!10131 = !DILocation(line: 446, column: 23, scope: !10117, inlinedAt: !10121)
!10132 = !DILocalVariable(name: "ret", scope: !10117, file: !175, line: 448, type: !204)
!10133 = !DILocation(line: 448, column: 8, scope: !10117, inlinedAt: !10121)
!10134 = !DILocalVariable(name: "flags", arg: 1, scope: !10135, file: !175, line: 318, type: !183)
!10135 = distinct !DISubprogram(name: "kmalloc_type", scope: !175, file: !175, line: 318, type: !10136, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10136 = !DISubroutineType(types: !10137)
!10137 = !{!174, !183}
!10138 = !DILocation(line: 318, column: 67, scope: !10135, inlinedAt: !10139)
!10139 = distinct !DILocation(line: 553, column: 20, scope: !10122, inlinedAt: !10127)
!10140 = !DILocalVariable(name: "size", arg: 1, scope: !10141, file: !175, line: 346, type: !1108)
!10141 = distinct !DISubprogram(name: "kmalloc_index", scope: !175, file: !175, line: 346, type: !10142, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10142 = !DISubroutineType(types: !10143)
!10143 = !{!15, !1108}
!10144 = !DILocation(line: 346, column: 58, scope: !10141, inlinedAt: !10145)
!10145 = distinct !DILocation(line: 547, column: 11, scope: !10122, inlinedAt: !10127)
!10146 = !DILocalVariable(name: "size", arg: 1, scope: !10147, file: !175, line: 472, type: !1108)
!10147 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !175, file: !175, line: 472, type: !10148, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10148 = !DISubroutineType(types: !10149)
!10149 = !{!204, !1108, !183, !15}
!10150 = !DILocation(line: 472, column: 28, scope: !10147, inlinedAt: !10151)
!10151 = distinct !DILocation(line: 481, column: 9, scope: !10152, inlinedAt: !10153)
!10152 = distinct !DISubprogram(name: "kmalloc_large", scope: !175, file: !175, line: 478, type: !10125, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10153 = distinct !DILocation(line: 545, column: 11, scope: !10154, inlinedAt: !10127)
!10154 = distinct !DILexicalBlock(scope: !10122, file: !175, line: 544, column: 7)
!10155 = !DILocalVariable(name: "flags", arg: 2, scope: !10147, file: !175, line: 472, type: !183)
!10156 = !DILocation(line: 472, column: 40, scope: !10147, inlinedAt: !10151)
!10157 = !DILocalVariable(name: "order", arg: 3, scope: !10147, file: !175, line: 472, type: !15)
!10158 = !DILocation(line: 472, column: 60, scope: !10147, inlinedAt: !10151)
!10159 = !DILocalVariable(name: "size", arg: 1, scope: !10152, file: !175, line: 478, type: !1108)
!10160 = !DILocation(line: 478, column: 51, scope: !10152, inlinedAt: !10153)
!10161 = !DILocalVariable(name: "flags", arg: 2, scope: !10152, file: !175, line: 478, type: !183)
!10162 = !DILocation(line: 478, column: 63, scope: !10152, inlinedAt: !10153)
!10163 = !DILocalVariable(name: "order", scope: !10152, file: !175, line: 480, type: !15)
!10164 = !DILocation(line: 480, column: 15, scope: !10152, inlinedAt: !10153)
!10165 = !DILocalVariable(name: "size", arg: 1, scope: !10124, file: !175, line: 538, type: !1108)
!10166 = !DILocation(line: 538, column: 45, scope: !10124, inlinedAt: !10127)
!10167 = !DILocalVariable(name: "flags", arg: 2, scope: !10124, file: !175, line: 538, type: !183)
!10168 = !DILocation(line: 538, column: 57, scope: !10124, inlinedAt: !10127)
!10169 = !DILocalVariable(name: "index", scope: !10122, file: !175, line: 542, type: !15)
!10170 = !DILocation(line: 542, column: 16, scope: !10122, inlinedAt: !10127)
!10171 = !DILocalVariable(name: "region", arg: 1, scope: !10113, file: !3, line: 1295, type: !5298)
!10172 = !DILocation(line: 1295, column: 59, scope: !10113)
!10173 = !DILocalVariable(name: "erase", arg: 2, scope: !10113, file: !3, line: 1296, type: !8472)
!10174 = !DILocation(line: 1296, column: 43, scope: !10113)
!10175 = !DILocalVariable(name: "cmd", scope: !10113, file: !3, line: 1298, type: !4079)
!10176 = !DILocation(line: 1298, column: 32, scope: !10113)
!10177 = !DILocation(line: 540, column: 27, scope: !10123, inlinedAt: !10127)
!10178 = !DILocation(line: 540, column: 6, scope: !10123, inlinedAt: !10127)
!10179 = !DILocation(line: 540, column: 6, scope: !10124, inlinedAt: !10127)
!10180 = !DILocation(line: 544, column: 7, scope: !10154, inlinedAt: !10127)
!10181 = !DILocation(line: 544, column: 12, scope: !10154, inlinedAt: !10127)
!10182 = !DILocation(line: 544, column: 7, scope: !10122, inlinedAt: !10127)
!10183 = !DILocation(line: 545, column: 25, scope: !10154, inlinedAt: !10127)
!10184 = !DILocation(line: 545, column: 31, scope: !10154, inlinedAt: !10127)
!10185 = !DILocation(line: 480, column: 33, scope: !10152, inlinedAt: !10153)
!10186 = !DILocation(line: 480, column: 23, scope: !10152, inlinedAt: !10153)
!10187 = !DILocation(line: 481, column: 29, scope: !10152, inlinedAt: !10153)
!10188 = !DILocation(line: 481, column: 35, scope: !10152, inlinedAt: !10153)
!10189 = !DILocation(line: 481, column: 42, scope: !10152, inlinedAt: !10153)
!10190 = !DILocation(line: 474, column: 23, scope: !10147, inlinedAt: !10151)
!10191 = !DILocation(line: 474, column: 29, scope: !10147, inlinedAt: !10151)
!10192 = !DILocation(line: 474, column: 36, scope: !10147, inlinedAt: !10151)
!10193 = !DILocation(line: 474, column: 9, scope: !10147, inlinedAt: !10151)
!10194 = !DILocation(line: 545, column: 4, scope: !10154, inlinedAt: !10127)
!10195 = !DILocation(line: 547, column: 25, scope: !10122, inlinedAt: !10127)
!10196 = !DILocation(line: 348, column: 7, scope: !10197, inlinedAt: !10145)
!10197 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 348, column: 6)
!10198 = !DILocation(line: 348, column: 6, scope: !10141, inlinedAt: !10145)
!10199 = !DILocation(line: 349, column: 3, scope: !10197, inlinedAt: !10145)
!10200 = !DILocation(line: 351, column: 6, scope: !10201, inlinedAt: !10145)
!10201 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 351, column: 6)
!10202 = !DILocation(line: 351, column: 11, scope: !10201, inlinedAt: !10145)
!10203 = !DILocation(line: 351, column: 6, scope: !10141, inlinedAt: !10145)
!10204 = !DILocation(line: 352, column: 3, scope: !10201, inlinedAt: !10145)
!10205 = !DILocation(line: 354, column: 32, scope: !10206, inlinedAt: !10145)
!10206 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 354, column: 6)
!10207 = !DILocation(line: 354, column: 37, scope: !10206, inlinedAt: !10145)
!10208 = !DILocation(line: 354, column: 42, scope: !10206, inlinedAt: !10145)
!10209 = !DILocation(line: 354, column: 45, scope: !10206, inlinedAt: !10145)
!10210 = !DILocation(line: 354, column: 50, scope: !10206, inlinedAt: !10145)
!10211 = !DILocation(line: 354, column: 6, scope: !10141, inlinedAt: !10145)
!10212 = !DILocation(line: 355, column: 3, scope: !10206, inlinedAt: !10145)
!10213 = !DILocation(line: 356, column: 32, scope: !10214, inlinedAt: !10145)
!10214 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 356, column: 6)
!10215 = !DILocation(line: 356, column: 37, scope: !10214, inlinedAt: !10145)
!10216 = !DILocation(line: 356, column: 43, scope: !10214, inlinedAt: !10145)
!10217 = !DILocation(line: 356, column: 46, scope: !10214, inlinedAt: !10145)
!10218 = !DILocation(line: 356, column: 51, scope: !10214, inlinedAt: !10145)
!10219 = !DILocation(line: 356, column: 6, scope: !10141, inlinedAt: !10145)
!10220 = !DILocation(line: 357, column: 3, scope: !10214, inlinedAt: !10145)
!10221 = !DILocation(line: 358, column: 6, scope: !10222, inlinedAt: !10145)
!10222 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 358, column: 6)
!10223 = !DILocation(line: 358, column: 11, scope: !10222, inlinedAt: !10145)
!10224 = !DILocation(line: 358, column: 6, scope: !10141, inlinedAt: !10145)
!10225 = !DILocation(line: 358, column: 26, scope: !10222, inlinedAt: !10145)
!10226 = !DILocation(line: 359, column: 6, scope: !10227, inlinedAt: !10145)
!10227 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 359, column: 6)
!10228 = !DILocation(line: 359, column: 11, scope: !10227, inlinedAt: !10145)
!10229 = !DILocation(line: 359, column: 6, scope: !10141, inlinedAt: !10145)
!10230 = !DILocation(line: 359, column: 26, scope: !10227, inlinedAt: !10145)
!10231 = !DILocation(line: 360, column: 6, scope: !10232, inlinedAt: !10145)
!10232 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 360, column: 6)
!10233 = !DILocation(line: 360, column: 11, scope: !10232, inlinedAt: !10145)
!10234 = !DILocation(line: 360, column: 6, scope: !10141, inlinedAt: !10145)
!10235 = !DILocation(line: 360, column: 26, scope: !10232, inlinedAt: !10145)
!10236 = !DILocation(line: 361, column: 6, scope: !10237, inlinedAt: !10145)
!10237 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 361, column: 6)
!10238 = !DILocation(line: 361, column: 11, scope: !10237, inlinedAt: !10145)
!10239 = !DILocation(line: 361, column: 6, scope: !10141, inlinedAt: !10145)
!10240 = !DILocation(line: 361, column: 26, scope: !10237, inlinedAt: !10145)
!10241 = !DILocation(line: 362, column: 6, scope: !10242, inlinedAt: !10145)
!10242 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 362, column: 6)
!10243 = !DILocation(line: 362, column: 11, scope: !10242, inlinedAt: !10145)
!10244 = !DILocation(line: 362, column: 6, scope: !10141, inlinedAt: !10145)
!10245 = !DILocation(line: 362, column: 26, scope: !10242, inlinedAt: !10145)
!10246 = !DILocation(line: 363, column: 6, scope: !10247, inlinedAt: !10145)
!10247 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 363, column: 6)
!10248 = !DILocation(line: 363, column: 11, scope: !10247, inlinedAt: !10145)
!10249 = !DILocation(line: 363, column: 6, scope: !10141, inlinedAt: !10145)
!10250 = !DILocation(line: 363, column: 26, scope: !10247, inlinedAt: !10145)
!10251 = !DILocation(line: 364, column: 6, scope: !10252, inlinedAt: !10145)
!10252 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 364, column: 6)
!10253 = !DILocation(line: 364, column: 11, scope: !10252, inlinedAt: !10145)
!10254 = !DILocation(line: 364, column: 6, scope: !10141, inlinedAt: !10145)
!10255 = !DILocation(line: 364, column: 26, scope: !10252, inlinedAt: !10145)
!10256 = !DILocation(line: 365, column: 6, scope: !10257, inlinedAt: !10145)
!10257 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 365, column: 6)
!10258 = !DILocation(line: 365, column: 11, scope: !10257, inlinedAt: !10145)
!10259 = !DILocation(line: 365, column: 6, scope: !10141, inlinedAt: !10145)
!10260 = !DILocation(line: 365, column: 26, scope: !10257, inlinedAt: !10145)
!10261 = !DILocation(line: 366, column: 6, scope: !10262, inlinedAt: !10145)
!10262 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 366, column: 6)
!10263 = !DILocation(line: 366, column: 11, scope: !10262, inlinedAt: !10145)
!10264 = !DILocation(line: 366, column: 6, scope: !10141, inlinedAt: !10145)
!10265 = !DILocation(line: 366, column: 26, scope: !10262, inlinedAt: !10145)
!10266 = !DILocation(line: 367, column: 6, scope: !10267, inlinedAt: !10145)
!10267 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 367, column: 6)
!10268 = !DILocation(line: 367, column: 11, scope: !10267, inlinedAt: !10145)
!10269 = !DILocation(line: 367, column: 6, scope: !10141, inlinedAt: !10145)
!10270 = !DILocation(line: 367, column: 26, scope: !10267, inlinedAt: !10145)
!10271 = !DILocation(line: 368, column: 6, scope: !10272, inlinedAt: !10145)
!10272 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 368, column: 6)
!10273 = !DILocation(line: 368, column: 11, scope: !10272, inlinedAt: !10145)
!10274 = !DILocation(line: 368, column: 6, scope: !10141, inlinedAt: !10145)
!10275 = !DILocation(line: 368, column: 26, scope: !10272, inlinedAt: !10145)
!10276 = !DILocation(line: 369, column: 6, scope: !10277, inlinedAt: !10145)
!10277 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 369, column: 6)
!10278 = !DILocation(line: 369, column: 11, scope: !10277, inlinedAt: !10145)
!10279 = !DILocation(line: 369, column: 6, scope: !10141, inlinedAt: !10145)
!10280 = !DILocation(line: 369, column: 26, scope: !10277, inlinedAt: !10145)
!10281 = !DILocation(line: 370, column: 6, scope: !10282, inlinedAt: !10145)
!10282 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 370, column: 6)
!10283 = !DILocation(line: 370, column: 11, scope: !10282, inlinedAt: !10145)
!10284 = !DILocation(line: 370, column: 6, scope: !10141, inlinedAt: !10145)
!10285 = !DILocation(line: 370, column: 26, scope: !10282, inlinedAt: !10145)
!10286 = !DILocation(line: 371, column: 6, scope: !10287, inlinedAt: !10145)
!10287 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 371, column: 6)
!10288 = !DILocation(line: 371, column: 11, scope: !10287, inlinedAt: !10145)
!10289 = !DILocation(line: 371, column: 6, scope: !10141, inlinedAt: !10145)
!10290 = !DILocation(line: 371, column: 26, scope: !10287, inlinedAt: !10145)
!10291 = !DILocation(line: 372, column: 6, scope: !10292, inlinedAt: !10145)
!10292 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 372, column: 6)
!10293 = !DILocation(line: 372, column: 11, scope: !10292, inlinedAt: !10145)
!10294 = !DILocation(line: 372, column: 6, scope: !10141, inlinedAt: !10145)
!10295 = !DILocation(line: 372, column: 26, scope: !10292, inlinedAt: !10145)
!10296 = !DILocation(line: 373, column: 6, scope: !10297, inlinedAt: !10145)
!10297 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 373, column: 6)
!10298 = !DILocation(line: 373, column: 11, scope: !10297, inlinedAt: !10145)
!10299 = !DILocation(line: 373, column: 6, scope: !10141, inlinedAt: !10145)
!10300 = !DILocation(line: 373, column: 26, scope: !10297, inlinedAt: !10145)
!10301 = !DILocation(line: 374, column: 6, scope: !10302, inlinedAt: !10145)
!10302 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 374, column: 6)
!10303 = !DILocation(line: 374, column: 11, scope: !10302, inlinedAt: !10145)
!10304 = !DILocation(line: 374, column: 6, scope: !10141, inlinedAt: !10145)
!10305 = !DILocation(line: 374, column: 26, scope: !10302, inlinedAt: !10145)
!10306 = !DILocation(line: 375, column: 6, scope: !10307, inlinedAt: !10145)
!10307 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 375, column: 6)
!10308 = !DILocation(line: 375, column: 11, scope: !10307, inlinedAt: !10145)
!10309 = !DILocation(line: 375, column: 6, scope: !10141, inlinedAt: !10145)
!10310 = !DILocation(line: 375, column: 27, scope: !10307, inlinedAt: !10145)
!10311 = !DILocation(line: 376, column: 6, scope: !10312, inlinedAt: !10145)
!10312 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 376, column: 6)
!10313 = !DILocation(line: 376, column: 11, scope: !10312, inlinedAt: !10145)
!10314 = !DILocation(line: 376, column: 6, scope: !10141, inlinedAt: !10145)
!10315 = !DILocation(line: 376, column: 32, scope: !10312, inlinedAt: !10145)
!10316 = !DILocation(line: 377, column: 6, scope: !10317, inlinedAt: !10145)
!10317 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 377, column: 6)
!10318 = !DILocation(line: 377, column: 11, scope: !10317, inlinedAt: !10145)
!10319 = !DILocation(line: 377, column: 6, scope: !10141, inlinedAt: !10145)
!10320 = !DILocation(line: 377, column: 32, scope: !10317, inlinedAt: !10145)
!10321 = !DILocation(line: 378, column: 6, scope: !10322, inlinedAt: !10145)
!10322 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 378, column: 6)
!10323 = !DILocation(line: 378, column: 11, scope: !10322, inlinedAt: !10145)
!10324 = !DILocation(line: 378, column: 6, scope: !10141, inlinedAt: !10145)
!10325 = !DILocation(line: 378, column: 32, scope: !10322, inlinedAt: !10145)
!10326 = !DILocation(line: 379, column: 6, scope: !10327, inlinedAt: !10145)
!10327 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 379, column: 6)
!10328 = !DILocation(line: 379, column: 11, scope: !10327, inlinedAt: !10145)
!10329 = !DILocation(line: 379, column: 6, scope: !10141, inlinedAt: !10145)
!10330 = !DILocation(line: 379, column: 33, scope: !10327, inlinedAt: !10145)
!10331 = !DILocation(line: 380, column: 6, scope: !10332, inlinedAt: !10145)
!10332 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 380, column: 6)
!10333 = !DILocation(line: 380, column: 11, scope: !10332, inlinedAt: !10145)
!10334 = !DILocation(line: 380, column: 6, scope: !10141, inlinedAt: !10145)
!10335 = !DILocation(line: 380, column: 33, scope: !10332, inlinedAt: !10145)
!10336 = !DILocation(line: 381, column: 6, scope: !10337, inlinedAt: !10145)
!10337 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 381, column: 6)
!10338 = !DILocation(line: 381, column: 11, scope: !10337, inlinedAt: !10145)
!10339 = !DILocation(line: 381, column: 6, scope: !10141, inlinedAt: !10145)
!10340 = !DILocation(line: 381, column: 33, scope: !10337, inlinedAt: !10145)
!10341 = !DILocation(line: 382, column: 2, scope: !10342, inlinedAt: !10145)
!10342 = distinct !DILexicalBlock(scope: !10343, file: !175, line: 382, column: 2)
!10343 = distinct !DILexicalBlock(scope: !10141, file: !175, line: 382, column: 2)
!10344 = !{i32 -2143477541, i32 -2143477512, i32 -2143477466, i32 -2143477408, i32 -2143477354, i32 -2143477300, i32 -2143477245, i32 -2143477214}
!10345 = !DILocation(line: 382, column: 2, scope: !10346, inlinedAt: !10145)
!10346 = distinct !DILexicalBlock(scope: !10347, file: !175, line: 382, column: 2)
!10347 = distinct !DILexicalBlock(scope: !10343, file: !175, line: 382, column: 2)
!10348 = !{i32 -2143476771, i32 -2143476764, i32 -2143476710, i32 -2143476679, i32 -2143476649}
!10349 = !DILocation(line: 382, column: 2, scope: !10347, inlinedAt: !10145)
!10350 = !DILocation(line: 386, column: 1, scope: !10141, inlinedAt: !10145)
!10351 = !DILocation(line: 547, column: 9, scope: !10122, inlinedAt: !10127)
!10352 = !DILocation(line: 549, column: 8, scope: !10353, inlinedAt: !10127)
!10353 = distinct !DILexicalBlock(scope: !10122, file: !175, line: 549, column: 7)
!10354 = !DILocation(line: 549, column: 7, scope: !10122, inlinedAt: !10127)
!10355 = !DILocation(line: 550, column: 4, scope: !10353, inlinedAt: !10127)
!10356 = !DILocation(line: 553, column: 33, scope: !10122, inlinedAt: !10127)
!10357 = !DILocation(line: 325, column: 6, scope: !10358, inlinedAt: !10139)
!10358 = distinct !DILexicalBlock(scope: !10135, file: !175, line: 325, column: 6)
!10359 = !DILocation(line: 325, column: 6, scope: !10135, inlinedAt: !10139)
!10360 = !DILocation(line: 326, column: 3, scope: !10358, inlinedAt: !10139)
!10361 = !DILocation(line: 332, column: 9, scope: !10135, inlinedAt: !10139)
!10362 = !DILocation(line: 332, column: 15, scope: !10135, inlinedAt: !10139)
!10363 = !DILocation(line: 332, column: 2, scope: !10135, inlinedAt: !10139)
!10364 = !DILocation(line: 336, column: 1, scope: !10135, inlinedAt: !10139)
!10365 = !DILocation(line: 553, column: 5, scope: !10122, inlinedAt: !10127)
!10366 = !DILocation(line: 553, column: 41, scope: !10122, inlinedAt: !10127)
!10367 = !DILocation(line: 554, column: 5, scope: !10122, inlinedAt: !10127)
!10368 = !DILocation(line: 554, column: 12, scope: !10122, inlinedAt: !10127)
!10369 = !DILocation(line: 448, column: 31, scope: !10117, inlinedAt: !10121)
!10370 = !DILocation(line: 448, column: 34, scope: !10117, inlinedAt: !10121)
!10371 = !DILocation(line: 448, column: 14, scope: !10117, inlinedAt: !10121)
!10372 = !DILocation(line: 450, column: 22, scope: !10117, inlinedAt: !10121)
!10373 = !DILocation(line: 450, column: 25, scope: !10117, inlinedAt: !10121)
!10374 = !DILocation(line: 450, column: 30, scope: !10117, inlinedAt: !10121)
!10375 = !DILocation(line: 450, column: 36, scope: !10117, inlinedAt: !10121)
!10376 = !DILocation(line: 450, column: 8, scope: !10117, inlinedAt: !10121)
!10377 = !DILocation(line: 450, column: 6, scope: !10117, inlinedAt: !10121)
!10378 = !DILocation(line: 451, column: 9, scope: !10117, inlinedAt: !10121)
!10379 = !DILocation(line: 552, column: 3, scope: !10122, inlinedAt: !10127)
!10380 = !DILocation(line: 557, column: 19, scope: !10124, inlinedAt: !10127)
!10381 = !DILocation(line: 557, column: 25, scope: !10124, inlinedAt: !10127)
!10382 = !DILocation(line: 557, column: 9, scope: !10124, inlinedAt: !10127)
!10383 = !DILocation(line: 557, column: 2, scope: !10124, inlinedAt: !10127)
!10384 = !DILocation(line: 558, column: 1, scope: !10124, inlinedAt: !10127)
!10385 = !DILocation(line: 1300, column: 8, scope: !10113)
!10386 = !DILocation(line: 1300, column: 6, scope: !10113)
!10387 = !DILocation(line: 1301, column: 7, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 1301, column: 6)
!10389 = !DILocation(line: 1301, column: 6, scope: !10113)
!10390 = !DILocation(line: 1302, column: 10, scope: !10388)
!10391 = !DILocation(line: 1302, column: 3, scope: !10388)
!10392 = !DILocation(line: 1304, column: 18, scope: !10113)
!10393 = !DILocation(line: 1304, column: 23, scope: !10113)
!10394 = !DILocation(line: 1304, column: 2, scope: !10113)
!10395 = !DILocation(line: 1305, column: 16, scope: !10113)
!10396 = !DILocation(line: 1305, column: 23, scope: !10113)
!10397 = !DILocation(line: 1305, column: 2, scope: !10113)
!10398 = !DILocation(line: 1305, column: 7, scope: !10113)
!10399 = !DILocation(line: 1305, column: 14, scope: !10113)
!10400 = !DILocation(line: 1306, column: 2, scope: !10113)
!10401 = !DILocation(line: 1306, column: 7, scope: !10113)
!10402 = !DILocation(line: 1306, column: 13, scope: !10113)
!10403 = !DILocation(line: 1308, column: 6, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 1308, column: 6)
!10405 = !DILocation(line: 1308, column: 14, scope: !10404)
!10406 = !DILocation(line: 1308, column: 21, scope: !10404)
!10407 = !DILocation(line: 1308, column: 6, scope: !10113)
!10408 = !DILocation(line: 1309, column: 15, scope: !10404)
!10409 = !DILocation(line: 1309, column: 23, scope: !10404)
!10410 = !DILocation(line: 1309, column: 3, scope: !10404)
!10411 = !DILocation(line: 1309, column: 8, scope: !10404)
!10412 = !DILocation(line: 1309, column: 13, scope: !10404)
!10413 = !DILocation(line: 1311, column: 15, scope: !10404)
!10414 = !DILocation(line: 1311, column: 22, scope: !10404)
!10415 = !DILocation(line: 1311, column: 3, scope: !10404)
!10416 = !DILocation(line: 1311, column: 8, scope: !10404)
!10417 = !DILocation(line: 1311, column: 13, scope: !10404)
!10418 = !DILocation(line: 1313, column: 9, scope: !10113)
!10419 = !DILocation(line: 1313, column: 2, scope: !10113)
!10420 = !DILocation(line: 1314, column: 1, scope: !10113)
!10421 = distinct !DISubprogram(name: "list_add_tail", scope: !9931, file: !9931, line: 98, type: !10422, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10422 = !DISubroutineType(types: !10423)
!10423 = !{null, !246, !246}
!10424 = !DILocalVariable(name: "new", arg: 1, scope: !10421, file: !9931, line: 98, type: !246)
!10425 = !DILocation(line: 98, column: 52, scope: !10421)
!10426 = !DILocalVariable(name: "head", arg: 2, scope: !10421, file: !9931, line: 98, type: !246)
!10427 = !DILocation(line: 98, column: 75, scope: !10421)
!10428 = !DILocation(line: 100, column: 13, scope: !10421)
!10429 = !DILocation(line: 100, column: 18, scope: !10421)
!10430 = !DILocation(line: 100, column: 24, scope: !10421)
!10431 = !DILocation(line: 100, column: 30, scope: !10421)
!10432 = !DILocation(line: 100, column: 2, scope: !10421)
!10433 = !DILocation(line: 101, column: 1, scope: !10421)
!10434 = distinct !DISubprogram(name: "spi_nor_div_by_erase_size", scope: !3, file: !3, line: 1173, type: !10435, scopeLine: 1175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10435 = !DISubroutineType(types: !10436)
!10436 = !{!250, !8472, !250, !3424}
!10437 = !DILocalVariable(name: "erase", arg: 1, scope: !10434, file: !3, line: 1173, type: !8472)
!10438 = !DILocation(line: 1173, column: 71, scope: !10434)
!10439 = !DILocalVariable(name: "dividend", arg: 2, scope: !10434, file: !3, line: 1174, type: !250)
!10440 = !DILocation(line: 1174, column: 14, scope: !10434)
!10441 = !DILocalVariable(name: "remainder", arg: 3, scope: !10434, file: !3, line: 1174, type: !3424)
!10442 = !DILocation(line: 1174, column: 29, scope: !10434)
!10443 = !DILocation(line: 1177, column: 20, scope: !10434)
!10444 = !DILocation(line: 1177, column: 15, scope: !10434)
!10445 = !DILocation(line: 1177, column: 31, scope: !10434)
!10446 = !DILocation(line: 1177, column: 38, scope: !10434)
!10447 = !DILocation(line: 1177, column: 29, scope: !10434)
!10448 = !DILocation(line: 1177, column: 3, scope: !10434)
!10449 = !DILocation(line: 1177, column: 13, scope: !10434)
!10450 = !DILocation(line: 1178, column: 9, scope: !10434)
!10451 = !DILocation(line: 1178, column: 21, scope: !10434)
!10452 = !DILocation(line: 1178, column: 28, scope: !10434)
!10453 = !DILocation(line: 1178, column: 18, scope: !10434)
!10454 = !DILocation(line: 1178, column: 2, scope: !10434)
!10455 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !9931, file: !9931, line: 33, type: !9932, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10456 = !DILocalVariable(name: "list", arg: 1, scope: !10455, file: !9931, line: 33, type: !246)
!10457 = !DILocation(line: 33, column: 53, scope: !10455)
!10458 = !DILocation(line: 35, column: 2, scope: !10455)
!10459 = !DILocation(line: 35, column: 2, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10455, file: !9931, line: 35, column: 2)
!10461 = !DILocation(line: 35, column: 2, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10460, file: !9931, line: 35, column: 2)
!10463 = !DILocation(line: 35, column: 2, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10460, file: !9931, line: 35, column: 2)
!10465 = !DILocation(line: 36, column: 15, scope: !10455)
!10466 = !DILocation(line: 36, column: 2, scope: !10455)
!10467 = !DILocation(line: 36, column: 8, scope: !10455)
!10468 = !DILocation(line: 36, column: 13, scope: !10455)
!10469 = !DILocation(line: 37, column: 1, scope: !10455)
!10470 = distinct !DISubprogram(name: "get_order", scope: !10471, file: !10471, line: 29, type: !10472, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10471 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!10472 = !DISubroutineType(types: !10473)
!10473 = !{!182, !186}
!10474 = !DILocation(line: 366, column: 40, scope: !9267, inlinedAt: !10475)
!10475 = distinct !DILocation(line: 46, column: 9, scope: !10470)
!10476 = !DILocation(line: 368, column: 6, scope: !9267, inlinedAt: !10475)
!10477 = !DILocalVariable(name: "size", arg: 1, scope: !10470, file: !10471, line: 29, type: !186)
!10478 = !DILocation(line: 29, column: 63, scope: !10470)
!10479 = !DILocation(line: 31, column: 27, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 31, column: 6)
!10481 = !DILocation(line: 31, column: 6, scope: !10480)
!10482 = !DILocation(line: 31, column: 6, scope: !10470)
!10483 = !DILocation(line: 32, column: 8, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !10471, line: 32, column: 7)
!10485 = distinct !DILexicalBlock(scope: !10480, file: !10471, line: 31, column: 34)
!10486 = !DILocation(line: 32, column: 7, scope: !10485)
!10487 = !DILocation(line: 33, column: 4, scope: !10484)
!10488 = !DILocation(line: 35, column: 7, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10485, file: !10471, line: 35, column: 7)
!10490 = !DILocation(line: 35, column: 12, scope: !10489)
!10491 = !DILocation(line: 35, column: 7, scope: !10485)
!10492 = !DILocation(line: 36, column: 4, scope: !10489)
!10493 = !DILocation(line: 38, column: 10, scope: !10485)
!10494 = !DILocation(line: 38, column: 28, scope: !10485)
!10495 = !DILocation(line: 38, column: 41, scope: !10485)
!10496 = !DILocation(line: 38, column: 3, scope: !10485)
!10497 = !DILocation(line: 41, column: 6, scope: !10470)
!10498 = !DILocation(line: 42, column: 7, scope: !10470)
!10499 = !DILocation(line: 46, column: 15, scope: !10470)
!10500 = !DILocation(line: 374, column: 2, scope: !9267, inlinedAt: !10475)
!10501 = !DILocation(line: 376, column: 14, scope: !9267, inlinedAt: !10475)
!10502 = !DILocation(line: 377, column: 9, scope: !9267, inlinedAt: !10475)
!10503 = !DILocation(line: 377, column: 16, scope: !9267, inlinedAt: !10475)
!10504 = !DILocation(line: 46, column: 2, scope: !10470)
!10505 = !DILocation(line: 48, column: 1, scope: !10470)
!10506 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !10507, file: !10507, line: 137, type: !10508, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10507 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!10508 = !DISubroutineType(types: !10509)
!10509 = !{!204, !3102, !1921, !1108, !183}
!10510 = !DILocalVariable(name: "s", arg: 1, scope: !10506, file: !10507, line: 137, type: !3102)
!10511 = !DILocation(line: 137, column: 54, scope: !10506)
!10512 = !DILocalVariable(name: "object", arg: 2, scope: !10506, file: !10507, line: 137, type: !1921)
!10513 = !DILocation(line: 137, column: 69, scope: !10506)
!10514 = !DILocalVariable(name: "size", arg: 3, scope: !10506, file: !10507, line: 138, type: !1108)
!10515 = !DILocation(line: 138, column: 12, scope: !10506)
!10516 = !DILocalVariable(name: "flags", arg: 4, scope: !10506, file: !10507, line: 138, type: !183)
!10517 = !DILocation(line: 138, column: 24, scope: !10506)
!10518 = !DILocation(line: 140, column: 17, scope: !10506)
!10519 = !DILocation(line: 140, column: 2, scope: !10506)
!10520 = distinct !DISubprogram(name: "__list_add", scope: !9931, file: !9931, line: 63, type: !10521, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10521 = !DISubroutineType(types: !10522)
!10522 = !{null, !246, !246, !246}
!10523 = !DILocalVariable(name: "new", arg: 1, scope: !10520, file: !9931, line: 63, type: !246)
!10524 = !DILocation(line: 63, column: 49, scope: !10520)
!10525 = !DILocalVariable(name: "prev", arg: 2, scope: !10520, file: !9931, line: 64, type: !246)
!10526 = !DILocation(line: 64, column: 28, scope: !10520)
!10527 = !DILocalVariable(name: "next", arg: 3, scope: !10520, file: !9931, line: 65, type: !246)
!10528 = !DILocation(line: 65, column: 28, scope: !10520)
!10529 = !DILocation(line: 67, column: 24, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10520, file: !9931, line: 67, column: 6)
!10531 = !DILocation(line: 67, column: 29, scope: !10530)
!10532 = !DILocation(line: 67, column: 35, scope: !10530)
!10533 = !DILocation(line: 67, column: 7, scope: !10530)
!10534 = !DILocation(line: 67, column: 6, scope: !10520)
!10535 = !DILocation(line: 68, column: 3, scope: !10530)
!10536 = !DILocation(line: 70, column: 15, scope: !10520)
!10537 = !DILocation(line: 70, column: 2, scope: !10520)
!10538 = !DILocation(line: 70, column: 8, scope: !10520)
!10539 = !DILocation(line: 70, column: 13, scope: !10520)
!10540 = !DILocation(line: 71, column: 14, scope: !10520)
!10541 = !DILocation(line: 71, column: 2, scope: !10520)
!10542 = !DILocation(line: 71, column: 7, scope: !10520)
!10543 = !DILocation(line: 71, column: 12, scope: !10520)
!10544 = !DILocation(line: 72, column: 14, scope: !10520)
!10545 = !DILocation(line: 72, column: 2, scope: !10520)
!10546 = !DILocation(line: 72, column: 7, scope: !10520)
!10547 = !DILocation(line: 72, column: 12, scope: !10520)
!10548 = !DILocation(line: 73, column: 2, scope: !10520)
!10549 = !DILocation(line: 73, column: 2, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10520, file: !9931, line: 73, column: 2)
!10551 = !DILocation(line: 73, column: 2, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10550, file: !9931, line: 73, column: 2)
!10553 = !DILocation(line: 73, column: 2, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10550, file: !9931, line: 73, column: 2)
!10555 = !DILocation(line: 74, column: 1, scope: !10520)
!10556 = distinct !DISubprogram(name: "__list_add_valid", scope: !9931, file: !9931, line: 45, type: !10557, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10557 = !DISubroutineType(types: !10558)
!10558 = !{!655, !246, !246, !246}
!10559 = !DILocalVariable(name: "new", arg: 1, scope: !10556, file: !9931, line: 45, type: !246)
!10560 = !DILocation(line: 45, column: 55, scope: !10556)
!10561 = !DILocalVariable(name: "prev", arg: 2, scope: !10556, file: !9931, line: 46, type: !246)
!10562 = !DILocation(line: 46, column: 23, scope: !10556)
!10563 = !DILocalVariable(name: "next", arg: 3, scope: !10556, file: !9931, line: 47, type: !246)
!10564 = !DILocation(line: 47, column: 23, scope: !10556)
!10565 = !DILocation(line: 49, column: 2, scope: !10556)
!10566 = distinct !DISubprogram(name: "__list_del_entry", scope: !9931, file: !9931, line: 130, type: !9932, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10567 = !DILocalVariable(name: "entry", arg: 1, scope: !10566, file: !9931, line: 130, type: !246)
!10568 = !DILocation(line: 130, column: 55, scope: !10566)
!10569 = !DILocation(line: 132, column: 30, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10566, file: !9931, line: 132, column: 6)
!10571 = !DILocation(line: 132, column: 7, scope: !10570)
!10572 = !DILocation(line: 132, column: 6, scope: !10566)
!10573 = !DILocation(line: 133, column: 3, scope: !10570)
!10574 = !DILocation(line: 135, column: 13, scope: !10566)
!10575 = !DILocation(line: 135, column: 20, scope: !10566)
!10576 = !DILocation(line: 135, column: 26, scope: !10566)
!10577 = !DILocation(line: 135, column: 33, scope: !10566)
!10578 = !DILocation(line: 135, column: 2, scope: !10566)
!10579 = !DILocation(line: 136, column: 1, scope: !10566)
!10580 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !9931, file: !9931, line: 51, type: !10581, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10581 = !DISubroutineType(types: !10582)
!10582 = !{!655, !246}
!10583 = !DILocalVariable(name: "entry", arg: 1, scope: !10580, file: !9931, line: 51, type: !246)
!10584 = !DILocation(line: 51, column: 61, scope: !10580)
!10585 = !DILocation(line: 53, column: 2, scope: !10580)
!10586 = distinct !DISubprogram(name: "__list_del", scope: !9931, file: !9931, line: 110, type: !10422, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10587 = !DILocalVariable(name: "prev", arg: 1, scope: !10586, file: !9931, line: 110, type: !246)
!10588 = !DILocation(line: 110, column: 50, scope: !10586)
!10589 = !DILocalVariable(name: "next", arg: 2, scope: !10586, file: !9931, line: 110, type: !246)
!10590 = !DILocation(line: 110, column: 75, scope: !10586)
!10591 = !DILocation(line: 112, column: 15, scope: !10586)
!10592 = !DILocation(line: 112, column: 2, scope: !10586)
!10593 = !DILocation(line: 112, column: 8, scope: !10586)
!10594 = !DILocation(line: 112, column: 13, scope: !10586)
!10595 = !DILocation(line: 113, column: 2, scope: !10586)
!10596 = !DILocation(line: 113, column: 2, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10586, file: !9931, line: 113, column: 2)
!10598 = !DILocation(line: 113, column: 2, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10597, file: !9931, line: 113, column: 2)
!10600 = !DILocation(line: 113, column: 2, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10597, file: !9931, line: 113, column: 2)
!10602 = !DILocation(line: 114, column: 1, scope: !10586)
!10603 = distinct !DISubprogram(name: "spi_nor_set_4byte_opcodes", scope: !3, file: !3, line: 1081, type: !4462, scopeLine: 1082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10604 = !DILocalVariable(name: "nor", arg: 1, scope: !10603, file: !3, line: 1081, type: !4103)
!10605 = !DILocation(line: 1081, column: 55, scope: !10603)
!10606 = !DILocation(line: 1083, column: 47, scope: !10603)
!10607 = !DILocation(line: 1083, column: 52, scope: !10603)
!10608 = !DILocation(line: 1083, column: 21, scope: !10603)
!10609 = !DILocation(line: 1083, column: 2, scope: !10603)
!10610 = !DILocation(line: 1083, column: 7, scope: !10603)
!10611 = !DILocation(line: 1083, column: 19, scope: !10603)
!10612 = !DILocation(line: 1084, column: 53, scope: !10603)
!10613 = !DILocation(line: 1084, column: 58, scope: !10603)
!10614 = !DILocation(line: 1084, column: 24, scope: !10603)
!10615 = !DILocation(line: 1084, column: 2, scope: !10603)
!10616 = !DILocation(line: 1084, column: 7, scope: !10603)
!10617 = !DILocation(line: 1084, column: 22, scope: !10603)
!10618 = !DILocation(line: 1085, column: 49, scope: !10603)
!10619 = !DILocation(line: 1085, column: 54, scope: !10603)
!10620 = !DILocation(line: 1085, column: 22, scope: !10603)
!10621 = !DILocation(line: 1085, column: 2, scope: !10603)
!10622 = !DILocation(line: 1085, column: 7, scope: !10603)
!10623 = !DILocation(line: 1085, column: 20, scope: !10603)
!10624 = !DILocation(line: 1087, column: 33, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 1087, column: 6)
!10626 = !DILocation(line: 1087, column: 7, scope: !10625)
!10627 = !DILocation(line: 1087, column: 6, scope: !10603)
!10628 = !DILocalVariable(name: "map", scope: !10629, file: !3, line: 1088, type: !5803)
!10629 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 1087, column: 39)
!10630 = !DILocation(line: 1088, column: 29, scope: !10629)
!10631 = !DILocation(line: 1088, column: 36, scope: !10629)
!10632 = !DILocation(line: 1088, column: 41, scope: !10629)
!10633 = !DILocation(line: 1088, column: 49, scope: !10629)
!10634 = !DILocalVariable(name: "erase", scope: !10629, file: !3, line: 1089, type: !5759)
!10635 = !DILocation(line: 1089, column: 30, scope: !10629)
!10636 = !DILocalVariable(name: "i", scope: !10629, file: !3, line: 1090, type: !182)
!10637 = !DILocation(line: 1090, column: 7, scope: !10629)
!10638 = !DILocation(line: 1092, column: 10, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 1092, column: 3)
!10640 = !DILocation(line: 1092, column: 8, scope: !10639)
!10641 = !DILocation(line: 1092, column: 15, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10639, file: !3, line: 1092, column: 3)
!10643 = !DILocation(line: 1092, column: 17, scope: !10642)
!10644 = !DILocation(line: 1092, column: 3, scope: !10639)
!10645 = !DILocation(line: 1093, column: 13, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 1092, column: 45)
!10647 = !DILocation(line: 1093, column: 18, scope: !10646)
!10648 = !DILocation(line: 1093, column: 29, scope: !10646)
!10649 = !DILocation(line: 1093, column: 10, scope: !10646)
!10650 = !DILocation(line: 1095, column: 32, scope: !10646)
!10651 = !DILocation(line: 1095, column: 39, scope: !10646)
!10652 = !DILocation(line: 1095, column: 5, scope: !10646)
!10653 = !DILocation(line: 1094, column: 4, scope: !10646)
!10654 = !DILocation(line: 1094, column: 11, scope: !10646)
!10655 = !DILocation(line: 1094, column: 18, scope: !10646)
!10656 = !DILocation(line: 1096, column: 3, scope: !10646)
!10657 = !DILocation(line: 1092, column: 41, scope: !10642)
!10658 = !DILocation(line: 1092, column: 3, scope: !10642)
!10659 = distinct !{!10659, !10644, !10660}
!10660 = !DILocation(line: 1096, column: 3, scope: !10639)
!10661 = !DILocation(line: 1097, column: 2, scope: !10629)
!10662 = !DILocation(line: 1098, column: 1, scope: !10603)
!10663 = !DILocalVariable(name: "opcode", arg: 1, scope: !4661, file: !3, line: 1050, type: !6)
!10664 = !DILocation(line: 1050, column: 43, scope: !4661)
!10665 = !DILocation(line: 1060, column: 32, scope: !4661)
!10666 = !DILocation(line: 1060, column: 9, scope: !4661)
!10667 = !DILocation(line: 1060, column: 2, scope: !4661)
!10668 = !DILocalVariable(name: "opcode", arg: 1, scope: !4667, file: !3, line: 1064, type: !6)
!10669 = !DILocation(line: 1064, column: 41, scope: !4667)
!10670 = !DILocation(line: 1072, column: 32, scope: !4667)
!10671 = !DILocation(line: 1072, column: 9, scope: !4667)
!10672 = !DILocation(line: 1072, column: 2, scope: !4667)
!10673 = distinct !DISubprogram(name: "spi_nor_quad_enable", scope: !3, file: !3, line: 2905, type: !4533, scopeLine: 2906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10674 = !DILocalVariable(name: "nor", arg: 1, scope: !10673, file: !3, line: 2905, type: !4103)
!10675 = !DILocation(line: 2905, column: 48, scope: !10673)
!10676 = !DILocation(line: 2907, column: 7, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 2907, column: 6)
!10678 = !DILocation(line: 2907, column: 12, scope: !10677)
!10679 = !DILocation(line: 2907, column: 20, scope: !10677)
!10680 = !DILocation(line: 2907, column: 6, scope: !10673)
!10681 = !DILocation(line: 2908, column: 3, scope: !10677)
!10682 = !DILocation(line: 2910, column: 35, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 2910, column: 6)
!10684 = !DILocation(line: 2910, column: 40, scope: !10683)
!10685 = !DILocation(line: 2910, column: 8, scope: !10683)
!10686 = !DILocation(line: 2910, column: 52, scope: !10683)
!10687 = !DILocation(line: 2910, column: 57, scope: !10683)
!10688 = !DILocation(line: 2911, column: 35, scope: !10683)
!10689 = !DILocation(line: 2911, column: 40, scope: !10683)
!10690 = !DILocation(line: 2911, column: 8, scope: !10683)
!10691 = !DILocation(line: 2911, column: 53, scope: !10683)
!10692 = !DILocation(line: 2910, column: 6, scope: !10673)
!10693 = !DILocation(line: 2912, column: 3, scope: !10683)
!10694 = !DILocation(line: 2914, column: 9, scope: !10673)
!10695 = !DILocation(line: 2914, column: 14, scope: !10673)
!10696 = !DILocation(line: 2914, column: 22, scope: !10673)
!10697 = !DILocation(line: 2914, column: 34, scope: !10673)
!10698 = !DILocation(line: 2914, column: 2, scope: !10673)
!10699 = !DILocation(line: 2915, column: 1, scope: !10673)
!10700 = distinct !DISubprogram(name: "spi_nor_unlock_all", scope: !3, file: !3, line: 2926, type: !4533, scopeLine: 2927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10701 = !DILocalVariable(name: "nor", arg: 1, scope: !10700, file: !3, line: 2926, type: !4103)
!10702 = !DILocation(line: 2926, column: 47, scope: !10700)
!10703 = !DILocation(line: 2928, column: 6, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10700, file: !3, line: 2928, column: 6)
!10705 = !DILocation(line: 2928, column: 11, scope: !10704)
!10706 = !DILocation(line: 2928, column: 17, scope: !10704)
!10707 = !DILocation(line: 2928, column: 6, scope: !10700)
!10708 = !DILocation(line: 2929, column: 26, scope: !10704)
!10709 = !DILocation(line: 2929, column: 31, scope: !10704)
!10710 = !DILocation(line: 2929, column: 39, scope: !10704)
!10711 = !DILocation(line: 2929, column: 44, scope: !10704)
!10712 = !DILocation(line: 2929, column: 52, scope: !10704)
!10713 = !DILocation(line: 2929, column: 10, scope: !10704)
!10714 = !DILocation(line: 2929, column: 3, scope: !10704)
!10715 = !DILocation(line: 2931, column: 2, scope: !10700)
!10716 = !DILocation(line: 2932, column: 1, scope: !10700)
!10717 = distinct !DISubprogram(name: "spi_nor_get_protocol_width", scope: !108, file: !108, line: 210, type: !7109, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10718 = !DILocalVariable(name: "proto", arg: 1, scope: !10717, file: !108, line: 210, type: !107)
!10719 = !DILocation(line: 210, column: 67, scope: !10717)
!10720 = !DILocation(line: 212, column: 41, scope: !10717)
!10721 = !DILocation(line: 212, column: 9, scope: !10717)
!10722 = !DILocation(line: 212, column: 2, scope: !10717)
!10723 = distinct !DISubprogram(name: "spi_nor_probe", scope: !3, file: !3, line: 3288, type: !4693, scopeLine: 3289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10724 = !DILocalVariable(name: "spimem", arg: 1, scope: !10723, file: !3, line: 3288, type: !4110)
!10725 = !DILocation(line: 3288, column: 42, scope: !10723)
!10726 = !DILocalVariable(name: "spi", scope: !10723, file: !3, line: 3290, type: !4114)
!10727 = !DILocation(line: 3290, column: 21, scope: !10723)
!10728 = !DILocation(line: 3290, column: 27, scope: !10723)
!10729 = !DILocation(line: 3290, column: 35, scope: !10723)
!10730 = !DILocalVariable(name: "data", scope: !10723, file: !3, line: 3291, type: !10731)
!10731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10732, size: 64)
!10732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flash_platform_data", file: !10733, line: 22, size: 256, elements: !10734)
!10733 = !DIFile(filename: "./include/linux/spi/flash.h", directory: "/home/lizy2001/genbc/linux")
!10734 = !{!10735, !10736, !10739, !10740}
!10735 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10732, file: !10733, line: 23, baseType: !636, size: 64)
!10736 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !10732, file: !10733, line: 24, baseType: !10737, size: 64, offset: 64)
!10737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10738, size: 64)
!10738 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_partition", file: !1026, line: 666, flags: DIFlagFwdDecl)
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "nr_parts", scope: !10732, file: !10733, line: 25, baseType: !15, size: 32, offset: 128)
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10732, file: !10733, line: 27, baseType: !636, size: 64, offset: 192)
!10741 = !DILocation(line: 3291, column: 30, scope: !10723)
!10742 = !DILocation(line: 3291, column: 55, scope: !10723)
!10743 = !DILocation(line: 3291, column: 60, scope: !10723)
!10744 = !DILocation(line: 3291, column: 37, scope: !10723)
!10745 = !DILocalVariable(name: "nor", scope: !10723, file: !3, line: 3292, type: !4103)
!10746 = !DILocation(line: 3292, column: 18, scope: !10723)
!10747 = !DILocalVariable(name: "hwcaps", scope: !10723, file: !3, line: 3297, type: !4548)
!10748 = !DILocation(line: 3297, column: 30, scope: !10723)
!10749 = !DILocalVariable(name: "flash_name", scope: !10723, file: !3, line: 3298, type: !636)
!10750 = !DILocation(line: 3298, column: 8, scope: !10723)
!10751 = !DILocalVariable(name: "ret", scope: !10723, file: !3, line: 3299, type: !182)
!10752 = !DILocation(line: 3299, column: 6, scope: !10723)
!10753 = !DILocation(line: 3301, column: 22, scope: !10723)
!10754 = !DILocation(line: 3301, column: 27, scope: !10723)
!10755 = !DILocation(line: 3301, column: 8, scope: !10723)
!10756 = !DILocation(line: 3301, column: 6, scope: !10723)
!10757 = !DILocation(line: 3302, column: 7, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3302, column: 6)
!10759 = !DILocation(line: 3302, column: 6, scope: !10723)
!10760 = !DILocation(line: 3303, column: 3, scope: !10758)
!10761 = !DILocation(line: 3305, column: 16, scope: !10723)
!10762 = !DILocation(line: 3305, column: 2, scope: !10723)
!10763 = !DILocation(line: 3305, column: 7, scope: !10723)
!10764 = !DILocation(line: 3305, column: 14, scope: !10723)
!10765 = !DILocation(line: 3306, column: 14, scope: !10723)
!10766 = !DILocation(line: 3306, column: 19, scope: !10723)
!10767 = !DILocation(line: 3306, column: 2, scope: !10723)
!10768 = !DILocation(line: 3306, column: 7, scope: !10723)
!10769 = !DILocation(line: 3306, column: 11, scope: !10723)
!10770 = !DILocation(line: 3307, column: 25, scope: !10723)
!10771 = !DILocation(line: 3307, column: 30, scope: !10723)
!10772 = !DILocation(line: 3307, column: 35, scope: !10723)
!10773 = !DILocation(line: 3307, column: 39, scope: !10723)
!10774 = !DILocation(line: 3307, column: 2, scope: !10723)
!10775 = !DILocation(line: 3309, column: 22, scope: !10723)
!10776 = !DILocation(line: 3309, column: 30, scope: !10723)
!10777 = !DILocation(line: 3309, column: 2, scope: !10723)
!10778 = !DILocation(line: 3311, column: 6, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3311, column: 6)
!10780 = !DILocation(line: 3311, column: 11, scope: !10779)
!10781 = !DILocation(line: 3311, column: 14, scope: !10779)
!10782 = !DILocation(line: 3311, column: 20, scope: !10779)
!10783 = !DILocation(line: 3311, column: 6, scope: !10723)
!10784 = !DILocation(line: 3312, column: 19, scope: !10779)
!10785 = !DILocation(line: 3312, column: 25, scope: !10779)
!10786 = !DILocation(line: 3312, column: 3, scope: !10779)
!10787 = !DILocation(line: 3312, column: 8, scope: !10779)
!10788 = !DILocation(line: 3312, column: 12, scope: !10779)
!10789 = !DILocation(line: 3312, column: 17, scope: !10779)
!10790 = !DILocation(line: 3314, column: 7, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3314, column: 6)
!10792 = !DILocation(line: 3314, column: 12, scope: !10791)
!10793 = !DILocation(line: 3314, column: 16, scope: !10791)
!10794 = !DILocation(line: 3314, column: 6, scope: !10723)
!10795 = !DILocation(line: 3315, column: 36, scope: !10791)
!10796 = !DILocation(line: 3315, column: 19, scope: !10791)
!10797 = !DILocation(line: 3315, column: 3, scope: !10791)
!10798 = !DILocation(line: 3315, column: 8, scope: !10791)
!10799 = !DILocation(line: 3315, column: 12, scope: !10791)
!10800 = !DILocation(line: 3315, column: 17, scope: !10791)
!10801 = !DILocation(line: 3323, column: 6, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3323, column: 6)
!10803 = !DILocation(line: 3323, column: 11, scope: !10802)
!10804 = !DILocation(line: 3323, column: 14, scope: !10802)
!10805 = !DILocation(line: 3323, column: 20, scope: !10802)
!10806 = !DILocation(line: 3323, column: 6, scope: !10723)
!10807 = !DILocation(line: 3324, column: 16, scope: !10802)
!10808 = !DILocation(line: 3324, column: 22, scope: !10802)
!10809 = !DILocation(line: 3324, column: 14, scope: !10802)
!10810 = !DILocation(line: 3324, column: 3, scope: !10802)
!10811 = !DILocation(line: 3325, column: 19, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 3325, column: 11)
!10813 = !DILocation(line: 3325, column: 24, scope: !10812)
!10814 = !DILocation(line: 3325, column: 12, scope: !10812)
!10815 = !DILocation(line: 3325, column: 11, scope: !10802)
!10816 = !DILocation(line: 3326, column: 14, scope: !10812)
!10817 = !DILocation(line: 3326, column: 3, scope: !10812)
!10818 = !DILocation(line: 3328, column: 16, scope: !10812)
!10819 = !DILocation(line: 3328, column: 21, scope: !10812)
!10820 = !DILocation(line: 3328, column: 14, scope: !10812)
!10821 = !DILocation(line: 3330, column: 21, scope: !10723)
!10822 = !DILocation(line: 3330, column: 26, scope: !10723)
!10823 = !DILocation(line: 3330, column: 8, scope: !10723)
!10824 = !DILocation(line: 3330, column: 6, scope: !10723)
!10825 = !DILocation(line: 3331, column: 6, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3331, column: 6)
!10827 = !DILocation(line: 3331, column: 6, scope: !10723)
!10828 = !DILocation(line: 3332, column: 10, scope: !10826)
!10829 = !DILocation(line: 3332, column: 3, scope: !10826)
!10830 = !DILocation(line: 3339, column: 6, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3339, column: 6)
!10832 = !DILocation(line: 3339, column: 11, scope: !10831)
!10833 = !DILocation(line: 3339, column: 21, scope: !10831)
!10834 = !DILocation(line: 3339, column: 6, scope: !10723)
!10835 = !DILocation(line: 3340, column: 25, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 3339, column: 34)
!10837 = !DILocation(line: 3340, column: 30, scope: !10836)
!10838 = !DILocation(line: 3340, column: 3, scope: !10836)
!10839 = !DILocation(line: 3340, column: 8, scope: !10836)
!10840 = !DILocation(line: 3340, column: 23, scope: !10836)
!10841 = !DILocation(line: 3341, column: 14, scope: !10836)
!10842 = !DILocation(line: 3341, column: 19, scope: !10836)
!10843 = !DILocation(line: 3341, column: 24, scope: !10836)
!10844 = !DILocation(line: 3341, column: 29, scope: !10836)
!10845 = !DILocation(line: 3341, column: 3, scope: !10836)
!10846 = !DILocation(line: 3342, column: 33, scope: !10836)
!10847 = !DILocation(line: 3342, column: 38, scope: !10836)
!10848 = !DILocation(line: 3343, column: 12, scope: !10836)
!10849 = !DILocation(line: 3343, column: 17, scope: !10836)
!10850 = !DILocation(line: 3342, column: 20, scope: !10836)
!10851 = !DILocation(line: 3342, column: 3, scope: !10836)
!10852 = !DILocation(line: 3342, column: 8, scope: !10836)
!10853 = !DILocation(line: 3342, column: 18, scope: !10836)
!10854 = !DILocation(line: 3345, column: 8, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 3345, column: 7)
!10856 = !DILocation(line: 3345, column: 13, scope: !10855)
!10857 = !DILocation(line: 3345, column: 7, scope: !10836)
!10858 = !DILocation(line: 3346, column: 4, scope: !10855)
!10859 = !DILocation(line: 3347, column: 2, scope: !10836)
!10860 = !DILocation(line: 3349, column: 35, scope: !10723)
!10861 = !DILocation(line: 3349, column: 8, scope: !10723)
!10862 = !DILocation(line: 3349, column: 6, scope: !10723)
!10863 = !DILocation(line: 3350, column: 6, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3350, column: 6)
!10865 = !DILocation(line: 3350, column: 6, scope: !10723)
!10866 = !DILocation(line: 3351, column: 10, scope: !10864)
!10867 = !DILocation(line: 3351, column: 3, scope: !10864)
!10868 = !DILocation(line: 3353, column: 36, scope: !10723)
!10869 = !DILocation(line: 3353, column: 8, scope: !10723)
!10870 = !DILocation(line: 3353, column: 6, scope: !10723)
!10871 = !DILocation(line: 3354, column: 6, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3354, column: 6)
!10873 = !DILocation(line: 3354, column: 6, scope: !10723)
!10874 = !DILocation(line: 3355, column: 10, scope: !10872)
!10875 = !DILocation(line: 3355, column: 3, scope: !10872)
!10876 = !DILocation(line: 3357, column: 9, scope: !10723)
!10877 = !DILocation(line: 3357, column: 2, scope: !10723)
!10878 = !DILocation(line: 3359, column: 1, scope: !10723)
!10879 = distinct !DISubprogram(name: "spi_nor_remove", scope: !3, file: !3, line: 3361, type: !4693, scopeLine: 3362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10880 = !DILocalVariable(name: "spimem", arg: 1, scope: !10879, file: !3, line: 3361, type: !4110)
!10881 = !DILocation(line: 3361, column: 43, scope: !10879)
!10882 = !DILocalVariable(name: "nor", scope: !10879, file: !3, line: 3363, type: !4103)
!10883 = !DILocation(line: 3363, column: 18, scope: !10879)
!10884 = !DILocation(line: 3363, column: 44, scope: !10879)
!10885 = !DILocation(line: 3363, column: 24, scope: !10879)
!10886 = !DILocation(line: 3365, column: 18, scope: !10879)
!10887 = !DILocation(line: 3365, column: 2, scope: !10879)
!10888 = !DILocation(line: 3368, column: 32, scope: !10879)
!10889 = !DILocation(line: 3368, column: 37, scope: !10879)
!10890 = !DILocation(line: 3368, column: 9, scope: !10879)
!10891 = !DILocation(line: 3368, column: 2, scope: !10879)
!10892 = distinct !DISubprogram(name: "spi_nor_shutdown", scope: !3, file: !3, line: 3371, type: !4698, scopeLine: 3372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10893 = !DILocalVariable(name: "spimem", arg: 1, scope: !10892, file: !3, line: 3371, type: !4110)
!10894 = !DILocation(line: 3371, column: 46, scope: !10892)
!10895 = !DILocalVariable(name: "nor", scope: !10892, file: !3, line: 3373, type: !4103)
!10896 = !DILocation(line: 3373, column: 18, scope: !10892)
!10897 = !DILocation(line: 3373, column: 44, scope: !10892)
!10898 = !DILocation(line: 3373, column: 24, scope: !10892)
!10899 = !DILocation(line: 3375, column: 18, scope: !10892)
!10900 = !DILocation(line: 3375, column: 2, scope: !10892)
!10901 = !DILocation(line: 3376, column: 1, scope: !10892)
!10902 = distinct !DISubprogram(name: "dev_get_platdata", scope: !81, file: !81, line: 828, type: !10903, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10903 = !DISubroutineType(types: !10904)
!10904 = !{!204, !2463}
!10905 = !DILocalVariable(name: "dev", arg: 1, scope: !10902, file: !81, line: 828, type: !2463)
!10906 = !DILocation(line: 828, column: 59, scope: !10902)
!10907 = !DILocation(line: 830, column: 9, scope: !10902)
!10908 = !DILocation(line: 830, column: 14, scope: !10902)
!10909 = !DILocation(line: 830, column: 2, scope: !10902)
!10910 = distinct !DISubprogram(name: "spi_nor_set_flash_node", scope: !108, file: !108, line: 392, type: !10911, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{null, !4103, !2426}
!10913 = !DILocalVariable(name: "nor", arg: 1, scope: !10910, file: !108, line: 392, type: !4103)
!10914 = !DILocation(line: 392, column: 59, scope: !10910)
!10915 = !DILocalVariable(name: "np", arg: 2, scope: !10910, file: !108, line: 393, type: !2426)
!10916 = !DILocation(line: 393, column: 28, scope: !10910)
!10917 = !DILocation(line: 395, column: 19, scope: !10910)
!10918 = !DILocation(line: 395, column: 24, scope: !10910)
!10919 = !DILocation(line: 395, column: 29, scope: !10910)
!10920 = !DILocation(line: 395, column: 2, scope: !10910)
!10921 = !DILocation(line: 396, column: 1, scope: !10910)
!10922 = distinct !DISubprogram(name: "spi_mem_set_drvdata", scope: !102, file: !102, line: 206, type: !10923, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10923 = !DISubroutineType(types: !10924)
!10924 = !{null, !4110, !204}
!10925 = !DILocalVariable(name: "mem", arg: 1, scope: !10922, file: !102, line: 206, type: !4110)
!10926 = !DILocation(line: 206, column: 56, scope: !10922)
!10927 = !DILocalVariable(name: "data", arg: 2, scope: !10922, file: !102, line: 206, type: !204)
!10928 = !DILocation(line: 206, column: 67, scope: !10922)
!10929 = !DILocation(line: 208, column: 17, scope: !10922)
!10930 = !DILocation(line: 208, column: 2, scope: !10922)
!10931 = !DILocation(line: 208, column: 7, scope: !10922)
!10932 = !DILocation(line: 208, column: 15, scope: !10922)
!10933 = !DILocation(line: 209, column: 1, scope: !10922)
!10934 = distinct !DISubprogram(name: "spi_nor_create_read_dirmap", scope: !3, file: !3, line: 3236, type: !4533, scopeLine: 3237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!10935 = !DILocalVariable(name: "nor", arg: 1, scope: !10934, file: !3, line: 3236, type: !4103)
!10936 = !DILocation(line: 3236, column: 55, scope: !10934)
!10937 = !DILocalVariable(name: "info", scope: !10934, file: !3, line: 3238, type: !4359)
!10938 = !DILocation(line: 3238, column: 29, scope: !10934)
!10939 = !DILocation(line: 3238, column: 36, scope: !10934)
!10940 = !DILocation(line: 3239, column: 14, scope: !10934)
!10941 = !DILocation(line: 3244, column: 13, scope: !10934)
!10942 = !DILocation(line: 3244, column: 18, scope: !10934)
!10943 = !DILocation(line: 3244, column: 22, scope: !10934)
!10944 = !DILocalVariable(name: "op", scope: !10934, file: !3, line: 3246, type: !4301)
!10945 = !DILocation(line: 3246, column: 21, scope: !10934)
!10946 = !DILocation(line: 3246, column: 32, scope: !10934)
!10947 = !DILocation(line: 3249, column: 53, scope: !10934)
!10948 = !DILocation(line: 3249, column: 58, scope: !10934)
!10949 = !DILocation(line: 3249, column: 21, scope: !10934)
!10950 = !DILocation(line: 3249, column: 2, scope: !10934)
!10951 = !DILocation(line: 3249, column: 6, scope: !10934)
!10952 = !DILocation(line: 3249, column: 10, scope: !10934)
!10953 = !DILocation(line: 3249, column: 19, scope: !10934)
!10954 = !DILocation(line: 3250, column: 54, scope: !10934)
!10955 = !DILocation(line: 3250, column: 59, scope: !10934)
!10956 = !DILocation(line: 3250, column: 22, scope: !10934)
!10957 = !DILocation(line: 3250, column: 2, scope: !10934)
!10958 = !DILocation(line: 3250, column: 6, scope: !10934)
!10959 = !DILocation(line: 3250, column: 11, scope: !10934)
!10960 = !DILocation(line: 3250, column: 20, scope: !10934)
!10961 = !DILocation(line: 3251, column: 23, scope: !10934)
!10962 = !DILocation(line: 3251, column: 27, scope: !10934)
!10963 = !DILocation(line: 3251, column: 32, scope: !10934)
!10964 = !DILocation(line: 3251, column: 2, scope: !10934)
!10965 = !DILocation(line: 3251, column: 6, scope: !10934)
!10966 = !DILocation(line: 3251, column: 12, scope: !10934)
!10967 = !DILocation(line: 3251, column: 21, scope: !10934)
!10968 = !DILocation(line: 3252, column: 54, scope: !10934)
!10969 = !DILocation(line: 3252, column: 59, scope: !10934)
!10970 = !DILocation(line: 3252, column: 22, scope: !10934)
!10971 = !DILocation(line: 3252, column: 2, scope: !10934)
!10972 = !DILocation(line: 3252, column: 6, scope: !10934)
!10973 = !DILocation(line: 3252, column: 11, scope: !10934)
!10974 = !DILocation(line: 3252, column: 20, scope: !10934)
!10975 = !DILocation(line: 3255, column: 22, scope: !10934)
!10976 = !DILocation(line: 3255, column: 27, scope: !10934)
!10977 = !DILocation(line: 3255, column: 40, scope: !10934)
!10978 = !DILocation(line: 3255, column: 44, scope: !10934)
!10979 = !DILocation(line: 3255, column: 50, scope: !10934)
!10980 = !DILocation(line: 3255, column: 38, scope: !10934)
!10981 = !DILocation(line: 3255, column: 60, scope: !10934)
!10982 = !DILocation(line: 3255, column: 21, scope: !10934)
!10983 = !DILocation(line: 3255, column: 2, scope: !10934)
!10984 = !DILocation(line: 3255, column: 6, scope: !10934)
!10985 = !DILocation(line: 3255, column: 12, scope: !10934)
!10986 = !DILocation(line: 3255, column: 19, scope: !10934)
!10987 = !DILocation(line: 3257, column: 49, scope: !10934)
!10988 = !DILocation(line: 3257, column: 54, scope: !10934)
!10989 = !DILocation(line: 3257, column: 59, scope: !10934)
!10990 = !DILocation(line: 3257, column: 64, scope: !10934)
!10991 = !DILocation(line: 3257, column: 22, scope: !10934)
!10992 = !DILocation(line: 3257, column: 2, scope: !10934)
!10993 = !DILocation(line: 3257, column: 7, scope: !10934)
!10994 = !DILocation(line: 3257, column: 14, scope: !10934)
!10995 = !DILocation(line: 3257, column: 20, scope: !10934)
!10996 = !DILocation(line: 3259, column: 25, scope: !10934)
!10997 = !DILocation(line: 3259, column: 30, scope: !10934)
!10998 = !DILocation(line: 3259, column: 37, scope: !10934)
!10999 = !DILocation(line: 3259, column: 9, scope: !10934)
!11000 = !DILocation(line: 3259, column: 2, scope: !10934)
!11001 = distinct !DISubprogram(name: "spi_nor_create_write_dirmap", scope: !3, file: !3, line: 3262, type: !4533, scopeLine: 3263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!11002 = !DILocalVariable(name: "nor", arg: 1, scope: !11001, file: !3, line: 3262, type: !4103)
!11003 = !DILocation(line: 3262, column: 56, scope: !11001)
!11004 = !DILocalVariable(name: "info", scope: !11001, file: !3, line: 3264, type: !4359)
!11005 = !DILocation(line: 3264, column: 29, scope: !11001)
!11006 = !DILocation(line: 3264, column: 36, scope: !11001)
!11007 = !DILocation(line: 3265, column: 14, scope: !11001)
!11008 = !DILocation(line: 3270, column: 13, scope: !11001)
!11009 = !DILocation(line: 3270, column: 18, scope: !11001)
!11010 = !DILocation(line: 3270, column: 22, scope: !11001)
!11011 = !DILocalVariable(name: "op", scope: !11001, file: !3, line: 3272, type: !4301)
!11012 = !DILocation(line: 3272, column: 21, scope: !11001)
!11013 = !DILocation(line: 3272, column: 32, scope: !11001)
!11014 = !DILocation(line: 3275, column: 53, scope: !11001)
!11015 = !DILocation(line: 3275, column: 58, scope: !11001)
!11016 = !DILocation(line: 3275, column: 21, scope: !11001)
!11017 = !DILocation(line: 3275, column: 2, scope: !11001)
!11018 = !DILocation(line: 3275, column: 6, scope: !11001)
!11019 = !DILocation(line: 3275, column: 10, scope: !11001)
!11020 = !DILocation(line: 3275, column: 19, scope: !11001)
!11021 = !DILocation(line: 3276, column: 54, scope: !11001)
!11022 = !DILocation(line: 3276, column: 59, scope: !11001)
!11023 = !DILocation(line: 3276, column: 22, scope: !11001)
!11024 = !DILocation(line: 3276, column: 2, scope: !11001)
!11025 = !DILocation(line: 3276, column: 6, scope: !11001)
!11026 = !DILocation(line: 3276, column: 11, scope: !11001)
!11027 = !DILocation(line: 3276, column: 20, scope: !11001)
!11028 = !DILocation(line: 3277, column: 23, scope: !11001)
!11029 = !DILocation(line: 3277, column: 27, scope: !11001)
!11030 = !DILocation(line: 3277, column: 32, scope: !11001)
!11031 = !DILocation(line: 3277, column: 2, scope: !11001)
!11032 = !DILocation(line: 3277, column: 6, scope: !11001)
!11033 = !DILocation(line: 3277, column: 12, scope: !11001)
!11034 = !DILocation(line: 3277, column: 21, scope: !11001)
!11035 = !DILocation(line: 3278, column: 54, scope: !11001)
!11036 = !DILocation(line: 3278, column: 59, scope: !11001)
!11037 = !DILocation(line: 3278, column: 22, scope: !11001)
!11038 = !DILocation(line: 3278, column: 2, scope: !11001)
!11039 = !DILocation(line: 3278, column: 6, scope: !11001)
!11040 = !DILocation(line: 3278, column: 11, scope: !11001)
!11041 = !DILocation(line: 3278, column: 20, scope: !11001)
!11042 = !DILocation(line: 3280, column: 6, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 3280, column: 6)
!11044 = !DILocation(line: 3280, column: 11, scope: !11043)
!11045 = !DILocation(line: 3280, column: 26, scope: !11043)
!11046 = !DILocation(line: 3280, column: 46, scope: !11043)
!11047 = !DILocation(line: 3280, column: 49, scope: !11043)
!11048 = !DILocation(line: 3280, column: 54, scope: !11043)
!11049 = !DILocation(line: 3280, column: 6, scope: !11001)
!11050 = !DILocation(line: 3281, column: 3, scope: !11043)
!11051 = !DILocation(line: 3281, column: 7, scope: !11043)
!11052 = !DILocation(line: 3281, column: 12, scope: !11043)
!11053 = !DILocation(line: 3281, column: 19, scope: !11043)
!11054 = !DILocation(line: 3283, column: 49, scope: !11001)
!11055 = !DILocation(line: 3283, column: 54, scope: !11001)
!11056 = !DILocation(line: 3283, column: 59, scope: !11001)
!11057 = !DILocation(line: 3283, column: 64, scope: !11001)
!11058 = !DILocation(line: 3283, column: 22, scope: !11001)
!11059 = !DILocation(line: 3283, column: 2, scope: !11001)
!11060 = !DILocation(line: 3283, column: 7, scope: !11001)
!11061 = !DILocation(line: 3283, column: 14, scope: !11001)
!11062 = !DILocation(line: 3283, column: 20, scope: !11001)
!11063 = !DILocation(line: 3285, column: 25, scope: !11001)
!11064 = !DILocation(line: 3285, column: 30, scope: !11001)
!11065 = !DILocation(line: 3285, column: 37, scope: !11001)
!11066 = !DILocation(line: 3285, column: 9, scope: !11001)
!11067 = !DILocation(line: 3285, column: 2, scope: !11001)
!11068 = distinct !DISubprogram(name: "mtd_set_of_node", scope: !1026, file: !1026, line: 455, type: !11069, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!11069 = !DISubroutineType(types: !11070)
!11070 = !{null, !1024, !2426}
!11071 = !DILocalVariable(name: "mtd", arg: 1, scope: !11068, file: !1026, line: 455, type: !1024)
!11072 = !DILocation(line: 455, column: 53, scope: !11068)
!11073 = !DILocalVariable(name: "np", arg: 2, scope: !11068, file: !1026, line: 456, type: !2426)
!11074 = !DILocation(line: 456, column: 28, scope: !11068)
!11075 = !DILocation(line: 458, column: 21, scope: !11068)
!11076 = !DILocation(line: 458, column: 2, scope: !11068)
!11077 = !DILocation(line: 458, column: 7, scope: !11068)
!11078 = !DILocation(line: 458, column: 11, scope: !11068)
!11079 = !DILocation(line: 458, column: 19, scope: !11068)
!11080 = !DILocation(line: 459, column: 7, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11068, file: !1026, line: 459, column: 6)
!11082 = !DILocation(line: 459, column: 12, scope: !11081)
!11083 = !DILocation(line: 459, column: 6, scope: !11068)
!11084 = !DILocation(line: 460, column: 27, scope: !11081)
!11085 = !DILocation(line: 460, column: 41, scope: !11081)
!11086 = !DILocation(line: 460, column: 46, scope: !11081)
!11087 = !DILocation(line: 460, column: 3, scope: !11081)
!11088 = !DILocation(line: 461, column: 1, scope: !11068)
!11089 = distinct !DISubprogram(name: "PTR_ERR_OR_ZERO", scope: !6339, file: !6339, line: 57, type: !7202, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!11090 = !DILocalVariable(name: "ptr", arg: 1, scope: !11089, file: !6339, line: 57, type: !1921)
!11091 = !DILocation(line: 57, column: 68, scope: !11089)
!11092 = !DILocation(line: 59, column: 13, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11089, file: !6339, line: 59, column: 6)
!11094 = !DILocation(line: 59, column: 6, scope: !11093)
!11095 = !DILocation(line: 59, column: 6, scope: !11089)
!11096 = !DILocation(line: 60, column: 18, scope: !11093)
!11097 = !DILocation(line: 60, column: 10, scope: !11093)
!11098 = !DILocation(line: 60, column: 3, scope: !11093)
!11099 = !DILocation(line: 62, column: 3, scope: !11093)
!11100 = !DILocation(line: 63, column: 1, scope: !11089)
!11101 = distinct !DISubprogram(name: "spi_mem_get_drvdata", scope: !102, file: !102, line: 218, type: !11102, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !259)
!11102 = !DISubroutineType(types: !11103)
!11103 = !{!204, !4110}
!11104 = !DILocalVariable(name: "mem", arg: 1, scope: !11101, file: !102, line: 218, type: !4110)
!11105 = !DILocation(line: 218, column: 57, scope: !11101)
!11106 = !DILocation(line: 220, column: 9, scope: !11101)
!11107 = !DILocation(line: 220, column: 14, scope: !11101)
!11108 = !DILocation(line: 220, column: 2, scope: !11101)
