; ModuleID = '../bcout/drivers/firewire/ohci.llvm.bc'
source_filename = "drivers/firewire/ohci.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_fw_ohci_init6:\09\09\09"
module asm ".long\09fw_ohci_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.66, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.4 }
%union.anon.4 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.request_queue = type opaque
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.pci_vpd = type opaque
%union.anon.66 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.fw_card_driver = type { i32 (%struct.fw_card*, i32*, i64)*, i32 (%struct.fw_card*, i32)*, i32 (%struct.fw_card*, i32, i32, i32)*, i32 (%struct.fw_card*, i32*, i64)*, void (%struct.fw_card*, %struct.fw_packet*)*, void (%struct.fw_card*, %struct.fw_packet*)*, i32 (%struct.fw_card*, %struct.fw_packet*)*, i32 (%struct.fw_card*, i32, i32)*, i32 (%struct.fw_card*, i32)*, void (%struct.fw_card*, i32, i32)*, %struct.fw_iso_context* (%struct.fw_card*, i32, i32, i64)*, void (%struct.fw_iso_context*)*, i32 (%struct.fw_iso_context*, i32, i32, i32)*, i32 (%struct.fw_iso_context*, i64*)*, i32 (%struct.fw_iso_context*, %struct.fw_iso_packet*, %struct.fw_iso_buffer*, i64)*, void (%struct.fw_iso_context*)*, i32 (%struct.fw_iso_context*)*, i32 (%struct.fw_iso_context*)* }
%struct.fw_card = type { %struct.fw_card_driver*, %struct.device*, %struct.kref, %struct.completion, i32, i32, i32, i64, %struct.list_head, i64, i32, i32, i32, i32, i64, i32, i32, i32, %struct.spinlock, %struct.fw_node*, %struct.fw_node*, %struct.fw_node*, i8, i32, i8, i32, %struct.list_head, %struct.list_head, %struct.delayed_work, i8, %struct.delayed_work, i32, i32, i32, i8, i8, i8, i8, i32, [256 x i32], i32 }
%struct.fw_node = type { i16, i8, i8, i8, i8, %struct.refcount_struct, %struct.list_head, i8*, [0 x %struct.fw_node*] }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.fw_packet = type { i32, i32, [4 x i32], i64, i8*, i64, i64, i8, i32, void (%struct.fw_packet*, %struct.fw_card*, i32)*, i32, %struct.list_head, i8* }
%struct.fw_iso_context = type { %struct.fw_card*, i32, i32, i32, i8, i64, %union.anon.67, i8* }
%union.anon.67 = type { void (%struct.fw_iso_context*, i32, i64, i8*, i8*)* }
%struct.fw_iso_packet = type { i16, i16, [0 x i32] }
%struct.fw_iso_buffer = type { i32, %struct.page**, i32, i32 }
%struct.anon.69 = type { i16, i16, i16, i16 }
%struct.kmem_cache = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.fw_ohci = type { %struct.fw_card, i8*, i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i32, %struct.spinlock, %struct.mutex, i8*, i64, %struct.ar_context, %struct.ar_context, %struct.context, %struct.context, i32, i32, %struct.iso_context*, i64, i32, i32, %struct.iso_context*, i64, i8, i32*, i64, i32*, i64, i32, i32*, i64, %struct.work_struct, [512 x i32] }
%struct.ar_context = type { %struct.fw_ohci*, [8 x %struct.page*], i8*, %struct.descriptor*, i64, i8*, i32, i32, %struct.tasklet_struct }
%struct.descriptor = type { i16, i16, i32, i32, i16, i16 }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.68, i64 }
%union.anon.68 = type { void (i64)* }
%struct.context = type { %struct.fw_ohci*, i32, i32, i32, i8, i8, %struct.list_head, %struct.descriptor_buffer*, %struct.descriptor*, %struct.descriptor*, i32, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)*, %struct.tasklet_struct }
%struct.descriptor_buffer = type { %struct.list_head, i64, i64, i64, [8 x i8], [0 x %struct.descriptor] }
%struct.iso_context = type { %struct.fw_iso_context, %struct.context, i8*, i64, i64, i32, i16, i16, i8, i8 }
%struct.driver_data = type { [8 x i8], %struct.fw_packet* }

@__param_str_quirks = internal constant [21 x i8] c"firewire_ohci.quirks\00", align 16, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@param_quirks = internal global i32 0, align 4, !dbg !4262
@__param_quirks = internal constant %struct.kernel_param { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__param_str_quirks, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @param_quirks to i8*) } }, section "__param", align 8, !dbg !4142
@__UNIQUE_ID_quirkstype237 = internal constant [34 x i8] c"firewire_ohci.parmtype=quirks:int\00", section ".modinfo", align 1, !dbg !4194
@__UNIQUE_ID_quirks238 = internal constant [243 x i8] c"firewire_ohci.parm=quirks:Chip quirks (default = 0, nonatomic cycle timer = 0x1, reset packet generation = 0x2, AR/selfID endianness = 0x4, no 1394a enhancements = 0x8, disable MSI = 0x10, TI SLLZ059 erratum = 0x20, IR wake unreliable = 0x40)\00", section ".modinfo", align 1, !dbg !4199
@__param_str_debug = internal constant [20 x i8] c"firewire_ohci.debug\00", align 16, !dbg !4268
@param_debug = internal global i32 0, align 4, !dbg !4264
@__param_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @param_debug to i8*) } }, section "__param", align 8, !dbg !4204
@__UNIQUE_ID_debugtype239 = internal constant [33 x i8] c"firewire_ohci.parmtype=debug:int\00", section ".modinfo", align 1, !dbg !4206
@__UNIQUE_ID_debug240 = internal constant [149 x i8] c"firewire_ohci.parm=debug:Verbose logging (default = 0, AT/AR events = 1, self-IDs = 2, IRQs = 4, busReset events = 8, or a combination, or all = -1)\00", section ".modinfo", align 1, !dbg !4211
@__param_str_remote_dma = internal constant [25 x i8] c"firewire_ohci.remote_dma\00", align 16, !dbg !4271
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@param_remote_dma = internal global i8 0, align 1, !dbg !4266
@__param_remote_dma = internal constant %struct.kernel_param { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__param_str_remote_dma, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon { i8* @param_remote_dma } }, section "__param", align 8, !dbg !4216
@__UNIQUE_ID_remote_dmatype241 = internal constant [39 x i8] c"firewire_ohci.parmtype=remote_dma:bool\00", section ".modinfo", align 1, !dbg !4218
@__UNIQUE_ID_remote_dma242 = internal constant [73 x i8] c"firewire_ohci.parm=remote_dma:Enable unfiltered remote DMA (default = N)\00", section ".modinfo", align 1, !dbg !4223
@fw_ohci_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @ohci_driver_name, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([2 x %struct.pci_device_id], [2 x %struct.pci_device_id]* @pci_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @pci_probe, void (%struct.pci_dev*)* @pci_remove, i32 (%struct.pci_dev*, i32)* @pci_suspend, i32 (%struct.pci_dev*)* @pci_resume, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !4276
@selfid_workqueue = internal global %struct.workqueue_struct* null, align 8, !dbg !4260
@__UNIQUE_ID___addressable_fw_ohci_init274 = internal global i8* bitcast (i32 ()* @fw_ohci_init to i8*), section ".discard.addressable", align 8, !dbg !4228
@__exitcall_fw_ohci_cleanup = internal global void ()* @fw_ohci_cleanup, section ".exitcall.exit", align 8, !dbg !4230
@__UNIQUE_ID_author275 = internal constant [60 x i8] c"firewire_ohci.author=Kristian Hoegsberg <krh@bitplanet.net>\00", section ".modinfo", align 1, !dbg !4235
@__UNIQUE_ID_description276 = internal constant [67 x i8] c"firewire_ohci.description=Driver for PCI OHCI IEEE1394 controllers\00", section ".modinfo", align 1, !dbg !4240
@__UNIQUE_ID_file277 = internal constant [50 x i8] c"firewire_ohci.file=drivers/firewire/firewire-ohci\00", section ".modinfo", align 1, !dbg !4245
@__UNIQUE_ID_license278 = internal constant [26 x i8] c"firewire_ohci.license=GPL\00", section ".modinfo", align 1, !dbg !4250
@__UNIQUE_ID_alias279 = internal constant [29 x i8] c"firewire_ohci.alias=ohci1394\00", section ".modinfo", align 1, !dbg !4255
@ohci_driver_name = internal global [14 x i8] c"firewire_ohci\00", align 1, !dbg !4554
@pci_table = internal constant [2 x %struct.pci_device_id] [%struct.pci_device_id { i32 -1, i32 -1, i32 -1, i32 -1, i32 786448, i32 -1, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !4559
@.str = private unnamed_addr constant [42 x i8] c"Pinnacle MovieBoard is not yet supported\0A\00", align 1
@ohci_driver = internal constant %struct.fw_card_driver { i32 (%struct.fw_card*, i32*, i64)* @ohci_enable, i32 (%struct.fw_card*, i32)* @ohci_read_phy_reg, i32 (%struct.fw_card*, i32, i32, i32)* @ohci_update_phy_reg, i32 (%struct.fw_card*, i32*, i64)* @ohci_set_config_rom, void (%struct.fw_card*, %struct.fw_packet*)* @ohci_send_request, void (%struct.fw_card*, %struct.fw_packet*)* @ohci_send_response, i32 (%struct.fw_card*, %struct.fw_packet*)* @ohci_cancel_packet, i32 (%struct.fw_card*, i32, i32)* @ohci_enable_phys_dma, i32 (%struct.fw_card*, i32)* @ohci_read_csr, void (%struct.fw_card*, i32, i32)* @ohci_write_csr, %struct.fw_iso_context* (%struct.fw_card*, i32, i32, i64)* @ohci_allocate_iso_context, void (%struct.fw_iso_context*)* @ohci_free_iso_context, i32 (%struct.fw_iso_context*, i32, i32, i32)* @ohci_start_iso, i32 (%struct.fw_iso_context*, i64*)* @ohci_set_iso_channels, i32 (%struct.fw_iso_context*, %struct.fw_iso_packet*, %struct.fw_iso_buffer*, i64)* @ohci_queue_iso, void (%struct.fw_iso_context*)* @ohci_flush_queue_iso, i32 (%struct.fw_iso_context*)* @ohci_flush_iso_completions, i32 (%struct.fw_iso_context*)* @ohci_stop_iso }, align 8, !dbg !4565
@.str.1 = private unnamed_addr constant [32 x i8] c"failed to enable OHCI hardware\0A\00", align 1
@pci_probe.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4562
@.str.2 = private unnamed_addr constant [21 x i8] c"&ohci->phy_reg_mutex\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"invalid MMIO resource\0A\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"MMIO resource unavailable\0A\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"failed to remap registers\0A\00", align 1
@ohci_quirks = internal constant [16 x %struct.anon.69] [%struct.anon.69 { i16 4281, i16 -1, i16 -1, i16 1 }, %struct.anon.69 { i16 4203, i16 24, i16 -1, i16 4 }, %struct.anon.69 { i16 4545, i16 22785, i16 6, i16 16 }, %struct.anon.69 { i16 4354, i16 16385, i16 -1, i16 2 }, %struct.anon.69 { i16 6523, i16 9088, i16 -1, i16 16 }, %struct.anon.69 { i16 4147, i16 -1, i16 -1, i16 1 }, %struct.anon.69 { i16 4631, i16 -1, i16 -1, i16 16 }, %struct.anon.69 { i16 4480, i16 -1, i16 -1, i16 17 }, %struct.anon.69 { i16 4172, i16 -32759, i16 -1, i16 11 }, %struct.anon.69 { i16 4172, i16 -32736, i16 -1, i16 34 }, %struct.anon.69 { i16 4172, i16 -32731, i16 -1, i16 34 }, %struct.anon.69 { i16 4172, i16 -1, i16 -1, i16 2 }, %struct.anon.69 { i16 4358, i16 12356, i16 70, i16 65 }, %struct.anon.69 { i16 4358, i16 13315, i16 0, i16 17 }, %struct.anon.69 { i16 4358, i16 13315, i16 -1, i16 16 }, %struct.anon.69 { i16 4358, i16 -1, i16 -1, i16 17 }], align 16, !dbg !4595
@.str.6 = private unnamed_addr constant [27 x i8] c"overriding IsoXmitIntMask\0A\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"failed to allocate interrupt %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [76 x i8] c"added OHCI v%x.%x device as card %d, %d IR + %d IT contexts, quirks 0x%x%s\0A\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c", physUB\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.11 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"failed to reset ohci card\0A\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"failed to set Link Power Status\0A\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"local TSB41BA3D phy\0A\00", align 1
@probe_tsb41ba3d.id = internal constant [6 x i8] c"\08\00(\830\05", align 1, !dbg !4567
@.str.15 = private unnamed_addr constant [27 x i8] c"failed to read phy reg %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"failed to write phy reg %d, val %u\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.17 = private unnamed_addr constant [34 x i8] c"swap not done (CSR lock timeout)\0A\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !4574
@.str.18 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.19 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.20 = private unnamed_addr constant [34 x i8] c"A%c evt_bus_reset, generation %d\0A\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c" = %08x\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c" %x,%x\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"A%c %s, %s\0A\00", align 1
@evts = internal global [33 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49, i32 0, i32 0)], align 16, !dbg !4580
@tcodes = internal global [16 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0)], align 16, !dbg !4583
@.str.24 = private unnamed_addr constant [23 x i8] c"A%c %s, PHY %08x %08x\0A\00", align 1
@.str.25 = private unnamed_addr constant [54 x i8] c"A%c spd %x tl %02x, %04x -> %04x, %s, %s, %04x%08x%s\0A\00", align 1
@.str.26 = private unnamed_addr constant [44 x i8] c"A%c spd %x tl %02x, %04x -> %04x, %s, %s%s\0A\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"evt_no_status\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"-reserved-\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"evt_long_packet\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"evt_missing_ack\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"evt_underrun\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"evt_overrun\00", align 1
@.str.33 = private unnamed_addr constant [20 x i8] c"evt_descriptor_read\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"evt_data_read\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"evt_data_write\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"evt_bus_reset\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"evt_timeout\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"evt_tcode_err\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"evt_unknown\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"evt_flushed\00", align 1
@.str.41 = private unnamed_addr constant [13 x i8] c"ack_complete\00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c"ack_pending \00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"ack_busy_X\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"ack_busy_A\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"ack_busy_B\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"ack_tardy\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"ack_data_error\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"ack_type_error\00", align 1
@.str.49 = private unnamed_addr constant [18 x i8] c"pending/cancelled\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"QW req\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"BW req\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"W resp\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"QR req\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"BR req\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"QR resp\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"BR resp\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"cycle start\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"Lk req\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"async stream packet\00", align 1
@.str.60 = private unnamed_addr constant [8 x i8] c"Lk resp\00", align 1
@.str.61 = private unnamed_addr constant [14 x i8] c"link internal\00", align 1
@.str.62 = private unnamed_addr constant [24 x i8] c"drivers/firewire/ohci.c\00", align 1
@.str.63 = private unnamed_addr constant [35 x i8] c"DMA context still active (0x%08x)\0A\00", align 1
@.str.64 = private unnamed_addr constant [46 x i8] c"node ID not valid, new bus reset in progress\0A\00", align 1
@.str.65 = private unnamed_addr constant [19 x i8] c"malconfigured bus\0A\00", align 1
@.str.66 = private unnamed_addr constant [23 x i8] c"self ID receive error\0A\00", align 1
@.str.67 = private unnamed_addr constant [23 x i8] c"bad selfIDSize (%08x)\0A\00", align 1
@.str.68 = private unnamed_addr constant [28 x i8] c"ignoring spurious self IDs\0A\00", align 1
@.str.69 = private unnamed_addr constant [35 x i8] c"bad self ID %d/%d (%08x != ~%08x)\0A\00", align 1
@.str.70 = private unnamed_addr constant [35 x i8] c"could not construct local self ID\0A\00", align 1
@.str.71 = private unnamed_addr constant [13 x i8] c"no self IDs\0A\00", align 1
@.str.72 = private unnamed_addr constant [36 x i8] c"new bus reset, discarding self ids\0A\00", align 1
@.str.73 = private unnamed_addr constant [47 x i8] c"%d selfIDs, generation %d, local node ID %04x\0A\00", align 1
@.str.74 = private unnamed_addr constant [52 x i8] c"selfID 0: %08x, phy %d [%c%c%c] %s gc=%d %s %s%s%s\0A\00", align 1
@speed = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i32 0, i32 0)], align 16, !dbg !4589
@power = internal global [8 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.90, i32 0, i32 0)], align 16, !dbg !4592
@.str.75 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.76 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.77 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.78 = private unnamed_addr constant [43 x i8] c"selfID n: %08x, phy %d [%c%c%c%c%c%c%c%c]\0A\00", align 1
@port = internal constant [4 x i8] c".-pc", align 1, !dbg !4586
@.str.79 = private unnamed_addr constant [5 x i8] c"S100\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"S200\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c"S400\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"beta\00", align 1
@.str.83 = private unnamed_addr constant [4 x i8] c"+0W\00", align 1
@.str.84 = private unnamed_addr constant [5 x i8] c"+15W\00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"+30W\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"+45W\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"-3W\00", align 1
@.str.88 = private unnamed_addr constant [4 x i8] c" ?W\00", align 1
@.str.89 = private unnamed_addr constant [8 x i8] c"-3..-6W\00", align 1
@.str.90 = private unnamed_addr constant [9 x i8] c"-3..-10W\00", align 1
@__default_kernel_pte_mask = external dso_local global i64, align 8
@.str.91 = private unnamed_addr constant [24 x i8] c"inconsistent descriptor\00", align 1
@.str.92 = private unnamed_addr constant [21 x i8] c"corrupted descriptor\00", align 1
@.str.93 = private unnamed_addr constant [22 x i8] c"invalid packet length\00", align 1
@.str.94 = private unnamed_addr constant [14 x i8] c"invalid tcode\00", align 1
@.str.95 = private unnamed_addr constant [27 x i8] c"AR error: %s; DMA stopped\0A\00", align 1
@.str.96 = private unnamed_addr constant [25 x i8] c"register access failure\0A\00", align 1
@__func__.irq_handler = private unnamed_addr constant [12 x i8] c"irq_handler\00", align 1
@.str.97 = private unnamed_addr constant [24 x i8] c"PCI posted write error\0A\00", align 1
@.str.98 = private unnamed_addr constant [28 x i8] c"isochronous cycle too long\0A\00", align 1
@.str.99 = private unnamed_addr constant [32 x i8] c"isochronous cycle inconsistent\0A\00", align 1
@.str.100 = private unnamed_addr constant [40 x i8] c"IRQ %08x%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\0A\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c" selfID\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c" AR_req\00", align 1
@.str.103 = private unnamed_addr constant [9 x i8] c" AR_resp\00", align 1
@.str.104 = private unnamed_addr constant [8 x i8] c" AT_req\00", align 1
@.str.105 = private unnamed_addr constant [9 x i8] c" AT_resp\00", align 1
@.str.106 = private unnamed_addr constant [4 x i8] c" IR\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c" IT\00", align 1
@.str.108 = private unnamed_addr constant [16 x i8] c" postedWriteErr\00", align 1
@.str.109 = private unnamed_addr constant [14 x i8] c" cycleTooLong\00", align 1
@.str.110 = private unnamed_addr constant [16 x i8] c" cycle64Seconds\00", align 1
@.str.111 = private unnamed_addr constant [19 x i8] c" cycleInconsistent\00", align 1
@.str.112 = private unnamed_addr constant [15 x i8] c" regAccessFail\00", align 1
@.str.113 = private unnamed_addr constant [20 x i8] c" unrecoverableError\00", align 1
@.str.114 = private unnamed_addr constant [10 x i8] c" busReset\00", align 1
@.str.115 = private unnamed_addr constant [3 x i8] c" ?\00", align 1
@.str.116 = private unnamed_addr constant [6 x i8] c"ATReq\00", align 1
@.str.117 = private unnamed_addr constant [6 x i8] c"ATRsp\00", align 1
@.str.118 = private unnamed_addr constant [6 x i8] c"ARReq\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c"ARRsp\00", align 1
@.str.120 = private unnamed_addr constant [5 x i8] c"IT%u\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"IR%u\00", align 1
@.str.122 = private unnamed_addr constant [44 x i8] c"DMA context %s has stopped, error code: %s\0A\00", align 1
@.str.123 = private unnamed_addr constant [24 x i8] c"removed fw-ohci device\0A\00", align 1
@.str.124 = private unnamed_addr constant [23 x i8] c"pci_save_state failed\0A\00", align 1
@.str.125 = private unnamed_addr constant [36 x i8] c"pci_set_power_state failed with %d\0A\00", align 1
@.str.126 = private unnamed_addr constant [26 x i8] c"pci_enable_device failed\0A\00", align 1
@.str.127 = private unnamed_addr constant [14 x i8] c"firewire_ohci\00", align 1
@llvm.used = appending global [17 x i8*] [i8* bitcast (%struct.kernel_param* @__param_quirks to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_quirkstype237, i32 0, i32 0), i8* getelementptr inbounds ([243 x i8], [243 x i8]* @__UNIQUE_ID_quirks238, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_debug to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_debugtype239, i32 0, i32 0), i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__UNIQUE_ID_debug240, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_remote_dma to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_remote_dmatype241, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__UNIQUE_ID_remote_dma242, i32 0, i32 0), i8* bitcast (void ()* @fw_ohci_cleanup to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_fw_ohci_init274 to i8*), i8* bitcast (void ()** @__exitcall_fw_ohci_cleanup to i8*), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__UNIQUE_ID_author275, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__UNIQUE_ID_description276, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__UNIQUE_ID_file277, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_license278, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_alias279, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @fw_ohci_cleanup() #0 section ".exit.text" !dbg !4614 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @fw_ohci_pci_driver) #11, !dbg !4615
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @selfid_workqueue, align 8, !dbg !4616
  call void @destroy_workqueue(%struct.workqueue_struct* %0) #11, !dbg !4617
  ret void, !dbg !4618
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: noredzone
declare dso_local void @destroy_workqueue(%struct.workqueue_struct*) #1

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @fw_ohci_init() #0 section ".init.text" !dbg !4619 {
entry:
  %retval = alloca i32, align 4
  %call = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.127, i64 0, i64 0), i32 8, i32 0) #11, !dbg !4622
  store %struct.workqueue_struct* %call, %struct.workqueue_struct** @selfid_workqueue, align 8, !dbg !4623
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @selfid_workqueue, align 8, !dbg !4624
  %tobool = icmp ne %struct.workqueue_struct* %0, null, !dbg !4624
  br i1 %tobool, label %if.end, label %if.then, !dbg !4626

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !4627
  br label %return, !dbg !4627

if.end:                                           ; preds = %entry
  %call1 = call i32 @__pci_register_driver(%struct.pci_driver* @fw_ohci_pci_driver, %struct.module* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.127, i64 0, i64 0)) #11, !dbg !4628
  store i32 %call1, i32* %retval, align 4, !dbg !4629
  br label %return, !dbg !4629

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !4630
  ret i32 %1, !dbg !4630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_probe(%struct.pci_dev* %dev, %struct.pci_device_id* %ent) #2 !dbg !4564 {
entry:
  %w.addr.i877 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i877, metadata !4631, metadata !DIExpression()), !dbg !4636
  %res.i878 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i878, metadata !4638, metadata !DIExpression()), !dbg !4639
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !4631, metadata !DIExpression()), !dbg !4640
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !4638, metadata !DIExpression()), !dbg !4642
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4643, metadata !DIExpression()), !dbg !4649
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %bus_options = alloca i32, align 4
  %max_receive = alloca i32, align 4
  %link_speed = alloca i32, align 4
  %version = alloca i32, align 4
  %guid = alloca i64, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %size = alloca i64, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral19 = alloca %struct.atomic64_t, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !4652, metadata !DIExpression()), !dbg !4653
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !4654, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !4656, metadata !DIExpression()), !dbg !4657
  call void @llvm.dbg.declare(metadata i32* %bus_options, metadata !4658, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.declare(metadata i32* %max_receive, metadata !4660, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.declare(metadata i32* %link_speed, metadata !4662, metadata !DIExpression()), !dbg !4663
  call void @llvm.dbg.declare(metadata i32* %version, metadata !4664, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.declare(metadata i64* %guid, metadata !4666, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4668, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4670, metadata !DIExpression()), !dbg !4671
  call void @llvm.dbg.declare(metadata i64* %size, metadata !4672, metadata !DIExpression()), !dbg !4673
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4674
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 7, !dbg !4676
  %1 = load i16, i16* %vendor, align 4, !dbg !4676
  %conv = zext i16 %1 to i32, !dbg !4674
  %cmp = icmp eq i32 %conv, 4541, !dbg !4677
  br i1 %cmp, label %if.then, label %if.end, !dbg !4678

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4679
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !4679
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #12, !dbg !4679
  store i32 -38, i32* %retval, align 4, !dbg !4681
  br label %return, !dbg !4681

if.end:                                           ; preds = %entry
  %call = call i8* @kzalloc(i64 4264, i32 3264) #11, !dbg !4682
  %3 = bitcast i8* %call to %struct.fw_ohci*, !dbg !4682
  store %struct.fw_ohci* %3, %struct.fw_ohci** %ohci, align 8, !dbg !4683
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4684
  %cmp3 = icmp eq %struct.fw_ohci* %4, null, !dbg !4686
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !4687

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %err, align 4, !dbg !4688
  br label %fail, !dbg !4690

if.end6:                                          ; preds = %if.end
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4691
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %5, i32 0, i32 0, !dbg !4692
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4693
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !4694
  call void @fw_card_initialize(%struct.fw_card* %card, %struct.fw_card_driver* @ohci_driver, %struct.device* %dev7) #11, !dbg !4695
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4696
  call void @pmac_ohci_on(%struct.pci_dev* %7) #11, !dbg !4697
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4698
  %call8 = call i32 @pci_enable_device(%struct.pci_dev* %8) #11, !dbg !4699
  store i32 %call8, i32* %err, align 4, !dbg !4700
  %9 = load i32, i32* %err, align 4, !dbg !4701
  %tobool = icmp ne i32 %9, 0, !dbg !4701
  br i1 %tobool, label %if.then9, label %if.end11, !dbg !4703

if.then9:                                         ; preds = %if.end6
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4704
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !4704
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev10, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !4704
  br label %fail_free, !dbg !4706

if.end11:                                         ; preds = %if.end6
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4707
  call void @pci_set_master(%struct.pci_dev* %11) #11, !dbg !4708
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4709
  %call12 = call i32 @pci_write_config_dword(%struct.pci_dev* %12, i32 64, i32 0) #11, !dbg !4710
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4711
  %14 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4712
  %15 = bitcast %struct.fw_ohci* %14 to i8*, !dbg !4712
  call void @pci_set_drvdata(%struct.pci_dev* %13, i8* %15) #11, !dbg !4713
  br label %do.body, !dbg !4714

do.body:                                          ; preds = %if.end11
  %16 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4715
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %16, i32 0, i32 13, !dbg !4715
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4716
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !4717
  %rlock.i = bitcast %union.anon.4* %18 to %struct.raw_spinlock*, !dbg !4717
  %19 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4715
  %lock14 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %19, i32 0, i32 13, !dbg !4715
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !4715
  %rlock = bitcast %union.anon.4* %20 to %struct.raw_spinlock*, !dbg !4715
  %21 = bitcast %struct.spinlock* %lock14 to i8*, !dbg !4715
  %22 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !4715
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 1 %22, i64 0, i1 false), !dbg !4715
  br label %do.end, !dbg !4715

do.end:                                           ; preds = %do.body
  br label %do.body15, !dbg !4718

do.body15:                                        ; preds = %do.end
  %23 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4719
  %phy_reg_mutex = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %23, i32 0, i32 14, !dbg !4719
  call void @__mutex_init(%struct.mutex* %phy_reg_mutex, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), %struct.lock_class_key* @pci_probe.__key) #11, !dbg !4719
  br label %do.end16, !dbg !4719

do.end16:                                         ; preds = %do.body15
  br label %do.body17, !dbg !4721

do.body17:                                        ; preds = %do.end16
  %24 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4722
  %bus_reset_work = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %24, i32 0, i32 37, !dbg !4722
  call void @__init_work(%struct.work_struct* %bus_reset_work, i32 0) #11, !dbg !4722
  %25 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4722
  %bus_reset_work18 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %25, i32 0, i32 37, !dbg !4722
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %bus_reset_work18, i32 0, i32 0, !dbg !4722
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral19, i32 0, i32 0, !dbg !4722
  store i64 68719476704, i64* %counter, align 8, !dbg !4722
  %26 = bitcast %struct.atomic64_t* %data to i8*, !dbg !4722
  %27 = bitcast %struct.atomic64_t* %.compoundliteral19 to i8*, !dbg !4722
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 8, i1 false), !dbg !4722
  %28 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4722
  %bus_reset_work20 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %28, i32 0, i32 37, !dbg !4722
  %entry21 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %bus_reset_work20, i32 0, i32 1, !dbg !4722
  call void @INIT_LIST_HEAD(%struct.list_head* %entry21) #11, !dbg !4722
  %29 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4722
  %bus_reset_work22 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %29, i32 0, i32 37, !dbg !4722
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %bus_reset_work22, i32 0, i32 2, !dbg !4722
  store void (%struct.work_struct*)* @bus_reset_work, void (%struct.work_struct*)** %func, align 8, !dbg !4722
  br label %do.end23, !dbg !4722

do.end23:                                         ; preds = %do.body17
  %30 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4724
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 44, !dbg !4724
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !4724
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 3, !dbg !4724
  %31 = load i64, i64* %flags, align 8, !dbg !4724
  %and = and i64 %31, 512, !dbg !4726
  %tobool24 = icmp ne i64 %and, 0, !dbg !4726
  br i1 %tobool24, label %lor.lhs.false, label %if.then44, !dbg !4727

lor.lhs.false:                                    ; preds = %do.end23
  %32 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4728
  %resource25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 44, !dbg !4728
  %arrayidx26 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource25, i64 0, i64 0, !dbg !4728
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx26, i32 0, i32 0, !dbg !4728
  %33 = load i64, i64* %start, align 8, !dbg !4728
  %cmp27 = icmp eq i64 %33, 0, !dbg !4728
  br i1 %cmp27, label %land.lhs.true, label %cond.false, !dbg !4728

land.lhs.true:                                    ; preds = %lor.lhs.false
  %34 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4728
  %resource29 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 44, !dbg !4728
  %arrayidx30 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource29, i64 0, i64 0, !dbg !4728
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx30, i32 0, i32 1, !dbg !4728
  %35 = load i64, i64* %end, align 8, !dbg !4728
  %36 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4728
  %resource31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 44, !dbg !4728
  %arrayidx32 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource31, i64 0, i64 0, !dbg !4728
  %start33 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx32, i32 0, i32 0, !dbg !4728
  %37 = load i64, i64* %start33, align 8, !dbg !4728
  %cmp34 = icmp eq i64 %35, %37, !dbg !4728
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !4728

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !4728

cond.false:                                       ; preds = %land.lhs.true, %lor.lhs.false
  %38 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4728
  %resource36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 44, !dbg !4728
  %arrayidx37 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource36, i64 0, i64 0, !dbg !4728
  %end38 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx37, i32 0, i32 1, !dbg !4728
  %39 = load i64, i64* %end38, align 8, !dbg !4728
  %40 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4728
  %resource39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 44, !dbg !4728
  %arrayidx40 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource39, i64 0, i64 0, !dbg !4728
  %start41 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx40, i32 0, i32 0, !dbg !4728
  %41 = load i64, i64* %start41, align 8, !dbg !4728
  %sub = sub i64 %39, %41, !dbg !4728
  %add = add i64 %sub, 1, !dbg !4728
  br label %cond.end, !dbg !4728

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !4728
  %cmp42 = icmp ult i64 %cond, 2048, !dbg !4729
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !4730

if.then44:                                        ; preds = %cond.end, %do.end23
  %42 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4731
  %card45 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %42, i32 0, i32 0, !dbg !4731
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card45, i32 0, i32 1, !dbg !4731
  %43 = load %struct.device*, %struct.device** %device, align 8, !dbg !4731
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %43, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !4731
  store i32 -6, i32* %err, align 4, !dbg !4733
  br label %fail_disable, !dbg !4734

if.end46:                                         ; preds = %cond.end
  %44 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4735
  %call47 = call i32 @pci_request_region(%struct.pci_dev* %44, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @ohci_driver_name, i64 0, i64 0)) #11, !dbg !4736
  store i32 %call47, i32* %err, align 4, !dbg !4737
  %45 = load i32, i32* %err, align 4, !dbg !4738
  %tobool48 = icmp ne i32 %45, 0, !dbg !4738
  br i1 %tobool48, label %if.then49, label %if.end52, !dbg !4740

if.then49:                                        ; preds = %if.end46
  %46 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4741
  %card50 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %46, i32 0, i32 0, !dbg !4741
  %device51 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card50, i32 0, i32 1, !dbg !4741
  %47 = load %struct.device*, %struct.device** %device51, align 8, !dbg !4741
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %47, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !4741
  br label %fail_disable, !dbg !4743

if.end52:                                         ; preds = %if.end46
  %48 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4744
  %call53 = call i8* @pci_iomap(%struct.pci_dev* %48, i32 0, i64 2048) #11, !dbg !4745
  %49 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4746
  %registers = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %49, i32 0, i32 1, !dbg !4747
  store i8* %call53, i8** %registers, align 8, !dbg !4748
  %50 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4749
  %registers54 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %50, i32 0, i32 1, !dbg !4751
  %51 = load i8*, i8** %registers54, align 8, !dbg !4751
  %cmp55 = icmp eq i8* %51, null, !dbg !4752
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !4753

if.then57:                                        ; preds = %if.end52
  %52 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4754
  %card58 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %52, i32 0, i32 0, !dbg !4754
  %device59 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card58, i32 0, i32 1, !dbg !4754
  %53 = load %struct.device*, %struct.device** %device59, align 8, !dbg !4754
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %53, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !4754
  store i32 -6, i32* %err, align 4, !dbg !4756
  br label %fail_iomem, !dbg !4757

if.end60:                                         ; preds = %if.end52
  store i32 0, i32* %i, align 4, !dbg !4758
  br label %for.cond, !dbg !4760

for.cond:                                         ; preds = %for.inc, %if.end60
  %54 = load i32, i32* %i, align 4, !dbg !4761
  %conv61 = sext i32 %54 to i64, !dbg !4761
  %cmp62 = icmp ult i64 %conv61, 16, !dbg !4763
  br i1 %cmp62, label %for.body, label %for.end, !dbg !4764

for.body:                                         ; preds = %for.cond
  %55 = load i32, i32* %i, align 4, !dbg !4765
  %idxprom = sext i32 %55 to i64, !dbg !4767
  %arrayidx64 = getelementptr [16 x %struct.anon.69], [16 x %struct.anon.69]* @ohci_quirks, i64 0, i64 %idxprom, !dbg !4767
  %vendor65 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx64, i32 0, i32 0, !dbg !4768
  %56 = load i16, i16* %vendor65, align 8, !dbg !4768
  %conv66 = zext i16 %56 to i32, !dbg !4767
  %57 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4769
  %vendor67 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %57, i32 0, i32 7, !dbg !4770
  %58 = load i16, i16* %vendor67, align 4, !dbg !4770
  %conv68 = zext i16 %58 to i32, !dbg !4769
  %cmp69 = icmp eq i32 %conv66, %conv68, !dbg !4771
  br i1 %cmp69, label %land.lhs.true71, label %if.end107, !dbg !4772

land.lhs.true71:                                  ; preds = %for.body
  %59 = load i32, i32* %i, align 4, !dbg !4773
  %idxprom72 = sext i32 %59 to i64, !dbg !4774
  %arrayidx73 = getelementptr [16 x %struct.anon.69], [16 x %struct.anon.69]* @ohci_quirks, i64 0, i64 %idxprom72, !dbg !4774
  %device74 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx73, i32 0, i32 1, !dbg !4775
  %60 = load i16, i16* %device74, align 2, !dbg !4775
  %conv75 = zext i16 %60 to i32, !dbg !4774
  %cmp76 = icmp eq i32 %conv75, 65535, !dbg !4776
  br i1 %cmp76, label %land.lhs.true87, label %lor.lhs.false78, !dbg !4777

lor.lhs.false78:                                  ; preds = %land.lhs.true71
  %61 = load i32, i32* %i, align 4, !dbg !4778
  %idxprom79 = sext i32 %61 to i64, !dbg !4779
  %arrayidx80 = getelementptr [16 x %struct.anon.69], [16 x %struct.anon.69]* @ohci_quirks, i64 0, i64 %idxprom79, !dbg !4779
  %device81 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx80, i32 0, i32 1, !dbg !4780
  %62 = load i16, i16* %device81, align 2, !dbg !4780
  %conv82 = zext i16 %62 to i32, !dbg !4779
  %63 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4781
  %device83 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %63, i32 0, i32 8, !dbg !4782
  %64 = load i16, i16* %device83, align 2, !dbg !4782
  %conv84 = zext i16 %64 to i32, !dbg !4781
  %cmp85 = icmp eq i32 %conv82, %conv84, !dbg !4783
  br i1 %cmp85, label %land.lhs.true87, label %if.end107, !dbg !4784

land.lhs.true87:                                  ; preds = %lor.lhs.false78, %land.lhs.true71
  %65 = load i32, i32* %i, align 4, !dbg !4785
  %idxprom88 = sext i32 %65 to i64, !dbg !4786
  %arrayidx89 = getelementptr [16 x %struct.anon.69], [16 x %struct.anon.69]* @ohci_quirks, i64 0, i64 %idxprom88, !dbg !4786
  %revision = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx89, i32 0, i32 2, !dbg !4787
  %66 = load i16, i16* %revision, align 4, !dbg !4787
  %conv90 = zext i16 %66 to i32, !dbg !4786
  %cmp91 = icmp eq i32 %conv90, 65535, !dbg !4788
  br i1 %cmp91, label %if.then102, label %lor.lhs.false93, !dbg !4789

lor.lhs.false93:                                  ; preds = %land.lhs.true87
  %67 = load i32, i32* %i, align 4, !dbg !4790
  %idxprom94 = sext i32 %67 to i64, !dbg !4791
  %arrayidx95 = getelementptr [16 x %struct.anon.69], [16 x %struct.anon.69]* @ohci_quirks, i64 0, i64 %idxprom94, !dbg !4791
  %revision96 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx95, i32 0, i32 2, !dbg !4792
  %68 = load i16, i16* %revision96, align 4, !dbg !4792
  %conv97 = zext i16 %68 to i32, !dbg !4791
  %69 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4793
  %revision98 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %69, i32 0, i32 12, !dbg !4794
  %70 = load i8, i8* %revision98, align 8, !dbg !4794
  %conv99 = zext i8 %70 to i32, !dbg !4793
  %cmp100 = icmp sge i32 %conv97, %conv99, !dbg !4795
  br i1 %cmp100, label %if.then102, label %if.end107, !dbg !4796

if.then102:                                       ; preds = %lor.lhs.false93, %land.lhs.true87
  %71 = load i32, i32* %i, align 4, !dbg !4797
  %idxprom103 = sext i32 %71 to i64, !dbg !4799
  %arrayidx104 = getelementptr [16 x %struct.anon.69], [16 x %struct.anon.69]* @ohci_quirks, i64 0, i64 %idxprom103, !dbg !4799
  %flags105 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx104, i32 0, i32 3, !dbg !4800
  %72 = load i16, i16* %flags105, align 2, !dbg !4800
  %conv106 = zext i16 %72 to i32, !dbg !4799
  %73 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4801
  %quirks = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %73, i32 0, i32 5, !dbg !4802
  store i32 %conv106, i32* %quirks, align 4, !dbg !4803
  br label %for.end, !dbg !4804

if.end107:                                        ; preds = %lor.lhs.false93, %lor.lhs.false78, %for.body
  br label %for.inc, !dbg !4805

for.inc:                                          ; preds = %if.end107
  %74 = load i32, i32* %i, align 4, !dbg !4806
  %inc = add i32 %74, 1, !dbg !4806
  store i32 %inc, i32* %i, align 4, !dbg !4806
  br label %for.cond, !dbg !4807, !llvm.loop !4808

for.end:                                          ; preds = %if.then102, %for.cond
  %75 = load i32, i32* @param_quirks, align 4, !dbg !4810
  %tobool108 = icmp ne i32 %75, 0, !dbg !4810
  br i1 %tobool108, label %if.then109, label %if.end111, !dbg !4812

if.then109:                                       ; preds = %for.end
  %76 = load i32, i32* @param_quirks, align 4, !dbg !4813
  %77 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4814
  %quirks110 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %77, i32 0, i32 5, !dbg !4815
  store i32 %76, i32* %quirks110, align 4, !dbg !4816
  br label %if.end111, !dbg !4814

if.end111:                                        ; preds = %if.then109, %for.end
  br label %do.body112, !dbg !4817

do.body112:                                       ; preds = %if.end111
  br label %do.end113, !dbg !4818

do.end113:                                        ; preds = %do.body112
  br label %do.body114, !dbg !4820

do.body114:                                       ; preds = %do.end113
  br label %do.end115, !dbg !4821

do.end115:                                        ; preds = %do.body114
  %78 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4823
  %card116 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %78, i32 0, i32 0, !dbg !4824
  %device117 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card116, i32 0, i32 1, !dbg !4825
  %79 = load %struct.device*, %struct.device** %device117, align 8, !dbg !4825
  %80 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4826
  %misc_buffer_bus = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %80, i32 0, i32 16, !dbg !4827
  %call118 = call i8* @dma_alloc_coherent(%struct.device* %79, i64 4096, i64* %misc_buffer_bus, i32 3264) #11, !dbg !4828
  %81 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4829
  %misc_buffer = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %81, i32 0, i32 15, !dbg !4830
  store i8* %call118, i8** %misc_buffer, align 8, !dbg !4831
  %82 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4832
  %misc_buffer119 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %82, i32 0, i32 15, !dbg !4834
  %83 = load i8*, i8** %misc_buffer119, align 8, !dbg !4834
  %tobool120 = icmp ne i8* %83, null, !dbg !4832
  br i1 %tobool120, label %if.end122, label %if.then121, !dbg !4835

if.then121:                                       ; preds = %do.end115
  store i32 -12, i32* %err, align 4, !dbg !4836
  br label %fail_iounmap, !dbg !4838

if.end122:                                        ; preds = %do.end115
  %84 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4839
  %ar_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %84, i32 0, i32 17, !dbg !4840
  %85 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4841
  %call123 = call i32 @ar_context_init(%struct.ar_context* %ar_request_ctx, %struct.fw_ohci* %85, i32 0, i32 448) #11, !dbg !4842
  store i32 %call123, i32* %err, align 4, !dbg !4843
  %86 = load i32, i32* %err, align 4, !dbg !4844
  %cmp124 = icmp slt i32 %86, 0, !dbg !4846
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !4847

if.then126:                                       ; preds = %if.end122
  br label %fail_misc_buf, !dbg !4848

if.end127:                                        ; preds = %if.end122
  %87 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4849
  %ar_response_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %87, i32 0, i32 18, !dbg !4850
  %88 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4851
  %call128 = call i32 @ar_context_init(%struct.ar_context* %ar_response_ctx, %struct.fw_ohci* %88, i32 1024, i32 480) #11, !dbg !4852
  store i32 %call128, i32* %err, align 4, !dbg !4853
  %89 = load i32, i32* %err, align 4, !dbg !4854
  %cmp129 = icmp slt i32 %89, 0, !dbg !4856
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !4857

if.then131:                                       ; preds = %if.end127
  br label %fail_arreq_ctx, !dbg !4858

if.end132:                                        ; preds = %if.end127
  %90 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4859
  %at_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %90, i32 0, i32 19, !dbg !4860
  %91 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4861
  %call133 = call i32 @context_init(%struct.context* %at_request_ctx, %struct.fw_ohci* %91, i32 384, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)* @handle_at_packet) #11, !dbg !4862
  store i32 %call133, i32* %err, align 4, !dbg !4863
  %92 = load i32, i32* %err, align 4, !dbg !4864
  %cmp134 = icmp slt i32 %92, 0, !dbg !4866
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !4867

if.then136:                                       ; preds = %if.end132
  br label %fail_arrsp_ctx, !dbg !4868

if.end137:                                        ; preds = %if.end132
  %93 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4869
  %at_response_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %93, i32 0, i32 20, !dbg !4870
  %94 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4871
  %call138 = call i32 @context_init(%struct.context* %at_response_ctx, %struct.fw_ohci* %94, i32 416, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)* @handle_at_packet) #11, !dbg !4872
  store i32 %call138, i32* %err, align 4, !dbg !4873
  %95 = load i32, i32* %err, align 4, !dbg !4874
  %cmp139 = icmp slt i32 %95, 0, !dbg !4876
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !4877

if.then141:                                       ; preds = %if.end137
  br label %fail_atreq_ctx, !dbg !4878

if.end142:                                        ; preds = %if.end137
  %96 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4879
  call void @reg_write(%struct.fw_ohci* %96, i32 168, i32 -1) #11, !dbg !4880
  %97 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4881
  %ir_context_channels = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %97, i32 0, i32 24, !dbg !4882
  store i64 -1, i64* %ir_context_channels, align 8, !dbg !4883
  %98 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4884
  %call143 = call i32 @reg_read(%struct.fw_ohci* %98, i32 168) #11, !dbg !4885
  %99 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4886
  %ir_context_support = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %99, i32 0, i32 25, !dbg !4887
  store i32 %call143, i32* %ir_context_support, align 8, !dbg !4888
  %100 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4889
  call void @reg_write(%struct.fw_ohci* %100, i32 172, i32 -1) #11, !dbg !4890
  %101 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4891
  %ir_context_support144 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %101, i32 0, i32 25, !dbg !4892
  %102 = load i32, i32* %ir_context_support144, align 8, !dbg !4892
  %103 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4893
  %ir_context_mask = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %103, i32 0, i32 26, !dbg !4894
  store i32 %102, i32* %ir_context_mask, align 4, !dbg !4895
  %104 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask145 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %104, i32 0, i32 26, !dbg !4896
  %105 = load i32, i32* %ir_context_mask145, align 4, !dbg !4896
  %106 = call i1 @llvm.is.constant.i32(i32 %105), !dbg !4896
  br i1 %106, label %cond.true146, label %cond.false462, !dbg !4896

cond.true146:                                     ; preds = %if.end142
  %107 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask147 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %107, i32 0, i32 26, !dbg !4896
  %108 = load i32, i32* %ir_context_mask147, align 4, !dbg !4896
  %conv148 = zext i32 %108 to i64, !dbg !4896
  %and149 = and i64 %conv148, 1, !dbg !4896
  %tobool150 = icmp ne i64 %and149, 0, !dbg !4896
  %lnot = xor i1 %tobool150, true, !dbg !4896
  %lnot151 = xor i1 %lnot, true, !dbg !4896
  %lnot.ext = zext i1 %lnot151 to i32, !dbg !4896
  %109 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask152 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %109, i32 0, i32 26, !dbg !4896
  %110 = load i32, i32* %ir_context_mask152, align 4, !dbg !4896
  %conv153 = zext i32 %110 to i64, !dbg !4896
  %and154 = and i64 %conv153, 2, !dbg !4896
  %tobool155 = icmp ne i64 %and154, 0, !dbg !4896
  %lnot156 = xor i1 %tobool155, true, !dbg !4896
  %lnot158 = xor i1 %lnot156, true, !dbg !4896
  %lnot.ext159 = zext i1 %lnot158 to i32, !dbg !4896
  %add160 = add i32 %lnot.ext, %lnot.ext159, !dbg !4896
  %111 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask161 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %111, i32 0, i32 26, !dbg !4896
  %112 = load i32, i32* %ir_context_mask161, align 4, !dbg !4896
  %conv162 = zext i32 %112 to i64, !dbg !4896
  %and163 = and i64 %conv162, 4, !dbg !4896
  %tobool164 = icmp ne i64 %and163, 0, !dbg !4896
  %lnot165 = xor i1 %tobool164, true, !dbg !4896
  %lnot167 = xor i1 %lnot165, true, !dbg !4896
  %lnot.ext168 = zext i1 %lnot167 to i32, !dbg !4896
  %add169 = add i32 %add160, %lnot.ext168, !dbg !4896
  %113 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask170 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %113, i32 0, i32 26, !dbg !4896
  %114 = load i32, i32* %ir_context_mask170, align 4, !dbg !4896
  %conv171 = zext i32 %114 to i64, !dbg !4896
  %and172 = and i64 %conv171, 8, !dbg !4896
  %tobool173 = icmp ne i64 %and172, 0, !dbg !4896
  %lnot174 = xor i1 %tobool173, true, !dbg !4896
  %lnot176 = xor i1 %lnot174, true, !dbg !4896
  %lnot.ext177 = zext i1 %lnot176 to i32, !dbg !4896
  %add178 = add i32 %add169, %lnot.ext177, !dbg !4896
  %115 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask179 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %115, i32 0, i32 26, !dbg !4896
  %116 = load i32, i32* %ir_context_mask179, align 4, !dbg !4896
  %conv180 = zext i32 %116 to i64, !dbg !4896
  %and181 = and i64 %conv180, 16, !dbg !4896
  %tobool182 = icmp ne i64 %and181, 0, !dbg !4896
  %lnot183 = xor i1 %tobool182, true, !dbg !4896
  %lnot185 = xor i1 %lnot183, true, !dbg !4896
  %lnot.ext186 = zext i1 %lnot185 to i32, !dbg !4896
  %add187 = add i32 %add178, %lnot.ext186, !dbg !4896
  %117 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask188 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %117, i32 0, i32 26, !dbg !4896
  %118 = load i32, i32* %ir_context_mask188, align 4, !dbg !4896
  %conv189 = zext i32 %118 to i64, !dbg !4896
  %and190 = and i64 %conv189, 32, !dbg !4896
  %tobool191 = icmp ne i64 %and190, 0, !dbg !4896
  %lnot192 = xor i1 %tobool191, true, !dbg !4896
  %lnot194 = xor i1 %lnot192, true, !dbg !4896
  %lnot.ext195 = zext i1 %lnot194 to i32, !dbg !4896
  %add196 = add i32 %add187, %lnot.ext195, !dbg !4896
  %119 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask197 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %119, i32 0, i32 26, !dbg !4896
  %120 = load i32, i32* %ir_context_mask197, align 4, !dbg !4896
  %conv198 = zext i32 %120 to i64, !dbg !4896
  %and199 = and i64 %conv198, 64, !dbg !4896
  %tobool200 = icmp ne i64 %and199, 0, !dbg !4896
  %lnot201 = xor i1 %tobool200, true, !dbg !4896
  %lnot203 = xor i1 %lnot201, true, !dbg !4896
  %lnot.ext204 = zext i1 %lnot203 to i32, !dbg !4896
  %add205 = add i32 %add196, %lnot.ext204, !dbg !4896
  %121 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask206 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %121, i32 0, i32 26, !dbg !4896
  %122 = load i32, i32* %ir_context_mask206, align 4, !dbg !4896
  %conv207 = zext i32 %122 to i64, !dbg !4896
  %and208 = and i64 %conv207, 128, !dbg !4896
  %tobool209 = icmp ne i64 %and208, 0, !dbg !4896
  %lnot210 = xor i1 %tobool209, true, !dbg !4896
  %lnot212 = xor i1 %lnot210, true, !dbg !4896
  %lnot.ext213 = zext i1 %lnot212 to i32, !dbg !4896
  %add214 = add i32 %add205, %lnot.ext213, !dbg !4896
  %123 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask215 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %123, i32 0, i32 26, !dbg !4896
  %124 = load i32, i32* %ir_context_mask215, align 4, !dbg !4896
  %shr = lshr i32 %124, 8, !dbg !4896
  %conv216 = zext i32 %shr to i64, !dbg !4896
  %and217 = and i64 %conv216, 1, !dbg !4896
  %tobool218 = icmp ne i64 %and217, 0, !dbg !4896
  %lnot219 = xor i1 %tobool218, true, !dbg !4896
  %lnot221 = xor i1 %lnot219, true, !dbg !4896
  %lnot.ext222 = zext i1 %lnot221 to i32, !dbg !4896
  %125 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask223 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %125, i32 0, i32 26, !dbg !4896
  %126 = load i32, i32* %ir_context_mask223, align 4, !dbg !4896
  %shr224 = lshr i32 %126, 8, !dbg !4896
  %conv225 = zext i32 %shr224 to i64, !dbg !4896
  %and226 = and i64 %conv225, 2, !dbg !4896
  %tobool227 = icmp ne i64 %and226, 0, !dbg !4896
  %lnot228 = xor i1 %tobool227, true, !dbg !4896
  %lnot230 = xor i1 %lnot228, true, !dbg !4896
  %lnot.ext231 = zext i1 %lnot230 to i32, !dbg !4896
  %add232 = add i32 %lnot.ext222, %lnot.ext231, !dbg !4896
  %127 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask233 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %127, i32 0, i32 26, !dbg !4896
  %128 = load i32, i32* %ir_context_mask233, align 4, !dbg !4896
  %shr234 = lshr i32 %128, 8, !dbg !4896
  %conv235 = zext i32 %shr234 to i64, !dbg !4896
  %and236 = and i64 %conv235, 4, !dbg !4896
  %tobool237 = icmp ne i64 %and236, 0, !dbg !4896
  %lnot238 = xor i1 %tobool237, true, !dbg !4896
  %lnot240 = xor i1 %lnot238, true, !dbg !4896
  %lnot.ext241 = zext i1 %lnot240 to i32, !dbg !4896
  %add242 = add i32 %add232, %lnot.ext241, !dbg !4896
  %129 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask243 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %129, i32 0, i32 26, !dbg !4896
  %130 = load i32, i32* %ir_context_mask243, align 4, !dbg !4896
  %shr244 = lshr i32 %130, 8, !dbg !4896
  %conv245 = zext i32 %shr244 to i64, !dbg !4896
  %and246 = and i64 %conv245, 8, !dbg !4896
  %tobool247 = icmp ne i64 %and246, 0, !dbg !4896
  %lnot248 = xor i1 %tobool247, true, !dbg !4896
  %lnot250 = xor i1 %lnot248, true, !dbg !4896
  %lnot.ext251 = zext i1 %lnot250 to i32, !dbg !4896
  %add252 = add i32 %add242, %lnot.ext251, !dbg !4896
  %131 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask253 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %131, i32 0, i32 26, !dbg !4896
  %132 = load i32, i32* %ir_context_mask253, align 4, !dbg !4896
  %shr254 = lshr i32 %132, 8, !dbg !4896
  %conv255 = zext i32 %shr254 to i64, !dbg !4896
  %and256 = and i64 %conv255, 16, !dbg !4896
  %tobool257 = icmp ne i64 %and256, 0, !dbg !4896
  %lnot258 = xor i1 %tobool257, true, !dbg !4896
  %lnot260 = xor i1 %lnot258, true, !dbg !4896
  %lnot.ext261 = zext i1 %lnot260 to i32, !dbg !4896
  %add262 = add i32 %add252, %lnot.ext261, !dbg !4896
  %133 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask263 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %133, i32 0, i32 26, !dbg !4896
  %134 = load i32, i32* %ir_context_mask263, align 4, !dbg !4896
  %shr264 = lshr i32 %134, 8, !dbg !4896
  %conv265 = zext i32 %shr264 to i64, !dbg !4896
  %and266 = and i64 %conv265, 32, !dbg !4896
  %tobool267 = icmp ne i64 %and266, 0, !dbg !4896
  %lnot268 = xor i1 %tobool267, true, !dbg !4896
  %lnot270 = xor i1 %lnot268, true, !dbg !4896
  %lnot.ext271 = zext i1 %lnot270 to i32, !dbg !4896
  %add272 = add i32 %add262, %lnot.ext271, !dbg !4896
  %135 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask273 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %135, i32 0, i32 26, !dbg !4896
  %136 = load i32, i32* %ir_context_mask273, align 4, !dbg !4896
  %shr274 = lshr i32 %136, 8, !dbg !4896
  %conv275 = zext i32 %shr274 to i64, !dbg !4896
  %and276 = and i64 %conv275, 64, !dbg !4896
  %tobool277 = icmp ne i64 %and276, 0, !dbg !4896
  %lnot278 = xor i1 %tobool277, true, !dbg !4896
  %lnot280 = xor i1 %lnot278, true, !dbg !4896
  %lnot.ext281 = zext i1 %lnot280 to i32, !dbg !4896
  %add282 = add i32 %add272, %lnot.ext281, !dbg !4896
  %137 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask283 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %137, i32 0, i32 26, !dbg !4896
  %138 = load i32, i32* %ir_context_mask283, align 4, !dbg !4896
  %shr284 = lshr i32 %138, 8, !dbg !4896
  %conv285 = zext i32 %shr284 to i64, !dbg !4896
  %and286 = and i64 %conv285, 128, !dbg !4896
  %tobool287 = icmp ne i64 %and286, 0, !dbg !4896
  %lnot288 = xor i1 %tobool287, true, !dbg !4896
  %lnot290 = xor i1 %lnot288, true, !dbg !4896
  %lnot.ext291 = zext i1 %lnot290 to i32, !dbg !4896
  %add292 = add i32 %add282, %lnot.ext291, !dbg !4896
  %add293 = add i32 %add214, %add292, !dbg !4896
  %139 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask294 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %139, i32 0, i32 26, !dbg !4896
  %140 = load i32, i32* %ir_context_mask294, align 4, !dbg !4896
  %shr295 = lshr i32 %140, 16, !dbg !4896
  %conv296 = zext i32 %shr295 to i64, !dbg !4896
  %and297 = and i64 %conv296, 1, !dbg !4896
  %tobool298 = icmp ne i64 %and297, 0, !dbg !4896
  %lnot299 = xor i1 %tobool298, true, !dbg !4896
  %lnot301 = xor i1 %lnot299, true, !dbg !4896
  %lnot.ext302 = zext i1 %lnot301 to i32, !dbg !4896
  %141 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask303 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %141, i32 0, i32 26, !dbg !4896
  %142 = load i32, i32* %ir_context_mask303, align 4, !dbg !4896
  %shr304 = lshr i32 %142, 16, !dbg !4896
  %conv305 = zext i32 %shr304 to i64, !dbg !4896
  %and306 = and i64 %conv305, 2, !dbg !4896
  %tobool307 = icmp ne i64 %and306, 0, !dbg !4896
  %lnot308 = xor i1 %tobool307, true, !dbg !4896
  %lnot310 = xor i1 %lnot308, true, !dbg !4896
  %lnot.ext311 = zext i1 %lnot310 to i32, !dbg !4896
  %add312 = add i32 %lnot.ext302, %lnot.ext311, !dbg !4896
  %143 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask313 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %143, i32 0, i32 26, !dbg !4896
  %144 = load i32, i32* %ir_context_mask313, align 4, !dbg !4896
  %shr314 = lshr i32 %144, 16, !dbg !4896
  %conv315 = zext i32 %shr314 to i64, !dbg !4896
  %and316 = and i64 %conv315, 4, !dbg !4896
  %tobool317 = icmp ne i64 %and316, 0, !dbg !4896
  %lnot318 = xor i1 %tobool317, true, !dbg !4896
  %lnot320 = xor i1 %lnot318, true, !dbg !4896
  %lnot.ext321 = zext i1 %lnot320 to i32, !dbg !4896
  %add322 = add i32 %add312, %lnot.ext321, !dbg !4896
  %145 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask323 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %145, i32 0, i32 26, !dbg !4896
  %146 = load i32, i32* %ir_context_mask323, align 4, !dbg !4896
  %shr324 = lshr i32 %146, 16, !dbg !4896
  %conv325 = zext i32 %shr324 to i64, !dbg !4896
  %and326 = and i64 %conv325, 8, !dbg !4896
  %tobool327 = icmp ne i64 %and326, 0, !dbg !4896
  %lnot328 = xor i1 %tobool327, true, !dbg !4896
  %lnot330 = xor i1 %lnot328, true, !dbg !4896
  %lnot.ext331 = zext i1 %lnot330 to i32, !dbg !4896
  %add332 = add i32 %add322, %lnot.ext331, !dbg !4896
  %147 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask333 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %147, i32 0, i32 26, !dbg !4896
  %148 = load i32, i32* %ir_context_mask333, align 4, !dbg !4896
  %shr334 = lshr i32 %148, 16, !dbg !4896
  %conv335 = zext i32 %shr334 to i64, !dbg !4896
  %and336 = and i64 %conv335, 16, !dbg !4896
  %tobool337 = icmp ne i64 %and336, 0, !dbg !4896
  %lnot338 = xor i1 %tobool337, true, !dbg !4896
  %lnot340 = xor i1 %lnot338, true, !dbg !4896
  %lnot.ext341 = zext i1 %lnot340 to i32, !dbg !4896
  %add342 = add i32 %add332, %lnot.ext341, !dbg !4896
  %149 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask343 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %149, i32 0, i32 26, !dbg !4896
  %150 = load i32, i32* %ir_context_mask343, align 4, !dbg !4896
  %shr344 = lshr i32 %150, 16, !dbg !4896
  %conv345 = zext i32 %shr344 to i64, !dbg !4896
  %and346 = and i64 %conv345, 32, !dbg !4896
  %tobool347 = icmp ne i64 %and346, 0, !dbg !4896
  %lnot348 = xor i1 %tobool347, true, !dbg !4896
  %lnot350 = xor i1 %lnot348, true, !dbg !4896
  %lnot.ext351 = zext i1 %lnot350 to i32, !dbg !4896
  %add352 = add i32 %add342, %lnot.ext351, !dbg !4896
  %151 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask353 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %151, i32 0, i32 26, !dbg !4896
  %152 = load i32, i32* %ir_context_mask353, align 4, !dbg !4896
  %shr354 = lshr i32 %152, 16, !dbg !4896
  %conv355 = zext i32 %shr354 to i64, !dbg !4896
  %and356 = and i64 %conv355, 64, !dbg !4896
  %tobool357 = icmp ne i64 %and356, 0, !dbg !4896
  %lnot358 = xor i1 %tobool357, true, !dbg !4896
  %lnot360 = xor i1 %lnot358, true, !dbg !4896
  %lnot.ext361 = zext i1 %lnot360 to i32, !dbg !4896
  %add362 = add i32 %add352, %lnot.ext361, !dbg !4896
  %153 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask363 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %153, i32 0, i32 26, !dbg !4896
  %154 = load i32, i32* %ir_context_mask363, align 4, !dbg !4896
  %shr364 = lshr i32 %154, 16, !dbg !4896
  %conv365 = zext i32 %shr364 to i64, !dbg !4896
  %and366 = and i64 %conv365, 128, !dbg !4896
  %tobool367 = icmp ne i64 %and366, 0, !dbg !4896
  %lnot368 = xor i1 %tobool367, true, !dbg !4896
  %lnot370 = xor i1 %lnot368, true, !dbg !4896
  %lnot.ext371 = zext i1 %lnot370 to i32, !dbg !4896
  %add372 = add i32 %add362, %lnot.ext371, !dbg !4896
  %155 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask373 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %155, i32 0, i32 26, !dbg !4896
  %156 = load i32, i32* %ir_context_mask373, align 4, !dbg !4896
  %shr374 = lshr i32 %156, 16, !dbg !4896
  %shr375 = lshr i32 %shr374, 8, !dbg !4896
  %conv376 = zext i32 %shr375 to i64, !dbg !4896
  %and377 = and i64 %conv376, 1, !dbg !4896
  %tobool378 = icmp ne i64 %and377, 0, !dbg !4896
  %lnot379 = xor i1 %tobool378, true, !dbg !4896
  %lnot381 = xor i1 %lnot379, true, !dbg !4896
  %lnot.ext382 = zext i1 %lnot381 to i32, !dbg !4896
  %157 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask383 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %157, i32 0, i32 26, !dbg !4896
  %158 = load i32, i32* %ir_context_mask383, align 4, !dbg !4896
  %shr384 = lshr i32 %158, 16, !dbg !4896
  %shr385 = lshr i32 %shr384, 8, !dbg !4896
  %conv386 = zext i32 %shr385 to i64, !dbg !4896
  %and387 = and i64 %conv386, 2, !dbg !4896
  %tobool388 = icmp ne i64 %and387, 0, !dbg !4896
  %lnot389 = xor i1 %tobool388, true, !dbg !4896
  %lnot391 = xor i1 %lnot389, true, !dbg !4896
  %lnot.ext392 = zext i1 %lnot391 to i32, !dbg !4896
  %add393 = add i32 %lnot.ext382, %lnot.ext392, !dbg !4896
  %159 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask394 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %159, i32 0, i32 26, !dbg !4896
  %160 = load i32, i32* %ir_context_mask394, align 4, !dbg !4896
  %shr395 = lshr i32 %160, 16, !dbg !4896
  %shr396 = lshr i32 %shr395, 8, !dbg !4896
  %conv397 = zext i32 %shr396 to i64, !dbg !4896
  %and398 = and i64 %conv397, 4, !dbg !4896
  %tobool399 = icmp ne i64 %and398, 0, !dbg !4896
  %lnot400 = xor i1 %tobool399, true, !dbg !4896
  %lnot402 = xor i1 %lnot400, true, !dbg !4896
  %lnot.ext403 = zext i1 %lnot402 to i32, !dbg !4896
  %add404 = add i32 %add393, %lnot.ext403, !dbg !4896
  %161 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask405 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %161, i32 0, i32 26, !dbg !4896
  %162 = load i32, i32* %ir_context_mask405, align 4, !dbg !4896
  %shr406 = lshr i32 %162, 16, !dbg !4896
  %shr407 = lshr i32 %shr406, 8, !dbg !4896
  %conv408 = zext i32 %shr407 to i64, !dbg !4896
  %and409 = and i64 %conv408, 8, !dbg !4896
  %tobool410 = icmp ne i64 %and409, 0, !dbg !4896
  %lnot411 = xor i1 %tobool410, true, !dbg !4896
  %lnot413 = xor i1 %lnot411, true, !dbg !4896
  %lnot.ext414 = zext i1 %lnot413 to i32, !dbg !4896
  %add415 = add i32 %add404, %lnot.ext414, !dbg !4896
  %163 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask416 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %163, i32 0, i32 26, !dbg !4896
  %164 = load i32, i32* %ir_context_mask416, align 4, !dbg !4896
  %shr417 = lshr i32 %164, 16, !dbg !4896
  %shr418 = lshr i32 %shr417, 8, !dbg !4896
  %conv419 = zext i32 %shr418 to i64, !dbg !4896
  %and420 = and i64 %conv419, 16, !dbg !4896
  %tobool421 = icmp ne i64 %and420, 0, !dbg !4896
  %lnot422 = xor i1 %tobool421, true, !dbg !4896
  %lnot424 = xor i1 %lnot422, true, !dbg !4896
  %lnot.ext425 = zext i1 %lnot424 to i32, !dbg !4896
  %add426 = add i32 %add415, %lnot.ext425, !dbg !4896
  %165 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask427 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %165, i32 0, i32 26, !dbg !4896
  %166 = load i32, i32* %ir_context_mask427, align 4, !dbg !4896
  %shr428 = lshr i32 %166, 16, !dbg !4896
  %shr429 = lshr i32 %shr428, 8, !dbg !4896
  %conv430 = zext i32 %shr429 to i64, !dbg !4896
  %and431 = and i64 %conv430, 32, !dbg !4896
  %tobool432 = icmp ne i64 %and431, 0, !dbg !4896
  %lnot433 = xor i1 %tobool432, true, !dbg !4896
  %lnot435 = xor i1 %lnot433, true, !dbg !4896
  %lnot.ext436 = zext i1 %lnot435 to i32, !dbg !4896
  %add437 = add i32 %add426, %lnot.ext436, !dbg !4896
  %167 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask438 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %167, i32 0, i32 26, !dbg !4896
  %168 = load i32, i32* %ir_context_mask438, align 4, !dbg !4896
  %shr439 = lshr i32 %168, 16, !dbg !4896
  %shr440 = lshr i32 %shr439, 8, !dbg !4896
  %conv441 = zext i32 %shr440 to i64, !dbg !4896
  %and442 = and i64 %conv441, 64, !dbg !4896
  %tobool443 = icmp ne i64 %and442, 0, !dbg !4896
  %lnot444 = xor i1 %tobool443, true, !dbg !4896
  %lnot446 = xor i1 %lnot444, true, !dbg !4896
  %lnot.ext447 = zext i1 %lnot446 to i32, !dbg !4896
  %add448 = add i32 %add437, %lnot.ext447, !dbg !4896
  %169 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask449 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %169, i32 0, i32 26, !dbg !4896
  %170 = load i32, i32* %ir_context_mask449, align 4, !dbg !4896
  %shr450 = lshr i32 %170, 16, !dbg !4896
  %shr451 = lshr i32 %shr450, 8, !dbg !4896
  %conv452 = zext i32 %shr451 to i64, !dbg !4896
  %and453 = and i64 %conv452, 128, !dbg !4896
  %tobool454 = icmp ne i64 %and453, 0, !dbg !4896
  %lnot455 = xor i1 %tobool454, true, !dbg !4896
  %lnot457 = xor i1 %lnot455, true, !dbg !4896
  %lnot.ext458 = zext i1 %lnot457 to i32, !dbg !4896
  %add459 = add i32 %add448, %lnot.ext458, !dbg !4896
  %add460 = add i32 %add372, %add459, !dbg !4896
  %add461 = add i32 %add293, %add460, !dbg !4896
  br label %cond.end465, !dbg !4896

cond.false462:                                    ; preds = %if.end142
  %171 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4896
  %ir_context_mask463 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %171, i32 0, i32 26, !dbg !4896
  %172 = load i32, i32* %ir_context_mask463, align 4, !dbg !4896
  store i32 %172, i32* %w.addr.i, align 4
  %173 = load i32, i32* %w.addr.i, align 4, !dbg !4897
  %174 = call i32 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight32\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntl $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i32 %173) #13, !dbg !4898, !srcloc !4899
  store i32 %174, i32* %res.i, align 4, !dbg !4898
  %175 = load i32, i32* %res.i, align 4, !dbg !4900
  br label %cond.end465, !dbg !4896

cond.end465:                                      ; preds = %cond.false462, %cond.true146
  %cond466 = phi i32 [ %add461, %cond.true146 ], [ %175, %cond.false462 ], !dbg !4896
  %176 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4901
  %n_ir = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %176, i32 0, i32 11, !dbg !4902
  store i32 %cond466, i32* %n_ir, align 4, !dbg !4903
  %177 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4904
  %n_ir467 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %177, i32 0, i32 11, !dbg !4905
  %178 = load i32, i32* %n_ir467, align 4, !dbg !4905
  %conv468 = sext i32 %178 to i64, !dbg !4904
  %mul = mul i64 208, %conv468, !dbg !4906
  store i64 %mul, i64* %size, align 8, !dbg !4907
  %179 = load i64, i64* %size, align 8, !dbg !4908
  %call469 = call i8* @kzalloc(i64 %179, i32 3264) #11, !dbg !4909
  %180 = bitcast i8* %call469 to %struct.iso_context*, !dbg !4909
  %181 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4910
  %ir_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %181, i32 0, i32 27, !dbg !4911
  store %struct.iso_context* %180, %struct.iso_context** %ir_context_list, align 8, !dbg !4912
  %182 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4913
  call void @reg_write(%struct.fw_ohci* %182, i32 152, i32 -1) #11, !dbg !4914
  %183 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4915
  %call470 = call i32 @reg_read(%struct.fw_ohci* %183, i32 152) #11, !dbg !4916
  %184 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4917
  %it_context_support = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %184, i32 0, i32 21, !dbg !4918
  store i32 %call470, i32* %it_context_support, align 8, !dbg !4919
  %185 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4920
  %it_context_support471 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %185, i32 0, i32 21, !dbg !4922
  %186 = load i32, i32* %it_context_support471, align 8, !dbg !4922
  %tobool472 = icmp ne i32 %186, 0, !dbg !4920
  br i1 %tobool472, label %if.end477, label %if.then473, !dbg !4923

if.then473:                                       ; preds = %cond.end465
  %187 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4924
  %card474 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %187, i32 0, i32 0, !dbg !4924
  %device475 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card474, i32 0, i32 1, !dbg !4924
  %188 = load %struct.device*, %struct.device** %device475, align 8, !dbg !4924
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %188, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)) #12, !dbg !4924
  %189 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4926
  %it_context_support476 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %189, i32 0, i32 21, !dbg !4927
  store i32 15, i32* %it_context_support476, align 8, !dbg !4928
  br label %if.end477, !dbg !4929

if.end477:                                        ; preds = %if.then473, %cond.end465
  %190 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4930
  call void @reg_write(%struct.fw_ohci* %190, i32 156, i32 -1) #11, !dbg !4931
  %191 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4932
  %it_context_support478 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %191, i32 0, i32 21, !dbg !4933
  %192 = load i32, i32* %it_context_support478, align 8, !dbg !4933
  %193 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4934
  %it_context_mask = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %193, i32 0, i32 22, !dbg !4935
  store i32 %192, i32* %it_context_mask, align 4, !dbg !4936
  %194 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask479 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %194, i32 0, i32 22, !dbg !4937
  %195 = load i32, i32* %it_context_mask479, align 4, !dbg !4937
  %196 = call i1 @llvm.is.constant.i32(i32 %195), !dbg !4937
  br i1 %196, label %cond.true480, label %cond.false800, !dbg !4937

cond.true480:                                     ; preds = %if.end477
  %197 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask481 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %197, i32 0, i32 22, !dbg !4937
  %198 = load i32, i32* %it_context_mask481, align 4, !dbg !4937
  %conv482 = zext i32 %198 to i64, !dbg !4937
  %and483 = and i64 %conv482, 1, !dbg !4937
  %tobool484 = icmp ne i64 %and483, 0, !dbg !4937
  %lnot485 = xor i1 %tobool484, true, !dbg !4937
  %lnot487 = xor i1 %lnot485, true, !dbg !4937
  %lnot.ext488 = zext i1 %lnot487 to i32, !dbg !4937
  %199 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask489 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %199, i32 0, i32 22, !dbg !4937
  %200 = load i32, i32* %it_context_mask489, align 4, !dbg !4937
  %conv490 = zext i32 %200 to i64, !dbg !4937
  %and491 = and i64 %conv490, 2, !dbg !4937
  %tobool492 = icmp ne i64 %and491, 0, !dbg !4937
  %lnot493 = xor i1 %tobool492, true, !dbg !4937
  %lnot495 = xor i1 %lnot493, true, !dbg !4937
  %lnot.ext496 = zext i1 %lnot495 to i32, !dbg !4937
  %add497 = add i32 %lnot.ext488, %lnot.ext496, !dbg !4937
  %201 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask498 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %201, i32 0, i32 22, !dbg !4937
  %202 = load i32, i32* %it_context_mask498, align 4, !dbg !4937
  %conv499 = zext i32 %202 to i64, !dbg !4937
  %and500 = and i64 %conv499, 4, !dbg !4937
  %tobool501 = icmp ne i64 %and500, 0, !dbg !4937
  %lnot502 = xor i1 %tobool501, true, !dbg !4937
  %lnot504 = xor i1 %lnot502, true, !dbg !4937
  %lnot.ext505 = zext i1 %lnot504 to i32, !dbg !4937
  %add506 = add i32 %add497, %lnot.ext505, !dbg !4937
  %203 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask507 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %203, i32 0, i32 22, !dbg !4937
  %204 = load i32, i32* %it_context_mask507, align 4, !dbg !4937
  %conv508 = zext i32 %204 to i64, !dbg !4937
  %and509 = and i64 %conv508, 8, !dbg !4937
  %tobool510 = icmp ne i64 %and509, 0, !dbg !4937
  %lnot511 = xor i1 %tobool510, true, !dbg !4937
  %lnot513 = xor i1 %lnot511, true, !dbg !4937
  %lnot.ext514 = zext i1 %lnot513 to i32, !dbg !4937
  %add515 = add i32 %add506, %lnot.ext514, !dbg !4937
  %205 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask516 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %205, i32 0, i32 22, !dbg !4937
  %206 = load i32, i32* %it_context_mask516, align 4, !dbg !4937
  %conv517 = zext i32 %206 to i64, !dbg !4937
  %and518 = and i64 %conv517, 16, !dbg !4937
  %tobool519 = icmp ne i64 %and518, 0, !dbg !4937
  %lnot520 = xor i1 %tobool519, true, !dbg !4937
  %lnot522 = xor i1 %lnot520, true, !dbg !4937
  %lnot.ext523 = zext i1 %lnot522 to i32, !dbg !4937
  %add524 = add i32 %add515, %lnot.ext523, !dbg !4937
  %207 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask525 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %207, i32 0, i32 22, !dbg !4937
  %208 = load i32, i32* %it_context_mask525, align 4, !dbg !4937
  %conv526 = zext i32 %208 to i64, !dbg !4937
  %and527 = and i64 %conv526, 32, !dbg !4937
  %tobool528 = icmp ne i64 %and527, 0, !dbg !4937
  %lnot529 = xor i1 %tobool528, true, !dbg !4937
  %lnot531 = xor i1 %lnot529, true, !dbg !4937
  %lnot.ext532 = zext i1 %lnot531 to i32, !dbg !4937
  %add533 = add i32 %add524, %lnot.ext532, !dbg !4937
  %209 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask534 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %209, i32 0, i32 22, !dbg !4937
  %210 = load i32, i32* %it_context_mask534, align 4, !dbg !4937
  %conv535 = zext i32 %210 to i64, !dbg !4937
  %and536 = and i64 %conv535, 64, !dbg !4937
  %tobool537 = icmp ne i64 %and536, 0, !dbg !4937
  %lnot538 = xor i1 %tobool537, true, !dbg !4937
  %lnot540 = xor i1 %lnot538, true, !dbg !4937
  %lnot.ext541 = zext i1 %lnot540 to i32, !dbg !4937
  %add542 = add i32 %add533, %lnot.ext541, !dbg !4937
  %211 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask543 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %211, i32 0, i32 22, !dbg !4937
  %212 = load i32, i32* %it_context_mask543, align 4, !dbg !4937
  %conv544 = zext i32 %212 to i64, !dbg !4937
  %and545 = and i64 %conv544, 128, !dbg !4937
  %tobool546 = icmp ne i64 %and545, 0, !dbg !4937
  %lnot547 = xor i1 %tobool546, true, !dbg !4937
  %lnot549 = xor i1 %lnot547, true, !dbg !4937
  %lnot.ext550 = zext i1 %lnot549 to i32, !dbg !4937
  %add551 = add i32 %add542, %lnot.ext550, !dbg !4937
  %213 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask552 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %213, i32 0, i32 22, !dbg !4937
  %214 = load i32, i32* %it_context_mask552, align 4, !dbg !4937
  %shr553 = lshr i32 %214, 8, !dbg !4937
  %conv554 = zext i32 %shr553 to i64, !dbg !4937
  %and555 = and i64 %conv554, 1, !dbg !4937
  %tobool556 = icmp ne i64 %and555, 0, !dbg !4937
  %lnot557 = xor i1 %tobool556, true, !dbg !4937
  %lnot559 = xor i1 %lnot557, true, !dbg !4937
  %lnot.ext560 = zext i1 %lnot559 to i32, !dbg !4937
  %215 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask561 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %215, i32 0, i32 22, !dbg !4937
  %216 = load i32, i32* %it_context_mask561, align 4, !dbg !4937
  %shr562 = lshr i32 %216, 8, !dbg !4937
  %conv563 = zext i32 %shr562 to i64, !dbg !4937
  %and564 = and i64 %conv563, 2, !dbg !4937
  %tobool565 = icmp ne i64 %and564, 0, !dbg !4937
  %lnot566 = xor i1 %tobool565, true, !dbg !4937
  %lnot568 = xor i1 %lnot566, true, !dbg !4937
  %lnot.ext569 = zext i1 %lnot568 to i32, !dbg !4937
  %add570 = add i32 %lnot.ext560, %lnot.ext569, !dbg !4937
  %217 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask571 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %217, i32 0, i32 22, !dbg !4937
  %218 = load i32, i32* %it_context_mask571, align 4, !dbg !4937
  %shr572 = lshr i32 %218, 8, !dbg !4937
  %conv573 = zext i32 %shr572 to i64, !dbg !4937
  %and574 = and i64 %conv573, 4, !dbg !4937
  %tobool575 = icmp ne i64 %and574, 0, !dbg !4937
  %lnot576 = xor i1 %tobool575, true, !dbg !4937
  %lnot578 = xor i1 %lnot576, true, !dbg !4937
  %lnot.ext579 = zext i1 %lnot578 to i32, !dbg !4937
  %add580 = add i32 %add570, %lnot.ext579, !dbg !4937
  %219 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask581 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %219, i32 0, i32 22, !dbg !4937
  %220 = load i32, i32* %it_context_mask581, align 4, !dbg !4937
  %shr582 = lshr i32 %220, 8, !dbg !4937
  %conv583 = zext i32 %shr582 to i64, !dbg !4937
  %and584 = and i64 %conv583, 8, !dbg !4937
  %tobool585 = icmp ne i64 %and584, 0, !dbg !4937
  %lnot586 = xor i1 %tobool585, true, !dbg !4937
  %lnot588 = xor i1 %lnot586, true, !dbg !4937
  %lnot.ext589 = zext i1 %lnot588 to i32, !dbg !4937
  %add590 = add i32 %add580, %lnot.ext589, !dbg !4937
  %221 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask591 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %221, i32 0, i32 22, !dbg !4937
  %222 = load i32, i32* %it_context_mask591, align 4, !dbg !4937
  %shr592 = lshr i32 %222, 8, !dbg !4937
  %conv593 = zext i32 %shr592 to i64, !dbg !4937
  %and594 = and i64 %conv593, 16, !dbg !4937
  %tobool595 = icmp ne i64 %and594, 0, !dbg !4937
  %lnot596 = xor i1 %tobool595, true, !dbg !4937
  %lnot598 = xor i1 %lnot596, true, !dbg !4937
  %lnot.ext599 = zext i1 %lnot598 to i32, !dbg !4937
  %add600 = add i32 %add590, %lnot.ext599, !dbg !4937
  %223 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask601 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %223, i32 0, i32 22, !dbg !4937
  %224 = load i32, i32* %it_context_mask601, align 4, !dbg !4937
  %shr602 = lshr i32 %224, 8, !dbg !4937
  %conv603 = zext i32 %shr602 to i64, !dbg !4937
  %and604 = and i64 %conv603, 32, !dbg !4937
  %tobool605 = icmp ne i64 %and604, 0, !dbg !4937
  %lnot606 = xor i1 %tobool605, true, !dbg !4937
  %lnot608 = xor i1 %lnot606, true, !dbg !4937
  %lnot.ext609 = zext i1 %lnot608 to i32, !dbg !4937
  %add610 = add i32 %add600, %lnot.ext609, !dbg !4937
  %225 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask611 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %225, i32 0, i32 22, !dbg !4937
  %226 = load i32, i32* %it_context_mask611, align 4, !dbg !4937
  %shr612 = lshr i32 %226, 8, !dbg !4937
  %conv613 = zext i32 %shr612 to i64, !dbg !4937
  %and614 = and i64 %conv613, 64, !dbg !4937
  %tobool615 = icmp ne i64 %and614, 0, !dbg !4937
  %lnot616 = xor i1 %tobool615, true, !dbg !4937
  %lnot618 = xor i1 %lnot616, true, !dbg !4937
  %lnot.ext619 = zext i1 %lnot618 to i32, !dbg !4937
  %add620 = add i32 %add610, %lnot.ext619, !dbg !4937
  %227 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask621 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %227, i32 0, i32 22, !dbg !4937
  %228 = load i32, i32* %it_context_mask621, align 4, !dbg !4937
  %shr622 = lshr i32 %228, 8, !dbg !4937
  %conv623 = zext i32 %shr622 to i64, !dbg !4937
  %and624 = and i64 %conv623, 128, !dbg !4937
  %tobool625 = icmp ne i64 %and624, 0, !dbg !4937
  %lnot626 = xor i1 %tobool625, true, !dbg !4937
  %lnot628 = xor i1 %lnot626, true, !dbg !4937
  %lnot.ext629 = zext i1 %lnot628 to i32, !dbg !4937
  %add630 = add i32 %add620, %lnot.ext629, !dbg !4937
  %add631 = add i32 %add551, %add630, !dbg !4937
  %229 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask632 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %229, i32 0, i32 22, !dbg !4937
  %230 = load i32, i32* %it_context_mask632, align 4, !dbg !4937
  %shr633 = lshr i32 %230, 16, !dbg !4937
  %conv634 = zext i32 %shr633 to i64, !dbg !4937
  %and635 = and i64 %conv634, 1, !dbg !4937
  %tobool636 = icmp ne i64 %and635, 0, !dbg !4937
  %lnot637 = xor i1 %tobool636, true, !dbg !4937
  %lnot639 = xor i1 %lnot637, true, !dbg !4937
  %lnot.ext640 = zext i1 %lnot639 to i32, !dbg !4937
  %231 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask641 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %231, i32 0, i32 22, !dbg !4937
  %232 = load i32, i32* %it_context_mask641, align 4, !dbg !4937
  %shr642 = lshr i32 %232, 16, !dbg !4937
  %conv643 = zext i32 %shr642 to i64, !dbg !4937
  %and644 = and i64 %conv643, 2, !dbg !4937
  %tobool645 = icmp ne i64 %and644, 0, !dbg !4937
  %lnot646 = xor i1 %tobool645, true, !dbg !4937
  %lnot648 = xor i1 %lnot646, true, !dbg !4937
  %lnot.ext649 = zext i1 %lnot648 to i32, !dbg !4937
  %add650 = add i32 %lnot.ext640, %lnot.ext649, !dbg !4937
  %233 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask651 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %233, i32 0, i32 22, !dbg !4937
  %234 = load i32, i32* %it_context_mask651, align 4, !dbg !4937
  %shr652 = lshr i32 %234, 16, !dbg !4937
  %conv653 = zext i32 %shr652 to i64, !dbg !4937
  %and654 = and i64 %conv653, 4, !dbg !4937
  %tobool655 = icmp ne i64 %and654, 0, !dbg !4937
  %lnot656 = xor i1 %tobool655, true, !dbg !4937
  %lnot658 = xor i1 %lnot656, true, !dbg !4937
  %lnot.ext659 = zext i1 %lnot658 to i32, !dbg !4937
  %add660 = add i32 %add650, %lnot.ext659, !dbg !4937
  %235 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask661 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %235, i32 0, i32 22, !dbg !4937
  %236 = load i32, i32* %it_context_mask661, align 4, !dbg !4937
  %shr662 = lshr i32 %236, 16, !dbg !4937
  %conv663 = zext i32 %shr662 to i64, !dbg !4937
  %and664 = and i64 %conv663, 8, !dbg !4937
  %tobool665 = icmp ne i64 %and664, 0, !dbg !4937
  %lnot666 = xor i1 %tobool665, true, !dbg !4937
  %lnot668 = xor i1 %lnot666, true, !dbg !4937
  %lnot.ext669 = zext i1 %lnot668 to i32, !dbg !4937
  %add670 = add i32 %add660, %lnot.ext669, !dbg !4937
  %237 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask671 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %237, i32 0, i32 22, !dbg !4937
  %238 = load i32, i32* %it_context_mask671, align 4, !dbg !4937
  %shr672 = lshr i32 %238, 16, !dbg !4937
  %conv673 = zext i32 %shr672 to i64, !dbg !4937
  %and674 = and i64 %conv673, 16, !dbg !4937
  %tobool675 = icmp ne i64 %and674, 0, !dbg !4937
  %lnot676 = xor i1 %tobool675, true, !dbg !4937
  %lnot678 = xor i1 %lnot676, true, !dbg !4937
  %lnot.ext679 = zext i1 %lnot678 to i32, !dbg !4937
  %add680 = add i32 %add670, %lnot.ext679, !dbg !4937
  %239 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask681 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %239, i32 0, i32 22, !dbg !4937
  %240 = load i32, i32* %it_context_mask681, align 4, !dbg !4937
  %shr682 = lshr i32 %240, 16, !dbg !4937
  %conv683 = zext i32 %shr682 to i64, !dbg !4937
  %and684 = and i64 %conv683, 32, !dbg !4937
  %tobool685 = icmp ne i64 %and684, 0, !dbg !4937
  %lnot686 = xor i1 %tobool685, true, !dbg !4937
  %lnot688 = xor i1 %lnot686, true, !dbg !4937
  %lnot.ext689 = zext i1 %lnot688 to i32, !dbg !4937
  %add690 = add i32 %add680, %lnot.ext689, !dbg !4937
  %241 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask691 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %241, i32 0, i32 22, !dbg !4937
  %242 = load i32, i32* %it_context_mask691, align 4, !dbg !4937
  %shr692 = lshr i32 %242, 16, !dbg !4937
  %conv693 = zext i32 %shr692 to i64, !dbg !4937
  %and694 = and i64 %conv693, 64, !dbg !4937
  %tobool695 = icmp ne i64 %and694, 0, !dbg !4937
  %lnot696 = xor i1 %tobool695, true, !dbg !4937
  %lnot698 = xor i1 %lnot696, true, !dbg !4937
  %lnot.ext699 = zext i1 %lnot698 to i32, !dbg !4937
  %add700 = add i32 %add690, %lnot.ext699, !dbg !4937
  %243 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask701 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %243, i32 0, i32 22, !dbg !4937
  %244 = load i32, i32* %it_context_mask701, align 4, !dbg !4937
  %shr702 = lshr i32 %244, 16, !dbg !4937
  %conv703 = zext i32 %shr702 to i64, !dbg !4937
  %and704 = and i64 %conv703, 128, !dbg !4937
  %tobool705 = icmp ne i64 %and704, 0, !dbg !4937
  %lnot706 = xor i1 %tobool705, true, !dbg !4937
  %lnot708 = xor i1 %lnot706, true, !dbg !4937
  %lnot.ext709 = zext i1 %lnot708 to i32, !dbg !4937
  %add710 = add i32 %add700, %lnot.ext709, !dbg !4937
  %245 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask711 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %245, i32 0, i32 22, !dbg !4937
  %246 = load i32, i32* %it_context_mask711, align 4, !dbg !4937
  %shr712 = lshr i32 %246, 16, !dbg !4937
  %shr713 = lshr i32 %shr712, 8, !dbg !4937
  %conv714 = zext i32 %shr713 to i64, !dbg !4937
  %and715 = and i64 %conv714, 1, !dbg !4937
  %tobool716 = icmp ne i64 %and715, 0, !dbg !4937
  %lnot717 = xor i1 %tobool716, true, !dbg !4937
  %lnot719 = xor i1 %lnot717, true, !dbg !4937
  %lnot.ext720 = zext i1 %lnot719 to i32, !dbg !4937
  %247 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask721 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %247, i32 0, i32 22, !dbg !4937
  %248 = load i32, i32* %it_context_mask721, align 4, !dbg !4937
  %shr722 = lshr i32 %248, 16, !dbg !4937
  %shr723 = lshr i32 %shr722, 8, !dbg !4937
  %conv724 = zext i32 %shr723 to i64, !dbg !4937
  %and725 = and i64 %conv724, 2, !dbg !4937
  %tobool726 = icmp ne i64 %and725, 0, !dbg !4937
  %lnot727 = xor i1 %tobool726, true, !dbg !4937
  %lnot729 = xor i1 %lnot727, true, !dbg !4937
  %lnot.ext730 = zext i1 %lnot729 to i32, !dbg !4937
  %add731 = add i32 %lnot.ext720, %lnot.ext730, !dbg !4937
  %249 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask732 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %249, i32 0, i32 22, !dbg !4937
  %250 = load i32, i32* %it_context_mask732, align 4, !dbg !4937
  %shr733 = lshr i32 %250, 16, !dbg !4937
  %shr734 = lshr i32 %shr733, 8, !dbg !4937
  %conv735 = zext i32 %shr734 to i64, !dbg !4937
  %and736 = and i64 %conv735, 4, !dbg !4937
  %tobool737 = icmp ne i64 %and736, 0, !dbg !4937
  %lnot738 = xor i1 %tobool737, true, !dbg !4937
  %lnot740 = xor i1 %lnot738, true, !dbg !4937
  %lnot.ext741 = zext i1 %lnot740 to i32, !dbg !4937
  %add742 = add i32 %add731, %lnot.ext741, !dbg !4937
  %251 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask743 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %251, i32 0, i32 22, !dbg !4937
  %252 = load i32, i32* %it_context_mask743, align 4, !dbg !4937
  %shr744 = lshr i32 %252, 16, !dbg !4937
  %shr745 = lshr i32 %shr744, 8, !dbg !4937
  %conv746 = zext i32 %shr745 to i64, !dbg !4937
  %and747 = and i64 %conv746, 8, !dbg !4937
  %tobool748 = icmp ne i64 %and747, 0, !dbg !4937
  %lnot749 = xor i1 %tobool748, true, !dbg !4937
  %lnot751 = xor i1 %lnot749, true, !dbg !4937
  %lnot.ext752 = zext i1 %lnot751 to i32, !dbg !4937
  %add753 = add i32 %add742, %lnot.ext752, !dbg !4937
  %253 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask754 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %253, i32 0, i32 22, !dbg !4937
  %254 = load i32, i32* %it_context_mask754, align 4, !dbg !4937
  %shr755 = lshr i32 %254, 16, !dbg !4937
  %shr756 = lshr i32 %shr755, 8, !dbg !4937
  %conv757 = zext i32 %shr756 to i64, !dbg !4937
  %and758 = and i64 %conv757, 16, !dbg !4937
  %tobool759 = icmp ne i64 %and758, 0, !dbg !4937
  %lnot760 = xor i1 %tobool759, true, !dbg !4937
  %lnot762 = xor i1 %lnot760, true, !dbg !4937
  %lnot.ext763 = zext i1 %lnot762 to i32, !dbg !4937
  %add764 = add i32 %add753, %lnot.ext763, !dbg !4937
  %255 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask765 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %255, i32 0, i32 22, !dbg !4937
  %256 = load i32, i32* %it_context_mask765, align 4, !dbg !4937
  %shr766 = lshr i32 %256, 16, !dbg !4937
  %shr767 = lshr i32 %shr766, 8, !dbg !4937
  %conv768 = zext i32 %shr767 to i64, !dbg !4937
  %and769 = and i64 %conv768, 32, !dbg !4937
  %tobool770 = icmp ne i64 %and769, 0, !dbg !4937
  %lnot771 = xor i1 %tobool770, true, !dbg !4937
  %lnot773 = xor i1 %lnot771, true, !dbg !4937
  %lnot.ext774 = zext i1 %lnot773 to i32, !dbg !4937
  %add775 = add i32 %add764, %lnot.ext774, !dbg !4937
  %257 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask776 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %257, i32 0, i32 22, !dbg !4937
  %258 = load i32, i32* %it_context_mask776, align 4, !dbg !4937
  %shr777 = lshr i32 %258, 16, !dbg !4937
  %shr778 = lshr i32 %shr777, 8, !dbg !4937
  %conv779 = zext i32 %shr778 to i64, !dbg !4937
  %and780 = and i64 %conv779, 64, !dbg !4937
  %tobool781 = icmp ne i64 %and780, 0, !dbg !4937
  %lnot782 = xor i1 %tobool781, true, !dbg !4937
  %lnot784 = xor i1 %lnot782, true, !dbg !4937
  %lnot.ext785 = zext i1 %lnot784 to i32, !dbg !4937
  %add786 = add i32 %add775, %lnot.ext785, !dbg !4937
  %259 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask787 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %259, i32 0, i32 22, !dbg !4937
  %260 = load i32, i32* %it_context_mask787, align 4, !dbg !4937
  %shr788 = lshr i32 %260, 16, !dbg !4937
  %shr789 = lshr i32 %shr788, 8, !dbg !4937
  %conv790 = zext i32 %shr789 to i64, !dbg !4937
  %and791 = and i64 %conv790, 128, !dbg !4937
  %tobool792 = icmp ne i64 %and791, 0, !dbg !4937
  %lnot793 = xor i1 %tobool792, true, !dbg !4937
  %lnot795 = xor i1 %lnot793, true, !dbg !4937
  %lnot.ext796 = zext i1 %lnot795 to i32, !dbg !4937
  %add797 = add i32 %add786, %lnot.ext796, !dbg !4937
  %add798 = add i32 %add710, %add797, !dbg !4937
  %add799 = add i32 %add631, %add798, !dbg !4937
  br label %cond.end803, !dbg !4937

cond.false800:                                    ; preds = %if.end477
  %261 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4937
  %it_context_mask801 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %261, i32 0, i32 22, !dbg !4937
  %262 = load i32, i32* %it_context_mask801, align 4, !dbg !4937
  store i32 %262, i32* %w.addr.i877, align 4
  %263 = load i32, i32* %w.addr.i877, align 4, !dbg !4938
  %264 = call i32 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight32\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntl $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i32 %263) #13, !dbg !4939, !srcloc !4899
  store i32 %264, i32* %res.i878, align 4, !dbg !4939
  %265 = load i32, i32* %res.i878, align 4, !dbg !4940
  br label %cond.end803, !dbg !4937

cond.end803:                                      ; preds = %cond.false800, %cond.true480
  %cond804 = phi i32 [ %add799, %cond.true480 ], [ %265, %cond.false800 ], !dbg !4937
  %266 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4941
  %n_it = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %266, i32 0, i32 12, !dbg !4942
  store i32 %cond804, i32* %n_it, align 8, !dbg !4943
  %267 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4944
  %n_it805 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %267, i32 0, i32 12, !dbg !4945
  %268 = load i32, i32* %n_it805, align 8, !dbg !4945
  %conv806 = sext i32 %268 to i64, !dbg !4944
  %mul807 = mul i64 208, %conv806, !dbg !4946
  store i64 %mul807, i64* %size, align 8, !dbg !4947
  %269 = load i64, i64* %size, align 8, !dbg !4948
  %call808 = call i8* @kzalloc(i64 %269, i32 3264) #11, !dbg !4949
  %270 = bitcast i8* %call808 to %struct.iso_context*, !dbg !4949
  %271 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4950
  %it_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %271, i32 0, i32 23, !dbg !4951
  store %struct.iso_context* %270, %struct.iso_context** %it_context_list, align 8, !dbg !4952
  %272 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4953
  %it_context_list809 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %272, i32 0, i32 23, !dbg !4955
  %273 = load %struct.iso_context*, %struct.iso_context** %it_context_list809, align 8, !dbg !4955
  %cmp810 = icmp eq %struct.iso_context* %273, null, !dbg !4956
  br i1 %cmp810, label %if.then816, label %lor.lhs.false812, !dbg !4957

lor.lhs.false812:                                 ; preds = %cond.end803
  %274 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4958
  %ir_context_list813 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %274, i32 0, i32 27, !dbg !4959
  %275 = load %struct.iso_context*, %struct.iso_context** %ir_context_list813, align 8, !dbg !4959
  %cmp814 = icmp eq %struct.iso_context* %275, null, !dbg !4960
  br i1 %cmp814, label %if.then816, label %if.end817, !dbg !4961

if.then816:                                       ; preds = %lor.lhs.false812, %cond.end803
  store i32 -12, i32* %err, align 4, !dbg !4962
  br label %fail_contexts, !dbg !4964

if.end817:                                        ; preds = %lor.lhs.false812
  %276 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4965
  %misc_buffer818 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %276, i32 0, i32 15, !dbg !4966
  %277 = load i8*, i8** %misc_buffer818, align 8, !dbg !4966
  %add.ptr = getelementptr i8, i8* %277, i64 2048, !dbg !4967
  %278 = bitcast i8* %add.ptr to i32*, !dbg !4965
  %279 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4968
  %self_id = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %279, i32 0, i32 35, !dbg !4969
  store i32* %278, i32** %self_id, align 8, !dbg !4970
  %280 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4971
  %misc_buffer_bus819 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %280, i32 0, i32 16, !dbg !4972
  %281 = load i64, i64* %misc_buffer_bus819, align 8, !dbg !4972
  %add820 = add i64 %281, 2048, !dbg !4973
  %282 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4974
  %self_id_bus = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %282, i32 0, i32 36, !dbg !4975
  store i64 %add820, i64* %self_id_bus, align 8, !dbg !4976
  %283 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4977
  %call821 = call i32 @reg_read(%struct.fw_ohci* %283, i32 32) #11, !dbg !4978
  store i32 %call821, i32* %bus_options, align 4, !dbg !4979
  %284 = load i32, i32* %bus_options, align 4, !dbg !4980
  %shr822 = lshr i32 %284, 12, !dbg !4981
  %and823 = and i32 %shr822, 15, !dbg !4982
  store i32 %and823, i32* %max_receive, align 4, !dbg !4983
  %285 = load i32, i32* %bus_options, align 4, !dbg !4984
  %and824 = and i32 %285, 7, !dbg !4985
  store i32 %and824, i32* %link_speed, align 4, !dbg !4986
  %286 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4987
  %call825 = call i32 @reg_read(%struct.fw_ohci* %286, i32 36) #11, !dbg !4988
  %conv826 = zext i32 %call825 to i64, !dbg !4989
  %shl = shl i64 %conv826, 32, !dbg !4990
  %287 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4991
  %call827 = call i32 @reg_read(%struct.fw_ohci* %287, i32 40) #11, !dbg !4992
  %conv828 = zext i32 %call827 to i64, !dbg !4992
  %or = or i64 %shl, %conv828, !dbg !4993
  store i64 %or, i64* %guid, align 8, !dbg !4994
  %288 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !4995
  %quirks829 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %288, i32 0, i32 5, !dbg !4997
  %289 = load i32, i32* %quirks829, align 4, !dbg !4997
  %and830 = and i32 %289, 16, !dbg !4998
  %tobool831 = icmp ne i32 %and830, 0, !dbg !4998
  br i1 %tobool831, label %if.end834, label %if.then832, !dbg !4999

if.then832:                                       ; preds = %if.end817
  %290 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5000
  %call833 = call i32 @pci_enable_msi(%struct.pci_dev* %290) #11, !dbg !5001
  br label %if.end834, !dbg !5001

if.end834:                                        ; preds = %if.then832, %if.end817
  %291 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5002
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %291, i32 0, i32 43, !dbg !5004
  %292 = load i32, i32* %irq, align 4, !dbg !5004
  %293 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5005
  %call835 = call zeroext i1 @pci_dev_msi_enabled(%struct.pci_dev* %293) #11, !dbg !5006
  %294 = zext i1 %call835 to i64, !dbg !5006
  %cond837 = select i1 %call835, i32 0, i32 128, !dbg !5006
  %conv838 = sext i32 %cond837 to i64, !dbg !5006
  %295 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5007
  %296 = bitcast %struct.fw_ohci* %295 to i8*, !dbg !5007
  %call839 = call i32 @request_irq(i32 %292, i32 (i32, i8*)* @irq_handler, i64 %conv838, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @ohci_driver_name, i64 0, i64 0), i8* %296) #11, !dbg !5008
  %tobool840 = icmp ne i32 %call839, 0, !dbg !5008
  br i1 %tobool840, label %if.then841, label %if.end845, !dbg !5009

if.then841:                                       ; preds = %if.end834
  %297 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5010
  %card842 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %297, i32 0, i32 0, !dbg !5010
  %device843 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card842, i32 0, i32 1, !dbg !5010
  %298 = load %struct.device*, %struct.device** %device843, align 8, !dbg !5010
  %299 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5010
  %irq844 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %299, i32 0, i32 43, !dbg !5010
  %300 = load i32, i32* %irq844, align 4, !dbg !5010
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %298, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i32 %300) #12, !dbg !5010
  store i32 -5, i32* %err, align 4, !dbg !5012
  br label %fail_msi, !dbg !5013

if.end845:                                        ; preds = %if.end834
  %301 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5014
  %card846 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %301, i32 0, i32 0, !dbg !5015
  %302 = load i32, i32* %max_receive, align 4, !dbg !5016
  %303 = load i32, i32* %link_speed, align 4, !dbg !5017
  %304 = load i64, i64* %guid, align 8, !dbg !5018
  %call847 = call i32 @fw_card_add(%struct.fw_card* %card846, i32 %302, i32 %303, i64 %304) #11, !dbg !5019
  store i32 %call847, i32* %err, align 4, !dbg !5020
  %305 = load i32, i32* %err, align 4, !dbg !5021
  %tobool848 = icmp ne i32 %305, 0, !dbg !5021
  br i1 %tobool848, label %if.then849, label %if.end850, !dbg !5023

if.then849:                                       ; preds = %if.end845
  br label %fail_irq, !dbg !5024

if.end850:                                        ; preds = %if.end845
  %306 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5025
  %call851 = call i32 @reg_read(%struct.fw_ohci* %306, i32 0) #11, !dbg !5026
  %and852 = and i32 %call851, 16711935, !dbg !5027
  store i32 %and852, i32* %version, align 4, !dbg !5028
  %307 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5029
  %card853 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %307, i32 0, i32 0, !dbg !5029
  %device854 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card853, i32 0, i32 1, !dbg !5029
  %308 = load %struct.device*, %struct.device** %device854, align 8, !dbg !5029
  %309 = load i32, i32* %version, align 4, !dbg !5029
  %shr855 = lshr i32 %309, 16, !dbg !5029
  %310 = load i32, i32* %version, align 4, !dbg !5029
  %and856 = and i32 %310, 255, !dbg !5029
  %311 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5029
  %card857 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %311, i32 0, i32 0, !dbg !5029
  %index = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card857, i32 0, i32 25, !dbg !5029
  %312 = load i32, i32* %index, align 4, !dbg !5029
  %313 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5029
  %n_ir858 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %313, i32 0, i32 11, !dbg !5029
  %314 = load i32, i32* %n_ir858, align 4, !dbg !5029
  %315 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5029
  %n_it859 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %315, i32 0, i32 12, !dbg !5029
  %316 = load i32, i32* %n_it859, align 8, !dbg !5029
  %317 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5029
  %quirks860 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %317, i32 0, i32 5, !dbg !5029
  %318 = load i32, i32* %quirks860, align 4, !dbg !5029
  %319 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5029
  %call861 = call i32 @reg_read(%struct.fw_ohci* %319, i32 288) #11, !dbg !5029
  %tobool862 = icmp ne i32 %call861, 0, !dbg !5029
  %320 = zext i1 %tobool862 to i64, !dbg !5029
  %cond863 = select i1 %tobool862, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !5029
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %308, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.8, i64 0, i64 0), i32 %shr855, i32 %and856, i32 %312, i32 %314, i32 %316, i32 %318, i8* %cond863) #12, !dbg !5029
  store i32 0, i32* %retval, align 4, !dbg !5030
  br label %return, !dbg !5030

fail_irq:                                         ; preds = %if.then849
  call void @llvm.dbg.label(metadata !5031), !dbg !5032
  %321 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5033
  %irq864 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %321, i32 0, i32 43, !dbg !5034
  %322 = load i32, i32* %irq864, align 4, !dbg !5034
  %323 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5035
  %324 = bitcast %struct.fw_ohci* %323 to i8*, !dbg !5035
  %call865 = call i8* @free_irq(i32 %322, i8* %324) #11, !dbg !5036
  br label %fail_msi, !dbg !5036

fail_msi:                                         ; preds = %fail_irq, %if.then841
  call void @llvm.dbg.label(metadata !5037), !dbg !5038
  %325 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5039
  call void @pci_disable_msi(%struct.pci_dev* %325) #11, !dbg !5040
  br label %fail_contexts, !dbg !5040

fail_contexts:                                    ; preds = %fail_msi, %if.then816
  call void @llvm.dbg.label(metadata !5041), !dbg !5042
  %326 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5043
  %ir_context_list866 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %326, i32 0, i32 27, !dbg !5044
  %327 = load %struct.iso_context*, %struct.iso_context** %ir_context_list866, align 8, !dbg !5044
  %328 = bitcast %struct.iso_context* %327 to i8*, !dbg !5043
  call void @kfree(i8* %328) #11, !dbg !5045
  %329 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5046
  %it_context_list867 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %329, i32 0, i32 23, !dbg !5047
  %330 = load %struct.iso_context*, %struct.iso_context** %it_context_list867, align 8, !dbg !5047
  %331 = bitcast %struct.iso_context* %330 to i8*, !dbg !5046
  call void @kfree(i8* %331) #11, !dbg !5048
  %332 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5049
  %at_response_ctx868 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %332, i32 0, i32 20, !dbg !5050
  call void @context_release(%struct.context* %at_response_ctx868) #11, !dbg !5051
  br label %fail_atreq_ctx, !dbg !5051

fail_atreq_ctx:                                   ; preds = %fail_contexts, %if.then141
  call void @llvm.dbg.label(metadata !5052), !dbg !5053
  %333 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5054
  %at_request_ctx869 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %333, i32 0, i32 19, !dbg !5055
  call void @context_release(%struct.context* %at_request_ctx869) #11, !dbg !5056
  br label %fail_arrsp_ctx, !dbg !5056

fail_arrsp_ctx:                                   ; preds = %fail_atreq_ctx, %if.then136
  call void @llvm.dbg.label(metadata !5057), !dbg !5058
  %334 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5059
  %ar_response_ctx870 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %334, i32 0, i32 18, !dbg !5060
  call void @ar_context_release(%struct.ar_context* %ar_response_ctx870) #11, !dbg !5061
  br label %fail_arreq_ctx, !dbg !5061

fail_arreq_ctx:                                   ; preds = %fail_arrsp_ctx, %if.then131
  call void @llvm.dbg.label(metadata !5062), !dbg !5063
  %335 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5064
  %ar_request_ctx871 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %335, i32 0, i32 17, !dbg !5065
  call void @ar_context_release(%struct.ar_context* %ar_request_ctx871) #11, !dbg !5066
  br label %fail_misc_buf, !dbg !5066

fail_misc_buf:                                    ; preds = %fail_arreq_ctx, %if.then126
  call void @llvm.dbg.label(metadata !5067), !dbg !5068
  %336 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5069
  %card872 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %336, i32 0, i32 0, !dbg !5070
  %device873 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card872, i32 0, i32 1, !dbg !5071
  %337 = load %struct.device*, %struct.device** %device873, align 8, !dbg !5071
  %338 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5072
  %misc_buffer874 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %338, i32 0, i32 15, !dbg !5073
  %339 = load i8*, i8** %misc_buffer874, align 8, !dbg !5073
  %340 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5074
  %misc_buffer_bus875 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %340, i32 0, i32 16, !dbg !5075
  %341 = load i64, i64* %misc_buffer_bus875, align 8, !dbg !5075
  call void @dma_free_coherent(%struct.device* %337, i64 4096, i8* %339, i64 %341) #11, !dbg !5076
  br label %fail_iounmap, !dbg !5076

fail_iounmap:                                     ; preds = %fail_misc_buf, %if.then121
  call void @llvm.dbg.label(metadata !5077), !dbg !5078
  %342 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5079
  %343 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5080
  %registers876 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %343, i32 0, i32 1, !dbg !5081
  %344 = load i8*, i8** %registers876, align 8, !dbg !5081
  call void @pci_iounmap(%struct.pci_dev* %342, i8* %344) #11, !dbg !5082
  br label %fail_iomem, !dbg !5082

fail_iomem:                                       ; preds = %fail_iounmap, %if.then57
  call void @llvm.dbg.label(metadata !5083), !dbg !5084
  %345 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5085
  call void @pci_release_region(%struct.pci_dev* %345, i32 0) #11, !dbg !5086
  br label %fail_disable, !dbg !5086

fail_disable:                                     ; preds = %fail_iomem, %if.then49, %if.then44
  call void @llvm.dbg.label(metadata !5087), !dbg !5088
  %346 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5089
  call void @pci_disable_device(%struct.pci_dev* %346) #11, !dbg !5090
  br label %fail_free, !dbg !5090

fail_free:                                        ; preds = %fail_disable, %if.then9
  call void @llvm.dbg.label(metadata !5091), !dbg !5092
  %347 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5093
  %348 = bitcast %struct.fw_ohci* %347 to i8*, !dbg !5093
  call void @kfree(i8* %348) #11, !dbg !5094
  %349 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5095
  call void @pmac_ohci_off(%struct.pci_dev* %349) #11, !dbg !5096
  br label %fail, !dbg !5096

fail:                                             ; preds = %fail_free, %if.then5
  call void @llvm.dbg.label(metadata !5097), !dbg !5098
  %350 = load i32, i32* %err, align 4, !dbg !5099
  store i32 %350, i32* %retval, align 4, !dbg !5100
  br label %return, !dbg !5100

return:                                           ; preds = %fail, %if.end850, %if.then
  %351 = load i32, i32* %retval, align 4, !dbg !5101
  ret i32 %351, !dbg !5101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_remove(%struct.pci_dev* %dev) #2 !dbg !5102 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5103, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !5105, metadata !DIExpression()), !dbg !5106
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5107
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #11, !dbg !5108
  %1 = bitcast i8* %call to %struct.fw_ohci*, !dbg !5108
  store %struct.fw_ohci* %1, %struct.fw_ohci** %ohci, align 8, !dbg !5106
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5109
  %call1 = call i32 @reg_read(%struct.fw_ohci* %2, i32 80) #11, !dbg !5111
  %and = and i32 %call1, 524288, !dbg !5112
  %tobool = icmp ne i32 %and, 0, !dbg !5112
  br i1 %tobool, label %if.then, label %if.end, !dbg !5113

if.then:                                          ; preds = %entry
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5114
  call void @reg_write(%struct.fw_ohci* %3, i32 140, i32 -1) #11, !dbg !5116
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5117
  call void @flush_writes(%struct.fw_ohci* %4) #11, !dbg !5118
  br label %if.end, !dbg !5119

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5120
  %bus_reset_work = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %5, i32 0, i32 37, !dbg !5121
  %call2 = call zeroext i1 @cancel_work_sync(%struct.work_struct* %bus_reset_work) #11, !dbg !5122
  %6 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5123
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %6, i32 0, i32 0, !dbg !5124
  call void @fw_core_remove_card(%struct.fw_card* %card) #11, !dbg !5125
  %7 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5126
  %call3 = call i32 @software_reset(%struct.fw_ohci* %7) #11, !dbg !5127
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5128
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 43, !dbg !5129
  %9 = load i32, i32* %irq, align 4, !dbg !5129
  %10 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5130
  %11 = bitcast %struct.fw_ohci* %10 to i8*, !dbg !5130
  %call4 = call i8* @free_irq(i32 %9, i8* %11) #11, !dbg !5131
  %12 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5132
  %next_config_rom = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %12, i32 0, i32 32, !dbg !5134
  %13 = load i32*, i32** %next_config_rom, align 8, !dbg !5134
  %tobool5 = icmp ne i32* %13, null, !dbg !5132
  br i1 %tobool5, label %land.lhs.true, label %if.end10, !dbg !5135

land.lhs.true:                                    ; preds = %if.end
  %14 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5136
  %next_config_rom6 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %14, i32 0, i32 32, !dbg !5137
  %15 = load i32*, i32** %next_config_rom6, align 8, !dbg !5137
  %16 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5138
  %config_rom = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %16, i32 0, i32 30, !dbg !5139
  %17 = load i32*, i32** %config_rom, align 8, !dbg !5139
  %cmp = icmp ne i32* %15, %17, !dbg !5140
  br i1 %cmp, label %if.then7, label %if.end10, !dbg !5141

if.then7:                                         ; preds = %land.lhs.true
  %18 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5142
  %card8 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %18, i32 0, i32 0, !dbg !5143
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card8, i32 0, i32 1, !dbg !5144
  %19 = load %struct.device*, %struct.device** %device, align 8, !dbg !5144
  %20 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5145
  %next_config_rom9 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %20, i32 0, i32 32, !dbg !5146
  %21 = load i32*, i32** %next_config_rom9, align 8, !dbg !5146
  %22 = bitcast i32* %21 to i8*, !dbg !5145
  %23 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5147
  %next_config_rom_bus = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %23, i32 0, i32 33, !dbg !5148
  %24 = load i64, i64* %next_config_rom_bus, align 8, !dbg !5148
  call void @dma_free_coherent(%struct.device* %19, i64 1024, i8* %22, i64 %24) #11, !dbg !5149
  br label %if.end10, !dbg !5149

if.end10:                                         ; preds = %if.then7, %land.lhs.true, %if.end
  %25 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5150
  %config_rom11 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %25, i32 0, i32 30, !dbg !5152
  %26 = load i32*, i32** %config_rom11, align 8, !dbg !5152
  %tobool12 = icmp ne i32* %26, null, !dbg !5150
  br i1 %tobool12, label %if.then13, label %if.end17, !dbg !5153

if.then13:                                        ; preds = %if.end10
  %27 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5154
  %card14 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %27, i32 0, i32 0, !dbg !5155
  %device15 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card14, i32 0, i32 1, !dbg !5156
  %28 = load %struct.device*, %struct.device** %device15, align 8, !dbg !5156
  %29 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5157
  %config_rom16 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %29, i32 0, i32 30, !dbg !5158
  %30 = load i32*, i32** %config_rom16, align 8, !dbg !5158
  %31 = bitcast i32* %30 to i8*, !dbg !5157
  %32 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5159
  %config_rom_bus = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %32, i32 0, i32 31, !dbg !5160
  %33 = load i64, i64* %config_rom_bus, align 8, !dbg !5160
  call void @dma_free_coherent(%struct.device* %28, i64 1024, i8* %31, i64 %33) #11, !dbg !5161
  br label %if.end17, !dbg !5161

if.end17:                                         ; preds = %if.then13, %if.end10
  %34 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5162
  %ar_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %34, i32 0, i32 17, !dbg !5163
  call void @ar_context_release(%struct.ar_context* %ar_request_ctx) #11, !dbg !5164
  %35 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5165
  %ar_response_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %35, i32 0, i32 18, !dbg !5166
  call void @ar_context_release(%struct.ar_context* %ar_response_ctx) #11, !dbg !5167
  %36 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5168
  %card18 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %36, i32 0, i32 0, !dbg !5169
  %device19 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card18, i32 0, i32 1, !dbg !5170
  %37 = load %struct.device*, %struct.device** %device19, align 8, !dbg !5170
  %38 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5171
  %misc_buffer = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %38, i32 0, i32 15, !dbg !5172
  %39 = load i8*, i8** %misc_buffer, align 8, !dbg !5172
  %40 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5173
  %misc_buffer_bus = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %40, i32 0, i32 16, !dbg !5174
  %41 = load i64, i64* %misc_buffer_bus, align 8, !dbg !5174
  call void @dma_free_coherent(%struct.device* %37, i64 4096, i8* %39, i64 %41) #11, !dbg !5175
  %42 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5176
  %at_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %42, i32 0, i32 19, !dbg !5177
  call void @context_release(%struct.context* %at_request_ctx) #11, !dbg !5178
  %43 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5179
  %at_response_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %43, i32 0, i32 20, !dbg !5180
  call void @context_release(%struct.context* %at_response_ctx) #11, !dbg !5181
  %44 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5182
  %it_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %44, i32 0, i32 23, !dbg !5183
  %45 = load %struct.iso_context*, %struct.iso_context** %it_context_list, align 8, !dbg !5183
  %46 = bitcast %struct.iso_context* %45 to i8*, !dbg !5182
  call void @kfree(i8* %46) #11, !dbg !5184
  %47 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5185
  %ir_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %47, i32 0, i32 27, !dbg !5186
  %48 = load %struct.iso_context*, %struct.iso_context** %ir_context_list, align 8, !dbg !5186
  %49 = bitcast %struct.iso_context* %48 to i8*, !dbg !5185
  call void @kfree(i8* %49) #11, !dbg !5187
  %50 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5188
  call void @pci_disable_msi(%struct.pci_dev* %50) #11, !dbg !5189
  %51 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5190
  %52 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5191
  %registers = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %52, i32 0, i32 1, !dbg !5192
  %53 = load i8*, i8** %registers, align 8, !dbg !5192
  call void @pci_iounmap(%struct.pci_dev* %51, i8* %53) #11, !dbg !5193
  %54 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5194
  call void @pci_release_region(%struct.pci_dev* %54, i32 0) #11, !dbg !5195
  %55 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5196
  call void @pci_disable_device(%struct.pci_dev* %55) #11, !dbg !5197
  %56 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5198
  %57 = bitcast %struct.fw_ohci* %56 to i8*, !dbg !5198
  call void @kfree(i8* %57) #11, !dbg !5199
  %58 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5200
  call void @pmac_ohci_off(%struct.pci_dev* %58) #11, !dbg !5201
  %59 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5202
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %59, i32 0, i32 41, !dbg !5202
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev20, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.123, i64 0, i64 0)) #12, !dbg !5202
  ret void, !dbg !5203
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_suspend(%struct.pci_dev* %dev, i32 %state.coerce) #2 !dbg !5204 {
entry:
  %retval = alloca i32, align 4
  %state = alloca %struct.pm_message, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %err = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %state, i32 0, i32 0
  store i32 %state.coerce, i32* %coerce.dive, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5205, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.declare(metadata %struct.pm_message* %state, metadata !5207, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !5209, metadata !DIExpression()), !dbg !5210
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5211
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #11, !dbg !5212
  %1 = bitcast i8* %call to %struct.fw_ohci*, !dbg !5212
  store %struct.fw_ohci* %1, %struct.fw_ohci** %ohci, align 8, !dbg !5210
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5213, metadata !DIExpression()), !dbg !5214
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5215
  %call1 = call i32 @software_reset(%struct.fw_ohci* %2) #11, !dbg !5216
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5217
  %call2 = call i32 @pci_save_state(%struct.pci_dev* %3) #11, !dbg !5218
  store i32 %call2, i32* %err, align 4, !dbg !5219
  %4 = load i32, i32* %err, align 4, !dbg !5220
  %tobool = icmp ne i32 %4, 0, !dbg !5220
  br i1 %tobool, label %if.then, label %if.end, !dbg !5222

if.then:                                          ; preds = %entry
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5223
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %5, i32 0, i32 0, !dbg !5223
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !5223
  %6 = load %struct.device*, %struct.device** %device, align 8, !dbg !5223
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.124, i64 0, i64 0)) #12, !dbg !5223
  %7 = load i32, i32* %err, align 4, !dbg !5225
  store i32 %7, i32* %retval, align 4, !dbg !5226
  br label %return, !dbg !5226

if.end:                                           ; preds = %entry
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5227
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5228
  %coerce.dive3 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %state, i32 0, i32 0, !dbg !5229
  %10 = load i32, i32* %coerce.dive3, align 4, !dbg !5229
  %call4 = call i32 @pci_choose_state(%struct.pci_dev* %9, i32 %10) #11, !dbg !5229
  %call5 = call i32 @pci_set_power_state(%struct.pci_dev* %8, i32 %call4) #11, !dbg !5230
  store i32 %call5, i32* %err, align 4, !dbg !5231
  %11 = load i32, i32* %err, align 4, !dbg !5232
  %tobool6 = icmp ne i32 %11, 0, !dbg !5232
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !5234

if.then7:                                         ; preds = %if.end
  %12 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5235
  %card8 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %12, i32 0, i32 0, !dbg !5235
  %device9 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card8, i32 0, i32 1, !dbg !5235
  %13 = load %struct.device*, %struct.device** %device9, align 8, !dbg !5235
  %14 = load i32, i32* %err, align 4, !dbg !5235
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %13, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.125, i64 0, i64 0), i32 %14) #12, !dbg !5235
  br label %if.end10, !dbg !5235

if.end10:                                         ; preds = %if.then7, %if.end
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5236
  call void @pmac_ohci_off(%struct.pci_dev* %15) #11, !dbg !5237
  store i32 0, i32* %retval, align 4, !dbg !5238
  br label %return, !dbg !5238

return:                                           ; preds = %if.end10, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !5239
  ret i32 %16, !dbg !5239
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_resume(%struct.pci_dev* %dev) #2 !dbg !5240 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %err = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5241, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !5243, metadata !DIExpression()), !dbg !5244
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5245
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #11, !dbg !5246
  %1 = bitcast i8* %call to %struct.fw_ohci*, !dbg !5246
  store %struct.fw_ohci* %1, %struct.fw_ohci** %ohci, align 8, !dbg !5244
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5247, metadata !DIExpression()), !dbg !5248
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5249
  call void @pmac_ohci_on(%struct.pci_dev* %2) #11, !dbg !5250
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5251
  %call1 = call i32 @pci_set_power_state(%struct.pci_dev* %3, i32 0) #11, !dbg !5252
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5253
  call void @pci_restore_state(%struct.pci_dev* %4) #11, !dbg !5254
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5255
  %call2 = call i32 @pci_enable_device(%struct.pci_dev* %5) #11, !dbg !5256
  store i32 %call2, i32* %err, align 4, !dbg !5257
  %6 = load i32, i32* %err, align 4, !dbg !5258
  %tobool = icmp ne i32 %6, 0, !dbg !5258
  br i1 %tobool, label %if.then, label %if.end, !dbg !5260

if.then:                                          ; preds = %entry
  %7 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5261
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %7, i32 0, i32 0, !dbg !5261
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !5261
  %8 = load %struct.device*, %struct.device** %device, align 8, !dbg !5261
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.126, i64 0, i64 0)) #12, !dbg !5261
  %9 = load i32, i32* %err, align 4, !dbg !5263
  store i32 %9, i32* %retval, align 4, !dbg !5264
  br label %return, !dbg !5264

if.end:                                           ; preds = %entry
  %10 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5265
  %call3 = call i32 @reg_read(%struct.fw_ohci* %10, i32 40) #11, !dbg !5267
  %tobool4 = icmp ne i32 %call3, 0, !dbg !5267
  br i1 %tobool4, label %if.end12, label %land.lhs.true, !dbg !5268

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5269
  %call5 = call i32 @reg_read(%struct.fw_ohci* %11, i32 36) #11, !dbg !5270
  %tobool6 = icmp ne i32 %call5, 0, !dbg !5270
  br i1 %tobool6, label %if.end12, label %if.then7, !dbg !5271

if.then7:                                         ; preds = %land.lhs.true
  %12 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5272
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5274
  %card8 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %13, i32 0, i32 0, !dbg !5275
  %guid = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card8, i32 0, i32 14, !dbg !5276
  %14 = load i64, i64* %guid, align 8, !dbg !5276
  %conv = trunc i64 %14 to i32, !dbg !5277
  call void @reg_write(%struct.fw_ohci* %12, i32 40, i32 %conv) #11, !dbg !5278
  %15 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5279
  %16 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5280
  %card9 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %16, i32 0, i32 0, !dbg !5281
  %guid10 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card9, i32 0, i32 14, !dbg !5282
  %17 = load i64, i64* %guid10, align 8, !dbg !5282
  %shr = lshr i64 %17, 32, !dbg !5283
  %conv11 = trunc i64 %shr to i32, !dbg !5284
  call void @reg_write(%struct.fw_ohci* %15, i32 36, i32 %conv11) #11, !dbg !5285
  br label %if.end12, !dbg !5286

if.end12:                                         ; preds = %if.then7, %land.lhs.true, %if.end
  %18 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5287
  %card13 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %18, i32 0, i32 0, !dbg !5288
  %call14 = call i32 @ohci_enable(%struct.fw_card* %card13, i32* null, i64 0) #11, !dbg !5289
  store i32 %call14, i32* %err, align 4, !dbg !5290
  %19 = load i32, i32* %err, align 4, !dbg !5291
  %tobool15 = icmp ne i32 %19, 0, !dbg !5291
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !5293

if.then16:                                        ; preds = %if.end12
  %20 = load i32, i32* %err, align 4, !dbg !5294
  store i32 %20, i32* %retval, align 4, !dbg !5295
  br label %return, !dbg !5295

if.end17:                                         ; preds = %if.end12
  %21 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5296
  call void @ohci_resume_iso_dma(%struct.fw_ohci* %21) #11, !dbg !5297
  store i32 0, i32* %retval, align 4, !dbg !5298
  br label %return, !dbg !5298

return:                                           ; preds = %if.end17, %if.then16, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !5299
  ret i32 %22, !dbg !5299
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !5300 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5303, metadata !DIExpression()), !dbg !5307
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5313, metadata !DIExpression()), !dbg !5314
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5315, metadata !DIExpression()), !dbg !5316
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5317, metadata !DIExpression()), !dbg !5318
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5319, metadata !DIExpression()), !dbg !5323
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5325, metadata !DIExpression()), !dbg !5329
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5331, metadata !DIExpression()), !dbg !5335
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5340, metadata !DIExpression()), !dbg !5341
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5342, metadata !DIExpression()), !dbg !5343
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5344, metadata !DIExpression()), !dbg !5345
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5346, metadata !DIExpression()), !dbg !5347
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5348, metadata !DIExpression()), !dbg !5349
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5350, metadata !DIExpression()), !dbg !5351
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5352, metadata !DIExpression()), !dbg !5353
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5354, metadata !DIExpression()), !dbg !5355
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5356, metadata !DIExpression()), !dbg !5357
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5358, metadata !DIExpression()), !dbg !5359
  %0 = load i64, i64* %size.addr, align 8, !dbg !5360
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5361
  %or = or i32 %1, 256, !dbg !5362
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5363
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !5364
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5365

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5366
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5367
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5368

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5369
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5370
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5371
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !5372
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5349
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5373
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5374
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5375
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5376
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5377
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5378
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #15, !dbg !5379
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5379
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5379
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5379
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5379
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5380
  br label %kmalloc.exit, !dbg !5380

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5381
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5382
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5382
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5384

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5385
  br label %kmalloc_index.exit.i, !dbg !5385

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5386
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5388
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5389

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5390
  br label %kmalloc_index.exit.i, !dbg !5390

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5391
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5393
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5394

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5395
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5396
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5397

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5398
  br label %kmalloc_index.exit.i, !dbg !5398

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5399
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5401
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5402

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5403
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5404
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5405

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5406
  br label %kmalloc_index.exit.i, !dbg !5406

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5407
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5409
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5410

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5411
  br label %kmalloc_index.exit.i, !dbg !5411

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5412
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5414
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5415

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5416
  br label %kmalloc_index.exit.i, !dbg !5416

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5417
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5419
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5420

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5421
  br label %kmalloc_index.exit.i, !dbg !5421

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5422
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5424
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5425

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5426
  br label %kmalloc_index.exit.i, !dbg !5426

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5427
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5429
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5430

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5431
  br label %kmalloc_index.exit.i, !dbg !5431

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5432
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5434
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5435

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5436
  br label %kmalloc_index.exit.i, !dbg !5436

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5437
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5439
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5440

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5441
  br label %kmalloc_index.exit.i, !dbg !5441

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5442
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5444
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5445

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5446
  br label %kmalloc_index.exit.i, !dbg !5446

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5447
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5449
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5450

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5451
  br label %kmalloc_index.exit.i, !dbg !5451

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5452
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5454
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5455

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5456
  br label %kmalloc_index.exit.i, !dbg !5456

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5457
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5459
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5460

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5461
  br label %kmalloc_index.exit.i, !dbg !5461

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5462
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5464
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5465

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5466
  br label %kmalloc_index.exit.i, !dbg !5466

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5467
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5469
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5470

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5471
  br label %kmalloc_index.exit.i, !dbg !5471

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5472
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5474
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5475

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5476
  br label %kmalloc_index.exit.i, !dbg !5476

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5477
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5479
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5480

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5481
  br label %kmalloc_index.exit.i, !dbg !5481

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5482
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5484
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5485

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5486
  br label %kmalloc_index.exit.i, !dbg !5486

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5487
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5489
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5490

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5491
  br label %kmalloc_index.exit.i, !dbg !5491

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5492
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5494
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5495

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5496
  br label %kmalloc_index.exit.i, !dbg !5496

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5497
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5499
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5500

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5501
  br label %kmalloc_index.exit.i, !dbg !5501

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5502
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5504
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5505

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5506
  br label %kmalloc_index.exit.i, !dbg !5506

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5507
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5509
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5510

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5511
  br label %kmalloc_index.exit.i, !dbg !5511

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5512
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5514
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5515

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5516
  br label %kmalloc_index.exit.i, !dbg !5516

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5517
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5519
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5520

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5521
  br label %kmalloc_index.exit.i, !dbg !5521

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5522
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5524
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5525

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5526
  br label %kmalloc_index.exit.i, !dbg !5526

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !5527, !srcloc !5530
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 232) #10, !dbg !5531, !srcloc !5534
  unreachable, !dbg !5535

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5536
  store i32 %45, i32* %index.i, align 4, !dbg !5537
  %46 = load i32, i32* %index.i, align 4, !dbg !5538
  %tobool.i = icmp ne i32 %46, 0, !dbg !5538
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5540

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5541
  br label %kmalloc.exit, !dbg !5541

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5542
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5543
  %and.i.i = and i32 %48, 17, !dbg !5543
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5543
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5543
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5543
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5543
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5545

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5546
  br label %kmalloc_type.exit.i, !dbg !5546

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5547
  %and2.i.i = and i32 %49, 1, !dbg !5548
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5547
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5547
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5547
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5549
  br label %kmalloc_type.exit.i, !dbg !5549

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5550
  %idxprom.i = zext i32 %51 to i64, !dbg !5551
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5551
  %52 = load i32, i32* %index.i, align 4, !dbg !5552
  %idxprom6.i = zext i32 %52 to i64, !dbg !5551
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5551
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5551
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5553
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5554
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5555
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5556
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #15, !dbg !5557
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5557
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5557
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5557
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !5557
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5318
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5558
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5559
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5560
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5561
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #15, !dbg !5562
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5563
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5564
  store i8* %62, i8** %retval.i, align 8, !dbg !5565
  br label %kmalloc.exit, !dbg !5565

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5566
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5567
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #15, !dbg !5568
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5568
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5568
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5568
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !5568
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5569
  br label %kmalloc.exit, !dbg !5569

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5570
  ret i8* %65, !dbg !5571
}

; Function Attrs: noredzone
declare dso_local void @fw_card_initialize(%struct.fw_card*, %struct.fw_card_driver*, %struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pmac_ohci_on(%struct.pci_dev* %dev) #2 !dbg !5572 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5573, metadata !DIExpression()), !dbg !5574
  ret void, !dbg !5575
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_dword(%struct.pci_dev*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #2 !dbg !5576 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5579, metadata !DIExpression()), !dbg !5580
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5581, metadata !DIExpression()), !dbg !5582
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5583
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !5584
  %1 = load i8*, i8** %data.addr, align 8, !dbg !5585
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !5586
  ret void, !dbg !5587
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #2 !dbg !5588 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5591, metadata !DIExpression()), !dbg !5592
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !5593, metadata !DIExpression()), !dbg !5594
  ret void, !dbg !5595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #2 !dbg !5596 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !5600, metadata !DIExpression()), !dbg !5601
  br label %do.body, !dbg !5602

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5603

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !5605

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !5603

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5607
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5607
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5607
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !5607
  br label %do.end3, !dbg !5607

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !5603

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5609
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5610
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !5611
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !5612
  ret void, !dbg !5613
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bus_reset_work(%struct.work_struct* %work) #2 !dbg !5614 {
entry:
  %lock.addr.i160 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i160, metadata !5615, metadata !DIExpression()), !dbg !5619
  %lock.addr.i158 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i158, metadata !5621, metadata !DIExpression()), !dbg !5623
  %lock.addr.i156 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i156, metadata !5615, metadata !DIExpression()), !dbg !5625
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5621, metadata !DIExpression()), !dbg !5627
  %work.addr = alloca %struct.work_struct*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fw_ohci*, align 8
  %self_id_count = alloca i32, align 4
  %generation = alloca i32, align 4
  %new_generation = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %reg = alloca i32, align 4
  %free_rom = alloca i8*, align 8
  %free_rom_bus = alloca i64, align 8
  %is_new_root = alloca i8, align 1
  %id = alloca i32, align 4
  %id2 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5629, metadata !DIExpression()), !dbg !5630
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !5631, metadata !DIExpression()), !dbg !5632
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5633, metadata !DIExpression()), !dbg !5635
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !5635
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !5635
  store i8* %1, i8** %__mptr, align 8, !dbg !5635
  br label %do.body, !dbg !5635

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5636

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5635
  %add.ptr = getelementptr i8, i8* %2, i64 -2184, !dbg !5635
  %3 = bitcast i8* %add.ptr to %struct.fw_ohci*, !dbg !5635
  store %struct.fw_ohci* %3, %struct.fw_ohci** %tmp, align 8, !dbg !5636
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %tmp, align 8, !dbg !5635
  store %struct.fw_ohci* %4, %struct.fw_ohci** %ohci, align 8, !dbg !5632
  call void @llvm.dbg.declare(metadata i32* %self_id_count, metadata !5638, metadata !DIExpression()), !dbg !5639
  call void @llvm.dbg.declare(metadata i32* %generation, metadata !5640, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.declare(metadata i32* %new_generation, metadata !5642, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5644, metadata !DIExpression()), !dbg !5645
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5646, metadata !DIExpression()), !dbg !5647
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !5648, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.declare(metadata i8** %free_rom, metadata !5650, metadata !DIExpression()), !dbg !5651
  store i8* null, i8** %free_rom, align 8, !dbg !5651
  call void @llvm.dbg.declare(metadata i64* %free_rom_bus, metadata !5652, metadata !DIExpression()), !dbg !5653
  store i64 0, i64* %free_rom_bus, align 8, !dbg !5653
  call void @llvm.dbg.declare(metadata i8* %is_new_root, metadata !5654, metadata !DIExpression()), !dbg !5655
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5656
  %call = call i32 @reg_read(%struct.fw_ohci* %5, i32 232) #11, !dbg !5657
  store i32 %call, i32* %reg, align 4, !dbg !5658
  %6 = load i32, i32* %reg, align 4, !dbg !5659
  %and = and i32 %6, -2147483648, !dbg !5661
  %tobool = icmp ne i32 %and, 0, !dbg !5661
  br i1 %tobool, label %if.end, label %if.then, !dbg !5662

if.then:                                          ; preds = %do.end
  %7 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5663
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %7, i32 0, i32 0, !dbg !5663
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !5663
  %8 = load %struct.device*, %struct.device** %device, align 8, !dbg !5663
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %8, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !5663
  br label %return, !dbg !5665

if.end:                                           ; preds = %do.end
  %9 = load i32, i32* %reg, align 4, !dbg !5666
  %and1 = and i32 %9, 63, !dbg !5668
  %cmp = icmp eq i32 %and1, 63, !dbg !5669
  br i1 %cmp, label %if.then2, label %if.end5, !dbg !5670

if.then2:                                         ; preds = %if.end
  %10 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5671
  %card3 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %10, i32 0, i32 0, !dbg !5671
  %device4 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card3, i32 0, i32 1, !dbg !5671
  %11 = load %struct.device*, %struct.device** %device4, align 8, !dbg !5671
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !5671
  br label %return, !dbg !5673

if.end5:                                          ; preds = %if.end
  %12 = load i32, i32* %reg, align 4, !dbg !5674
  %and6 = and i32 %12, 65535, !dbg !5675
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5676
  %node_id = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %13, i32 0, i32 2, !dbg !5677
  store i32 %and6, i32* %node_id, align 8, !dbg !5678
  %14 = load i32, i32* %reg, align 4, !dbg !5679
  %and7 = and i32 %14, 1073741824, !dbg !5680
  %cmp8 = icmp ne i32 %and7, 0, !dbg !5681
  %frombool = zext i1 %cmp8 to i8, !dbg !5682
  store i8 %frombool, i8* %is_new_root, align 1, !dbg !5682
  %15 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5683
  %is_root = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %15, i32 0, i32 9, !dbg !5685
  %16 = load i8, i8* %is_root, align 1, !dbg !5685
  %tobool9 = trunc i8 %16 to i1, !dbg !5685
  br i1 %tobool9, label %land.lhs.true, label %if.then11, !dbg !5686

land.lhs.true:                                    ; preds = %if.end5
  %17 = load i8, i8* %is_new_root, align 1, !dbg !5687
  %tobool10 = trunc i8 %17 to i1, !dbg !5687
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !5688

if.then11:                                        ; preds = %land.lhs.true, %if.end5
  %18 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5689
  call void @reg_write(%struct.fw_ohci* %18, i32 224, i32 2097152) #11, !dbg !5690
  br label %if.end12, !dbg !5690

if.end12:                                         ; preds = %if.then11, %land.lhs.true
  %19 = load i8, i8* %is_new_root, align 1, !dbg !5691
  %tobool13 = trunc i8 %19 to i1, !dbg !5691
  %20 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5692
  %is_root14 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %20, i32 0, i32 9, !dbg !5693
  %frombool15 = zext i1 %tobool13 to i8, !dbg !5694
  store i8 %frombool15, i8* %is_root14, align 1, !dbg !5694
  %21 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5695
  %call16 = call i32 @reg_read(%struct.fw_ohci* %21, i32 104) #11, !dbg !5696
  store i32 %call16, i32* %reg, align 4, !dbg !5697
  %22 = load i32, i32* %reg, align 4, !dbg !5698
  %and17 = and i32 %22, -2147483648, !dbg !5700
  %tobool18 = icmp ne i32 %and17, 0, !dbg !5700
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !5701

if.then19:                                        ; preds = %if.end12
  %23 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5702
  %card20 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %23, i32 0, i32 0, !dbg !5702
  %device21 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card20, i32 0, i32 1, !dbg !5702
  %24 = load %struct.device*, %struct.device** %device21, align 8, !dbg !5702
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0)) #12, !dbg !5702
  br label %return, !dbg !5704

if.end22:                                         ; preds = %if.end12
  %25 = load i32, i32* %reg, align 4, !dbg !5705
  %shr = lshr i32 %25, 3, !dbg !5706
  %and23 = and i32 %shr, 255, !dbg !5707
  store i32 %and23, i32* %self_id_count, align 4, !dbg !5708
  %26 = load i32, i32* %self_id_count, align 4, !dbg !5709
  %cmp24 = icmp sgt i32 %26, 252, !dbg !5711
  br i1 %cmp24, label %if.then25, label %if.end28, !dbg !5712

if.then25:                                        ; preds = %if.end22
  %27 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5713
  %card26 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %27, i32 0, i32 0, !dbg !5713
  %device27 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card26, i32 0, i32 1, !dbg !5713
  %28 = load %struct.device*, %struct.device** %device27, align 8, !dbg !5713
  %29 = load i32, i32* %reg, align 4, !dbg !5713
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %28, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.67, i64 0, i64 0), i32 %29) #12, !dbg !5713
  br label %return, !dbg !5715

if.end28:                                         ; preds = %if.end22
  %30 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5716
  %self_id = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %30, i32 0, i32 35, !dbg !5716
  %31 = load i32*, i32** %self_id, align 8, !dbg !5716
  %arrayidx = getelementptr i32, i32* %31, i64 0, !dbg !5716
  %32 = load i32, i32* %arrayidx, align 4, !dbg !5716
  %shr29 = lshr i32 %32, 16, !dbg !5717
  %and30 = and i32 %shr29, 255, !dbg !5718
  store i32 %and30, i32* %generation, align 4, !dbg !5719
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5720, !srcloc !5721
  store i32 1, i32* %i, align 4, !dbg !5722
  store i32 0, i32* %j, align 4, !dbg !5724
  br label %for.cond, !dbg !5725

for.cond:                                         ; preds = %for.inc, %if.end28
  %33 = load i32, i32* %j, align 4, !dbg !5726
  %34 = load i32, i32* %self_id_count, align 4, !dbg !5728
  %cmp31 = icmp slt i32 %33, %34, !dbg !5729
  br i1 %cmp31, label %for.body, label %for.end, !dbg !5730

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %id, metadata !5731, metadata !DIExpression()), !dbg !5733
  %35 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5734
  %self_id32 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %35, i32 0, i32 35, !dbg !5734
  %36 = load i32*, i32** %self_id32, align 8, !dbg !5734
  %37 = load i32, i32* %i, align 4, !dbg !5734
  %idxprom = sext i32 %37 to i64, !dbg !5734
  %arrayidx33 = getelementptr i32, i32* %36, i64 %idxprom, !dbg !5734
  %38 = load i32, i32* %arrayidx33, align 4, !dbg !5734
  store i32 %38, i32* %id, align 4, !dbg !5733
  call void @llvm.dbg.declare(metadata i32* %id2, metadata !5735, metadata !DIExpression()), !dbg !5736
  %39 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5737
  %self_id34 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %39, i32 0, i32 35, !dbg !5737
  %40 = load i32*, i32** %self_id34, align 8, !dbg !5737
  %41 = load i32, i32* %i, align 4, !dbg !5737
  %add = add i32 %41, 1, !dbg !5737
  %idxprom35 = sext i32 %add to i64, !dbg !5737
  %arrayidx36 = getelementptr i32, i32* %40, i64 %idxprom35, !dbg !5737
  %42 = load i32, i32* %arrayidx36, align 4, !dbg !5737
  store i32 %42, i32* %id2, align 4, !dbg !5736
  %43 = load i32, i32* %id, align 4, !dbg !5738
  %44 = load i32, i32* %id2, align 4, !dbg !5740
  %neg = xor i32 %44, -1, !dbg !5741
  %cmp37 = icmp ne i32 %43, %neg, !dbg !5742
  br i1 %cmp37, label %if.then38, label %if.end46, !dbg !5743

if.then38:                                        ; preds = %for.body
  %45 = load i32, i32* %id, align 4, !dbg !5744
  %cmp39 = icmp eq i32 %45, -65393, !dbg !5747
  br i1 %cmp39, label %if.then40, label %if.end43, !dbg !5748

if.then40:                                        ; preds = %if.then38
  %46 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5749
  %card41 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %46, i32 0, i32 0, !dbg !5749
  %device42 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card41, i32 0, i32 1, !dbg !5749
  %47 = load %struct.device*, %struct.device** %device42, align 8, !dbg !5749
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %47, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68, i64 0, i64 0)) #12, !dbg !5749
  %48 = load i32, i32* %j, align 4, !dbg !5751
  store i32 %48, i32* %self_id_count, align 4, !dbg !5752
  br label %for.end, !dbg !5753

if.end43:                                         ; preds = %if.then38
  %49 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5754
  %card44 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %49, i32 0, i32 0, !dbg !5754
  %device45 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card44, i32 0, i32 1, !dbg !5754
  %50 = load %struct.device*, %struct.device** %device45, align 8, !dbg !5754
  %51 = load i32, i32* %j, align 4, !dbg !5754
  %52 = load i32, i32* %self_id_count, align 4, !dbg !5754
  %53 = load i32, i32* %id, align 4, !dbg !5754
  %54 = load i32, i32* %id2, align 4, !dbg !5754
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %50, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.69, i64 0, i64 0), i32 %51, i32 %52, i32 %53, i32 %54) #12, !dbg !5754
  br label %return, !dbg !5755

if.end46:                                         ; preds = %for.body
  %55 = load i32, i32* %id, align 4, !dbg !5756
  %56 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5757
  %self_id_buffer = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %56, i32 0, i32 38, !dbg !5758
  %57 = load i32, i32* %j, align 4, !dbg !5759
  %idxprom47 = sext i32 %57 to i64, !dbg !5757
  %arrayidx48 = getelementptr [512 x i32], [512 x i32]* %self_id_buffer, i64 0, i64 %idxprom47, !dbg !5757
  store i32 %55, i32* %arrayidx48, align 4, !dbg !5760
  br label %for.inc, !dbg !5761

for.inc:                                          ; preds = %if.end46
  %58 = load i32, i32* %i, align 4, !dbg !5762
  %add49 = add i32 %58, 2, !dbg !5762
  store i32 %add49, i32* %i, align 4, !dbg !5762
  %59 = load i32, i32* %j, align 4, !dbg !5763
  %inc = add i32 %59, 1, !dbg !5763
  store i32 %inc, i32* %j, align 4, !dbg !5763
  br label %for.cond, !dbg !5764, !llvm.loop !5765

for.end:                                          ; preds = %if.then40, %for.cond
  %60 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5767
  %quirks = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %60, i32 0, i32 5, !dbg !5769
  %61 = load i32, i32* %quirks, align 4, !dbg !5769
  %and50 = and i32 %61, 32, !dbg !5770
  %tobool51 = icmp ne i32 %and50, 0, !dbg !5770
  br i1 %tobool51, label %if.then52, label %if.end59, !dbg !5771

if.then52:                                        ; preds = %for.end
  %62 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5772
  %63 = load i32, i32* %self_id_count, align 4, !dbg !5774
  %call53 = call i32 @find_and_insert_self_id(%struct.fw_ohci* %62, i32 %63) #11, !dbg !5775
  store i32 %call53, i32* %self_id_count, align 4, !dbg !5776
  %64 = load i32, i32* %self_id_count, align 4, !dbg !5777
  %cmp54 = icmp slt i32 %64, 0, !dbg !5779
  br i1 %cmp54, label %if.then55, label %if.end58, !dbg !5780

if.then55:                                        ; preds = %if.then52
  %65 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5781
  %card56 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %65, i32 0, i32 0, !dbg !5781
  %device57 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card56, i32 0, i32 1, !dbg !5781
  %66 = load %struct.device*, %struct.device** %device57, align 8, !dbg !5781
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %66, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.70, i64 0, i64 0)) #12, !dbg !5781
  br label %return, !dbg !5783

if.end58:                                         ; preds = %if.then52
  br label %if.end59, !dbg !5784

if.end59:                                         ; preds = %if.end58, %for.end
  %67 = load i32, i32* %self_id_count, align 4, !dbg !5785
  %cmp60 = icmp eq i32 %67, 0, !dbg !5787
  br i1 %cmp60, label %if.then61, label %if.end64, !dbg !5788

if.then61:                                        ; preds = %if.end59
  %68 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5789
  %card62 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %68, i32 0, i32 0, !dbg !5789
  %device63 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card62, i32 0, i32 1, !dbg !5789
  %69 = load %struct.device*, %struct.device** %device63, align 8, !dbg !5789
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %69, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.71, i64 0, i64 0)) #12, !dbg !5789
  br label %return, !dbg !5791

if.end64:                                         ; preds = %if.end59
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5792, !srcloc !5793
  %70 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5794
  %call65 = call i32 @reg_read(%struct.fw_ohci* %70, i32 104) #11, !dbg !5795
  %shr66 = lshr i32 %call65, 16, !dbg !5796
  %and67 = and i32 %shr66, 255, !dbg !5797
  store i32 %and67, i32* %new_generation, align 4, !dbg !5798
  %71 = load i32, i32* %new_generation, align 4, !dbg !5799
  %72 = load i32, i32* %generation, align 4, !dbg !5801
  %cmp68 = icmp ne i32 %71, %72, !dbg !5802
  br i1 %cmp68, label %if.then69, label %if.end72, !dbg !5803

if.then69:                                        ; preds = %if.end64
  %73 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5804
  %card70 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %73, i32 0, i32 0, !dbg !5804
  %device71 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card70, i32 0, i32 1, !dbg !5804
  %74 = load %struct.device*, %struct.device** %device71, align 8, !dbg !5804
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %74, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.72, i64 0, i64 0)) #12, !dbg !5804
  br label %return, !dbg !5806

if.end72:                                         ; preds = %if.end64
  %75 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5807
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %75, i32 0, i32 13, !dbg !5808
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !5809
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5812, !srcloc !5814
  %76 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5815
  %77 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %76, i32 0, i32 0, !dbg !5815
  %rlock.i = bitcast %union.anon.4* %77 to %struct.raw_spinlock*, !dbg !5815
  %78 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5817
  %generation73 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %78, i32 0, i32 3, !dbg !5818
  store i32 -1, i32* %generation73, align 4, !dbg !5819
  %79 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5820
  %at_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %79, i32 0, i32 19, !dbg !5821
  call void @context_stop(%struct.context* %at_request_ctx) #11, !dbg !5822
  %80 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5823
  %at_response_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %80, i32 0, i32 20, !dbg !5824
  call void @context_stop(%struct.context* %at_response_ctx) #11, !dbg !5825
  %81 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5826
  %lock74 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %81, i32 0, i32 13, !dbg !5827
  store %struct.spinlock* %lock74, %struct.spinlock** %lock.addr.i156, align 8
  call void @arch_local_irq_enable() #15, !dbg !5828
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5831, !srcloc !5833
  %82 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i156, align 8, !dbg !5834
  %83 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %82, i32 0, i32 0, !dbg !5834
  %rlock.i157 = bitcast %union.anon.4* %83 to %struct.raw_spinlock*, !dbg !5834
  %84 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5836
  %at_request_ctx75 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %84, i32 0, i32 19, !dbg !5837
  call void @at_context_flush(%struct.context* %at_request_ctx75) #11, !dbg !5838
  %85 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5839
  %at_response_ctx76 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %85, i32 0, i32 20, !dbg !5840
  call void @at_context_flush(%struct.context* %at_response_ctx76) #11, !dbg !5841
  %86 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5842
  %lock77 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %86, i32 0, i32 13, !dbg !5843
  store %struct.spinlock* %lock77, %struct.spinlock** %lock.addr.i158, align 8
  call void @arch_local_irq_disable() #15, !dbg !5844
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5845, !srcloc !5814
  %87 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i158, align 8, !dbg !5846
  %88 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %87, i32 0, i32 0, !dbg !5846
  %rlock.i159 = bitcast %union.anon.4* %88 to %struct.raw_spinlock*, !dbg !5846
  %89 = load i32, i32* %generation, align 4, !dbg !5847
  %90 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5848
  %generation78 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %90, i32 0, i32 3, !dbg !5849
  store i32 %89, i32* %generation78, align 4, !dbg !5850
  %91 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5851
  call void @reg_write(%struct.fw_ohci* %91, i32 132, i32 131072) #11, !dbg !5852
  %92 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5853
  %quirks79 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %92, i32 0, i32 5, !dbg !5855
  %93 = load i32, i32* %quirks79, align 4, !dbg !5855
  %and80 = and i32 %93, 2, !dbg !5856
  %tobool81 = icmp ne i32 %and80, 0, !dbg !5856
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !5857

if.then82:                                        ; preds = %if.end72
  %94 = load i32, i32* %generation, align 4, !dbg !5858
  %95 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5859
  %request_generation = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %95, i32 0, i32 4, !dbg !5860
  store i32 %94, i32* %request_generation, align 8, !dbg !5861
  br label %if.end83, !dbg !5859

if.end83:                                         ; preds = %if.then82, %if.end72
  %96 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5862
  %next_config_rom = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %96, i32 0, i32 32, !dbg !5864
  %97 = load i32*, i32** %next_config_rom, align 8, !dbg !5864
  %cmp84 = icmp ne i32* %97, null, !dbg !5865
  br i1 %cmp84, label %if.then85, label %if.end141, !dbg !5866

if.then85:                                        ; preds = %if.end83
  %98 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5867
  %next_config_rom86 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %98, i32 0, i32 32, !dbg !5870
  %99 = load i32*, i32** %next_config_rom86, align 8, !dbg !5870
  %100 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5871
  %config_rom = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %100, i32 0, i32 30, !dbg !5872
  %101 = load i32*, i32** %config_rom, align 8, !dbg !5872
  %cmp87 = icmp ne i32* %99, %101, !dbg !5873
  br i1 %cmp87, label %if.then88, label %if.end90, !dbg !5874

if.then88:                                        ; preds = %if.then85
  %102 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5875
  %config_rom89 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %102, i32 0, i32 30, !dbg !5877
  %103 = load i32*, i32** %config_rom89, align 8, !dbg !5877
  %104 = bitcast i32* %103 to i8*, !dbg !5875
  store i8* %104, i8** %free_rom, align 8, !dbg !5878
  %105 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5879
  %config_rom_bus = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %105, i32 0, i32 31, !dbg !5880
  %106 = load i64, i64* %config_rom_bus, align 8, !dbg !5880
  store i64 %106, i64* %free_rom_bus, align 8, !dbg !5881
  br label %if.end90, !dbg !5882

if.end90:                                         ; preds = %if.then88, %if.then85
  %107 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5883
  %next_config_rom91 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %107, i32 0, i32 32, !dbg !5884
  %108 = load i32*, i32** %next_config_rom91, align 8, !dbg !5884
  %109 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5885
  %config_rom92 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %109, i32 0, i32 30, !dbg !5886
  store i32* %108, i32** %config_rom92, align 8, !dbg !5887
  %110 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5888
  %next_config_rom_bus = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %110, i32 0, i32 33, !dbg !5889
  %111 = load i64, i64* %next_config_rom_bus, align 8, !dbg !5889
  %112 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5890
  %config_rom_bus93 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %112, i32 0, i32 31, !dbg !5891
  store i64 %111, i64* %config_rom_bus93, align 8, !dbg !5892
  %113 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5893
  %next_config_rom94 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %113, i32 0, i32 32, !dbg !5894
  store i32* null, i32** %next_config_rom94, align 8, !dbg !5895
  %114 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5896
  %115 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5897
  %config_rom95 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %115, i32 0, i32 30, !dbg !5897
  %116 = load i32*, i32** %config_rom95, align 8, !dbg !5897
  %arrayidx96 = getelementptr i32, i32* %116, i64 2, !dbg !5897
  %117 = load i32, i32* %arrayidx96, align 4, !dbg !5897
  %118 = call i1 @llvm.is.constant.i32(i32 %117), !dbg !5897
  br i1 %118, label %cond.true, label %cond.false, !dbg !5897

cond.true:                                        ; preds = %if.end90
  %119 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5897
  %config_rom97 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %119, i32 0, i32 30, !dbg !5897
  %120 = load i32*, i32** %config_rom97, align 8, !dbg !5897
  %arrayidx98 = getelementptr i32, i32* %120, i64 2, !dbg !5897
  %121 = load i32, i32* %arrayidx98, align 4, !dbg !5897
  %and99 = and i32 %121, 255, !dbg !5897
  %shl = shl i32 %and99, 24, !dbg !5897
  %122 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5897
  %config_rom100 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %122, i32 0, i32 30, !dbg !5897
  %123 = load i32*, i32** %config_rom100, align 8, !dbg !5897
  %arrayidx101 = getelementptr i32, i32* %123, i64 2, !dbg !5897
  %124 = load i32, i32* %arrayidx101, align 4, !dbg !5897
  %and102 = and i32 %124, 65280, !dbg !5897
  %shl103 = shl i32 %and102, 8, !dbg !5897
  %or = or i32 %shl, %shl103, !dbg !5897
  %125 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5897
  %config_rom104 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %125, i32 0, i32 30, !dbg !5897
  %126 = load i32*, i32** %config_rom104, align 8, !dbg !5897
  %arrayidx105 = getelementptr i32, i32* %126, i64 2, !dbg !5897
  %127 = load i32, i32* %arrayidx105, align 4, !dbg !5897
  %and106 = and i32 %127, 16711680, !dbg !5897
  %shr107 = lshr i32 %and106, 8, !dbg !5897
  %or108 = or i32 %or, %shr107, !dbg !5897
  %128 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5897
  %config_rom109 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %128, i32 0, i32 30, !dbg !5897
  %129 = load i32*, i32** %config_rom109, align 8, !dbg !5897
  %arrayidx110 = getelementptr i32, i32* %129, i64 2, !dbg !5897
  %130 = load i32, i32* %arrayidx110, align 4, !dbg !5897
  %and111 = and i32 %130, -16777216, !dbg !5897
  %shr112 = lshr i32 %and111, 24, !dbg !5897
  %or113 = or i32 %or108, %shr112, !dbg !5897
  br label %cond.end, !dbg !5897

cond.false:                                       ; preds = %if.end90
  %131 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5897
  %config_rom114 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %131, i32 0, i32 30, !dbg !5897
  %132 = load i32*, i32** %config_rom114, align 8, !dbg !5897
  %arrayidx115 = getelementptr i32, i32* %132, i64 2, !dbg !5897
  %133 = load i32, i32* %arrayidx115, align 4, !dbg !5897
  %call116 = call i32 @__fswab32(i32 %133) #14, !dbg !5897
  br label %cond.end, !dbg !5897

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or113, %cond.true ], [ %call116, %cond.false ], !dbg !5897
  call void @reg_write(%struct.fw_ohci* %114, i32 32, i32 %cond) #11, !dbg !5898
  %134 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5899
  %next_header = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %134, i32 0, i32 34, !dbg !5900
  %135 = load i32, i32* %next_header, align 8, !dbg !5900
  %136 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5901
  %config_rom117 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %136, i32 0, i32 30, !dbg !5902
  %137 = load i32*, i32** %config_rom117, align 8, !dbg !5902
  %arrayidx118 = getelementptr i32, i32* %137, i64 0, !dbg !5901
  store i32 %135, i32* %arrayidx118, align 4, !dbg !5903
  %138 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5904
  %139 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5905
  %next_header119 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %139, i32 0, i32 34, !dbg !5905
  %140 = load i32, i32* %next_header119, align 8, !dbg !5905
  %141 = call i1 @llvm.is.constant.i32(i32 %140), !dbg !5905
  br i1 %141, label %cond.true120, label %cond.false136, !dbg !5905

cond.true120:                                     ; preds = %cond.end
  %142 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5905
  %next_header121 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %142, i32 0, i32 34, !dbg !5905
  %143 = load i32, i32* %next_header121, align 8, !dbg !5905
  %and122 = and i32 %143, 255, !dbg !5905
  %shl123 = shl i32 %and122, 24, !dbg !5905
  %144 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5905
  %next_header124 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %144, i32 0, i32 34, !dbg !5905
  %145 = load i32, i32* %next_header124, align 8, !dbg !5905
  %and125 = and i32 %145, 65280, !dbg !5905
  %shl126 = shl i32 %and125, 8, !dbg !5905
  %or127 = or i32 %shl123, %shl126, !dbg !5905
  %146 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5905
  %next_header128 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %146, i32 0, i32 34, !dbg !5905
  %147 = load i32, i32* %next_header128, align 8, !dbg !5905
  %and129 = and i32 %147, 16711680, !dbg !5905
  %shr130 = lshr i32 %and129, 8, !dbg !5905
  %or131 = or i32 %or127, %shr130, !dbg !5905
  %148 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5905
  %next_header132 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %148, i32 0, i32 34, !dbg !5905
  %149 = load i32, i32* %next_header132, align 8, !dbg !5905
  %and133 = and i32 %149, -16777216, !dbg !5905
  %shr134 = lshr i32 %and133, 24, !dbg !5905
  %or135 = or i32 %or131, %shr134, !dbg !5905
  br label %cond.end139, !dbg !5905

cond.false136:                                    ; preds = %cond.end
  %150 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5905
  %next_header137 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %150, i32 0, i32 34, !dbg !5905
  %151 = load i32, i32* %next_header137, align 8, !dbg !5905
  %call138 = call i32 @__fswab32(i32 %151) #14, !dbg !5905
  br label %cond.end139, !dbg !5905

cond.end139:                                      ; preds = %cond.false136, %cond.true120
  %cond140 = phi i32 [ %or135, %cond.true120 ], [ %call138, %cond.false136 ], !dbg !5905
  call void @reg_write(%struct.fw_ohci* %138, i32 24, i32 %cond140) #11, !dbg !5906
  br label %if.end141, !dbg !5907

if.end141:                                        ; preds = %cond.end139, %if.end83
  %152 = load i8, i8* @param_remote_dma, align 1, !dbg !5908
  %tobool142 = trunc i8 %152 to i1, !dbg !5908
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !5910

if.then143:                                       ; preds = %if.end141
  %153 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5911
  call void @reg_write(%struct.fw_ohci* %153, i32 272, i32 -1) #11, !dbg !5913
  %154 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5914
  call void @reg_write(%struct.fw_ohci* %154, i32 280, i32 -1) #11, !dbg !5915
  br label %if.end144, !dbg !5916

if.end144:                                        ; preds = %if.then143, %if.end141
  %155 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5917
  %lock145 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %155, i32 0, i32 13, !dbg !5918
  store %struct.spinlock* %lock145, %struct.spinlock** %lock.addr.i160, align 8
  call void @arch_local_irq_enable() #15, !dbg !5919
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5920, !srcloc !5833
  %156 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i160, align 8, !dbg !5921
  %157 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %156, i32 0, i32 0, !dbg !5921
  %rlock.i161 = bitcast %union.anon.4* %157 to %struct.raw_spinlock*, !dbg !5921
  %158 = load i8*, i8** %free_rom, align 8, !dbg !5922
  %tobool146 = icmp ne i8* %158, null, !dbg !5922
  br i1 %tobool146, label %if.then147, label %if.end150, !dbg !5924

if.then147:                                       ; preds = %if.end144
  %159 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5925
  %card148 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %159, i32 0, i32 0, !dbg !5926
  %device149 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card148, i32 0, i32 1, !dbg !5927
  %160 = load %struct.device*, %struct.device** %device149, align 8, !dbg !5927
  %161 = load i8*, i8** %free_rom, align 8, !dbg !5928
  %162 = load i64, i64* %free_rom_bus, align 8, !dbg !5929
  call void @dma_free_coherent(%struct.device* %160, i64 1024, i8* %161, i64 %162) #11, !dbg !5930
  br label %if.end150, !dbg !5930

if.end150:                                        ; preds = %if.then147, %if.end144
  %163 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5931
  %164 = load i32, i32* %generation, align 4, !dbg !5932
  %165 = load i32, i32* %self_id_count, align 4, !dbg !5933
  call void @log_selfids(%struct.fw_ohci* %163, i32 %164, i32 %165) #11, !dbg !5934
  %166 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5935
  %card151 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %166, i32 0, i32 0, !dbg !5936
  %167 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5937
  %node_id152 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %167, i32 0, i32 2, !dbg !5938
  %168 = load i32, i32* %node_id152, align 8, !dbg !5938
  %169 = load i32, i32* %generation, align 4, !dbg !5939
  %170 = load i32, i32* %self_id_count, align 4, !dbg !5940
  %171 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5941
  %self_id_buffer153 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %171, i32 0, i32 38, !dbg !5942
  %arraydecay = getelementptr inbounds [512 x i32], [512 x i32]* %self_id_buffer153, i64 0, i64 0, !dbg !5941
  %172 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5943
  %csr_state_setclear_abdicate = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %172, i32 0, i32 10, !dbg !5944
  %173 = load i8, i8* %csr_state_setclear_abdicate, align 2, !dbg !5944
  %tobool154 = trunc i8 %173 to i1, !dbg !5944
  call void @fw_core_handle_bus_reset(%struct.fw_card* %card151, i32 %168, i32 %169, i32 %170, i32* %arraydecay, i1 zeroext %tobool154) #11, !dbg !5945
  %174 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !5946
  %csr_state_setclear_abdicate155 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %174, i32 0, i32 10, !dbg !5947
  store i8 0, i8* %csr_state_setclear_abdicate155, align 2, !dbg !5948
  br label %return, !dbg !5949

return:                                           ; preds = %if.end150, %if.then69, %if.then61, %if.then55, %if.end43, %if.then25, %if.then19, %if.then2, %if.then
  ret void, !dbg !5949
}

; Function Attrs: noredzone
declare dso_local i32 @pci_request_region(%struct.pci_dev*, i32, i8*) #1

; Function Attrs: noredzone
declare dso_local i8* @pci_iomap(%struct.pci_dev*, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #2 !dbg !5950 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5954, metadata !DIExpression()), !dbg !5955
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5956, metadata !DIExpression()), !dbg !5957
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !5958, metadata !DIExpression()), !dbg !5959
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !5960, metadata !DIExpression()), !dbg !5961
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5962
  %1 = load i64, i64* %size.addr, align 8, !dbg !5963
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !5964
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !5965
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !5966
  %and = and i32 %4, 8192, !dbg !5967
  %tobool = icmp ne i32 %and, 0, !dbg !5968
  %5 = zext i1 %tobool to i64, !dbg !5968
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !5968
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #11, !dbg !5969
  ret i8* %call, !dbg !5970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ar_context_init(%struct.ar_context* %ctx, %struct.fw_ohci* %ohci, i32 %descriptors_offset, i32 %regs) #2 !dbg !5971 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ar_context*, align 8
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %descriptors_offset.addr = alloca i32, align 4
  %regs.addr = alloca i32, align 4
  %dev = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  %dma_addr = alloca i64, align 8
  %pages = alloca [10 x %struct.page*], align 16
  %d = alloca %struct.descriptor*, align 8
  %.compoundliteral = alloca %struct.pgprot, align 8
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !5974, metadata !DIExpression()), !dbg !5975
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !5976, metadata !DIExpression()), !dbg !5977
  store i32 %descriptors_offset, i32* %descriptors_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %descriptors_offset.addr, metadata !5978, metadata !DIExpression()), !dbg !5979
  store i32 %regs, i32* %regs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regs.addr, metadata !5980, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5982, metadata !DIExpression()), !dbg !5983
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !5984
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %0, i32 0, i32 0, !dbg !5985
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !5986
  %1 = load %struct.device*, %struct.device** %device, align 8, !dbg !5986
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !5983
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5987, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.declare(metadata i64* %dma_addr, metadata !5989, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.declare(metadata [10 x %struct.page*]* %pages, metadata !5991, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d, metadata !5996, metadata !DIExpression()), !dbg !5997
  %2 = load i32, i32* %regs.addr, align 4, !dbg !5998
  %3 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !5999
  %regs1 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %3, i32 0, i32 7, !dbg !6000
  store i32 %2, i32* %regs1, align 4, !dbg !6001
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !6002
  %5 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6003
  %ohci2 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %5, i32 0, i32 0, !dbg !6004
  store %struct.fw_ohci* %4, %struct.fw_ohci** %ohci2, align 8, !dbg !6005
  %6 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6006
  %tasklet = getelementptr inbounds %struct.ar_context, %struct.ar_context* %6, i32 0, i32 8, !dbg !6007
  %7 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6008
  %8 = ptrtoint %struct.ar_context* %7 to i64, !dbg !6009
  call void @tasklet_init(%struct.tasklet_struct* %tasklet, void (i64)* @ar_context_tasklet, i64 %8) #11, !dbg !6010
  store i32 0, i32* %i, align 4, !dbg !6011
  br label %for.cond, !dbg !6013

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !6014
  %conv = zext i32 %9 to i64, !dbg !6014
  %cmp = icmp ult i64 %conv, 8, !dbg !6016
  br i1 %cmp, label %for.body, label %for.end, !dbg !6017

for.body:                                         ; preds = %for.cond
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6018
  %call = call %struct.page* @dma_alloc_pages(%struct.device* %10, i64 4096, i64* %dma_addr, i32 2, i32 3264) #11, !dbg !6020
  %11 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6021
  %pages4 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %11, i32 0, i32 1, !dbg !6022
  %12 = load i32, i32* %i, align 4, !dbg !6023
  %idxprom = zext i32 %12 to i64, !dbg !6021
  %arrayidx = getelementptr [8 x %struct.page*], [8 x %struct.page*]* %pages4, i64 0, i64 %idxprom, !dbg !6021
  store %struct.page* %call, %struct.page** %arrayidx, align 8, !dbg !6024
  %13 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6025
  %pages5 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %13, i32 0, i32 1, !dbg !6027
  %14 = load i32, i32* %i, align 4, !dbg !6028
  %idxprom6 = zext i32 %14 to i64, !dbg !6025
  %arrayidx7 = getelementptr [8 x %struct.page*], [8 x %struct.page*]* %pages5, i64 0, i64 %idxprom6, !dbg !6025
  %15 = load %struct.page*, %struct.page** %arrayidx7, align 8, !dbg !6025
  %tobool = icmp ne %struct.page* %15, null, !dbg !6025
  br i1 %tobool, label %if.end, label %if.then, !dbg !6029

if.then:                                          ; preds = %for.body
  br label %out_of_memory, !dbg !6030

if.end:                                           ; preds = %for.body
  %16 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6031
  %pages8 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %16, i32 0, i32 1, !dbg !6032
  %17 = load i32, i32* %i, align 4, !dbg !6033
  %idxprom9 = zext i32 %17 to i64, !dbg !6031
  %arrayidx10 = getelementptr [8 x %struct.page*], [8 x %struct.page*]* %pages8, i64 0, i64 %idxprom9, !dbg !6031
  %18 = load %struct.page*, %struct.page** %arrayidx10, align 8, !dbg !6031
  %19 = load i64, i64* %dma_addr, align 8, !dbg !6034
  call void @set_page_private(%struct.page* %18, i64 %19) #11, !dbg !6035
  %20 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6036
  %21 = load i64, i64* %dma_addr, align 8, !dbg !6037
  call void @dma_sync_single_for_device(%struct.device* %20, i64 %21, i64 4096, i32 2) #11, !dbg !6038
  br label %for.inc, !dbg !6039

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %i, align 4, !dbg !6040
  %inc = add i32 %22, 1, !dbg !6040
  store i32 %inc, i32* %i, align 4, !dbg !6040
  br label %for.cond, !dbg !6041, !llvm.loop !6042

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6044
  br label %for.cond11, !dbg !6046

for.cond11:                                       ; preds = %for.inc21, %for.end
  %23 = load i32, i32* %i, align 4, !dbg !6047
  %conv12 = zext i32 %23 to i64, !dbg !6047
  %cmp13 = icmp ult i64 %conv12, 8, !dbg !6049
  br i1 %cmp13, label %for.body15, label %for.end23, !dbg !6050

for.body15:                                       ; preds = %for.cond11
  %24 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6051
  %pages16 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %24, i32 0, i32 1, !dbg !6052
  %25 = load i32, i32* %i, align 4, !dbg !6053
  %idxprom17 = zext i32 %25 to i64, !dbg !6051
  %arrayidx18 = getelementptr [8 x %struct.page*], [8 x %struct.page*]* %pages16, i64 0, i64 %idxprom17, !dbg !6051
  %26 = load %struct.page*, %struct.page** %arrayidx18, align 8, !dbg !6051
  %27 = load i32, i32* %i, align 4, !dbg !6054
  %idxprom19 = zext i32 %27 to i64, !dbg !6055
  %arrayidx20 = getelementptr [10 x %struct.page*], [10 x %struct.page*]* %pages, i64 0, i64 %idxprom19, !dbg !6055
  store %struct.page* %26, %struct.page** %arrayidx20, align 8, !dbg !6056
  br label %for.inc21, !dbg !6055

for.inc21:                                        ; preds = %for.body15
  %28 = load i32, i32* %i, align 4, !dbg !6057
  %inc22 = add i32 %28, 1, !dbg !6057
  store i32 %inc22, i32* %i, align 4, !dbg !6057
  br label %for.cond11, !dbg !6058, !llvm.loop !6059

for.end23:                                        ; preds = %for.cond11
  store i32 0, i32* %i, align 4, !dbg !6061
  br label %for.cond24, !dbg !6063

for.cond24:                                       ; preds = %for.inc34, %for.end23
  %29 = load i32, i32* %i, align 4, !dbg !6064
  %conv25 = zext i32 %29 to i64, !dbg !6064
  %cmp26 = icmp ult i64 %conv25, 2, !dbg !6066
  br i1 %cmp26, label %for.body28, label %for.end36, !dbg !6067

for.body28:                                       ; preds = %for.cond24
  %30 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6068
  %pages29 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %30, i32 0, i32 1, !dbg !6069
  %31 = load i32, i32* %i, align 4, !dbg !6070
  %idxprom30 = zext i32 %31 to i64, !dbg !6068
  %arrayidx31 = getelementptr [8 x %struct.page*], [8 x %struct.page*]* %pages29, i64 0, i64 %idxprom30, !dbg !6068
  %32 = load %struct.page*, %struct.page** %arrayidx31, align 8, !dbg !6068
  %33 = load i32, i32* %i, align 4, !dbg !6071
  %conv32 = zext i32 %33 to i64, !dbg !6071
  %add = add i64 8, %conv32, !dbg !6072
  %arrayidx33 = getelementptr [10 x %struct.page*], [10 x %struct.page*]* %pages, i64 0, i64 %add, !dbg !6073
  store %struct.page* %32, %struct.page** %arrayidx33, align 8, !dbg !6074
  br label %for.inc34, !dbg !6073

for.inc34:                                        ; preds = %for.body28
  %34 = load i32, i32* %i, align 4, !dbg !6075
  %inc35 = add i32 %34, 1, !dbg !6075
  store i32 %inc35, i32* %i, align 4, !dbg !6075
  br label %for.cond24, !dbg !6076, !llvm.loop !6077

for.end36:                                        ; preds = %for.cond24
  %arraydecay = getelementptr inbounds [10 x %struct.page*], [10 x %struct.page*]* %pages, i64 0, i64 0, !dbg !6079
  %pgprot = getelementptr inbounds %struct.pgprot, %struct.pgprot* %.compoundliteral, i32 0, i32 0, !dbg !6080
  %35 = load i64, i64* @__default_kernel_pte_mask, align 8, !dbg !6080
  %and = and i64 -9223372036854775453, %35, !dbg !6080
  store i64 %and, i64* %pgprot, align 8, !dbg !6080
  %coerce.dive = getelementptr inbounds %struct.pgprot, %struct.pgprot* %.compoundliteral, i32 0, i32 0, !dbg !6081
  %36 = load i64, i64* %coerce.dive, align 8, !dbg !6081
  %call37 = call i8* @vmap(%struct.page** %arraydecay, i32 10, i64 4, i64 %36) #11, !dbg !6081
  %37 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6082
  %buffer = getelementptr inbounds %struct.ar_context, %struct.ar_context* %37, i32 0, i32 2, !dbg !6083
  store i8* %call37, i8** %buffer, align 8, !dbg !6084
  %38 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6085
  %buffer38 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %38, i32 0, i32 2, !dbg !6087
  %39 = load i8*, i8** %buffer38, align 8, !dbg !6087
  %tobool39 = icmp ne i8* %39, null, !dbg !6085
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !6088

if.then40:                                        ; preds = %for.end36
  br label %out_of_memory, !dbg !6089

if.end41:                                         ; preds = %for.end36
  %40 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !6090
  %misc_buffer = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %40, i32 0, i32 15, !dbg !6091
  %41 = load i8*, i8** %misc_buffer, align 8, !dbg !6091
  %42 = load i32, i32* %descriptors_offset.addr, align 4, !dbg !6092
  %idx.ext = zext i32 %42 to i64, !dbg !6093
  %add.ptr = getelementptr i8, i8* %41, i64 %idx.ext, !dbg !6093
  %43 = bitcast i8* %add.ptr to %struct.descriptor*, !dbg !6090
  %44 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6094
  %descriptors = getelementptr inbounds %struct.ar_context, %struct.ar_context* %44, i32 0, i32 3, !dbg !6095
  store %struct.descriptor* %43, %struct.descriptor** %descriptors, align 8, !dbg !6096
  %45 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !6097
  %misc_buffer_bus = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %45, i32 0, i32 16, !dbg !6098
  %46 = load i64, i64* %misc_buffer_bus, align 8, !dbg !6098
  %47 = load i32, i32* %descriptors_offset.addr, align 4, !dbg !6099
  %conv42 = zext i32 %47 to i64, !dbg !6099
  %add43 = add i64 %46, %conv42, !dbg !6100
  %48 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6101
  %descriptors_bus = getelementptr inbounds %struct.ar_context, %struct.ar_context* %48, i32 0, i32 4, !dbg !6102
  store i64 %add43, i64* %descriptors_bus, align 8, !dbg !6103
  store i32 0, i32* %i, align 4, !dbg !6104
  br label %for.cond44, !dbg !6106

for.cond44:                                       ; preds = %for.inc59, %if.end41
  %49 = load i32, i32* %i, align 4, !dbg !6107
  %conv45 = zext i32 %49 to i64, !dbg !6107
  %cmp46 = icmp ult i64 %conv45, 8, !dbg !6109
  br i1 %cmp46, label %for.body48, label %for.end61, !dbg !6110

for.body48:                                       ; preds = %for.cond44
  %50 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6111
  %descriptors49 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %50, i32 0, i32 3, !dbg !6113
  %51 = load %struct.descriptor*, %struct.descriptor** %descriptors49, align 8, !dbg !6113
  %52 = load i32, i32* %i, align 4, !dbg !6114
  %idxprom50 = zext i32 %52 to i64, !dbg !6111
  %arrayidx51 = getelementptr %struct.descriptor, %struct.descriptor* %51, i64 %idxprom50, !dbg !6111
  store %struct.descriptor* %arrayidx51, %struct.descriptor** %d, align 8, !dbg !6115
  %53 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !6116
  %req_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %53, i32 0, i32 0, !dbg !6117
  store i16 4096, i16* %req_count, align 16, !dbg !6118
  %54 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !6119
  %control = getelementptr inbounds %struct.descriptor, %struct.descriptor* %54, i32 0, i32 1, !dbg !6120
  store i16 10252, i16* %control, align 2, !dbg !6121
  %55 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6122
  %56 = load i32, i32* %i, align 4, !dbg !6122
  %call52 = call i64 @ar_buffer_bus(%struct.ar_context* %55, i32 %56) #11, !dbg !6122
  %conv53 = trunc i64 %call52 to i32, !dbg !6122
  %57 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !6123
  %data_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %57, i32 0, i32 2, !dbg !6124
  store i32 %conv53, i32* %data_address, align 4, !dbg !6125
  %58 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6126
  %descriptors_bus54 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %58, i32 0, i32 4, !dbg !6126
  %59 = load i64, i64* %descriptors_bus54, align 8, !dbg !6126
  %60 = load i32, i32* %i, align 4, !dbg !6126
  %call55 = call i32 @ar_next_buffer_index(i32 %60) #11, !dbg !6126
  %conv56 = zext i32 %call55 to i64, !dbg !6126
  %mul = mul i64 %conv56, 16, !dbg !6126
  %add57 = add i64 %59, %mul, !dbg !6126
  %conv58 = trunc i64 %add57 to i32, !dbg !6126
  %61 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !6127
  %branch_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %61, i32 0, i32 3, !dbg !6128
  store i32 %conv58, i32* %branch_address, align 8, !dbg !6129
  br label %for.inc59, !dbg !6130

for.inc59:                                        ; preds = %for.body48
  %62 = load i32, i32* %i, align 4, !dbg !6131
  %inc60 = add i32 %62, 1, !dbg !6131
  store i32 %inc60, i32* %i, align 4, !dbg !6131
  br label %for.cond44, !dbg !6132, !llvm.loop !6133

for.end61:                                        ; preds = %for.cond44
  store i32 0, i32* %retval, align 4, !dbg !6135
  br label %return, !dbg !6135

out_of_memory:                                    ; preds = %if.then40, %if.then
  call void @llvm.dbg.label(metadata !6136), !dbg !6137
  %63 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6138
  call void @ar_context_release(%struct.ar_context* %63) #11, !dbg !6139
  store i32 -12, i32* %retval, align 4, !dbg !6140
  br label %return, !dbg !6140

return:                                           ; preds = %out_of_memory, %for.end61
  %64 = load i32, i32* %retval, align 4, !dbg !6141
  ret i32 %64, !dbg !6141
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @context_init(%struct.context* %ctx, %struct.fw_ohci* %ohci, i32 %regs, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)* %callback) #2 !dbg !6142 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.context*, align 8
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %regs.addr = alloca i32, align 4
  %callback.addr = alloca i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.descriptor_buffer*, align 8
  store %struct.context* %ctx, %struct.context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %ctx.addr, metadata !6145, metadata !DIExpression()), !dbg !6146
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !6147, metadata !DIExpression()), !dbg !6148
  store i32 %regs, i32* %regs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regs.addr, metadata !6149, metadata !DIExpression()), !dbg !6150
  store i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)* %callback, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)** %callback.addr, metadata !6151, metadata !DIExpression()), !dbg !6152
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !6153
  %1 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6154
  %ohci1 = getelementptr inbounds %struct.context, %struct.context* %1, i32 0, i32 0, !dbg !6155
  store %struct.fw_ohci* %0, %struct.fw_ohci** %ohci1, align 8, !dbg !6156
  %2 = load i32, i32* %regs.addr, align 4, !dbg !6157
  %3 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6158
  %regs2 = getelementptr inbounds %struct.context, %struct.context* %3, i32 0, i32 1, !dbg !6159
  store i32 %2, i32* %regs2, align 8, !dbg !6160
  %4 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6161
  %total_allocation = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 2, !dbg !6162
  store i32 0, i32* %total_allocation, align 4, !dbg !6163
  %5 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6164
  %buffer_list = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 6, !dbg !6165
  call void @INIT_LIST_HEAD(%struct.list_head* %buffer_list) #11, !dbg !6166
  %6 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6167
  %call = call i32 @context_add_buffer(%struct.context* %6) #11, !dbg !6169
  %cmp = icmp slt i32 %call, 0, !dbg !6170
  br i1 %cmp, label %if.then, label %if.end, !dbg !6171

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6172
  br label %return, !dbg !6172

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6173, metadata !DIExpression()), !dbg !6175
  %7 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6175
  %buffer_list3 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 6, !dbg !6175
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %buffer_list3, i32 0, i32 0, !dbg !6175
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6175
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !6175
  store i8* %9, i8** %__mptr, align 8, !dbg !6175
  br label %do.body, !dbg !6175

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6176

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !6175
  %add.ptr = getelementptr i8, i8* %10, i64 0, !dbg !6175
  %11 = bitcast i8* %add.ptr to %struct.descriptor_buffer*, !dbg !6175
  store %struct.descriptor_buffer* %11, %struct.descriptor_buffer** %tmp, align 8, !dbg !6176
  %12 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %tmp, align 8, !dbg !6175
  %13 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6178
  %buffer_tail = getelementptr inbounds %struct.context, %struct.context* %13, i32 0, i32 7, !dbg !6179
  store %struct.descriptor_buffer* %12, %struct.descriptor_buffer** %buffer_tail, align 8, !dbg !6180
  %14 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6181
  %tasklet = getelementptr inbounds %struct.context, %struct.context* %14, i32 0, i32 12, !dbg !6182
  %15 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6183
  %16 = ptrtoint %struct.context* %15 to i64, !dbg !6184
  call void @tasklet_init(%struct.tasklet_struct* %tasklet, void (i64)* @context_tasklet, i64 %16) #11, !dbg !6185
  %17 = load i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)*, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)** %callback.addr, align 8, !dbg !6186
  %18 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6187
  %callback4 = getelementptr inbounds %struct.context, %struct.context* %18, i32 0, i32 11, !dbg !6188
  store i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)* %17, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)** %callback4, align 8, !dbg !6189
  %19 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6190
  %buffer_tail5 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 7, !dbg !6191
  %20 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %buffer_tail5, align 8, !dbg !6191
  %buffer = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %20, i32 0, i32 5, !dbg !6192
  %arraydecay = getelementptr inbounds [0 x %struct.descriptor], [0 x %struct.descriptor]* %buffer, i64 0, i64 0, !dbg !6193
  %21 = bitcast %struct.descriptor* %arraydecay to i8*, !dbg !6193
  call void @llvm.memset.p0i8.i64(i8* align 16 %21, i8 0, i64 16, i1 false), !dbg !6193
  %22 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6194
  %buffer_tail6 = getelementptr inbounds %struct.context, %struct.context* %22, i32 0, i32 7, !dbg !6195
  %23 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %buffer_tail6, align 8, !dbg !6195
  %buffer7 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %23, i32 0, i32 5, !dbg !6196
  %arraydecay8 = getelementptr inbounds [0 x %struct.descriptor], [0 x %struct.descriptor]* %buffer7, i64 0, i64 0, !dbg !6197
  %control = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arraydecay8, i32 0, i32 1, !dbg !6197
  store i16 4096, i16* %control, align 2, !dbg !6198
  %24 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6199
  %buffer_tail9 = getelementptr inbounds %struct.context, %struct.context* %24, i32 0, i32 7, !dbg !6200
  %25 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %buffer_tail9, align 8, !dbg !6200
  %buffer10 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %25, i32 0, i32 5, !dbg !6201
  %arraydecay11 = getelementptr inbounds [0 x %struct.descriptor], [0 x %struct.descriptor]* %buffer10, i64 0, i64 0, !dbg !6202
  %transfer_status = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arraydecay11, i32 0, i32 5, !dbg !6202
  store i16 -32751, i16* %transfer_status, align 2, !dbg !6203
  %26 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6204
  %buffer_tail12 = getelementptr inbounds %struct.context, %struct.context* %26, i32 0, i32 7, !dbg !6205
  %27 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %buffer_tail12, align 8, !dbg !6205
  %used = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %27, i32 0, i32 3, !dbg !6206
  %28 = load i64, i64* %used, align 16, !dbg !6207
  %add = add i64 %28, 16, !dbg !6207
  store i64 %add, i64* %used, align 16, !dbg !6207
  %29 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6208
  %buffer_tail13 = getelementptr inbounds %struct.context, %struct.context* %29, i32 0, i32 7, !dbg !6209
  %30 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %buffer_tail13, align 8, !dbg !6209
  %buffer14 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %30, i32 0, i32 5, !dbg !6210
  %arraydecay15 = getelementptr inbounds [0 x %struct.descriptor], [0 x %struct.descriptor]* %buffer14, i64 0, i64 0, !dbg !6208
  %31 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6211
  %last = getelementptr inbounds %struct.context, %struct.context* %31, i32 0, i32 8, !dbg !6212
  store %struct.descriptor* %arraydecay15, %struct.descriptor** %last, align 8, !dbg !6213
  %32 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6214
  %buffer_tail16 = getelementptr inbounds %struct.context, %struct.context* %32, i32 0, i32 7, !dbg !6215
  %33 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %buffer_tail16, align 8, !dbg !6215
  %buffer17 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %33, i32 0, i32 5, !dbg !6216
  %arraydecay18 = getelementptr inbounds [0 x %struct.descriptor], [0 x %struct.descriptor]* %buffer17, i64 0, i64 0, !dbg !6214
  %34 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6217
  %prev = getelementptr inbounds %struct.context, %struct.context* %34, i32 0, i32 9, !dbg !6218
  store %struct.descriptor* %arraydecay18, %struct.descriptor** %prev, align 8, !dbg !6219
  %35 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6220
  %prev_z = getelementptr inbounds %struct.context, %struct.context* %35, i32 0, i32 10, !dbg !6221
  store i32 1, i32* %prev_z, align 8, !dbg !6222
  store i32 0, i32* %retval, align 4, !dbg !6223
  br label %return, !dbg !6223

return:                                           ; preds = %do.end, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !6224
  ret i32 %36, !dbg !6224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @handle_at_packet(%struct.context* %context, %struct.descriptor* %d, %struct.descriptor* %last) #2 !dbg !6225 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca %struct.context*, align 8
  %d.addr = alloca %struct.descriptor*, align 8
  %last.addr = alloca %struct.descriptor*, align 8
  %driver_data = alloca %struct.driver_data*, align 8
  %packet = alloca %struct.fw_packet*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %evt = alloca i32, align 4
  store %struct.context* %context, %struct.context** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %context.addr, metadata !6226, metadata !DIExpression()), !dbg !6227
  store %struct.descriptor* %d, %struct.descriptor** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d.addr, metadata !6228, metadata !DIExpression()), !dbg !6229
  store %struct.descriptor* %last, %struct.descriptor** %last.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.descriptor** %last.addr, metadata !6230, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.declare(metadata %struct.driver_data** %driver_data, metadata !6232, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.declare(metadata %struct.fw_packet** %packet, metadata !6234, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !6236, metadata !DIExpression()), !dbg !6237
  %0 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !6238
  %ohci1 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0, !dbg !6239
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci1, align 8, !dbg !6239
  store %struct.fw_ohci* %1, %struct.fw_ohci** %ohci, align 8, !dbg !6237
  call void @llvm.dbg.declare(metadata i32* %evt, metadata !6240, metadata !DIExpression()), !dbg !6241
  %2 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !6242
  %transfer_status = getelementptr inbounds %struct.descriptor, %struct.descriptor* %2, i32 0, i32 5, !dbg !6244
  %3 = load i16, i16* %transfer_status, align 2, !dbg !6244
  %conv = zext i16 %3 to i32, !dbg !6242
  %cmp = icmp eq i32 %conv, 0, !dbg !6245
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6246

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !6247
  %flushing = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 5, !dbg !6248
  %5 = load i8, i8* %flushing, align 1, !dbg !6248
  %tobool = trunc i8 %5 to i1, !dbg !6248
  br i1 %tobool, label %if.end, label %if.then, !dbg !6249

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !6250
  br label %return, !dbg !6250

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !6251
  %arrayidx = getelementptr %struct.descriptor, %struct.descriptor* %6, i64 3, !dbg !6251
  %7 = bitcast %struct.descriptor* %arrayidx to %struct.driver_data*, !dbg !6252
  store %struct.driver_data* %7, %struct.driver_data** %driver_data, align 8, !dbg !6253
  %8 = load %struct.driver_data*, %struct.driver_data** %driver_data, align 8, !dbg !6254
  %packet3 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 1, !dbg !6255
  %9 = load %struct.fw_packet*, %struct.fw_packet** %packet3, align 8, !dbg !6255
  store %struct.fw_packet* %9, %struct.fw_packet** %packet, align 8, !dbg !6256
  %10 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6257
  %cmp4 = icmp eq %struct.fw_packet* %10, null, !dbg !6259
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !6260

if.then6:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !6261
  br label %return, !dbg !6261

if.end7:                                          ; preds = %if.end
  %11 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6262
  %payload_mapped = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %11, i32 0, i32 7, !dbg !6264
  %12 = load i8, i8* %payload_mapped, align 8, !dbg !6264
  %tobool8 = trunc i8 %12 to i1, !dbg !6264
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6265

if.then9:                                         ; preds = %if.end7
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6266
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %13, i32 0, i32 0, !dbg !6266
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !6266
  %14 = load %struct.device*, %struct.device** %device, align 8, !dbg !6266
  %15 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6266
  %payload_bus = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %15, i32 0, i32 6, !dbg !6266
  %16 = load i64, i64* %payload_bus, align 8, !dbg !6266
  %17 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6266
  %payload_length = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %17, i32 0, i32 5, !dbg !6266
  %18 = load i64, i64* %payload_length, align 8, !dbg !6266
  call void @dma_unmap_single_attrs(%struct.device* %14, i64 %16, i64 %18, i32 1, i64 0) #11, !dbg !6266
  br label %if.end10, !dbg !6266

if.end10:                                         ; preds = %if.then9, %if.end7
  %19 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !6267
  %transfer_status11 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %19, i32 0, i32 5, !dbg !6267
  %20 = load i16, i16* %transfer_status11, align 2, !dbg !6267
  %conv12 = zext i16 %20 to i32, !dbg !6267
  %and = and i32 %conv12, 31, !dbg !6268
  store i32 %and, i32* %evt, align 4, !dbg !6269
  %21 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !6270
  %res_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %21, i32 0, i32 4, !dbg !6270
  %22 = load i16, i16* %res_count, align 4, !dbg !6270
  %conv13 = zext i16 %22 to i32, !dbg !6270
  %23 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6271
  %timestamp = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %23, i32 0, i32 8, !dbg !6272
  store i32 %conv13, i32* %timestamp, align 4, !dbg !6273
  %24 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6274
  %25 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6275
  %speed = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %25, i32 0, i32 0, !dbg !6276
  %26 = load i32, i32* %speed, align 8, !dbg !6276
  %27 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6277
  %header = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %27, i32 0, i32 2, !dbg !6278
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %header, i64 0, i64 0, !dbg !6277
  %28 = load i32, i32* %evt, align 4, !dbg !6279
  call void @log_ar_at_event(%struct.fw_ohci* %24, i8 signext 84, i32 %26, i32* %arraydecay, i32 %28) #11, !dbg !6280
  %29 = load i32, i32* %evt, align 4, !dbg !6281
  switch i32 %29, label %sw.default [
    i32 10, label %sw.bb
    i32 15, label %sw.bb14
    i32 3, label %sw.bb16
    i32 17, label %sw.bb23
    i32 18, label %sw.bb23
    i32 20, label %sw.bb23
    i32 21, label %sw.bb23
    i32 22, label %sw.bb23
    i32 29, label %sw.bb23
    i32 30, label %sw.bb23
    i32 0, label %sw.bb25
  ], !dbg !6282

sw.bb:                                            ; preds = %if.end10
  %30 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6283
  %ack = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %30, i32 0, i32 10, !dbg !6285
  store i32 17, i32* %ack, align 8, !dbg !6286
  br label %sw.epilog, !dbg !6287

sw.bb14:                                          ; preds = %if.end10
  %31 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6288
  %ack15 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %31, i32 0, i32 10, !dbg !6289
  store i32 19, i32* %ack15, align 8, !dbg !6290
  br label %sw.epilog, !dbg !6291

sw.bb16:                                          ; preds = %if.end10
  %32 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !6292
  %flushing17 = getelementptr inbounds %struct.context, %struct.context* %32, i32 0, i32 5, !dbg !6294
  %33 = load i8, i8* %flushing17, align 1, !dbg !6294
  %tobool18 = trunc i8 %33 to i1, !dbg !6294
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !6295

if.then19:                                        ; preds = %sw.bb16
  %34 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6296
  %ack20 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %34, i32 0, i32 10, !dbg !6297
  store i32 19, i32* %ack20, align 8, !dbg !6298
  br label %if.end22, !dbg !6296

if.else:                                          ; preds = %sw.bb16
  %35 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6299
  %ack21 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %35, i32 0, i32 10, !dbg !6301
  store i32 20, i32* %ack21, align 8, !dbg !6302
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then19
  br label %sw.epilog, !dbg !6303

sw.bb23:                                          ; preds = %if.end10, %if.end10, %if.end10, %if.end10, %if.end10, %if.end10, %if.end10
  %36 = load i32, i32* %evt, align 4, !dbg !6304
  %sub = sub i32 %36, 16, !dbg !6305
  %37 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6306
  %ack24 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %37, i32 0, i32 10, !dbg !6307
  store i32 %sub, i32* %ack24, align 8, !dbg !6308
  br label %sw.epilog, !dbg !6309

sw.bb25:                                          ; preds = %if.end10
  %38 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !6310
  %flushing26 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 5, !dbg !6312
  %39 = load i8, i8* %flushing26, align 1, !dbg !6312
  %tobool27 = trunc i8 %39 to i1, !dbg !6312
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !6313

if.then28:                                        ; preds = %sw.bb25
  %40 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6314
  %ack29 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %40, i32 0, i32 10, !dbg !6316
  store i32 19, i32* %ack29, align 8, !dbg !6317
  br label %sw.epilog, !dbg !6318

if.end30:                                         ; preds = %sw.bb25
  br label %sw.default, !dbg !6312

sw.default:                                       ; preds = %if.end10, %if.end30
  %41 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6319
  %ack31 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %41, i32 0, i32 10, !dbg !6320
  store i32 16, i32* %ack31, align 8, !dbg !6321
  br label %sw.epilog, !dbg !6322

sw.epilog:                                        ; preds = %sw.default, %if.then28, %sw.bb23, %if.end22, %sw.bb14, %sw.bb
  %42 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6323
  %callback = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %42, i32 0, i32 9, !dbg !6324
  %43 = load void (%struct.fw_packet*, %struct.fw_card*, i32)*, void (%struct.fw_packet*, %struct.fw_card*, i32)** %callback, align 8, !dbg !6324
  %44 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6325
  %45 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6326
  %card32 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %45, i32 0, i32 0, !dbg !6327
  %46 = load %struct.fw_packet*, %struct.fw_packet** %packet, align 8, !dbg !6328
  %ack33 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %46, i32 0, i32 10, !dbg !6329
  %47 = load i32, i32* %ack33, align 8, !dbg !6329
  call void %43(%struct.fw_packet* %44, %struct.fw_card* %card32, i32 %47) #11, !dbg !6323
  store i32 1, i32* %retval, align 4, !dbg !6330
  br label %return, !dbg !6330

return:                                           ; preds = %sw.epilog, %if.then6, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !6331
  ret i32 %48, !dbg !6331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reg_write(%struct.fw_ohci* %ohci, i32 %offset, i32 %data) #2 !dbg !6332 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %offset.addr = alloca i32, align 4
  %data.addr = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !6337, metadata !DIExpression()), !dbg !6338
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6339, metadata !DIExpression()), !dbg !6340
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !6341, metadata !DIExpression()), !dbg !6342
  %0 = load i32, i32* %data.addr, align 4, !dbg !6343
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !6344
  %registers = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 1, !dbg !6345
  %2 = load i8*, i8** %registers, align 8, !dbg !6345
  %3 = load i32, i32* %offset.addr, align 4, !dbg !6346
  %idx.ext = sext i32 %3 to i64, !dbg !6347
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !6347
  call void @writel(i32 %0, i8* %add.ptr) #11, !dbg !6348
  ret void, !dbg !6349
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @reg_read(%struct.fw_ohci* %ohci, i32 %offset) #2 !dbg !6350 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !6353, metadata !DIExpression()), !dbg !6354
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6355, metadata !DIExpression()), !dbg !6356
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !6357
  %registers = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %0, i32 0, i32 1, !dbg !6358
  %1 = load i8*, i8** %registers, align 8, !dbg !6358
  %2 = load i32, i32* %offset.addr, align 4, !dbg !6359
  %idx.ext = sext i32 %2 to i64, !dbg !6360
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !6360
  %call = call i32 @readl(i8* %add.ptr) #11, !dbg !6361
  ret i32 %call, !dbg !6362
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: cold noredzone
declare dso_local void @_dev_notice(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_msi(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !6363 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6371, metadata !DIExpression()), !dbg !6372
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !6373, metadata !DIExpression()), !dbg !6374
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !6375, metadata !DIExpression()), !dbg !6376
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6377, metadata !DIExpression()), !dbg !6378
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !6379, metadata !DIExpression()), !dbg !6380
  %0 = load i32, i32* %irq.addr, align 4, !dbg !6381
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !6382
  %2 = load i64, i64* %flags.addr, align 8, !dbg !6383
  %3 = load i8*, i8** %name.addr, align 8, !dbg !6384
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !6385
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !6386
  ret i32 %call, !dbg !6387
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @irq_handler(i32 %irq, i8* %data) #2 !dbg !6388 {
entry:
  %lock.addr.i129 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i129, metadata !6389, metadata !DIExpression()), !dbg !6391
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6395, metadata !DIExpression()), !dbg !6397
  %x.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i126, metadata !6399, metadata !DIExpression()), !dbg !6402
  %r.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i127, metadata !6407, metadata !DIExpression()), !dbg !6408
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6399, metadata !DIExpression()), !dbg !6409
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !6407, metadata !DIExpression()), !dbg !6414
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %event = alloca i32, align 4
  %iso_event = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6415, metadata !DIExpression()), !dbg !6416
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6417, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !6419, metadata !DIExpression()), !dbg !6420
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6421
  %1 = bitcast i8* %0 to %struct.fw_ohci*, !dbg !6421
  store %struct.fw_ohci* %1, %struct.fw_ohci** %ohci, align 8, !dbg !6420
  call void @llvm.dbg.declare(metadata i32* %event, metadata !6422, metadata !DIExpression()), !dbg !6423
  call void @llvm.dbg.declare(metadata i32* %iso_event, metadata !6424, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6426, metadata !DIExpression()), !dbg !6427
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6428
  %call = call i32 @reg_read(%struct.fw_ohci* %2, i32 132) #11, !dbg !6429
  store i32 %call, i32* %event, align 4, !dbg !6430
  %3 = load i32, i32* %event, align 4, !dbg !6431
  %tobool = icmp ne i32 %3, 0, !dbg !6431
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6433

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %event, align 4, !dbg !6434
  %neg = xor i32 %4, -1, !dbg !6435
  %tobool1 = icmp ne i32 %neg, 0, !dbg !6435
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6436

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !6437
  br label %return, !dbg !6437

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6438
  %6 = load i32, i32* %event, align 4, !dbg !6439
  %and = and i32 %6, -131329, !dbg !6440
  call void @reg_write(%struct.fw_ohci* %5, i32 132, i32 %and) #11, !dbg !6441
  %7 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6442
  %8 = load i32, i32* %event, align 4, !dbg !6443
  call void @log_irqs(%struct.fw_ohci* %7, i32 %8) #11, !dbg !6444
  %9 = load i32, i32* %event, align 4, !dbg !6445
  %and2 = and i32 %9, 65536, !dbg !6447
  %tobool3 = icmp ne i32 %and2, 0, !dbg !6447
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !6448

if.then4:                                         ; preds = %if.end
  %10 = load %struct.workqueue_struct*, %struct.workqueue_struct** @selfid_workqueue, align 8, !dbg !6449
  %11 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6450
  %bus_reset_work = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %11, i32 0, i32 37, !dbg !6451
  %call5 = call zeroext i1 @queue_work(%struct.workqueue_struct* %10, %struct.work_struct* %bus_reset_work) #11, !dbg !6452
  br label %if.end6, !dbg !6452

if.end6:                                          ; preds = %if.then4, %if.end
  %12 = load i32, i32* %event, align 4, !dbg !6453
  %and7 = and i32 %12, 16, !dbg !6455
  %tobool8 = icmp ne i32 %and7, 0, !dbg !6455
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6456

if.then9:                                         ; preds = %if.end6
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6457
  %ar_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %13, i32 0, i32 17, !dbg !6458
  %tasklet = getelementptr inbounds %struct.ar_context, %struct.ar_context* %ar_request_ctx, i32 0, i32 8, !dbg !6459
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet) #11, !dbg !6460
  br label %if.end10, !dbg !6460

if.end10:                                         ; preds = %if.then9, %if.end6
  %14 = load i32, i32* %event, align 4, !dbg !6461
  %and11 = and i32 %14, 32, !dbg !6463
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6463
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !6464

if.then13:                                        ; preds = %if.end10
  %15 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6465
  %ar_response_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %15, i32 0, i32 18, !dbg !6466
  %tasklet14 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %ar_response_ctx, i32 0, i32 8, !dbg !6467
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet14) #11, !dbg !6468
  br label %if.end15, !dbg !6468

if.end15:                                         ; preds = %if.then13, %if.end10
  %16 = load i32, i32* %event, align 4, !dbg !6469
  %and16 = and i32 %16, 1, !dbg !6471
  %tobool17 = icmp ne i32 %and16, 0, !dbg !6471
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !6472

if.then18:                                        ; preds = %if.end15
  %17 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6473
  %at_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %17, i32 0, i32 19, !dbg !6474
  %tasklet19 = getelementptr inbounds %struct.context, %struct.context* %at_request_ctx, i32 0, i32 12, !dbg !6475
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet19) #11, !dbg !6476
  br label %if.end20, !dbg !6476

if.end20:                                         ; preds = %if.then18, %if.end15
  %18 = load i32, i32* %event, align 4, !dbg !6477
  %and21 = and i32 %18, 2, !dbg !6479
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6479
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !6480

if.then23:                                        ; preds = %if.end20
  %19 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6481
  %at_response_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %19, i32 0, i32 20, !dbg !6482
  %tasklet24 = getelementptr inbounds %struct.context, %struct.context* %at_response_ctx, i32 0, i32 12, !dbg !6483
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet24) #11, !dbg !6484
  br label %if.end25, !dbg !6484

if.end25:                                         ; preds = %if.then23, %if.end20
  %20 = load i32, i32* %event, align 4, !dbg !6485
  %and26 = and i32 %20, 128, !dbg !6486
  %tobool27 = icmp ne i32 %and26, 0, !dbg !6486
  br i1 %tobool27, label %if.then28, label %if.end35, !dbg !6487

if.then28:                                        ; preds = %if.end25
  %21 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6488
  %call29 = call i32 @reg_read(%struct.fw_ohci* %21, i32 164) #11, !dbg !6489
  store i32 %call29, i32* %iso_event, align 4, !dbg !6490
  %22 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6491
  %23 = load i32, i32* %iso_event, align 4, !dbg !6492
  call void @reg_write(%struct.fw_ohci* %22, i32 164, i32 %23) #11, !dbg !6493
  br label %while.cond, !dbg !6494

while.cond:                                       ; preds = %while.body, %if.then28
  %24 = load i32, i32* %iso_event, align 4, !dbg !6495
  %tobool30 = icmp ne i32 %24, 0, !dbg !6494
  br i1 %tobool30, label %while.body, label %while.end, !dbg !6494

while.body:                                       ; preds = %while.cond
  %25 = load i32, i32* %iso_event, align 4, !dbg !6496
  store i32 %25, i32* %x.addr.i, align 4
  %26 = load i32, i32* %x.addr.i, align 4, !dbg !6497
  %27 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %26, i32 -1) #9, !dbg !6498, !srcloc !6499
  store i32 %27, i32* %r.i, align 4, !dbg !6498
  %28 = load i32, i32* %r.i, align 4, !dbg !6500
  %add.i = add i32 %28, 1, !dbg !6501
  %sub = sub i32 %add.i, 1, !dbg !6502
  store i32 %sub, i32* %i, align 4, !dbg !6503
  %29 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6504
  %ir_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %29, i32 0, i32 27, !dbg !6505
  %30 = load %struct.iso_context*, %struct.iso_context** %ir_context_list, align 8, !dbg !6505
  %31 = load i32, i32* %i, align 4, !dbg !6506
  %idxprom = sext i32 %31 to i64, !dbg !6504
  %arrayidx = getelementptr %struct.iso_context, %struct.iso_context* %30, i64 %idxprom, !dbg !6504
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %arrayidx, i32 0, i32 1, !dbg !6507
  %tasklet32 = getelementptr inbounds %struct.context, %struct.context* %context, i32 0, i32 12, !dbg !6508
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet32) #11, !dbg !6509
  %32 = load i32, i32* %i, align 4, !dbg !6510
  %shl = shl i32 1, %32, !dbg !6511
  %neg33 = xor i32 %shl, -1, !dbg !6512
  %33 = load i32, i32* %iso_event, align 4, !dbg !6513
  %and34 = and i32 %33, %neg33, !dbg !6513
  store i32 %and34, i32* %iso_event, align 4, !dbg !6513
  br label %while.cond, !dbg !6494, !llvm.loop !6514

while.end:                                        ; preds = %while.cond
  br label %if.end35, !dbg !6516

if.end35:                                         ; preds = %while.end, %if.end25
  %34 = load i32, i32* %event, align 4, !dbg !6517
  %and36 = and i32 %34, 64, !dbg !6518
  %tobool37 = icmp ne i32 %and36, 0, !dbg !6518
  br i1 %tobool37, label %if.then38, label %if.end53, !dbg !6519

if.then38:                                        ; preds = %if.end35
  %35 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6520
  %call39 = call i32 @reg_read(%struct.fw_ohci* %35, i32 148) #11, !dbg !6521
  store i32 %call39, i32* %iso_event, align 4, !dbg !6522
  %36 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6523
  %37 = load i32, i32* %iso_event, align 4, !dbg !6524
  call void @reg_write(%struct.fw_ohci* %36, i32 148, i32 %37) #11, !dbg !6525
  br label %while.cond40, !dbg !6526

while.cond40:                                     ; preds = %while.body42, %if.then38
  %38 = load i32, i32* %iso_event, align 4, !dbg !6527
  %tobool41 = icmp ne i32 %38, 0, !dbg !6526
  br i1 %tobool41, label %while.body42, label %while.end52, !dbg !6526

while.body42:                                     ; preds = %while.cond40
  %39 = load i32, i32* %iso_event, align 4, !dbg !6528
  store i32 %39, i32* %x.addr.i126, align 4
  %40 = load i32, i32* %x.addr.i126, align 4, !dbg !6529
  %41 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %40, i32 -1) #9, !dbg !6530, !srcloc !6499
  store i32 %41, i32* %r.i127, align 4, !dbg !6530
  %42 = load i32, i32* %r.i127, align 4, !dbg !6531
  %add.i128 = add i32 %42, 1, !dbg !6532
  %sub44 = sub i32 %add.i128, 1, !dbg !6533
  store i32 %sub44, i32* %i, align 4, !dbg !6534
  %43 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6535
  %it_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %43, i32 0, i32 23, !dbg !6536
  %44 = load %struct.iso_context*, %struct.iso_context** %it_context_list, align 8, !dbg !6536
  %45 = load i32, i32* %i, align 4, !dbg !6537
  %idxprom45 = sext i32 %45 to i64, !dbg !6535
  %arrayidx46 = getelementptr %struct.iso_context, %struct.iso_context* %44, i64 %idxprom45, !dbg !6535
  %context47 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %arrayidx46, i32 0, i32 1, !dbg !6538
  %tasklet48 = getelementptr inbounds %struct.context, %struct.context* %context47, i32 0, i32 12, !dbg !6539
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet48) #11, !dbg !6540
  %46 = load i32, i32* %i, align 4, !dbg !6541
  %shl49 = shl i32 1, %46, !dbg !6542
  %neg50 = xor i32 %shl49, -1, !dbg !6543
  %47 = load i32, i32* %iso_event, align 4, !dbg !6544
  %and51 = and i32 %47, %neg50, !dbg !6544
  store i32 %and51, i32* %iso_event, align 4, !dbg !6544
  br label %while.cond40, !dbg !6526, !llvm.loop !6545

while.end52:                                      ; preds = %while.cond40
  br label %if.end53, !dbg !6547

if.end53:                                         ; preds = %while.end52, %if.end35
  %48 = load i32, i32* %event, align 4, !dbg !6548
  %and54 = and i32 %48, 262144, !dbg !6548
  %tobool55 = icmp ne i32 %and54, 0, !dbg !6548
  %lnot = xor i1 %tobool55, true, !dbg !6548
  %lnot56 = xor i1 %lnot, true, !dbg !6548
  %lnot.ext = zext i1 %lnot56 to i32, !dbg !6548
  %conv = sext i32 %lnot.ext to i64, !dbg !6548
  %tobool57 = icmp ne i64 %conv, 0, !dbg !6548
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !6550

if.then58:                                        ; preds = %if.end53
  %49 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6551
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %49, i32 0, i32 0, !dbg !6551
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !6551
  %50 = load %struct.device*, %struct.device** %device, align 8, !dbg !6551
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %50, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i64 0, i64 0)) #12, !dbg !6551
  br label %if.end59, !dbg !6551

if.end59:                                         ; preds = %if.then58, %if.end53
  %51 = load i32, i32* %event, align 4, !dbg !6552
  %and60 = and i32 %51, 256, !dbg !6552
  %tobool61 = icmp ne i32 %and60, 0, !dbg !6552
  %lnot62 = xor i1 %tobool61, true, !dbg !6552
  %lnot64 = xor i1 %lnot62, true, !dbg !6552
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !6552
  %conv66 = sext i32 %lnot.ext65 to i64, !dbg !6552
  %tobool67 = icmp ne i64 %conv66, 0, !dbg !6552
  br i1 %tobool67, label %if.then68, label %if.end77, !dbg !6554

if.then68:                                        ; preds = %if.end59
  %52 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6555
  %call69 = call i32 @reg_read(%struct.fw_ohci* %52, i32 60) #11, !dbg !6557
  %53 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6558
  %call70 = call i32 @reg_read(%struct.fw_ohci* %53, i32 56) #11, !dbg !6559
  %54 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6560
  call void @reg_write(%struct.fw_ohci* %54, i32 132, i32 256) #11, !dbg !6561
  %call71 = call i32 @__printk_ratelimit(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.irq_handler, i64 0, i64 0)) #11, !dbg !6562
  %tobool72 = icmp ne i32 %call71, 0, !dbg !6562
  br i1 %tobool72, label %if.then73, label %if.end76, !dbg !6564

if.then73:                                        ; preds = %if.then68
  %55 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6565
  %card74 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %55, i32 0, i32 0, !dbg !6565
  %device75 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card74, i32 0, i32 1, !dbg !6565
  %56 = load %struct.device*, %struct.device** %device75, align 8, !dbg !6565
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %56, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.97, i64 0, i64 0)) #12, !dbg !6565
  br label %if.end76, !dbg !6565

if.end76:                                         ; preds = %if.then73, %if.then68
  br label %if.end77, !dbg !6566

if.end77:                                         ; preds = %if.end76, %if.end59
  %57 = load i32, i32* %event, align 4, !dbg !6567
  %and78 = and i32 %57, 33554432, !dbg !6567
  %tobool79 = icmp ne i32 %and78, 0, !dbg !6567
  %lnot80 = xor i1 %tobool79, true, !dbg !6567
  %lnot82 = xor i1 %lnot80, true, !dbg !6567
  %lnot.ext83 = zext i1 %lnot82 to i32, !dbg !6567
  %conv84 = sext i32 %lnot.ext83 to i64, !dbg !6567
  %tobool85 = icmp ne i64 %conv84, 0, !dbg !6567
  br i1 %tobool85, label %if.then86, label %if.end93, !dbg !6569

if.then86:                                        ; preds = %if.end77
  %call87 = call i32 @__printk_ratelimit(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.irq_handler, i64 0, i64 0)) #11, !dbg !6570
  %tobool88 = icmp ne i32 %call87, 0, !dbg !6570
  br i1 %tobool88, label %if.then89, label %if.end92, !dbg !6573

if.then89:                                        ; preds = %if.then86
  %58 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6574
  %card90 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %58, i32 0, i32 0, !dbg !6574
  %device91 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card90, i32 0, i32 1, !dbg !6574
  %59 = load %struct.device*, %struct.device** %device91, align 8, !dbg !6574
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %59, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.98, i64 0, i64 0)) #12, !dbg !6574
  br label %if.end92, !dbg !6574

if.end92:                                         ; preds = %if.then89, %if.then86
  %60 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6575
  call void @reg_write(%struct.fw_ohci* %60, i32 224, i32 2097152) #11, !dbg !6576
  br label %if.end93, !dbg !6577

if.end93:                                         ; preds = %if.end92, %if.end77
  %61 = load i32, i32* %event, align 4, !dbg !6578
  %and94 = and i32 %61, 8388608, !dbg !6578
  %tobool95 = icmp ne i32 %and94, 0, !dbg !6578
  %lnot96 = xor i1 %tobool95, true, !dbg !6578
  %lnot98 = xor i1 %lnot96, true, !dbg !6578
  %lnot.ext99 = zext i1 %lnot98 to i32, !dbg !6578
  %conv100 = sext i32 %lnot.ext99 to i64, !dbg !6578
  %tobool101 = icmp ne i64 %conv100, 0, !dbg !6578
  br i1 %tobool101, label %if.then102, label %if.end109, !dbg !6580

if.then102:                                       ; preds = %if.end93
  %call103 = call i32 @__printk_ratelimit(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.irq_handler, i64 0, i64 0)) #11, !dbg !6581
  %tobool104 = icmp ne i32 %call103, 0, !dbg !6581
  br i1 %tobool104, label %if.then105, label %if.end108, !dbg !6584

if.then105:                                       ; preds = %if.then102
  %62 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6585
  %card106 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %62, i32 0, i32 0, !dbg !6585
  %device107 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card106, i32 0, i32 1, !dbg !6585
  %63 = load %struct.device*, %struct.device** %device107, align 8, !dbg !6585
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %63, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.99, i64 0, i64 0)) #12, !dbg !6585
  br label %if.end108, !dbg !6585

if.end108:                                        ; preds = %if.then105, %if.then102
  br label %if.end109, !dbg !6586

if.end109:                                        ; preds = %if.end108, %if.end93
  %64 = load i32, i32* %event, align 4, !dbg !6587
  %and110 = and i32 %64, 16777216, !dbg !6587
  %tobool111 = icmp ne i32 %and110, 0, !dbg !6587
  %lnot112 = xor i1 %tobool111, true, !dbg !6587
  %lnot114 = xor i1 %lnot112, true, !dbg !6587
  %lnot.ext115 = zext i1 %lnot114 to i32, !dbg !6587
  %conv116 = sext i32 %lnot.ext115 to i64, !dbg !6587
  %tobool117 = icmp ne i64 %conv116, 0, !dbg !6587
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !6589

if.then118:                                       ; preds = %if.end109
  %65 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6590
  call void @handle_dead_contexts(%struct.fw_ohci* %65) #11, !dbg !6591
  br label %if.end119, !dbg !6591

if.end119:                                        ; preds = %if.then118, %if.end109
  %66 = load i32, i32* %event, align 4, !dbg !6592
  %and120 = and i32 %66, 2097152, !dbg !6593
  %tobool121 = icmp ne i32 %and120, 0, !dbg !6593
  br i1 %tobool121, label %if.then122, label %if.else, !dbg !6594

if.then122:                                       ; preds = %if.end119
  %67 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6595
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %67, i32 0, i32 13, !dbg !6596
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6597, !srcloc !6599
  %68 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6600
  %69 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %68, i32 0, i32 0, !dbg !6600
  %rlock.i = bitcast %union.anon.4* %69 to %struct.raw_spinlock*, !dbg !6600
  %70 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6602
  %call123 = call i32 @update_bus_time(%struct.fw_ohci* %70) #11, !dbg !6603
  %71 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6604
  %lock124 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %71, i32 0, i32 13, !dbg !6605
  store %struct.spinlock* %lock124, %struct.spinlock** %lock.addr.i129, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6606, !srcloc !6608
  %72 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i129, align 8, !dbg !6609
  %73 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %72, i32 0, i32 0, !dbg !6609
  %rlock.i130 = bitcast %union.anon.4* %73 to %struct.raw_spinlock*, !dbg !6609
  br label %if.end125, !dbg !6611

if.else:                                          ; preds = %if.end119
  %74 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6612
  call void @flush_writes(%struct.fw_ohci* %74) #11, !dbg !6613
  br label %if.end125

if.end125:                                        ; preds = %if.else, %if.then122
  store i32 1, i32* %retval, align 4, !dbg !6614
  br label %return, !dbg !6614

return:                                           ; preds = %if.end125, %if.then
  %75 = load i32, i32* %retval, align 4, !dbg !6615
  ret i32 %75, !dbg !6615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_dev_msi_enabled(%struct.pci_dev* %pci_dev) #2 !dbg !6616 {
entry:
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !6619, metadata !DIExpression()), !dbg !6620
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6621
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6622
  %1 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !6622
  %bf.load = load i40, i40* %1, align 1, !dbg !6622
  %bf.lshr = lshr i40 %bf.load, 12, !dbg !6622
  %bf.clear = and i40 %bf.lshr, 1, !dbg !6622
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !6622
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6621
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !6623

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6624
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !6625
  %3 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !6625
  %bf.load1 = load i40, i40* %3, align 1, !dbg !6625
  %bf.lshr2 = lshr i40 %bf.load1, 13, !dbg !6625
  %bf.clear3 = and i40 %bf.lshr2, 1, !dbg !6625
  %bf.cast4 = trunc i40 %bf.clear3 to i32, !dbg !6625
  %tobool5 = icmp ne i32 %bf.cast4, 0, !dbg !6623
  br label %lor.end, !dbg !6623

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool5, %lor.rhs ]
  ret i1 %4, !dbg !6626
}

; Function Attrs: noredzone
declare dso_local i32 @fw_card_add(%struct.fw_card*, i32, i32, i64) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_msi(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @context_release(%struct.context* %ctx) #2 !dbg !6627 {
entry:
  %ctx.addr = alloca %struct.context*, align 8
  %card = alloca %struct.fw_card*, align 8
  %desc = alloca %struct.descriptor_buffer*, align 8
  %tmp = alloca %struct.descriptor_buffer*, align 8
  %__mptr = alloca i8*, align 8
  %tmp2 = alloca %struct.descriptor_buffer*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp7 = alloca %struct.descriptor_buffer*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.descriptor_buffer*, align 8
  store %struct.context* %ctx, %struct.context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %ctx.addr, metadata !6630, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card, metadata !6632, metadata !DIExpression()), !dbg !6633
  %0 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6634
  %ohci = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0, !dbg !6635
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6635
  %card1 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 0, !dbg !6636
  store %struct.fw_card* %card1, %struct.fw_card** %card, align 8, !dbg !6633
  call void @llvm.dbg.declare(metadata %struct.descriptor_buffer** %desc, metadata !6637, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.declare(metadata %struct.descriptor_buffer** %tmp, metadata !6639, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6641, metadata !DIExpression()), !dbg !6644
  %2 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6644
  %buffer_list = getelementptr inbounds %struct.context, %struct.context* %2, i32 0, i32 6, !dbg !6644
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %buffer_list, i32 0, i32 0, !dbg !6644
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6644
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !6644
  store i8* %4, i8** %__mptr, align 8, !dbg !6644
  br label %do.body, !dbg !6644

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6645

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !6644
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !6644
  %6 = bitcast i8* %add.ptr to %struct.descriptor_buffer*, !dbg !6644
  store %struct.descriptor_buffer* %6, %struct.descriptor_buffer** %tmp2, align 8, !dbg !6645
  %7 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %tmp2, align 8, !dbg !6644
  store %struct.descriptor_buffer* %7, %struct.descriptor_buffer** %desc, align 8, !dbg !6647
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !6648, metadata !DIExpression()), !dbg !6650
  %8 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !6650
  %list = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %8, i32 0, i32 0, !dbg !6650
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !6650
  %9 = load %struct.list_head*, %struct.list_head** %next4, align 16, !dbg !6650
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !6650
  store i8* %10, i8** %__mptr3, align 8, !dbg !6650
  br label %do.body5, !dbg !6650

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !6651

do.end6:                                          ; preds = %do.body5
  %11 = load i8*, i8** %__mptr3, align 8, !dbg !6650
  %add.ptr8 = getelementptr i8, i8* %11, i64 0, !dbg !6650
  %12 = bitcast i8* %add.ptr8 to %struct.descriptor_buffer*, !dbg !6650
  store %struct.descriptor_buffer* %12, %struct.descriptor_buffer** %tmp7, align 8, !dbg !6651
  %13 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %tmp7, align 8, !dbg !6650
  store %struct.descriptor_buffer* %13, %struct.descriptor_buffer** %tmp, align 8, !dbg !6647
  br label %for.cond, !dbg !6647

for.cond:                                         ; preds = %do.end15, %do.end6
  %14 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !6653
  %list9 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %14, i32 0, i32 0, !dbg !6653
  %15 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !6653
  %buffer_list10 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 6, !dbg !6653
  %cmp = icmp eq %struct.list_head* %list9, %buffer_list10, !dbg !6653
  %lnot = xor i1 %cmp, true, !dbg !6653
  br i1 %lnot, label %for.body, label %for.end, !dbg !6647

for.body:                                         ; preds = %for.cond
  %16 = load %struct.fw_card*, %struct.fw_card** %card, align 8, !dbg !6655
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %16, i32 0, i32 1, !dbg !6656
  %17 = load %struct.device*, %struct.device** %device, align 8, !dbg !6656
  %18 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !6657
  %19 = bitcast %struct.descriptor_buffer* %18 to i8*, !dbg !6657
  %20 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !6658
  %buffer_bus = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %20, i32 0, i32 1, !dbg !6659
  %21 = load i64, i64* %buffer_bus, align 16, !dbg !6659
  %22 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !6660
  %buffer = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %22, i32 0, i32 5, !dbg !6661
  %23 = bitcast [0 x %struct.descriptor]* %buffer to i8*, !dbg !6662
  %24 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !6663
  %25 = bitcast %struct.descriptor_buffer* %24 to i8*, !dbg !6664
  %sub.ptr.lhs.cast = ptrtoint i8* %23 to i64, !dbg !6665
  %sub.ptr.rhs.cast = ptrtoint i8* %25 to i64, !dbg !6665
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6665
  %sub = sub i64 %21, %sub.ptr.sub, !dbg !6666
  call void @dma_free_coherent(%struct.device* %17, i64 4096, i8* %19, i64 %sub) #11, !dbg !6667
  br label %for.inc, !dbg !6667

for.inc:                                          ; preds = %for.body
  %26 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %tmp, align 8, !dbg !6653
  store %struct.descriptor_buffer* %26, %struct.descriptor_buffer** %desc, align 8, !dbg !6653
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !6668, metadata !DIExpression()), !dbg !6670
  %27 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %tmp, align 8, !dbg !6670
  %list12 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %27, i32 0, i32 0, !dbg !6670
  %next13 = getelementptr inbounds %struct.list_head, %struct.list_head* %list12, i32 0, i32 0, !dbg !6670
  %28 = load %struct.list_head*, %struct.list_head** %next13, align 16, !dbg !6670
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !6670
  store i8* %29, i8** %__mptr11, align 8, !dbg !6670
  br label %do.body14, !dbg !6670

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !6671

do.end15:                                         ; preds = %do.body14
  %30 = load i8*, i8** %__mptr11, align 8, !dbg !6670
  %add.ptr17 = getelementptr i8, i8* %30, i64 0, !dbg !6670
  %31 = bitcast i8* %add.ptr17 to %struct.descriptor_buffer*, !dbg !6670
  store %struct.descriptor_buffer* %31, %struct.descriptor_buffer** %tmp16, align 8, !dbg !6671
  %32 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %tmp16, align 8, !dbg !6670
  store %struct.descriptor_buffer* %32, %struct.descriptor_buffer** %tmp, align 8, !dbg !6653
  br label %for.cond, !dbg !6653, !llvm.loop !6673

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ar_context_release(%struct.ar_context* %ctx) #2 !dbg !6676 {
entry:
  %ctx.addr = alloca %struct.ar_context*, align 8
  %dev = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !6679, metadata !DIExpression()), !dbg !6680
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !6681, metadata !DIExpression()), !dbg !6682
  %0 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6683
  %ohci = getelementptr inbounds %struct.ar_context, %struct.ar_context* %0, i32 0, i32 0, !dbg !6684
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6684
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 0, !dbg !6685
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !6686
  %2 = load %struct.device*, %struct.device** %device, align 8, !dbg !6686
  store %struct.device* %2, %struct.device** %dev, align 8, !dbg !6682
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6687, metadata !DIExpression()), !dbg !6688
  %3 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6689
  %buffer = getelementptr inbounds %struct.ar_context, %struct.ar_context* %3, i32 0, i32 2, !dbg !6690
  %4 = load i8*, i8** %buffer, align 8, !dbg !6690
  call void @vunmap(i8* %4) #11, !dbg !6691
  store i32 0, i32* %i, align 4, !dbg !6692
  br label %for.cond, !dbg !6694

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !6695
  %conv = zext i32 %5 to i64, !dbg !6695
  %cmp = icmp ult i64 %conv, 8, !dbg !6697
  br i1 %cmp, label %for.body, label %for.end, !dbg !6698

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6699
  %pages = getelementptr inbounds %struct.ar_context, %struct.ar_context* %6, i32 0, i32 1, !dbg !6702
  %7 = load i32, i32* %i, align 4, !dbg !6703
  %idxprom = zext i32 %7 to i64, !dbg !6699
  %arrayidx = getelementptr [8 x %struct.page*], [8 x %struct.page*]* %pages, i64 0, i64 %idxprom, !dbg !6699
  %8 = load %struct.page*, %struct.page** %arrayidx, align 8, !dbg !6699
  %tobool = icmp ne %struct.page* %8, null, !dbg !6699
  br i1 %tobool, label %if.then, label %if.end, !dbg !6704

if.then:                                          ; preds = %for.body
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6705
  %10 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6706
  %pages2 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %10, i32 0, i32 1, !dbg !6707
  %11 = load i32, i32* %i, align 4, !dbg !6708
  %idxprom3 = zext i32 %11 to i64, !dbg !6706
  %arrayidx4 = getelementptr [8 x %struct.page*], [8 x %struct.page*]* %pages2, i64 0, i64 %idxprom3, !dbg !6706
  %12 = load %struct.page*, %struct.page** %arrayidx4, align 8, !dbg !6706
  %13 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !6709
  %14 = load i32, i32* %i, align 4, !dbg !6710
  %call = call i64 @ar_buffer_bus(%struct.ar_context* %13, i32 %14) #11, !dbg !6711
  call void @dma_free_pages(%struct.device* %9, i64 4096, %struct.page* %12, i64 %call, i32 2) #11, !dbg !6712
  br label %if.end, !dbg !6712

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6713

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !6714
  %inc = add i32 %15, 1, !dbg !6714
  store i32 %inc, i32* %i, align 4, !dbg !6714
  br label %for.cond, !dbg !6715, !llvm.loop !6716

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6718
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #2 !dbg !6719 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6722, metadata !DIExpression()), !dbg !6723
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6724, metadata !DIExpression()), !dbg !6725
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !6726, metadata !DIExpression()), !dbg !6727
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !6728, metadata !DIExpression()), !dbg !6729
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6730
  %1 = load i64, i64* %size.addr, align 8, !dbg !6731
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !6732
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !6733
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #11, !dbg !6734
  ret void, !dbg !6735
}

; Function Attrs: noredzone
declare dso_local void @pci_iounmap(%struct.pci_dev*, i8*) #1

; Function Attrs: noredzone
declare dso_local void @pci_release_region(%struct.pci_dev*, i32) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pmac_ohci_off(%struct.pci_dev* %dev) #2 !dbg !6736 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6737, metadata !DIExpression()), !dbg !6738
  ret void, !dbg !6739
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !6740 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6744, metadata !DIExpression()), !dbg !6748
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6750, metadata !DIExpression()), !dbg !6751
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6752, metadata !DIExpression()), !dbg !6753
  %0 = load i64, i64* %size.addr, align 8, !dbg !6754
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !6756
  br i1 %1, label %if.then, label %if.end447, !dbg !6757

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !6758
  %tobool = icmp ne i64 %2, 0, !dbg !6758
  br i1 %tobool, label %if.end, label %if.then1, !dbg !6761

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !6762
  br label %return, !dbg !6762

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !6763
  %cmp = icmp ult i64 %3, 4096, !dbg !6765
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6766

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6767
  br label %return, !dbg !6767

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub = sub i64 %4, 1, !dbg !6768
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !6768
  br i1 %5, label %cond.true, label %cond.false442, !dbg !6768

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub4 = sub i64 %6, 1, !dbg !6768
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !6768
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !6768

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub6 = sub i64 %8, 1, !dbg !6768
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !6768
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !6768

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !6768

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub9 = sub i64 %9, 1, !dbg !6768
  %and = and i64 %sub9, -9223372036854775808, !dbg !6768
  %tobool10 = icmp ne i64 %and, 0, !dbg !6768
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !6768

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !6768

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub13 = sub i64 %10, 1, !dbg !6768
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !6768
  %tobool15 = icmp ne i64 %and14, 0, !dbg !6768
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !6768

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !6768

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub18 = sub i64 %11, 1, !dbg !6768
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !6768
  %tobool20 = icmp ne i64 %and19, 0, !dbg !6768
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !6768

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !6768

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub23 = sub i64 %12, 1, !dbg !6768
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !6768
  %tobool25 = icmp ne i64 %and24, 0, !dbg !6768
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !6768

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !6768

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub28 = sub i64 %13, 1, !dbg !6768
  %and29 = and i64 %sub28, 576460752303423488, !dbg !6768
  %tobool30 = icmp ne i64 %and29, 0, !dbg !6768
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !6768

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !6768

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub33 = sub i64 %14, 1, !dbg !6768
  %and34 = and i64 %sub33, 288230376151711744, !dbg !6768
  %tobool35 = icmp ne i64 %and34, 0, !dbg !6768
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !6768

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !6768

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub38 = sub i64 %15, 1, !dbg !6768
  %and39 = and i64 %sub38, 144115188075855872, !dbg !6768
  %tobool40 = icmp ne i64 %and39, 0, !dbg !6768
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !6768

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !6768

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub43 = sub i64 %16, 1, !dbg !6768
  %and44 = and i64 %sub43, 72057594037927936, !dbg !6768
  %tobool45 = icmp ne i64 %and44, 0, !dbg !6768
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !6768

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !6768

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub48 = sub i64 %17, 1, !dbg !6768
  %and49 = and i64 %sub48, 36028797018963968, !dbg !6768
  %tobool50 = icmp ne i64 %and49, 0, !dbg !6768
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !6768

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !6768

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub53 = sub i64 %18, 1, !dbg !6768
  %and54 = and i64 %sub53, 18014398509481984, !dbg !6768
  %tobool55 = icmp ne i64 %and54, 0, !dbg !6768
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !6768

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !6768

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub58 = sub i64 %19, 1, !dbg !6768
  %and59 = and i64 %sub58, 9007199254740992, !dbg !6768
  %tobool60 = icmp ne i64 %and59, 0, !dbg !6768
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !6768

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !6768

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub63 = sub i64 %20, 1, !dbg !6768
  %and64 = and i64 %sub63, 4503599627370496, !dbg !6768
  %tobool65 = icmp ne i64 %and64, 0, !dbg !6768
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !6768

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !6768

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub68 = sub i64 %21, 1, !dbg !6768
  %and69 = and i64 %sub68, 2251799813685248, !dbg !6768
  %tobool70 = icmp ne i64 %and69, 0, !dbg !6768
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !6768

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !6768

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub73 = sub i64 %22, 1, !dbg !6768
  %and74 = and i64 %sub73, 1125899906842624, !dbg !6768
  %tobool75 = icmp ne i64 %and74, 0, !dbg !6768
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !6768

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !6768

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub78 = sub i64 %23, 1, !dbg !6768
  %and79 = and i64 %sub78, 562949953421312, !dbg !6768
  %tobool80 = icmp ne i64 %and79, 0, !dbg !6768
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !6768

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !6768

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub83 = sub i64 %24, 1, !dbg !6768
  %and84 = and i64 %sub83, 281474976710656, !dbg !6768
  %tobool85 = icmp ne i64 %and84, 0, !dbg !6768
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !6768

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !6768

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub88 = sub i64 %25, 1, !dbg !6768
  %and89 = and i64 %sub88, 140737488355328, !dbg !6768
  %tobool90 = icmp ne i64 %and89, 0, !dbg !6768
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !6768

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !6768

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub93 = sub i64 %26, 1, !dbg !6768
  %and94 = and i64 %sub93, 70368744177664, !dbg !6768
  %tobool95 = icmp ne i64 %and94, 0, !dbg !6768
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !6768

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !6768

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub98 = sub i64 %27, 1, !dbg !6768
  %and99 = and i64 %sub98, 35184372088832, !dbg !6768
  %tobool100 = icmp ne i64 %and99, 0, !dbg !6768
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !6768

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !6768

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub103 = sub i64 %28, 1, !dbg !6768
  %and104 = and i64 %sub103, 17592186044416, !dbg !6768
  %tobool105 = icmp ne i64 %and104, 0, !dbg !6768
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !6768

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !6768

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub108 = sub i64 %29, 1, !dbg !6768
  %and109 = and i64 %sub108, 8796093022208, !dbg !6768
  %tobool110 = icmp ne i64 %and109, 0, !dbg !6768
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !6768

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !6768

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub113 = sub i64 %30, 1, !dbg !6768
  %and114 = and i64 %sub113, 4398046511104, !dbg !6768
  %tobool115 = icmp ne i64 %and114, 0, !dbg !6768
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !6768

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !6768

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub118 = sub i64 %31, 1, !dbg !6768
  %and119 = and i64 %sub118, 2199023255552, !dbg !6768
  %tobool120 = icmp ne i64 %and119, 0, !dbg !6768
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !6768

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !6768

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub123 = sub i64 %32, 1, !dbg !6768
  %and124 = and i64 %sub123, 1099511627776, !dbg !6768
  %tobool125 = icmp ne i64 %and124, 0, !dbg !6768
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !6768

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !6768

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub128 = sub i64 %33, 1, !dbg !6768
  %and129 = and i64 %sub128, 549755813888, !dbg !6768
  %tobool130 = icmp ne i64 %and129, 0, !dbg !6768
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !6768

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !6768

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub133 = sub i64 %34, 1, !dbg !6768
  %and134 = and i64 %sub133, 274877906944, !dbg !6768
  %tobool135 = icmp ne i64 %and134, 0, !dbg !6768
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !6768

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !6768

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub138 = sub i64 %35, 1, !dbg !6768
  %and139 = and i64 %sub138, 137438953472, !dbg !6768
  %tobool140 = icmp ne i64 %and139, 0, !dbg !6768
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !6768

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !6768

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub143 = sub i64 %36, 1, !dbg !6768
  %and144 = and i64 %sub143, 68719476736, !dbg !6768
  %tobool145 = icmp ne i64 %and144, 0, !dbg !6768
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !6768

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !6768

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub148 = sub i64 %37, 1, !dbg !6768
  %and149 = and i64 %sub148, 34359738368, !dbg !6768
  %tobool150 = icmp ne i64 %and149, 0, !dbg !6768
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !6768

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !6768

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub153 = sub i64 %38, 1, !dbg !6768
  %and154 = and i64 %sub153, 17179869184, !dbg !6768
  %tobool155 = icmp ne i64 %and154, 0, !dbg !6768
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !6768

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !6768

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub158 = sub i64 %39, 1, !dbg !6768
  %and159 = and i64 %sub158, 8589934592, !dbg !6768
  %tobool160 = icmp ne i64 %and159, 0, !dbg !6768
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !6768

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !6768

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub163 = sub i64 %40, 1, !dbg !6768
  %and164 = and i64 %sub163, 4294967296, !dbg !6768
  %tobool165 = icmp ne i64 %and164, 0, !dbg !6768
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !6768

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !6768

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub168 = sub i64 %41, 1, !dbg !6768
  %and169 = and i64 %sub168, 2147483648, !dbg !6768
  %tobool170 = icmp ne i64 %and169, 0, !dbg !6768
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !6768

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !6768

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub173 = sub i64 %42, 1, !dbg !6768
  %and174 = and i64 %sub173, 1073741824, !dbg !6768
  %tobool175 = icmp ne i64 %and174, 0, !dbg !6768
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !6768

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !6768

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub178 = sub i64 %43, 1, !dbg !6768
  %and179 = and i64 %sub178, 536870912, !dbg !6768
  %tobool180 = icmp ne i64 %and179, 0, !dbg !6768
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !6768

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !6768

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub183 = sub i64 %44, 1, !dbg !6768
  %and184 = and i64 %sub183, 268435456, !dbg !6768
  %tobool185 = icmp ne i64 %and184, 0, !dbg !6768
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !6768

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !6768

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub188 = sub i64 %45, 1, !dbg !6768
  %and189 = and i64 %sub188, 134217728, !dbg !6768
  %tobool190 = icmp ne i64 %and189, 0, !dbg !6768
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !6768

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !6768

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub193 = sub i64 %46, 1, !dbg !6768
  %and194 = and i64 %sub193, 67108864, !dbg !6768
  %tobool195 = icmp ne i64 %and194, 0, !dbg !6768
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !6768

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !6768

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub198 = sub i64 %47, 1, !dbg !6768
  %and199 = and i64 %sub198, 33554432, !dbg !6768
  %tobool200 = icmp ne i64 %and199, 0, !dbg !6768
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !6768

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !6768

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub203 = sub i64 %48, 1, !dbg !6768
  %and204 = and i64 %sub203, 16777216, !dbg !6768
  %tobool205 = icmp ne i64 %and204, 0, !dbg !6768
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !6768

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !6768

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub208 = sub i64 %49, 1, !dbg !6768
  %and209 = and i64 %sub208, 8388608, !dbg !6768
  %tobool210 = icmp ne i64 %and209, 0, !dbg !6768
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !6768

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !6768

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub213 = sub i64 %50, 1, !dbg !6768
  %and214 = and i64 %sub213, 4194304, !dbg !6768
  %tobool215 = icmp ne i64 %and214, 0, !dbg !6768
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !6768

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !6768

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub218 = sub i64 %51, 1, !dbg !6768
  %and219 = and i64 %sub218, 2097152, !dbg !6768
  %tobool220 = icmp ne i64 %and219, 0, !dbg !6768
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !6768

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !6768

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub223 = sub i64 %52, 1, !dbg !6768
  %and224 = and i64 %sub223, 1048576, !dbg !6768
  %tobool225 = icmp ne i64 %and224, 0, !dbg !6768
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !6768

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !6768

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub228 = sub i64 %53, 1, !dbg !6768
  %and229 = and i64 %sub228, 524288, !dbg !6768
  %tobool230 = icmp ne i64 %and229, 0, !dbg !6768
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !6768

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !6768

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub233 = sub i64 %54, 1, !dbg !6768
  %and234 = and i64 %sub233, 262144, !dbg !6768
  %tobool235 = icmp ne i64 %and234, 0, !dbg !6768
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !6768

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !6768

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub238 = sub i64 %55, 1, !dbg !6768
  %and239 = and i64 %sub238, 131072, !dbg !6768
  %tobool240 = icmp ne i64 %and239, 0, !dbg !6768
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !6768

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !6768

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub243 = sub i64 %56, 1, !dbg !6768
  %and244 = and i64 %sub243, 65536, !dbg !6768
  %tobool245 = icmp ne i64 %and244, 0, !dbg !6768
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !6768

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !6768

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub248 = sub i64 %57, 1, !dbg !6768
  %and249 = and i64 %sub248, 32768, !dbg !6768
  %tobool250 = icmp ne i64 %and249, 0, !dbg !6768
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !6768

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !6768

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub253 = sub i64 %58, 1, !dbg !6768
  %and254 = and i64 %sub253, 16384, !dbg !6768
  %tobool255 = icmp ne i64 %and254, 0, !dbg !6768
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !6768

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !6768

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub258 = sub i64 %59, 1, !dbg !6768
  %and259 = and i64 %sub258, 8192, !dbg !6768
  %tobool260 = icmp ne i64 %and259, 0, !dbg !6768
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !6768

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !6768

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub263 = sub i64 %60, 1, !dbg !6768
  %and264 = and i64 %sub263, 4096, !dbg !6768
  %tobool265 = icmp ne i64 %and264, 0, !dbg !6768
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !6768

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !6768

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub268 = sub i64 %61, 1, !dbg !6768
  %and269 = and i64 %sub268, 2048, !dbg !6768
  %tobool270 = icmp ne i64 %and269, 0, !dbg !6768
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !6768

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !6768

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub273 = sub i64 %62, 1, !dbg !6768
  %and274 = and i64 %sub273, 1024, !dbg !6768
  %tobool275 = icmp ne i64 %and274, 0, !dbg !6768
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !6768

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !6768

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub278 = sub i64 %63, 1, !dbg !6768
  %and279 = and i64 %sub278, 512, !dbg !6768
  %tobool280 = icmp ne i64 %and279, 0, !dbg !6768
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !6768

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !6768

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub283 = sub i64 %64, 1, !dbg !6768
  %and284 = and i64 %sub283, 256, !dbg !6768
  %tobool285 = icmp ne i64 %and284, 0, !dbg !6768
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !6768

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !6768

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub288 = sub i64 %65, 1, !dbg !6768
  %and289 = and i64 %sub288, 128, !dbg !6768
  %tobool290 = icmp ne i64 %and289, 0, !dbg !6768
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !6768

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !6768

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub293 = sub i64 %66, 1, !dbg !6768
  %and294 = and i64 %sub293, 64, !dbg !6768
  %tobool295 = icmp ne i64 %and294, 0, !dbg !6768
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !6768

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !6768

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub298 = sub i64 %67, 1, !dbg !6768
  %and299 = and i64 %sub298, 32, !dbg !6768
  %tobool300 = icmp ne i64 %and299, 0, !dbg !6768
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !6768

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !6768

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub303 = sub i64 %68, 1, !dbg !6768
  %and304 = and i64 %sub303, 16, !dbg !6768
  %tobool305 = icmp ne i64 %and304, 0, !dbg !6768
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !6768

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !6768

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub308 = sub i64 %69, 1, !dbg !6768
  %and309 = and i64 %sub308, 8, !dbg !6768
  %tobool310 = icmp ne i64 %and309, 0, !dbg !6768
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !6768

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !6768

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub313 = sub i64 %70, 1, !dbg !6768
  %and314 = and i64 %sub313, 4, !dbg !6768
  %tobool315 = icmp ne i64 %and314, 0, !dbg !6768
  %71 = zext i1 %tobool315 to i64, !dbg !6768
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !6768
  br label %cond.end, !dbg !6768

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !6768
  br label %cond.end317, !dbg !6768

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !6768
  br label %cond.end319, !dbg !6768

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !6768
  br label %cond.end321, !dbg !6768

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !6768
  br label %cond.end323, !dbg !6768

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !6768
  br label %cond.end325, !dbg !6768

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !6768
  br label %cond.end327, !dbg !6768

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !6768
  br label %cond.end329, !dbg !6768

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !6768
  br label %cond.end331, !dbg !6768

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !6768
  br label %cond.end333, !dbg !6768

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !6768
  br label %cond.end335, !dbg !6768

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !6768
  br label %cond.end337, !dbg !6768

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !6768
  br label %cond.end339, !dbg !6768

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !6768
  br label %cond.end341, !dbg !6768

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !6768
  br label %cond.end343, !dbg !6768

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !6768
  br label %cond.end345, !dbg !6768

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !6768
  br label %cond.end347, !dbg !6768

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !6768
  br label %cond.end349, !dbg !6768

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !6768
  br label %cond.end351, !dbg !6768

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !6768
  br label %cond.end353, !dbg !6768

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !6768
  br label %cond.end355, !dbg !6768

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !6768
  br label %cond.end357, !dbg !6768

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !6768
  br label %cond.end359, !dbg !6768

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !6768
  br label %cond.end361, !dbg !6768

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !6768
  br label %cond.end363, !dbg !6768

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !6768
  br label %cond.end365, !dbg !6768

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !6768
  br label %cond.end367, !dbg !6768

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !6768
  br label %cond.end369, !dbg !6768

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !6768
  br label %cond.end371, !dbg !6768

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !6768
  br label %cond.end373, !dbg !6768

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !6768
  br label %cond.end375, !dbg !6768

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !6768
  br label %cond.end377, !dbg !6768

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !6768
  br label %cond.end379, !dbg !6768

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !6768
  br label %cond.end381, !dbg !6768

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !6768
  br label %cond.end383, !dbg !6768

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !6768
  br label %cond.end385, !dbg !6768

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !6768
  br label %cond.end387, !dbg !6768

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !6768
  br label %cond.end389, !dbg !6768

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !6768
  br label %cond.end391, !dbg !6768

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !6768
  br label %cond.end393, !dbg !6768

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !6768
  br label %cond.end395, !dbg !6768

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !6768
  br label %cond.end397, !dbg !6768

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !6768
  br label %cond.end399, !dbg !6768

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !6768
  br label %cond.end401, !dbg !6768

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !6768
  br label %cond.end403, !dbg !6768

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !6768
  br label %cond.end405, !dbg !6768

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !6768
  br label %cond.end407, !dbg !6768

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !6768
  br label %cond.end409, !dbg !6768

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !6768
  br label %cond.end411, !dbg !6768

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !6768
  br label %cond.end413, !dbg !6768

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !6768
  br label %cond.end415, !dbg !6768

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !6768
  br label %cond.end417, !dbg !6768

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !6768
  br label %cond.end419, !dbg !6768

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !6768
  br label %cond.end421, !dbg !6768

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !6768
  br label %cond.end423, !dbg !6768

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !6768
  br label %cond.end425, !dbg !6768

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !6768
  br label %cond.end427, !dbg !6768

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !6768
  br label %cond.end429, !dbg !6768

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !6768
  br label %cond.end431, !dbg !6768

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !6768
  br label %cond.end433, !dbg !6768

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !6768
  br label %cond.end435, !dbg !6768

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !6768
  br label %cond.end437, !dbg !6768

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !6768
  br label %cond.end440, !dbg !6768

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !6768

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !6768
  br label %cond.end444, !dbg !6768

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !6768
  %sub443 = sub i64 %72, 1, !dbg !6768
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !6768
  br label %cond.end444, !dbg !6768

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !6768
  %sub446 = sub i32 %cond445, 12, !dbg !6769
  %add = add i32 %sub446, 1, !dbg !6770
  store i32 %add, i32* %retval, align 4, !dbg !6771
  br label %return, !dbg !6771

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !6772
  %dec = add i64 %73, -1, !dbg !6772
  store i64 %dec, i64* %size.addr, align 8, !dbg !6772
  %74 = load i64, i64* %size.addr, align 8, !dbg !6773
  %shr = lshr i64 %74, 12, !dbg !6773
  store i64 %shr, i64* %size.addr, align 8, !dbg !6773
  %75 = load i64, i64* %size.addr, align 8, !dbg !6774
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6751
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !6775
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !6776
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !6775, !srcloc !6777
  store i32 %78, i32* %bitpos.i, align 4, !dbg !6775
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !6778
  %add.i = add i32 %79, 1, !dbg !6779
  store i32 %add.i, i32* %retval, align 4, !dbg !6780
  br label %return, !dbg !6780

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !6781
  ret i32 %80, !dbg !6781
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !6782 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6744, metadata !DIExpression()), !dbg !6786
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6750, metadata !DIExpression()), !dbg !6788
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6789, metadata !DIExpression()), !dbg !6790
  %0 = load i64, i64* %n.addr, align 8, !dbg !6791
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6788
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !6792
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !6793
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !6792, !srcloc !6777
  store i32 %3, i32* %bitpos.i, align 4, !dbg !6792
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !6794
  %add.i = add i32 %4, 1, !dbg !6795
  %sub = sub i32 %add.i, 1, !dbg !6796
  ret i32 %sub, !dbg !6797
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !6798 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !6802, metadata !DIExpression()), !dbg !6803
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !6804, metadata !DIExpression()), !dbg !6805
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6806, metadata !DIExpression()), !dbg !6807
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6808, metadata !DIExpression()), !dbg !6809
  %0 = load i8*, i8** %object.addr, align 8, !dbg !6810
  ret i8* %0, !dbg !6811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_enable(%struct.fw_card* %card, i32* %config_rom, i64 %length) #2 !dbg !6812 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.fw_card*, align 8
  %config_rom.addr = alloca i32*, align 8
  %length.addr = alloca i64, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %lps = alloca i32, align 4
  %version = alloca i32, align 4
  %irqs = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !6813, metadata !DIExpression()), !dbg !6814
  store i32* %config_rom, i32** %config_rom.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %config_rom.addr, metadata !6815, metadata !DIExpression()), !dbg !6816
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !6817, metadata !DIExpression()), !dbg !6818
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !6819, metadata !DIExpression()), !dbg !6820
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !6821
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %0) #11, !dbg !6822
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !6820
  call void @llvm.dbg.declare(metadata i32* %lps, metadata !6823, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.declare(metadata i32* %version, metadata !6825, metadata !DIExpression()), !dbg !6826
  call void @llvm.dbg.declare(metadata i32* %irqs, metadata !6827, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6829, metadata !DIExpression()), !dbg !6830
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6831, metadata !DIExpression()), !dbg !6832
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6833
  %call1 = call i32 @software_reset(%struct.fw_ohci* %1) #11, !dbg !6834
  store i32 %call1, i32* %ret, align 4, !dbg !6835
  %2 = load i32, i32* %ret, align 4, !dbg !6836
  %cmp = icmp slt i32 %2, 0, !dbg !6838
  br i1 %cmp, label %if.then, label %if.end, !dbg !6839

if.then:                                          ; preds = %entry
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6840
  %card2 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %3, i32 0, i32 0, !dbg !6840
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card2, i32 0, i32 1, !dbg !6840
  %4 = load %struct.device*, %struct.device** %device, align 8, !dbg !6840
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0)) #12, !dbg !6840
  %5 = load i32, i32* %ret, align 4, !dbg !6842
  store i32 %5, i32* %retval, align 4, !dbg !6843
  br label %return, !dbg !6843

if.end:                                           ; preds = %entry
  %6 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6844
  call void @reg_write(%struct.fw_ohci* %6, i32 80, i32 786432) #11, !dbg !6845
  %7 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6846
  call void @flush_writes(%struct.fw_ohci* %7) #11, !dbg !6847
  store i32 0, i32* %lps, align 4, !dbg !6848
  store i32 0, i32* %i, align 4, !dbg !6850
  br label %for.cond, !dbg !6851

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %lps, align 4, !dbg !6852
  %tobool = icmp ne i32 %8, 0, !dbg !6852
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6854

land.rhs:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !6855
  %cmp3 = icmp slt i32 %9, 3, !dbg !6856
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %10 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ], !dbg !6857
  br i1 %10, label %for.body, label %for.end, !dbg !6858

for.body:                                         ; preds = %land.end
  call void @msleep(i32 50) #11, !dbg !6859
  %11 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6861
  %call4 = call i32 @reg_read(%struct.fw_ohci* %11, i32 80) #11, !dbg !6862
  %and = and i32 %call4, 524288, !dbg !6863
  store i32 %and, i32* %lps, align 4, !dbg !6864
  br label %for.inc, !dbg !6865

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !6866
  %inc = add i32 %12, 1, !dbg !6866
  store i32 %inc, i32* %i, align 4, !dbg !6866
  br label %for.cond, !dbg !6867, !llvm.loop !6868

for.end:                                          ; preds = %land.end
  %13 = load i32, i32* %lps, align 4, !dbg !6870
  %tobool5 = icmp ne i32 %13, 0, !dbg !6870
  br i1 %tobool5, label %if.end9, label %if.then6, !dbg !6872

if.then6:                                         ; preds = %for.end
  %14 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6873
  %card7 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %14, i32 0, i32 0, !dbg !6873
  %device8 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card7, i32 0, i32 1, !dbg !6873
  %15 = load %struct.device*, %struct.device** %device8, align 8, !dbg !6873
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %15, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !6873
  store i32 -5, i32* %retval, align 4, !dbg !6875
  br label %return, !dbg !6875

if.end9:                                          ; preds = %for.end
  %16 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6876
  %quirks = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %16, i32 0, i32 5, !dbg !6878
  %17 = load i32, i32* %quirks, align 4, !dbg !6878
  %and10 = and i32 %17, 32, !dbg !6879
  %tobool11 = icmp ne i32 %and10, 0, !dbg !6879
  br i1 %tobool11, label %if.then12, label %if.end24, !dbg !6880

if.then12:                                        ; preds = %if.end9
  %18 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6881
  %call13 = call i32 @probe_tsb41ba3d(%struct.fw_ohci* %18) #11, !dbg !6883
  store i32 %call13, i32* %ret, align 4, !dbg !6884
  %19 = load i32, i32* %ret, align 4, !dbg !6885
  %cmp14 = icmp slt i32 %19, 0, !dbg !6887
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !6888

if.then15:                                        ; preds = %if.then12
  %20 = load i32, i32* %ret, align 4, !dbg !6889
  store i32 %20, i32* %retval, align 4, !dbg !6890
  br label %return, !dbg !6890

if.end16:                                         ; preds = %if.then12
  %21 = load i32, i32* %ret, align 4, !dbg !6891
  %tobool17 = icmp ne i32 %21, 0, !dbg !6891
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !6893

if.then18:                                        ; preds = %if.end16
  %22 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6894
  %card19 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %22, i32 0, i32 0, !dbg !6894
  %device20 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card19, i32 0, i32 1, !dbg !6894
  %23 = load %struct.device*, %struct.device** %device20, align 8, !dbg !6894
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !6894
  br label %if.end23, !dbg !6894

if.else:                                          ; preds = %if.end16
  %24 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6895
  %quirks21 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %24, i32 0, i32 5, !dbg !6896
  %25 = load i32, i32* %quirks21, align 4, !dbg !6897
  %and22 = and i32 %25, -33, !dbg !6897
  store i32 %and22, i32* %quirks21, align 4, !dbg !6897
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  br label %if.end24, !dbg !6898

if.end24:                                         ; preds = %if.end23, %if.end9
  %26 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6899
  call void @reg_write(%struct.fw_ohci* %26, i32 84, i32 1073741824) #11, !dbg !6900
  %27 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6901
  %28 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6902
  %self_id_bus = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %28, i32 0, i32 36, !dbg !6903
  %29 = load i64, i64* %self_id_bus, align 8, !dbg !6903
  %conv = trunc i64 %29 to i32, !dbg !6902
  call void @reg_write(%struct.fw_ohci* %27, i32 100, i32 %conv) #11, !dbg !6904
  %30 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6905
  call void @reg_write(%struct.fw_ohci* %30, i32 224, i32 3145728) #11, !dbg !6906
  %31 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6907
  call void @reg_write(%struct.fw_ohci* %31, i32 8, i32 13109295) #11, !dbg !6908
  %32 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6909
  %bus_time_running = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %32, i32 0, i32 8, !dbg !6910
  store i8 0, i8* %bus_time_running, align 8, !dbg !6911
  store i32 0, i32* %i, align 4, !dbg !6912
  br label %for.cond25, !dbg !6914

for.cond25:                                       ; preds = %for.inc33, %if.end24
  %33 = load i32, i32* %i, align 4, !dbg !6915
  %cmp26 = icmp slt i32 %33, 32, !dbg !6917
  br i1 %cmp26, label %for.body28, label %for.end35, !dbg !6918

for.body28:                                       ; preds = %for.cond25
  %34 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6919
  %ir_context_support = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %34, i32 0, i32 25, !dbg !6921
  %35 = load i32, i32* %ir_context_support, align 8, !dbg !6921
  %36 = load i32, i32* %i, align 4, !dbg !6922
  %shl = shl i32 1, %36, !dbg !6923
  %and29 = and i32 %35, %shl, !dbg !6924
  %tobool30 = icmp ne i32 %and29, 0, !dbg !6924
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !6925

if.then31:                                        ; preds = %for.body28
  %37 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6926
  %38 = load i32, i32* %i, align 4, !dbg !6927
  %mul = mul i32 32, %38, !dbg !6927
  %add = add i32 1028, %mul, !dbg !6927
  call void @reg_write(%struct.fw_ohci* %37, i32 %add, i32 268435456) #11, !dbg !6928
  br label %if.end32, !dbg !6928

if.end32:                                         ; preds = %if.then31, %for.body28
  br label %for.inc33, !dbg !6929

for.inc33:                                        ; preds = %if.end32
  %39 = load i32, i32* %i, align 4, !dbg !6930
  %inc34 = add i32 %39, 1, !dbg !6930
  store i32 %inc34, i32* %i, align 4, !dbg !6930
  br label %for.cond25, !dbg !6931, !llvm.loop !6932

for.end35:                                        ; preds = %for.cond25
  %40 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6934
  %call36 = call i32 @reg_read(%struct.fw_ohci* %40, i32 0) #11, !dbg !6935
  %and37 = and i32 %call36, 16711935, !dbg !6936
  store i32 %and37, i32* %version, align 4, !dbg !6937
  %41 = load i32, i32* %version, align 4, !dbg !6938
  %cmp38 = icmp uge i32 %41, 65552, !dbg !6940
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !6941

if.then40:                                        ; preds = %for.end35
  %42 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6942
  call void @reg_write(%struct.fw_ohci* %42, i32 180, i32 -2) #11, !dbg !6944
  %43 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !6945
  %broadcast_channel_auto_allocated = getelementptr inbounds %struct.fw_card, %struct.fw_card* %43, i32 0, i32 36, !dbg !6946
  store i8 1, i8* %broadcast_channel_auto_allocated, align 2, !dbg !6947
  br label %if.end41, !dbg !6948

if.end41:                                         ; preds = %if.then40, %for.end35
  %44 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6949
  call void @reg_write(%struct.fw_ohci* %44, i32 220, i32 63) #11, !dbg !6950
  %45 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6951
  %call42 = call i32 @reg_read(%struct.fw_ohci* %45, i32 220) #11, !dbg !6952
  %and43 = and i32 %call42, 63, !dbg !6953
  %46 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6954
  %pri_req_max = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %46, i32 0, i32 6, !dbg !6955
  store i32 %and43, i32* %pri_req_max, align 8, !dbg !6956
  %47 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6957
  call void @reg_write(%struct.fw_ohci* %47, i32 220, i32 0) #11, !dbg !6958
  %48 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6959
  %pri_req_max44 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %48, i32 0, i32 6, !dbg !6960
  %49 = load i32, i32* %pri_req_max44, align 8, !dbg !6960
  %cmp45 = icmp ne i32 %49, 0, !dbg !6961
  %50 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !6962
  %priority_budget_implemented = getelementptr inbounds %struct.fw_card, %struct.fw_card* %50, i32 0, i32 35, !dbg !6963
  %frombool = zext i1 %cmp45 to i8, !dbg !6964
  store i8 %frombool, i8* %priority_budget_implemented, align 1, !dbg !6964
  %51 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6965
  call void @reg_write(%struct.fw_ohci* %51, i32 288, i32 65536) #11, !dbg !6966
  %52 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6967
  call void @reg_write(%struct.fw_ohci* %52, i32 132, i32 -1) #11, !dbg !6968
  %53 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6969
  call void @reg_write(%struct.fw_ohci* %53, i32 140, i32 -1) #11, !dbg !6970
  %54 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6971
  %call47 = call i32 @configure_1394a_enhancements(%struct.fw_ohci* %54) #11, !dbg !6972
  store i32 %call47, i32* %ret, align 4, !dbg !6973
  %55 = load i32, i32* %ret, align 4, !dbg !6974
  %cmp48 = icmp slt i32 %55, 0, !dbg !6976
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !6977

if.then50:                                        ; preds = %if.end41
  %56 = load i32, i32* %ret, align 4, !dbg !6978
  store i32 %56, i32* %retval, align 4, !dbg !6979
  br label %return, !dbg !6979

if.end51:                                         ; preds = %if.end41
  %57 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !6980
  %call52 = call i32 @ohci_update_phy_reg(%struct.fw_card* %57, i32 4, i32 0, i32 192) #11, !dbg !6981
  store i32 %call52, i32* %ret, align 4, !dbg !6982
  %58 = load i32, i32* %ret, align 4, !dbg !6983
  %cmp53 = icmp slt i32 %58, 0, !dbg !6985
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !6986

if.then55:                                        ; preds = %if.end51
  %59 = load i32, i32* %ret, align 4, !dbg !6987
  store i32 %59, i32* %retval, align 4, !dbg !6988
  br label %return, !dbg !6988

if.end56:                                         ; preds = %if.end51
  %60 = load i32*, i32** %config_rom.addr, align 8, !dbg !6989
  %tobool57 = icmp ne i32* %60, null, !dbg !6989
  br i1 %tobool57, label %if.then58, label %if.else68, !dbg !6991

if.then58:                                        ; preds = %if.end56
  %61 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6992
  %card59 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %61, i32 0, i32 0, !dbg !6994
  %device60 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card59, i32 0, i32 1, !dbg !6995
  %62 = load %struct.device*, %struct.device** %device60, align 8, !dbg !6995
  %63 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6996
  %next_config_rom_bus = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %63, i32 0, i32 33, !dbg !6997
  %call61 = call i8* @dma_alloc_coherent(%struct.device* %62, i64 1024, i64* %next_config_rom_bus, i32 3264) #11, !dbg !6998
  %64 = bitcast i8* %call61 to i32*, !dbg !6998
  %65 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !6999
  %next_config_rom = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %65, i32 0, i32 32, !dbg !7000
  store i32* %64, i32** %next_config_rom, align 8, !dbg !7001
  %66 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7002
  %next_config_rom62 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %66, i32 0, i32 32, !dbg !7004
  %67 = load i32*, i32** %next_config_rom62, align 8, !dbg !7004
  %cmp63 = icmp eq i32* %67, null, !dbg !7005
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !7006

if.then65:                                        ; preds = %if.then58
  store i32 -12, i32* %retval, align 4, !dbg !7007
  br label %return, !dbg !7007

if.end66:                                         ; preds = %if.then58
  %68 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7008
  %next_config_rom67 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %68, i32 0, i32 32, !dbg !7009
  %69 = load i32*, i32** %next_config_rom67, align 8, !dbg !7009
  %70 = load i32*, i32** %config_rom.addr, align 8, !dbg !7010
  %71 = load i64, i64* %length.addr, align 8, !dbg !7011
  call void @copy_config_rom(i32* %69, i32* %70, i64 %71) #11, !dbg !7012
  br label %if.end72, !dbg !7013

if.else68:                                        ; preds = %if.end56
  %72 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7014
  %config_rom69 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %72, i32 0, i32 30, !dbg !7016
  %73 = load i32*, i32** %config_rom69, align 8, !dbg !7016
  %74 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7017
  %next_config_rom70 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %74, i32 0, i32 32, !dbg !7018
  store i32* %73, i32** %next_config_rom70, align 8, !dbg !7019
  %75 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7020
  %config_rom_bus = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %75, i32 0, i32 31, !dbg !7021
  %76 = load i64, i64* %config_rom_bus, align 8, !dbg !7021
  %77 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7022
  %next_config_rom_bus71 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %77, i32 0, i32 33, !dbg !7023
  store i64 %76, i64* %next_config_rom_bus71, align 8, !dbg !7024
  br label %if.end72

if.end72:                                         ; preds = %if.else68, %if.end66
  %78 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7025
  %next_config_rom73 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %78, i32 0, i32 32, !dbg !7026
  %79 = load i32*, i32** %next_config_rom73, align 8, !dbg !7026
  %arrayidx = getelementptr i32, i32* %79, i64 0, !dbg !7025
  %80 = load i32, i32* %arrayidx, align 4, !dbg !7025
  %81 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7027
  %next_header = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %81, i32 0, i32 34, !dbg !7028
  store i32 %80, i32* %next_header, align 8, !dbg !7029
  %82 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7030
  %next_config_rom74 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %82, i32 0, i32 32, !dbg !7031
  %83 = load i32*, i32** %next_config_rom74, align 8, !dbg !7031
  %arrayidx75 = getelementptr i32, i32* %83, i64 0, !dbg !7030
  store i32 0, i32* %arrayidx75, align 4, !dbg !7032
  %84 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7033
  call void @reg_write(%struct.fw_ohci* %84, i32 24, i32 0) #11, !dbg !7034
  %85 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7035
  %86 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7036
  %next_config_rom76 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %86, i32 0, i32 32, !dbg !7036
  %87 = load i32*, i32** %next_config_rom76, align 8, !dbg !7036
  %arrayidx77 = getelementptr i32, i32* %87, i64 2, !dbg !7036
  %88 = load i32, i32* %arrayidx77, align 4, !dbg !7036
  %89 = call i1 @llvm.is.constant.i32(i32 %88), !dbg !7036
  br i1 %89, label %cond.true, label %cond.false, !dbg !7036

cond.true:                                        ; preds = %if.end72
  %90 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7036
  %next_config_rom78 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %90, i32 0, i32 32, !dbg !7036
  %91 = load i32*, i32** %next_config_rom78, align 8, !dbg !7036
  %arrayidx79 = getelementptr i32, i32* %91, i64 2, !dbg !7036
  %92 = load i32, i32* %arrayidx79, align 4, !dbg !7036
  %and80 = and i32 %92, 255, !dbg !7036
  %shl81 = shl i32 %and80, 24, !dbg !7036
  %93 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7036
  %next_config_rom82 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %93, i32 0, i32 32, !dbg !7036
  %94 = load i32*, i32** %next_config_rom82, align 8, !dbg !7036
  %arrayidx83 = getelementptr i32, i32* %94, i64 2, !dbg !7036
  %95 = load i32, i32* %arrayidx83, align 4, !dbg !7036
  %and84 = and i32 %95, 65280, !dbg !7036
  %shl85 = shl i32 %and84, 8, !dbg !7036
  %or = or i32 %shl81, %shl85, !dbg !7036
  %96 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7036
  %next_config_rom86 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %96, i32 0, i32 32, !dbg !7036
  %97 = load i32*, i32** %next_config_rom86, align 8, !dbg !7036
  %arrayidx87 = getelementptr i32, i32* %97, i64 2, !dbg !7036
  %98 = load i32, i32* %arrayidx87, align 4, !dbg !7036
  %and88 = and i32 %98, 16711680, !dbg !7036
  %shr = lshr i32 %and88, 8, !dbg !7036
  %or89 = or i32 %or, %shr, !dbg !7036
  %99 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7036
  %next_config_rom90 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %99, i32 0, i32 32, !dbg !7036
  %100 = load i32*, i32** %next_config_rom90, align 8, !dbg !7036
  %arrayidx91 = getelementptr i32, i32* %100, i64 2, !dbg !7036
  %101 = load i32, i32* %arrayidx91, align 4, !dbg !7036
  %and92 = and i32 %101, -16777216, !dbg !7036
  %shr93 = lshr i32 %and92, 24, !dbg !7036
  %or94 = or i32 %or89, %shr93, !dbg !7036
  br label %cond.end, !dbg !7036

cond.false:                                       ; preds = %if.end72
  %102 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7036
  %next_config_rom95 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %102, i32 0, i32 32, !dbg !7036
  %103 = load i32*, i32** %next_config_rom95, align 8, !dbg !7036
  %arrayidx96 = getelementptr i32, i32* %103, i64 2, !dbg !7036
  %104 = load i32, i32* %arrayidx96, align 4, !dbg !7036
  %call97 = call i32 @__fswab32(i32 %104) #14, !dbg !7036
  br label %cond.end, !dbg !7036

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or94, %cond.true ], [ %call97, %cond.false ], !dbg !7036
  call void @reg_write(%struct.fw_ohci* %85, i32 32, i32 %cond) #11, !dbg !7037
  %105 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7038
  %106 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7039
  %next_config_rom_bus98 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %106, i32 0, i32 33, !dbg !7040
  %107 = load i64, i64* %next_config_rom_bus98, align 8, !dbg !7040
  %conv99 = trunc i64 %107 to i32, !dbg !7039
  call void @reg_write(%struct.fw_ohci* %105, i32 52, i32 %conv99) #11, !dbg !7041
  %108 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7042
  call void @reg_write(%struct.fw_ohci* %108, i32 256, i32 -2147483648) #11, !dbg !7043
  store i32 -2088435213, i32* %irqs, align 4, !dbg !7044
  %109 = load i32, i32* @param_debug, align 4, !dbg !7045
  %and100 = and i32 %109, 8, !dbg !7047
  %tobool101 = icmp ne i32 %and100, 0, !dbg !7047
  br i1 %tobool101, label %if.then102, label %if.end104, !dbg !7048

if.then102:                                       ; preds = %cond.end
  %110 = load i32, i32* %irqs, align 4, !dbg !7049
  %or103 = or i32 %110, 131072, !dbg !7049
  store i32 %or103, i32* %irqs, align 4, !dbg !7049
  br label %if.end104, !dbg !7050

if.end104:                                        ; preds = %if.then102, %cond.end
  %111 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7051
  %112 = load i32, i32* %irqs, align 4, !dbg !7052
  call void @reg_write(%struct.fw_ohci* %111, i32 136, i32 %112) #11, !dbg !7053
  %113 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7054
  call void @reg_write(%struct.fw_ohci* %113, i32 80, i32 -2147352576) #11, !dbg !7055
  %114 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7056
  call void @reg_write(%struct.fw_ohci* %114, i32 224, i32 1536) #11, !dbg !7057
  %115 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7058
  %ar_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %115, i32 0, i32 17, !dbg !7059
  call void @ar_context_run(%struct.ar_context* %ar_request_ctx) #11, !dbg !7060
  %116 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7061
  %ar_response_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %116, i32 0, i32 18, !dbg !7062
  call void @ar_context_run(%struct.ar_context* %ar_response_ctx) #11, !dbg !7063
  %117 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7064
  call void @flush_writes(%struct.fw_ohci* %117) #11, !dbg !7065
  %118 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7066
  %card105 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %118, i32 0, i32 0, !dbg !7067
  call void @fw_schedule_bus_reset(%struct.fw_card* %card105, i1 zeroext false, i1 zeroext true) #11, !dbg !7068
  store i32 0, i32* %retval, align 4, !dbg !7069
  br label %return, !dbg !7069

return:                                           ; preds = %if.end104, %if.then65, %if.then55, %if.then50, %if.then15, %if.then6, %if.then
  %119 = load i32, i32* %retval, align 4, !dbg !7070
  ret i32 %119, !dbg !7070
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_read_phy_reg(%struct.fw_card* %card, i32 %addr) #2 !dbg !7071 {
entry:
  %card.addr = alloca %struct.fw_card*, align 8
  %addr.addr = alloca i32, align 4
  %ohci = alloca %struct.fw_ohci*, align 8
  %ret = alloca i32, align 4
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !7072, metadata !DIExpression()), !dbg !7073
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !7074, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !7076, metadata !DIExpression()), !dbg !7077
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !7078
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %0) #11, !dbg !7079
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !7077
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7080, metadata !DIExpression()), !dbg !7081
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7082
  %phy_reg_mutex = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 14, !dbg !7083
  call void @mutex_lock(%struct.mutex* %phy_reg_mutex) #11, !dbg !7084
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7085
  %3 = load i32, i32* %addr.addr, align 4, !dbg !7086
  %call1 = call i32 @read_phy_reg(%struct.fw_ohci* %2, i32 %3) #11, !dbg !7087
  store i32 %call1, i32* %ret, align 4, !dbg !7088
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7089
  %phy_reg_mutex2 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %4, i32 0, i32 14, !dbg !7090
  call void @mutex_unlock(%struct.mutex* %phy_reg_mutex2) #11, !dbg !7091
  %5 = load i32, i32* %ret, align 4, !dbg !7092
  ret i32 %5, !dbg !7093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_update_phy_reg(%struct.fw_card* %card, i32 %addr, i32 %clear_bits, i32 %set_bits) #2 !dbg !7094 {
entry:
  %card.addr = alloca %struct.fw_card*, align 8
  %addr.addr = alloca i32, align 4
  %clear_bits.addr = alloca i32, align 4
  %set_bits.addr = alloca i32, align 4
  %ohci = alloca %struct.fw_ohci*, align 8
  %ret = alloca i32, align 4
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !7095, metadata !DIExpression()), !dbg !7096
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !7097, metadata !DIExpression()), !dbg !7098
  store i32 %clear_bits, i32* %clear_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clear_bits.addr, metadata !7099, metadata !DIExpression()), !dbg !7100
  store i32 %set_bits, i32* %set_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set_bits.addr, metadata !7101, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !7103, metadata !DIExpression()), !dbg !7104
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !7105
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %0) #11, !dbg !7106
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !7104
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7107, metadata !DIExpression()), !dbg !7108
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7109
  %phy_reg_mutex = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 14, !dbg !7110
  call void @mutex_lock(%struct.mutex* %phy_reg_mutex) #11, !dbg !7111
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7112
  %3 = load i32, i32* %addr.addr, align 4, !dbg !7113
  %4 = load i32, i32* %clear_bits.addr, align 4, !dbg !7114
  %5 = load i32, i32* %set_bits.addr, align 4, !dbg !7115
  %call1 = call i32 @update_phy_reg(%struct.fw_ohci* %2, i32 %3, i32 %4, i32 %5) #11, !dbg !7116
  store i32 %call1, i32* %ret, align 4, !dbg !7117
  %6 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7118
  %phy_reg_mutex2 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %6, i32 0, i32 14, !dbg !7119
  call void @mutex_unlock(%struct.mutex* %phy_reg_mutex2) #11, !dbg !7120
  %7 = load i32, i32* %ret, align 4, !dbg !7121
  ret i32 %7, !dbg !7122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_set_config_rom(%struct.fw_card* %card, i32* %config_rom, i64 %length) #2 !dbg !7123 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5615, metadata !DIExpression()), !dbg !7124
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5621, metadata !DIExpression()), !dbg !7126
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.fw_card*, align 8
  %config_rom.addr = alloca i32*, align 8
  %length.addr = alloca i64, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %next_config_rom = alloca i32*, align 8
  %next_config_rom_bus = alloca i64, align 8
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !7128, metadata !DIExpression()), !dbg !7129
  store i32* %config_rom, i32** %config_rom.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %config_rom.addr, metadata !7130, metadata !DIExpression()), !dbg !7131
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !7132, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !7134, metadata !DIExpression()), !dbg !7135
  call void @llvm.dbg.declare(metadata i32** %next_config_rom, metadata !7136, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.declare(metadata i64* %next_config_rom_bus, metadata !7138, metadata !DIExpression()), !dbg !7139
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !7140
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %0) #11, !dbg !7141
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !7142
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7143
  %card1 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 0, !dbg !7144
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card1, i32 0, i32 1, !dbg !7145
  %2 = load %struct.device*, %struct.device** %device, align 8, !dbg !7145
  %call2 = call i8* @dma_alloc_coherent(%struct.device* %2, i64 1024, i64* %next_config_rom_bus, i32 3264) #11, !dbg !7146
  %3 = bitcast i8* %call2 to i32*, !dbg !7146
  store i32* %3, i32** %next_config_rom, align 8, !dbg !7147
  %4 = load i32*, i32** %next_config_rom, align 8, !dbg !7148
  %cmp = icmp eq i32* %4, null, !dbg !7150
  br i1 %cmp, label %if.then, label %if.end, !dbg !7151

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7152
  br label %return, !dbg !7152

if.end:                                           ; preds = %entry
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7153
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %5, i32 0, i32 13, !dbg !7154
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !7155
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7156, !srcloc !5814
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7157
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !7157
  %rlock.i = bitcast %union.anon.4* %7 to %struct.raw_spinlock*, !dbg !7157
  %8 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7158
  %next_config_rom3 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %8, i32 0, i32 32, !dbg !7160
  %9 = load i32*, i32** %next_config_rom3, align 8, !dbg !7160
  %cmp4 = icmp eq i32* %9, null, !dbg !7161
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !7162

if.then5:                                         ; preds = %if.end
  %10 = load i32*, i32** %next_config_rom, align 8, !dbg !7163
  %11 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7165
  %next_config_rom6 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %11, i32 0, i32 32, !dbg !7166
  store i32* %10, i32** %next_config_rom6, align 8, !dbg !7167
  %12 = load i64, i64* %next_config_rom_bus, align 8, !dbg !7168
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7169
  %next_config_rom_bus7 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %13, i32 0, i32 33, !dbg !7170
  store i64 %12, i64* %next_config_rom_bus7, align 8, !dbg !7171
  store i32* null, i32** %next_config_rom, align 8, !dbg !7172
  br label %if.end8, !dbg !7173

if.end8:                                          ; preds = %if.then5, %if.end
  %14 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7174
  %next_config_rom9 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %14, i32 0, i32 32, !dbg !7175
  %15 = load i32*, i32** %next_config_rom9, align 8, !dbg !7175
  %16 = load i32*, i32** %config_rom.addr, align 8, !dbg !7176
  %17 = load i64, i64* %length.addr, align 8, !dbg !7177
  call void @copy_config_rom(i32* %15, i32* %16, i64 %17) #11, !dbg !7178
  %18 = load i32*, i32** %config_rom.addr, align 8, !dbg !7179
  %arrayidx = getelementptr i32, i32* %18, i64 0, !dbg !7179
  %19 = load i32, i32* %arrayidx, align 4, !dbg !7179
  %20 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7180
  %next_header = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %20, i32 0, i32 34, !dbg !7181
  store i32 %19, i32* %next_header, align 8, !dbg !7182
  %21 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7183
  %next_config_rom10 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %21, i32 0, i32 32, !dbg !7184
  %22 = load i32*, i32** %next_config_rom10, align 8, !dbg !7184
  %arrayidx11 = getelementptr i32, i32* %22, i64 0, !dbg !7183
  store i32 0, i32* %arrayidx11, align 4, !dbg !7185
  %23 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7186
  %24 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7187
  %next_config_rom_bus12 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %24, i32 0, i32 33, !dbg !7188
  %25 = load i64, i64* %next_config_rom_bus12, align 8, !dbg !7188
  %conv = trunc i64 %25 to i32, !dbg !7187
  call void @reg_write(%struct.fw_ohci* %23, i32 52, i32 %conv) #11, !dbg !7189
  %26 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7190
  %lock13 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %26, i32 0, i32 13, !dbg !7191
  store %struct.spinlock* %lock13, %struct.spinlock** %lock.addr.i21, align 8
  call void @arch_local_irq_enable() #15, !dbg !7192
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7193, !srcloc !5833
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !7194
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !7194
  %rlock.i22 = bitcast %union.anon.4* %28 to %struct.raw_spinlock*, !dbg !7194
  %29 = load i32*, i32** %next_config_rom, align 8, !dbg !7195
  %cmp14 = icmp ne i32* %29, null, !dbg !7197
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !7198

if.then16:                                        ; preds = %if.end8
  %30 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7199
  %card17 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %30, i32 0, i32 0, !dbg !7200
  %device18 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card17, i32 0, i32 1, !dbg !7201
  %31 = load %struct.device*, %struct.device** %device18, align 8, !dbg !7201
  %32 = load i32*, i32** %next_config_rom, align 8, !dbg !7202
  %33 = bitcast i32* %32 to i8*, !dbg !7202
  %34 = load i64, i64* %next_config_rom_bus, align 8, !dbg !7203
  call void @dma_free_coherent(%struct.device* %31, i64 1024, i8* %33, i64 %34) #11, !dbg !7204
  br label %if.end19, !dbg !7204

if.end19:                                         ; preds = %if.then16, %if.end8
  %35 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7205
  %card20 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %35, i32 0, i32 0, !dbg !7206
  call void @fw_schedule_bus_reset(%struct.fw_card* %card20, i1 zeroext true, i1 zeroext true) #11, !dbg !7207
  store i32 0, i32* %retval, align 4, !dbg !7208
  br label %return, !dbg !7208

return:                                           ; preds = %if.end19, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !7209
  ret i32 %36, !dbg !7209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ohci_send_request(%struct.fw_card* %card, %struct.fw_packet* %packet) #2 !dbg !7210 {
entry:
  %card.addr = alloca %struct.fw_card*, align 8
  %packet.addr = alloca %struct.fw_packet*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !7211, metadata !DIExpression()), !dbg !7212
  store %struct.fw_packet* %packet, %struct.fw_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_packet** %packet.addr, metadata !7213, metadata !DIExpression()), !dbg !7214
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !7215, metadata !DIExpression()), !dbg !7216
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !7217
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %0) #11, !dbg !7218
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !7216
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7219
  %at_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 19, !dbg !7220
  %2 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7221
  call void @at_context_transmit(%struct.context* %at_request_ctx, %struct.fw_packet* %2) #11, !dbg !7222
  ret void, !dbg !7223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ohci_send_response(%struct.fw_card* %card, %struct.fw_packet* %packet) #2 !dbg !7224 {
entry:
  %card.addr = alloca %struct.fw_card*, align 8
  %packet.addr = alloca %struct.fw_packet*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !7225, metadata !DIExpression()), !dbg !7226
  store %struct.fw_packet* %packet, %struct.fw_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_packet** %packet.addr, metadata !7227, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !7229, metadata !DIExpression()), !dbg !7230
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !7231
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %0) #11, !dbg !7232
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !7230
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7233
  %at_response_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 20, !dbg !7234
  %2 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7235
  call void @at_context_transmit(%struct.context* %at_response_ctx, %struct.fw_packet* %2) #11, !dbg !7236
  ret void, !dbg !7237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_cancel_packet(%struct.fw_card* %card, %struct.fw_packet* %packet) #2 !dbg !7238 {
entry:
  %card.addr = alloca %struct.fw_card*, align 8
  %packet.addr = alloca %struct.fw_packet*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %ctx = alloca %struct.context*, align 8
  %driver_data = alloca %struct.driver_data*, align 8
  %ret = alloca i32, align 4
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !7239, metadata !DIExpression()), !dbg !7240
  store %struct.fw_packet* %packet, %struct.fw_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_packet** %packet.addr, metadata !7241, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !7243, metadata !DIExpression()), !dbg !7244
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !7245
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %0) #11, !dbg !7246
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !7244
  call void @llvm.dbg.declare(metadata %struct.context** %ctx, metadata !7247, metadata !DIExpression()), !dbg !7248
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7249
  %at_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 19, !dbg !7250
  store %struct.context* %at_request_ctx, %struct.context** %ctx, align 8, !dbg !7248
  call void @llvm.dbg.declare(metadata %struct.driver_data** %driver_data, metadata !7251, metadata !DIExpression()), !dbg !7252
  %2 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7253
  %driver_data1 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %2, i32 0, i32 12, !dbg !7254
  %3 = load i8*, i8** %driver_data1, align 8, !dbg !7254
  %4 = bitcast i8* %3 to %struct.driver_data*, !dbg !7253
  store %struct.driver_data* %4, %struct.driver_data** %driver_data, align 8, !dbg !7252
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7255, metadata !DIExpression()), !dbg !7256
  store i32 -2, i32* %ret, align 4, !dbg !7256
  %5 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !7257
  %tasklet = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 12, !dbg !7258
  call void @tasklet_disable(%struct.tasklet_struct* %tasklet) #11, !dbg !7259
  %6 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7260
  %ack = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %6, i32 0, i32 10, !dbg !7262
  %7 = load i32, i32* %ack, align 8, !dbg !7262
  %cmp = icmp ne i32 %7, 0, !dbg !7263
  br i1 %cmp, label %if.then, label %if.end, !dbg !7264

if.then:                                          ; preds = %entry
  br label %out, !dbg !7265

if.end:                                           ; preds = %entry
  %8 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7266
  %payload_mapped = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %8, i32 0, i32 7, !dbg !7268
  %9 = load i8, i8* %payload_mapped, align 8, !dbg !7268
  %tobool = trunc i8 %9 to i1, !dbg !7268
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !7269

if.then2:                                         ; preds = %if.end
  %10 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7270
  %card3 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %10, i32 0, i32 0, !dbg !7270
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card3, i32 0, i32 1, !dbg !7270
  %11 = load %struct.device*, %struct.device** %device, align 8, !dbg !7270
  %12 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7270
  %payload_bus = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %12, i32 0, i32 6, !dbg !7270
  %13 = load i64, i64* %payload_bus, align 8, !dbg !7270
  %14 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7270
  %payload_length = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %14, i32 0, i32 5, !dbg !7270
  %15 = load i64, i64* %payload_length, align 8, !dbg !7270
  call void @dma_unmap_single_attrs(%struct.device* %11, i64 %13, i64 %15, i32 1, i64 0) #11, !dbg !7270
  br label %if.end4, !dbg !7270

if.end4:                                          ; preds = %if.then2, %if.end
  %16 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7271
  %17 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7272
  %speed = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %17, i32 0, i32 0, !dbg !7273
  %18 = load i32, i32* %speed, align 8, !dbg !7273
  %19 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7274
  %header = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %19, i32 0, i32 2, !dbg !7275
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %header, i64 0, i64 0, !dbg !7274
  call void @log_ar_at_event(%struct.fw_ohci* %16, i8 signext 84, i32 %18, i32* %arraydecay, i32 32) #11, !dbg !7276
  %20 = load %struct.driver_data*, %struct.driver_data** %driver_data, align 8, !dbg !7277
  %packet5 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %20, i32 0, i32 1, !dbg !7278
  store %struct.fw_packet* null, %struct.fw_packet** %packet5, align 8, !dbg !7279
  %21 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7280
  %ack6 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %21, i32 0, i32 10, !dbg !7281
  store i32 17, i32* %ack6, align 8, !dbg !7282
  %22 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7283
  %callback = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %22, i32 0, i32 9, !dbg !7284
  %23 = load void (%struct.fw_packet*, %struct.fw_card*, i32)*, void (%struct.fw_packet*, %struct.fw_card*, i32)** %callback, align 8, !dbg !7284
  %24 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7285
  %25 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7286
  %card7 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %25, i32 0, i32 0, !dbg !7287
  %26 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !7288
  %ack8 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %26, i32 0, i32 10, !dbg !7289
  %27 = load i32, i32* %ack8, align 8, !dbg !7289
  call void %23(%struct.fw_packet* %24, %struct.fw_card* %card7, i32 %27) #11, !dbg !7283
  store i32 0, i32* %ret, align 4, !dbg !7290
  br label %out, !dbg !7291

out:                                              ; preds = %if.end4, %if.then
  call void @llvm.dbg.label(metadata !7292), !dbg !7293
  %28 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !7294
  %tasklet9 = getelementptr inbounds %struct.context, %struct.context* %28, i32 0, i32 12, !dbg !7295
  call void @tasklet_enable(%struct.tasklet_struct* %tasklet9) #11, !dbg !7296
  %29 = load i32, i32* %ret, align 4, !dbg !7297
  ret i32 %29, !dbg !7298
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_enable_phys_dma(%struct.fw_card* %card, i32 %node_id, i32 %generation) #2 !dbg !7299 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !7300, metadata !DIExpression()), !dbg !7304
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7306, metadata !DIExpression()), !dbg !7307
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4643, metadata !DIExpression()), !dbg !7308
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.fw_card*, align 8
  %node_id.addr = alloca i32, align 4
  %generation.addr = alloca i32, align 4
  %ohci = alloca %struct.fw_ohci*, align 8
  %flags = alloca i64, align 8
  %n = alloca i32, align 4
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !7315, metadata !DIExpression()), !dbg !7316
  store i32 %node_id, i32* %node_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %node_id.addr, metadata !7317, metadata !DIExpression()), !dbg !7318
  store i32 %generation, i32* %generation.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %generation.addr, metadata !7319, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !7321, metadata !DIExpression()), !dbg !7322
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !7323
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %0) #11, !dbg !7324
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !7322
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7325, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7327, metadata !DIExpression()), !dbg !7328
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7329, metadata !DIExpression()), !dbg !7330
  store i32 0, i32* %ret, align 4, !dbg !7330
  %1 = load i8, i8* @param_remote_dma, align 1, !dbg !7331
  %tobool = trunc i8 %1 to i1, !dbg !7331
  br i1 %tobool, label %if.then, label %if.end, !dbg !7333

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7334
  br label %return, !dbg !7334

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !7335

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !7336

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7337, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7340, metadata !DIExpression()), !dbg !7339
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7339
  %conv = zext i1 %cmp to i32, !dbg !7339
  store i32 1, i32* %tmp, align 4, !dbg !7339
  %2 = load i32, i32* %tmp, align 4, !dbg !7339
  br label %do.body2, !dbg !7341

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7342

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7343

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7345, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7349, metadata !DIExpression()), !dbg !7348
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7348
  %conv8 = zext i1 %cmp7 to i32, !dbg !7348
  store i32 1, i32* %tmp9, align 4, !dbg !7348
  %3 = load i32, i32* %tmp9, align 4, !dbg !7348
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !7350
  store i64 %call10, i64* %flags, align 8, !dbg !7350
  br label %do.end, !dbg !7350

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !7343

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !7342

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7351, !srcloc !7352
  br label %do.body13, !dbg !7351

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7353
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %4, i32 0, i32 13, !dbg !7353
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7354
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !7355
  %rlock.i = bitcast %union.anon.4* %6 to %struct.raw_spinlock*, !dbg !7355
  br label %do.end15, !dbg !7353

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !7351

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7342

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7341

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7336

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7356
  %generation20 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %7, i32 0, i32 3, !dbg !7358
  %8 = load i32, i32* %generation20, align 4, !dbg !7358
  %9 = load i32, i32* %generation.addr, align 4, !dbg !7359
  %cmp21 = icmp ne i32 %8, %9, !dbg !7360
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !7361

if.then23:                                        ; preds = %do.end19
  store i32 -116, i32* %ret, align 4, !dbg !7362
  br label %out, !dbg !7364

if.end24:                                         ; preds = %do.end19
  %10 = load i32, i32* %node_id.addr, align 4, !dbg !7365
  %and = and i32 %10, 65472, !dbg !7366
  %cmp25 = icmp eq i32 %and, 65472, !dbg !7367
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !7368

cond.true:                                        ; preds = %if.end24
  %11 = load i32, i32* %node_id.addr, align 4, !dbg !7369
  %and27 = and i32 %11, 63, !dbg !7370
  br label %cond.end, !dbg !7368

cond.false:                                       ; preds = %if.end24
  br label %cond.end, !dbg !7368

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and27, %cond.true ], [ 63, %cond.false ], !dbg !7368
  store i32 %cond, i32* %n, align 4, !dbg !7371
  %12 = load i32, i32* %n, align 4, !dbg !7372
  %cmp28 = icmp slt i32 %12, 32, !dbg !7374
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !7375

if.then30:                                        ; preds = %cond.end
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7376
  %14 = load i32, i32* %n, align 4, !dbg !7377
  %shl = shl i32 1, %14, !dbg !7378
  call void @reg_write(%struct.fw_ohci* %13, i32 280, i32 %shl) #11, !dbg !7379
  br label %if.end32, !dbg !7379

if.else:                                          ; preds = %cond.end
  %15 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7380
  %16 = load i32, i32* %n, align 4, !dbg !7381
  %sub = sub i32 %16, 32, !dbg !7382
  %shl31 = shl i32 1, %sub, !dbg !7383
  call void @reg_write(%struct.fw_ohci* %15, i32 272, i32 %shl31) #11, !dbg !7384
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then30
  %17 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7385
  call void @flush_writes(%struct.fw_ohci* %17) #11, !dbg !7386
  br label %out, !dbg !7386

out:                                              ; preds = %if.end32, %if.then23
  call void @llvm.dbg.label(metadata !7387), !dbg !7388
  %18 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7389
  %lock33 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %18, i32 0, i32 13, !dbg !7390
  %19 = load i64, i64* %flags, align 8, !dbg !7391
  store %struct.spinlock* %lock33, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !458, metadata !7392, metadata !DIExpression()) #10, !dbg !7395
  call void @llvm.dbg.declare(metadata !458, metadata !7396, metadata !DIExpression()) #10, !dbg !7395
  store i32 1, i32* %tmp.i, align 4, !dbg !7395
  %20 = load i32, i32* %tmp.i, align 4, !dbg !7395
  call void @llvm.dbg.declare(metadata !458, metadata !7397, metadata !DIExpression()) #10, !dbg !7402
  call void @llvm.dbg.declare(metadata !458, metadata !7403, metadata !DIExpression()) #10, !dbg !7402
  store i32 1, i32* %tmp8.i, align 4, !dbg !7402
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !7402
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !7404
  call void @arch_local_irq_restore(i64 %22) #15, !dbg !7404
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7405, !srcloc !7407
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !7408
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !7408
  %rlock.i35 = bitcast %union.anon.4* %24 to %struct.raw_spinlock*, !dbg !7408
  %25 = load i32, i32* %ret, align 4, !dbg !7410
  store i32 %25, i32* %retval, align 4, !dbg !7411
  br label %return, !dbg !7411

return:                                           ; preds = %out, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !7412
  ret i32 %26, !dbg !7412
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_read_csr(%struct.fw_card* %card, i32 %csr_offset) #2 !dbg !7413 {
entry:
  %lock.addr.i61 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i61, metadata !7300, metadata !DIExpression()), !dbg !7414
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7306, metadata !DIExpression()), !dbg !7417
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4643, metadata !DIExpression()), !dbg !7418
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.fw_card*, align 8
  %csr_offset.addr = alloca i32, align 4
  %ohci = alloca %struct.fw_ohci*, align 8
  %flags = alloca i64, align 8
  %value = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy15 = alloca i64, align 8
  %__dummy216 = alloca i64, align 8
  %tmp19 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp54 = alloca i64, align 8
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  store i32 %csr_offset, i32* %csr_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %csr_offset.addr, metadata !7427, metadata !DIExpression()), !dbg !7428
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !7429, metadata !DIExpression()), !dbg !7430
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !7431
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %0) #11, !dbg !7432
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !7430
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7433, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7435, metadata !DIExpression()), !dbg !7436
  %1 = load i32, i32* %csr_offset.addr, align 4, !dbg !7437
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb
    i32 8, label %sw.bb6
    i32 512, label %sw.bb8
    i32 516, label %sw.bb10
    i32 528, label %sw.bb32
    i32 536, label %sw.bb35
  ], !dbg !7438

sw.bb:                                            ; preds = %entry, %entry
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7439
  %is_root = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %2, i32 0, i32 9, !dbg !7441
  %3 = load i8, i8* %is_root, align 1, !dbg !7441
  %tobool = trunc i8 %3 to i1, !dbg !7441
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7442

land.lhs.true:                                    ; preds = %sw.bb
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7443
  %call1 = call i32 @reg_read(%struct.fw_ohci* %4, i32 224) #11, !dbg !7444
  %and = and i32 %call1, 2097152, !dbg !7445
  %tobool2 = icmp ne i32 %and, 0, !dbg !7445
  br i1 %tobool2, label %if.then, label %if.else, !dbg !7446

if.then:                                          ; preds = %land.lhs.true
  store i32 256, i32* %value, align 4, !dbg !7447
  br label %if.end, !dbg !7448

if.else:                                          ; preds = %land.lhs.true, %sw.bb
  store i32 0, i32* %value, align 4, !dbg !7449
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7450
  %csr_state_setclear_abdicate = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %5, i32 0, i32 10, !dbg !7452
  %6 = load i8, i8* %csr_state_setclear_abdicate, align 2, !dbg !7452
  %tobool3 = trunc i8 %6 to i1, !dbg !7452
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7453

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* %value, align 4, !dbg !7454
  %or = or i32 %7, 1024, !dbg !7454
  store i32 %or, i32* %value, align 4, !dbg !7454
  br label %if.end5, !dbg !7455

if.end5:                                          ; preds = %if.then4, %if.end
  %8 = load i32, i32* %value, align 4, !dbg !7456
  store i32 %8, i32* %retval, align 4, !dbg !7457
  br label %return, !dbg !7457

sw.bb6:                                           ; preds = %entry
  %9 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7458
  %call7 = call i32 @reg_read(%struct.fw_ohci* %9, i32 232) #11, !dbg !7459
  %shl = shl i32 %call7, 16, !dbg !7460
  store i32 %shl, i32* %retval, align 4, !dbg !7461
  br label %return, !dbg !7461

sw.bb8:                                           ; preds = %entry
  %10 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7462
  %call9 = call i32 @get_cycle_time(%struct.fw_ohci* %10) #11, !dbg !7463
  store i32 %call9, i32* %retval, align 4, !dbg !7464
  br label %return, !dbg !7464

sw.bb10:                                          ; preds = %entry
  br label %do.body, !dbg !7465

do.body:                                          ; preds = %sw.bb10
  br label %do.body11, !dbg !7466

do.body11:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7467, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7470, metadata !DIExpression()), !dbg !7469
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7469
  %conv = zext i1 %cmp to i32, !dbg !7469
  store i32 1, i32* %tmp, align 4, !dbg !7469
  %11 = load i32, i32* %tmp, align 4, !dbg !7469
  br label %do.body12, !dbg !7471

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !7472

do.body13:                                        ; preds = %do.body12
  br label %do.body14, !dbg !7473

do.body14:                                        ; preds = %do.body13
  call void @llvm.dbg.declare(metadata i64* %__dummy15, metadata !7475, metadata !DIExpression()), !dbg !7478
  call void @llvm.dbg.declare(metadata i64* %__dummy216, metadata !7479, metadata !DIExpression()), !dbg !7478
  %cmp17 = icmp eq i64* %__dummy15, %__dummy216, !dbg !7478
  %conv18 = zext i1 %cmp17 to i32, !dbg !7478
  store i32 1, i32* %tmp19, align 4, !dbg !7478
  %12 = load i32, i32* %tmp19, align 4, !dbg !7478
  %call20 = call i64 @arch_local_irq_save() #11, !dbg !7480
  store i64 %call20, i64* %flags, align 8, !dbg !7480
  br label %do.end, !dbg !7480

do.end:                                           ; preds = %do.body14
  br label %do.end21, !dbg !7473

do.end21:                                         ; preds = %do.end
  br label %do.body22, !dbg !7472

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7481, !srcloc !7482
  br label %do.body23, !dbg !7481

do.body23:                                        ; preds = %do.body22
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7483
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %13, i32 0, i32 13, !dbg !7483
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7484
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !7485
  %rlock.i = bitcast %union.anon.4* %15 to %struct.raw_spinlock*, !dbg !7485
  br label %do.end25, !dbg !7483

do.end25:                                         ; preds = %do.body23
  br label %do.end26, !dbg !7481

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !7472

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !7471

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !7466

do.end29:                                         ; preds = %do.end28
  %16 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7486
  %call30 = call i32 @update_bus_time(%struct.fw_ohci* %16) #11, !dbg !7487
  store i32 %call30, i32* %value, align 4, !dbg !7488
  %17 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7489
  %lock31 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %17, i32 0, i32 13, !dbg !7490
  %18 = load i64, i64* %flags, align 8, !dbg !7491
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i61, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !458, metadata !7392, metadata !DIExpression()) #10, !dbg !7492
  call void @llvm.dbg.declare(metadata !458, metadata !7396, metadata !DIExpression()) #10, !dbg !7492
  store i32 1, i32* %tmp.i, align 4, !dbg !7492
  %19 = load i32, i32* %tmp.i, align 4, !dbg !7492
  call void @llvm.dbg.declare(metadata !458, metadata !7397, metadata !DIExpression()) #10, !dbg !7493
  call void @llvm.dbg.declare(metadata !458, metadata !7403, metadata !DIExpression()) #10, !dbg !7493
  store i32 1, i32* %tmp8.i, align 4, !dbg !7493
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !7493
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !7494
  call void @arch_local_irq_restore(i64 %21) #15, !dbg !7494
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7495, !srcloc !7407
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i61, align 8, !dbg !7496
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !7496
  %rlock.i62 = bitcast %union.anon.4* %23 to %struct.raw_spinlock*, !dbg !7496
  %24 = load i32, i32* %value, align 4, !dbg !7497
  store i32 %24, i32* %retval, align 4, !dbg !7498
  br label %return, !dbg !7498

sw.bb32:                                          ; preds = %entry
  %25 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7499
  %call33 = call i32 @reg_read(%struct.fw_ohci* %25, i32 8) #11, !dbg !7500
  store i32 %call33, i32* %value, align 4, !dbg !7501
  %26 = load i32, i32* %value, align 4, !dbg !7502
  %shr = lshr i32 %26, 4, !dbg !7503
  %and34 = and i32 %shr, 268431375, !dbg !7504
  store i32 %and34, i32* %retval, align 4, !dbg !7505
  br label %return, !dbg !7505

sw.bb35:                                          ; preds = %entry
  %27 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7506
  %call36 = call i32 @reg_read(%struct.fw_ohci* %27, i32 220) #11, !dbg !7507
  %and37 = and i32 %call36, 63, !dbg !7508
  %28 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7509
  %pri_req_max = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %28, i32 0, i32 6, !dbg !7510
  %29 = load i32, i32* %pri_req_max, align 8, !dbg !7510
  %shl38 = shl i32 %29, 8, !dbg !7511
  %or39 = or i32 %and37, %shl38, !dbg !7512
  store i32 %or39, i32* %retval, align 4, !dbg !7513
  br label %return, !dbg !7513

sw.default:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7514, metadata !DIExpression()), !dbg !7516
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !7516
  %30 = load i32, i32* %__ret_warn_on, align 4, !dbg !7517
  %tobool40 = icmp ne i32 %30, 0, !dbg !7517
  %lnot = xor i1 %tobool40, true, !dbg !7517
  %lnot41 = xor i1 %lnot, true, !dbg !7517
  %lnot.ext = zext i1 %lnot41 to i32, !dbg !7517
  %conv42 = sext i32 %lnot.ext to i64, !dbg !7517
  %tobool43 = icmp ne i64 %conv42, 0, !dbg !7517
  br i1 %tobool43, label %if.then44, label %if.end53, !dbg !7516

if.then44:                                        ; preds = %sw.default
  br label %do.body45, !dbg !7517

do.body45:                                        ; preds = %if.then44
  br label %do.body46, !dbg !7519

do.body46:                                        ; preds = %do.body45
  br label %do.end47, !dbg !7521

do.end47:                                         ; preds = %do.body46
  br label %do.body48, !dbg !7519

do.body48:                                        ; preds = %do.end47
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.62, i64 0, i64 0), i32 2654, i32 2305, i64 12) #10, !dbg !7523, !srcloc !7525
  br label %do.end49, !dbg !7523

do.end49:                                         ; preds = %do.body48
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 255) #10, !dbg !7526, !srcloc !7528
  br label %do.body50, !dbg !7519

do.body50:                                        ; preds = %do.end49
  br label %do.end51, !dbg !7529

do.end51:                                         ; preds = %do.body50
  br label %do.end52, !dbg !7519

do.end52:                                         ; preds = %do.end51
  br label %if.end53, !dbg !7519

if.end53:                                         ; preds = %do.end52, %sw.default
  %31 = load i32, i32* %__ret_warn_on, align 4, !dbg !7516
  %tobool55 = icmp ne i32 %31, 0, !dbg !7516
  %lnot56 = xor i1 %tobool55, true, !dbg !7516
  %lnot58 = xor i1 %lnot56, true, !dbg !7516
  %lnot.ext59 = zext i1 %lnot58 to i32, !dbg !7516
  %conv60 = sext i32 %lnot.ext59 to i64, !dbg !7516
  store i64 %conv60, i64* %tmp54, align 8, !dbg !7517
  %32 = load i64, i64* %tmp54, align 8, !dbg !7516
  store i32 0, i32* %retval, align 4, !dbg !7531
  br label %return, !dbg !7531

return:                                           ; preds = %if.end53, %sw.bb35, %sw.bb32, %do.end29, %sw.bb8, %sw.bb6, %if.end5
  %33 = load i32, i32* %retval, align 4, !dbg !7532
  ret i32 %33, !dbg !7532
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ohci_write_csr(%struct.fw_card* %card, i32 %csr_offset, i32 %value) #2 !dbg !7533 {
entry:
  %lock.addr.i78 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i78, metadata !7300, metadata !DIExpression()), !dbg !7534
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7306, metadata !DIExpression()), !dbg !7537
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4643, metadata !DIExpression()), !dbg !7538
  %card.addr = alloca %struct.fw_card*, align 8
  %csr_offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %ohci = alloca %struct.fw_ohci*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp71 = alloca i64, align 8
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !7545, metadata !DIExpression()), !dbg !7546
  store i32 %csr_offset, i32* %csr_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %csr_offset.addr, metadata !7547, metadata !DIExpression()), !dbg !7548
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7549, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !7551, metadata !DIExpression()), !dbg !7552
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !7553
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %0) #11, !dbg !7554
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !7552
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7555, metadata !DIExpression()), !dbg !7556
  %1 = load i32, i32* %csr_offset.addr, align 4, !dbg !7557
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb6
    i32 8, label %sw.bb19
    i32 512, label %sw.bb20
    i32 516, label %sw.bb21
    i32 528, label %sw.bb45
    i32 536, label %sw.bb55
  ], !dbg !7558

sw.bb:                                            ; preds = %entry
  %2 = load i32, i32* %value.addr, align 4, !dbg !7559
  %and = and i32 %2, 256, !dbg !7561
  %tobool = icmp ne i32 %and, 0, !dbg !7561
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7562

land.lhs.true:                                    ; preds = %sw.bb
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7563
  %is_root = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %3, i32 0, i32 9, !dbg !7564
  %4 = load i8, i8* %is_root, align 1, !dbg !7564
  %tobool1 = trunc i8 %4 to i1, !dbg !7564
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7565

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7566
  call void @reg_write(%struct.fw_ohci* %5, i32 228, i32 2097152) #11, !dbg !7568
  %6 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7569
  call void @flush_writes(%struct.fw_ohci* %6) #11, !dbg !7570
  br label %if.end, !dbg !7571

if.end:                                           ; preds = %if.then, %land.lhs.true, %sw.bb
  %7 = load i32, i32* %value.addr, align 4, !dbg !7572
  %and2 = and i32 %7, 1024, !dbg !7574
  %tobool3 = icmp ne i32 %and2, 0, !dbg !7574
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7575

if.then4:                                         ; preds = %if.end
  %8 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7576
  %csr_state_setclear_abdicate = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %8, i32 0, i32 10, !dbg !7577
  store i8 0, i8* %csr_state_setclear_abdicate, align 2, !dbg !7578
  br label %if.end5, !dbg !7576

if.end5:                                          ; preds = %if.then4, %if.end
  br label %sw.epilog, !dbg !7579

sw.bb6:                                           ; preds = %entry
  %9 = load i32, i32* %value.addr, align 4, !dbg !7580
  %and7 = and i32 %9, 256, !dbg !7582
  %tobool8 = icmp ne i32 %and7, 0, !dbg !7582
  br i1 %tobool8, label %land.lhs.true9, label %if.end13, !dbg !7583

land.lhs.true9:                                   ; preds = %sw.bb6
  %10 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7584
  %is_root10 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %10, i32 0, i32 9, !dbg !7585
  %11 = load i8, i8* %is_root10, align 1, !dbg !7585
  %tobool11 = trunc i8 %11 to i1, !dbg !7585
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !7586

if.then12:                                        ; preds = %land.lhs.true9
  %12 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7587
  call void @reg_write(%struct.fw_ohci* %12, i32 224, i32 2097152) #11, !dbg !7589
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7590
  call void @flush_writes(%struct.fw_ohci* %13) #11, !dbg !7591
  br label %if.end13, !dbg !7592

if.end13:                                         ; preds = %if.then12, %land.lhs.true9, %sw.bb6
  %14 = load i32, i32* %value.addr, align 4, !dbg !7593
  %and14 = and i32 %14, 1024, !dbg !7595
  %tobool15 = icmp ne i32 %and14, 0, !dbg !7595
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !7596

if.then16:                                        ; preds = %if.end13
  %15 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7597
  %csr_state_setclear_abdicate17 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %15, i32 0, i32 10, !dbg !7598
  store i8 1, i8* %csr_state_setclear_abdicate17, align 2, !dbg !7599
  br label %if.end18, !dbg !7597

if.end18:                                         ; preds = %if.then16, %if.end13
  br label %sw.epilog, !dbg !7600

sw.bb19:                                          ; preds = %entry
  %16 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7601
  %17 = load i32, i32* %value.addr, align 4, !dbg !7602
  %shr = lshr i32 %17, 16, !dbg !7603
  call void @reg_write(%struct.fw_ohci* %16, i32 232, i32 %shr) #11, !dbg !7604
  %18 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7605
  call void @flush_writes(%struct.fw_ohci* %18) #11, !dbg !7606
  br label %sw.epilog, !dbg !7607

sw.bb20:                                          ; preds = %entry
  %19 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7608
  %20 = load i32, i32* %value.addr, align 4, !dbg !7609
  call void @reg_write(%struct.fw_ohci* %19, i32 240, i32 %20) #11, !dbg !7610
  %21 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7611
  call void @reg_write(%struct.fw_ohci* %21, i32 128, i32 8388608) #11, !dbg !7612
  %22 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7613
  call void @flush_writes(%struct.fw_ohci* %22) #11, !dbg !7614
  br label %sw.epilog, !dbg !7615

sw.bb21:                                          ; preds = %entry
  br label %do.body, !dbg !7616

do.body:                                          ; preds = %sw.bb21
  br label %do.body22, !dbg !7617

do.body22:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7618, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7621, metadata !DIExpression()), !dbg !7620
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7620
  %conv = zext i1 %cmp to i32, !dbg !7620
  store i32 1, i32* %tmp, align 4, !dbg !7620
  %23 = load i32, i32* %tmp, align 4, !dbg !7620
  br label %do.body23, !dbg !7622

do.body23:                                        ; preds = %do.body22
  br label %do.body24, !dbg !7623

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !7624

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7626, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !7630, metadata !DIExpression()), !dbg !7629
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !7629
  %conv29 = zext i1 %cmp28 to i32, !dbg !7629
  store i32 1, i32* %tmp30, align 4, !dbg !7629
  %24 = load i32, i32* %tmp30, align 4, !dbg !7629
  %call31 = call i64 @arch_local_irq_save() #11, !dbg !7631
  store i64 %call31, i64* %flags, align 8, !dbg !7631
  br label %do.end, !dbg !7631

do.end:                                           ; preds = %do.body25
  br label %do.end32, !dbg !7624

do.end32:                                         ; preds = %do.end
  br label %do.body33, !dbg !7623

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7632, !srcloc !7633
  br label %do.body34, !dbg !7632

do.body34:                                        ; preds = %do.body33
  %25 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7634
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %25, i32 0, i32 13, !dbg !7634
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7635
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !7636
  %rlock.i = bitcast %union.anon.4* %27 to %struct.raw_spinlock*, !dbg !7636
  br label %do.end36, !dbg !7634

do.end36:                                         ; preds = %do.body34
  br label %do.end37, !dbg !7632

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !7623

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !7622

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !7617

do.end40:                                         ; preds = %do.end39
  %28 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7637
  %call41 = call i32 @update_bus_time(%struct.fw_ohci* %28) #11, !dbg !7638
  %and42 = and i32 %call41, 64, !dbg !7639
  %29 = load i32, i32* %value.addr, align 4, !dbg !7640
  %and43 = and i32 %29, -128, !dbg !7641
  %or = or i32 %and42, %and43, !dbg !7642
  %30 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7643
  %bus_time = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %30, i32 0, i32 7, !dbg !7644
  store i32 %or, i32* %bus_time, align 4, !dbg !7645
  %31 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7646
  %lock44 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %31, i32 0, i32 13, !dbg !7647
  %32 = load i64, i64* %flags, align 8, !dbg !7648
  store %struct.spinlock* %lock44, %struct.spinlock** %lock.addr.i78, align 8
  store i64 %32, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !458, metadata !7392, metadata !DIExpression()) #10, !dbg !7649
  call void @llvm.dbg.declare(metadata !458, metadata !7396, metadata !DIExpression()) #10, !dbg !7649
  store i32 1, i32* %tmp.i, align 4, !dbg !7649
  %33 = load i32, i32* %tmp.i, align 4, !dbg !7649
  call void @llvm.dbg.declare(metadata !458, metadata !7397, metadata !DIExpression()) #10, !dbg !7650
  call void @llvm.dbg.declare(metadata !458, metadata !7403, metadata !DIExpression()) #10, !dbg !7650
  store i32 1, i32* %tmp8.i, align 4, !dbg !7650
  %34 = load i32, i32* %tmp8.i, align 4, !dbg !7650
  %35 = load i64, i64* %flags.addr.i, align 8, !dbg !7651
  call void @arch_local_irq_restore(i64 %35) #15, !dbg !7651
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7652, !srcloc !7407
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i78, align 8, !dbg !7653
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !7653
  %rlock.i79 = bitcast %union.anon.4* %37 to %struct.raw_spinlock*, !dbg !7653
  br label %sw.epilog, !dbg !7654

sw.bb45:                                          ; preds = %entry
  %38 = load i32, i32* %value.addr, align 4, !dbg !7655
  %and46 = and i32 %38, 15, !dbg !7656
  %39 = load i32, i32* %value.addr, align 4, !dbg !7657
  %and47 = and i32 %39, 15, !dbg !7658
  %shl = shl i32 %and47, 4, !dbg !7659
  %or48 = or i32 %and46, %shl, !dbg !7660
  %40 = load i32, i32* %value.addr, align 4, !dbg !7661
  %and49 = and i32 %40, 15, !dbg !7662
  %shl50 = shl i32 %and49, 8, !dbg !7663
  %or51 = or i32 %or48, %shl50, !dbg !7664
  %41 = load i32, i32* %value.addr, align 4, !dbg !7665
  %and52 = and i32 %41, 268431360, !dbg !7666
  %shl53 = shl i32 %and52, 4, !dbg !7667
  %or54 = or i32 %or51, %shl53, !dbg !7668
  store i32 %or54, i32* %value.addr, align 4, !dbg !7669
  %42 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7670
  %43 = load i32, i32* %value.addr, align 4, !dbg !7671
  call void @reg_write(%struct.fw_ohci* %42, i32 8, i32 %43) #11, !dbg !7672
  %44 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7673
  call void @flush_writes(%struct.fw_ohci* %44) #11, !dbg !7674
  br label %sw.epilog, !dbg !7675

sw.bb55:                                          ; preds = %entry
  %45 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7676
  %46 = load i32, i32* %value.addr, align 4, !dbg !7677
  %and56 = and i32 %46, 63, !dbg !7678
  call void @reg_write(%struct.fw_ohci* %45, i32 220, i32 %and56) #11, !dbg !7679
  %47 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7680
  call void @flush_writes(%struct.fw_ohci* %47) #11, !dbg !7681
  br label %sw.epilog, !dbg !7682

sw.default:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7683, metadata !DIExpression()), !dbg !7685
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !7685
  %48 = load i32, i32* %__ret_warn_on, align 4, !dbg !7686
  %tobool57 = icmp ne i32 %48, 0, !dbg !7686
  %lnot = xor i1 %tobool57, true, !dbg !7686
  %lnot58 = xor i1 %lnot, true, !dbg !7686
  %lnot.ext = zext i1 %lnot58 to i32, !dbg !7686
  %conv59 = sext i32 %lnot.ext to i64, !dbg !7686
  %tobool60 = icmp ne i64 %conv59, 0, !dbg !7686
  br i1 %tobool60, label %if.then61, label %if.end70, !dbg !7685

if.then61:                                        ; preds = %sw.default
  br label %do.body62, !dbg !7686

do.body62:                                        ; preds = %if.then61
  br label %do.body63, !dbg !7688

do.body63:                                        ; preds = %do.body62
  br label %do.end64, !dbg !7690

do.end64:                                         ; preds = %do.body63
  br label %do.body65, !dbg !7688

do.body65:                                        ; preds = %do.end64
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.62, i64 0, i64 0), i32 2717, i32 2305, i64 12) #10, !dbg !7692, !srcloc !7694
  br label %do.end66, !dbg !7692

do.end66:                                         ; preds = %do.body65
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 256) #10, !dbg !7695, !srcloc !7697
  br label %do.body67, !dbg !7688

do.body67:                                        ; preds = %do.end66
  br label %do.end68, !dbg !7698

do.end68:                                         ; preds = %do.body67
  br label %do.end69, !dbg !7688

do.end69:                                         ; preds = %do.end68
  br label %if.end70, !dbg !7688

if.end70:                                         ; preds = %do.end69, %sw.default
  %49 = load i32, i32* %__ret_warn_on, align 4, !dbg !7685
  %tobool72 = icmp ne i32 %49, 0, !dbg !7685
  %lnot73 = xor i1 %tobool72, true, !dbg !7685
  %lnot75 = xor i1 %lnot73, true, !dbg !7685
  %lnot.ext76 = zext i1 %lnot75 to i32, !dbg !7685
  %conv77 = sext i32 %lnot.ext76 to i64, !dbg !7685
  store i64 %conv77, i64* %tmp71, align 8, !dbg !7686
  %50 = load i64, i64* %tmp71, align 8, !dbg !7685
  br label %sw.epilog, !dbg !7700

sw.epilog:                                        ; preds = %if.end70, %sw.bb55, %sw.bb45, %do.end40, %sw.bb20, %sw.bb19, %if.end18, %if.end5
  ret void, !dbg !7701
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.fw_iso_context* @ohci_allocate_iso_context(%struct.fw_card* %card, i32 %type, i32 %channel, i64 %header_size) #2 !dbg !7702 {
entry:
  %lock.addr.i85 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i85, metadata !5615, metadata !DIExpression()), !dbg !7703
  %lock.addr.i83 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i83, metadata !5621, metadata !DIExpression()), !dbg !7705
  %lock.addr.i81 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i81, metadata !5615, metadata !DIExpression()), !dbg !7707
  %x.addr.i78 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i78, metadata !6399, metadata !DIExpression()), !dbg !7709
  %r.i79 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i79, metadata !6407, metadata !DIExpression()), !dbg !7712
  %x.addr.i75 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i75, metadata !6399, metadata !DIExpression()), !dbg !7713
  %r.i76 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i76, metadata !6407, metadata !DIExpression()), !dbg !7715
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6399, metadata !DIExpression()), !dbg !7716
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !6407, metadata !DIExpression()), !dbg !7718
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5621, metadata !DIExpression()), !dbg !7719
  %retval = alloca %struct.fw_iso_context*, align 8
  %card.addr = alloca %struct.fw_card*, align 8
  %type.addr = alloca i32, align 4
  %channel.addr = alloca i32, align 4
  %header_size.addr = alloca i64, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %ctx = alloca %struct.iso_context*, align 8
  %callback = alloca i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)*, align 8
  %channels = alloca i64*, align 8
  %mask = alloca i32*, align 8
  %regs = alloca i32, align 4
  %index = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !7721, metadata !DIExpression()), !dbg !7722
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7723, metadata !DIExpression()), !dbg !7724
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7725, metadata !DIExpression()), !dbg !7726
  store i64 %header_size, i64* %header_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %header_size.addr, metadata !7727, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !7729, metadata !DIExpression()), !dbg !7730
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !7731
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %0) #11, !dbg !7732
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !7730
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx, metadata !7733, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.declare(metadata i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)** %callback, metadata !7735, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.declare(metadata i64** %channels, metadata !7737, metadata !DIExpression()), !dbg !7738
  call void @llvm.dbg.declare(metadata i32** %mask, metadata !7739, metadata !DIExpression()), !dbg !7740
  call void @llvm.dbg.declare(metadata i32* %regs, metadata !7741, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7743, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7745, metadata !DIExpression()), !dbg !7746
  store i32 -16, i32* %ret, align 4, !dbg !7746
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7747
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 13, !dbg !7748
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !7749
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7750, !srcloc !5814
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7751
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !7751
  %rlock.i = bitcast %union.anon.4* %3 to %struct.raw_spinlock*, !dbg !7751
  %4 = load i32, i32* %type.addr, align 4, !dbg !7752
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb21
  ], !dbg !7753

sw.bb:                                            ; preds = %entry
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7754
  %it_context_mask = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %5, i32 0, i32 22, !dbg !7755
  store i32* %it_context_mask, i32** %mask, align 8, !dbg !7756
  store i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)* @handle_it_packet, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)** %callback, align 8, !dbg !7757
  %6 = load i32*, i32** %mask, align 8, !dbg !7758
  %7 = load i32, i32* %6, align 4, !dbg !7759
  store i32 %7, i32* %x.addr.i, align 4
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !7760
  %9 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %8, i32 -1) #9, !dbg !7761, !srcloc !6499
  store i32 %9, i32* %r.i, align 4, !dbg !7761
  %10 = load i32, i32* %r.i, align 4, !dbg !7762
  %add.i = add i32 %10, 1, !dbg !7763
  %sub = sub i32 %add.i, 1, !dbg !7764
  store i32 %sub, i32* %index, align 4, !dbg !7765
  %11 = load i32, i32* %index, align 4, !dbg !7766
  %cmp = icmp sge i32 %11, 0, !dbg !7768
  br i1 %cmp, label %if.then, label %if.end, !dbg !7769

if.then:                                          ; preds = %sw.bb
  %12 = load i32, i32* %index, align 4, !dbg !7770
  %shl = shl i32 1, %12, !dbg !7772
  %neg = xor i32 %shl, -1, !dbg !7773
  %13 = load i32*, i32** %mask, align 8, !dbg !7774
  %14 = load i32, i32* %13, align 4, !dbg !7775
  %and = and i32 %14, %neg, !dbg !7775
  store i32 %and, i32* %13, align 4, !dbg !7775
  %15 = load i32, i32* %index, align 4, !dbg !7776
  %mul = mul i32 16, %15, !dbg !7776
  %add = add i32 512, %mul, !dbg !7776
  store i32 %add, i32* %regs, align 4, !dbg !7777
  %16 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7778
  %it_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %16, i32 0, i32 23, !dbg !7779
  %17 = load %struct.iso_context*, %struct.iso_context** %it_context_list, align 8, !dbg !7779
  %18 = load i32, i32* %index, align 4, !dbg !7780
  %idxprom = sext i32 %18 to i64, !dbg !7778
  %arrayidx = getelementptr %struct.iso_context, %struct.iso_context* %17, i64 %idxprom, !dbg !7778
  store %struct.iso_context* %arrayidx, %struct.iso_context** %ctx, align 8, !dbg !7781
  br label %if.end, !dbg !7782

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !7783

sw.bb2:                                           ; preds = %entry
  %19 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7784
  %ir_context_channels = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %19, i32 0, i32 24, !dbg !7785
  store i64* %ir_context_channels, i64** %channels, align 8, !dbg !7786
  %20 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7787
  %ir_context_mask = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %20, i32 0, i32 26, !dbg !7788
  store i32* %ir_context_mask, i32** %mask, align 8, !dbg !7789
  store i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)* @handle_ir_packet_per_buffer, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)** %callback, align 8, !dbg !7790
  %21 = load i64*, i64** %channels, align 8, !dbg !7791
  %22 = load i64, i64* %21, align 8, !dbg !7792
  %23 = load i32, i32* %channel.addr, align 4, !dbg !7793
  %sh_prom = zext i32 %23 to i64, !dbg !7794
  %shl3 = shl i64 1, %sh_prom, !dbg !7794
  %and4 = and i64 %22, %shl3, !dbg !7795
  %tobool = icmp ne i64 %and4, 0, !dbg !7795
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7792

cond.true:                                        ; preds = %sw.bb2
  %24 = load i32*, i32** %mask, align 8, !dbg !7796
  %25 = load i32, i32* %24, align 4, !dbg !7797
  store i32 %25, i32* %x.addr.i75, align 4
  %26 = load i32, i32* %x.addr.i75, align 4, !dbg !7798
  %27 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %26, i32 -1) #9, !dbg !7799, !srcloc !6499
  store i32 %27, i32* %r.i76, align 4, !dbg !7799
  %28 = load i32, i32* %r.i76, align 4, !dbg !7800
  %add.i77 = add i32 %28, 1, !dbg !7801
  %sub6 = sub i32 %add.i77, 1, !dbg !7802
  br label %cond.end, !dbg !7792

cond.false:                                       ; preds = %sw.bb2
  br label %cond.end, !dbg !7792

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub6, %cond.true ], [ -1, %cond.false ], !dbg !7792
  store i32 %cond, i32* %index, align 4, !dbg !7803
  %29 = load i32, i32* %index, align 4, !dbg !7804
  %cmp7 = icmp sge i32 %29, 0, !dbg !7806
  br i1 %cmp7, label %if.then8, label %if.end20, !dbg !7807

if.then8:                                         ; preds = %cond.end
  %30 = load i32, i32* %channel.addr, align 4, !dbg !7808
  %sh_prom9 = zext i32 %30 to i64, !dbg !7810
  %shl10 = shl i64 1, %sh_prom9, !dbg !7810
  %neg11 = xor i64 %shl10, -1, !dbg !7811
  %31 = load i64*, i64** %channels, align 8, !dbg !7812
  %32 = load i64, i64* %31, align 8, !dbg !7813
  %and12 = and i64 %32, %neg11, !dbg !7813
  store i64 %and12, i64* %31, align 8, !dbg !7813
  %33 = load i32, i32* %index, align 4, !dbg !7814
  %shl13 = shl i32 1, %33, !dbg !7815
  %neg14 = xor i32 %shl13, -1, !dbg !7816
  %34 = load i32*, i32** %mask, align 8, !dbg !7817
  %35 = load i32, i32* %34, align 4, !dbg !7818
  %and15 = and i32 %35, %neg14, !dbg !7818
  store i32 %and15, i32* %34, align 4, !dbg !7818
  %36 = load i32, i32* %index, align 4, !dbg !7819
  %mul16 = mul i32 32, %36, !dbg !7819
  %add17 = add i32 1024, %mul16, !dbg !7819
  store i32 %add17, i32* %regs, align 4, !dbg !7820
  %37 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7821
  %ir_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %37, i32 0, i32 27, !dbg !7822
  %38 = load %struct.iso_context*, %struct.iso_context** %ir_context_list, align 8, !dbg !7822
  %39 = load i32, i32* %index, align 4, !dbg !7823
  %idxprom18 = sext i32 %39 to i64, !dbg !7821
  %arrayidx19 = getelementptr %struct.iso_context, %struct.iso_context* %38, i64 %idxprom18, !dbg !7821
  store %struct.iso_context* %arrayidx19, %struct.iso_context** %ctx, align 8, !dbg !7824
  br label %if.end20, !dbg !7825

if.end20:                                         ; preds = %if.then8, %cond.end
  br label %sw.epilog, !dbg !7826

sw.bb21:                                          ; preds = %entry
  %40 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7827
  %ir_context_mask22 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %40, i32 0, i32 26, !dbg !7828
  store i32* %ir_context_mask22, i32** %mask, align 8, !dbg !7829
  store i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)* @handle_ir_buffer_fill, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)** %callback, align 8, !dbg !7830
  %41 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7831
  %mc_allocated = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %41, i32 0, i32 29, !dbg !7832
  %42 = load i8, i8* %mc_allocated, align 8, !dbg !7832
  %tobool23 = trunc i8 %42 to i1, !dbg !7832
  br i1 %tobool23, label %cond.false27, label %cond.true24, !dbg !7833

cond.true24:                                      ; preds = %sw.bb21
  %43 = load i32*, i32** %mask, align 8, !dbg !7834
  %44 = load i32, i32* %43, align 4, !dbg !7835
  store i32 %44, i32* %x.addr.i78, align 4
  %45 = load i32, i32* %x.addr.i78, align 4, !dbg !7836
  %46 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %45, i32 -1) #9, !dbg !7837, !srcloc !6499
  store i32 %46, i32* %r.i79, align 4, !dbg !7837
  %47 = load i32, i32* %r.i79, align 4, !dbg !7838
  %add.i80 = add i32 %47, 1, !dbg !7839
  %sub26 = sub i32 %add.i80, 1, !dbg !7840
  br label %cond.end28, !dbg !7833

cond.false27:                                     ; preds = %sw.bb21
  br label %cond.end28, !dbg !7833

cond.end28:                                       ; preds = %cond.false27, %cond.true24
  %cond29 = phi i32 [ %sub26, %cond.true24 ], [ -1, %cond.false27 ], !dbg !7833
  store i32 %cond29, i32* %index, align 4, !dbg !7841
  %48 = load i32, i32* %index, align 4, !dbg !7842
  %cmp30 = icmp sge i32 %48, 0, !dbg !7844
  br i1 %cmp30, label %if.then31, label %if.end41, !dbg !7845

if.then31:                                        ; preds = %cond.end28
  %49 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7846
  %mc_allocated32 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %49, i32 0, i32 29, !dbg !7848
  store i8 1, i8* %mc_allocated32, align 8, !dbg !7849
  %50 = load i32, i32* %index, align 4, !dbg !7850
  %shl33 = shl i32 1, %50, !dbg !7851
  %neg34 = xor i32 %shl33, -1, !dbg !7852
  %51 = load i32*, i32** %mask, align 8, !dbg !7853
  %52 = load i32, i32* %51, align 4, !dbg !7854
  %and35 = and i32 %52, %neg34, !dbg !7854
  store i32 %and35, i32* %51, align 4, !dbg !7854
  %53 = load i32, i32* %index, align 4, !dbg !7855
  %mul36 = mul i32 32, %53, !dbg !7855
  %add37 = add i32 1024, %mul36, !dbg !7855
  store i32 %add37, i32* %regs, align 4, !dbg !7856
  %54 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7857
  %ir_context_list38 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %54, i32 0, i32 27, !dbg !7858
  %55 = load %struct.iso_context*, %struct.iso_context** %ir_context_list38, align 8, !dbg !7858
  %56 = load i32, i32* %index, align 4, !dbg !7859
  %idxprom39 = sext i32 %56 to i64, !dbg !7857
  %arrayidx40 = getelementptr %struct.iso_context, %struct.iso_context* %55, i64 %idxprom39, !dbg !7857
  store %struct.iso_context* %arrayidx40, %struct.iso_context** %ctx, align 8, !dbg !7860
  br label %if.end41, !dbg !7861

if.end41:                                         ; preds = %if.then31, %cond.end28
  br label %sw.epilog, !dbg !7862

sw.default:                                       ; preds = %entry
  store i32 -1, i32* %index, align 4, !dbg !7863
  store i32 -38, i32* %ret, align 4, !dbg !7864
  br label %sw.epilog, !dbg !7865

sw.epilog:                                        ; preds = %sw.default, %if.end41, %if.end20, %if.end
  %57 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7866
  %lock42 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %57, i32 0, i32 13, !dbg !7867
  store %struct.spinlock* %lock42, %struct.spinlock** %lock.addr.i81, align 8
  call void @arch_local_irq_enable() #15, !dbg !7868
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7869, !srcloc !5833
  %58 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i81, align 8, !dbg !7870
  %59 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %58, i32 0, i32 0, !dbg !7870
  %rlock.i82 = bitcast %union.anon.4* %59 to %struct.raw_spinlock*, !dbg !7870
  %60 = load i32, i32* %index, align 4, !dbg !7871
  %cmp43 = icmp slt i32 %60, 0, !dbg !7873
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !7874

if.then44:                                        ; preds = %sw.epilog
  %61 = load i32, i32* %ret, align 4, !dbg !7875
  %conv = sext i32 %61 to i64, !dbg !7875
  %call45 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !7876
  %62 = bitcast i8* %call45 to %struct.fw_iso_context*, !dbg !7876
  store %struct.fw_iso_context* %62, %struct.fw_iso_context** %retval, align 8, !dbg !7877
  br label %return, !dbg !7877

if.end46:                                         ; preds = %sw.epilog
  %63 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !7878
  %64 = bitcast %struct.iso_context* %63 to i8*, !dbg !7879
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 208, i1 false), !dbg !7879
  %65 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !7880
  %header_length = getelementptr inbounds %struct.iso_context, %struct.iso_context* %65, i32 0, i32 3, !dbg !7881
  store i64 0, i64* %header_length, align 8, !dbg !7882
  %call47 = call i64 @__get_free_pages(i32 3264, i32 0) #11, !dbg !7883
  %66 = inttoptr i64 %call47 to i8*, !dbg !7884
  %67 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !7885
  %header = getelementptr inbounds %struct.iso_context, %struct.iso_context* %67, i32 0, i32 2, !dbg !7886
  store i8* %66, i8** %header, align 8, !dbg !7887
  %68 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !7888
  %header48 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %68, i32 0, i32 2, !dbg !7890
  %69 = load i8*, i8** %header48, align 8, !dbg !7890
  %cmp49 = icmp eq i8* %69, null, !dbg !7891
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !7892

if.then51:                                        ; preds = %if.end46
  store i32 -12, i32* %ret, align 4, !dbg !7893
  br label %out, !dbg !7895

if.end52:                                         ; preds = %if.end46
  %70 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !7896
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %70, i32 0, i32 1, !dbg !7897
  %71 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7898
  %72 = load i32, i32* %regs, align 4, !dbg !7899
  %73 = load i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)*, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)** %callback, align 8, !dbg !7900
  %call53 = call i32 @context_init(%struct.context* %context, %struct.fw_ohci* %71, i32 %72, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)* %73) #11, !dbg !7901
  store i32 %call53, i32* %ret, align 4, !dbg !7902
  %74 = load i32, i32* %ret, align 4, !dbg !7903
  %cmp54 = icmp slt i32 %74, 0, !dbg !7905
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !7906

if.then56:                                        ; preds = %if.end52
  br label %out_with_header, !dbg !7907

if.end57:                                         ; preds = %if.end52
  %75 = load i32, i32* %type.addr, align 4, !dbg !7908
  %cmp58 = icmp eq i32 %75, 2, !dbg !7910
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !7911

if.then60:                                        ; preds = %if.end57
  %76 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7912
  call void @set_multichannel_mask(%struct.fw_ohci* %76, i64 0) #11, !dbg !7914
  %77 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !7915
  %mc_completed = getelementptr inbounds %struct.iso_context, %struct.iso_context* %77, i32 0, i32 6, !dbg !7916
  store i16 0, i16* %mc_completed, align 4, !dbg !7917
  br label %if.end61, !dbg !7918

if.end61:                                         ; preds = %if.then60, %if.end57
  %78 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !7919
  %base = getelementptr inbounds %struct.iso_context, %struct.iso_context* %78, i32 0, i32 0, !dbg !7920
  store %struct.fw_iso_context* %base, %struct.fw_iso_context** %retval, align 8, !dbg !7921
  br label %return, !dbg !7921

out_with_header:                                  ; preds = %if.then56
  call void @llvm.dbg.label(metadata !7922), !dbg !7923
  %79 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !7924
  %header62 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %79, i32 0, i32 2, !dbg !7924
  %80 = load i8*, i8** %header62, align 8, !dbg !7924
  %81 = ptrtoint i8* %80 to i64, !dbg !7924
  call void @free_pages(i64 %81, i32 0) #11, !dbg !7924
  br label %out, !dbg !7924

out:                                              ; preds = %out_with_header, %if.then51
  call void @llvm.dbg.label(metadata !7925), !dbg !7926
  %82 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7927
  %lock63 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %82, i32 0, i32 13, !dbg !7928
  store %struct.spinlock* %lock63, %struct.spinlock** %lock.addr.i83, align 8
  call void @arch_local_irq_disable() #15, !dbg !7929
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7930, !srcloc !5814
  %83 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i83, align 8, !dbg !7931
  %84 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %83, i32 0, i32 0, !dbg !7931
  %rlock.i84 = bitcast %union.anon.4* %84 to %struct.raw_spinlock*, !dbg !7931
  %85 = load i32, i32* %type.addr, align 4, !dbg !7932
  switch i32 %85, label %sw.epilog69 [
    i32 1, label %sw.bb64
    i32 2, label %sw.bb67
  ], !dbg !7933

sw.bb64:                                          ; preds = %out
  %86 = load i32, i32* %channel.addr, align 4, !dbg !7934
  %sh_prom65 = zext i32 %86 to i64, !dbg !7936
  %shl66 = shl i64 1, %sh_prom65, !dbg !7936
  %87 = load i64*, i64** %channels, align 8, !dbg !7937
  %88 = load i64, i64* %87, align 8, !dbg !7938
  %or = or i64 %88, %shl66, !dbg !7938
  store i64 %or, i64* %87, align 8, !dbg !7938
  br label %sw.epilog69, !dbg !7939

sw.bb67:                                          ; preds = %out
  %89 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7940
  %mc_allocated68 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %89, i32 0, i32 29, !dbg !7941
  store i8 0, i8* %mc_allocated68, align 8, !dbg !7942
  br label %sw.epilog69, !dbg !7943

sw.epilog69:                                      ; preds = %out, %sw.bb67, %sw.bb64
  %90 = load i32, i32* %index, align 4, !dbg !7944
  %shl70 = shl i32 1, %90, !dbg !7945
  %91 = load i32*, i32** %mask, align 8, !dbg !7946
  %92 = load i32, i32* %91, align 4, !dbg !7947
  %or71 = or i32 %92, %shl70, !dbg !7947
  store i32 %or71, i32* %91, align 4, !dbg !7947
  %93 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !7948
  %lock72 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %93, i32 0, i32 13, !dbg !7949
  store %struct.spinlock* %lock72, %struct.spinlock** %lock.addr.i85, align 8
  call void @arch_local_irq_enable() #15, !dbg !7950
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7951, !srcloc !5833
  %94 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i85, align 8, !dbg !7952
  %95 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %94, i32 0, i32 0, !dbg !7952
  %rlock.i86 = bitcast %union.anon.4* %95 to %struct.raw_spinlock*, !dbg !7952
  %96 = load i32, i32* %ret, align 4, !dbg !7953
  %conv73 = sext i32 %96 to i64, !dbg !7953
  %call74 = call i8* @ERR_PTR(i64 %conv73) #11, !dbg !7954
  %97 = bitcast i8* %call74 to %struct.fw_iso_context*, !dbg !7954
  store %struct.fw_iso_context* %97, %struct.fw_iso_context** %retval, align 8, !dbg !7955
  br label %return, !dbg !7955

return:                                           ; preds = %sw.epilog69, %if.end61, %if.then44
  %98 = load %struct.fw_iso_context*, %struct.fw_iso_context** %retval, align 8, !dbg !7956
  ret %struct.fw_iso_context* %98, !dbg !7956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ohci_free_iso_context(%struct.fw_iso_context* %base) #2 !dbg !7957 {
entry:
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !7300, metadata !DIExpression()), !dbg !7958
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7306, metadata !DIExpression()), !dbg !7960
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4643, metadata !DIExpression()), !dbg !7961
  %base.addr = alloca %struct.fw_iso_context*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %ctx = alloca %struct.iso_context*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iso_context*, align 8
  %flags = alloca i64, align 8
  %index = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.fw_iso_context* %base, %struct.fw_iso_context** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_context** %base.addr, metadata !7968, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !7970, metadata !DIExpression()), !dbg !7971
  %0 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !7972
  %card = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %0, i32 0, i32 0, !dbg !7973
  %1 = load %struct.fw_card*, %struct.fw_card** %card, align 8, !dbg !7973
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %1) #11, !dbg !7974
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !7971
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx, metadata !7975, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7977, metadata !DIExpression()), !dbg !7979
  %2 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !7979
  %3 = bitcast %struct.fw_iso_context* %2 to i8*, !dbg !7979
  store i8* %3, i8** %__mptr, align 8, !dbg !7979
  br label %do.body, !dbg !7979

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7980

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !7979
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !7979
  %5 = bitcast i8* %add.ptr to %struct.iso_context*, !dbg !7979
  store %struct.iso_context* %5, %struct.iso_context** %tmp, align 8, !dbg !7980
  %6 = load %struct.iso_context*, %struct.iso_context** %tmp, align 8, !dbg !7979
  store %struct.iso_context* %6, %struct.iso_context** %ctx, align 8, !dbg !7976
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7982, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7984, metadata !DIExpression()), !dbg !7985
  %7 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !7986
  %call1 = call i32 @ohci_stop_iso(%struct.fw_iso_context* %7) #11, !dbg !7987
  %8 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !7988
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %8, i32 0, i32 1, !dbg !7989
  call void @context_release(%struct.context* %context) #11, !dbg !7990
  %9 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !7991
  %header = getelementptr inbounds %struct.iso_context, %struct.iso_context* %9, i32 0, i32 2, !dbg !7991
  %10 = load i8*, i8** %header, align 8, !dbg !7991
  %11 = ptrtoint i8* %10 to i64, !dbg !7991
  call void @free_pages(i64 %11, i32 0) #11, !dbg !7991
  br label %do.body2, !dbg !7992

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !7993

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7994, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7997, metadata !DIExpression()), !dbg !7996
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7996
  %conv = zext i1 %cmp to i32, !dbg !7996
  store i32 1, i32* %tmp4, align 4, !dbg !7996
  %12 = load i32, i32* %tmp4, align 4, !dbg !7996
  br label %do.body5, !dbg !7998

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !7999

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !8000

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !8002, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !8006, metadata !DIExpression()), !dbg !8005
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !8005
  %conv11 = zext i1 %cmp10 to i32, !dbg !8005
  store i32 1, i32* %tmp12, align 4, !dbg !8005
  %13 = load i32, i32* %tmp12, align 4, !dbg !8005
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !8007
  store i64 %call13, i64* %flags, align 8, !dbg !8007
  br label %do.end14, !dbg !8007

do.end14:                                         ; preds = %do.body7
  br label %do.end15, !dbg !8000

do.end15:                                         ; preds = %do.end14
  br label %do.body16, !dbg !7999

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8008, !srcloc !8009
  br label %do.body17, !dbg !8008

do.body17:                                        ; preds = %do.body16
  %14 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8010
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %14, i32 0, i32 13, !dbg !8010
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8011
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !8012
  %rlock.i = bitcast %union.anon.4* %16 to %struct.raw_spinlock*, !dbg !8012
  br label %do.end19, !dbg !8010

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !8008

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !7999

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !7998

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !7993

do.end23:                                         ; preds = %do.end22
  %17 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8013
  %type = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %17, i32 0, i32 1, !dbg !8014
  %18 = load i32, i32* %type, align 8, !dbg !8014
  switch i32 %18, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb25
    i32 2, label %sw.bb35
  ], !dbg !8015

sw.bb:                                            ; preds = %do.end23
  %19 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8016
  %20 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8018
  %it_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %20, i32 0, i32 23, !dbg !8019
  %21 = load %struct.iso_context*, %struct.iso_context** %it_context_list, align 8, !dbg !8019
  %sub.ptr.lhs.cast = ptrtoint %struct.iso_context* %19 to i64, !dbg !8020
  %sub.ptr.rhs.cast = ptrtoint %struct.iso_context* %21 to i64, !dbg !8020
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8020
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 208, !dbg !8020
  %conv24 = trunc i64 %sub.ptr.div to i32, !dbg !8016
  store i32 %conv24, i32* %index, align 4, !dbg !8021
  %22 = load i32, i32* %index, align 4, !dbg !8022
  %shl = shl i32 1, %22, !dbg !8023
  %23 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8024
  %it_context_mask = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %23, i32 0, i32 22, !dbg !8025
  %24 = load i32, i32* %it_context_mask, align 4, !dbg !8026
  %or = or i32 %24, %shl, !dbg !8026
  store i32 %or, i32* %it_context_mask, align 4, !dbg !8026
  br label %sw.epilog, !dbg !8027

sw.bb25:                                          ; preds = %do.end23
  %25 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8028
  %26 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8029
  %ir_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %26, i32 0, i32 27, !dbg !8030
  %27 = load %struct.iso_context*, %struct.iso_context** %ir_context_list, align 8, !dbg !8030
  %sub.ptr.lhs.cast26 = ptrtoint %struct.iso_context* %25 to i64, !dbg !8031
  %sub.ptr.rhs.cast27 = ptrtoint %struct.iso_context* %27 to i64, !dbg !8031
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast27, !dbg !8031
  %sub.ptr.div29 = sdiv exact i64 %sub.ptr.sub28, 208, !dbg !8031
  %conv30 = trunc i64 %sub.ptr.div29 to i32, !dbg !8028
  store i32 %conv30, i32* %index, align 4, !dbg !8032
  %28 = load i32, i32* %index, align 4, !dbg !8033
  %shl31 = shl i32 1, %28, !dbg !8034
  %29 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8035
  %ir_context_mask = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %29, i32 0, i32 26, !dbg !8036
  %30 = load i32, i32* %ir_context_mask, align 4, !dbg !8037
  %or32 = or i32 %30, %shl31, !dbg !8037
  store i32 %or32, i32* %ir_context_mask, align 4, !dbg !8037
  %31 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8038
  %channel = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %31, i32 0, i32 2, !dbg !8039
  %32 = load i32, i32* %channel, align 4, !dbg !8039
  %sh_prom = zext i32 %32 to i64, !dbg !8040
  %shl33 = shl i64 1, %sh_prom, !dbg !8040
  %33 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8041
  %ir_context_channels = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %33, i32 0, i32 24, !dbg !8042
  %34 = load i64, i64* %ir_context_channels, align 8, !dbg !8043
  %or34 = or i64 %34, %shl33, !dbg !8043
  store i64 %or34, i64* %ir_context_channels, align 8, !dbg !8043
  br label %sw.epilog, !dbg !8044

sw.bb35:                                          ; preds = %do.end23
  %35 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8045
  %36 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8046
  %ir_context_list36 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %36, i32 0, i32 27, !dbg !8047
  %37 = load %struct.iso_context*, %struct.iso_context** %ir_context_list36, align 8, !dbg !8047
  %sub.ptr.lhs.cast37 = ptrtoint %struct.iso_context* %35 to i64, !dbg !8048
  %sub.ptr.rhs.cast38 = ptrtoint %struct.iso_context* %37 to i64, !dbg !8048
  %sub.ptr.sub39 = sub i64 %sub.ptr.lhs.cast37, %sub.ptr.rhs.cast38, !dbg !8048
  %sub.ptr.div40 = sdiv exact i64 %sub.ptr.sub39, 208, !dbg !8048
  %conv41 = trunc i64 %sub.ptr.div40 to i32, !dbg !8045
  store i32 %conv41, i32* %index, align 4, !dbg !8049
  %38 = load i32, i32* %index, align 4, !dbg !8050
  %shl42 = shl i32 1, %38, !dbg !8051
  %39 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8052
  %ir_context_mask43 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %39, i32 0, i32 26, !dbg !8053
  %40 = load i32, i32* %ir_context_mask43, align 4, !dbg !8054
  %or44 = or i32 %40, %shl42, !dbg !8054
  store i32 %or44, i32* %ir_context_mask43, align 4, !dbg !8054
  %41 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8055
  %mc_channels = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %41, i32 0, i32 28, !dbg !8056
  %42 = load i64, i64* %mc_channels, align 8, !dbg !8056
  %43 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8057
  %ir_context_channels45 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %43, i32 0, i32 24, !dbg !8058
  %44 = load i64, i64* %ir_context_channels45, align 8, !dbg !8059
  %or46 = or i64 %44, %42, !dbg !8059
  store i64 %or46, i64* %ir_context_channels45, align 8, !dbg !8059
  %45 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8060
  %mc_channels47 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %45, i32 0, i32 28, !dbg !8061
  store i64 0, i64* %mc_channels47, align 8, !dbg !8062
  %46 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8063
  %mc_allocated = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %46, i32 0, i32 29, !dbg !8064
  store i8 0, i8* %mc_allocated, align 8, !dbg !8065
  br label %sw.epilog, !dbg !8066

sw.epilog:                                        ; preds = %do.end23, %sw.bb35, %sw.bb25, %sw.bb
  %47 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8067
  %lock48 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %47, i32 0, i32 13, !dbg !8068
  %48 = load i64, i64* %flags, align 8, !dbg !8069
  store %struct.spinlock* %lock48, %struct.spinlock** %lock.addr.i49, align 8
  store i64 %48, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !458, metadata !7392, metadata !DIExpression()) #10, !dbg !8070
  call void @llvm.dbg.declare(metadata !458, metadata !7396, metadata !DIExpression()) #10, !dbg !8070
  store i32 1, i32* %tmp.i, align 4, !dbg !8070
  %49 = load i32, i32* %tmp.i, align 4, !dbg !8070
  call void @llvm.dbg.declare(metadata !458, metadata !7397, metadata !DIExpression()) #10, !dbg !8071
  call void @llvm.dbg.declare(metadata !458, metadata !7403, metadata !DIExpression()) #10, !dbg !8071
  store i32 1, i32* %tmp8.i, align 4, !dbg !8071
  %50 = load i32, i32* %tmp8.i, align 4, !dbg !8071
  %51 = load i64, i64* %flags.addr.i, align 8, !dbg !8072
  call void @arch_local_irq_restore(i64 %51) #15, !dbg !8072
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8073, !srcloc !7407
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !8074
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !8074
  %rlock.i50 = bitcast %union.anon.4* %53 to %struct.raw_spinlock*, !dbg !8074
  ret void, !dbg !8075
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_start_iso(%struct.fw_iso_context* %base, i32 %cycle, i32 %sync, i32 %tags) #2 !dbg !8076 {
entry:
  %retval = alloca i32, align 4
  %base.addr = alloca %struct.fw_iso_context*, align 8
  %cycle.addr = alloca i32, align 4
  %sync.addr = alloca i32, align 4
  %tags.addr = alloca i32, align 4
  %ctx = alloca %struct.iso_context*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iso_context*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %control = alloca i32, align 4
  %match = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.fw_iso_context* %base, %struct.fw_iso_context** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_context** %base.addr, metadata !8077, metadata !DIExpression()), !dbg !8078
  store i32 %cycle, i32* %cycle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cycle.addr, metadata !8079, metadata !DIExpression()), !dbg !8080
  store i32 %sync, i32* %sync.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sync.addr, metadata !8081, metadata !DIExpression()), !dbg !8082
  store i32 %tags, i32* %tags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tags.addr, metadata !8083, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx, metadata !8085, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8087, metadata !DIExpression()), !dbg !8089
  %0 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8089
  %1 = bitcast %struct.fw_iso_context* %0 to i8*, !dbg !8089
  store i8* %1, i8** %__mptr, align 8, !dbg !8089
  br label %do.body, !dbg !8089

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8090

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8089
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8089
  %3 = bitcast i8* %add.ptr to %struct.iso_context*, !dbg !8089
  store %struct.iso_context* %3, %struct.iso_context** %tmp, align 8, !dbg !8090
  %4 = load %struct.iso_context*, %struct.iso_context** %tmp, align 8, !dbg !8089
  store %struct.iso_context* %4, %struct.iso_context** %ctx, align 8, !dbg !8086
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !8092, metadata !DIExpression()), !dbg !8093
  %5 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8094
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %5, i32 0, i32 1, !dbg !8095
  %ohci1 = getelementptr inbounds %struct.context, %struct.context* %context, i32 0, i32 0, !dbg !8096
  %6 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci1, align 8, !dbg !8096
  store %struct.fw_ohci* %6, %struct.fw_ohci** %ohci, align 8, !dbg !8093
  call void @llvm.dbg.declare(metadata i32* %control, metadata !8097, metadata !DIExpression()), !dbg !8098
  store i32 1073741824, i32* %control, align 4, !dbg !8098
  call void @llvm.dbg.declare(metadata i32* %match, metadata !8099, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8101, metadata !DIExpression()), !dbg !8102
  %7 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8103
  %context2 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %7, i32 0, i32 1, !dbg !8105
  %last = getelementptr inbounds %struct.context, %struct.context* %context2, i32 0, i32 8, !dbg !8106
  %8 = load %struct.descriptor*, %struct.descriptor** %last, align 8, !dbg !8106
  %branch_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %8, i32 0, i32 3, !dbg !8107
  %9 = load i32, i32* %branch_address, align 8, !dbg !8107
  %cmp = icmp eq i32 %9, 0, !dbg !8108
  br i1 %cmp, label %if.then, label %if.end, !dbg !8109

if.then:                                          ; preds = %do.end
  store i32 -61, i32* %retval, align 4, !dbg !8110
  br label %return, !dbg !8110

if.end:                                           ; preds = %do.end
  %10 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8111
  %base3 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %10, i32 0, i32 0, !dbg !8112
  %type = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base3, i32 0, i32 1, !dbg !8113
  %11 = load i32, i32* %type, align 8, !dbg !8113
  switch i32 %11, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb11
    i32 1, label %sw.bb13
  ], !dbg !8114

sw.bb:                                            ; preds = %if.end
  %12 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8115
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8117
  %it_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %13, i32 0, i32 23, !dbg !8118
  %14 = load %struct.iso_context*, %struct.iso_context** %it_context_list, align 8, !dbg !8118
  %sub.ptr.lhs.cast = ptrtoint %struct.iso_context* %12 to i64, !dbg !8119
  %sub.ptr.rhs.cast = ptrtoint %struct.iso_context* %14 to i64, !dbg !8119
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8119
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 208, !dbg !8119
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !8115
  store i32 %conv, i32* %index, align 4, !dbg !8120
  store i32 0, i32* %match, align 4, !dbg !8121
  %15 = load i32, i32* %cycle.addr, align 4, !dbg !8122
  %cmp4 = icmp sge i32 %15, 0, !dbg !8124
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !8125

if.then6:                                         ; preds = %sw.bb
  %16 = load i32, i32* %cycle.addr, align 4, !dbg !8126
  %and = and i32 %16, 32767, !dbg !8127
  %shl = shl i32 %and, 16, !dbg !8128
  %or = or i32 -2147483648, %shl, !dbg !8129
  store i32 %or, i32* %match, align 4, !dbg !8130
  br label %if.end7, !dbg !8131

if.end7:                                          ; preds = %if.then6, %sw.bb
  %17 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8132
  %18 = load i32, i32* %index, align 4, !dbg !8133
  %shl8 = shl i32 1, %18, !dbg !8134
  call void @reg_write(%struct.fw_ohci* %17, i32 148, i32 %shl8) #11, !dbg !8135
  %19 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8136
  %20 = load i32, i32* %index, align 4, !dbg !8137
  %shl9 = shl i32 1, %20, !dbg !8138
  call void @reg_write(%struct.fw_ohci* %19, i32 152, i32 %shl9) #11, !dbg !8139
  %21 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8140
  %context10 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %21, i32 0, i32 1, !dbg !8141
  %22 = load i32, i32* %match, align 4, !dbg !8142
  call void @context_run(%struct.context* %context10, i32 %22) #11, !dbg !8143
  br label %sw.epilog, !dbg !8144

sw.bb11:                                          ; preds = %if.end
  %23 = load i32, i32* %control, align 4, !dbg !8145
  %or12 = or i32 %23, -1879048192, !dbg !8145
  store i32 %or12, i32* %control, align 4, !dbg !8145
  br label %sw.bb13, !dbg !8146

sw.bb13:                                          ; preds = %if.end, %sw.bb11
  %24 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8147
  %25 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8148
  %ir_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %25, i32 0, i32 27, !dbg !8149
  %26 = load %struct.iso_context*, %struct.iso_context** %ir_context_list, align 8, !dbg !8149
  %sub.ptr.lhs.cast14 = ptrtoint %struct.iso_context* %24 to i64, !dbg !8150
  %sub.ptr.rhs.cast15 = ptrtoint %struct.iso_context* %26 to i64, !dbg !8150
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !8150
  %sub.ptr.div17 = sdiv exact i64 %sub.ptr.sub16, 208, !dbg !8150
  %conv18 = trunc i64 %sub.ptr.div17 to i32, !dbg !8147
  store i32 %conv18, i32* %index, align 4, !dbg !8151
  %27 = load i32, i32* %tags.addr, align 4, !dbg !8152
  %shl19 = shl i32 %27, 28, !dbg !8153
  %28 = load i32, i32* %sync.addr, align 4, !dbg !8154
  %shl20 = shl i32 %28, 8, !dbg !8155
  %or21 = or i32 %shl19, %shl20, !dbg !8156
  %29 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8157
  %base22 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %29, i32 0, i32 0, !dbg !8158
  %channel = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base22, i32 0, i32 2, !dbg !8159
  %30 = load i32, i32* %channel, align 4, !dbg !8159
  %or23 = or i32 %or21, %30, !dbg !8160
  store i32 %or23, i32* %match, align 4, !dbg !8161
  %31 = load i32, i32* %cycle.addr, align 4, !dbg !8162
  %cmp24 = icmp sge i32 %31, 0, !dbg !8164
  br i1 %cmp24, label %if.then26, label %if.end31, !dbg !8165

if.then26:                                        ; preds = %sw.bb13
  %32 = load i32, i32* %cycle.addr, align 4, !dbg !8166
  %and27 = and i32 %32, 32767, !dbg !8168
  %shl28 = shl i32 %and27, 12, !dbg !8169
  %33 = load i32, i32* %match, align 4, !dbg !8170
  %or29 = or i32 %33, %shl28, !dbg !8170
  store i32 %or29, i32* %match, align 4, !dbg !8170
  %34 = load i32, i32* %control, align 4, !dbg !8171
  %or30 = or i32 %34, 536870912, !dbg !8171
  store i32 %or30, i32* %control, align 4, !dbg !8171
  br label %if.end31, !dbg !8172

if.end31:                                         ; preds = %if.then26, %sw.bb13
  %35 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8173
  %36 = load i32, i32* %index, align 4, !dbg !8174
  %shl32 = shl i32 1, %36, !dbg !8175
  call void @reg_write(%struct.fw_ohci* %35, i32 164, i32 %shl32) #11, !dbg !8176
  %37 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8177
  %38 = load i32, i32* %index, align 4, !dbg !8178
  %shl33 = shl i32 1, %38, !dbg !8179
  call void @reg_write(%struct.fw_ohci* %37, i32 168, i32 %shl33) #11, !dbg !8180
  %39 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8181
  %40 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8182
  %context34 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %40, i32 0, i32 1, !dbg !8182
  %regs = getelementptr inbounds %struct.context, %struct.context* %context34, i32 0, i32 1, !dbg !8182
  %41 = load i32, i32* %regs, align 8, !dbg !8182
  %add = add i32 %41, 16, !dbg !8182
  %42 = load i32, i32* %match, align 4, !dbg !8183
  call void @reg_write(%struct.fw_ohci* %39, i32 %add, i32 %42) #11, !dbg !8184
  %43 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8185
  %context35 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %43, i32 0, i32 1, !dbg !8186
  %44 = load i32, i32* %control, align 4, !dbg !8187
  call void @context_run(%struct.context* %context35, i32 %44) #11, !dbg !8188
  %45 = load i32, i32* %sync.addr, align 4, !dbg !8189
  %conv36 = trunc i32 %45 to i8, !dbg !8189
  %46 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8190
  %sync37 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %46, i32 0, i32 8, !dbg !8191
  store i8 %conv36, i8* %sync37, align 8, !dbg !8192
  %47 = load i32, i32* %tags.addr, align 4, !dbg !8193
  %conv38 = trunc i32 %47 to i8, !dbg !8193
  %48 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8194
  %tags39 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %48, i32 0, i32 9, !dbg !8195
  store i8 %conv38, i8* %tags39, align 1, !dbg !8196
  br label %sw.epilog, !dbg !8197

sw.epilog:                                        ; preds = %if.end, %if.end31, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !8198
  br label %return, !dbg !8198

return:                                           ; preds = %sw.epilog, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !8199
  ret i32 %49, !dbg !8199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_set_iso_channels(%struct.fw_iso_context* %base, i64* %channels) #2 !dbg !8200 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !7300, metadata !DIExpression()), !dbg !8201
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7306, metadata !DIExpression()), !dbg !8204
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4643, metadata !DIExpression()), !dbg !8205
  %base.addr = alloca %struct.fw_iso_context*, align 8
  %channels.addr = alloca i64*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.fw_iso_context* %base, %struct.fw_iso_context** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_context** %base.addr, metadata !8212, metadata !DIExpression()), !dbg !8213
  store i64* %channels, i64** %channels.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %channels.addr, metadata !8214, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !8216, metadata !DIExpression()), !dbg !8217
  %0 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8218
  %card = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %0, i32 0, i32 0, !dbg !8219
  %1 = load %struct.fw_card*, %struct.fw_card** %card, align 8, !dbg !8219
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %1) #11, !dbg !8220
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !8217
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8221, metadata !DIExpression()), !dbg !8222
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8223, metadata !DIExpression()), !dbg !8224
  %2 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8225
  %type = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %2, i32 0, i32 1, !dbg !8226
  %3 = load i32, i32* %type, align 8, !dbg !8226
  switch i32 %3, label %sw.default [
    i32 2, label %sw.bb
  ], !dbg !8227

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !8228

do.body:                                          ; preds = %sw.bb
  br label %do.body1, !dbg !8229

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8230, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8233, metadata !DIExpression()), !dbg !8232
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8232
  %conv = zext i1 %cmp to i32, !dbg !8232
  store i32 1, i32* %tmp, align 4, !dbg !8232
  %4 = load i32, i32* %tmp, align 4, !dbg !8232
  br label %do.body2, !dbg !8234

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8235

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8236

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8238, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8242, metadata !DIExpression()), !dbg !8241
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8241
  %conv8 = zext i1 %cmp7 to i32, !dbg !8241
  store i32 1, i32* %tmp9, align 4, !dbg !8241
  %5 = load i32, i32* %tmp9, align 4, !dbg !8241
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !8243
  store i64 %call10, i64* %flags, align 8, !dbg !8243
  br label %do.end, !dbg !8243

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !8236

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !8235

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8244, !srcloc !8245
  br label %do.body13, !dbg !8244

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8246
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %6, i32 0, i32 13, !dbg !8246
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8247
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !8248
  %rlock.i = bitcast %union.anon.4* %8 to %struct.raw_spinlock*, !dbg !8248
  br label %do.end15, !dbg !8246

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !8244

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8235

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8234

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8229

do.end19:                                         ; preds = %do.end18
  %9 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8249
  %ir_context_channels = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %9, i32 0, i32 24, !dbg !8251
  %10 = load i64, i64* %ir_context_channels, align 8, !dbg !8251
  %neg = xor i64 %10, -1, !dbg !8252
  %11 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8253
  %mc_channels = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %11, i32 0, i32 28, !dbg !8254
  %12 = load i64, i64* %mc_channels, align 8, !dbg !8254
  %neg20 = xor i64 %12, -1, !dbg !8255
  %and = and i64 %neg, %neg20, !dbg !8256
  %13 = load i64*, i64** %channels.addr, align 8, !dbg !8257
  %14 = load i64, i64* %13, align 8, !dbg !8258
  %and21 = and i64 %and, %14, !dbg !8259
  %tobool = icmp ne i64 %and21, 0, !dbg !8259
  br i1 %tobool, label %if.then, label %if.else, !dbg !8260

if.then:                                          ; preds = %do.end19
  %15 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8261
  %ir_context_channels22 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %15, i32 0, i32 24, !dbg !8263
  %16 = load i64, i64* %ir_context_channels22, align 8, !dbg !8263
  %17 = load i64*, i64** %channels.addr, align 8, !dbg !8264
  store i64 %16, i64* %17, align 8, !dbg !8265
  store i32 -16, i32* %ret, align 4, !dbg !8266
  br label %if.end, !dbg !8267

if.else:                                          ; preds = %do.end19
  %18 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8268
  %19 = load i64*, i64** %channels.addr, align 8, !dbg !8270
  %20 = load i64, i64* %19, align 8, !dbg !8271
  call void @set_multichannel_mask(%struct.fw_ohci* %18, i64 %20) #11, !dbg !8272
  store i32 0, i32* %ret, align 4, !dbg !8273
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8274
  %lock23 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %21, i32 0, i32 13, !dbg !8275
  %22 = load i64, i64* %flags, align 8, !dbg !8276
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !458, metadata !7392, metadata !DIExpression()) #10, !dbg !8277
  call void @llvm.dbg.declare(metadata !458, metadata !7396, metadata !DIExpression()) #10, !dbg !8277
  store i32 1, i32* %tmp.i, align 4, !dbg !8277
  %23 = load i32, i32* %tmp.i, align 4, !dbg !8277
  call void @llvm.dbg.declare(metadata !458, metadata !7397, metadata !DIExpression()) #10, !dbg !8278
  call void @llvm.dbg.declare(metadata !458, metadata !7403, metadata !DIExpression()) #10, !dbg !8278
  store i32 1, i32* %tmp8.i, align 4, !dbg !8278
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !8278
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !8279
  call void @arch_local_irq_restore(i64 %25) #15, !dbg !8279
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8280, !srcloc !7407
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !8281
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !8281
  %rlock.i25 = bitcast %union.anon.4* %27 to %struct.raw_spinlock*, !dbg !8281
  br label %sw.epilog, !dbg !8282

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %ret, align 4, !dbg !8283
  br label %sw.epilog, !dbg !8284

sw.epilog:                                        ; preds = %sw.default, %if.end
  %28 = load i32, i32* %ret, align 4, !dbg !8285
  ret i32 %28, !dbg !8286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_queue_iso(%struct.fw_iso_context* %base, %struct.fw_iso_packet* %packet, %struct.fw_iso_buffer* %buffer, i64 %payload) #2 !dbg !8287 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !7300, metadata !DIExpression()), !dbg !8288
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7306, metadata !DIExpression()), !dbg !8290
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4643, metadata !DIExpression()), !dbg !8291
  %base.addr = alloca %struct.fw_iso_context*, align 8
  %packet.addr = alloca %struct.fw_iso_packet*, align 8
  %buffer.addr = alloca %struct.fw_iso_buffer*, align 8
  %payload.addr = alloca i64, align 8
  %ctx = alloca %struct.iso_context*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iso_context*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.fw_iso_context* %base, %struct.fw_iso_context** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_context** %base.addr, metadata !8298, metadata !DIExpression()), !dbg !8299
  store %struct.fw_iso_packet* %packet, %struct.fw_iso_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_packet** %packet.addr, metadata !8300, metadata !DIExpression()), !dbg !8301
  store %struct.fw_iso_buffer* %buffer, %struct.fw_iso_buffer** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_buffer** %buffer.addr, metadata !8302, metadata !DIExpression()), !dbg !8303
  store i64 %payload, i64* %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %payload.addr, metadata !8304, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx, metadata !8306, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8308, metadata !DIExpression()), !dbg !8310
  %0 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8310
  %1 = bitcast %struct.fw_iso_context* %0 to i8*, !dbg !8310
  store i8* %1, i8** %__mptr, align 8, !dbg !8310
  br label %do.body, !dbg !8310

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8311

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8310
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8310
  %3 = bitcast i8* %add.ptr to %struct.iso_context*, !dbg !8310
  store %struct.iso_context* %3, %struct.iso_context** %tmp, align 8, !dbg !8311
  %4 = load %struct.iso_context*, %struct.iso_context** %tmp, align 8, !dbg !8310
  store %struct.iso_context* %4, %struct.iso_context** %ctx, align 8, !dbg !8307
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8315, metadata !DIExpression()), !dbg !8316
  store i32 -38, i32* %ret, align 4, !dbg !8316
  br label %do.body1, !dbg !8317

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !8318

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8319, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8322, metadata !DIExpression()), !dbg !8321
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8321
  %conv = zext i1 %cmp to i32, !dbg !8321
  store i32 1, i32* %tmp3, align 4, !dbg !8321
  %5 = load i32, i32* %tmp3, align 4, !dbg !8321
  br label %do.body4, !dbg !8323

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !8324

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !8325

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !8327, metadata !DIExpression()), !dbg !8330
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !8331, metadata !DIExpression()), !dbg !8330
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !8330
  %conv10 = zext i1 %cmp9 to i32, !dbg !8330
  store i32 1, i32* %tmp11, align 4, !dbg !8330
  %6 = load i32, i32* %tmp11, align 4, !dbg !8330
  %call = call i64 @arch_local_irq_save() #11, !dbg !8332
  store i64 %call, i64* %flags, align 8, !dbg !8332
  br label %do.end12, !dbg !8332

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !8325

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !8324

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8333, !srcloc !8334
  br label %do.body15, !dbg !8333

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8335
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %7, i32 0, i32 1, !dbg !8335
  %ohci = getelementptr inbounds %struct.context, %struct.context* %context, i32 0, i32 0, !dbg !8335
  %8 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8335
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %8, i32 0, i32 13, !dbg !8335
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8336
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !8337
  %rlock.i = bitcast %union.anon.4* %10 to %struct.raw_spinlock*, !dbg !8337
  br label %do.end17, !dbg !8335

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !8333

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8324

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8323

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8318

do.end21:                                         ; preds = %do.end20
  %11 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8338
  %type = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %11, i32 0, i32 1, !dbg !8339
  %12 = load i32, i32* %type, align 8, !dbg !8339
  switch i32 %12, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb23
    i32 2, label %sw.bb25
  ], !dbg !8340

sw.bb:                                            ; preds = %do.end21
  %13 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8341
  %14 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %packet.addr, align 8, !dbg !8343
  %15 = load %struct.fw_iso_buffer*, %struct.fw_iso_buffer** %buffer.addr, align 8, !dbg !8344
  %16 = load i64, i64* %payload.addr, align 8, !dbg !8345
  %call22 = call i32 @queue_iso_transmit(%struct.iso_context* %13, %struct.fw_iso_packet* %14, %struct.fw_iso_buffer* %15, i64 %16) #11, !dbg !8346
  store i32 %call22, i32* %ret, align 4, !dbg !8347
  br label %sw.epilog, !dbg !8348

sw.bb23:                                          ; preds = %do.end21
  %17 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8349
  %18 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %packet.addr, align 8, !dbg !8350
  %19 = load %struct.fw_iso_buffer*, %struct.fw_iso_buffer** %buffer.addr, align 8, !dbg !8351
  %20 = load i64, i64* %payload.addr, align 8, !dbg !8352
  %call24 = call i32 @queue_iso_packet_per_buffer(%struct.iso_context* %17, %struct.fw_iso_packet* %18, %struct.fw_iso_buffer* %19, i64 %20) #11, !dbg !8353
  store i32 %call24, i32* %ret, align 4, !dbg !8354
  br label %sw.epilog, !dbg !8355

sw.bb25:                                          ; preds = %do.end21
  %21 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8356
  %22 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %packet.addr, align 8, !dbg !8357
  %23 = load %struct.fw_iso_buffer*, %struct.fw_iso_buffer** %buffer.addr, align 8, !dbg !8358
  %24 = load i64, i64* %payload.addr, align 8, !dbg !8359
  %call26 = call i32 @queue_iso_buffer_fill(%struct.iso_context* %21, %struct.fw_iso_packet* %22, %struct.fw_iso_buffer* %23, i64 %24) #11, !dbg !8360
  store i32 %call26, i32* %ret, align 4, !dbg !8361
  br label %sw.epilog, !dbg !8362

sw.epilog:                                        ; preds = %do.end21, %sw.bb25, %sw.bb23, %sw.bb
  %25 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8363
  %context27 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %25, i32 0, i32 1, !dbg !8364
  %ohci28 = getelementptr inbounds %struct.context, %struct.context* %context27, i32 0, i32 0, !dbg !8365
  %26 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci28, align 8, !dbg !8365
  %lock29 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %26, i32 0, i32 13, !dbg !8366
  %27 = load i64, i64* %flags, align 8, !dbg !8367
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %27, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !458, metadata !7392, metadata !DIExpression()) #10, !dbg !8368
  call void @llvm.dbg.declare(metadata !458, metadata !7396, metadata !DIExpression()) #10, !dbg !8368
  store i32 1, i32* %tmp.i, align 4, !dbg !8368
  %28 = load i32, i32* %tmp.i, align 4, !dbg !8368
  call void @llvm.dbg.declare(metadata !458, metadata !7397, metadata !DIExpression()) #10, !dbg !8369
  call void @llvm.dbg.declare(metadata !458, metadata !7403, metadata !DIExpression()) #10, !dbg !8369
  store i32 1, i32* %tmp8.i, align 4, !dbg !8369
  %29 = load i32, i32* %tmp8.i, align 4, !dbg !8369
  %30 = load i64, i64* %flags.addr.i, align 8, !dbg !8370
  call void @arch_local_irq_restore(i64 %30) #15, !dbg !8370
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8371, !srcloc !7407
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !8372
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !8372
  %rlock.i31 = bitcast %union.anon.4* %32 to %struct.raw_spinlock*, !dbg !8372
  %33 = load i32, i32* %ret, align 4, !dbg !8373
  ret i32 %33, !dbg !8374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ohci_flush_queue_iso(%struct.fw_iso_context* %base) #2 !dbg !8375 {
entry:
  %base.addr = alloca %struct.fw_iso_context*, align 8
  %ctx = alloca %struct.context*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iso_context*, align 8
  store %struct.fw_iso_context* %base, %struct.fw_iso_context** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_context** %base.addr, metadata !8376, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.declare(metadata %struct.context** %ctx, metadata !8378, metadata !DIExpression()), !dbg !8379
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8380, metadata !DIExpression()), !dbg !8382
  %0 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8382
  %1 = bitcast %struct.fw_iso_context* %0 to i8*, !dbg !8382
  store i8* %1, i8** %__mptr, align 8, !dbg !8382
  br label %do.body, !dbg !8382

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8383

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8382
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8382
  %3 = bitcast i8* %add.ptr to %struct.iso_context*, !dbg !8382
  store %struct.iso_context* %3, %struct.iso_context** %tmp, align 8, !dbg !8383
  %4 = load %struct.iso_context*, %struct.iso_context** %tmp, align 8, !dbg !8382
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %4, i32 0, i32 1, !dbg !8385
  store %struct.context* %context, %struct.context** %ctx, align 8, !dbg !8379
  %5 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !8386
  %ohci = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 0, !dbg !8387
  %6 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8387
  %7 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !8388
  %regs = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 1, !dbg !8388
  %8 = load i32, i32* %regs, align 8, !dbg !8388
  call void @reg_write(%struct.fw_ohci* %6, i32 %8, i32 4096) #11, !dbg !8389
  ret void, !dbg !8390
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_flush_iso_completions(%struct.fw_iso_context* %base) #2 !dbg !8391 {
entry:
  %base.addr = alloca %struct.fw_iso_context*, align 8
  %ctx = alloca %struct.iso_context*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iso_context*, align 8
  %ret = alloca i32, align 4
  store %struct.fw_iso_context* %base, %struct.fw_iso_context** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_context** %base.addr, metadata !8392, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx, metadata !8394, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8396, metadata !DIExpression()), !dbg !8398
  %0 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8398
  %1 = bitcast %struct.fw_iso_context* %0 to i8*, !dbg !8398
  store i8* %1, i8** %__mptr, align 8, !dbg !8398
  br label %do.body, !dbg !8398

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8399

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8398
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8398
  %3 = bitcast i8* %add.ptr to %struct.iso_context*, !dbg !8398
  store %struct.iso_context* %3, %struct.iso_context** %tmp, align 8, !dbg !8399
  %4 = load %struct.iso_context*, %struct.iso_context** %tmp, align 8, !dbg !8398
  store %struct.iso_context* %4, %struct.iso_context** %ctx, align 8, !dbg !8395
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8401, metadata !DIExpression()), !dbg !8402
  store i32 0, i32* %ret, align 4, !dbg !8402
  %5 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8403
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %5, i32 0, i32 1, !dbg !8404
  %tasklet = getelementptr inbounds %struct.context, %struct.context* %context, i32 0, i32 12, !dbg !8405
  call void @tasklet_disable(%struct.tasklet_struct* %tasklet) #11, !dbg !8406
  %6 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8407
  %flushing_completions = getelementptr inbounds %struct.iso_context, %struct.iso_context* %6, i32 0, i32 4, !dbg !8409
  %call = call zeroext i1 @test_and_set_bit_lock(i64 0, i64* %flushing_completions) #11, !dbg !8410
  br i1 %call, label %if.end9, label %if.then, !dbg !8411

if.then:                                          ; preds = %do.end
  %7 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8412
  %context1 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %7, i32 0, i32 1, !dbg !8414
  %8 = ptrtoint %struct.context* %context1 to i64, !dbg !8415
  call void @context_tasklet(i64 %8) #11, !dbg !8416
  %9 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8417
  %type = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %9, i32 0, i32 1, !dbg !8418
  %10 = load i32, i32* %type, align 8, !dbg !8418
  switch i32 %10, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
  ], !dbg !8419

sw.bb:                                            ; preds = %if.then, %if.then
  %11 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8420
  %header_length = getelementptr inbounds %struct.iso_context, %struct.iso_context* %11, i32 0, i32 3, !dbg !8423
  %12 = load i64, i64* %header_length, align 8, !dbg !8423
  %cmp = icmp ne i64 %12, 0, !dbg !8424
  br i1 %cmp, label %if.then2, label %if.end, !dbg !8425

if.then2:                                         ; preds = %sw.bb
  %13 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8426
  call void @flush_iso_completions(%struct.iso_context* %13) #11, !dbg !8427
  br label %if.end, !dbg !8427

if.end:                                           ; preds = %if.then2, %sw.bb
  br label %sw.epilog, !dbg !8428

sw.bb3:                                           ; preds = %if.then
  %14 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8429
  %mc_completed = getelementptr inbounds %struct.iso_context, %struct.iso_context* %14, i32 0, i32 6, !dbg !8431
  %15 = load i16, i16* %mc_completed, align 4, !dbg !8431
  %conv = zext i16 %15 to i32, !dbg !8429
  %cmp4 = icmp ne i32 %conv, 0, !dbg !8432
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !8433

if.then6:                                         ; preds = %sw.bb3
  %16 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8434
  call void @flush_ir_buffer_fill(%struct.iso_context* %16) #11, !dbg !8435
  br label %if.end7, !dbg !8435

if.end7:                                          ; preds = %if.then6, %sw.bb3
  br label %sw.epilog, !dbg !8436

sw.default:                                       ; preds = %if.then
  store i32 -38, i32* %ret, align 4, !dbg !8437
  br label %sw.epilog, !dbg !8438

sw.epilog:                                        ; preds = %sw.default, %if.end7, %if.end
  %17 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8439
  %flushing_completions8 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %17, i32 0, i32 4, !dbg !8440
  call void @clear_bit_unlock(i64 0, i64* %flushing_completions8) #11, !dbg !8441
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8442, !srcloc !8443
  br label %if.end9, !dbg !8444

if.end9:                                          ; preds = %sw.epilog, %do.end
  %18 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8445
  %context10 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %18, i32 0, i32 1, !dbg !8446
  %tasklet11 = getelementptr inbounds %struct.context, %struct.context* %context10, i32 0, i32 12, !dbg !8447
  call void @tasklet_enable(%struct.tasklet_struct* %tasklet11) #11, !dbg !8448
  %19 = load i32, i32* %ret, align 4, !dbg !8449
  ret i32 %19, !dbg !8450
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ohci_stop_iso(%struct.fw_iso_context* %base) #2 !dbg !8451 {
entry:
  %base.addr = alloca %struct.fw_iso_context*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %ctx = alloca %struct.iso_context*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iso_context*, align 8
  %index = alloca i32, align 4
  store %struct.fw_iso_context* %base, %struct.fw_iso_context** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_context** %base.addr, metadata !8452, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !8454, metadata !DIExpression()), !dbg !8455
  %0 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8456
  %card = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %0, i32 0, i32 0, !dbg !8457
  %1 = load %struct.fw_card*, %struct.fw_card** %card, align 8, !dbg !8457
  %call = call %struct.fw_ohci* @fw_ohci(%struct.fw_card* %1) #11, !dbg !8458
  store %struct.fw_ohci* %call, %struct.fw_ohci** %ohci, align 8, !dbg !8455
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx, metadata !8459, metadata !DIExpression()), !dbg !8460
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8461, metadata !DIExpression()), !dbg !8463
  %2 = load %struct.fw_iso_context*, %struct.fw_iso_context** %base.addr, align 8, !dbg !8463
  %3 = bitcast %struct.fw_iso_context* %2 to i8*, !dbg !8463
  store i8* %3, i8** %__mptr, align 8, !dbg !8463
  br label %do.body, !dbg !8463

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8464

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !8463
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !8463
  %5 = bitcast i8* %add.ptr to %struct.iso_context*, !dbg !8463
  store %struct.iso_context* %5, %struct.iso_context** %tmp, align 8, !dbg !8464
  %6 = load %struct.iso_context*, %struct.iso_context** %tmp, align 8, !dbg !8463
  store %struct.iso_context* %6, %struct.iso_context** %ctx, align 8, !dbg !8460
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8466, metadata !DIExpression()), !dbg !8467
  %7 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8468
  %base1 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %7, i32 0, i32 0, !dbg !8469
  %type = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base1, i32 0, i32 1, !dbg !8470
  %8 = load i32, i32* %type, align 8, !dbg !8470
  switch i32 %8, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb2
  ], !dbg !8471

sw.bb:                                            ; preds = %do.end
  %9 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8472
  %10 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8474
  %it_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %10, i32 0, i32 23, !dbg !8475
  %11 = load %struct.iso_context*, %struct.iso_context** %it_context_list, align 8, !dbg !8475
  %sub.ptr.lhs.cast = ptrtoint %struct.iso_context* %9 to i64, !dbg !8476
  %sub.ptr.rhs.cast = ptrtoint %struct.iso_context* %11 to i64, !dbg !8476
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8476
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 208, !dbg !8476
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !8472
  store i32 %conv, i32* %index, align 4, !dbg !8477
  %12 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8478
  %13 = load i32, i32* %index, align 4, !dbg !8479
  %shl = shl i32 1, %13, !dbg !8480
  call void @reg_write(%struct.fw_ohci* %12, i32 156, i32 %shl) #11, !dbg !8481
  br label %sw.epilog, !dbg !8482

sw.bb2:                                           ; preds = %do.end, %do.end
  %14 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8483
  %15 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8484
  %ir_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %15, i32 0, i32 27, !dbg !8485
  %16 = load %struct.iso_context*, %struct.iso_context** %ir_context_list, align 8, !dbg !8485
  %sub.ptr.lhs.cast3 = ptrtoint %struct.iso_context* %14 to i64, !dbg !8486
  %sub.ptr.rhs.cast4 = ptrtoint %struct.iso_context* %16 to i64, !dbg !8486
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4, !dbg !8486
  %sub.ptr.div6 = sdiv exact i64 %sub.ptr.sub5, 208, !dbg !8486
  %conv7 = trunc i64 %sub.ptr.div6 to i32, !dbg !8483
  store i32 %conv7, i32* %index, align 4, !dbg !8487
  %17 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8488
  %18 = load i32, i32* %index, align 4, !dbg !8489
  %shl8 = shl i32 1, %18, !dbg !8490
  call void @reg_write(%struct.fw_ohci* %17, i32 172, i32 %shl8) #11, !dbg !8491
  br label %sw.epilog, !dbg !8492

sw.epilog:                                        ; preds = %do.end, %sw.bb2, %sw.bb
  %19 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8493
  call void @flush_writes(%struct.fw_ohci* %19) #11, !dbg !8494
  %20 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8495
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %20, i32 0, i32 1, !dbg !8496
  call void @context_stop(%struct.context* %context) #11, !dbg !8497
  %21 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !8498
  %context9 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %21, i32 0, i32 1, !dbg !8499
  %tasklet = getelementptr inbounds %struct.context, %struct.context* %context9, i32 0, i32 12, !dbg !8500
  call void @tasklet_kill(%struct.tasklet_struct* %tasklet) #11, !dbg !8501
  ret i32 0, !dbg !8502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.fw_ohci* @fw_ohci(%struct.fw_card* %card) #2 !dbg !8503 {
entry:
  %card.addr = alloca %struct.fw_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fw_ohci*, align 8
  store %struct.fw_card* %card, %struct.fw_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_card** %card.addr, metadata !8506, metadata !DIExpression()), !dbg !8507
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8508, metadata !DIExpression()), !dbg !8510
  %0 = load %struct.fw_card*, %struct.fw_card** %card.addr, align 8, !dbg !8510
  %1 = bitcast %struct.fw_card* %0 to i8*, !dbg !8510
  store i8* %1, i8** %__mptr, align 8, !dbg !8510
  br label %do.body, !dbg !8510

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8511

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8510
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8510
  %3 = bitcast i8* %add.ptr to %struct.fw_ohci*, !dbg !8510
  store %struct.fw_ohci* %3, %struct.fw_ohci** %tmp, align 8, !dbg !8511
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %tmp, align 8, !dbg !8510
  ret %struct.fw_ohci* %4, !dbg !8513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @software_reset(%struct.fw_ohci* %ohci) #2 !dbg !8514 {
entry:
  %retval = alloca i32, align 4
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !8515, metadata !DIExpression()), !dbg !8516
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8517, metadata !DIExpression()), !dbg !8518
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8519, metadata !DIExpression()), !dbg !8520
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8521
  call void @reg_write(%struct.fw_ohci* %0, i32 80, i32 65536) #11, !dbg !8522
  store i32 0, i32* %i, align 4, !dbg !8523
  br label %for.cond, !dbg !8525

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8526
  %cmp = icmp slt i32 %1, 500, !dbg !8528
  br i1 %cmp, label %for.body, label %for.end, !dbg !8529

for.body:                                         ; preds = %for.cond
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8530
  %call = call i32 @reg_read(%struct.fw_ohci* %2, i32 80) #11, !dbg !8532
  store i32 %call, i32* %val, align 4, !dbg !8533
  %3 = load i32, i32* %val, align 4, !dbg !8534
  %neg = xor i32 %3, -1, !dbg !8536
  %tobool = icmp ne i32 %neg, 0, !dbg !8536
  br i1 %tobool, label %if.end, label %if.then, !dbg !8537

if.then:                                          ; preds = %for.body
  store i32 -19, i32* %retval, align 4, !dbg !8538
  br label %return, !dbg !8538

if.end:                                           ; preds = %for.body
  %4 = load i32, i32* %val, align 4, !dbg !8539
  %and = and i32 %4, 65536, !dbg !8541
  %tobool1 = icmp ne i32 %and, 0, !dbg !8541
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !8542

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8543
  br label %return, !dbg !8543

if.end3:                                          ; preds = %if.end
  call void @msleep(i32 1) #11, !dbg !8544
  br label %for.inc, !dbg !8545

for.inc:                                          ; preds = %if.end3
  %5 = load i32, i32* %i, align 4, !dbg !8546
  %inc = add i32 %5, 1, !dbg !8546
  store i32 %inc, i32* %i, align 4, !dbg !8546
  br label %for.cond, !dbg !8547, !llvm.loop !8548

for.end:                                          ; preds = %for.cond
  store i32 -16, i32* %retval, align 4, !dbg !8550
  br label %return, !dbg !8550

return:                                           ; preds = %for.end, %if.then2, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !8551
  ret i32 %6, !dbg !8551
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @flush_writes(%struct.fw_ohci* %ohci) #2 !dbg !8552 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !8555, metadata !DIExpression()), !dbg !8556
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8557
  %call = call i32 @reg_read(%struct.fw_ohci* %0, i32 0) #11, !dbg !8558
  ret void, !dbg !8559
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @probe_tsb41ba3d(%struct.fw_ohci* %ohci) #2 !dbg !4569 {
entry:
  %retval = alloca i32, align 4
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %reg = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !8560, metadata !DIExpression()), !dbg !8561
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !8562, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8564, metadata !DIExpression()), !dbg !8565
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8566
  %call = call i32 @read_phy_reg(%struct.fw_ohci* %0, i32 2) #11, !dbg !8567
  store i32 %call, i32* %reg, align 4, !dbg !8568
  %1 = load i32, i32* %reg, align 4, !dbg !8569
  %cmp = icmp slt i32 %1, 0, !dbg !8571
  br i1 %cmp, label %if.then, label %if.end, !dbg !8572

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %reg, align 4, !dbg !8573
  store i32 %2, i32* %retval, align 4, !dbg !8574
  br label %return, !dbg !8574

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %reg, align 4, !dbg !8575
  %and = and i32 %3, 224, !dbg !8577
  %cmp1 = icmp ne i32 %and, 224, !dbg !8578
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8579

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8580
  br label %return, !dbg !8580

if.end3:                                          ; preds = %if.end
  store i32 5, i32* %i, align 4, !dbg !8581
  br label %for.cond, !dbg !8583

for.cond:                                         ; preds = %for.inc, %if.end3
  %4 = load i32, i32* %i, align 4, !dbg !8584
  %cmp4 = icmp sge i32 %4, 0, !dbg !8586
  br i1 %cmp4, label %for.body, label %for.end, !dbg !8587

for.body:                                         ; preds = %for.cond
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8588
  %6 = load i32, i32* %i, align 4, !dbg !8590
  %add = add i32 %6, 10, !dbg !8591
  %call5 = call i32 @read_paged_phy_reg(%struct.fw_ohci* %5, i32 1, i32 %add) #11, !dbg !8592
  store i32 %call5, i32* %reg, align 4, !dbg !8593
  %7 = load i32, i32* %reg, align 4, !dbg !8594
  %cmp6 = icmp slt i32 %7, 0, !dbg !8596
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8597

if.then7:                                         ; preds = %for.body
  %8 = load i32, i32* %reg, align 4, !dbg !8598
  store i32 %8, i32* %retval, align 4, !dbg !8599
  br label %return, !dbg !8599

if.end8:                                          ; preds = %for.body
  %9 = load i32, i32* %reg, align 4, !dbg !8600
  %10 = load i32, i32* %i, align 4, !dbg !8602
  %idxprom = sext i32 %10 to i64, !dbg !8603
  %arrayidx = getelementptr [6 x i8], [6 x i8]* @probe_tsb41ba3d.id, i64 0, i64 %idxprom, !dbg !8603
  %11 = load i8, i8* %arrayidx, align 1, !dbg !8603
  %conv = zext i8 %11 to i32, !dbg !8603
  %cmp9 = icmp ne i32 %9, %conv, !dbg !8604
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !8605

if.then11:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !8606
  br label %return, !dbg !8606

if.end12:                                         ; preds = %if.end8
  br label %for.inc, !dbg !8607

for.inc:                                          ; preds = %if.end12
  %12 = load i32, i32* %i, align 4, !dbg !8608
  %dec = add i32 %12, -1, !dbg !8608
  store i32 %dec, i32* %i, align 4, !dbg !8608
  br label %for.cond, !dbg !8609, !llvm.loop !8610

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !8612
  br label %return, !dbg !8612

return:                                           ; preds = %for.end, %if.then11, %if.then7, %if.then2, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8613
  ret i32 %13, !dbg !8613
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @configure_1394a_enhancements(%struct.fw_ohci* %ohci) #2 !dbg !8614 {
entry:
  %retval = alloca i32, align 4
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %enable_1394a = alloca i8, align 1
  %ret = alloca i32, align 4
  %clear = alloca i32, align 4
  %set = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !8615, metadata !DIExpression()), !dbg !8616
  call void @llvm.dbg.declare(metadata i8* %enable_1394a, metadata !8617, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8619, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.declare(metadata i32* %clear, metadata !8621, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.declare(metadata i32* %set, metadata !8623, metadata !DIExpression()), !dbg !8624
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8625, metadata !DIExpression()), !dbg !8626
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8627
  %call = call i32 @reg_read(%struct.fw_ohci* %0, i32 80) #11, !dbg !8629
  %and = and i32 %call, 8388608, !dbg !8630
  %tobool = icmp ne i32 %and, 0, !dbg !8630
  br i1 %tobool, label %if.end, label %if.then, !dbg !8631

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8632
  br label %return, !dbg !8632

if.end:                                           ; preds = %entry
  store i8 0, i8* %enable_1394a, align 1, !dbg !8633
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8634
  %call1 = call i32 @read_phy_reg(%struct.fw_ohci* %1, i32 2) #11, !dbg !8635
  store i32 %call1, i32* %ret, align 4, !dbg !8636
  %2 = load i32, i32* %ret, align 4, !dbg !8637
  %cmp = icmp slt i32 %2, 0, !dbg !8639
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8640

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %ret, align 4, !dbg !8641
  store i32 %3, i32* %retval, align 4, !dbg !8642
  br label %return, !dbg !8642

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %ret, align 4, !dbg !8643
  %and4 = and i32 %4, 224, !dbg !8645
  %cmp5 = icmp eq i32 %and4, 224, !dbg !8646
  br i1 %cmp5, label %if.then6, label %if.end14, !dbg !8647

if.then6:                                         ; preds = %if.end3
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8648
  %call7 = call i32 @read_paged_phy_reg(%struct.fw_ohci* %5, i32 1, i32 8) #11, !dbg !8650
  store i32 %call7, i32* %ret, align 4, !dbg !8651
  %6 = load i32, i32* %ret, align 4, !dbg !8652
  %cmp8 = icmp slt i32 %6, 0, !dbg !8654
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !8655

if.then9:                                         ; preds = %if.then6
  %7 = load i32, i32* %ret, align 4, !dbg !8656
  store i32 %7, i32* %retval, align 4, !dbg !8657
  br label %return, !dbg !8657

if.end10:                                         ; preds = %if.then6
  %8 = load i32, i32* %ret, align 4, !dbg !8658
  %cmp11 = icmp sge i32 %8, 1, !dbg !8660
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8661

if.then12:                                        ; preds = %if.end10
  store i8 1, i8* %enable_1394a, align 1, !dbg !8662
  br label %if.end13, !dbg !8663

if.end13:                                         ; preds = %if.then12, %if.end10
  br label %if.end14, !dbg !8664

if.end14:                                         ; preds = %if.end13, %if.end3
  %9 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8665
  %quirks = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %9, i32 0, i32 5, !dbg !8667
  %10 = load i32, i32* %quirks, align 4, !dbg !8667
  %and15 = and i32 %10, 8, !dbg !8668
  %tobool16 = icmp ne i32 %and15, 0, !dbg !8668
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !8669

if.then17:                                        ; preds = %if.end14
  store i8 0, i8* %enable_1394a, align 1, !dbg !8670
  br label %if.end18, !dbg !8671

if.end18:                                         ; preds = %if.then17, %if.end14
  %11 = load i8, i8* %enable_1394a, align 1, !dbg !8672
  %tobool19 = trunc i8 %11 to i1, !dbg !8672
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !8674

if.then20:                                        ; preds = %if.end18
  store i32 0, i32* %clear, align 4, !dbg !8675
  store i32 3, i32* %set, align 4, !dbg !8677
  br label %if.end21, !dbg !8678

if.else:                                          ; preds = %if.end18
  store i32 3, i32* %clear, align 4, !dbg !8679
  store i32 0, i32* %set, align 4, !dbg !8681
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then20
  %12 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8682
  %13 = load i32, i32* %clear, align 4, !dbg !8683
  %14 = load i32, i32* %set, align 4, !dbg !8684
  %call22 = call i32 @update_phy_reg(%struct.fw_ohci* %12, i32 5, i32 %13, i32 %14) #11, !dbg !8685
  store i32 %call22, i32* %ret, align 4, !dbg !8686
  %15 = load i32, i32* %ret, align 4, !dbg !8687
  %cmp23 = icmp slt i32 %15, 0, !dbg !8689
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !8690

if.then24:                                        ; preds = %if.end21
  %16 = load i32, i32* %ret, align 4, !dbg !8691
  store i32 %16, i32* %retval, align 4, !dbg !8692
  br label %return, !dbg !8692

if.end25:                                         ; preds = %if.end21
  %17 = load i8, i8* %enable_1394a, align 1, !dbg !8693
  %tobool26 = trunc i8 %17 to i1, !dbg !8693
  br i1 %tobool26, label %if.then27, label %if.else28, !dbg !8695

if.then27:                                        ; preds = %if.end25
  store i32 80, i32* %offset, align 4, !dbg !8696
  br label %if.end29, !dbg !8697

if.else28:                                        ; preds = %if.end25
  store i32 84, i32* %offset, align 4, !dbg !8698
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %if.then27
  %18 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8699
  %19 = load i32, i32* %offset, align 4, !dbg !8700
  call void @reg_write(%struct.fw_ohci* %18, i32 %19, i32 4194304) #11, !dbg !8701
  %20 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8702
  call void @reg_write(%struct.fw_ohci* %20, i32 84, i32 8388608) #11, !dbg !8703
  store i32 0, i32* %retval, align 4, !dbg !8704
  br label %return, !dbg !8704

return:                                           ; preds = %if.end29, %if.then24, %if.then9, %if.then2, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !8705
  ret i32 %21, !dbg !8705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_config_rom(i32* %dest, i32* %src, i64 %length) #2 !dbg !8706 {
entry:
  %dest.addr = alloca i32*, align 8
  %src.addr = alloca i32*, align 8
  %length.addr = alloca i64, align 8
  %size = alloca i64, align 8
  store i32* %dest, i32** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dest.addr, metadata !8709, metadata !DIExpression()), !dbg !8710
  store i32* %src, i32** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src.addr, metadata !8711, metadata !DIExpression()), !dbg !8712
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8713, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8715, metadata !DIExpression()), !dbg !8716
  %0 = load i64, i64* %length.addr, align 8, !dbg !8717
  %mul = mul i64 %0, 4, !dbg !8718
  store i64 %mul, i64* %size, align 8, !dbg !8716
  %1 = load i32*, i32** %dest.addr, align 8, !dbg !8719
  %2 = bitcast i32* %1 to i8*, !dbg !8720
  %3 = load i32*, i32** %src.addr, align 8, !dbg !8721
  %4 = bitcast i32* %3 to i8*, !dbg !8720
  %5 = load i64, i64* %size, align 8, !dbg !8722
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %4, i64 %5, i1 false), !dbg !8720
  %6 = load i64, i64* %size, align 8, !dbg !8723
  %cmp = icmp ult i64 %6, 1024, !dbg !8725
  br i1 %cmp, label %if.then, label %if.end, !dbg !8726

if.then:                                          ; preds = %entry
  %7 = load i32*, i32** %dest.addr, align 8, !dbg !8727
  %8 = load i64, i64* %length.addr, align 8, !dbg !8728
  %arrayidx = getelementptr i32, i32* %7, i64 %8, !dbg !8727
  %9 = bitcast i32* %arrayidx to i8*, !dbg !8729
  %10 = load i64, i64* %size, align 8, !dbg !8730
  %sub = sub i64 1024, %10, !dbg !8731
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 %sub, i1 false), !dbg !8729
  br label %if.end, !dbg !8729

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8732
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #8 !dbg !8733 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8737, metadata !DIExpression()), !dbg !8738
  %0 = load i32, i32* %val.addr, align 4, !dbg !8739
  %call = call i32 @__arch_swab32(i32 %0) #14, !dbg !8740
  ret i32 %call, !dbg !8741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ar_context_run(%struct.ar_context* %ctx) #2 !dbg !8742 {
entry:
  %ctx.addr = alloca %struct.ar_context*, align 8
  %i = alloca i32, align 4
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !8743, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8745, metadata !DIExpression()), !dbg !8746
  store i32 0, i32* %i, align 4, !dbg !8747
  br label %for.cond, !dbg !8749

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8750
  %conv = zext i32 %0 to i64, !dbg !8750
  %cmp = icmp ult i64 %conv, 8, !dbg !8752
  br i1 %cmp, label %for.body, label %for.end, !dbg !8753

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8754
  %2 = load i32, i32* %i, align 4, !dbg !8755
  call void @ar_context_link_page(%struct.ar_context* %1, i32 %2) #11, !dbg !8756
  br label %for.inc, !dbg !8756

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !8757
  %inc = add i32 %3, 1, !dbg !8757
  store i32 %inc, i32* %i, align 4, !dbg !8757
  br label %for.cond, !dbg !8758, !llvm.loop !8759

for.end:                                          ; preds = %for.cond
  %4 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8761
  %buffer = getelementptr inbounds %struct.ar_context, %struct.ar_context* %4, i32 0, i32 2, !dbg !8762
  %5 = load i8*, i8** %buffer, align 8, !dbg !8762
  %6 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8763
  %pointer = getelementptr inbounds %struct.ar_context, %struct.ar_context* %6, i32 0, i32 5, !dbg !8764
  store i8* %5, i8** %pointer, align 8, !dbg !8765
  %7 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8766
  %ohci = getelementptr inbounds %struct.ar_context, %struct.ar_context* %7, i32 0, i32 0, !dbg !8767
  %8 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8767
  %9 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8768
  %regs = getelementptr inbounds %struct.ar_context, %struct.ar_context* %9, i32 0, i32 7, !dbg !8768
  %10 = load i32, i32* %regs, align 4, !dbg !8768
  %add = add i32 %10, 12, !dbg !8768
  %11 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8769
  %descriptors_bus = getelementptr inbounds %struct.ar_context, %struct.ar_context* %11, i32 0, i32 4, !dbg !8770
  %12 = load i64, i64* %descriptors_bus, align 8, !dbg !8770
  %or = or i64 %12, 1, !dbg !8771
  %conv2 = trunc i64 %or to i32, !dbg !8769
  call void @reg_write(%struct.fw_ohci* %8, i32 %add, i32 %conv2) #11, !dbg !8772
  %13 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8773
  %ohci3 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %13, i32 0, i32 0, !dbg !8774
  %14 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci3, align 8, !dbg !8774
  %15 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8775
  %regs4 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %15, i32 0, i32 7, !dbg !8775
  %16 = load i32, i32* %regs4, align 4, !dbg !8775
  call void @reg_write(%struct.fw_ohci* %14, i32 %16, i32 32768) #11, !dbg !8776
  ret void, !dbg !8777
}

; Function Attrs: noredzone
declare dso_local void @fw_schedule_bus_reset(%struct.fw_card*, i1 zeroext, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @read_phy_reg(%struct.fw_ohci* %ohci, i32 %addr) #2 !dbg !8778 {
entry:
  %retval = alloca i32, align 4
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %addr.addr = alloca i32, align 4
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !8781, metadata !DIExpression()), !dbg !8782
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8783, metadata !DIExpression()), !dbg !8784
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8785, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8787, metadata !DIExpression()), !dbg !8788
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8789
  %1 = load i32, i32* %addr.addr, align 4, !dbg !8790
  %shl = shl i32 %1, 8, !dbg !8790
  %or = or i32 %shl, 32768, !dbg !8790
  call void @reg_write(%struct.fw_ohci* %0, i32 236, i32 %or) #11, !dbg !8791
  store i32 0, i32* %i, align 4, !dbg !8792
  br label %for.cond, !dbg !8794

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !8795
  %cmp = icmp slt i32 %2, 103, !dbg !8797
  br i1 %cmp, label %for.body, label %for.end, !dbg !8798

for.body:                                         ; preds = %for.cond
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8799
  %call = call i32 @reg_read(%struct.fw_ohci* %3, i32 236) #11, !dbg !8801
  store i32 %call, i32* %val, align 4, !dbg !8802
  %4 = load i32, i32* %val, align 4, !dbg !8803
  %neg = xor i32 %4, -1, !dbg !8805
  %tobool = icmp ne i32 %neg, 0, !dbg !8805
  br i1 %tobool, label %if.end, label %if.then, !dbg !8806

if.then:                                          ; preds = %for.body
  store i32 -19, i32* %retval, align 4, !dbg !8807
  br label %return, !dbg !8807

if.end:                                           ; preds = %for.body
  %5 = load i32, i32* %val, align 4, !dbg !8808
  %and = and i32 %5, -2147483648, !dbg !8810
  %tobool1 = icmp ne i32 %and, 0, !dbg !8810
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !8811

if.then2:                                         ; preds = %if.end
  %6 = load i32, i32* %val, align 4, !dbg !8812
  %and3 = and i32 %6, 16711680, !dbg !8812
  %shr = lshr i32 %and3, 16, !dbg !8812
  store i32 %shr, i32* %retval, align 4, !dbg !8813
  br label %return, !dbg !8813

if.end4:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !8814
  %cmp5 = icmp sge i32 %7, 3, !dbg !8816
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !8817

if.then6:                                         ; preds = %if.end4
  call void @msleep(i32 1) #11, !dbg !8818
  br label %if.end7, !dbg !8818

if.end7:                                          ; preds = %if.then6, %if.end4
  br label %for.inc, !dbg !8819

for.inc:                                          ; preds = %if.end7
  %8 = load i32, i32* %i, align 4, !dbg !8820
  %inc = add i32 %8, 1, !dbg !8820
  store i32 %inc, i32* %i, align 4, !dbg !8820
  br label %for.cond, !dbg !8821, !llvm.loop !8822

for.end:                                          ; preds = %for.cond
  %9 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8824
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %9, i32 0, i32 0, !dbg !8824
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !8824
  %10 = load %struct.device*, %struct.device** %device, align 8, !dbg !8824
  %11 = load i32, i32* %addr.addr, align 4, !dbg !8824
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %10, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i32 %11) #12, !dbg !8824
  call void @dump_stack() #12, !dbg !8825
  store i32 -16, i32* %retval, align 4, !dbg !8826
  br label %return, !dbg !8826

return:                                           ; preds = %for.end, %if.then2, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8827
  ret i32 %12, !dbg !8827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @read_paged_phy_reg(%struct.fw_ohci* %ohci, i32 %page, i32 %addr) #2 !dbg !8828 {
entry:
  %retval = alloca i32, align 4
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %page.addr = alloca i32, align 4
  %addr.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !8831, metadata !DIExpression()), !dbg !8832
  store i32 %page, i32* %page.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %page.addr, metadata !8833, metadata !DIExpression()), !dbg !8834
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8835, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8837, metadata !DIExpression()), !dbg !8838
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8839
  %1 = load i32, i32* %page.addr, align 4, !dbg !8840
  %shl = shl i32 %1, 5, !dbg !8841
  %call = call i32 @update_phy_reg(%struct.fw_ohci* %0, i32 7, i32 224, i32 %shl) #11, !dbg !8842
  store i32 %call, i32* %ret, align 4, !dbg !8843
  %2 = load i32, i32* %ret, align 4, !dbg !8844
  %cmp = icmp slt i32 %2, 0, !dbg !8846
  br i1 %cmp, label %if.then, label %if.end, !dbg !8847

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !8848
  store i32 %3, i32* %retval, align 4, !dbg !8849
  br label %return, !dbg !8849

if.end:                                           ; preds = %entry
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8850
  %5 = load i32, i32* %addr.addr, align 4, !dbg !8851
  %call1 = call i32 @read_phy_reg(%struct.fw_ohci* %4, i32 %5) #11, !dbg !8852
  store i32 %call1, i32* %retval, align 4, !dbg !8853
  br label %return, !dbg !8853

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !8854
  ret i32 %6, !dbg !8854
}

; Function Attrs: cold noredzone
declare dso_local void @dump_stack() #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @update_phy_reg(%struct.fw_ohci* %ohci, i32 %addr, i32 %clear_bits, i32 %set_bits) #2 !dbg !8855 {
entry:
  %retval = alloca i32, align 4
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %addr.addr = alloca i32, align 4
  %clear_bits.addr = alloca i32, align 4
  %set_bits.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !8858, metadata !DIExpression()), !dbg !8859
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8860, metadata !DIExpression()), !dbg !8861
  store i32 %clear_bits, i32* %clear_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clear_bits.addr, metadata !8862, metadata !DIExpression()), !dbg !8863
  store i32 %set_bits, i32* %set_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set_bits.addr, metadata !8864, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8866, metadata !DIExpression()), !dbg !8867
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8868
  %1 = load i32, i32* %addr.addr, align 4, !dbg !8869
  %call = call i32 @read_phy_reg(%struct.fw_ohci* %0, i32 %1) #11, !dbg !8870
  store i32 %call, i32* %ret, align 4, !dbg !8867
  %2 = load i32, i32* %ret, align 4, !dbg !8871
  %cmp = icmp slt i32 %2, 0, !dbg !8873
  br i1 %cmp, label %if.then, label %if.end, !dbg !8874

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !8875
  store i32 %3, i32* %retval, align 4, !dbg !8876
  br label %return, !dbg !8876

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %addr.addr, align 4, !dbg !8877
  %cmp1 = icmp eq i32 %4, 5, !dbg !8879
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8880

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* %clear_bits.addr, align 4, !dbg !8881
  %or = or i32 %5, 60, !dbg !8881
  store i32 %or, i32* %clear_bits.addr, align 4, !dbg !8881
  br label %if.end3, !dbg !8882

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8883
  %7 = load i32, i32* %addr.addr, align 4, !dbg !8884
  %8 = load i32, i32* %ret, align 4, !dbg !8885
  %9 = load i32, i32* %clear_bits.addr, align 4, !dbg !8886
  %neg = xor i32 %9, -1, !dbg !8887
  %and = and i32 %8, %neg, !dbg !8888
  %10 = load i32, i32* %set_bits.addr, align 4, !dbg !8889
  %or4 = or i32 %and, %10, !dbg !8890
  %call5 = call i32 @write_phy_reg(%struct.fw_ohci* %6, i32 %7, i32 %or4) #11, !dbg !8891
  store i32 %call5, i32* %retval, align 4, !dbg !8892
  br label %return, !dbg !8892

return:                                           ; preds = %if.end3, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8893
  ret i32 %11, !dbg !8893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @write_phy_reg(%struct.fw_ohci* %ohci, i32 %addr, i32 %val) #2 !dbg !8894 {
entry:
  %retval = alloca i32, align 4
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %addr.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !8897, metadata !DIExpression()), !dbg !8898
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8899, metadata !DIExpression()), !dbg !8900
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8901, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8903, metadata !DIExpression()), !dbg !8904
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8905
  %1 = load i32, i32* %addr.addr, align 4, !dbg !8906
  %shl = shl i32 %1, 8, !dbg !8906
  %2 = load i32, i32* %val.addr, align 4, !dbg !8906
  %or = or i32 %shl, %2, !dbg !8906
  %or1 = or i32 %or, 16384, !dbg !8906
  call void @reg_write(%struct.fw_ohci* %0, i32 236, i32 %or1) #11, !dbg !8907
  store i32 0, i32* %i, align 4, !dbg !8908
  br label %for.cond, !dbg !8910

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !8911
  %cmp = icmp slt i32 %3, 103, !dbg !8913
  br i1 %cmp, label %for.body, label %for.end, !dbg !8914

for.body:                                         ; preds = %for.cond
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8915
  %call = call i32 @reg_read(%struct.fw_ohci* %4, i32 236) #11, !dbg !8917
  store i32 %call, i32* %val.addr, align 4, !dbg !8918
  %5 = load i32, i32* %val.addr, align 4, !dbg !8919
  %neg = xor i32 %5, -1, !dbg !8921
  %tobool = icmp ne i32 %neg, 0, !dbg !8921
  br i1 %tobool, label %if.end, label %if.then, !dbg !8922

if.then:                                          ; preds = %for.body
  store i32 -19, i32* %retval, align 4, !dbg !8923
  br label %return, !dbg !8923

if.end:                                           ; preds = %for.body
  %6 = load i32, i32* %val.addr, align 4, !dbg !8924
  %and = and i32 %6, 16384, !dbg !8926
  %tobool2 = icmp ne i32 %and, 0, !dbg !8926
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8927

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8928
  br label %return, !dbg !8928

if.end4:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !8929
  %cmp5 = icmp sge i32 %7, 3, !dbg !8931
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !8932

if.then6:                                         ; preds = %if.end4
  call void @msleep(i32 1) #11, !dbg !8933
  br label %if.end7, !dbg !8933

if.end7:                                          ; preds = %if.then6, %if.end4
  br label %for.inc, !dbg !8934

for.inc:                                          ; preds = %if.end7
  %8 = load i32, i32* %i, align 4, !dbg !8935
  %inc = add i32 %8, 1, !dbg !8935
  store i32 %inc, i32* %i, align 4, !dbg !8935
  br label %for.cond, !dbg !8936, !llvm.loop !8937

for.end:                                          ; preds = %for.cond
  %9 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !8939
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %9, i32 0, i32 0, !dbg !8939
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !8939
  %10 = load %struct.device*, %struct.device** %device, align 8, !dbg !8939
  %11 = load i32, i32* %addr.addr, align 4, !dbg !8939
  %12 = load i32, i32* %val.addr, align 4, !dbg !8939
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %10, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0), i32 %11, i32 %12) #12, !dbg !8939
  call void @dump_stack() #12, !dbg !8940
  store i32 -16, i32* %retval, align 4, !dbg !8941
  br label %return, !dbg !8941

return:                                           ; preds = %for.end, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8942
  ret i32 %13, !dbg !8942
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #8 !dbg !8943 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8945, metadata !DIExpression()), !dbg !8946
  %0 = load i32, i32* %val.addr, align 4, !dbg !8947
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #13, !dbg !8948, !srcloc !8949
  store i32 %1, i32* %val.addr, align 4, !dbg !8948
  %2 = load i32, i32* %val.addr, align 4, !dbg !8950
  ret i32 %2, !dbg !8951
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ar_context_link_page(%struct.ar_context* %ctx, i32 %index) #2 !dbg !8952 {
entry:
  %ctx.addr = alloca %struct.ar_context*, align 8
  %index.addr = alloca i32, align 4
  %d = alloca %struct.descriptor*, align 8
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !8955, metadata !DIExpression()), !dbg !8956
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8957, metadata !DIExpression()), !dbg !8958
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d, metadata !8959, metadata !DIExpression()), !dbg !8960
  %0 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8961
  %descriptors = getelementptr inbounds %struct.ar_context, %struct.ar_context* %0, i32 0, i32 3, !dbg !8962
  %1 = load %struct.descriptor*, %struct.descriptor** %descriptors, align 8, !dbg !8962
  %2 = load i32, i32* %index.addr, align 4, !dbg !8963
  %idxprom = zext i32 %2 to i64, !dbg !8961
  %arrayidx = getelementptr %struct.descriptor, %struct.descriptor* %1, i64 %idxprom, !dbg !8961
  store %struct.descriptor* %arrayidx, %struct.descriptor** %d, align 8, !dbg !8964
  %3 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !8965
  %branch_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %3, i32 0, i32 3, !dbg !8966
  %4 = load i32, i32* %branch_address, align 8, !dbg !8967
  %and = and i32 %4, -16, !dbg !8967
  store i32 %and, i32* %branch_address, align 8, !dbg !8967
  %5 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !8968
  %res_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %5, i32 0, i32 4, !dbg !8969
  store i16 4096, i16* %res_count, align 4, !dbg !8970
  %6 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !8971
  %transfer_status = getelementptr inbounds %struct.descriptor, %struct.descriptor* %6, i32 0, i32 5, !dbg !8972
  store i16 0, i16* %transfer_status, align 2, !dbg !8973
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8974, !srcloc !8975
  %7 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8976
  %descriptors1 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %7, i32 0, i32 3, !dbg !8977
  %8 = load %struct.descriptor*, %struct.descriptor** %descriptors1, align 8, !dbg !8977
  %9 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8978
  %last_buffer_index = getelementptr inbounds %struct.ar_context, %struct.ar_context* %9, i32 0, i32 6, !dbg !8979
  %10 = load i32, i32* %last_buffer_index, align 8, !dbg !8979
  %idxprom2 = zext i32 %10 to i64, !dbg !8976
  %arrayidx3 = getelementptr %struct.descriptor, %struct.descriptor* %8, i64 %idxprom2, !dbg !8976
  store %struct.descriptor* %arrayidx3, %struct.descriptor** %d, align 8, !dbg !8980
  %11 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !8981
  %branch_address4 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %11, i32 0, i32 3, !dbg !8982
  %12 = load i32, i32* %branch_address4, align 8, !dbg !8983
  %or = or i32 %12, 1, !dbg !8983
  store i32 %or, i32* %branch_address4, align 8, !dbg !8983
  %13 = load i32, i32* %index.addr, align 4, !dbg !8984
  %14 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8985
  %last_buffer_index5 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %14, i32 0, i32 6, !dbg !8986
  store i32 %13, i32* %last_buffer_index5, align 8, !dbg !8987
  %15 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8988
  %ohci = getelementptr inbounds %struct.ar_context, %struct.ar_context* %15, i32 0, i32 0, !dbg !8989
  %16 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !8989
  %17 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !8990
  %regs = getelementptr inbounds %struct.ar_context, %struct.ar_context* %17, i32 0, i32 7, !dbg !8990
  %18 = load i32, i32* %regs, align 4, !dbg !8990
  call void @reg_write(%struct.fw_ohci* %16, i32 %18, i32 4096) #11, !dbg !8991
  ret void, !dbg !8992
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #1

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !8993 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8995, metadata !DIExpression()), !dbg !8997
  %0 = load i64, i64* %__edi, align 8, !dbg !8997
  store i64 %0, i64* %__edi, align 8, !dbg !8997
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8998, metadata !DIExpression()), !dbg !8997
  %1 = load i64, i64* %__esi, align 8, !dbg !8997
  store i64 %1, i64* %__esi, align 8, !dbg !8997
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8999, metadata !DIExpression()), !dbg !8997
  %2 = load i64, i64* %__edx, align 8, !dbg !8997
  store i64 %2, i64* %__edx, align 8, !dbg !8997
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9000, metadata !DIExpression()), !dbg !8997
  %3 = load i64, i64* %__ecx, align 8, !dbg !8997
  store i64 %3, i64* %__ecx, align 8, !dbg !8997
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9001, metadata !DIExpression()), !dbg !8997
  %4 = load i64, i64* %__eax, align 8, !dbg !8997
  store i64 %4, i64* %__eax, align 8, !dbg !8997
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !8997
  %6 = call i64 @llvm.read_register.i64(metadata !4608), !dbg !8997
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !8997, !srcloc !9002
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8997
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8997
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8997
  call void @llvm.write_register.i64(metadata !4608, i64 %asmresult1), !dbg !8997
  ret void, !dbg !9003
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #2 !dbg !9004 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9005, metadata !DIExpression()), !dbg !9007
  %0 = load i64, i64* %__edi, align 8, !dbg !9007
  store i64 %0, i64* %__edi, align 8, !dbg !9007
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9008, metadata !DIExpression()), !dbg !9007
  %1 = load i64, i64* %__esi, align 8, !dbg !9007
  store i64 %1, i64* %__esi, align 8, !dbg !9007
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9009, metadata !DIExpression()), !dbg !9007
  %2 = load i64, i64* %__edx, align 8, !dbg !9007
  store i64 %2, i64* %__edx, align 8, !dbg !9007
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9010, metadata !DIExpression()), !dbg !9007
  %3 = load i64, i64* %__ecx, align 8, !dbg !9007
  store i64 %3, i64* %__ecx, align 8, !dbg !9007
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9011, metadata !DIExpression()), !dbg !9007
  %4 = load i64, i64* %__eax, align 8, !dbg !9007
  store i64 %4, i64* %__eax, align 8, !dbg !9007
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !9007
  %6 = call i64 @llvm.read_register.i64(metadata !4608), !dbg !9007
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #10, !dbg !9007, !srcloc !9012
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9007
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9007
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9007
  call void @llvm.write_register.i64(metadata !4608, i64 %asmresult1), !dbg !9007
  ret void, !dbg !9013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @at_context_transmit(%struct.context* %ctx, %struct.fw_packet* %packet) #2 !dbg !9014 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !7300, metadata !DIExpression()), !dbg !9017
  %flags.addr.i39 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i39, metadata !7306, metadata !DIExpression()), !dbg !9019
  %tmp.i40 = alloca i32, align 4
  %tmp8.i41 = alloca i32, align 4
  %lock.addr.i36 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i36, metadata !7300, metadata !DIExpression()), !dbg !9020
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7306, metadata !DIExpression()), !dbg !9024
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4643, metadata !DIExpression()), !dbg !9025
  %ctx.addr = alloca %struct.context*, align 8
  %packet.addr = alloca %struct.fw_packet*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.context* %ctx, %struct.context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %ctx.addr, metadata !9032, metadata !DIExpression()), !dbg !9033
  store %struct.fw_packet* %packet, %struct.fw_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_packet** %packet.addr, metadata !9034, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9036, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9038, metadata !DIExpression()), !dbg !9039
  br label %do.body, !dbg !9040

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9041

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9042, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9045, metadata !DIExpression()), !dbg !9044
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9044
  %conv = zext i1 %cmp to i32, !dbg !9044
  store i32 1, i32* %tmp, align 4, !dbg !9044
  %0 = load i32, i32* %tmp, align 4, !dbg !9044
  br label %do.body2, !dbg !9046

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9047

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9048

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9050, metadata !DIExpression()), !dbg !9053
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9054, metadata !DIExpression()), !dbg !9053
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9053
  %conv8 = zext i1 %cmp7 to i32, !dbg !9053
  store i32 1, i32* %tmp9, align 4, !dbg !9053
  %1 = load i32, i32* %tmp9, align 4, !dbg !9053
  %call = call i64 @arch_local_irq_save() #11, !dbg !9055
  store i64 %call, i64* %flags, align 8, !dbg !9055
  br label %do.end, !dbg !9055

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9048

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9047

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9056, !srcloc !9057
  br label %do.body12, !dbg !9056

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9058
  %ohci = getelementptr inbounds %struct.context, %struct.context* %2, i32 0, i32 0, !dbg !9058
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9058
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %3, i32 0, i32 13, !dbg !9058
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9059
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !9060
  %rlock.i = bitcast %union.anon.4* %5 to %struct.raw_spinlock*, !dbg !9060
  br label %do.end14, !dbg !9058

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9056

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9047

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9046

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9041

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9061
  %header = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %6, i32 0, i32 2, !dbg !9061
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %header, i64 0, i64 0, !dbg !9061
  %7 = load i32, i32* %arrayidx, align 8, !dbg !9061
  %shr = lshr i32 %7, 16, !dbg !9061
  %and = and i32 %shr, 65535, !dbg !9061
  %8 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9062
  %ohci19 = getelementptr inbounds %struct.context, %struct.context* %8, i32 0, i32 0, !dbg !9063
  %9 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci19, align 8, !dbg !9063
  %node_id = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %9, i32 0, i32 2, !dbg !9064
  %10 = load i32, i32* %node_id, align 8, !dbg !9064
  %cmp20 = icmp eq i32 %and, %10, !dbg !9065
  br i1 %cmp20, label %land.lhs.true, label %if.end, !dbg !9066

land.lhs.true:                                    ; preds = %do.end18
  %11 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9067
  %ohci22 = getelementptr inbounds %struct.context, %struct.context* %11, i32 0, i32 0, !dbg !9068
  %12 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci22, align 8, !dbg !9068
  %generation = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %12, i32 0, i32 3, !dbg !9069
  %13 = load i32, i32* %generation, align 4, !dbg !9069
  %14 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9070
  %generation23 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %14, i32 0, i32 1, !dbg !9071
  %15 = load i32, i32* %generation23, align 4, !dbg !9071
  %cmp24 = icmp eq i32 %13, %15, !dbg !9072
  br i1 %cmp24, label %if.then, label %if.end, !dbg !9073

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9074
  %ohci26 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 0, !dbg !9075
  %17 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci26, align 8, !dbg !9075
  %lock27 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %17, i32 0, i32 13, !dbg !9076
  %18 = load i64, i64* %flags, align 8, !dbg !9077
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i36, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !458, metadata !7392, metadata !DIExpression()) #10, !dbg !9078
  call void @llvm.dbg.declare(metadata !458, metadata !7396, metadata !DIExpression()) #10, !dbg !9078
  store i32 1, i32* %tmp.i, align 4, !dbg !9078
  %19 = load i32, i32* %tmp.i, align 4, !dbg !9078
  call void @llvm.dbg.declare(metadata !458, metadata !7397, metadata !DIExpression()) #10, !dbg !9079
  call void @llvm.dbg.declare(metadata !458, metadata !7403, metadata !DIExpression()) #10, !dbg !9079
  store i32 1, i32* %tmp8.i, align 4, !dbg !9079
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !9079
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !9080
  call void @arch_local_irq_restore(i64 %21) #15, !dbg !9080
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9081, !srcloc !7407
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i36, align 8, !dbg !9082
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !9082
  %rlock.i37 = bitcast %union.anon.4* %23 to %struct.raw_spinlock*, !dbg !9082
  %24 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9083
  %25 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9084
  call void @handle_local_request(%struct.context* %24, %struct.fw_packet* %25) #11, !dbg !9085
  br label %if.end35, !dbg !9086

if.end:                                           ; preds = %land.lhs.true, %do.end18
  %26 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9087
  %27 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9088
  %call28 = call i32 @at_context_queue_packet(%struct.context* %26, %struct.fw_packet* %27) #11, !dbg !9089
  store i32 %call28, i32* %ret, align 4, !dbg !9090
  %28 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9091
  %ohci29 = getelementptr inbounds %struct.context, %struct.context* %28, i32 0, i32 0, !dbg !9092
  %29 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci29, align 8, !dbg !9092
  %lock30 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %29, i32 0, i32 13, !dbg !9093
  %30 = load i64, i64* %flags, align 8, !dbg !9094
  store %struct.spinlock* %lock30, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %30, i64* %flags.addr.i39, align 8
  call void @llvm.dbg.declare(metadata !458, metadata !7392, metadata !DIExpression()) #10, !dbg !9095
  call void @llvm.dbg.declare(metadata !458, metadata !7396, metadata !DIExpression()) #10, !dbg !9095
  store i32 1, i32* %tmp.i40, align 4, !dbg !9095
  %31 = load i32, i32* %tmp.i40, align 4, !dbg !9095
  call void @llvm.dbg.declare(metadata !458, metadata !7397, metadata !DIExpression()) #10, !dbg !9096
  call void @llvm.dbg.declare(metadata !458, metadata !7403, metadata !DIExpression()) #10, !dbg !9096
  store i32 1, i32* %tmp8.i41, align 4, !dbg !9096
  %32 = load i32, i32* %tmp8.i41, align 4, !dbg !9096
  %33 = load i64, i64* %flags.addr.i39, align 8, !dbg !9097
  call void @arch_local_irq_restore(i64 %33) #15, !dbg !9097
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9098, !srcloc !7407
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !9099
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !9099
  %rlock.i42 = bitcast %union.anon.4* %35 to %struct.raw_spinlock*, !dbg !9099
  %36 = load i32, i32* %ret, align 4, !dbg !9100
  %cmp31 = icmp slt i32 %36, 0, !dbg !9102
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !9103

if.then33:                                        ; preds = %if.end
  %37 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9104
  %callback = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %37, i32 0, i32 9, !dbg !9105
  %38 = load void (%struct.fw_packet*, %struct.fw_card*, i32)*, void (%struct.fw_packet*, %struct.fw_card*, i32)** %callback, align 8, !dbg !9105
  %39 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9106
  %40 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9107
  %ohci34 = getelementptr inbounds %struct.context, %struct.context* %40, i32 0, i32 0, !dbg !9108
  %41 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci34, align 8, !dbg !9108
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %41, i32 0, i32 0, !dbg !9109
  %42 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9110
  %ack = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %42, i32 0, i32 10, !dbg !9111
  %43 = load i32, i32* %ack, align 8, !dbg !9111
  call void %38(%struct.fw_packet* %39, %struct.fw_card* %card, i32 %43) #11, !dbg !9104
  br label %if.end35, !dbg !9104

if.end35:                                         ; preds = %if.then, %if.then33, %if.end
  ret void, !dbg !9112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !9113 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !9116, metadata !DIExpression()), !dbg !9117
  %call = call i64 @arch_local_save_flags() #11, !dbg !9118
  store i64 %call, i64* %f, align 8, !dbg !9119
  call void @arch_local_irq_disable() #11, !dbg !9120
  %0 = load i64, i64* %f, align 8, !dbg !9121
  ret i64 %0, !dbg !9122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_local_request(%struct.context* %ctx, %struct.fw_packet* %packet) #2 !dbg !9123 {
entry:
  %ctx.addr = alloca %struct.context*, align 8
  %packet.addr = alloca %struct.fw_packet*, align 8
  %offset = alloca i64, align 8
  %csr = alloca i64, align 8
  store %struct.context* %ctx, %struct.context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %ctx.addr, metadata !9124, metadata !DIExpression()), !dbg !9125
  store %struct.fw_packet* %packet, %struct.fw_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_packet** %packet.addr, metadata !9126, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !9128, metadata !DIExpression()), !dbg !9129
  call void @llvm.dbg.declare(metadata i64* %csr, metadata !9130, metadata !DIExpression()), !dbg !9131
  %0 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9132
  %1 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9134
  %ohci = getelementptr inbounds %struct.context, %struct.context* %1, i32 0, i32 0, !dbg !9135
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9135
  %at_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %2, i32 0, i32 19, !dbg !9136
  %cmp = icmp eq %struct.context* %0, %at_request_ctx, !dbg !9137
  br i1 %cmp, label %if.then, label %if.end, !dbg !9138

if.then:                                          ; preds = %entry
  %3 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9139
  %ack = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %3, i32 0, i32 10, !dbg !9141
  store i32 2, i32* %ack, align 8, !dbg !9142
  %4 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9143
  %callback = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %4, i32 0, i32 9, !dbg !9144
  %5 = load void (%struct.fw_packet*, %struct.fw_card*, i32)*, void (%struct.fw_packet*, %struct.fw_card*, i32)** %callback, align 8, !dbg !9144
  %6 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9145
  %7 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9146
  %ohci1 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 0, !dbg !9147
  %8 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci1, align 8, !dbg !9147
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %8, i32 0, i32 0, !dbg !9148
  %9 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9149
  %ack2 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %9, i32 0, i32 10, !dbg !9150
  %10 = load i32, i32* %ack2, align 8, !dbg !9150
  call void %5(%struct.fw_packet* %6, %struct.fw_card* %card, i32 %10) #11, !dbg !9143
  br label %if.end, !dbg !9151

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9152
  %header = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %11, i32 0, i32 2, !dbg !9152
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %header, i64 0, i64 1, !dbg !9152
  %12 = load i32, i32* %arrayidx, align 4, !dbg !9152
  %shr = lshr i32 %12, 0, !dbg !9152
  %and = and i32 %shr, 65535, !dbg !9152
  %conv = zext i32 %and to i64, !dbg !9153
  %shl = shl i64 %conv, 32, !dbg !9154
  %13 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9155
  %header3 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %13, i32 0, i32 2, !dbg !9156
  %arrayidx4 = getelementptr [4 x i32], [4 x i32]* %header3, i64 0, i64 2, !dbg !9155
  %14 = load i32, i32* %arrayidx4, align 8, !dbg !9155
  %conv5 = zext i32 %14 to i64, !dbg !9155
  %or = or i64 %shl, %conv5, !dbg !9157
  store i64 %or, i64* %offset, align 8, !dbg !9158
  %15 = load i64, i64* %offset, align 8, !dbg !9159
  %sub = sub i64 %15, 281474708275200, !dbg !9160
  store i64 %sub, i64* %csr, align 8, !dbg !9161
  %16 = load i64, i64* %csr, align 8, !dbg !9162
  %cmp6 = icmp uge i64 %16, 1024, !dbg !9164
  br i1 %cmp6, label %land.lhs.true, label %if.else, !dbg !9165

land.lhs.true:                                    ; preds = %if.end
  %17 = load i64, i64* %csr, align 8, !dbg !9166
  %cmp8 = icmp ult i64 %17, 2048, !dbg !9167
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !9168

if.then10:                                        ; preds = %land.lhs.true
  %18 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9169
  %ohci11 = getelementptr inbounds %struct.context, %struct.context* %18, i32 0, i32 0, !dbg !9170
  %19 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci11, align 8, !dbg !9170
  %20 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9171
  %21 = load i64, i64* %csr, align 8, !dbg !9172
  %conv12 = trunc i64 %21 to i32, !dbg !9172
  call void @handle_local_rom(%struct.fw_ohci* %19, %struct.fw_packet* %20, i32 %conv12) #11, !dbg !9173
  br label %if.end26, !dbg !9173

if.else:                                          ; preds = %land.lhs.true, %if.end
  %22 = load i64, i64* %csr, align 8, !dbg !9174
  switch i64 %22, label %sw.default [
    i64 540, label %sw.bb
    i64 544, label %sw.bb
    i64 548, label %sw.bb
    i64 552, label %sw.bb
  ], !dbg !9175

sw.bb:                                            ; preds = %if.else, %if.else, %if.else, %if.else
  %23 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9176
  %ohci13 = getelementptr inbounds %struct.context, %struct.context* %23, i32 0, i32 0, !dbg !9178
  %24 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci13, align 8, !dbg !9178
  %25 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9179
  %26 = load i64, i64* %csr, align 8, !dbg !9180
  %conv14 = trunc i64 %26 to i32, !dbg !9180
  call void @handle_local_lock(%struct.fw_ohci* %24, %struct.fw_packet* %25, i32 %conv14) #11, !dbg !9181
  br label %sw.epilog, !dbg !9182

sw.default:                                       ; preds = %if.else
  %27 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9183
  %28 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9185
  %ohci15 = getelementptr inbounds %struct.context, %struct.context* %28, i32 0, i32 0, !dbg !9186
  %29 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci15, align 8, !dbg !9186
  %at_request_ctx16 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %29, i32 0, i32 19, !dbg !9187
  %cmp17 = icmp eq %struct.context* %27, %at_request_ctx16, !dbg !9188
  br i1 %cmp17, label %if.then19, label %if.else22, !dbg !9189

if.then19:                                        ; preds = %sw.default
  %30 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9190
  %ohci20 = getelementptr inbounds %struct.context, %struct.context* %30, i32 0, i32 0, !dbg !9191
  %31 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci20, align 8, !dbg !9191
  %card21 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %31, i32 0, i32 0, !dbg !9192
  %32 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9193
  call void @fw_core_handle_request(%struct.fw_card* %card21, %struct.fw_packet* %32) #11, !dbg !9194
  br label %if.end25, !dbg !9194

if.else22:                                        ; preds = %sw.default
  %33 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9195
  %ohci23 = getelementptr inbounds %struct.context, %struct.context* %33, i32 0, i32 0, !dbg !9196
  %34 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci23, align 8, !dbg !9196
  %card24 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %34, i32 0, i32 0, !dbg !9197
  %35 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9198
  call void @fw_core_handle_response(%struct.fw_card* %card24, %struct.fw_packet* %35) #11, !dbg !9199
  br label %if.end25

if.end25:                                         ; preds = %if.else22, %if.then19
  br label %sw.epilog, !dbg !9200

sw.epilog:                                        ; preds = %if.end25, %sw.bb
  br label %if.end26

if.end26:                                         ; preds = %sw.epilog, %if.then10
  %36 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9201
  %37 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9203
  %ohci27 = getelementptr inbounds %struct.context, %struct.context* %37, i32 0, i32 0, !dbg !9204
  %38 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci27, align 8, !dbg !9204
  %at_response_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %38, i32 0, i32 20, !dbg !9205
  %cmp28 = icmp eq %struct.context* %36, %at_response_ctx, !dbg !9206
  br i1 %cmp28, label %if.then30, label %if.end36, !dbg !9207

if.then30:                                        ; preds = %if.end26
  %39 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9208
  %ack31 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %39, i32 0, i32 10, !dbg !9210
  store i32 1, i32* %ack31, align 8, !dbg !9211
  %40 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9212
  %callback32 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %40, i32 0, i32 9, !dbg !9213
  %41 = load void (%struct.fw_packet*, %struct.fw_card*, i32)*, void (%struct.fw_packet*, %struct.fw_card*, i32)** %callback32, align 8, !dbg !9213
  %42 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9214
  %43 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9215
  %ohci33 = getelementptr inbounds %struct.context, %struct.context* %43, i32 0, i32 0, !dbg !9216
  %44 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci33, align 8, !dbg !9216
  %card34 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %44, i32 0, i32 0, !dbg !9217
  %45 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9218
  %ack35 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %45, i32 0, i32 10, !dbg !9219
  %46 = load i32, i32* %ack35, align 8, !dbg !9219
  call void %41(%struct.fw_packet* %42, %struct.fw_card* %card34, i32 %46) #11, !dbg !9212
  br label %if.end36, !dbg !9220

if.end36:                                         ; preds = %if.then30, %if.end26
  ret void, !dbg !9221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @at_context_queue_packet(%struct.context* %ctx, %struct.fw_packet* %packet) #2 !dbg !9222 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.context*, align 8
  %packet.addr = alloca %struct.fw_packet*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %d_bus = alloca i64, align 8
  %payload_bus = alloca i64, align 8
  %driver_data = alloca %struct.driver_data*, align 8
  %d = alloca %struct.descriptor*, align 8
  %last = alloca %struct.descriptor*, align 8
  %header = alloca i32*, align 8
  %z = alloca i32, align 4
  %tcode = alloca i32, align 4
  store %struct.context* %ctx, %struct.context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %ctx.addr, metadata !9225, metadata !DIExpression()), !dbg !9226
  store %struct.fw_packet* %packet, %struct.fw_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_packet** %packet.addr, metadata !9227, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !9229, metadata !DIExpression()), !dbg !9230
  %0 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9231
  %ohci1 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0, !dbg !9232
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci1, align 8, !dbg !9232
  store %struct.fw_ohci* %1, %struct.fw_ohci** %ohci, align 8, !dbg !9230
  call void @llvm.dbg.declare(metadata i64* %d_bus, metadata !9233, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.declare(metadata i64* %payload_bus, metadata !9235, metadata !DIExpression()), !dbg !9236
  call void @llvm.dbg.declare(metadata %struct.driver_data** %driver_data, metadata !9237, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d, metadata !9239, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.declare(metadata %struct.descriptor** %last, metadata !9241, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.declare(metadata i32** %header, metadata !9243, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.declare(metadata i32* %z, metadata !9245, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.declare(metadata i32* %tcode, metadata !9247, metadata !DIExpression()), !dbg !9248
  %2 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9249
  %call = call %struct.descriptor* @context_get_descriptors(%struct.context* %2, i32 4, i64* %d_bus) #11, !dbg !9250
  store %struct.descriptor* %call, %struct.descriptor** %d, align 8, !dbg !9251
  %3 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9252
  %cmp = icmp eq %struct.descriptor* %3, null, !dbg !9254
  br i1 %cmp, label %if.then, label %if.end, !dbg !9255

if.then:                                          ; preds = %entry
  %4 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9256
  %ack = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %4, i32 0, i32 10, !dbg !9258
  store i32 16, i32* %ack, align 8, !dbg !9259
  store i32 -1, i32* %retval, align 4, !dbg !9260
  br label %return, !dbg !9260

if.end:                                           ; preds = %entry
  %5 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9261
  %arrayidx = getelementptr %struct.descriptor, %struct.descriptor* %5, i64 0, !dbg !9261
  %control = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx, i32 0, i32 1, !dbg !9262
  store i16 512, i16* %control, align 2, !dbg !9263
  %6 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9264
  %timestamp = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %6, i32 0, i32 8, !dbg !9264
  %7 = load i32, i32* %timestamp, align 4, !dbg !9264
  %conv = trunc i32 %7 to i16, !dbg !9264
  %8 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9265
  %arrayidx2 = getelementptr %struct.descriptor, %struct.descriptor* %8, i64 0, !dbg !9265
  %res_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx2, i32 0, i32 4, !dbg !9266
  store i16 %conv, i16* %res_count, align 4, !dbg !9267
  %9 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9268
  %header3 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %9, i32 0, i32 2, !dbg !9269
  %arrayidx4 = getelementptr [4 x i32], [4 x i32]* %header3, i64 0, i64 0, !dbg !9268
  %10 = load i32, i32* %arrayidx4, align 8, !dbg !9268
  %shr = lshr i32 %10, 4, !dbg !9270
  %and = and i32 %shr, 15, !dbg !9271
  store i32 %and, i32* %tcode, align 4, !dbg !9272
  %11 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9273
  %arrayidx5 = getelementptr %struct.descriptor, %struct.descriptor* %11, i64 1, !dbg !9273
  %12 = bitcast %struct.descriptor* %arrayidx5 to i32*, !dbg !9274
  store i32* %12, i32** %header, align 8, !dbg !9275
  %13 = load i32, i32* %tcode, align 4, !dbg !9276
  switch i32 %13, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 14, label %sw.bb34
    i32 10, label %sw.bb57
  ], !dbg !9277

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %14 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9278
  %header6 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %14, i32 0, i32 2, !dbg !9278
  %arrayidx7 = getelementptr [4 x i32], [4 x i32]* %header6, i64 0, i64 0, !dbg !9278
  %15 = load i32, i32* %arrayidx7, align 8, !dbg !9278
  %and8 = and i32 %15, 65535, !dbg !9278
  %16 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9278
  %speed = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %16, i32 0, i32 0, !dbg !9278
  %17 = load i32, i32* %speed, align 8, !dbg !9278
  %shl = shl i32 %17, 16, !dbg !9278
  %or = or i32 %and8, %shl, !dbg !9278
  %18 = load i32*, i32** %header, align 8, !dbg !9280
  %arrayidx9 = getelementptr i32, i32* %18, i64 0, !dbg !9280
  store i32 %or, i32* %arrayidx9, align 4, !dbg !9281
  %19 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9282
  %header10 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %19, i32 0, i32 2, !dbg !9282
  %arrayidx11 = getelementptr [4 x i32], [4 x i32]* %header10, i64 0, i64 1, !dbg !9282
  %20 = load i32, i32* %arrayidx11, align 4, !dbg !9282
  %and12 = and i32 %20, 65535, !dbg !9282
  %21 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9282
  %header13 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %21, i32 0, i32 2, !dbg !9282
  %arrayidx14 = getelementptr [4 x i32], [4 x i32]* %header13, i64 0, i64 0, !dbg !9282
  %22 = load i32, i32* %arrayidx14, align 8, !dbg !9282
  %and15 = and i32 %22, -65536, !dbg !9282
  %or16 = or i32 %and12, %and15, !dbg !9282
  %23 = load i32*, i32** %header, align 8, !dbg !9283
  %arrayidx17 = getelementptr i32, i32* %23, i64 1, !dbg !9283
  store i32 %or16, i32* %arrayidx17, align 4, !dbg !9284
  %24 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9285
  %header18 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %24, i32 0, i32 2, !dbg !9285
  %arrayidx19 = getelementptr [4 x i32], [4 x i32]* %header18, i64 0, i64 2, !dbg !9285
  %25 = load i32, i32* %arrayidx19, align 8, !dbg !9285
  %26 = load i32*, i32** %header, align 8, !dbg !9286
  %arrayidx20 = getelementptr i32, i32* %26, i64 2, !dbg !9286
  store i32 %25, i32* %arrayidx20, align 4, !dbg !9287
  %27 = load i32, i32* %tcode, align 4, !dbg !9288
  %and21 = and i32 %27, 1, !dbg !9288
  %cmp22 = icmp ne i32 %and21, 0, !dbg !9288
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !9290

if.then24:                                        ; preds = %sw.bb
  %28 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9291
  %header25 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %28, i32 0, i32 2, !dbg !9291
  %arrayidx26 = getelementptr [4 x i32], [4 x i32]* %header25, i64 0, i64 3, !dbg !9291
  %29 = load i32, i32* %arrayidx26, align 4, !dbg !9291
  %30 = load i32*, i32** %header, align 8, !dbg !9292
  %arrayidx27 = getelementptr i32, i32* %30, i64 3, !dbg !9292
  store i32 %29, i32* %arrayidx27, align 4, !dbg !9293
  br label %if.end31, !dbg !9292

if.else:                                          ; preds = %sw.bb
  %31 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9294
  %header28 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %31, i32 0, i32 2, !dbg !9295
  %arrayidx29 = getelementptr [4 x i32], [4 x i32]* %header28, i64 0, i64 3, !dbg !9294
  %32 = load i32, i32* %arrayidx29, align 4, !dbg !9294
  %33 = load i32*, i32** %header, align 8, !dbg !9296
  %arrayidx30 = getelementptr i32, i32* %33, i64 3, !dbg !9296
  store i32 %32, i32* %arrayidx30, align 4, !dbg !9297
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then24
  %34 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9298
  %header_length = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %34, i32 0, i32 3, !dbg !9298
  %35 = load i64, i64* %header_length, align 8, !dbg !9298
  %conv32 = trunc i64 %35 to i16, !dbg !9298
  %36 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9299
  %arrayidx33 = getelementptr %struct.descriptor, %struct.descriptor* %36, i64 0, !dbg !9299
  %req_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx33, i32 0, i32 0, !dbg !9300
  store i16 %conv32, i16* %req_count, align 16, !dbg !9301
  br label %sw.epilog, !dbg !9302

sw.bb34:                                          ; preds = %if.end
  %37 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9303
  %speed35 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %37, i32 0, i32 0, !dbg !9303
  %38 = load i32, i32* %speed35, align 8, !dbg !9303
  %shl36 = shl i32 %38, 16, !dbg !9303
  %or37 = or i32 224, %shl36, !dbg !9303
  %39 = load i32*, i32** %header, align 8, !dbg !9304
  %arrayidx38 = getelementptr i32, i32* %39, i64 0, !dbg !9304
  store i32 %or37, i32* %arrayidx38, align 4, !dbg !9305
  %40 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9306
  %header39 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %40, i32 0, i32 2, !dbg !9306
  %arrayidx40 = getelementptr [4 x i32], [4 x i32]* %header39, i64 0, i64 1, !dbg !9306
  %41 = load i32, i32* %arrayidx40, align 4, !dbg !9306
  %42 = load i32*, i32** %header, align 8, !dbg !9307
  %arrayidx41 = getelementptr i32, i32* %42, i64 1, !dbg !9307
  store i32 %41, i32* %arrayidx41, align 4, !dbg !9308
  %43 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9309
  %header42 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %43, i32 0, i32 2, !dbg !9309
  %arrayidx43 = getelementptr [4 x i32], [4 x i32]* %header42, i64 0, i64 2, !dbg !9309
  %44 = load i32, i32* %arrayidx43, align 8, !dbg !9309
  %45 = load i32*, i32** %header, align 8, !dbg !9310
  %arrayidx44 = getelementptr i32, i32* %45, i64 2, !dbg !9310
  store i32 %44, i32* %arrayidx44, align 4, !dbg !9311
  %46 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9312
  %arrayidx45 = getelementptr %struct.descriptor, %struct.descriptor* %46, i64 0, !dbg !9312
  %req_count46 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx45, i32 0, i32 0, !dbg !9313
  store i16 12, i16* %req_count46, align 16, !dbg !9314
  %47 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9315
  %header47 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %47, i32 0, i32 2, !dbg !9317
  %arrayidx48 = getelementptr [4 x i32], [4 x i32]* %header47, i64 0, i64 1, !dbg !9315
  %call49 = call zeroext i1 @is_ping_packet(i32* %arrayidx48) #11, !dbg !9318
  br i1 %call49, label %if.then50, label %if.end56, !dbg !9319

if.then50:                                        ; preds = %sw.bb34
  %48 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9320
  %arrayidx51 = getelementptr %struct.descriptor, %struct.descriptor* %48, i64 0, !dbg !9320
  %control52 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx51, i32 0, i32 1, !dbg !9321
  %49 = load i16, i16* %control52, align 2, !dbg !9322
  %conv53 = zext i16 %49 to i32, !dbg !9322
  %or54 = or i32 %conv53, 128, !dbg !9322
  %conv55 = trunc i32 %or54 to i16, !dbg !9322
  store i16 %conv55, i16* %control52, align 2, !dbg !9322
  br label %if.end56, !dbg !9320

if.end56:                                         ; preds = %if.then50, %sw.bb34
  br label %sw.epilog, !dbg !9323

sw.bb57:                                          ; preds = %if.end
  %50 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9324
  %header58 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %50, i32 0, i32 2, !dbg !9324
  %arrayidx59 = getelementptr [4 x i32], [4 x i32]* %header58, i64 0, i64 0, !dbg !9324
  %51 = load i32, i32* %arrayidx59, align 8, !dbg !9324
  %and60 = and i32 %51, 65535, !dbg !9324
  %52 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9324
  %speed61 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %52, i32 0, i32 0, !dbg !9324
  %53 = load i32, i32* %speed61, align 8, !dbg !9324
  %shl62 = shl i32 %53, 16, !dbg !9324
  %or63 = or i32 %and60, %shl62, !dbg !9324
  %54 = load i32*, i32** %header, align 8, !dbg !9325
  %arrayidx64 = getelementptr i32, i32* %54, i64 0, !dbg !9325
  store i32 %or63, i32* %arrayidx64, align 4, !dbg !9326
  %55 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9327
  %header65 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %55, i32 0, i32 2, !dbg !9327
  %arrayidx66 = getelementptr [4 x i32], [4 x i32]* %header65, i64 0, i64 0, !dbg !9327
  %56 = load i32, i32* %arrayidx66, align 8, !dbg !9327
  %and67 = and i32 %56, -65536, !dbg !9327
  %57 = load i32*, i32** %header, align 8, !dbg !9328
  %arrayidx68 = getelementptr i32, i32* %57, i64 1, !dbg !9328
  store i32 %and67, i32* %arrayidx68, align 4, !dbg !9329
  %58 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9330
  %arrayidx69 = getelementptr %struct.descriptor, %struct.descriptor* %58, i64 0, !dbg !9330
  %req_count70 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx69, i32 0, i32 0, !dbg !9331
  store i16 8, i16* %req_count70, align 16, !dbg !9332
  br label %sw.epilog, !dbg !9333

sw.default:                                       ; preds = %if.end
  %59 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9334
  %ack71 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %59, i32 0, i32 10, !dbg !9335
  store i32 16, i32* %ack71, align 8, !dbg !9336
  store i32 -1, i32* %retval, align 4, !dbg !9337
  br label %return, !dbg !9337

sw.epilog:                                        ; preds = %sw.bb57, %if.end56, %if.end31
  br label %do.body, !dbg !9338

do.body:                                          ; preds = %sw.epilog
  br label %do.end, !dbg !9339

do.end:                                           ; preds = %do.body
  %60 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9341
  %arrayidx72 = getelementptr %struct.descriptor, %struct.descriptor* %60, i64 3, !dbg !9341
  %61 = bitcast %struct.descriptor* %arrayidx72 to %struct.driver_data*, !dbg !9342
  store %struct.driver_data* %61, %struct.driver_data** %driver_data, align 8, !dbg !9343
  %62 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9344
  %63 = load %struct.driver_data*, %struct.driver_data** %driver_data, align 8, !dbg !9345
  %packet73 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %63, i32 0, i32 1, !dbg !9346
  store %struct.fw_packet* %62, %struct.fw_packet** %packet73, align 8, !dbg !9347
  %64 = load %struct.driver_data*, %struct.driver_data** %driver_data, align 8, !dbg !9348
  %65 = bitcast %struct.driver_data* %64 to i8*, !dbg !9348
  %66 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9349
  %driver_data74 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %66, i32 0, i32 12, !dbg !9350
  store i8* %65, i8** %driver_data74, align 8, !dbg !9351
  %67 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9352
  %payload_length = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %67, i32 0, i32 5, !dbg !9354
  %68 = load i64, i64* %payload_length, align 8, !dbg !9354
  %cmp75 = icmp ugt i64 %68, 0, !dbg !9355
  br i1 %cmp75, label %if.then77, label %if.else102, !dbg !9356

if.then77:                                        ; preds = %do.end
  %69 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9357
  %payload_length78 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %69, i32 0, i32 5, !dbg !9360
  %70 = load i64, i64* %payload_length78, align 8, !dbg !9360
  %cmp79 = icmp ugt i64 %70, 8, !dbg !9361
  br i1 %cmp79, label %if.then81, label %if.else91, !dbg !9362

if.then81:                                        ; preds = %if.then77
  %71 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9363
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %71, i32 0, i32 0, !dbg !9363
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !9363
  %72 = load %struct.device*, %struct.device** %device, align 8, !dbg !9363
  %73 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9363
  %payload = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %73, i32 0, i32 4, !dbg !9363
  %74 = load i8*, i8** %payload, align 8, !dbg !9363
  %75 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9363
  %payload_length82 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %75, i32 0, i32 5, !dbg !9363
  %76 = load i64, i64* %payload_length82, align 8, !dbg !9363
  %call83 = call i64 @dma_map_single_attrs(%struct.device* %72, i8* %74, i64 %76, i32 1, i64 0) #11, !dbg !9363
  store i64 %call83, i64* %payload_bus, align 8, !dbg !9365
  %77 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9366
  %card84 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %77, i32 0, i32 0, !dbg !9368
  %device85 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card84, i32 0, i32 1, !dbg !9369
  %78 = load %struct.device*, %struct.device** %device85, align 8, !dbg !9369
  %79 = load i64, i64* %payload_bus, align 8, !dbg !9370
  %call86 = call i32 @dma_mapping_error(%struct.device* %78, i64 %79) #11, !dbg !9371
  %tobool = icmp ne i32 %call86, 0, !dbg !9371
  br i1 %tobool, label %if.then87, label %if.end89, !dbg !9372

if.then87:                                        ; preds = %if.then81
  %80 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9373
  %ack88 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %80, i32 0, i32 10, !dbg !9375
  store i32 16, i32* %ack88, align 8, !dbg !9376
  store i32 -1, i32* %retval, align 4, !dbg !9377
  br label %return, !dbg !9377

if.end89:                                         ; preds = %if.then81
  %81 = load i64, i64* %payload_bus, align 8, !dbg !9378
  %82 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9379
  %payload_bus90 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %82, i32 0, i32 6, !dbg !9380
  store i64 %81, i64* %payload_bus90, align 8, !dbg !9381
  %83 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9382
  %payload_mapped = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %83, i32 0, i32 7, !dbg !9383
  store i8 1, i8* %payload_mapped, align 8, !dbg !9384
  br label %if.end94, !dbg !9385

if.else91:                                        ; preds = %if.then77
  %84 = load %struct.driver_data*, %struct.driver_data** %driver_data, align 8, !dbg !9386
  %inline_data = getelementptr inbounds %struct.driver_data, %struct.driver_data* %84, i32 0, i32 0, !dbg !9388
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %inline_data, i64 0, i64 0, !dbg !9389
  %85 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9390
  %payload92 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %85, i32 0, i32 4, !dbg !9391
  %86 = load i8*, i8** %payload92, align 8, !dbg !9391
  %87 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9392
  %payload_length93 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %87, i32 0, i32 5, !dbg !9393
  %88 = load i64, i64* %payload_length93, align 8, !dbg !9393
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %86, i64 %88, i1 false), !dbg !9389
  %89 = load i64, i64* %d_bus, align 8, !dbg !9394
  %add = add i64 %89, 48, !dbg !9395
  store i64 %add, i64* %payload_bus, align 8, !dbg !9396
  br label %if.end94

if.end94:                                         ; preds = %if.else91, %if.end89
  %90 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9397
  %payload_length95 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %90, i32 0, i32 5, !dbg !9397
  %91 = load i64, i64* %payload_length95, align 8, !dbg !9397
  %conv96 = trunc i64 %91 to i16, !dbg !9397
  %92 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9398
  %arrayidx97 = getelementptr %struct.descriptor, %struct.descriptor* %92, i64 2, !dbg !9398
  %req_count98 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx97, i32 0, i32 0, !dbg !9399
  store i16 %conv96, i16* %req_count98, align 16, !dbg !9400
  %93 = load i64, i64* %payload_bus, align 8, !dbg !9401
  %conv99 = trunc i64 %93 to i32, !dbg !9401
  %94 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9402
  %arrayidx100 = getelementptr %struct.descriptor, %struct.descriptor* %94, i64 2, !dbg !9402
  %data_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx100, i32 0, i32 2, !dbg !9403
  store i32 %conv99, i32* %data_address, align 4, !dbg !9404
  %95 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9405
  %arrayidx101 = getelementptr %struct.descriptor, %struct.descriptor* %95, i64 2, !dbg !9405
  store %struct.descriptor* %arrayidx101, %struct.descriptor** %last, align 8, !dbg !9406
  store i32 3, i32* %z, align 4, !dbg !9407
  br label %if.end104, !dbg !9408

if.else102:                                       ; preds = %do.end
  %96 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9409
  %arrayidx103 = getelementptr %struct.descriptor, %struct.descriptor* %96, i64 0, !dbg !9409
  store %struct.descriptor* %arrayidx103, %struct.descriptor** %last, align 8, !dbg !9411
  store i32 2, i32* %z, align 4, !dbg !9412
  br label %if.end104

if.end104:                                        ; preds = %if.else102, %if.end94
  %97 = load %struct.descriptor*, %struct.descriptor** %last, align 8, !dbg !9413
  %control105 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %97, i32 0, i32 1, !dbg !9414
  %98 = load i16, i16* %control105, align 2, !dbg !9415
  %conv106 = zext i16 %98 to i32, !dbg !9415
  %or107 = or i32 %conv106, 4156, !dbg !9415
  %conv108 = trunc i32 %or107 to i16, !dbg !9415
  store i16 %conv108, i16* %control105, align 2, !dbg !9415
  %99 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9416
  %generation = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %99, i32 0, i32 3, !dbg !9418
  %100 = load i32, i32* %generation, align 4, !dbg !9418
  %101 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9419
  %generation109 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %101, i32 0, i32 1, !dbg !9420
  %102 = load i32, i32* %generation109, align 4, !dbg !9420
  %cmp110 = icmp ne i32 %100, %102, !dbg !9421
  br i1 %cmp110, label %if.then112, label %if.end121, !dbg !9422

if.then112:                                       ; preds = %if.end104
  %103 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9423
  %payload_mapped113 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %103, i32 0, i32 7, !dbg !9426
  %104 = load i8, i8* %payload_mapped113, align 8, !dbg !9426
  %tobool114 = trunc i8 %104 to i1, !dbg !9426
  br i1 %tobool114, label %if.then115, label %if.end119, !dbg !9427

if.then115:                                       ; preds = %if.then112
  %105 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9428
  %card116 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %105, i32 0, i32 0, !dbg !9428
  %device117 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card116, i32 0, i32 1, !dbg !9428
  %106 = load %struct.device*, %struct.device** %device117, align 8, !dbg !9428
  %107 = load i64, i64* %payload_bus, align 8, !dbg !9428
  %108 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9428
  %payload_length118 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %108, i32 0, i32 5, !dbg !9428
  %109 = load i64, i64* %payload_length118, align 8, !dbg !9428
  call void @dma_unmap_single_attrs(%struct.device* %106, i64 %107, i64 %109, i32 1, i64 0) #11, !dbg !9428
  br label %if.end119, !dbg !9428

if.end119:                                        ; preds = %if.then115, %if.then112
  %110 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9429
  %ack120 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %110, i32 0, i32 10, !dbg !9430
  store i32 19, i32* %ack120, align 8, !dbg !9431
  store i32 -1, i32* %retval, align 4, !dbg !9432
  br label %return, !dbg !9432

if.end121:                                        ; preds = %if.end104
  %111 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9433
  %112 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9434
  %113 = load i32, i32* %z, align 4, !dbg !9435
  %114 = load i32, i32* %z, align 4, !dbg !9436
  %sub = sub i32 4, %114, !dbg !9437
  call void @context_append(%struct.context* %111, %struct.descriptor* %112, i32 %113, i32 %sub) #11, !dbg !9438
  %115 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9439
  %running = getelementptr inbounds %struct.context, %struct.context* %115, i32 0, i32 4, !dbg !9441
  %116 = load i8, i8* %running, align 4, !dbg !9441
  %tobool122 = trunc i8 %116 to i1, !dbg !9441
  br i1 %tobool122, label %if.then123, label %if.else124, !dbg !9442

if.then123:                                       ; preds = %if.end121
  %117 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9443
  %118 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9444
  %regs = getelementptr inbounds %struct.context, %struct.context* %118, i32 0, i32 1, !dbg !9444
  %119 = load i32, i32* %regs, align 8, !dbg !9444
  call void @reg_write(%struct.fw_ohci* %117, i32 %119, i32 4096) #11, !dbg !9445
  br label %if.end125, !dbg !9445

if.else124:                                       ; preds = %if.end121
  %120 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9446
  call void @context_run(%struct.context* %120, i32 0) #11, !dbg !9447
  br label %if.end125

if.end125:                                        ; preds = %if.else124, %if.then123
  store i32 0, i32* %retval, align 4, !dbg !9448
  br label %return, !dbg !9448

return:                                           ; preds = %if.end125, %if.end119, %if.then87, %sw.default, %if.then
  %121 = load i32, i32* %retval, align 4, !dbg !9449
  ret i32 %121, !dbg !9449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !9450 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !9451, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9454, metadata !DIExpression()), !dbg !9453
  %0 = load i64, i64* %__edi, align 8, !dbg !9453
  store i64 %0, i64* %__edi, align 8, !dbg !9453
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9455, metadata !DIExpression()), !dbg !9453
  %1 = load i64, i64* %__esi, align 8, !dbg !9453
  store i64 %1, i64* %__esi, align 8, !dbg !9453
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9456, metadata !DIExpression()), !dbg !9453
  %2 = load i64, i64* %__edx, align 8, !dbg !9453
  store i64 %2, i64* %__edx, align 8, !dbg !9453
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9457, metadata !DIExpression()), !dbg !9453
  %3 = load i64, i64* %__ecx, align 8, !dbg !9453
  store i64 %3, i64* %__ecx, align 8, !dbg !9453
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9458, metadata !DIExpression()), !dbg !9453
  %4 = load i64, i64* %__eax, align 8, !dbg !9453
  store i64 %4, i64* %__eax, align 8, !dbg !9453
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !9453
  %6 = call i64 @llvm.read_register.i64(metadata !4608), !dbg !9459
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !9459, !srcloc !9462
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9459
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9459
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9459
  call void @llvm.write_register.i64(metadata !4608, i64 %asmresult1), !dbg !9459
  %8 = load i64, i64* %__eax, align 8, !dbg !9459
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !9463, metadata !DIExpression()), !dbg !9465
  store i64 -1, i64* %__mask, align 8, !dbg !9465
  %9 = load i64, i64* %__mask, align 8, !dbg !9465
  store i64 %9, i64* %tmp, align 8, !dbg !9465
  %10 = load i64, i64* %tmp, align 8, !dbg !9465
  %and = and i64 %8, %10, !dbg !9459
  store i64 %and, i64* %__ret, align 8, !dbg !9459
  %11 = load i64, i64* %__ret, align 8, !dbg !9453
  store i64 %11, i64* %tmp2, align 8, !dbg !9466
  %12 = load i64, i64* %tmp2, align 8, !dbg !9453
  ret i64 %12, !dbg !9467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !9468 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !9469, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9471, metadata !DIExpression()), !dbg !9473
  %0 = load i64, i64* %__edi, align 8, !dbg !9473
  store i64 %0, i64* %__edi, align 8, !dbg !9473
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9474, metadata !DIExpression()), !dbg !9473
  %1 = load i64, i64* %__esi, align 8, !dbg !9473
  store i64 %1, i64* %__esi, align 8, !dbg !9473
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9475, metadata !DIExpression()), !dbg !9473
  %2 = load i64, i64* %__edx, align 8, !dbg !9473
  store i64 %2, i64* %__edx, align 8, !dbg !9473
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9476, metadata !DIExpression()), !dbg !9473
  %3 = load i64, i64* %__ecx, align 8, !dbg !9473
  store i64 %3, i64* %__ecx, align 8, !dbg !9473
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9477, metadata !DIExpression()), !dbg !9473
  %4 = load i64, i64* %__eax, align 8, !dbg !9473
  store i64 %4, i64* %__eax, align 8, !dbg !9473
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !9473
  %6 = call i64 @llvm.read_register.i64(metadata !4608), !dbg !9473
  %7 = load i64, i64* %f.addr, align 8, !dbg !9473
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !9473, !srcloc !9478
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !9473
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !9473
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9473
  call void @llvm.write_register.i64(metadata !4608, i64 %asmresult1), !dbg !9473
  ret void, !dbg !9479
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_local_rom(%struct.fw_ohci* %ohci, %struct.fw_packet* %packet, i32 %csr) #2 !dbg !9480 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %packet.addr = alloca %struct.fw_packet*, align 8
  %csr.addr = alloca i32, align 4
  %response = alloca %struct.fw_packet, align 8
  %tcode = alloca i32, align 4
  %length = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !9483, metadata !DIExpression()), !dbg !9484
  store %struct.fw_packet* %packet, %struct.fw_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_packet** %packet.addr, metadata !9485, metadata !DIExpression()), !dbg !9486
  store i32 %csr, i32* %csr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %csr.addr, metadata !9487, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.declare(metadata %struct.fw_packet* %response, metadata !9489, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.declare(metadata i32* %tcode, metadata !9491, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.declare(metadata i32* %length, metadata !9493, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9495, metadata !DIExpression()), !dbg !9496
  %0 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9497
  %header = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %0, i32 0, i32 2, !dbg !9497
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %header, i64 0, i64 0, !dbg !9497
  %1 = load i32, i32* %arrayidx, align 8, !dbg !9497
  %shr = lshr i32 %1, 4, !dbg !9497
  %and = and i32 %shr, 15, !dbg !9497
  store i32 %and, i32* %tcode, align 4, !dbg !9498
  %2 = load i32, i32* %tcode, align 4, !dbg !9499
  %and1 = and i32 %2, 1, !dbg !9499
  %cmp = icmp ne i32 %and1, 0, !dbg !9499
  br i1 %cmp, label %if.then, label %if.else, !dbg !9501

if.then:                                          ; preds = %entry
  %3 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9502
  %header2 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %3, i32 0, i32 2, !dbg !9502
  %arrayidx3 = getelementptr [4 x i32], [4 x i32]* %header2, i64 0, i64 3, !dbg !9502
  %4 = load i32, i32* %arrayidx3, align 4, !dbg !9502
  %shr4 = lshr i32 %4, 16, !dbg !9502
  %and5 = and i32 %shr4, 65535, !dbg !9502
  store i32 %and5, i32* %length, align 4, !dbg !9503
  br label %if.end, !dbg !9504

if.else:                                          ; preds = %entry
  store i32 4, i32* %length, align 4, !dbg !9505
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %csr.addr, align 4, !dbg !9506
  %sub = sub i32 %5, 1024, !dbg !9507
  store i32 %sub, i32* %i, align 4, !dbg !9508
  %6 = load i32, i32* %i, align 4, !dbg !9509
  %7 = load i32, i32* %length, align 4, !dbg !9511
  %add = add i32 %6, %7, !dbg !9512
  %cmp6 = icmp sgt i32 %add, 1024, !dbg !9513
  br i1 %cmp6, label %if.then7, label %if.else9, !dbg !9514

if.then7:                                         ; preds = %if.end
  %8 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9515
  %header8 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %8, i32 0, i32 2, !dbg !9517
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %header8, i64 0, i64 0, !dbg !9515
  call void @fw_fill_response(%struct.fw_packet* %response, i32* %arraydecay, i32 7, i8* null, i64 0) #11, !dbg !9518
  br label %if.end19, !dbg !9519

if.else9:                                         ; preds = %if.end
  %9 = load i32, i32* %tcode, align 4, !dbg !9520
  %and10 = and i32 %9, -2, !dbg !9520
  %cmp11 = icmp eq i32 %and10, 4, !dbg !9520
  br i1 %cmp11, label %if.else15, label %if.then12, !dbg !9522

if.then12:                                        ; preds = %if.else9
  %10 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9523
  %header13 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %10, i32 0, i32 2, !dbg !9525
  %arraydecay14 = getelementptr inbounds [4 x i32], [4 x i32]* %header13, i64 0, i64 0, !dbg !9523
  call void @fw_fill_response(%struct.fw_packet* %response, i32* %arraydecay14, i32 6, i8* null, i64 0) #11, !dbg !9526
  br label %if.end18, !dbg !9527

if.else15:                                        ; preds = %if.else9
  %11 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9528
  %header16 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %11, i32 0, i32 2, !dbg !9530
  %arraydecay17 = getelementptr inbounds [4 x i32], [4 x i32]* %header16, i64 0, i64 0, !dbg !9528
  %12 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !9531
  %config_rom = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %12, i32 0, i32 30, !dbg !9532
  %13 = load i32*, i32** %config_rom, align 8, !dbg !9532
  %14 = bitcast i32* %13 to i8*, !dbg !9533
  %15 = load i32, i32* %i, align 4, !dbg !9534
  %idx.ext = sext i32 %15 to i64, !dbg !9535
  %add.ptr = getelementptr i8, i8* %14, i64 %idx.ext, !dbg !9535
  %16 = load i32, i32* %length, align 4, !dbg !9536
  %conv = sext i32 %16 to i64, !dbg !9536
  call void @fw_fill_response(%struct.fw_packet* %response, i32* %arraydecay17, i32 0, i8* %add.ptr, i64 %conv) #11, !dbg !9537
  br label %if.end18

if.end18:                                         ; preds = %if.else15, %if.then12
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then7
  %17 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !9538
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %17, i32 0, i32 0, !dbg !9539
  call void @fw_core_handle_response(%struct.fw_card* %card, %struct.fw_packet* %response) #11, !dbg !9540
  ret void, !dbg !9541
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_local_lock(%struct.fw_ohci* %ohci, %struct.fw_packet* %packet, i32 %csr) #2 !dbg !9542 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %packet.addr = alloca %struct.fw_packet*, align 8
  %csr.addr = alloca i32, align 4
  %response = alloca %struct.fw_packet, align 8
  %tcode = alloca i32, align 4
  %length = alloca i32, align 4
  %ext_tcode = alloca i32, align 4
  %sel = alloca i32, align 4
  %try = alloca i32, align 4
  %payload = alloca i32*, align 8
  %lock_old = alloca i32, align 4
  %lock_arg = alloca i32, align 4
  %lock_data = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !9543, metadata !DIExpression()), !dbg !9544
  store %struct.fw_packet* %packet, %struct.fw_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_packet** %packet.addr, metadata !9545, metadata !DIExpression()), !dbg !9546
  store i32 %csr, i32* %csr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %csr.addr, metadata !9547, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.declare(metadata %struct.fw_packet* %response, metadata !9549, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.declare(metadata i32* %tcode, metadata !9551, metadata !DIExpression()), !dbg !9552
  call void @llvm.dbg.declare(metadata i32* %length, metadata !9553, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.declare(metadata i32* %ext_tcode, metadata !9555, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !9557, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.declare(metadata i32* %try, metadata !9559, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.declare(metadata i32** %payload, metadata !9561, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.declare(metadata i32* %lock_old, metadata !9563, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.declare(metadata i32* %lock_arg, metadata !9565, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.declare(metadata i32* %lock_data, metadata !9567, metadata !DIExpression()), !dbg !9568
  %0 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9569
  %header = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %0, i32 0, i32 2, !dbg !9569
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %header, i64 0, i64 0, !dbg !9569
  %1 = load i32, i32* %arrayidx, align 8, !dbg !9569
  %shr = lshr i32 %1, 4, !dbg !9569
  %and = and i32 %shr, 15, !dbg !9569
  store i32 %and, i32* %tcode, align 4, !dbg !9570
  %2 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9571
  %header1 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %2, i32 0, i32 2, !dbg !9571
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %header1, i64 0, i64 3, !dbg !9571
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !9571
  %shr3 = lshr i32 %3, 16, !dbg !9571
  %and4 = and i32 %shr3, 65535, !dbg !9571
  store i32 %and4, i32* %length, align 4, !dbg !9572
  %4 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9573
  %payload5 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %4, i32 0, i32 4, !dbg !9574
  %5 = load i8*, i8** %payload5, align 8, !dbg !9574
  %6 = bitcast i8* %5 to i32*, !dbg !9573
  store i32* %6, i32** %payload, align 8, !dbg !9575
  %7 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9576
  %header6 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %7, i32 0, i32 2, !dbg !9576
  %arrayidx7 = getelementptr [4 x i32], [4 x i32]* %header6, i64 0, i64 3, !dbg !9576
  %8 = load i32, i32* %arrayidx7, align 4, !dbg !9576
  %shr8 = lshr i32 %8, 0, !dbg !9576
  %and9 = and i32 %shr8, 65535, !dbg !9576
  store i32 %and9, i32* %ext_tcode, align 4, !dbg !9577
  %9 = load i32, i32* %tcode, align 4, !dbg !9578
  %cmp = icmp eq i32 %9, 9, !dbg !9580
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9581

land.lhs.true:                                    ; preds = %entry
  %10 = load i32, i32* %ext_tcode, align 4, !dbg !9582
  %cmp10 = icmp eq i32 %10, 2, !dbg !9583
  br i1 %cmp10, label %land.lhs.true11, label %if.else, !dbg !9584

land.lhs.true11:                                  ; preds = %land.lhs.true
  %11 = load i32, i32* %length, align 4, !dbg !9585
  %cmp12 = icmp eq i32 %11, 8, !dbg !9586
  br i1 %cmp12, label %if.then, label %if.else, !dbg !9587

if.then:                                          ; preds = %land.lhs.true11
  %12 = load i32*, i32** %payload, align 8, !dbg !9588
  %arrayidx13 = getelementptr i32, i32* %12, i64 0, !dbg !9588
  %13 = load i32, i32* %arrayidx13, align 4, !dbg !9588
  %14 = call i1 @llvm.is.constant.i32(i32 %13), !dbg !9588
  br i1 %14, label %cond.true, label %cond.false, !dbg !9588

cond.true:                                        ; preds = %if.then
  %15 = load i32*, i32** %payload, align 8, !dbg !9588
  %arrayidx14 = getelementptr i32, i32* %15, i64 0, !dbg !9588
  %16 = load i32, i32* %arrayidx14, align 4, !dbg !9588
  %and15 = and i32 %16, 255, !dbg !9588
  %shl = shl i32 %and15, 24, !dbg !9588
  %17 = load i32*, i32** %payload, align 8, !dbg !9588
  %arrayidx16 = getelementptr i32, i32* %17, i64 0, !dbg !9588
  %18 = load i32, i32* %arrayidx16, align 4, !dbg !9588
  %and17 = and i32 %18, 65280, !dbg !9588
  %shl18 = shl i32 %and17, 8, !dbg !9588
  %or = or i32 %shl, %shl18, !dbg !9588
  %19 = load i32*, i32** %payload, align 8, !dbg !9588
  %arrayidx19 = getelementptr i32, i32* %19, i64 0, !dbg !9588
  %20 = load i32, i32* %arrayidx19, align 4, !dbg !9588
  %and20 = and i32 %20, 16711680, !dbg !9588
  %shr21 = lshr i32 %and20, 8, !dbg !9588
  %or22 = or i32 %or, %shr21, !dbg !9588
  %21 = load i32*, i32** %payload, align 8, !dbg !9588
  %arrayidx23 = getelementptr i32, i32* %21, i64 0, !dbg !9588
  %22 = load i32, i32* %arrayidx23, align 4, !dbg !9588
  %and24 = and i32 %22, -16777216, !dbg !9588
  %shr25 = lshr i32 %and24, 24, !dbg !9588
  %or26 = or i32 %or22, %shr25, !dbg !9588
  br label %cond.end, !dbg !9588

cond.false:                                       ; preds = %if.then
  %23 = load i32*, i32** %payload, align 8, !dbg !9588
  %arrayidx27 = getelementptr i32, i32* %23, i64 0, !dbg !9588
  %24 = load i32, i32* %arrayidx27, align 4, !dbg !9588
  %call = call i32 @__fswab32(i32 %24) #14, !dbg !9588
  br label %cond.end, !dbg !9588

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or26, %cond.true ], [ %call, %cond.false ], !dbg !9588
  store i32 %cond, i32* %lock_arg, align 4, !dbg !9590
  %25 = load i32*, i32** %payload, align 8, !dbg !9591
  %arrayidx28 = getelementptr i32, i32* %25, i64 1, !dbg !9591
  %26 = load i32, i32* %arrayidx28, align 4, !dbg !9591
  %27 = call i1 @llvm.is.constant.i32(i32 %26), !dbg !9591
  br i1 %27, label %cond.true29, label %cond.false45, !dbg !9591

cond.true29:                                      ; preds = %cond.end
  %28 = load i32*, i32** %payload, align 8, !dbg !9591
  %arrayidx30 = getelementptr i32, i32* %28, i64 1, !dbg !9591
  %29 = load i32, i32* %arrayidx30, align 4, !dbg !9591
  %and31 = and i32 %29, 255, !dbg !9591
  %shl32 = shl i32 %and31, 24, !dbg !9591
  %30 = load i32*, i32** %payload, align 8, !dbg !9591
  %arrayidx33 = getelementptr i32, i32* %30, i64 1, !dbg !9591
  %31 = load i32, i32* %arrayidx33, align 4, !dbg !9591
  %and34 = and i32 %31, 65280, !dbg !9591
  %shl35 = shl i32 %and34, 8, !dbg !9591
  %or36 = or i32 %shl32, %shl35, !dbg !9591
  %32 = load i32*, i32** %payload, align 8, !dbg !9591
  %arrayidx37 = getelementptr i32, i32* %32, i64 1, !dbg !9591
  %33 = load i32, i32* %arrayidx37, align 4, !dbg !9591
  %and38 = and i32 %33, 16711680, !dbg !9591
  %shr39 = lshr i32 %and38, 8, !dbg !9591
  %or40 = or i32 %or36, %shr39, !dbg !9591
  %34 = load i32*, i32** %payload, align 8, !dbg !9591
  %arrayidx41 = getelementptr i32, i32* %34, i64 1, !dbg !9591
  %35 = load i32, i32* %arrayidx41, align 4, !dbg !9591
  %and42 = and i32 %35, -16777216, !dbg !9591
  %shr43 = lshr i32 %and42, 24, !dbg !9591
  %or44 = or i32 %or40, %shr43, !dbg !9591
  br label %cond.end48, !dbg !9591

cond.false45:                                     ; preds = %cond.end
  %36 = load i32*, i32** %payload, align 8, !dbg !9591
  %arrayidx46 = getelementptr i32, i32* %36, i64 1, !dbg !9591
  %37 = load i32, i32* %arrayidx46, align 4, !dbg !9591
  %call47 = call i32 @__fswab32(i32 %37) #14, !dbg !9591
  br label %cond.end48, !dbg !9591

cond.end48:                                       ; preds = %cond.false45, %cond.true29
  %cond49 = phi i32 [ %or44, %cond.true29 ], [ %call47, %cond.false45 ], !dbg !9591
  store i32 %cond49, i32* %lock_data, align 4, !dbg !9592
  br label %if.end54, !dbg !9593

if.else:                                          ; preds = %land.lhs.true11, %land.lhs.true, %entry
  %38 = load i32, i32* %tcode, align 4, !dbg !9594
  %cmp50 = icmp eq i32 %38, 4, !dbg !9596
  br i1 %cmp50, label %if.then51, label %if.else52, !dbg !9597

if.then51:                                        ; preds = %if.else
  store i32 0, i32* %lock_arg, align 4, !dbg !9598
  store i32 0, i32* %lock_data, align 4, !dbg !9600
  br label %if.end, !dbg !9601

if.else52:                                        ; preds = %if.else
  %39 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9602
  %header53 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %39, i32 0, i32 2, !dbg !9604
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %header53, i64 0, i64 0, !dbg !9602
  call void @fw_fill_response(%struct.fw_packet* %response, i32* %arraydecay, i32 6, i8* null, i64 0) #11, !dbg !9605
  br label %out, !dbg !9606

if.end:                                           ; preds = %if.then51
  br label %if.end54

if.end54:                                         ; preds = %if.end, %cond.end48
  %40 = load i32, i32* %csr.addr, align 4, !dbg !9607
  %sub = sub i32 %40, 540, !dbg !9608
  %div = udiv i32 %sub, 4, !dbg !9609
  store i32 %div, i32* %sel, align 4, !dbg !9610
  %41 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !9611
  %42 = load i32, i32* %lock_data, align 4, !dbg !9612
  call void @reg_write(%struct.fw_ohci* %41, i32 12, i32 %42) #11, !dbg !9613
  %43 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !9614
  %44 = load i32, i32* %lock_arg, align 4, !dbg !9615
  call void @reg_write(%struct.fw_ohci* %43, i32 16, i32 %44) #11, !dbg !9616
  %45 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !9617
  %46 = load i32, i32* %sel, align 4, !dbg !9618
  call void @reg_write(%struct.fw_ohci* %45, i32 20, i32 %46) #11, !dbg !9619
  store i32 0, i32* %try, align 4, !dbg !9620
  br label %for.cond, !dbg !9622

for.cond:                                         ; preds = %for.inc, %if.end54
  %47 = load i32, i32* %try, align 4, !dbg !9623
  %cmp55 = icmp slt i32 %47, 20, !dbg !9625
  br i1 %cmp55, label %for.body, label %for.end, !dbg !9626

for.body:                                         ; preds = %for.cond
  %48 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !9627
  %call56 = call i32 @reg_read(%struct.fw_ohci* %48, i32 20) #11, !dbg !9629
  %and57 = and i32 %call56, -2147483648, !dbg !9630
  %tobool = icmp ne i32 %and57, 0, !dbg !9630
  br i1 %tobool, label %if.then58, label %if.end63, !dbg !9631

if.then58:                                        ; preds = %for.body
  %49 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !9632
  %call59 = call i32 @reg_read(%struct.fw_ohci* %49, i32 12) #11, !dbg !9632
  %call60 = call i32 @__fswab32(i32 %call59) #14, !dbg !9632
  store i32 %call60, i32* %lock_old, align 4, !dbg !9634
  %50 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9635
  %header61 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %50, i32 0, i32 2, !dbg !9636
  %arraydecay62 = getelementptr inbounds [4 x i32], [4 x i32]* %header61, i64 0, i64 0, !dbg !9635
  %51 = bitcast i32* %lock_old to i8*, !dbg !9637
  call void @fw_fill_response(%struct.fw_packet* %response, i32* %arraydecay62, i32 0, i8* %51, i64 4) #11, !dbg !9638
  br label %out, !dbg !9639

if.end63:                                         ; preds = %for.body
  br label %for.inc, !dbg !9640

for.inc:                                          ; preds = %if.end63
  %52 = load i32, i32* %try, align 4, !dbg !9641
  %inc = add i32 %52, 1, !dbg !9641
  store i32 %inc, i32* %try, align 4, !dbg !9641
  br label %for.cond, !dbg !9642, !llvm.loop !9643

for.end:                                          ; preds = %for.cond
  %53 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !9645
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %53, i32 0, i32 0, !dbg !9645
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !9645
  %54 = load %struct.device*, %struct.device** %device, align 8, !dbg !9645
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %54, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0)) #12, !dbg !9645
  %55 = load %struct.fw_packet*, %struct.fw_packet** %packet.addr, align 8, !dbg !9646
  %header64 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %55, i32 0, i32 2, !dbg !9647
  %arraydecay65 = getelementptr inbounds [4 x i32], [4 x i32]* %header64, i64 0, i64 0, !dbg !9646
  call void @fw_fill_response(%struct.fw_packet* %response, i32* %arraydecay65, i32 18, i8* null, i64 0) #11, !dbg !9648
  br label %out, !dbg !9648

out:                                              ; preds = %for.end, %if.then58, %if.else52
  call void @llvm.dbg.label(metadata !9649), !dbg !9650
  %56 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !9651
  %card66 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %56, i32 0, i32 0, !dbg !9652
  call void @fw_core_handle_response(%struct.fw_card* %card66, %struct.fw_packet* %response) #11, !dbg !9653
  ret void, !dbg !9654
}

; Function Attrs: noredzone
declare dso_local void @fw_core_handle_request(%struct.fw_card*, %struct.fw_packet*) #1

; Function Attrs: noredzone
declare dso_local void @fw_core_handle_response(%struct.fw_card*, %struct.fw_packet*) #1

; Function Attrs: noredzone
declare dso_local void @fw_fill_response(%struct.fw_packet*, i32*, i32, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.descriptor* @context_get_descriptors(%struct.context* %ctx, i32 %z, i64* %d_bus) #2 !dbg !9655 {
entry:
  %retval = alloca %struct.descriptor*, align 8
  %ctx.addr = alloca %struct.context*, align 8
  %z.addr = alloca i32, align 4
  %d_bus.addr = alloca i64*, align 8
  %d = alloca %struct.descriptor*, align 8
  %desc = alloca %struct.descriptor_buffer*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.descriptor_buffer*, align 8
  store %struct.context* %ctx, %struct.context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %ctx.addr, metadata !9658, metadata !DIExpression()), !dbg !9659
  store i32 %z, i32* %z.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %z.addr, metadata !9660, metadata !DIExpression()), !dbg !9661
  store i64* %d_bus, i64** %d_bus.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %d_bus.addr, metadata !9662, metadata !DIExpression()), !dbg !9663
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d, metadata !9664, metadata !DIExpression()), !dbg !9665
  store %struct.descriptor* null, %struct.descriptor** %d, align 8, !dbg !9665
  call void @llvm.dbg.declare(metadata %struct.descriptor_buffer** %desc, metadata !9666, metadata !DIExpression()), !dbg !9667
  %0 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9668
  %buffer_tail = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 7, !dbg !9669
  %1 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %buffer_tail, align 8, !dbg !9669
  store %struct.descriptor_buffer* %1, %struct.descriptor_buffer** %desc, align 8, !dbg !9667
  %2 = load i32, i32* %z.addr, align 4, !dbg !9670
  %conv = sext i32 %2 to i64, !dbg !9670
  %mul = mul i64 %conv, 16, !dbg !9672
  %3 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9673
  %buffer_size = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %3, i32 0, i32 2, !dbg !9674
  %4 = load i64, i64* %buffer_size, align 8, !dbg !9674
  %cmp = icmp ugt i64 %mul, %4, !dbg !9675
  br i1 %cmp, label %if.then, label %if.end, !dbg !9676

if.then:                                          ; preds = %entry
  store %struct.descriptor* null, %struct.descriptor** %retval, align 8, !dbg !9677
  br label %return, !dbg !9677

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %z.addr, align 4, !dbg !9678
  %conv2 = sext i32 %5 to i64, !dbg !9678
  %mul3 = mul i64 %conv2, 16, !dbg !9680
  %6 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9681
  %buffer_size4 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %6, i32 0, i32 2, !dbg !9682
  %7 = load i64, i64* %buffer_size4, align 8, !dbg !9682
  %8 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9683
  %used = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %8, i32 0, i32 3, !dbg !9684
  %9 = load i64, i64* %used, align 16, !dbg !9684
  %sub = sub i64 %7, %9, !dbg !9685
  %cmp5 = icmp ugt i64 %mul3, %sub, !dbg !9686
  br i1 %cmp5, label %if.then7, label %if.end19, !dbg !9687

if.then7:                                         ; preds = %if.end
  %10 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9688
  %list = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %10, i32 0, i32 0, !dbg !9691
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !9692
  %11 = load %struct.list_head*, %struct.list_head** %next, align 16, !dbg !9692
  %12 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9693
  %buffer_list = getelementptr inbounds %struct.context, %struct.context* %12, i32 0, i32 6, !dbg !9694
  %cmp8 = icmp eq %struct.list_head* %11, %buffer_list, !dbg !9695
  br i1 %cmp8, label %if.then10, label %if.end15, !dbg !9696

if.then10:                                        ; preds = %if.then7
  %13 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9697
  %call = call i32 @context_add_buffer(%struct.context* %13) #11, !dbg !9700
  %cmp11 = icmp slt i32 %call, 0, !dbg !9701
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !9702

if.then13:                                        ; preds = %if.then10
  store %struct.descriptor* null, %struct.descriptor** %retval, align 8, !dbg !9703
  br label %return, !dbg !9703

if.end14:                                         ; preds = %if.then10
  br label %if.end15, !dbg !9704

if.end15:                                         ; preds = %if.end14, %if.then7
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9705, metadata !DIExpression()), !dbg !9707
  %14 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9707
  %list16 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %14, i32 0, i32 0, !dbg !9707
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %list16, i32 0, i32 0, !dbg !9707
  %15 = load %struct.list_head*, %struct.list_head** %next17, align 16, !dbg !9707
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !9707
  store i8* %16, i8** %__mptr, align 8, !dbg !9707
  br label %do.body, !dbg !9707

do.body:                                          ; preds = %if.end15
  br label %do.end, !dbg !9708

do.end:                                           ; preds = %do.body
  %17 = load i8*, i8** %__mptr, align 8, !dbg !9707
  %add.ptr = getelementptr i8, i8* %17, i64 0, !dbg !9707
  %18 = bitcast i8* %add.ptr to %struct.descriptor_buffer*, !dbg !9707
  store %struct.descriptor_buffer* %18, %struct.descriptor_buffer** %tmp, align 8, !dbg !9708
  %19 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %tmp, align 8, !dbg !9707
  store %struct.descriptor_buffer* %19, %struct.descriptor_buffer** %desc, align 8, !dbg !9710
  %20 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9711
  %21 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9712
  %buffer_tail18 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 7, !dbg !9713
  store %struct.descriptor_buffer* %20, %struct.descriptor_buffer** %buffer_tail18, align 8, !dbg !9714
  br label %if.end19, !dbg !9715

if.end19:                                         ; preds = %do.end, %if.end
  %22 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9716
  %buffer = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %22, i32 0, i32 5, !dbg !9717
  %arraydecay = getelementptr inbounds [0 x %struct.descriptor], [0 x %struct.descriptor]* %buffer, i64 0, i64 0, !dbg !9716
  %23 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9718
  %used20 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %23, i32 0, i32 3, !dbg !9719
  %24 = load i64, i64* %used20, align 16, !dbg !9719
  %div = udiv i64 %24, 16, !dbg !9720
  %add.ptr21 = getelementptr %struct.descriptor, %struct.descriptor* %arraydecay, i64 %div, !dbg !9721
  store %struct.descriptor* %add.ptr21, %struct.descriptor** %d, align 8, !dbg !9722
  %25 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9723
  %26 = bitcast %struct.descriptor* %25 to i8*, !dbg !9724
  %27 = load i32, i32* %z.addr, align 4, !dbg !9725
  %conv22 = sext i32 %27 to i64, !dbg !9725
  %mul23 = mul i64 %conv22, 16, !dbg !9726
  call void @llvm.memset.p0i8.i64(i8* align 16 %26, i8 0, i64 %mul23, i1 false), !dbg !9724
  %28 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9727
  %buffer_bus = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %28, i32 0, i32 1, !dbg !9728
  %29 = load i64, i64* %buffer_bus, align 16, !dbg !9728
  %30 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9729
  %used24 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %30, i32 0, i32 3, !dbg !9730
  %31 = load i64, i64* %used24, align 16, !dbg !9730
  %add = add i64 %29, %31, !dbg !9731
  %32 = load i64*, i64** %d_bus.addr, align 8, !dbg !9732
  store i64 %add, i64* %32, align 8, !dbg !9733
  %33 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !9734
  store %struct.descriptor* %33, %struct.descriptor** %retval, align 8, !dbg !9735
  br label %return, !dbg !9735

return:                                           ; preds = %if.end19, %if.then13, %if.then
  %34 = load %struct.descriptor*, %struct.descriptor** %retval, align 8, !dbg !9736
  ret %struct.descriptor* %34, !dbg !9736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_ping_packet(i32* %data) #2 !dbg !9737 {
entry:
  %data.addr = alloca i32*, align 8
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9740, metadata !DIExpression()), !dbg !9741
  %0 = load i32*, i32** %data.addr, align 8, !dbg !9742
  %arrayidx = getelementptr i32, i32* %0, i64 0, !dbg !9742
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9742
  %and = and i32 %1, -1056964609, !dbg !9743
  %cmp = icmp eq i32 %and, 0, !dbg !9744
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9745

land.rhs:                                         ; preds = %entry
  %2 = load i32*, i32** %data.addr, align 8, !dbg !9746
  %arrayidx1 = getelementptr i32, i32* %2, i64 0, !dbg !9746
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !9746
  %neg = xor i32 %3, -1, !dbg !9747
  %4 = load i32*, i32** %data.addr, align 8, !dbg !9748
  %arrayidx2 = getelementptr i32, i32* %4, i64 1, !dbg !9748
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !9748
  %cmp3 = icmp eq i32 %neg, %5, !dbg !9749
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !9750
  ret i1 %6, !dbg !9751
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !4576 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9752, metadata !DIExpression()), !dbg !9753
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9754, metadata !DIExpression()), !dbg !9755
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9756, metadata !DIExpression()), !dbg !9757
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !9758, metadata !DIExpression()), !dbg !9759
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !9760, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !9762, metadata !DIExpression()), !dbg !9765
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9765
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #11, !dbg !9765
  %lnot = xor i1 %call, true, !dbg !9765
  %lnot1 = xor i1 %lnot, true, !dbg !9765
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9765
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !9765
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !9766
  %tobool = icmp ne i32 %1, 0, !dbg !9766
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9766

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !9766
  %tobool2 = trunc i8 %2 to i1, !dbg !9766
  %lnot3 = xor i1 %tobool2, true, !dbg !9766
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !9768
  %lnot5 = xor i1 %3, true, !dbg !9766
  %lnot7 = xor i1 %lnot5, true, !dbg !9766
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !9766
  %conv = sext i32 %lnot.ext8 to i64, !dbg !9766
  %tobool9 = icmp ne i64 %conv, 0, !dbg !9766
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !9765

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !9769
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9771, metadata !DIExpression()), !dbg !9773
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !9773
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !9774
  %tobool10 = icmp ne i32 %4, 0, !dbg !9774
  %lnot11 = xor i1 %tobool10, true, !dbg !9774
  %lnot13 = xor i1 %lnot11, true, !dbg !9774
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !9774
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !9774
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !9774
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !9773

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !9774

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !9776

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !9778

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9776
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #11, !dbg !9776
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9776
  %call20 = call i8* @dev_name(%struct.device* %6) #11, !dbg !9776
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %call19, i8* %call20) #11, !dbg !9776
  br label %do.body21, !dbg !9776

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !9780

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !9782

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !9780

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0), i32 276, i32 2313, i64 12) #10, !dbg !9784, !srcloc !9786
  br label %do.end25, !dbg !9784

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 223) #10, !dbg !9787, !srcloc !9789
  br label %do.body26, !dbg !9780

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !9790

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !9780

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !9776

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !9792

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !9776

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !9776

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !9773
  %tobool32 = icmp ne i32 %7, 0, !dbg !9773
  %lnot33 = xor i1 %tobool32, true, !dbg !9773
  %lnot35 = xor i1 %lnot33, true, !dbg !9773
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !9773
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !9773
  store i64 %conv37, i64* %tmp, align 8, !dbg !9774
  %8 = load i64, i64* %tmp, align 8, !dbg !9773
  br label %if.end38, !dbg !9769

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !9765
  %tobool40 = icmp ne i32 %9, 0, !dbg !9765
  %lnot41 = xor i1 %tobool40, true, !dbg !9765
  %lnot43 = xor i1 %lnot41, true, !dbg !9765
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !9765
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !9765
  store i64 %conv45, i64* %tmp39, align 8, !dbg !9766
  %10 = load i64, i64* %tmp39, align 8, !dbg !9765
  %tobool46 = icmp ne i64 %10, 0, !dbg !9794
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !9795

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !9796
  br label %return, !dbg !9796

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9797
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !9798
  %13 = load i64, i64* %size.addr, align 8, !dbg !9799
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #11, !dbg !9800
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9801
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !9802
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !9802
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !9802
  %18 = ptrtoint i8* %17 to i64, !dbg !9802
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #11, !dbg !9802
  %shr = lshr i64 %call49, 12, !dbg !9802
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !9802
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !9803
  %20 = ptrtoint i8* %19 to i64, !dbg !9803
  %and = and i64 %20, 4095, !dbg !9803
  %21 = load i64, i64* %size.addr, align 8, !dbg !9804
  %22 = load i32, i32* %dir.addr, align 4, !dbg !9805
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !9806
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #11, !dbg !9807
  store i64 %call50, i64* %retval, align 8, !dbg !9808
  br label %return, !dbg !9808

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !9809
  ret i64 %24, !dbg !9809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !9810 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9813, metadata !DIExpression()), !dbg !9814
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !9815, metadata !DIExpression()), !dbg !9816
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9817
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !9818
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #11, !dbg !9819
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !9820
  %cmp = icmp eq i64 %2, -1, !dbg !9822
  br i1 %cmp, label %if.then, label %if.end, !dbg !9823

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9824
  br label %return, !dbg !9824

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9825
  br label %return, !dbg !9825

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !9826
  ret i32 %3, !dbg !9826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !9827 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9830, metadata !DIExpression()), !dbg !9831
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9832, metadata !DIExpression()), !dbg !9833
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9834, metadata !DIExpression()), !dbg !9835
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !9836, metadata !DIExpression()), !dbg !9837
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !9838, metadata !DIExpression()), !dbg !9839
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9840
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9841
  %2 = load i64, i64* %size.addr, align 8, !dbg !9842
  %3 = load i32, i32* %dir.addr, align 4, !dbg !9843
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !9844
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #11, !dbg !9845
  ret void, !dbg !9846
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @context_append(%struct.context* %ctx, %struct.descriptor* %d, i32 %z, i32 %extra) #2 !dbg !9847 {
entry:
  %ctx.addr = alloca %struct.context*, align 8
  %d.addr = alloca %struct.descriptor*, align 8
  %z.addr = alloca i32, align 4
  %extra.addr = alloca i32, align 4
  %d_bus = alloca i64, align 8
  %desc = alloca %struct.descriptor_buffer*, align 8
  %d_branch = alloca %struct.descriptor*, align 8
  store %struct.context* %ctx, %struct.context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %ctx.addr, metadata !9850, metadata !DIExpression()), !dbg !9851
  store %struct.descriptor* %d, %struct.descriptor** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d.addr, metadata !9852, metadata !DIExpression()), !dbg !9853
  store i32 %z, i32* %z.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %z.addr, metadata !9854, metadata !DIExpression()), !dbg !9855
  store i32 %extra, i32* %extra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extra.addr, metadata !9856, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.declare(metadata i64* %d_bus, metadata !9858, metadata !DIExpression()), !dbg !9859
  call void @llvm.dbg.declare(metadata %struct.descriptor_buffer** %desc, metadata !9860, metadata !DIExpression()), !dbg !9861
  %0 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9862
  %buffer_tail = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 7, !dbg !9863
  %1 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %buffer_tail, align 8, !dbg !9863
  store %struct.descriptor_buffer* %1, %struct.descriptor_buffer** %desc, align 8, !dbg !9861
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d_branch, metadata !9864, metadata !DIExpression()), !dbg !9865
  %2 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9866
  %buffer_bus = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %2, i32 0, i32 1, !dbg !9867
  %3 = load i64, i64* %buffer_bus, align 16, !dbg !9867
  %4 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !9868
  %5 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9869
  %buffer = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %5, i32 0, i32 5, !dbg !9870
  %arraydecay = getelementptr inbounds [0 x %struct.descriptor], [0 x %struct.descriptor]* %buffer, i64 0, i64 0, !dbg !9869
  %sub.ptr.lhs.cast = ptrtoint %struct.descriptor* %4 to i64, !dbg !9871
  %sub.ptr.rhs.cast = ptrtoint %struct.descriptor* %arraydecay to i64, !dbg !9871
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9871
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16, !dbg !9871
  %mul = mul i64 %sub.ptr.div, 16, !dbg !9872
  %add = add i64 %3, %mul, !dbg !9873
  store i64 %add, i64* %d_bus, align 8, !dbg !9874
  %6 = load i32, i32* %z.addr, align 4, !dbg !9875
  %7 = load i32, i32* %extra.addr, align 4, !dbg !9876
  %add1 = add i32 %6, %7, !dbg !9877
  %conv = sext i32 %add1 to i64, !dbg !9878
  %mul2 = mul i64 %conv, 16, !dbg !9879
  %8 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9880
  %used = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %8, i32 0, i32 3, !dbg !9881
  %9 = load i64, i64* %used, align 16, !dbg !9882
  %add3 = add i64 %9, %mul2, !dbg !9882
  store i64 %add3, i64* %used, align 16, !dbg !9882
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9883, !srcloc !9884
  %10 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9885
  %prev = getelementptr inbounds %struct.context, %struct.context* %10, i32 0, i32 9, !dbg !9886
  %11 = load %struct.descriptor*, %struct.descriptor** %prev, align 8, !dbg !9886
  %12 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9887
  %prev_z = getelementptr inbounds %struct.context, %struct.context* %12, i32 0, i32 10, !dbg !9888
  %13 = load i32, i32* %prev_z, align 8, !dbg !9888
  %call = call %struct.descriptor* @find_branch_descriptor(%struct.descriptor* %11, i32 %13) #11, !dbg !9889
  store %struct.descriptor* %call, %struct.descriptor** %d_branch, align 8, !dbg !9890
  %14 = load i64, i64* %d_bus, align 8, !dbg !9891
  %15 = load i32, i32* %z.addr, align 4, !dbg !9891
  %conv4 = sext i32 %15 to i64, !dbg !9891
  %or = or i64 %14, %conv4, !dbg !9891
  %conv5 = trunc i64 %or to i32, !dbg !9891
  %16 = load %struct.descriptor*, %struct.descriptor** %d_branch, align 8, !dbg !9892
  %branch_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %16, i32 0, i32 3, !dbg !9893
  store i32 %conv5, i32* %branch_address, align 8, !dbg !9894
  %17 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9895
  %ohci = getelementptr inbounds %struct.context, %struct.context* %17, i32 0, i32 0, !dbg !9895
  %18 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9895
  %quirks = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %18, i32 0, i32 5, !dbg !9895
  %19 = load i32, i32* %quirks, align 4, !dbg !9895
  %and = and i32 %19, 64, !dbg !9895
  %tobool = icmp ne i32 %and, 0, !dbg !9895
  %lnot = xor i1 %tobool, true, !dbg !9895
  %lnot6 = xor i1 %lnot, true, !dbg !9895
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !9895
  %conv7 = sext i32 %lnot.ext to i64, !dbg !9895
  %tobool8 = icmp ne i64 %conv7, 0, !dbg !9895
  br i1 %tobool8, label %land.lhs.true, label %if.end, !dbg !9897

land.lhs.true:                                    ; preds = %entry
  %20 = load %struct.descriptor*, %struct.descriptor** %d_branch, align 8, !dbg !9898
  %21 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9899
  %prev9 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 9, !dbg !9900
  %22 = load %struct.descriptor*, %struct.descriptor** %prev9, align 8, !dbg !9900
  %cmp = icmp ne %struct.descriptor* %20, %22, !dbg !9901
  br i1 %cmp, label %land.lhs.true11, label %if.end, !dbg !9902

land.lhs.true11:                                  ; preds = %land.lhs.true
  %23 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9903
  %prev12 = getelementptr inbounds %struct.context, %struct.context* %23, i32 0, i32 9, !dbg !9904
  %24 = load %struct.descriptor*, %struct.descriptor** %prev12, align 8, !dbg !9904
  %control = getelementptr inbounds %struct.descriptor, %struct.descriptor* %24, i32 0, i32 1, !dbg !9905
  %25 = load i16, i16* %control, align 2, !dbg !9905
  %conv13 = zext i16 %25 to i32, !dbg !9903
  %and14 = and i32 %conv13, 61440, !dbg !9906
  %cmp15 = icmp eq i32 %and14, 8192, !dbg !9907
  br i1 %cmp15, label %if.then, label %if.end, !dbg !9908

if.then:                                          ; preds = %land.lhs.true11
  %26 = load i64, i64* %d_bus, align 8, !dbg !9909
  %27 = load i32, i32* %z.addr, align 4, !dbg !9909
  %conv17 = sext i32 %27 to i64, !dbg !9909
  %or18 = or i64 %26, %conv17, !dbg !9909
  %conv19 = trunc i64 %or18 to i32, !dbg !9909
  %28 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9911
  %prev20 = getelementptr inbounds %struct.context, %struct.context* %28, i32 0, i32 9, !dbg !9912
  %29 = load %struct.descriptor*, %struct.descriptor** %prev20, align 8, !dbg !9912
  %branch_address21 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %29, i32 0, i32 3, !dbg !9913
  store i32 %conv19, i32* %branch_address21, align 8, !dbg !9914
  br label %if.end, !dbg !9915

if.end:                                           ; preds = %if.then, %land.lhs.true11, %land.lhs.true, %entry
  %30 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !9916
  %31 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9917
  %prev22 = getelementptr inbounds %struct.context, %struct.context* %31, i32 0, i32 9, !dbg !9918
  store %struct.descriptor* %30, %struct.descriptor** %prev22, align 8, !dbg !9919
  %32 = load i32, i32* %z.addr, align 4, !dbg !9920
  %33 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9921
  %prev_z23 = getelementptr inbounds %struct.context, %struct.context* %33, i32 0, i32 10, !dbg !9922
  store i32 %32, i32* %prev_z23, align 8, !dbg !9923
  ret void, !dbg !9924
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @context_run(%struct.context* %ctx, i32 %extra) #2 !dbg !9925 {
entry:
  %ctx.addr = alloca %struct.context*, align 8
  %extra.addr = alloca i32, align 4
  %ohci = alloca %struct.fw_ohci*, align 8
  store %struct.context* %ctx, %struct.context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %ctx.addr, metadata !9928, metadata !DIExpression()), !dbg !9929
  store i32 %extra, i32* %extra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extra.addr, metadata !9930, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !9932, metadata !DIExpression()), !dbg !9933
  %0 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9934
  %ohci1 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0, !dbg !9935
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci1, align 8, !dbg !9935
  store %struct.fw_ohci* %1, %struct.fw_ohci** %ohci, align 8, !dbg !9933
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9936
  %3 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9937
  %regs = getelementptr inbounds %struct.context, %struct.context* %3, i32 0, i32 1, !dbg !9937
  %4 = load i32, i32* %regs, align 8, !dbg !9937
  %add = add i32 %4, 12, !dbg !9937
  %5 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9938
  %last = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 8, !dbg !9938
  %6 = load %struct.descriptor*, %struct.descriptor** %last, align 8, !dbg !9938
  %branch_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %6, i32 0, i32 3, !dbg !9938
  %7 = load i32, i32* %branch_address, align 8, !dbg !9938
  call void @reg_write(%struct.fw_ohci* %2, i32 %add, i32 %7) #11, !dbg !9939
  %8 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9940
  %9 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9941
  %regs2 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 1, !dbg !9941
  %10 = load i32, i32* %regs2, align 8, !dbg !9941
  %add3 = add i32 %10, 4, !dbg !9941
  call void @reg_write(%struct.fw_ohci* %8, i32 %add3, i32 -1) #11, !dbg !9942
  %11 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9943
  %12 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9944
  %regs4 = getelementptr inbounds %struct.context, %struct.context* %12, i32 0, i32 1, !dbg !9944
  %13 = load i32, i32* %regs4, align 8, !dbg !9944
  %14 = load i32, i32* %extra.addr, align 4, !dbg !9945
  %or = or i32 32768, %14, !dbg !9946
  call void @reg_write(%struct.fw_ohci* %11, i32 %13, i32 %or) #11, !dbg !9947
  %15 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9948
  %running = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 4, !dbg !9949
  store i8 1, i8* %running, align 4, !dbg !9950
  %16 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9951
  call void @flush_writes(%struct.fw_ohci* %16) #11, !dbg !9952
  ret void, !dbg !9953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @context_add_buffer(%struct.context* %ctx) #2 !dbg !9954 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.context*, align 8
  %desc = alloca %struct.descriptor_buffer*, align 8
  %bus_addr = alloca i64, align 8
  %offset = alloca i32, align 4
  store %struct.context* %ctx, %struct.context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %ctx.addr, metadata !9957, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.declare(metadata %struct.descriptor_buffer** %desc, metadata !9959, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.declare(metadata i64* %bus_addr, metadata !9961, metadata !DIExpression()), !dbg !9962
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !9963, metadata !DIExpression()), !dbg !9964
  %0 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9965
  %total_allocation = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2, !dbg !9967
  %1 = load i32, i32* %total_allocation, align 4, !dbg !9967
  %cmp = icmp sge i32 %1, 16777216, !dbg !9968
  br i1 %cmp, label %if.then, label %if.end, !dbg !9969

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9970
  br label %return, !dbg !9970

if.end:                                           ; preds = %entry
  %2 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !9971
  %ohci = getelementptr inbounds %struct.context, %struct.context* %2, i32 0, i32 0, !dbg !9972
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !9972
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %3, i32 0, i32 0, !dbg !9973
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !9974
  %4 = load %struct.device*, %struct.device** %device, align 8, !dbg !9974
  %call = call i8* @dma_alloc_coherent(%struct.device* %4, i64 4096, i64* %bus_addr, i32 2592) #11, !dbg !9975
  %5 = bitcast i8* %call to %struct.descriptor_buffer*, !dbg !9975
  store %struct.descriptor_buffer* %5, %struct.descriptor_buffer** %desc, align 8, !dbg !9976
  %6 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9977
  %tobool = icmp ne %struct.descriptor_buffer* %6, null, !dbg !9977
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !9979

if.then1:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !9980
  br label %return, !dbg !9980

if.end2:                                          ; preds = %if.end
  %7 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9981
  %buffer = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %7, i32 0, i32 5, !dbg !9982
  %8 = bitcast [0 x %struct.descriptor]* %buffer to i8*, !dbg !9983
  %9 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9984
  %10 = bitcast %struct.descriptor_buffer* %9 to i8*, !dbg !9985
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !9986
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64, !dbg !9986
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9986
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !9983
  store i32 %conv, i32* %offset, align 4, !dbg !9987
  %11 = load i32, i32* %offset, align 4, !dbg !9988
  %conv3 = sext i32 %11 to i64, !dbg !9988
  %sub = sub i64 4096, %conv3, !dbg !9989
  %sub4 = sub i64 %sub, 16, !dbg !9990
  %12 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9991
  %buffer_size = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %12, i32 0, i32 2, !dbg !9992
  store i64 %sub4, i64* %buffer_size, align 8, !dbg !9993
  %13 = load i64, i64* %bus_addr, align 8, !dbg !9994
  %14 = load i32, i32* %offset, align 4, !dbg !9995
  %conv5 = sext i32 %14 to i64, !dbg !9995
  %add = add i64 %13, %conv5, !dbg !9996
  %15 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !9997
  %buffer_bus = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %15, i32 0, i32 1, !dbg !9998
  store i64 %add, i64* %buffer_bus, align 16, !dbg !9999
  %16 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !10000
  %used = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %16, i32 0, i32 3, !dbg !10001
  store i64 0, i64* %used, align 16, !dbg !10002
  %17 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !10003
  %list = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %17, i32 0, i32 0, !dbg !10004
  %18 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !10005
  %buffer_list = getelementptr inbounds %struct.context, %struct.context* %18, i32 0, i32 6, !dbg !10006
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %buffer_list) #11, !dbg !10007
  %19 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !10008
  %total_allocation6 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 2, !dbg !10009
  %20 = load i32, i32* %total_allocation6, align 4, !dbg !10010
  %conv7 = sext i32 %20 to i64, !dbg !10010
  %add8 = add i64 %conv7, 4096, !dbg !10010
  %conv9 = trunc i64 %add8 to i32, !dbg !10010
  store i32 %conv9, i32* %total_allocation6, align 4, !dbg !10010
  store i32 0, i32* %retval, align 4, !dbg !10011
  br label %return, !dbg !10011

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !10012
  ret i32 %21, !dbg !10012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #2 !dbg !10013 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10016, metadata !DIExpression()), !dbg !10017
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10018, metadata !DIExpression()), !dbg !10019
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10020
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10021
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10022
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10022
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10023
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !10024
  ret void, !dbg !10025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !10026 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10029, metadata !DIExpression()), !dbg !10030
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10031, metadata !DIExpression()), !dbg !10032
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10033, metadata !DIExpression()), !dbg !10034
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10035
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10037
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10038
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !10039
  br i1 %call, label %if.end, label %if.then, !dbg !10040

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !10041

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10042
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10043
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !10044
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !10045
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10046
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10047
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !10048
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !10049
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10050
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10051
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !10052
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !10053
  br label %do.body, !dbg !10054

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !10055

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !10057

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !10055

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10059
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10059
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !10059
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !10059
  br label %do.end7, !dbg !10059

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !10055

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !10061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !10062 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10065, metadata !DIExpression()), !dbg !10066
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10067, metadata !DIExpression()), !dbg !10068
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10069, metadata !DIExpression()), !dbg !10070
  ret i1 true, !dbg !10071
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #1

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #2 !dbg !10072 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10075, metadata !DIExpression()), !dbg !10076
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10077
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10079
  %1 = load i8*, i8** %init_name, align 8, !dbg !10079
  %tobool = icmp ne i8* %1, null, !dbg !10077
  br i1 %tobool, label %if.then, label %if.end, !dbg !10080

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10081
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !10082
  %3 = load i8*, i8** %init_name1, align 8, !dbg !10082
  store i8* %3, i8** %retval, align 8, !dbg !10083
  br label %return, !dbg !10083

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10084
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !10085
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !10086
  store i8* %call, i8** %retval, align 8, !dbg !10087
  br label %return, !dbg !10087

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !10088
  ret i8* %5, !dbg !10088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #2 !dbg !10089 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10092, metadata !DIExpression()), !dbg !10093
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10094, metadata !DIExpression()), !dbg !10095
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !10096, metadata !DIExpression()), !dbg !10097
  ret void, !dbg !10098
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #2 !dbg !10099 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !10103, metadata !DIExpression()), !dbg !10104
  call void @llvm.dbg.declare(metadata i64* %y, metadata !10105, metadata !DIExpression()), !dbg !10106
  %0 = load i64, i64* %x.addr, align 8, !dbg !10107
  %sub = sub i64 %0, -2147483648, !dbg !10108
  store i64 %sub, i64* %y, align 8, !dbg !10106
  %1 = load i64, i64* %y, align 8, !dbg !10109
  %2 = load i64, i64* %x.addr, align 8, !dbg !10110
  %3 = load i64, i64* %y, align 8, !dbg !10111
  %cmp = icmp ugt i64 %2, %3, !dbg !10112
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10113

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !10114
  br label %cond.end, !dbg !10113

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !10115
  %sub1 = sub i64 -2147483648, %5, !dbg !10116
  br label %cond.end, !dbg !10113

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !10113
  %add = add i64 %1, %cond, !dbg !10117
  store i64 %add, i64* %x.addr, align 8, !dbg !10118
  %6 = load i64, i64* %x.addr, align 8, !dbg !10119
  ret i64 %6, !dbg !10120
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #2 !dbg !10121 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10126, metadata !DIExpression()), !dbg !10127
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10128
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !10129
  %1 = load i8*, i8** %name, align 8, !dbg !10129
  ret i8* %1, !dbg !10130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !10131 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10134, metadata !DIExpression()), !dbg !10135
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !10136, metadata !DIExpression()), !dbg !10137
  ret void, !dbg !10138
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.descriptor* @find_branch_descriptor(%struct.descriptor* %d, i32 %z) #2 !dbg !10139 {
entry:
  %retval = alloca %struct.descriptor*, align 8
  %d.addr = alloca %struct.descriptor*, align 8
  %z.addr = alloca i32, align 4
  %branch = alloca i16, align 2
  store %struct.descriptor* %d, %struct.descriptor** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d.addr, metadata !10142, metadata !DIExpression()), !dbg !10143
  store i32 %z, i32* %z.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %z.addr, metadata !10144, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.declare(metadata i16* %branch, metadata !10146, metadata !DIExpression()), !dbg !10147
  %0 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !10148
  %control = getelementptr inbounds %struct.descriptor, %struct.descriptor* %0, i32 0, i32 1, !dbg !10149
  %1 = load i16, i16* %control, align 2, !dbg !10149
  %conv = zext i16 %1 to i32, !dbg !10148
  %and = and i32 %conv, 12, !dbg !10150
  %conv1 = trunc i32 %and to i16, !dbg !10148
  store i16 %conv1, i16* %branch, align 2, !dbg !10151
  %2 = load i32, i32* %z.addr, align 4, !dbg !10152
  %cmp = icmp eq i32 %2, 2, !dbg !10154
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !10155

land.lhs.true:                                    ; preds = %entry
  %3 = load i16, i16* %branch, align 2, !dbg !10156
  %conv3 = zext i16 %3 to i32, !dbg !10156
  %cmp4 = icmp eq i32 %conv3, 12, !dbg !10157
  br i1 %cmp4, label %if.then, label %if.else, !dbg !10158

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !10159
  store %struct.descriptor* %4, %struct.descriptor** %retval, align 8, !dbg !10160
  br label %return, !dbg !10160

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !10161
  %6 = load i32, i32* %z.addr, align 4, !dbg !10162
  %idx.ext = sext i32 %6 to i64, !dbg !10163
  %add.ptr = getelementptr %struct.descriptor, %struct.descriptor* %5, i64 %idx.ext, !dbg !10163
  %add.ptr6 = getelementptr %struct.descriptor, %struct.descriptor* %add.ptr, i64 -1, !dbg !10164
  store %struct.descriptor* %add.ptr6, %struct.descriptor** %retval, align 8, !dbg !10165
  br label %return, !dbg !10165

return:                                           ; preds = %if.else, %if.then
  %7 = load %struct.descriptor*, %struct.descriptor** %retval, align 8, !dbg !10166
  ret %struct.descriptor* %7, !dbg !10166
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_disable(%struct.tasklet_struct* %t) #2 !dbg !10167 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !10168, metadata !DIExpression()), !dbg !10169
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !10170
  call void @tasklet_disable_nosync(%struct.tasklet_struct* %0) #11, !dbg !10171
  br label %do.body, !dbg !10172

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10173

do.end:                                           ; preds = %do.body
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10175, !srcloc !10176
  ret void, !dbg !10177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @log_ar_at_event(%struct.fw_ohci* %ohci, i8 signext %dir, i32 %speed, i32* %header, i32 %evt) #2 !dbg !10178 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %dir.addr = alloca i8, align 1
  %speed.addr = alloca i32, align 4
  %header.addr = alloca i32*, align 8
  %evt.addr = alloca i32, align 4
  %tcode = alloca i32, align 4
  %specific = alloca [12 x i8], align 1
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !10181, metadata !DIExpression()), !dbg !10182
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !10183, metadata !DIExpression()), !dbg !10184
  store i32 %speed, i32* %speed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %speed.addr, metadata !10185, metadata !DIExpression()), !dbg !10186
  store i32* %header, i32** %header.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %header.addr, metadata !10187, metadata !DIExpression()), !dbg !10188
  store i32 %evt, i32* %evt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evt.addr, metadata !10189, metadata !DIExpression()), !dbg !10190
  call void @llvm.dbg.declare(metadata i32* %tcode, metadata !10191, metadata !DIExpression()), !dbg !10192
  %0 = load i32*, i32** %header.addr, align 8, !dbg !10193
  %arrayidx = getelementptr i32, i32* %0, i64 0, !dbg !10193
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10193
  %shr = lshr i32 %1, 4, !dbg !10194
  %and = and i32 %shr, 15, !dbg !10195
  store i32 %and, i32* %tcode, align 4, !dbg !10192
  call void @llvm.dbg.declare(metadata [12 x i8]* %specific, metadata !10196, metadata !DIExpression()), !dbg !10198
  %2 = load i32, i32* @param_debug, align 4, !dbg !10199
  %and1 = and i32 %2, 1, !dbg !10199
  %tobool = icmp ne i32 %and1, 0, !dbg !10199
  %lnot = xor i1 %tobool, true, !dbg !10199
  %lnot2 = xor i1 %lnot, true, !dbg !10199
  %lnot3 = xor i1 %lnot2, true, !dbg !10199
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10199
  %conv = sext i32 %lnot.ext to i64, !dbg !10199
  %tobool4 = icmp ne i64 %conv, 0, !dbg !10199
  br i1 %tobool4, label %if.then, label %if.end, !dbg !10201

if.then:                                          ; preds = %entry
  br label %sw.epilog97, !dbg !10202

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %evt.addr, align 4, !dbg !10203
  %conv5 = sext i32 %3 to i64, !dbg !10203
  %cmp = icmp uge i64 %conv5, 33, !dbg !10203
  %lnot7 = xor i1 %cmp, true, !dbg !10203
  %lnot9 = xor i1 %lnot7, true, !dbg !10203
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !10203
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !10203
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !10203
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !10205

if.then13:                                        ; preds = %if.end
  store i32 31, i32* %evt.addr, align 4, !dbg !10206
  br label %if.end14, !dbg !10207

if.end14:                                         ; preds = %if.then13, %if.end
  %4 = load i32, i32* %evt.addr, align 4, !dbg !10208
  %cmp15 = icmp eq i32 %4, 9, !dbg !10210
  br i1 %cmp15, label %if.then17, label %if.end22, !dbg !10211

if.then17:                                        ; preds = %if.end14
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10212
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %5, i32 0, i32 0, !dbg !10212
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !10212
  %6 = load %struct.device*, %struct.device** %device, align 8, !dbg !10212
  %7 = load i8, i8* %dir.addr, align 1, !dbg !10212
  %conv18 = sext i8 %7 to i32, !dbg !10212
  %8 = load i32*, i32** %header.addr, align 8, !dbg !10212
  %arrayidx19 = getelementptr i32, i32* %8, i64 2, !dbg !10212
  %9 = load i32, i32* %arrayidx19, align 4, !dbg !10212
  %shr20 = lshr i32 %9, 16, !dbg !10212
  %and21 = and i32 %shr20, 255, !dbg !10212
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0), i32 %conv18, i32 %and21) #12, !dbg !10212
  br label %sw.epilog97, !dbg !10214

if.end22:                                         ; preds = %if.end14
  %10 = load i32, i32* %tcode, align 4, !dbg !10215
  switch i32 %10, label %sw.default [
    i32 0, label %sw.bb
    i32 6, label %sw.bb
    i32 8, label %sw.bb
    i32 1, label %sw.bb39
    i32 5, label %sw.bb39
    i32 7, label %sw.bb39
    i32 9, label %sw.bb39
    i32 11, label %sw.bb39
  ], !dbg !10216

sw.bb:                                            ; preds = %if.end22, %if.end22, %if.end22
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %specific, i64 0, i64 0, !dbg !10217
  %11 = load i32*, i32** %header.addr, align 8, !dbg !10219
  %arrayidx23 = getelementptr i32, i32* %11, i64 3, !dbg !10219
  %12 = load i32, i32* %arrayidx23, align 4, !dbg !10219
  %13 = call i1 @llvm.is.constant.i32(i32 %12), !dbg !10219
  br i1 %13, label %cond.true, label %cond.false, !dbg !10219

cond.true:                                        ; preds = %sw.bb
  %14 = load i32*, i32** %header.addr, align 8, !dbg !10219
  %arrayidx24 = getelementptr i32, i32* %14, i64 3, !dbg !10219
  %15 = load i32, i32* %arrayidx24, align 4, !dbg !10219
  %and25 = and i32 %15, 255, !dbg !10219
  %shl = shl i32 %and25, 24, !dbg !10219
  %16 = load i32*, i32** %header.addr, align 8, !dbg !10219
  %arrayidx26 = getelementptr i32, i32* %16, i64 3, !dbg !10219
  %17 = load i32, i32* %arrayidx26, align 4, !dbg !10219
  %and27 = and i32 %17, 65280, !dbg !10219
  %shl28 = shl i32 %and27, 8, !dbg !10219
  %or = or i32 %shl, %shl28, !dbg !10219
  %18 = load i32*, i32** %header.addr, align 8, !dbg !10219
  %arrayidx29 = getelementptr i32, i32* %18, i64 3, !dbg !10219
  %19 = load i32, i32* %arrayidx29, align 4, !dbg !10219
  %and30 = and i32 %19, 16711680, !dbg !10219
  %shr31 = lshr i32 %and30, 8, !dbg !10219
  %or32 = or i32 %or, %shr31, !dbg !10219
  %20 = load i32*, i32** %header.addr, align 8, !dbg !10219
  %arrayidx33 = getelementptr i32, i32* %20, i64 3, !dbg !10219
  %21 = load i32, i32* %arrayidx33, align 4, !dbg !10219
  %and34 = and i32 %21, -16777216, !dbg !10219
  %shr35 = lshr i32 %and34, 24, !dbg !10219
  %or36 = or i32 %or32, %shr35, !dbg !10219
  br label %cond.end, !dbg !10219

cond.false:                                       ; preds = %sw.bb
  %22 = load i32*, i32** %header.addr, align 8, !dbg !10219
  %arrayidx37 = getelementptr i32, i32* %22, i64 3, !dbg !10219
  %23 = load i32, i32* %arrayidx37, align 4, !dbg !10219
  %call = call i32 @__fswab32(i32 %23) #14, !dbg !10219
  br label %cond.end, !dbg !10219

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or36, %cond.true ], [ %call, %cond.false ], !dbg !10219
  %call38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i32 %cond) #11, !dbg !10220
  br label %sw.epilog, !dbg !10221

sw.bb39:                                          ; preds = %if.end22, %if.end22, %if.end22, %if.end22, %if.end22
  %arraydecay40 = getelementptr inbounds [12 x i8], [12 x i8]* %specific, i64 0, i64 0, !dbg !10222
  %24 = load i32*, i32** %header.addr, align 8, !dbg !10223
  %arrayidx41 = getelementptr i32, i32* %24, i64 3, !dbg !10223
  %25 = load i32, i32* %arrayidx41, align 4, !dbg !10223
  %shr42 = lshr i32 %25, 16, !dbg !10224
  %26 = load i32*, i32** %header.addr, align 8, !dbg !10225
  %arrayidx43 = getelementptr i32, i32* %26, i64 3, !dbg !10225
  %27 = load i32, i32* %arrayidx43, align 4, !dbg !10225
  %and44 = and i32 %27, 65535, !dbg !10226
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay40, i64 12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0), i32 %shr42, i32 %and44) #11, !dbg !10227
  br label %sw.epilog, !dbg !10228

sw.default:                                       ; preds = %if.end22
  %arrayidx46 = getelementptr [12 x i8], [12 x i8]* %specific, i64 0, i64 0, !dbg !10229
  store i8 0, i8* %arrayidx46, align 1, !dbg !10230
  br label %sw.epilog, !dbg !10231

sw.epilog:                                        ; preds = %sw.default, %sw.bb39, %cond.end
  %28 = load i32, i32* %tcode, align 4, !dbg !10232
  switch i32 %28, label %sw.default81 [
    i32 10, label %sw.bb47
    i32 14, label %sw.bb54
    i32 0, label %sw.bb62
    i32 1, label %sw.bb62
    i32 4, label %sw.bb62
    i32 5, label %sw.bb62
    i32 9, label %sw.bb62
  ], !dbg !10233

sw.bb47:                                          ; preds = %sw.epilog
  %29 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10234
  %card48 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %29, i32 0, i32 0, !dbg !10234
  %device49 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card48, i32 0, i32 1, !dbg !10234
  %30 = load %struct.device*, %struct.device** %device49, align 8, !dbg !10234
  %31 = load i8, i8* %dir.addr, align 1, !dbg !10234
  %conv50 = sext i8 %31 to i32, !dbg !10234
  %32 = load i32, i32* %evt.addr, align 4, !dbg !10234
  %idxprom = sext i32 %32 to i64, !dbg !10234
  %arrayidx51 = getelementptr [33 x i8*], [33 x i8*]* @evts, i64 0, i64 %idxprom, !dbg !10234
  %33 = load i8*, i8** %arrayidx51, align 8, !dbg !10234
  %34 = load i32, i32* %tcode, align 4, !dbg !10234
  %idxprom52 = sext i32 %34 to i64, !dbg !10234
  %arrayidx53 = getelementptr [16 x i8*], [16 x i8*]* @tcodes, i64 0, i64 %idxprom52, !dbg !10234
  %35 = load i8*, i8** %arrayidx53, align 8, !dbg !10234
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %30, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i32 %conv50, i8* %33, i8* %35) #12, !dbg !10234
  br label %sw.epilog97, !dbg !10236

sw.bb54:                                          ; preds = %sw.epilog
  %36 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10237
  %card55 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %36, i32 0, i32 0, !dbg !10237
  %device56 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card55, i32 0, i32 1, !dbg !10237
  %37 = load %struct.device*, %struct.device** %device56, align 8, !dbg !10237
  %38 = load i8, i8* %dir.addr, align 1, !dbg !10237
  %conv57 = sext i8 %38 to i32, !dbg !10237
  %39 = load i32, i32* %evt.addr, align 4, !dbg !10237
  %idxprom58 = sext i32 %39 to i64, !dbg !10237
  %arrayidx59 = getelementptr [33 x i8*], [33 x i8*]* @evts, i64 0, i64 %idxprom58, !dbg !10237
  %40 = load i8*, i8** %arrayidx59, align 8, !dbg !10237
  %41 = load i32*, i32** %header.addr, align 8, !dbg !10237
  %arrayidx60 = getelementptr i32, i32* %41, i64 1, !dbg !10237
  %42 = load i32, i32* %arrayidx60, align 4, !dbg !10237
  %43 = load i32*, i32** %header.addr, align 8, !dbg !10237
  %arrayidx61 = getelementptr i32, i32* %43, i64 2, !dbg !10237
  %44 = load i32, i32* %arrayidx61, align 4, !dbg !10237
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %37, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i32 %conv57, i8* %40, i32 %42, i32 %44) #12, !dbg !10237
  br label %sw.epilog97, !dbg !10238

sw.bb62:                                          ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog
  %45 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10239
  %card63 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %45, i32 0, i32 0, !dbg !10239
  %device64 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card63, i32 0, i32 1, !dbg !10239
  %46 = load %struct.device*, %struct.device** %device64, align 8, !dbg !10239
  %47 = load i8, i8* %dir.addr, align 1, !dbg !10239
  %conv65 = sext i8 %47 to i32, !dbg !10239
  %48 = load i32, i32* %speed.addr, align 4, !dbg !10239
  %49 = load i32*, i32** %header.addr, align 8, !dbg !10239
  %arrayidx66 = getelementptr i32, i32* %49, i64 0, !dbg !10239
  %50 = load i32, i32* %arrayidx66, align 4, !dbg !10239
  %shr67 = lshr i32 %50, 10, !dbg !10239
  %and68 = and i32 %shr67, 63, !dbg !10239
  %51 = load i32*, i32** %header.addr, align 8, !dbg !10239
  %arrayidx69 = getelementptr i32, i32* %51, i64 1, !dbg !10239
  %52 = load i32, i32* %arrayidx69, align 4, !dbg !10239
  %shr70 = lshr i32 %52, 16, !dbg !10239
  %53 = load i32*, i32** %header.addr, align 8, !dbg !10239
  %arrayidx71 = getelementptr i32, i32* %53, i64 0, !dbg !10239
  %54 = load i32, i32* %arrayidx71, align 4, !dbg !10239
  %shr72 = lshr i32 %54, 16, !dbg !10239
  %55 = load i32, i32* %evt.addr, align 4, !dbg !10239
  %idxprom73 = sext i32 %55 to i64, !dbg !10239
  %arrayidx74 = getelementptr [33 x i8*], [33 x i8*]* @evts, i64 0, i64 %idxprom73, !dbg !10239
  %56 = load i8*, i8** %arrayidx74, align 8, !dbg !10239
  %57 = load i32, i32* %tcode, align 4, !dbg !10239
  %idxprom75 = sext i32 %57 to i64, !dbg !10239
  %arrayidx76 = getelementptr [16 x i8*], [16 x i8*]* @tcodes, i64 0, i64 %idxprom75, !dbg !10239
  %58 = load i8*, i8** %arrayidx76, align 8, !dbg !10239
  %59 = load i32*, i32** %header.addr, align 8, !dbg !10239
  %arrayidx77 = getelementptr i32, i32* %59, i64 1, !dbg !10239
  %60 = load i32, i32* %arrayidx77, align 4, !dbg !10239
  %and78 = and i32 %60, 65535, !dbg !10239
  %61 = load i32*, i32** %header.addr, align 8, !dbg !10239
  %arrayidx79 = getelementptr i32, i32* %61, i64 2, !dbg !10239
  %62 = load i32, i32* %arrayidx79, align 4, !dbg !10239
  %arraydecay80 = getelementptr inbounds [12 x i8], [12 x i8]* %specific, i64 0, i64 0, !dbg !10239
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %46, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.25, i64 0, i64 0), i32 %conv65, i32 %48, i32 %and68, i32 %shr70, i32 %shr72, i8* %56, i8* %58, i32 %and78, i32 %62, i8* %arraydecay80) #12, !dbg !10239
  br label %sw.epilog97, !dbg !10240

sw.default81:                                     ; preds = %sw.epilog
  %63 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10241
  %card82 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %63, i32 0, i32 0, !dbg !10241
  %device83 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card82, i32 0, i32 1, !dbg !10241
  %64 = load %struct.device*, %struct.device** %device83, align 8, !dbg !10241
  %65 = load i8, i8* %dir.addr, align 1, !dbg !10241
  %conv84 = sext i8 %65 to i32, !dbg !10241
  %66 = load i32, i32* %speed.addr, align 4, !dbg !10241
  %67 = load i32*, i32** %header.addr, align 8, !dbg !10241
  %arrayidx85 = getelementptr i32, i32* %67, i64 0, !dbg !10241
  %68 = load i32, i32* %arrayidx85, align 4, !dbg !10241
  %shr86 = lshr i32 %68, 10, !dbg !10241
  %and87 = and i32 %shr86, 63, !dbg !10241
  %69 = load i32*, i32** %header.addr, align 8, !dbg !10241
  %arrayidx88 = getelementptr i32, i32* %69, i64 1, !dbg !10241
  %70 = load i32, i32* %arrayidx88, align 4, !dbg !10241
  %shr89 = lshr i32 %70, 16, !dbg !10241
  %71 = load i32*, i32** %header.addr, align 8, !dbg !10241
  %arrayidx90 = getelementptr i32, i32* %71, i64 0, !dbg !10241
  %72 = load i32, i32* %arrayidx90, align 4, !dbg !10241
  %shr91 = lshr i32 %72, 16, !dbg !10241
  %73 = load i32, i32* %evt.addr, align 4, !dbg !10241
  %idxprom92 = sext i32 %73 to i64, !dbg !10241
  %arrayidx93 = getelementptr [33 x i8*], [33 x i8*]* @evts, i64 0, i64 %idxprom92, !dbg !10241
  %74 = load i8*, i8** %arrayidx93, align 8, !dbg !10241
  %75 = load i32, i32* %tcode, align 4, !dbg !10241
  %idxprom94 = sext i32 %75 to i64, !dbg !10241
  %arrayidx95 = getelementptr [16 x i8*], [16 x i8*]* @tcodes, i64 0, i64 %idxprom94, !dbg !10241
  %76 = load i8*, i8** %arrayidx95, align 8, !dbg !10241
  %arraydecay96 = getelementptr inbounds [12 x i8], [12 x i8]* %specific, i64 0, i64 0, !dbg !10241
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %64, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i32 %conv84, i32 %66, i32 %and87, i32 %shr89, i32 %shr91, i8* %74, i8* %76, i8* %arraydecay96) #12, !dbg !10241
  br label %sw.epilog97, !dbg !10242

sw.epilog97:                                      ; preds = %if.then, %if.then17, %sw.default81, %sw.bb62, %sw.bb54, %sw.bb47
  ret void, !dbg !10243
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_enable(%struct.tasklet_struct* %t) #2 !dbg !10244 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !10245, metadata !DIExpression()), !dbg !10251
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !10256, metadata !DIExpression()), !dbg !10264
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10266, metadata !DIExpression()), !dbg !10267
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10268, metadata !DIExpression()), !dbg !10269
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !10270, metadata !DIExpression()), !dbg !10271
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10272, !srcloc !10273
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !10274
  %count = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 2, !dbg !10275
  store %struct.atomic_t* %count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10276
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !10276
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10277
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !10278
  %conv.i.i = trunc i64 %4 to i32, !dbg !10278
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #15, !dbg !10279
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10280
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !10280
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #15, !dbg !10280
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10281
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10282
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !10283
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #10, !dbg !10284, !srcloc !10285
  ret void, !dbg !10286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_disable_nosync(%struct.tasklet_struct* %t) #2 !dbg !10287 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !10288, metadata !DIExpression()), !dbg !10290
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !10256, metadata !DIExpression()), !dbg !10294
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10266, metadata !DIExpression()), !dbg !10296
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10297, metadata !DIExpression()), !dbg !10298
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !10299, metadata !DIExpression()), !dbg !10300
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !10301
  %count = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 2, !dbg !10302
  store %struct.atomic_t* %count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10303
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !10303
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10304
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !10305
  %conv.i.i = trunc i64 %4 to i32, !dbg !10305
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #15, !dbg !10306
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10307
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !10307
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #15, !dbg !10307
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10308
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10309
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !10310
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #10, !dbg !10311, !srcloc !10312
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10313, !srcloc !10314
  ret void, !dbg !10315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !10316 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10320, metadata !DIExpression()), !dbg !10321
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10322, metadata !DIExpression()), !dbg !10323
  ret i1 true, !dbg !10324
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !10325 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10329, metadata !DIExpression()), !dbg !10330
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10331, metadata !DIExpression()), !dbg !10332
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  ret void, !dbg !10335
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_cycle_time(%struct.fw_ohci* %ohci) #2 !dbg !10336 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %c0 = alloca i32, align 4
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %t0 = alloca i32, align 4
  %t1 = alloca i32, align 4
  %t2 = alloca i32, align 4
  %diff01 = alloca i32, align 4
  %diff12 = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !10339, metadata !DIExpression()), !dbg !10340
  call void @llvm.dbg.declare(metadata i32* %c0, metadata !10341, metadata !DIExpression()), !dbg !10342
  call void @llvm.dbg.declare(metadata i32* %c1, metadata !10343, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.declare(metadata i32* %c2, metadata !10345, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.declare(metadata i32* %t0, metadata !10347, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !10349, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.declare(metadata i32* %t2, metadata !10351, metadata !DIExpression()), !dbg !10352
  call void @llvm.dbg.declare(metadata i32* %diff01, metadata !10353, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.declare(metadata i32* %diff12, metadata !10355, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10357, metadata !DIExpression()), !dbg !10358
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10359
  %call = call i32 @reg_read(%struct.fw_ohci* %0, i32 240) #11, !dbg !10360
  store i32 %call, i32* %c2, align 4, !dbg !10361
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10362
  %quirks = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 5, !dbg !10364
  %2 = load i32, i32* %quirks, align 4, !dbg !10364
  %and = and i32 %2, 1, !dbg !10365
  %tobool = icmp ne i32 %and, 0, !dbg !10365
  br i1 %tobool, label %if.then, label %if.end, !dbg !10366

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !10367
  %3 = load i32, i32* %c2, align 4, !dbg !10369
  store i32 %3, i32* %c1, align 4, !dbg !10370
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10371
  %call1 = call i32 @reg_read(%struct.fw_ohci* %4, i32 240) #11, !dbg !10372
  store i32 %call1, i32* %c2, align 4, !dbg !10373
  br label %do.body, !dbg !10374

do.body:                                          ; preds = %land.end, %if.then
  %5 = load i32, i32* %c1, align 4, !dbg !10375
  store i32 %5, i32* %c0, align 4, !dbg !10377
  %6 = load i32, i32* %c2, align 4, !dbg !10378
  store i32 %6, i32* %c1, align 4, !dbg !10379
  %7 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10380
  %call2 = call i32 @reg_read(%struct.fw_ohci* %7, i32 240) #11, !dbg !10381
  store i32 %call2, i32* %c2, align 4, !dbg !10382
  %8 = load i32, i32* %c0, align 4, !dbg !10383
  %call3 = call i32 @cycle_timer_ticks(i32 %8) #11, !dbg !10384
  store i32 %call3, i32* %t0, align 4, !dbg !10385
  %9 = load i32, i32* %c1, align 4, !dbg !10386
  %call4 = call i32 @cycle_timer_ticks(i32 %9) #11, !dbg !10387
  store i32 %call4, i32* %t1, align 4, !dbg !10388
  %10 = load i32, i32* %c2, align 4, !dbg !10389
  %call5 = call i32 @cycle_timer_ticks(i32 %10) #11, !dbg !10390
  store i32 %call5, i32* %t2, align 4, !dbg !10391
  %11 = load i32, i32* %t1, align 4, !dbg !10392
  %12 = load i32, i32* %t0, align 4, !dbg !10393
  %sub = sub i32 %11, %12, !dbg !10394
  store i32 %sub, i32* %diff01, align 4, !dbg !10395
  %13 = load i32, i32* %t2, align 4, !dbg !10396
  %14 = load i32, i32* %t1, align 4, !dbg !10397
  %sub6 = sub i32 %13, %14, !dbg !10398
  store i32 %sub6, i32* %diff12, align 4, !dbg !10399
  br label %do.cond, !dbg !10400

do.cond:                                          ; preds = %do.body
  %15 = load i32, i32* %diff01, align 4, !dbg !10401
  %cmp = icmp sle i32 %15, 0, !dbg !10402
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !10403

lor.lhs.false:                                    ; preds = %do.cond
  %16 = load i32, i32* %diff12, align 4, !dbg !10404
  %cmp7 = icmp sle i32 %16, 0, !dbg !10405
  br i1 %cmp7, label %land.rhs, label %lor.lhs.false8, !dbg !10406

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %17 = load i32, i32* %diff01, align 4, !dbg !10407
  %18 = load i32, i32* %diff12, align 4, !dbg !10408
  %div = sdiv i32 %17, %18, !dbg !10409
  %cmp9 = icmp sge i32 %div, 2, !dbg !10410
  br i1 %cmp9, label %land.rhs, label %lor.lhs.false10, !dbg !10411

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %19 = load i32, i32* %diff12, align 4, !dbg !10412
  %20 = load i32, i32* %diff01, align 4, !dbg !10413
  %div11 = sdiv i32 %19, %20, !dbg !10414
  %cmp12 = icmp sge i32 %div11, 2, !dbg !10415
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !10416

land.rhs:                                         ; preds = %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false, %do.cond
  %21 = load i32, i32* %i, align 4, !dbg !10417
  %inc = add i32 %21, 1, !dbg !10417
  store i32 %inc, i32* %i, align 4, !dbg !10417
  %cmp13 = icmp slt i32 %21, 20, !dbg !10418
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false10
  %22 = phi i1 [ false, %lor.lhs.false10 ], [ %cmp13, %land.rhs ], !dbg !10419
  br i1 %22, label %do.body, label %do.end, !dbg !10400, !llvm.loop !10420

do.end:                                           ; preds = %land.end
  br label %if.end, !dbg !10422

if.end:                                           ; preds = %do.end, %entry
  %23 = load i32, i32* %c2, align 4, !dbg !10423
  ret i32 %23, !dbg !10424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @update_bus_time(%struct.fw_ohci* %ohci) #2 !dbg !10425 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %cycle_time_seconds = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !10426, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.declare(metadata i32* %cycle_time_seconds, metadata !10428, metadata !DIExpression()), !dbg !10429
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10430
  %call = call i32 @get_cycle_time(%struct.fw_ohci* %0) #11, !dbg !10431
  %shr = lshr i32 %call, 25, !dbg !10432
  store i32 %shr, i32* %cycle_time_seconds, align 4, !dbg !10429
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10433
  %bus_time_running = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 8, !dbg !10433
  %2 = load i8, i8* %bus_time_running, align 8, !dbg !10433
  %tobool = trunc i8 %2 to i1, !dbg !10433
  %lnot = xor i1 %tobool, true, !dbg !10433
  %lnot1 = xor i1 %lnot, true, !dbg !10433
  %lnot2 = xor i1 %lnot1, true, !dbg !10433
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10433
  %conv = sext i32 %lnot.ext to i64, !dbg !10433
  %tobool3 = icmp ne i64 %conv, 0, !dbg !10433
  br i1 %tobool3, label %if.then, label %if.end, !dbg !10435

if.then:                                          ; preds = %entry
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10436
  call void @reg_write(%struct.fw_ohci* %3, i32 136, i32 2097152) #11, !dbg !10438
  %call4 = call i64 @ktime_get_seconds() #11, !dbg !10439
  %and = and i64 %call4, 4294967295, !dbg !10439
  %conv5 = trunc i64 %and to i32, !dbg !10439
  %and6 = and i32 %conv5, -128, !dbg !10440
  %4 = load i32, i32* %cycle_time_seconds, align 4, !dbg !10441
  %and7 = and i32 %4, 64, !dbg !10442
  %or = or i32 %and6, %and7, !dbg !10443
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10444
  %bus_time = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %5, i32 0, i32 7, !dbg !10445
  store i32 %or, i32* %bus_time, align 4, !dbg !10446
  %6 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10447
  %bus_time_running8 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %6, i32 0, i32 8, !dbg !10448
  store i8 1, i8* %bus_time_running8, align 8, !dbg !10449
  br label %if.end, !dbg !10450

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10451
  %bus_time9 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %7, i32 0, i32 7, !dbg !10453
  %8 = load i32, i32* %bus_time9, align 4, !dbg !10453
  %and10 = and i32 %8, 64, !dbg !10454
  %9 = load i32, i32* %cycle_time_seconds, align 4, !dbg !10455
  %and11 = and i32 %9, 64, !dbg !10456
  %cmp = icmp ne i32 %and10, %and11, !dbg !10457
  br i1 %cmp, label %if.then13, label %if.end15, !dbg !10458

if.then13:                                        ; preds = %if.end
  %10 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10459
  %bus_time14 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %10, i32 0, i32 7, !dbg !10460
  %11 = load i32, i32* %bus_time14, align 4, !dbg !10461
  %add = add i32 %11, 64, !dbg !10461
  store i32 %add, i32* %bus_time14, align 4, !dbg !10461
  br label %if.end15, !dbg !10459

if.end15:                                         ; preds = %if.then13, %if.end
  %12 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10462
  %bus_time16 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %12, i32 0, i32 7, !dbg !10463
  %13 = load i32, i32* %bus_time16, align 4, !dbg !10463
  %14 = load i32, i32* %cycle_time_seconds, align 4, !dbg !10464
  %or17 = or i32 %13, %14, !dbg !10465
  ret i32 %or17, !dbg !10466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cycle_timer_ticks(i32 %cycle_timer) #2 !dbg !10467 {
entry:
  %cycle_timer.addr = alloca i32, align 4
  %ticks = alloca i32, align 4
  store i32 %cycle_timer, i32* %cycle_timer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cycle_timer.addr, metadata !10470, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.declare(metadata i32* %ticks, metadata !10472, metadata !DIExpression()), !dbg !10473
  %0 = load i32, i32* %cycle_timer.addr, align 4, !dbg !10474
  %and = and i32 %0, 4095, !dbg !10475
  store i32 %and, i32* %ticks, align 4, !dbg !10476
  %1 = load i32, i32* %cycle_timer.addr, align 4, !dbg !10477
  %shr = lshr i32 %1, 12, !dbg !10478
  %and1 = and i32 %shr, 8191, !dbg !10479
  %mul = mul i32 3072, %and1, !dbg !10480
  %2 = load i32, i32* %ticks, align 4, !dbg !10481
  %add = add i32 %2, %mul, !dbg !10481
  store i32 %add, i32* %ticks, align 4, !dbg !10481
  %3 = load i32, i32* %cycle_timer.addr, align 4, !dbg !10482
  %shr2 = lshr i32 %3, 25, !dbg !10483
  %mul3 = mul i32 24576000, %shr2, !dbg !10484
  %4 = load i32, i32* %ticks, align 4, !dbg !10485
  %add4 = add i32 %4, %mul3, !dbg !10485
  store i32 %add4, i32* %ticks, align 4, !dbg !10485
  %5 = load i32, i32* %ticks, align 4, !dbg !10486
  ret i32 %5, !dbg !10487
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get_seconds() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @handle_it_packet(%struct.context* %context, %struct.descriptor* %d, %struct.descriptor* %last) #2 !dbg !10488 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca %struct.context*, align 8
  %d.addr = alloca %struct.descriptor*, align 8
  %last.addr = alloca %struct.descriptor*, align 8
  %ctx = alloca %struct.iso_context*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iso_context*, align 8
  %pd = alloca %struct.descriptor*, align 8
  %ctx_hdr = alloca i32*, align 8
  store %struct.context* %context, %struct.context** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %context.addr, metadata !10489, metadata !DIExpression()), !dbg !10490
  store %struct.descriptor* %d, %struct.descriptor** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d.addr, metadata !10491, metadata !DIExpression()), !dbg !10492
  store %struct.descriptor* %last, %struct.descriptor** %last.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.descriptor** %last.addr, metadata !10493, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx, metadata !10495, metadata !DIExpression()), !dbg !10496
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10497, metadata !DIExpression()), !dbg !10499
  %0 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !10499
  %1 = bitcast %struct.context* %0 to i8*, !dbg !10499
  store i8* %1, i8** %__mptr, align 8, !dbg !10499
  br label %do.body, !dbg !10499

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10500

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10499
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !10499
  %3 = bitcast i8* %add.ptr to %struct.iso_context*, !dbg !10499
  store %struct.iso_context* %3, %struct.iso_context** %tmp, align 8, !dbg !10500
  %4 = load %struct.iso_context*, %struct.iso_context** %tmp, align 8, !dbg !10499
  store %struct.iso_context* %4, %struct.iso_context** %ctx, align 8, !dbg !10496
  call void @llvm.dbg.declare(metadata %struct.descriptor** %pd, metadata !10502, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.declare(metadata i32** %ctx_hdr, metadata !10504, metadata !DIExpression()), !dbg !10505
  %5 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !10506
  store %struct.descriptor* %5, %struct.descriptor** %pd, align 8, !dbg !10508
  br label %for.cond, !dbg !10509

for.cond:                                         ; preds = %for.inc, %do.end
  %6 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10510
  %7 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10512
  %cmp = icmp ule %struct.descriptor* %6, %7, !dbg !10513
  br i1 %cmp, label %for.body, label %for.end, !dbg !10514

for.body:                                         ; preds = %for.cond
  %8 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10515
  %transfer_status = getelementptr inbounds %struct.descriptor, %struct.descriptor* %8, i32 0, i32 5, !dbg !10517
  %9 = load i16, i16* %transfer_status, align 2, !dbg !10517
  %tobool = icmp ne i16 %9, 0, !dbg !10515
  br i1 %tobool, label %if.then, label %if.end, !dbg !10518

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10519

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10517

for.inc:                                          ; preds = %if.end
  %10 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10520
  %incdec.ptr = getelementptr %struct.descriptor, %struct.descriptor* %10, i32 1, !dbg !10520
  store %struct.descriptor* %incdec.ptr, %struct.descriptor** %pd, align 8, !dbg !10520
  br label %for.cond, !dbg !10521, !llvm.loop !10522

for.end:                                          ; preds = %if.then, %for.cond
  %11 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10524
  %12 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10526
  %cmp1 = icmp ugt %struct.descriptor* %11, %12, !dbg !10527
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10528

if.then2:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !10529
  br label %return, !dbg !10529

if.end3:                                          ; preds = %for.end
  %13 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !10530
  %14 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !10531
  call void @sync_it_packet_for_cpu(%struct.context* %13, %struct.descriptor* %14) #11, !dbg !10532
  %15 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10533
  %header_length = getelementptr inbounds %struct.iso_context, %struct.iso_context* %15, i32 0, i32 3, !dbg !10535
  %16 = load i64, i64* %header_length, align 8, !dbg !10535
  %add = add i64 %16, 4, !dbg !10536
  %cmp4 = icmp ugt i64 %add, 4096, !dbg !10537
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !10538

if.then5:                                         ; preds = %if.end3
  %17 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10539
  %base = getelementptr inbounds %struct.iso_context, %struct.iso_context* %17, i32 0, i32 0, !dbg !10542
  %drop_overflow_headers = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base, i32 0, i32 4, !dbg !10543
  %18 = load i8, i8* %drop_overflow_headers, align 4, !dbg !10543
  %tobool6 = trunc i8 %18 to i1, !dbg !10543
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !10544

if.then7:                                         ; preds = %if.then5
  store i32 1, i32* %retval, align 4, !dbg !10545
  br label %return, !dbg !10545

if.end8:                                          ; preds = %if.then5
  %19 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10546
  call void @flush_iso_completions(%struct.iso_context* %19) #11, !dbg !10547
  br label %if.end9, !dbg !10548

if.end9:                                          ; preds = %if.end8, %if.end3
  %20 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10549
  %header = getelementptr inbounds %struct.iso_context, %struct.iso_context* %20, i32 0, i32 2, !dbg !10550
  %21 = load i8*, i8** %header, align 8, !dbg !10550
  %22 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10551
  %header_length10 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %22, i32 0, i32 3, !dbg !10552
  %23 = load i64, i64* %header_length10, align 8, !dbg !10552
  %add.ptr11 = getelementptr i8, i8* %21, i64 %23, !dbg !10553
  %24 = bitcast i8* %add.ptr11 to i32*, !dbg !10549
  store i32* %24, i32** %ctx_hdr, align 8, !dbg !10554
  %25 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10555
  %res_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %25, i32 0, i32 4, !dbg !10555
  %26 = load i16, i16* %res_count, align 4, !dbg !10555
  %27 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10556
  %last_timestamp = getelementptr inbounds %struct.iso_context, %struct.iso_context* %27, i32 0, i32 7, !dbg !10557
  store i16 %26, i16* %last_timestamp, align 2, !dbg !10558
  %28 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %transfer_status12 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %28, i32 0, i32 5, !dbg !10559
  %29 = load i16, i16* %transfer_status12, align 2, !dbg !10559
  %conv = zext i16 %29 to i32, !dbg !10559
  %shl = shl i32 %conv, 16, !dbg !10559
  %30 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %res_count13 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %30, i32 0, i32 4, !dbg !10559
  %31 = load i16, i16* %res_count13, align 4, !dbg !10559
  %conv14 = zext i16 %31 to i32, !dbg !10559
  %or = or i32 %shl, %conv14, !dbg !10559
  %32 = call i1 @llvm.is.constant.i32(i32 %or), !dbg !10559
  br i1 %32, label %cond.true, label %cond.false, !dbg !10559

cond.true:                                        ; preds = %if.end9
  %33 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %transfer_status15 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %33, i32 0, i32 5, !dbg !10559
  %34 = load i16, i16* %transfer_status15, align 2, !dbg !10559
  %conv16 = zext i16 %34 to i32, !dbg !10559
  %shl17 = shl i32 %conv16, 16, !dbg !10559
  %35 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %res_count18 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %35, i32 0, i32 4, !dbg !10559
  %36 = load i16, i16* %res_count18, align 4, !dbg !10559
  %conv19 = zext i16 %36 to i32, !dbg !10559
  %or20 = or i32 %shl17, %conv19, !dbg !10559
  %and = and i32 %or20, 255, !dbg !10559
  %shl21 = shl i32 %and, 24, !dbg !10559
  %37 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %transfer_status22 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %37, i32 0, i32 5, !dbg !10559
  %38 = load i16, i16* %transfer_status22, align 2, !dbg !10559
  %conv23 = zext i16 %38 to i32, !dbg !10559
  %shl24 = shl i32 %conv23, 16, !dbg !10559
  %39 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %res_count25 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %39, i32 0, i32 4, !dbg !10559
  %40 = load i16, i16* %res_count25, align 4, !dbg !10559
  %conv26 = zext i16 %40 to i32, !dbg !10559
  %or27 = or i32 %shl24, %conv26, !dbg !10559
  %and28 = and i32 %or27, 65280, !dbg !10559
  %shl29 = shl i32 %and28, 8, !dbg !10559
  %or30 = or i32 %shl21, %shl29, !dbg !10559
  %41 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %transfer_status31 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %41, i32 0, i32 5, !dbg !10559
  %42 = load i16, i16* %transfer_status31, align 2, !dbg !10559
  %conv32 = zext i16 %42 to i32, !dbg !10559
  %shl33 = shl i32 %conv32, 16, !dbg !10559
  %43 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %res_count34 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %43, i32 0, i32 4, !dbg !10559
  %44 = load i16, i16* %res_count34, align 4, !dbg !10559
  %conv35 = zext i16 %44 to i32, !dbg !10559
  %or36 = or i32 %shl33, %conv35, !dbg !10559
  %and37 = and i32 %or36, 16711680, !dbg !10559
  %shr = lshr i32 %and37, 8, !dbg !10559
  %or38 = or i32 %or30, %shr, !dbg !10559
  %45 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %transfer_status39 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %45, i32 0, i32 5, !dbg !10559
  %46 = load i16, i16* %transfer_status39, align 2, !dbg !10559
  %conv40 = zext i16 %46 to i32, !dbg !10559
  %shl41 = shl i32 %conv40, 16, !dbg !10559
  %47 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %res_count42 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %47, i32 0, i32 4, !dbg !10559
  %48 = load i16, i16* %res_count42, align 4, !dbg !10559
  %conv43 = zext i16 %48 to i32, !dbg !10559
  %or44 = or i32 %shl41, %conv43, !dbg !10559
  %and45 = and i32 %or44, -16777216, !dbg !10559
  %shr46 = lshr i32 %and45, 24, !dbg !10559
  %or47 = or i32 %or38, %shr46, !dbg !10559
  br label %cond.end, !dbg !10559

cond.false:                                       ; preds = %if.end9
  %49 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %transfer_status48 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %49, i32 0, i32 5, !dbg !10559
  %50 = load i16, i16* %transfer_status48, align 2, !dbg !10559
  %conv49 = zext i16 %50 to i32, !dbg !10559
  %shl50 = shl i32 %conv49, 16, !dbg !10559
  %51 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10559
  %res_count51 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %51, i32 0, i32 4, !dbg !10559
  %52 = load i16, i16* %res_count51, align 4, !dbg !10559
  %conv52 = zext i16 %52 to i32, !dbg !10559
  %or53 = or i32 %shl50, %conv52, !dbg !10559
  %call = call i32 @__fswab32(i32 %or53) #14, !dbg !10559
  br label %cond.end, !dbg !10559

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or47, %cond.true ], [ %call, %cond.false ], !dbg !10559
  %53 = load i32*, i32** %ctx_hdr, align 8, !dbg !10560
  store i32 %cond, i32* %53, align 4, !dbg !10561
  %54 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10562
  %header_length54 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %54, i32 0, i32 3, !dbg !10563
  %55 = load i64, i64* %header_length54, align 8, !dbg !10564
  %add55 = add i64 %55, 4, !dbg !10564
  store i64 %add55, i64* %header_length54, align 8, !dbg !10564
  %56 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10565
  %control = getelementptr inbounds %struct.descriptor, %struct.descriptor* %56, i32 0, i32 1, !dbg !10567
  %57 = load i16, i16* %control, align 2, !dbg !10567
  %conv56 = zext i16 %57 to i32, !dbg !10565
  %and57 = and i32 %conv56, 48, !dbg !10568
  %tobool58 = icmp ne i32 %and57, 0, !dbg !10568
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !10569

if.then59:                                        ; preds = %cond.end
  %58 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10570
  call void @flush_iso_completions(%struct.iso_context* %58) #11, !dbg !10571
  br label %if.end60, !dbg !10571

if.end60:                                         ; preds = %if.then59, %cond.end
  store i32 1, i32* %retval, align 4, !dbg !10572
  br label %return, !dbg !10572

return:                                           ; preds = %if.end60, %if.then7, %if.then2
  %59 = load i32, i32* %retval, align 4, !dbg !10573
  ret i32 %59, !dbg !10573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @handle_ir_packet_per_buffer(%struct.context* %context, %struct.descriptor* %d, %struct.descriptor* %last) #2 !dbg !10574 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca %struct.context*, align 8
  %d.addr = alloca %struct.descriptor*, align 8
  %last.addr = alloca %struct.descriptor*, align 8
  %ctx = alloca %struct.iso_context*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iso_context*, align 8
  %pd = alloca %struct.descriptor*, align 8
  %buffer_dma = alloca i32, align 4
  store %struct.context* %context, %struct.context** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %context.addr, metadata !10575, metadata !DIExpression()), !dbg !10576
  store %struct.descriptor* %d, %struct.descriptor** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d.addr, metadata !10577, metadata !DIExpression()), !dbg !10578
  store %struct.descriptor* %last, %struct.descriptor** %last.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.descriptor** %last.addr, metadata !10579, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx, metadata !10581, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10583, metadata !DIExpression()), !dbg !10585
  %0 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !10585
  %1 = bitcast %struct.context* %0 to i8*, !dbg !10585
  store i8* %1, i8** %__mptr, align 8, !dbg !10585
  br label %do.body, !dbg !10585

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10586

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10585
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !10585
  %3 = bitcast i8* %add.ptr to %struct.iso_context*, !dbg !10585
  store %struct.iso_context* %3, %struct.iso_context** %tmp, align 8, !dbg !10586
  %4 = load %struct.iso_context*, %struct.iso_context** %tmp, align 8, !dbg !10585
  store %struct.iso_context* %4, %struct.iso_context** %ctx, align 8, !dbg !10582
  call void @llvm.dbg.declare(metadata %struct.descriptor** %pd, metadata !10588, metadata !DIExpression()), !dbg !10589
  call void @llvm.dbg.declare(metadata i32* %buffer_dma, metadata !10590, metadata !DIExpression()), !dbg !10591
  %5 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !10592
  store %struct.descriptor* %5, %struct.descriptor** %pd, align 8, !dbg !10594
  br label %for.cond, !dbg !10595

for.cond:                                         ; preds = %for.inc, %do.end
  %6 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10596
  %7 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10598
  %cmp = icmp ule %struct.descriptor* %6, %7, !dbg !10599
  br i1 %cmp, label %for.body, label %for.end, !dbg !10600

for.body:                                         ; preds = %for.cond
  %8 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10601
  %transfer_status = getelementptr inbounds %struct.descriptor, %struct.descriptor* %8, i32 0, i32 5, !dbg !10603
  %9 = load i16, i16* %transfer_status, align 2, !dbg !10603
  %tobool = icmp ne i16 %9, 0, !dbg !10601
  br i1 %tobool, label %if.then, label %if.end, !dbg !10604

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10605

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10603

for.inc:                                          ; preds = %if.end
  %10 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10606
  %incdec.ptr = getelementptr %struct.descriptor, %struct.descriptor* %10, i32 1, !dbg !10606
  store %struct.descriptor* %incdec.ptr, %struct.descriptor** %pd, align 8, !dbg !10606
  br label %for.cond, !dbg !10607, !llvm.loop !10608

for.end:                                          ; preds = %if.then, %for.cond
  %11 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !10610
  %12 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10612
  %cmp1 = icmp ugt %struct.descriptor* %11, %12, !dbg !10613
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10614

if.then2:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !10615
  br label %return, !dbg !10615

if.end3:                                          ; preds = %for.end
  br label %while.cond, !dbg !10616

while.cond:                                       ; preds = %while.body, %if.end3
  %13 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !10617
  %control = getelementptr inbounds %struct.descriptor, %struct.descriptor* %13, i32 0, i32 1, !dbg !10618
  %14 = load i16, i16* %control, align 2, !dbg !10618
  %conv = zext i16 %14 to i32, !dbg !10617
  %and = and i32 %conv, 12, !dbg !10619
  %tobool4 = icmp ne i32 %and, 0, !dbg !10620
  %lnot = xor i1 %tobool4, true, !dbg !10620
  br i1 %lnot, label %while.body, label %while.end, !dbg !10616

while.body:                                       ; preds = %while.cond
  %15 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !10621
  %incdec.ptr5 = getelementptr %struct.descriptor, %struct.descriptor* %15, i32 1, !dbg !10621
  store %struct.descriptor* %incdec.ptr5, %struct.descriptor** %d.addr, align 8, !dbg !10621
  %16 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !10623
  %data_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %16, i32 0, i32 2, !dbg !10623
  %17 = load i32, i32* %data_address, align 4, !dbg !10623
  store i32 %17, i32* %buffer_dma, align 4, !dbg !10624
  %18 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !10625
  %ohci = getelementptr inbounds %struct.context, %struct.context* %18, i32 0, i32 0, !dbg !10626
  %19 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !10626
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %19, i32 0, i32 0, !dbg !10627
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !10628
  %20 = load %struct.device*, %struct.device** %device, align 8, !dbg !10628
  %21 = load i32, i32* %buffer_dma, align 4, !dbg !10629
  %conv6 = zext i32 %21 to i64, !dbg !10629
  %and7 = and i64 %conv6, -4096, !dbg !10630
  %22 = load i32, i32* %buffer_dma, align 4, !dbg !10631
  %conv8 = zext i32 %22 to i64, !dbg !10631
  %and9 = and i64 %conv8, 4095, !dbg !10632
  %23 = load %struct.descriptor*, %struct.descriptor** %d.addr, align 8, !dbg !10633
  %req_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %23, i32 0, i32 0, !dbg !10633
  %24 = load i16, i16* %req_count, align 16, !dbg !10633
  %conv10 = zext i16 %24 to i64, !dbg !10633
  call void @dma_sync_single_range_for_cpu(%struct.device* %20, i64 %and7, i64 %and9, i64 %conv10, i32 2) #11, !dbg !10634
  br label %while.cond, !dbg !10616, !llvm.loop !10635

while.end:                                        ; preds = %while.cond
  %25 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10637
  %26 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10638
  %add.ptr11 = getelementptr %struct.descriptor, %struct.descriptor* %26, i64 1, !dbg !10639
  %27 = bitcast %struct.descriptor* %add.ptr11 to i32*, !dbg !10640
  call void @copy_iso_headers(%struct.iso_context* %25, i32* %27) #11, !dbg !10641
  %28 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10642
  %control12 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %28, i32 0, i32 1, !dbg !10644
  %29 = load i16, i16* %control12, align 2, !dbg !10644
  %conv13 = zext i16 %29 to i32, !dbg !10642
  %and14 = and i32 %conv13, 48, !dbg !10645
  %tobool15 = icmp ne i32 %and14, 0, !dbg !10645
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !10646

if.then16:                                        ; preds = %while.end
  %30 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10647
  call void @flush_iso_completions(%struct.iso_context* %30) #11, !dbg !10648
  br label %if.end17, !dbg !10648

if.end17:                                         ; preds = %if.then16, %while.end
  store i32 1, i32* %retval, align 4, !dbg !10649
  br label %return, !dbg !10649

return:                                           ; preds = %if.end17, %if.then2
  %31 = load i32, i32* %retval, align 4, !dbg !10650
  ret i32 %31, !dbg !10650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @handle_ir_buffer_fill(%struct.context* %context, %struct.descriptor* %d, %struct.descriptor* %last) #2 !dbg !10651 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca %struct.context*, align 8
  %d.addr = alloca %struct.descriptor*, align 8
  %last.addr = alloca %struct.descriptor*, align 8
  %ctx = alloca %struct.iso_context*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iso_context*, align 8
  %req_count = alloca i32, align 4
  %res_count = alloca i32, align 4
  %completed = alloca i32, align 4
  %buffer_dma = alloca i32, align 4
  %tmp4 = alloca i16, align 2
  store %struct.context* %context, %struct.context** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %context.addr, metadata !10652, metadata !DIExpression()), !dbg !10653
  store %struct.descriptor* %d, %struct.descriptor** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d.addr, metadata !10654, metadata !DIExpression()), !dbg !10655
  store %struct.descriptor* %last, %struct.descriptor** %last.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.descriptor** %last.addr, metadata !10656, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx, metadata !10658, metadata !DIExpression()), !dbg !10659
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10660, metadata !DIExpression()), !dbg !10662
  %0 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !10662
  %1 = bitcast %struct.context* %0 to i8*, !dbg !10662
  store i8* %1, i8** %__mptr, align 8, !dbg !10662
  br label %do.body, !dbg !10662

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10663

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10662
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !10662
  %3 = bitcast i8* %add.ptr to %struct.iso_context*, !dbg !10662
  store %struct.iso_context* %3, %struct.iso_context** %tmp, align 8, !dbg !10663
  %4 = load %struct.iso_context*, %struct.iso_context** %tmp, align 8, !dbg !10662
  store %struct.iso_context* %4, %struct.iso_context** %ctx, align 8, !dbg !10659
  call void @llvm.dbg.declare(metadata i32* %req_count, metadata !10665, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.declare(metadata i32* %res_count, metadata !10667, metadata !DIExpression()), !dbg !10668
  call void @llvm.dbg.declare(metadata i32* %completed, metadata !10669, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.declare(metadata i32* %buffer_dma, metadata !10671, metadata !DIExpression()), !dbg !10672
  %5 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10673
  %req_count1 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %5, i32 0, i32 0, !dbg !10673
  %6 = load i16, i16* %req_count1, align 16, !dbg !10673
  %conv = zext i16 %6 to i32, !dbg !10673
  store i32 %conv, i32* %req_count, align 4, !dbg !10674
  br label %do.body2, !dbg !10675

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !10677

do.end3:                                          ; preds = %do.body2
  %7 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10675
  %res_count5 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %7, i32 0, i32 4, !dbg !10675
  %8 = load volatile i16, i16* %res_count5, align 4, !dbg !10675
  store i16 %8, i16* %tmp4, align 2, !dbg !10677
  %9 = load i16, i16* %tmp4, align 2, !dbg !10675
  %conv6 = zext i16 %9 to i32, !dbg !10679
  store i32 %conv6, i32* %res_count, align 4, !dbg !10680
  %10 = load i32, i32* %req_count, align 4, !dbg !10681
  %11 = load i32, i32* %res_count, align 4, !dbg !10682
  %sub = sub i32 %10, %11, !dbg !10683
  store i32 %sub, i32* %completed, align 4, !dbg !10684
  %12 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10685
  %data_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %12, i32 0, i32 2, !dbg !10685
  %13 = load i32, i32* %data_address, align 4, !dbg !10685
  store i32 %13, i32* %buffer_dma, align 4, !dbg !10686
  %14 = load i32, i32* %completed, align 4, !dbg !10687
  %cmp = icmp ugt i32 %14, 0, !dbg !10689
  br i1 %cmp, label %if.then, label %if.end, !dbg !10690

if.then:                                          ; preds = %do.end3
  %15 = load i32, i32* %buffer_dma, align 4, !dbg !10691
  %16 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10693
  %mc_buffer_bus = getelementptr inbounds %struct.iso_context, %struct.iso_context* %16, i32 0, i32 5, !dbg !10694
  store i32 %15, i32* %mc_buffer_bus, align 8, !dbg !10695
  %17 = load i32, i32* %completed, align 4, !dbg !10696
  %conv8 = trunc i32 %17 to i16, !dbg !10696
  %18 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10697
  %mc_completed = getelementptr inbounds %struct.iso_context, %struct.iso_context* %18, i32 0, i32 6, !dbg !10698
  store i16 %conv8, i16* %mc_completed, align 4, !dbg !10699
  br label %if.end, !dbg !10700

if.end:                                           ; preds = %if.then, %do.end3
  %19 = load i32, i32* %res_count, align 4, !dbg !10701
  %cmp9 = icmp ne i32 %19, 0, !dbg !10703
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10704

if.then11:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10705
  br label %return, !dbg !10705

if.end12:                                         ; preds = %if.end
  %20 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !10706
  %ohci = getelementptr inbounds %struct.context, %struct.context* %20, i32 0, i32 0, !dbg !10707
  %21 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !10707
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %21, i32 0, i32 0, !dbg !10708
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !10709
  %22 = load %struct.device*, %struct.device** %device, align 8, !dbg !10709
  %23 = load i32, i32* %buffer_dma, align 4, !dbg !10710
  %conv13 = zext i32 %23 to i64, !dbg !10710
  %and = and i64 %conv13, -4096, !dbg !10711
  %24 = load i32, i32* %buffer_dma, align 4, !dbg !10712
  %conv14 = zext i32 %24 to i64, !dbg !10712
  %and15 = and i64 %conv14, 4095, !dbg !10713
  %25 = load i32, i32* %completed, align 4, !dbg !10714
  %conv16 = zext i32 %25 to i64, !dbg !10714
  call void @dma_sync_single_range_for_cpu(%struct.device* %22, i64 %and, i64 %and15, i64 %conv16, i32 2) #11, !dbg !10715
  %26 = load %struct.descriptor*, %struct.descriptor** %last.addr, align 8, !dbg !10716
  %control = getelementptr inbounds %struct.descriptor, %struct.descriptor* %26, i32 0, i32 1, !dbg !10718
  %27 = load i16, i16* %control, align 2, !dbg !10718
  %conv17 = zext i16 %27 to i32, !dbg !10716
  %and18 = and i32 %conv17, 48, !dbg !10719
  %tobool = icmp ne i32 %and18, 0, !dbg !10719
  br i1 %tobool, label %if.then19, label %if.end24, !dbg !10720

if.then19:                                        ; preds = %if.end12
  %28 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10721
  %base = getelementptr inbounds %struct.iso_context, %struct.iso_context* %28, i32 0, i32 0, !dbg !10723
  %callback = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base, i32 0, i32 6, !dbg !10724
  %mc = bitcast %union.anon.67* %callback to void (%struct.fw_iso_context*, i64, i8*)**, !dbg !10725
  %29 = load void (%struct.fw_iso_context*, i64, i8*)*, void (%struct.fw_iso_context*, i64, i8*)** %mc, align 8, !dbg !10725
  %30 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10726
  %base20 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %30, i32 0, i32 0, !dbg !10727
  %31 = load i32, i32* %buffer_dma, align 4, !dbg !10728
  %32 = load i32, i32* %completed, align 4, !dbg !10729
  %add = add i32 %31, %32, !dbg !10730
  %conv21 = zext i32 %add to i64, !dbg !10728
  %33 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10731
  %base22 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %33, i32 0, i32 0, !dbg !10732
  %callback_data = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base22, i32 0, i32 7, !dbg !10733
  %34 = load i8*, i8** %callback_data, align 8, !dbg !10733
  call void %29(%struct.fw_iso_context* %base20, i64 %conv21, i8* %34) #11, !dbg !10721
  %35 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !10734
  %mc_completed23 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %35, i32 0, i32 6, !dbg !10735
  store i16 0, i16* %mc_completed23, align 4, !dbg !10736
  br label %if.end24, !dbg !10737

if.end24:                                         ; preds = %if.then19, %if.end12
  store i32 1, i32* %retval, align 4, !dbg !10738
  br label %return, !dbg !10738

return:                                           ; preds = %if.end24, %if.then11
  %36 = load i32, i32* %retval, align 4, !dbg !10739
  ret i32 %36, !dbg !10739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #2 !dbg !10740 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !10744, metadata !DIExpression()), !dbg !10745
  %0 = load i64, i64* %error.addr, align 8, !dbg !10746
  %1 = inttoptr i64 %0 to i8*, !dbg !10747
  ret i8* %1, !dbg !10748
}

; Function Attrs: noredzone
declare dso_local i64 @__get_free_pages(i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_multichannel_mask(%struct.fw_ohci* %ohci, i64 %channels) #2 !dbg !10749 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %channels.addr = alloca i64, align 8
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !10752, metadata !DIExpression()), !dbg !10753
  store i64 %channels, i64* %channels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %channels.addr, metadata !10754, metadata !DIExpression()), !dbg !10755
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !10756, metadata !DIExpression()), !dbg !10757
  %0 = load i64, i64* %channels.addr, align 8, !dbg !10758
  %shr = lshr i64 %0, 32, !dbg !10759
  %conv = trunc i64 %shr to i32, !dbg !10758
  store i32 %conv, i32* %hi, align 4, !dbg !10757
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !10760, metadata !DIExpression()), !dbg !10761
  %1 = load i64, i64* %channels.addr, align 8, !dbg !10762
  %conv1 = trunc i64 %1 to i32, !dbg !10762
  store i32 %conv1, i32* %lo, align 4, !dbg !10761
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10763
  %3 = load i32, i32* %hi, align 4, !dbg !10764
  %neg = xor i32 %3, -1, !dbg !10765
  call void @reg_write(%struct.fw_ohci* %2, i32 116, i32 %neg) #11, !dbg !10766
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10767
  %5 = load i32, i32* %lo, align 4, !dbg !10768
  %neg2 = xor i32 %5, -1, !dbg !10769
  call void @reg_write(%struct.fw_ohci* %4, i32 124, i32 %neg2) #11, !dbg !10770
  %6 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10771
  %7 = load i32, i32* %hi, align 4, !dbg !10772
  call void @reg_write(%struct.fw_ohci* %6, i32 112, i32 %7) #11, !dbg !10773
  %8 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10774
  %9 = load i32, i32* %lo, align 4, !dbg !10775
  call void @reg_write(%struct.fw_ohci* %8, i32 120, i32 %9) #11, !dbg !10776
  %10 = load i64, i64* %channels.addr, align 8, !dbg !10777
  %11 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !10778
  %mc_channels = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %11, i32 0, i32 28, !dbg !10779
  store i64 %10, i64* %mc_channels, align 8, !dbg !10780
  ret void, !dbg !10781
}

; Function Attrs: noredzone
declare dso_local void @free_pages(i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sync_it_packet_for_cpu(%struct.context* %context, %struct.descriptor* %pd) #2 !dbg !10782 {
entry:
  %context.addr = alloca %struct.context*, align 8
  %pd.addr = alloca %struct.descriptor*, align 8
  %control = alloca i16, align 2
  %buffer_dma = alloca i32, align 4
  store %struct.context* %context, %struct.context** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %context.addr, metadata !10785, metadata !DIExpression()), !dbg !10786
  store %struct.descriptor* %pd, %struct.descriptor** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.descriptor** %pd.addr, metadata !10787, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.declare(metadata i16* %control, metadata !10789, metadata !DIExpression()), !dbg !10790
  call void @llvm.dbg.declare(metadata i32* %buffer_dma, metadata !10791, metadata !DIExpression()), !dbg !10792
  %0 = load %struct.descriptor*, %struct.descriptor** %pd.addr, align 8, !dbg !10793
  %control1 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %0, i32 0, i32 1, !dbg !10795
  %1 = load i16, i16* %control1, align 2, !dbg !10795
  %conv = zext i16 %1 to i32, !dbg !10793
  %and = and i32 %conv, 12, !dbg !10796
  %tobool = icmp ne i32 %and, 0, !dbg !10796
  br i1 %tobool, label %if.then, label %if.end, !dbg !10797

if.then:                                          ; preds = %entry
  br label %do.end, !dbg !10798

if.end:                                           ; preds = %entry
  %2 = load %struct.descriptor*, %struct.descriptor** %pd.addr, align 8, !dbg !10799
  %add.ptr = getelementptr %struct.descriptor, %struct.descriptor* %2, i64 2, !dbg !10799
  store %struct.descriptor* %add.ptr, %struct.descriptor** %pd.addr, align 8, !dbg !10799
  %3 = load %struct.descriptor*, %struct.descriptor** %pd.addr, align 8, !dbg !10800
  %data_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %3, i32 0, i32 2, !dbg !10800
  %4 = load i32, i32* %data_address, align 4, !dbg !10800
  %conv2 = zext i32 %4 to i64, !dbg !10800
  %and3 = and i64 %conv2, -4096, !dbg !10802
  %5 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !10803
  %current_bus = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 3, !dbg !10804
  %6 = load i32, i32* %current_bus, align 8, !dbg !10804
  %conv4 = zext i32 %6 to i64, !dbg !10803
  %and5 = and i64 %conv4, -4096, !dbg !10805
  %cmp = icmp eq i64 %and3, %and5, !dbg !10806
  br i1 %cmp, label %if.then7, label %if.end14, !dbg !10807

if.then7:                                         ; preds = %if.end
  %7 = load %struct.descriptor*, %struct.descriptor** %pd.addr, align 8, !dbg !10808
  %control8 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %7, i32 0, i32 1, !dbg !10811
  %8 = load i16, i16* %control8, align 2, !dbg !10811
  %conv9 = zext i16 %8 to i32, !dbg !10808
  %and10 = and i32 %conv9, 12, !dbg !10812
  %tobool11 = icmp ne i32 %and10, 0, !dbg !10812
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !10813

if.then12:                                        ; preds = %if.then7
  br label %do.end, !dbg !10814

if.end13:                                         ; preds = %if.then7
  %9 = load %struct.descriptor*, %struct.descriptor** %pd.addr, align 8, !dbg !10815
  %incdec.ptr = getelementptr %struct.descriptor, %struct.descriptor* %9, i32 1, !dbg !10815
  store %struct.descriptor* %incdec.ptr, %struct.descriptor** %pd.addr, align 8, !dbg !10815
  br label %if.end14, !dbg !10816

if.end14:                                         ; preds = %if.end13, %if.end
  br label %do.body, !dbg !10817

do.body:                                          ; preds = %do.cond, %if.end14
  %10 = load %struct.descriptor*, %struct.descriptor** %pd.addr, align 8, !dbg !10818
  %data_address15 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %10, i32 0, i32 2, !dbg !10818
  %11 = load i32, i32* %data_address15, align 4, !dbg !10818
  store i32 %11, i32* %buffer_dma, align 4, !dbg !10820
  %12 = load %struct.context*, %struct.context** %context.addr, align 8, !dbg !10821
  %ohci = getelementptr inbounds %struct.context, %struct.context* %12, i32 0, i32 0, !dbg !10822
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !10822
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %13, i32 0, i32 0, !dbg !10823
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !10824
  %14 = load %struct.device*, %struct.device** %device, align 8, !dbg !10824
  %15 = load i32, i32* %buffer_dma, align 4, !dbg !10825
  %conv16 = zext i32 %15 to i64, !dbg !10825
  %and17 = and i64 %conv16, -4096, !dbg !10826
  %16 = load i32, i32* %buffer_dma, align 4, !dbg !10827
  %conv18 = zext i32 %16 to i64, !dbg !10827
  %and19 = and i64 %conv18, 4095, !dbg !10828
  %17 = load %struct.descriptor*, %struct.descriptor** %pd.addr, align 8, !dbg !10829
  %req_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %17, i32 0, i32 0, !dbg !10829
  %18 = load i16, i16* %req_count, align 16, !dbg !10829
  %conv20 = zext i16 %18 to i64, !dbg !10829
  call void @dma_sync_single_range_for_cpu(%struct.device* %14, i64 %and17, i64 %and19, i64 %conv20, i32 1) #11, !dbg !10830
  %19 = load %struct.descriptor*, %struct.descriptor** %pd.addr, align 8, !dbg !10831
  %control21 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %19, i32 0, i32 1, !dbg !10832
  %20 = load i16, i16* %control21, align 2, !dbg !10832
  store i16 %20, i16* %control, align 2, !dbg !10833
  %21 = load %struct.descriptor*, %struct.descriptor** %pd.addr, align 8, !dbg !10834
  %incdec.ptr22 = getelementptr %struct.descriptor, %struct.descriptor* %21, i32 1, !dbg !10834
  store %struct.descriptor* %incdec.ptr22, %struct.descriptor** %pd.addr, align 8, !dbg !10834
  br label %do.cond, !dbg !10835

do.cond:                                          ; preds = %do.body
  %22 = load i16, i16* %control, align 2, !dbg !10836
  %conv23 = zext i16 %22 to i32, !dbg !10836
  %and24 = and i32 %conv23, 12, !dbg !10837
  %tobool25 = icmp ne i32 %and24, 0, !dbg !10838
  %lnot = xor i1 %tobool25, true, !dbg !10838
  br i1 %lnot, label %do.body, label %do.end, !dbg !10835, !llvm.loop !10839

do.end:                                           ; preds = %if.then, %if.then12, %do.cond
  ret void, !dbg !10841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @flush_iso_completions(%struct.iso_context* %ctx) #2 !dbg !10842 {
entry:
  %ctx.addr = alloca %struct.iso_context*, align 8
  store %struct.iso_context* %ctx, %struct.iso_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx.addr, metadata !10845, metadata !DIExpression()), !dbg !10846
  %0 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10847
  %base = getelementptr inbounds %struct.iso_context, %struct.iso_context* %0, i32 0, i32 0, !dbg !10848
  %callback = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base, i32 0, i32 6, !dbg !10849
  %sc = bitcast %union.anon.67* %callback to void (%struct.fw_iso_context*, i32, i64, i8*, i8*)**, !dbg !10850
  %1 = load void (%struct.fw_iso_context*, i32, i64, i8*, i8*)*, void (%struct.fw_iso_context*, i32, i64, i8*, i8*)** %sc, align 8, !dbg !10850
  %2 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10851
  %base1 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %2, i32 0, i32 0, !dbg !10852
  %3 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10853
  %last_timestamp = getelementptr inbounds %struct.iso_context, %struct.iso_context* %3, i32 0, i32 7, !dbg !10854
  %4 = load i16, i16* %last_timestamp, align 2, !dbg !10854
  %conv = zext i16 %4 to i32, !dbg !10853
  %5 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10855
  %header_length = getelementptr inbounds %struct.iso_context, %struct.iso_context* %5, i32 0, i32 3, !dbg !10856
  %6 = load i64, i64* %header_length, align 8, !dbg !10856
  %7 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10857
  %header = getelementptr inbounds %struct.iso_context, %struct.iso_context* %7, i32 0, i32 2, !dbg !10858
  %8 = load i8*, i8** %header, align 8, !dbg !10858
  %9 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10859
  %base2 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %9, i32 0, i32 0, !dbg !10860
  %callback_data = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base2, i32 0, i32 7, !dbg !10861
  %10 = load i8*, i8** %callback_data, align 8, !dbg !10861
  call void %1(%struct.fw_iso_context* %base1, i32 %conv, i64 %6, i8* %8, i8* %10) #11, !dbg !10847
  %11 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10862
  %header_length3 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %11, i32 0, i32 3, !dbg !10863
  store i64 0, i64* %header_length3, align 8, !dbg !10864
  ret void, !dbg !10865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_sync_single_range_for_cpu(%struct.device* %dev, i64 %addr, i64 %offset, i64 %size, i32 %dir) #2 !dbg !10866 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10869, metadata !DIExpression()), !dbg !10870
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !10871, metadata !DIExpression()), !dbg !10872
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10873, metadata !DIExpression()), !dbg !10874
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10875, metadata !DIExpression()), !dbg !10876
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !10877, metadata !DIExpression()), !dbg !10878
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10879
  %1 = load i64, i64* %addr.addr, align 8, !dbg !10880
  %2 = load i64, i64* %offset.addr, align 8, !dbg !10881
  %add = add i64 %1, %2, !dbg !10882
  %3 = load i64, i64* %size.addr, align 8, !dbg !10883
  %4 = load i32, i32* %dir.addr, align 4, !dbg !10884
  call void @dma_sync_single_for_cpu(%struct.device* %0, i64 %add, i64 %3, i32 %4) #11, !dbg !10885
  ret void, !dbg !10886
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_cpu(%struct.device*, i64, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_iso_headers(%struct.iso_context* %ctx, i32* %dma_hdr) #2 !dbg !10887 {
entry:
  %ctx.addr = alloca %struct.iso_context*, align 8
  %dma_hdr.addr = alloca i32*, align 8
  %ctx_hdr = alloca i32*, align 8
  store %struct.iso_context* %ctx, %struct.iso_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx.addr, metadata !10892, metadata !DIExpression()), !dbg !10893
  store i32* %dma_hdr, i32** %dma_hdr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dma_hdr.addr, metadata !10894, metadata !DIExpression()), !dbg !10895
  call void @llvm.dbg.declare(metadata i32** %ctx_hdr, metadata !10896, metadata !DIExpression()), !dbg !10897
  %0 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10898
  %header_length = getelementptr inbounds %struct.iso_context, %struct.iso_context* %0, i32 0, i32 3, !dbg !10900
  %1 = load i64, i64* %header_length, align 8, !dbg !10900
  %2 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10901
  %base = getelementptr inbounds %struct.iso_context, %struct.iso_context* %2, i32 0, i32 0, !dbg !10902
  %header_size = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base, i32 0, i32 5, !dbg !10903
  %3 = load i64, i64* %header_size, align 8, !dbg !10903
  %add = add i64 %1, %3, !dbg !10904
  %cmp = icmp ugt i64 %add, 4096, !dbg !10905
  br i1 %cmp, label %if.then, label %if.end3, !dbg !10906

if.then:                                          ; preds = %entry
  %4 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10907
  %base1 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %4, i32 0, i32 0, !dbg !10910
  %drop_overflow_headers = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base1, i32 0, i32 4, !dbg !10911
  %5 = load i8, i8* %drop_overflow_headers, align 4, !dbg !10911
  %tobool = trunc i8 %5 to i1, !dbg !10911
  br i1 %tobool, label %if.then2, label %if.end, !dbg !10912

if.then2:                                         ; preds = %if.then
  br label %return, !dbg !10913

if.end:                                           ; preds = %if.then
  %6 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10914
  call void @flush_iso_completions(%struct.iso_context* %6) #11, !dbg !10915
  br label %if.end3, !dbg !10916

if.end3:                                          ; preds = %if.end, %entry
  %7 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10917
  %header = getelementptr inbounds %struct.iso_context, %struct.iso_context* %7, i32 0, i32 2, !dbg !10918
  %8 = load i8*, i8** %header, align 8, !dbg !10918
  %9 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10919
  %header_length4 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %9, i32 0, i32 3, !dbg !10920
  %10 = load i64, i64* %header_length4, align 8, !dbg !10920
  %add.ptr = getelementptr i8, i8* %8, i64 %10, !dbg !10921
  %11 = bitcast i8* %add.ptr to i32*, !dbg !10917
  store i32* %11, i32** %ctx_hdr, align 8, !dbg !10922
  %12 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10923
  %arrayidx = getelementptr i32, i32* %12, i64 0, !dbg !10923
  %13 = load i32, i32* %arrayidx, align 4, !dbg !10923
  %conv = trunc i32 %13 to i16, !dbg !10924
  %14 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10925
  %last_timestamp = getelementptr inbounds %struct.iso_context, %struct.iso_context* %14, i32 0, i32 7, !dbg !10926
  store i16 %conv, i16* %last_timestamp, align 2, !dbg !10927
  %15 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10928
  %base5 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %15, i32 0, i32 0, !dbg !10930
  %header_size6 = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base5, i32 0, i32 5, !dbg !10931
  %16 = load i64, i64* %header_size6, align 8, !dbg !10931
  %cmp7 = icmp ugt i64 %16, 0, !dbg !10932
  br i1 %cmp7, label %if.then9, label %if.end24, !dbg !10933

if.then9:                                         ; preds = %if.end3
  %17 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10934
  %arrayidx10 = getelementptr i32, i32* %17, i64 1, !dbg !10934
  %18 = load i32, i32* %arrayidx10, align 4, !dbg !10934
  %19 = call i1 @llvm.is.constant.i32(i32 %18), !dbg !10934
  br i1 %19, label %cond.true, label %cond.false, !dbg !10934

cond.true:                                        ; preds = %if.then9
  %20 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10934
  %arrayidx11 = getelementptr i32, i32* %20, i64 1, !dbg !10934
  %21 = load i32, i32* %arrayidx11, align 4, !dbg !10934
  %and = and i32 %21, 255, !dbg !10934
  %shl = shl i32 %and, 24, !dbg !10934
  %22 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10934
  %arrayidx12 = getelementptr i32, i32* %22, i64 1, !dbg !10934
  %23 = load i32, i32* %arrayidx12, align 4, !dbg !10934
  %and13 = and i32 %23, 65280, !dbg !10934
  %shl14 = shl i32 %and13, 8, !dbg !10934
  %or = or i32 %shl, %shl14, !dbg !10934
  %24 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10934
  %arrayidx15 = getelementptr i32, i32* %24, i64 1, !dbg !10934
  %25 = load i32, i32* %arrayidx15, align 4, !dbg !10934
  %and16 = and i32 %25, 16711680, !dbg !10934
  %shr = lshr i32 %and16, 8, !dbg !10934
  %or17 = or i32 %or, %shr, !dbg !10934
  %26 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10934
  %arrayidx18 = getelementptr i32, i32* %26, i64 1, !dbg !10934
  %27 = load i32, i32* %arrayidx18, align 4, !dbg !10934
  %and19 = and i32 %27, -16777216, !dbg !10934
  %shr20 = lshr i32 %and19, 24, !dbg !10934
  %or21 = or i32 %or17, %shr20, !dbg !10934
  br label %cond.end, !dbg !10934

cond.false:                                       ; preds = %if.then9
  %28 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10934
  %arrayidx22 = getelementptr i32, i32* %28, i64 1, !dbg !10934
  %29 = load i32, i32* %arrayidx22, align 4, !dbg !10934
  %call = call i32 @__fswab32(i32 %29) #14, !dbg !10934
  br label %cond.end, !dbg !10934

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or21, %cond.true ], [ %call, %cond.false ], !dbg !10934
  %30 = load i32*, i32** %ctx_hdr, align 8, !dbg !10935
  %arrayidx23 = getelementptr i32, i32* %30, i64 0, !dbg !10935
  store i32 %cond, i32* %arrayidx23, align 4, !dbg !10936
  br label %if.end24, !dbg !10935

if.end24:                                         ; preds = %cond.end, %if.end3
  %31 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10937
  %base25 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %31, i32 0, i32 0, !dbg !10939
  %header_size26 = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base25, i32 0, i32 5, !dbg !10940
  %32 = load i64, i64* %header_size26, align 8, !dbg !10940
  %cmp27 = icmp ugt i64 %32, 4, !dbg !10941
  br i1 %cmp27, label %if.then29, label %if.end53, !dbg !10942

if.then29:                                        ; preds = %if.end24
  %33 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10943
  %arrayidx30 = getelementptr i32, i32* %33, i64 0, !dbg !10943
  %34 = load i32, i32* %arrayidx30, align 4, !dbg !10943
  %35 = call i1 @llvm.is.constant.i32(i32 %34), !dbg !10943
  br i1 %35, label %cond.true31, label %cond.false47, !dbg !10943

cond.true31:                                      ; preds = %if.then29
  %36 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10943
  %arrayidx32 = getelementptr i32, i32* %36, i64 0, !dbg !10943
  %37 = load i32, i32* %arrayidx32, align 4, !dbg !10943
  %and33 = and i32 %37, 255, !dbg !10943
  %shl34 = shl i32 %and33, 24, !dbg !10943
  %38 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10943
  %arrayidx35 = getelementptr i32, i32* %38, i64 0, !dbg !10943
  %39 = load i32, i32* %arrayidx35, align 4, !dbg !10943
  %and36 = and i32 %39, 65280, !dbg !10943
  %shl37 = shl i32 %and36, 8, !dbg !10943
  %or38 = or i32 %shl34, %shl37, !dbg !10943
  %40 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10943
  %arrayidx39 = getelementptr i32, i32* %40, i64 0, !dbg !10943
  %41 = load i32, i32* %arrayidx39, align 4, !dbg !10943
  %and40 = and i32 %41, 16711680, !dbg !10943
  %shr41 = lshr i32 %and40, 8, !dbg !10943
  %or42 = or i32 %or38, %shr41, !dbg !10943
  %42 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10943
  %arrayidx43 = getelementptr i32, i32* %42, i64 0, !dbg !10943
  %43 = load i32, i32* %arrayidx43, align 4, !dbg !10943
  %and44 = and i32 %43, -16777216, !dbg !10943
  %shr45 = lshr i32 %and44, 24, !dbg !10943
  %or46 = or i32 %or42, %shr45, !dbg !10943
  br label %cond.end50, !dbg !10943

cond.false47:                                     ; preds = %if.then29
  %44 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10943
  %arrayidx48 = getelementptr i32, i32* %44, i64 0, !dbg !10943
  %45 = load i32, i32* %arrayidx48, align 4, !dbg !10943
  %call49 = call i32 @__fswab32(i32 %45) #14, !dbg !10943
  br label %cond.end50, !dbg !10943

cond.end50:                                       ; preds = %cond.false47, %cond.true31
  %cond51 = phi i32 [ %or46, %cond.true31 ], [ %call49, %cond.false47 ], !dbg !10943
  %46 = load i32*, i32** %ctx_hdr, align 8, !dbg !10944
  %arrayidx52 = getelementptr i32, i32* %46, i64 1, !dbg !10944
  store i32 %cond51, i32* %arrayidx52, align 4, !dbg !10945
  br label %if.end53, !dbg !10944

if.end53:                                         ; preds = %cond.end50, %if.end24
  %47 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10946
  %base54 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %47, i32 0, i32 0, !dbg !10948
  %header_size55 = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base54, i32 0, i32 5, !dbg !10949
  %48 = load i64, i64* %header_size55, align 8, !dbg !10949
  %cmp56 = icmp ugt i64 %48, 8, !dbg !10950
  br i1 %cmp56, label %if.then58, label %if.end63, !dbg !10951

if.then58:                                        ; preds = %if.end53
  %49 = load i32*, i32** %ctx_hdr, align 8, !dbg !10952
  %arrayidx59 = getelementptr i32, i32* %49, i64 2, !dbg !10952
  %50 = bitcast i32* %arrayidx59 to i8*, !dbg !10953
  %51 = load i32*, i32** %dma_hdr.addr, align 8, !dbg !10954
  %arrayidx60 = getelementptr i32, i32* %51, i64 2, !dbg !10954
  %52 = bitcast i32* %arrayidx60 to i8*, !dbg !10953
  %53 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10955
  %base61 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %53, i32 0, i32 0, !dbg !10956
  %header_size62 = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base61, i32 0, i32 5, !dbg !10957
  %54 = load i64, i64* %header_size62, align 8, !dbg !10957
  %sub = sub i64 %54, 8, !dbg !10958
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %52, i64 %sub, i1 false), !dbg !10953
  br label %if.end63, !dbg !10953

if.end63:                                         ; preds = %if.then58, %if.end53
  %55 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10959
  %base64 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %55, i32 0, i32 0, !dbg !10960
  %header_size65 = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base64, i32 0, i32 5, !dbg !10961
  %56 = load i64, i64* %header_size65, align 8, !dbg !10961
  %57 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !10962
  %header_length66 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %57, i32 0, i32 3, !dbg !10963
  %58 = load i64, i64* %header_length66, align 8, !dbg !10964
  %add67 = add i64 %58, %56, !dbg !10964
  store i64 %add67, i64* %header_length66, align 8, !dbg !10964
  br label %return, !dbg !10965

return:                                           ; preds = %if.end63, %if.then2
  ret void, !dbg !10965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @queue_iso_transmit(%struct.iso_context* %ctx, %struct.fw_iso_packet* %packet, %struct.fw_iso_buffer* %buffer, i64 %payload) #2 !dbg !10966 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.iso_context*, align 8
  %packet.addr = alloca %struct.fw_iso_packet*, align 8
  %buffer.addr = alloca %struct.fw_iso_buffer*, align 8
  %payload.addr = alloca i64, align 8
  %d = alloca %struct.descriptor*, align 8
  %last = alloca %struct.descriptor*, align 8
  %pd = alloca %struct.descriptor*, align 8
  %p = alloca %struct.fw_iso_packet*, align 8
  %header = alloca i32*, align 8
  %d_bus = alloca i64, align 8
  %page_bus = alloca i64, align 8
  %z = alloca i32, align 4
  %header_z = alloca i32, align 4
  %payload_z = alloca i32, align 4
  %irq = alloca i32, align 4
  %payload_index = alloca i32, align 4
  %payload_end_index = alloca i32, align 4
  %next_page_index = alloca i32, align 4
  %page = alloca i32, align 4
  %end_page = alloca i32, align 4
  %i = alloca i32, align 4
  %length = alloca i32, align 4
  %offset = alloca i32, align 4
  %__UNIQUE_ID___x264 = alloca i32, align 4
  %__UNIQUE_ID___y265 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.iso_context* %ctx, %struct.iso_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx.addr, metadata !10969, metadata !DIExpression()), !dbg !10970
  store %struct.fw_iso_packet* %packet, %struct.fw_iso_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_packet** %packet.addr, metadata !10971, metadata !DIExpression()), !dbg !10972
  store %struct.fw_iso_buffer* %buffer, %struct.fw_iso_buffer** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_buffer** %buffer.addr, metadata !10973, metadata !DIExpression()), !dbg !10974
  store i64 %payload, i64* %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %payload.addr, metadata !10975, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d, metadata !10977, metadata !DIExpression()), !dbg !10978
  call void @llvm.dbg.declare(metadata %struct.descriptor** %last, metadata !10979, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.declare(metadata %struct.descriptor** %pd, metadata !10981, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.declare(metadata %struct.fw_iso_packet** %p, metadata !10983, metadata !DIExpression()), !dbg !10984
  call void @llvm.dbg.declare(metadata i32** %header, metadata !10985, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.declare(metadata i64* %d_bus, metadata !10987, metadata !DIExpression()), !dbg !10988
  call void @llvm.dbg.declare(metadata i64* %page_bus, metadata !10989, metadata !DIExpression()), !dbg !10990
  call void @llvm.dbg.declare(metadata i32* %z, metadata !10991, metadata !DIExpression()), !dbg !10992
  call void @llvm.dbg.declare(metadata i32* %header_z, metadata !10993, metadata !DIExpression()), !dbg !10994
  call void @llvm.dbg.declare(metadata i32* %payload_z, metadata !10995, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !10997, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.declare(metadata i32* %payload_index, metadata !10999, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.declare(metadata i32* %payload_end_index, metadata !11001, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.declare(metadata i32* %next_page_index, metadata !11003, metadata !DIExpression()), !dbg !11004
  call void @llvm.dbg.declare(metadata i32* %page, metadata !11005, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.declare(metadata i32* %end_page, metadata !11007, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11009, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.declare(metadata i32* %length, metadata !11011, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11013, metadata !DIExpression()), !dbg !11014
  %0 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %packet.addr, align 8, !dbg !11015
  store %struct.fw_iso_packet* %0, %struct.fw_iso_packet** %p, align 8, !dbg !11016
  %1 = load i64, i64* %payload.addr, align 8, !dbg !11017
  %conv = trunc i64 %1 to i32, !dbg !11017
  store i32 %conv, i32* %payload_index, align 4, !dbg !11018
  %2 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11019
  %skip = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %2, i32 0, i32 1, !dbg !11021
  %bf.load = load i16, i16* %skip, align 2, !dbg !11021
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !11021
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11021
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11021
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !11019
  br i1 %tobool, label %if.then, label %if.else, !dbg !11022

if.then:                                          ; preds = %entry
  store i32 1, i32* %z, align 4, !dbg !11023
  br label %if.end, !dbg !11024

if.else:                                          ; preds = %entry
  store i32 2, i32* %z, align 4, !dbg !11025
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11026
  %header_length = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %3, i32 0, i32 1, !dbg !11028
  %bf.load1 = load i16, i16* %header_length, align 2, !dbg !11028
  %bf.lshr2 = lshr i16 %bf.load1, 8, !dbg !11028
  %bf.cast3 = zext i16 %bf.lshr2 to i32, !dbg !11028
  %cmp = icmp sgt i32 %bf.cast3, 0, !dbg !11029
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !11030

if.then5:                                         ; preds = %if.end
  %4 = load i32, i32* %z, align 4, !dbg !11031
  %inc = add i32 %4, 1, !dbg !11031
  store i32 %inc, i32* %z, align 4, !dbg !11031
  br label %if.end6, !dbg !11032

if.end6:                                          ; preds = %if.then5, %if.end
  %5 = load i32, i32* %payload_index, align 4, !dbg !11033
  %6 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11033
  %payload_length = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %6, i32 0, i32 0, !dbg !11033
  %7 = load i16, i16* %payload_length, align 4, !dbg !11033
  %conv7 = zext i16 %7 to i32, !dbg !11033
  %add = add i32 %5, %conv7, !dbg !11033
  %add8 = add i32 %add, 4095, !dbg !11033
  %and = and i32 %add8, -4096, !dbg !11033
  %shr = lshr i32 %and, 12, !dbg !11034
  store i32 %shr, i32* %end_page, align 4, !dbg !11035
  %8 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11036
  %payload_length9 = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %8, i32 0, i32 0, !dbg !11038
  %9 = load i16, i16* %payload_length9, align 4, !dbg !11038
  %conv10 = zext i16 %9 to i32, !dbg !11036
  %cmp11 = icmp sgt i32 %conv10, 0, !dbg !11039
  br i1 %cmp11, label %if.then13, label %if.else15, !dbg !11040

if.then13:                                        ; preds = %if.end6
  %10 = load i32, i32* %end_page, align 4, !dbg !11041
  %11 = load i32, i32* %payload_index, align 4, !dbg !11042
  %shr14 = lshr i32 %11, 12, !dbg !11043
  %sub = sub i32 %10, %shr14, !dbg !11044
  store i32 %sub, i32* %payload_z, align 4, !dbg !11045
  br label %if.end16, !dbg !11046

if.else15:                                        ; preds = %if.end6
  store i32 0, i32* %payload_z, align 4, !dbg !11047
  br label %if.end16

if.end16:                                         ; preds = %if.else15, %if.then13
  %12 = load i32, i32* %payload_z, align 4, !dbg !11048
  %13 = load i32, i32* %z, align 4, !dbg !11049
  %add17 = add i32 %13, %12, !dbg !11049
  store i32 %add17, i32* %z, align 4, !dbg !11049
  %14 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11050
  %header_length18 = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %14, i32 0, i32 1, !dbg !11050
  %bf.load19 = load i16, i16* %header_length18, align 2, !dbg !11050
  %bf.lshr20 = lshr i16 %bf.load19, 8, !dbg !11050
  %bf.cast21 = zext i16 %bf.lshr20 to i32, !dbg !11050
  %conv22 = zext i32 %bf.cast21 to i64, !dbg !11050
  %add23 = add i64 %conv22, 16, !dbg !11050
  %sub24 = sub i64 %add23, 1, !dbg !11050
  %div = udiv i64 %sub24, 16, !dbg !11050
  %conv25 = trunc i64 %div to i32, !dbg !11050
  store i32 %conv25, i32* %header_z, align 4, !dbg !11051
  %15 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11052
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %15, i32 0, i32 1, !dbg !11053
  %16 = load i32, i32* %z, align 4, !dbg !11054
  %17 = load i32, i32* %header_z, align 4, !dbg !11055
  %add26 = add i32 %16, %17, !dbg !11056
  %call = call %struct.descriptor* @context_get_descriptors(%struct.context* %context, i32 %add26, i64* %d_bus) #11, !dbg !11057
  store %struct.descriptor* %call, %struct.descriptor** %d, align 8, !dbg !11058
  %18 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11059
  %cmp27 = icmp eq %struct.descriptor* %18, null, !dbg !11061
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !11062

if.then29:                                        ; preds = %if.end16
  store i32 -12, i32* %retval, align 4, !dbg !11063
  br label %return, !dbg !11063

if.end30:                                         ; preds = %if.end16
  %19 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11064
  %skip31 = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %19, i32 0, i32 1, !dbg !11066
  %bf.load32 = load i16, i16* %skip31, align 2, !dbg !11066
  %bf.lshr33 = lshr i16 %bf.load32, 1, !dbg !11066
  %bf.clear34 = and i16 %bf.lshr33, 1, !dbg !11066
  %bf.cast35 = zext i16 %bf.clear34 to i32, !dbg !11066
  %tobool36 = icmp ne i32 %bf.cast35, 0, !dbg !11064
  br i1 %tobool36, label %if.end69, label %if.then37, !dbg !11067

if.then37:                                        ; preds = %if.end30
  %20 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11068
  %arrayidx = getelementptr %struct.descriptor, %struct.descriptor* %20, i64 0, !dbg !11068
  %control = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx, i32 0, i32 1, !dbg !11070
  store i16 512, i16* %control, align 2, !dbg !11071
  %21 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11072
  %arrayidx38 = getelementptr %struct.descriptor, %struct.descriptor* %21, i64 0, !dbg !11072
  %req_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx38, i32 0, i32 0, !dbg !11073
  store i16 8, i16* %req_count, align 16, !dbg !11074
  %22 = load i64, i64* %d_bus, align 8, !dbg !11075
  %23 = load i32, i32* %z, align 4, !dbg !11075
  %conv39 = zext i32 %23 to i64, !dbg !11075
  %or = or i64 %22, %conv39, !dbg !11075
  %conv40 = trunc i64 %or to i32, !dbg !11075
  %24 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11076
  %arrayidx41 = getelementptr %struct.descriptor, %struct.descriptor* %24, i64 0, !dbg !11076
  %branch_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx41, i32 0, i32 3, !dbg !11077
  store i32 %conv40, i32* %branch_address, align 8, !dbg !11078
  %25 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11079
  %arrayidx42 = getelementptr %struct.descriptor, %struct.descriptor* %25, i64 1, !dbg !11079
  %26 = bitcast %struct.descriptor* %arrayidx42 to i32*, !dbg !11080
  store i32* %26, i32** %header, align 8, !dbg !11081
  %27 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11082
  %sy = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %27, i32 0, i32 1, !dbg !11082
  %bf.load43 = load i16, i16* %sy, align 2, !dbg !11082
  %bf.lshr44 = lshr i16 %bf.load43, 4, !dbg !11082
  %bf.clear45 = and i16 %bf.lshr44, 15, !dbg !11082
  %bf.cast46 = zext i16 %bf.clear45 to i32, !dbg !11082
  %shl = shl i32 %bf.cast46, 0, !dbg !11082
  %28 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11082
  %tag = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %28, i32 0, i32 1, !dbg !11082
  %bf.load47 = load i16, i16* %tag, align 2, !dbg !11082
  %bf.lshr48 = lshr i16 %bf.load47, 2, !dbg !11082
  %bf.clear49 = and i16 %bf.lshr48, 3, !dbg !11082
  %bf.cast50 = zext i16 %bf.clear49 to i32, !dbg !11082
  %shl51 = shl i32 %bf.cast50, 14, !dbg !11082
  %or52 = or i32 %shl, %shl51, !dbg !11082
  %or53 = or i32 %or52, 160, !dbg !11082
  %29 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11082
  %base = getelementptr inbounds %struct.iso_context, %struct.iso_context* %29, i32 0, i32 0, !dbg !11082
  %channel = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base, i32 0, i32 2, !dbg !11082
  %30 = load i32, i32* %channel, align 4, !dbg !11082
  %shl54 = shl i32 %30, 8, !dbg !11082
  %or55 = or i32 %or53, %shl54, !dbg !11082
  %31 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11082
  %base56 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %31, i32 0, i32 0, !dbg !11082
  %speed = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base56, i32 0, i32 3, !dbg !11082
  %32 = load i32, i32* %speed, align 8, !dbg !11082
  %shl57 = shl i32 %32, 16, !dbg !11082
  %or58 = or i32 %or55, %shl57, !dbg !11082
  %33 = load i32*, i32** %header, align 8, !dbg !11083
  %arrayidx59 = getelementptr i32, i32* %33, i64 0, !dbg !11083
  store i32 %or58, i32* %arrayidx59, align 4, !dbg !11084
  %34 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11085
  %header_length60 = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %34, i32 0, i32 1, !dbg !11085
  %bf.load61 = load i16, i16* %header_length60, align 2, !dbg !11085
  %bf.lshr62 = lshr i16 %bf.load61, 8, !dbg !11085
  %bf.cast63 = zext i16 %bf.lshr62 to i32, !dbg !11085
  %35 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11085
  %payload_length64 = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %35, i32 0, i32 0, !dbg !11085
  %36 = load i16, i16* %payload_length64, align 4, !dbg !11085
  %conv65 = zext i16 %36 to i32, !dbg !11085
  %add66 = add i32 %bf.cast63, %conv65, !dbg !11085
  %shl67 = shl i32 %add66, 16, !dbg !11085
  %37 = load i32*, i32** %header, align 8, !dbg !11086
  %arrayidx68 = getelementptr i32, i32* %37, i64 1, !dbg !11086
  store i32 %shl67, i32* %arrayidx68, align 4, !dbg !11087
  br label %if.end69, !dbg !11088

if.end69:                                         ; preds = %if.then37, %if.end30
  %38 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11089
  %header_length70 = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %38, i32 0, i32 1, !dbg !11091
  %bf.load71 = load i16, i16* %header_length70, align 2, !dbg !11091
  %bf.lshr72 = lshr i16 %bf.load71, 8, !dbg !11091
  %bf.cast73 = zext i16 %bf.lshr72 to i32, !dbg !11091
  %cmp74 = icmp sgt i32 %bf.cast73, 0, !dbg !11092
  br i1 %cmp74, label %if.then76, label %if.end95, !dbg !11093

if.then76:                                        ; preds = %if.end69
  %39 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11094
  %header_length77 = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %39, i32 0, i32 1, !dbg !11094
  %bf.load78 = load i16, i16* %header_length77, align 2, !dbg !11094
  %bf.lshr79 = lshr i16 %bf.load78, 8, !dbg !11094
  %bf.cast80 = zext i16 %bf.lshr79 to i32, !dbg !11094
  %conv81 = trunc i32 %bf.cast80 to i16, !dbg !11094
  %40 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11096
  %arrayidx82 = getelementptr %struct.descriptor, %struct.descriptor* %40, i64 2, !dbg !11096
  %req_count83 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx82, i32 0, i32 0, !dbg !11097
  store i16 %conv81, i16* %req_count83, align 16, !dbg !11098
  %41 = load i64, i64* %d_bus, align 8, !dbg !11099
  %42 = load i32, i32* %z, align 4, !dbg !11099
  %conv84 = zext i32 %42 to i64, !dbg !11099
  %mul = mul i64 %conv84, 16, !dbg !11099
  %add85 = add i64 %41, %mul, !dbg !11099
  %conv86 = trunc i64 %add85 to i32, !dbg !11099
  %43 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11100
  %arrayidx87 = getelementptr %struct.descriptor, %struct.descriptor* %43, i64 2, !dbg !11100
  %data_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx87, i32 0, i32 2, !dbg !11101
  store i32 %conv86, i32* %data_address, align 4, !dbg !11102
  %44 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11103
  %45 = load i32, i32* %z, align 4, !dbg !11104
  %idxprom = zext i32 %45 to i64, !dbg !11103
  %arrayidx88 = getelementptr %struct.descriptor, %struct.descriptor* %44, i64 %idxprom, !dbg !11103
  %46 = bitcast %struct.descriptor* %arrayidx88 to i8*, !dbg !11105
  %47 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11106
  %header89 = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %47, i32 0, i32 2, !dbg !11107
  %arraydecay = getelementptr inbounds [0 x i32], [0 x i32]* %header89, i64 0, i64 0, !dbg !11105
  %48 = bitcast i32* %arraydecay to i8*, !dbg !11105
  %49 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11108
  %header_length90 = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %49, i32 0, i32 1, !dbg !11109
  %bf.load91 = load i16, i16* %header_length90, align 2, !dbg !11109
  %bf.lshr92 = lshr i16 %bf.load91, 8, !dbg !11109
  %bf.cast93 = zext i16 %bf.lshr92 to i32, !dbg !11109
  %conv94 = zext i32 %bf.cast93 to i64, !dbg !11108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %46, i8* align 4 %48, i64 %conv94, i1 false), !dbg !11105
  br label %if.end95, !dbg !11110

if.end95:                                         ; preds = %if.then76, %if.end69
  %50 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11111
  %51 = load i32, i32* %z, align 4, !dbg !11112
  %idx.ext = zext i32 %51 to i64, !dbg !11113
  %add.ptr = getelementptr %struct.descriptor, %struct.descriptor* %50, i64 %idx.ext, !dbg !11113
  %52 = load i32, i32* %payload_z, align 4, !dbg !11114
  %idx.ext96 = zext i32 %52 to i64, !dbg !11115
  %idx.neg = sub i64 0, %idx.ext96, !dbg !11115
  %add.ptr97 = getelementptr %struct.descriptor, %struct.descriptor* %add.ptr, i64 %idx.neg, !dbg !11115
  store %struct.descriptor* %add.ptr97, %struct.descriptor** %pd, align 8, !dbg !11116
  %53 = load i32, i32* %payload_index, align 4, !dbg !11117
  %54 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11118
  %payload_length98 = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %54, i32 0, i32 0, !dbg !11119
  %55 = load i16, i16* %payload_length98, align 4, !dbg !11119
  %conv99 = zext i16 %55 to i32, !dbg !11118
  %add100 = add i32 %53, %conv99, !dbg !11120
  store i32 %add100, i32* %payload_end_index, align 4, !dbg !11121
  store i32 0, i32* %i, align 4, !dbg !11122
  br label %for.cond, !dbg !11124

for.cond:                                         ; preds = %for.inc, %if.end95
  %56 = load i32, i32* %i, align 4, !dbg !11125
  %57 = load i32, i32* %payload_z, align 4, !dbg !11127
  %cmp101 = icmp ult i32 %56, %57, !dbg !11128
  br i1 %cmp101, label %for.body, label %for.end, !dbg !11129

for.body:                                         ; preds = %for.cond
  %58 = load i32, i32* %payload_index, align 4, !dbg !11130
  %shr103 = lshr i32 %58, 12, !dbg !11132
  store i32 %shr103, i32* %page, align 4, !dbg !11133
  %59 = load i32, i32* %payload_index, align 4, !dbg !11134
  %conv104 = zext i32 %59 to i64, !dbg !11134
  %and105 = and i64 %conv104, 4095, !dbg !11135
  %conv106 = trunc i64 %and105 to i32, !dbg !11134
  store i32 %conv106, i32* %offset, align 4, !dbg !11136
  %60 = load i32, i32* %page, align 4, !dbg !11137
  %add107 = add i32 %60, 1, !dbg !11138
  %shl108 = shl i32 %add107, 12, !dbg !11139
  store i32 %shl108, i32* %next_page_index, align 4, !dbg !11140
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x264, metadata !11141, metadata !DIExpression()), !dbg !11143
  %61 = load i32, i32* %next_page_index, align 4, !dbg !11143
  store i32 %61, i32* %__UNIQUE_ID___x264, align 4, !dbg !11143
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y265, metadata !11144, metadata !DIExpression()), !dbg !11143
  %62 = load i32, i32* %payload_end_index, align 4, !dbg !11143
  store i32 %62, i32* %__UNIQUE_ID___y265, align 4, !dbg !11143
  %63 = load i32, i32* %__UNIQUE_ID___x264, align 4, !dbg !11143
  %64 = load i32, i32* %__UNIQUE_ID___y265, align 4, !dbg !11143
  %cmp109 = icmp ult i32 %63, %64, !dbg !11143
  br i1 %cmp109, label %cond.true, label %cond.false, !dbg !11143

cond.true:                                        ; preds = %for.body
  %65 = load i32, i32* %__UNIQUE_ID___x264, align 4, !dbg !11143
  br label %cond.end, !dbg !11143

cond.false:                                       ; preds = %for.body
  %66 = load i32, i32* %__UNIQUE_ID___y265, align 4, !dbg !11143
  br label %cond.end, !dbg !11143

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %65, %cond.true ], [ %66, %cond.false ], !dbg !11143
  store i32 %cond, i32* %tmp, align 4, !dbg !11143
  %67 = load i32, i32* %tmp, align 4, !dbg !11143
  %68 = load i32, i32* %payload_index, align 4, !dbg !11145
  %sub111 = sub i32 %67, %68, !dbg !11146
  store i32 %sub111, i32* %length, align 4, !dbg !11147
  %69 = load i32, i32* %length, align 4, !dbg !11148
  %conv112 = trunc i32 %69 to i16, !dbg !11148
  %70 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !11149
  %71 = load i32, i32* %i, align 4, !dbg !11150
  %idxprom113 = sext i32 %71 to i64, !dbg !11149
  %arrayidx114 = getelementptr %struct.descriptor, %struct.descriptor* %70, i64 %idxprom113, !dbg !11149
  %req_count115 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx114, i32 0, i32 0, !dbg !11151
  store i16 %conv112, i16* %req_count115, align 16, !dbg !11152
  %72 = load %struct.fw_iso_buffer*, %struct.fw_iso_buffer** %buffer.addr, align 8, !dbg !11153
  %pages = getelementptr inbounds %struct.fw_iso_buffer, %struct.fw_iso_buffer* %72, i32 0, i32 1, !dbg !11153
  %73 = load %struct.page**, %struct.page*** %pages, align 8, !dbg !11153
  %74 = load i32, i32* %page, align 4, !dbg !11153
  %idxprom116 = sext i32 %74 to i64, !dbg !11153
  %arrayidx117 = getelementptr %struct.page*, %struct.page** %73, i64 %idxprom116, !dbg !11153
  %75 = load %struct.page*, %struct.page** %arrayidx117, align 8, !dbg !11153
  %76 = getelementptr inbounds %struct.page, %struct.page* %75, i32 0, i32 1, !dbg !11153
  %77 = bitcast %union.anon.2* %76 to %struct.anon.3*, !dbg !11153
  %private = getelementptr inbounds %struct.anon.3, %struct.anon.3* %77, i32 0, i32 3, !dbg !11153
  %78 = load i64, i64* %private, align 8, !dbg !11153
  store i64 %78, i64* %page_bus, align 8, !dbg !11154
  %79 = load i64, i64* %page_bus, align 8, !dbg !11155
  %80 = load i32, i32* %offset, align 4, !dbg !11155
  %conv118 = sext i32 %80 to i64, !dbg !11155
  %add119 = add i64 %79, %conv118, !dbg !11155
  %conv120 = trunc i64 %add119 to i32, !dbg !11155
  %81 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !11156
  %82 = load i32, i32* %i, align 4, !dbg !11157
  %idxprom121 = sext i32 %82 to i64, !dbg !11156
  %arrayidx122 = getelementptr %struct.descriptor, %struct.descriptor* %81, i64 %idxprom121, !dbg !11156
  %data_address123 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx122, i32 0, i32 2, !dbg !11158
  store i32 %conv120, i32* %data_address123, align 4, !dbg !11159
  %83 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11160
  %context124 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %83, i32 0, i32 1, !dbg !11161
  %ohci = getelementptr inbounds %struct.context, %struct.context* %context124, i32 0, i32 0, !dbg !11162
  %84 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !11162
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %84, i32 0, i32 0, !dbg !11163
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !11164
  %85 = load %struct.device*, %struct.device** %device, align 8, !dbg !11164
  %86 = load i64, i64* %page_bus, align 8, !dbg !11165
  %87 = load i32, i32* %offset, align 4, !dbg !11166
  %conv125 = sext i32 %87 to i64, !dbg !11166
  %88 = load i32, i32* %length, align 4, !dbg !11167
  %conv126 = sext i32 %88 to i64, !dbg !11167
  call void @dma_sync_single_range_for_device(%struct.device* %85, i64 %86, i64 %conv125, i64 %conv126, i32 1) #11, !dbg !11168
  %89 = load i32, i32* %length, align 4, !dbg !11169
  %90 = load i32, i32* %payload_index, align 4, !dbg !11170
  %add127 = add i32 %90, %89, !dbg !11170
  store i32 %add127, i32* %payload_index, align 4, !dbg !11170
  br label %for.inc, !dbg !11171

for.inc:                                          ; preds = %cond.end
  %91 = load i32, i32* %i, align 4, !dbg !11172
  %inc128 = add i32 %91, 1, !dbg !11172
  store i32 %inc128, i32* %i, align 4, !dbg !11172
  br label %for.cond, !dbg !11173, !llvm.loop !11174

for.end:                                          ; preds = %for.cond
  %92 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %p, align 8, !dbg !11176
  %interrupt = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %92, i32 0, i32 1, !dbg !11178
  %bf.load129 = load i16, i16* %interrupt, align 2, !dbg !11178
  %bf.clear130 = and i16 %bf.load129, 1, !dbg !11178
  %bf.cast131 = zext i16 %bf.clear130 to i32, !dbg !11178
  %tobool132 = icmp ne i32 %bf.cast131, 0, !dbg !11176
  br i1 %tobool132, label %if.then133, label %if.else134, !dbg !11179

if.then133:                                       ; preds = %for.end
  store i32 48, i32* %irq, align 4, !dbg !11180
  br label %if.end135, !dbg !11181

if.else134:                                       ; preds = %for.end
  store i32 0, i32* %irq, align 4, !dbg !11182
  br label %if.end135

if.end135:                                        ; preds = %if.else134, %if.then133
  %93 = load i32, i32* %z, align 4, !dbg !11183
  %cmp136 = icmp eq i32 %93, 2, !dbg !11184
  br i1 %cmp136, label %cond.true138, label %cond.false139, !dbg !11183

cond.true138:                                     ; preds = %if.end135
  %94 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11185
  br label %cond.end143, !dbg !11183

cond.false139:                                    ; preds = %if.end135
  %95 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11186
  %96 = load i32, i32* %z, align 4, !dbg !11187
  %idx.ext140 = zext i32 %96 to i64, !dbg !11188
  %add.ptr141 = getelementptr %struct.descriptor, %struct.descriptor* %95, i64 %idx.ext140, !dbg !11188
  %add.ptr142 = getelementptr %struct.descriptor, %struct.descriptor* %add.ptr141, i64 -1, !dbg !11189
  br label %cond.end143, !dbg !11183

cond.end143:                                      ; preds = %cond.false139, %cond.true138
  %cond144 = phi %struct.descriptor* [ %94, %cond.true138 ], [ %add.ptr142, %cond.false139 ], !dbg !11183
  store %struct.descriptor* %cond144, %struct.descriptor** %last, align 8, !dbg !11190
  %97 = load i32, i32* %irq, align 4, !dbg !11191
  %or145 = or i32 6156, %97, !dbg !11191
  %conv146 = trunc i32 %or145 to i16, !dbg !11191
  %conv147 = zext i16 %conv146 to i32, !dbg !11191
  %98 = load %struct.descriptor*, %struct.descriptor** %last, align 8, !dbg !11192
  %control148 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %98, i32 0, i32 1, !dbg !11193
  %99 = load i16, i16* %control148, align 2, !dbg !11194
  %conv149 = zext i16 %99 to i32, !dbg !11194
  %or150 = or i32 %conv149, %conv147, !dbg !11194
  %conv151 = trunc i32 %or150 to i16, !dbg !11194
  store i16 %conv151, i16* %control148, align 2, !dbg !11194
  %100 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11195
  %context152 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %100, i32 0, i32 1, !dbg !11196
  %101 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11197
  %102 = load i32, i32* %z, align 4, !dbg !11198
  %103 = load i32, i32* %header_z, align 4, !dbg !11199
  call void @context_append(%struct.context* %context152, %struct.descriptor* %101, i32 %102, i32 %103) #11, !dbg !11200
  store i32 0, i32* %retval, align 4, !dbg !11201
  br label %return, !dbg !11201

return:                                           ; preds = %cond.end143, %if.then29
  %104 = load i32, i32* %retval, align 4, !dbg !11202
  ret i32 %104, !dbg !11202
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @queue_iso_packet_per_buffer(%struct.iso_context* %ctx, %struct.fw_iso_packet* %packet, %struct.fw_iso_buffer* %buffer, i64 %payload) #2 !dbg !11203 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.iso_context*, align 8
  %packet.addr = alloca %struct.fw_iso_packet*, align 8
  %buffer.addr = alloca %struct.fw_iso_buffer*, align 8
  %payload.addr = alloca i64, align 8
  %device = alloca %struct.device*, align 8
  %d = alloca %struct.descriptor*, align 8
  %pd = alloca %struct.descriptor*, align 8
  %d_bus = alloca i64, align 8
  %page_bus = alloca i64, align 8
  %z = alloca i32, align 4
  %header_z = alloca i32, align 4
  %rest = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %length = alloca i32, align 4
  %page = alloca i32, align 4
  %offset = alloca i32, align 4
  %packet_count = alloca i32, align 4
  %header_size = alloca i32, align 4
  %payload_per_buffer = alloca i32, align 4
  %__UNIQUE_ID___x266 = alloca i64, align 8
  %__UNIQUE_ID___y267 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.iso_context* %ctx, %struct.iso_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx.addr, metadata !11204, metadata !DIExpression()), !dbg !11205
  store %struct.fw_iso_packet* %packet, %struct.fw_iso_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_packet** %packet.addr, metadata !11206, metadata !DIExpression()), !dbg !11207
  store %struct.fw_iso_buffer* %buffer, %struct.fw_iso_buffer** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_buffer** %buffer.addr, metadata !11208, metadata !DIExpression()), !dbg !11209
  store i64 %payload, i64* %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %payload.addr, metadata !11210, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.declare(metadata %struct.device** %device, metadata !11212, metadata !DIExpression()), !dbg !11213
  %0 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11214
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %0, i32 0, i32 1, !dbg !11215
  %ohci = getelementptr inbounds %struct.context, %struct.context* %context, i32 0, i32 0, !dbg !11216
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !11216
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 0, !dbg !11217
  %device1 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !11218
  %2 = load %struct.device*, %struct.device** %device1, align 8, !dbg !11218
  store %struct.device* %2, %struct.device** %device, align 8, !dbg !11213
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d, metadata !11219, metadata !DIExpression()), !dbg !11220
  call void @llvm.dbg.declare(metadata %struct.descriptor** %pd, metadata !11221, metadata !DIExpression()), !dbg !11222
  call void @llvm.dbg.declare(metadata i64* %d_bus, metadata !11223, metadata !DIExpression()), !dbg !11224
  call void @llvm.dbg.declare(metadata i64* %page_bus, metadata !11225, metadata !DIExpression()), !dbg !11226
  call void @llvm.dbg.declare(metadata i32* %z, metadata !11227, metadata !DIExpression()), !dbg !11228
  call void @llvm.dbg.declare(metadata i32* %header_z, metadata !11229, metadata !DIExpression()), !dbg !11230
  call void @llvm.dbg.declare(metadata i32* %rest, metadata !11231, metadata !DIExpression()), !dbg !11232
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11233, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11235, metadata !DIExpression()), !dbg !11236
  call void @llvm.dbg.declare(metadata i32* %length, metadata !11237, metadata !DIExpression()), !dbg !11238
  call void @llvm.dbg.declare(metadata i32* %page, metadata !11239, metadata !DIExpression()), !dbg !11240
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11241, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.declare(metadata i32* %packet_count, metadata !11243, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.declare(metadata i32* %header_size, metadata !11245, metadata !DIExpression()), !dbg !11246
  call void @llvm.dbg.declare(metadata i32* %payload_per_buffer, metadata !11247, metadata !DIExpression()), !dbg !11248
  %3 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %packet.addr, align 8, !dbg !11249
  %header_length = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %3, i32 0, i32 1, !dbg !11250
  %bf.load = load i16, i16* %header_length, align 2, !dbg !11250
  %bf.lshr = lshr i16 %bf.load, 8, !dbg !11250
  %bf.cast = zext i16 %bf.lshr to i32, !dbg !11250
  %conv = zext i32 %bf.cast to i64, !dbg !11249
  %4 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11251
  %base = getelementptr inbounds %struct.iso_context, %struct.iso_context* %4, i32 0, i32 0, !dbg !11252
  %header_size2 = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base, i32 0, i32 5, !dbg !11253
  %5 = load i64, i64* %header_size2, align 8, !dbg !11253
  %div = udiv i64 %conv, %5, !dbg !11254
  %conv3 = trunc i64 %div to i32, !dbg !11249
  store i32 %conv3, i32* %packet_count, align 4, !dbg !11255
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x266, metadata !11256, metadata !DIExpression()), !dbg !11258
  %6 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11258
  %base4 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %6, i32 0, i32 0, !dbg !11258
  %header_size5 = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base4, i32 0, i32 5, !dbg !11258
  %7 = load i64, i64* %header_size5, align 8, !dbg !11258
  store i64 %7, i64* %__UNIQUE_ID___x266, align 8, !dbg !11258
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y267, metadata !11259, metadata !DIExpression()), !dbg !11258
  store i64 8, i64* %__UNIQUE_ID___y267, align 8, !dbg !11258
  %8 = load i64, i64* %__UNIQUE_ID___x266, align 8, !dbg !11258
  %9 = load i64, i64* %__UNIQUE_ID___y267, align 8, !dbg !11258
  %cmp = icmp ugt i64 %8, %9, !dbg !11258
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11258

cond.true:                                        ; preds = %entry
  %10 = load i64, i64* %__UNIQUE_ID___x266, align 8, !dbg !11258
  br label %cond.end, !dbg !11258

cond.false:                                       ; preds = %entry
  %11 = load i64, i64* %__UNIQUE_ID___y267, align 8, !dbg !11258
  br label %cond.end, !dbg !11258

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !11258
  store i64 %cond, i64* %tmp, align 8, !dbg !11258
  %12 = load i64, i64* %tmp, align 8, !dbg !11258
  %conv7 = trunc i64 %12 to i32, !dbg !11260
  store i32 %conv7, i32* %header_size, align 4, !dbg !11261
  %13 = load i32, i32* %header_size, align 4, !dbg !11262
  %conv8 = sext i32 %13 to i64, !dbg !11262
  %add = add i64 %conv8, 16, !dbg !11262
  %sub = sub i64 %add, 1, !dbg !11262
  %div9 = udiv i64 %sub, 16, !dbg !11262
  %conv10 = trunc i64 %div9 to i32, !dbg !11262
  store i32 %conv10, i32* %header_z, align 4, !dbg !11263
  %14 = load i64, i64* %payload.addr, align 8, !dbg !11264
  %shr = lshr i64 %14, 12, !dbg !11265
  %conv11 = trunc i64 %shr to i32, !dbg !11264
  store i32 %conv11, i32* %page, align 4, !dbg !11266
  %15 = load i64, i64* %payload.addr, align 8, !dbg !11267
  %and = and i64 %15, 4095, !dbg !11268
  %conv12 = trunc i64 %and to i32, !dbg !11267
  store i32 %conv12, i32* %offset, align 4, !dbg !11269
  %16 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %packet.addr, align 8, !dbg !11270
  %payload_length = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %16, i32 0, i32 0, !dbg !11271
  %17 = load i16, i16* %payload_length, align 4, !dbg !11271
  %conv13 = zext i16 %17 to i32, !dbg !11270
  %18 = load i32, i32* %packet_count, align 4, !dbg !11272
  %div14 = sdiv i32 %conv13, %18, !dbg !11273
  store i32 %div14, i32* %payload_per_buffer, align 4, !dbg !11274
  store i32 0, i32* %i, align 4, !dbg !11275
  br label %for.cond, !dbg !11277

for.cond:                                         ; preds = %for.inc94, %cond.end
  %19 = load i32, i32* %i, align 4, !dbg !11278
  %20 = load i32, i32* %packet_count, align 4, !dbg !11280
  %cmp15 = icmp slt i32 %19, %20, !dbg !11281
  br i1 %cmp15, label %for.body, label %for.end96, !dbg !11282

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %payload_per_buffer, align 4, !dbg !11283
  %22 = load i32, i32* %offset, align 4, !dbg !11283
  %add17 = add i32 %21, %22, !dbg !11283
  %conv18 = sext i32 %add17 to i64, !dbg !11283
  %add19 = add i64 %conv18, 4096, !dbg !11283
  %sub20 = sub i64 %add19, 1, !dbg !11283
  %div21 = udiv i64 %sub20, 4096, !dbg !11283
  %add22 = add i64 %div21, 1, !dbg !11285
  %conv23 = trunc i64 %add22 to i32, !dbg !11283
  store i32 %conv23, i32* %z, align 4, !dbg !11286
  %23 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11287
  %context24 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %23, i32 0, i32 1, !dbg !11288
  %24 = load i32, i32* %z, align 4, !dbg !11289
  %25 = load i32, i32* %header_z, align 4, !dbg !11290
  %add25 = add i32 %24, %25, !dbg !11291
  %call = call %struct.descriptor* @context_get_descriptors(%struct.context* %context24, i32 %add25, i64* %d_bus) #11, !dbg !11292
  store %struct.descriptor* %call, %struct.descriptor** %d, align 8, !dbg !11293
  %26 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11294
  %cmp26 = icmp eq %struct.descriptor* %26, null, !dbg !11296
  br i1 %cmp26, label %if.then, label %if.end, !dbg !11297

if.then:                                          ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !11298
  br label %return, !dbg !11298

if.end:                                           ; preds = %for.body
  %27 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11299
  %control = getelementptr inbounds %struct.descriptor, %struct.descriptor* %27, i32 0, i32 1, !dbg !11300
  store i16 10240, i16* %control, align 2, !dbg !11301
  %28 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %packet.addr, align 8, !dbg !11302
  %skip = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %28, i32 0, i32 1, !dbg !11304
  %bf.load28 = load i16, i16* %skip, align 2, !dbg !11304
  %bf.lshr29 = lshr i16 %bf.load28, 1, !dbg !11304
  %bf.clear = and i16 %bf.lshr29, 1, !dbg !11304
  %bf.cast30 = zext i16 %bf.clear to i32, !dbg !11304
  %tobool = icmp ne i32 %bf.cast30, 0, !dbg !11302
  br i1 %tobool, label %land.lhs.true, label %if.end37, !dbg !11305

land.lhs.true:                                    ; preds = %if.end
  %29 = load i32, i32* %i, align 4, !dbg !11306
  %cmp31 = icmp eq i32 %29, 0, !dbg !11307
  br i1 %cmp31, label %if.then33, label %if.end37, !dbg !11308

if.then33:                                        ; preds = %land.lhs.true
  %30 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11309
  %control34 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %30, i32 0, i32 1, !dbg !11310
  %31 = load i16, i16* %control34, align 2, !dbg !11311
  %conv35 = zext i16 %31 to i32, !dbg !11311
  %or = or i32 %conv35, 3, !dbg !11311
  %conv36 = trunc i32 %or to i16, !dbg !11311
  store i16 %conv36, i16* %control34, align 2, !dbg !11311
  br label %if.end37, !dbg !11309

if.end37:                                         ; preds = %if.then33, %land.lhs.true, %if.end
  %32 = load i32, i32* %header_size, align 4, !dbg !11312
  %conv38 = trunc i32 %32 to i16, !dbg !11312
  %33 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11313
  %req_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %33, i32 0, i32 0, !dbg !11314
  store i16 %conv38, i16* %req_count, align 16, !dbg !11315
  %34 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11316
  %req_count39 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %34, i32 0, i32 0, !dbg !11317
  %35 = load i16, i16* %req_count39, align 16, !dbg !11317
  %36 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11318
  %res_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %36, i32 0, i32 4, !dbg !11319
  store i16 %35, i16* %res_count, align 4, !dbg !11320
  %37 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11321
  %transfer_status = getelementptr inbounds %struct.descriptor, %struct.descriptor* %37, i32 0, i32 5, !dbg !11322
  store i16 0, i16* %transfer_status, align 2, !dbg !11323
  %38 = load i64, i64* %d_bus, align 8, !dbg !11324
  %39 = load i32, i32* %z, align 4, !dbg !11324
  %conv40 = zext i32 %39 to i64, !dbg !11324
  %mul = mul i64 %conv40, 16, !dbg !11324
  %add41 = add i64 %38, %mul, !dbg !11324
  %conv42 = trunc i64 %add41 to i32, !dbg !11324
  %40 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11325
  %data_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %40, i32 0, i32 2, !dbg !11326
  store i32 %conv42, i32* %data_address, align 4, !dbg !11327
  %41 = load i32, i32* %payload_per_buffer, align 4, !dbg !11328
  store i32 %41, i32* %rest, align 4, !dbg !11329
  %42 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11330
  store %struct.descriptor* %42, %struct.descriptor** %pd, align 8, !dbg !11331
  store i32 1, i32* %j, align 4, !dbg !11332
  br label %for.cond43, !dbg !11334

for.cond43:                                       ; preds = %for.inc, %if.end37
  %43 = load i32, i32* %j, align 4, !dbg !11335
  %44 = load i32, i32* %z, align 4, !dbg !11337
  %cmp44 = icmp ult i32 %43, %44, !dbg !11338
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !11339

for.body46:                                       ; preds = %for.cond43
  %45 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !11340
  %incdec.ptr = getelementptr %struct.descriptor, %struct.descriptor* %45, i32 1, !dbg !11340
  store %struct.descriptor* %incdec.ptr, %struct.descriptor** %pd, align 8, !dbg !11340
  %46 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !11342
  %control47 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %46, i32 0, i32 1, !dbg !11343
  store i16 10240, i16* %control47, align 2, !dbg !11344
  %47 = load i32, i32* %offset, align 4, !dbg !11345
  %48 = load i32, i32* %rest, align 4, !dbg !11347
  %add48 = add i32 %47, %48, !dbg !11348
  %conv49 = zext i32 %add48 to i64, !dbg !11345
  %cmp50 = icmp ult i64 %conv49, 4096, !dbg !11349
  br i1 %cmp50, label %if.then52, label %if.else, !dbg !11350

if.then52:                                        ; preds = %for.body46
  %49 = load i32, i32* %rest, align 4, !dbg !11351
  store i32 %49, i32* %length, align 4, !dbg !11352
  br label %if.end56, !dbg !11353

if.else:                                          ; preds = %for.body46
  %50 = load i32, i32* %offset, align 4, !dbg !11354
  %conv53 = sext i32 %50 to i64, !dbg !11354
  %sub54 = sub i64 4096, %conv53, !dbg !11355
  %conv55 = trunc i64 %sub54 to i32, !dbg !11356
  store i32 %conv55, i32* %length, align 4, !dbg !11357
  br label %if.end56

if.end56:                                         ; preds = %if.else, %if.then52
  %51 = load i32, i32* %length, align 4, !dbg !11358
  %conv57 = trunc i32 %51 to i16, !dbg !11358
  %52 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !11359
  %req_count58 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %52, i32 0, i32 0, !dbg !11360
  store i16 %conv57, i16* %req_count58, align 16, !dbg !11361
  %53 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !11362
  %req_count59 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %53, i32 0, i32 0, !dbg !11363
  %54 = load i16, i16* %req_count59, align 16, !dbg !11363
  %55 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !11364
  %res_count60 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %55, i32 0, i32 4, !dbg !11365
  store i16 %54, i16* %res_count60, align 4, !dbg !11366
  %56 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !11367
  %transfer_status61 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %56, i32 0, i32 5, !dbg !11368
  store i16 0, i16* %transfer_status61, align 2, !dbg !11369
  %57 = load %struct.fw_iso_buffer*, %struct.fw_iso_buffer** %buffer.addr, align 8, !dbg !11370
  %pages = getelementptr inbounds %struct.fw_iso_buffer, %struct.fw_iso_buffer* %57, i32 0, i32 1, !dbg !11370
  %58 = load %struct.page**, %struct.page*** %pages, align 8, !dbg !11370
  %59 = load i32, i32* %page, align 4, !dbg !11370
  %idxprom = sext i32 %59 to i64, !dbg !11370
  %arrayidx = getelementptr %struct.page*, %struct.page** %58, i64 %idxprom, !dbg !11370
  %60 = load %struct.page*, %struct.page** %arrayidx, align 8, !dbg !11370
  %61 = getelementptr inbounds %struct.page, %struct.page* %60, i32 0, i32 1, !dbg !11370
  %62 = bitcast %union.anon.2* %61 to %struct.anon.3*, !dbg !11370
  %private = getelementptr inbounds %struct.anon.3, %struct.anon.3* %62, i32 0, i32 3, !dbg !11370
  %63 = load i64, i64* %private, align 8, !dbg !11370
  store i64 %63, i64* %page_bus, align 8, !dbg !11371
  %64 = load i64, i64* %page_bus, align 8, !dbg !11372
  %65 = load i32, i32* %offset, align 4, !dbg !11372
  %conv62 = sext i32 %65 to i64, !dbg !11372
  %add63 = add i64 %64, %conv62, !dbg !11372
  %conv64 = trunc i64 %add63 to i32, !dbg !11372
  %66 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !11373
  %data_address65 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %66, i32 0, i32 2, !dbg !11374
  store i32 %conv64, i32* %data_address65, align 4, !dbg !11375
  %67 = load %struct.device*, %struct.device** %device, align 8, !dbg !11376
  %68 = load i64, i64* %page_bus, align 8, !dbg !11377
  %69 = load i32, i32* %offset, align 4, !dbg !11378
  %conv66 = sext i32 %69 to i64, !dbg !11378
  %70 = load i32, i32* %length, align 4, !dbg !11379
  %conv67 = sext i32 %70 to i64, !dbg !11379
  call void @dma_sync_single_range_for_device(%struct.device* %67, i64 %68, i64 %conv66, i64 %conv67, i32 2) #11, !dbg !11380
  %71 = load i32, i32* %offset, align 4, !dbg !11381
  %72 = load i32, i32* %length, align 4, !dbg !11382
  %add68 = add i32 %71, %72, !dbg !11383
  %conv69 = sext i32 %add68 to i64, !dbg !11384
  %and70 = and i64 %conv69, 4095, !dbg !11385
  %conv71 = trunc i64 %and70 to i32, !dbg !11384
  store i32 %conv71, i32* %offset, align 4, !dbg !11386
  %73 = load i32, i32* %length, align 4, !dbg !11387
  %74 = load i32, i32* %rest, align 4, !dbg !11388
  %sub72 = sub i32 %74, %73, !dbg !11388
  store i32 %sub72, i32* %rest, align 4, !dbg !11388
  %75 = load i32, i32* %offset, align 4, !dbg !11389
  %cmp73 = icmp eq i32 %75, 0, !dbg !11391
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !11392

if.then75:                                        ; preds = %if.end56
  %76 = load i32, i32* %page, align 4, !dbg !11393
  %inc = add i32 %76, 1, !dbg !11393
  store i32 %inc, i32* %page, align 4, !dbg !11393
  br label %if.end76, !dbg !11394

if.end76:                                         ; preds = %if.then75, %if.end56
  br label %for.inc, !dbg !11395

for.inc:                                          ; preds = %if.end76
  %77 = load i32, i32* %j, align 4, !dbg !11396
  %inc77 = add i32 %77, 1, !dbg !11396
  store i32 %inc77, i32* %j, align 4, !dbg !11396
  br label %for.cond43, !dbg !11397, !llvm.loop !11398

for.end:                                          ; preds = %for.cond43
  %78 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !11400
  %control78 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %78, i32 0, i32 1, !dbg !11401
  store i16 14348, i16* %control78, align 2, !dbg !11402
  %79 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %packet.addr, align 8, !dbg !11403
  %interrupt = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %79, i32 0, i32 1, !dbg !11405
  %bf.load79 = load i16, i16* %interrupt, align 2, !dbg !11405
  %bf.clear80 = and i16 %bf.load79, 1, !dbg !11405
  %bf.cast81 = zext i16 %bf.clear80 to i32, !dbg !11405
  %tobool82 = icmp ne i32 %bf.cast81, 0, !dbg !11403
  br i1 %tobool82, label %land.lhs.true83, label %if.end92, !dbg !11406

land.lhs.true83:                                  ; preds = %for.end
  %80 = load i32, i32* %i, align 4, !dbg !11407
  %81 = load i32, i32* %packet_count, align 4, !dbg !11408
  %sub84 = sub i32 %81, 1, !dbg !11409
  %cmp85 = icmp eq i32 %80, %sub84, !dbg !11410
  br i1 %cmp85, label %if.then87, label %if.end92, !dbg !11411

if.then87:                                        ; preds = %land.lhs.true83
  %82 = load %struct.descriptor*, %struct.descriptor** %pd, align 8, !dbg !11412
  %control88 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %82, i32 0, i32 1, !dbg !11413
  %83 = load i16, i16* %control88, align 2, !dbg !11414
  %conv89 = zext i16 %83 to i32, !dbg !11414
  %or90 = or i32 %conv89, 48, !dbg !11414
  %conv91 = trunc i32 %or90 to i16, !dbg !11414
  store i16 %conv91, i16* %control88, align 2, !dbg !11414
  br label %if.end92, !dbg !11412

if.end92:                                         ; preds = %if.then87, %land.lhs.true83, %for.end
  %84 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11415
  %context93 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %84, i32 0, i32 1, !dbg !11416
  %85 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11417
  %86 = load i32, i32* %z, align 4, !dbg !11418
  %87 = load i32, i32* %header_z, align 4, !dbg !11419
  call void @context_append(%struct.context* %context93, %struct.descriptor* %85, i32 %86, i32 %87) #11, !dbg !11420
  br label %for.inc94, !dbg !11421

for.inc94:                                        ; preds = %if.end92
  %88 = load i32, i32* %i, align 4, !dbg !11422
  %inc95 = add i32 %88, 1, !dbg !11422
  store i32 %inc95, i32* %i, align 4, !dbg !11422
  br label %for.cond, !dbg !11423, !llvm.loop !11424

for.end96:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !11426
  br label %return, !dbg !11426

return:                                           ; preds = %for.end96, %if.then
  %89 = load i32, i32* %retval, align 4, !dbg !11427
  ret i32 %89, !dbg !11427
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @queue_iso_buffer_fill(%struct.iso_context* %ctx, %struct.fw_iso_packet* %packet, %struct.fw_iso_buffer* %buffer, i64 %payload) #2 !dbg !11428 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.iso_context*, align 8
  %packet.addr = alloca %struct.fw_iso_packet*, align 8
  %buffer.addr = alloca %struct.fw_iso_buffer*, align 8
  %payload.addr = alloca i64, align 8
  %d = alloca %struct.descriptor*, align 8
  %d_bus = alloca i64, align 8
  %page_bus = alloca i64, align 8
  %page = alloca i32, align 4
  %offset = alloca i32, align 4
  %rest = alloca i32, align 4
  %z = alloca i32, align 4
  %i = alloca i32, align 4
  %length = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.iso_context* %ctx, %struct.iso_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx.addr, metadata !11429, metadata !DIExpression()), !dbg !11430
  store %struct.fw_iso_packet* %packet, %struct.fw_iso_packet** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_packet** %packet.addr, metadata !11431, metadata !DIExpression()), !dbg !11432
  store %struct.fw_iso_buffer* %buffer, %struct.fw_iso_buffer** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_iso_buffer** %buffer.addr, metadata !11433, metadata !DIExpression()), !dbg !11434
  store i64 %payload, i64* %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %payload.addr, metadata !11435, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d, metadata !11437, metadata !DIExpression()), !dbg !11438
  call void @llvm.dbg.declare(metadata i64* %d_bus, metadata !11439, metadata !DIExpression()), !dbg !11440
  call void @llvm.dbg.declare(metadata i64* %page_bus, metadata !11441, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.declare(metadata i32* %page, metadata !11443, metadata !DIExpression()), !dbg !11444
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11445, metadata !DIExpression()), !dbg !11446
  call void @llvm.dbg.declare(metadata i32* %rest, metadata !11447, metadata !DIExpression()), !dbg !11448
  call void @llvm.dbg.declare(metadata i32* %z, metadata !11449, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11451, metadata !DIExpression()), !dbg !11452
  call void @llvm.dbg.declare(metadata i32* %length, metadata !11453, metadata !DIExpression()), !dbg !11454
  %0 = load i64, i64* %payload.addr, align 8, !dbg !11455
  %shr = lshr i64 %0, 12, !dbg !11456
  %conv = trunc i64 %shr to i32, !dbg !11455
  store i32 %conv, i32* %page, align 4, !dbg !11457
  %1 = load i64, i64* %payload.addr, align 8, !dbg !11458
  %and = and i64 %1, 4095, !dbg !11459
  %conv1 = trunc i64 %and to i32, !dbg !11458
  store i32 %conv1, i32* %offset, align 4, !dbg !11460
  %2 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %packet.addr, align 8, !dbg !11461
  %payload_length = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %2, i32 0, i32 0, !dbg !11462
  %3 = load i16, i16* %payload_length, align 4, !dbg !11462
  %conv2 = zext i16 %3 to i32, !dbg !11461
  store i32 %conv2, i32* %rest, align 4, !dbg !11463
  %4 = load i32, i32* %offset, align 4, !dbg !11464
  %5 = load i32, i32* %rest, align 4, !dbg !11464
  %add = add i32 %4, %5, !dbg !11464
  %conv3 = sext i32 %add to i64, !dbg !11464
  %add4 = add i64 %conv3, 4096, !dbg !11464
  %sub = sub i64 %add4, 1, !dbg !11464
  %div = udiv i64 %sub, 4096, !dbg !11464
  %conv5 = trunc i64 %div to i32, !dbg !11464
  store i32 %conv5, i32* %z, align 4, !dbg !11465
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11466, metadata !DIExpression()), !dbg !11469
  %6 = load i32, i32* %offset, align 4, !dbg !11469
  %and6 = and i32 %6, 3, !dbg !11469
  %tobool = icmp ne i32 %and6, 0, !dbg !11469
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !11469

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32, i32* %rest, align 4, !dbg !11469
  %and7 = and i32 %7, 3, !dbg !11469
  %tobool8 = icmp ne i32 %and7, 0, !dbg !11469
  br i1 %tobool8, label %lor.end, label %lor.rhs, !dbg !11469

lor.rhs:                                          ; preds = %lor.lhs.false
  %8 = load i32, i32* %page, align 4, !dbg !11469
  %9 = load i32, i32* %z, align 4, !dbg !11469
  %add9 = add i32 %8, %9, !dbg !11469
  %10 = load %struct.fw_iso_buffer*, %struct.fw_iso_buffer** %buffer.addr, align 8, !dbg !11469
  %page_count = getelementptr inbounds %struct.fw_iso_buffer, %struct.fw_iso_buffer* %10, i32 0, i32 2, !dbg !11469
  %11 = load i32, i32* %page_count, align 8, !dbg !11469
  %cmp = icmp sgt i32 %add9, %11, !dbg !11469
  br label %lor.end, !dbg !11469

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %12 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp, %lor.rhs ]
  %lnot = xor i1 %12, true, !dbg !11469
  %lnot11 = xor i1 %lnot, true, !dbg !11469
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !11469
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11469
  %13 = load i32, i32* %__ret_warn_on, align 4, !dbg !11470
  %tobool12 = icmp ne i32 %13, 0, !dbg !11470
  %lnot13 = xor i1 %tobool12, true, !dbg !11470
  %lnot15 = xor i1 %lnot13, true, !dbg !11470
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !11470
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !11470
  %tobool18 = icmp ne i64 %conv17, 0, !dbg !11470
  br i1 %tobool18, label %if.then, label %if.end, !dbg !11469

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !11470

do.body:                                          ; preds = %if.then
  br label %do.body19, !dbg !11472

do.body19:                                        ; preds = %do.body
  br label %do.end, !dbg !11474

do.end:                                           ; preds = %do.body19
  br label %do.body20, !dbg !11472

do.body20:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.62, i64 0, i64 0), i32 3389, i32 2305, i64 12) #10, !dbg !11476, !srcloc !11478
  br label %do.end21, !dbg !11476

do.end21:                                         ; preds = %do.body20
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 268) #10, !dbg !11479, !srcloc !11481
  br label %do.body22, !dbg !11472

do.body22:                                        ; preds = %do.end21
  br label %do.end23, !dbg !11482

do.end23:                                         ; preds = %do.body22
  br label %do.end24, !dbg !11472

do.end24:                                         ; preds = %do.end23
  br label %if.end, !dbg !11472

if.end:                                           ; preds = %do.end24, %lor.end
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !11469
  %tobool25 = icmp ne i32 %14, 0, !dbg !11469
  %lnot26 = xor i1 %tobool25, true, !dbg !11469
  %lnot28 = xor i1 %lnot26, true, !dbg !11469
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !11469
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !11469
  store i64 %conv30, i64* %tmp, align 8, !dbg !11470
  %15 = load i64, i64* %tmp, align 8, !dbg !11469
  %tobool31 = icmp ne i64 %15, 0, !dbg !11484
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !11485

if.then32:                                        ; preds = %if.end
  store i32 -14, i32* %retval, align 4, !dbg !11486
  br label %return, !dbg !11486

if.end33:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !11487
  br label %for.cond, !dbg !11489

for.cond:                                         ; preds = %for.inc, %if.end33
  %16 = load i32, i32* %i, align 4, !dbg !11490
  %17 = load i32, i32* %z, align 4, !dbg !11492
  %cmp34 = icmp slt i32 %16, %17, !dbg !11493
  br i1 %cmp34, label %for.body, label %for.end, !dbg !11494

for.body:                                         ; preds = %for.cond
  %18 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11495
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %18, i32 0, i32 1, !dbg !11497
  %call = call %struct.descriptor* @context_get_descriptors(%struct.context* %context, i32 1, i64* %d_bus) #11, !dbg !11498
  store %struct.descriptor* %call, %struct.descriptor** %d, align 8, !dbg !11499
  %19 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11500
  %cmp36 = icmp eq %struct.descriptor* %19, null, !dbg !11502
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !11503

if.then38:                                        ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !11504
  br label %return, !dbg !11504

if.end39:                                         ; preds = %for.body
  %20 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11505
  %control = getelementptr inbounds %struct.descriptor, %struct.descriptor* %20, i32 0, i32 1, !dbg !11506
  store i16 8204, i16* %control, align 2, !dbg !11507
  %21 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %packet.addr, align 8, !dbg !11508
  %skip = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %21, i32 0, i32 1, !dbg !11510
  %bf.load = load i16, i16* %skip, align 2, !dbg !11510
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !11510
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11510
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11510
  %tobool40 = icmp ne i32 %bf.cast, 0, !dbg !11508
  br i1 %tobool40, label %land.lhs.true, label %if.end47, !dbg !11511

land.lhs.true:                                    ; preds = %if.end39
  %22 = load i32, i32* %i, align 4, !dbg !11512
  %cmp41 = icmp eq i32 %22, 0, !dbg !11513
  br i1 %cmp41, label %if.then43, label %if.end47, !dbg !11514

if.then43:                                        ; preds = %land.lhs.true
  %23 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11515
  %control44 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %23, i32 0, i32 1, !dbg !11516
  %24 = load i16, i16* %control44, align 2, !dbg !11517
  %conv45 = zext i16 %24 to i32, !dbg !11517
  %or = or i32 %conv45, 3, !dbg !11517
  %conv46 = trunc i32 %or to i16, !dbg !11517
  store i16 %conv46, i16* %control44, align 2, !dbg !11517
  br label %if.end47, !dbg !11515

if.end47:                                         ; preds = %if.then43, %land.lhs.true, %if.end39
  %25 = load %struct.fw_iso_packet*, %struct.fw_iso_packet** %packet.addr, align 8, !dbg !11518
  %interrupt = getelementptr inbounds %struct.fw_iso_packet, %struct.fw_iso_packet* %25, i32 0, i32 1, !dbg !11520
  %bf.load48 = load i16, i16* %interrupt, align 2, !dbg !11520
  %bf.clear49 = and i16 %bf.load48, 1, !dbg !11520
  %bf.cast50 = zext i16 %bf.clear49 to i32, !dbg !11520
  %tobool51 = icmp ne i32 %bf.cast50, 0, !dbg !11518
  br i1 %tobool51, label %land.lhs.true52, label %if.end61, !dbg !11521

land.lhs.true52:                                  ; preds = %if.end47
  %26 = load i32, i32* %i, align 4, !dbg !11522
  %27 = load i32, i32* %z, align 4, !dbg !11523
  %sub53 = sub i32 %27, 1, !dbg !11524
  %cmp54 = icmp eq i32 %26, %sub53, !dbg !11525
  br i1 %cmp54, label %if.then56, label %if.end61, !dbg !11526

if.then56:                                        ; preds = %land.lhs.true52
  %28 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11527
  %control57 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %28, i32 0, i32 1, !dbg !11528
  %29 = load i16, i16* %control57, align 2, !dbg !11529
  %conv58 = zext i16 %29 to i32, !dbg !11529
  %or59 = or i32 %conv58, 48, !dbg !11529
  %conv60 = trunc i32 %or59 to i16, !dbg !11529
  store i16 %conv60, i16* %control57, align 2, !dbg !11529
  br label %if.end61, !dbg !11527

if.end61:                                         ; preds = %if.then56, %land.lhs.true52, %if.end47
  %30 = load i32, i32* %offset, align 4, !dbg !11530
  %31 = load i32, i32* %rest, align 4, !dbg !11532
  %add62 = add i32 %30, %31, !dbg !11533
  %conv63 = sext i32 %add62 to i64, !dbg !11530
  %cmp64 = icmp ult i64 %conv63, 4096, !dbg !11534
  br i1 %cmp64, label %if.then66, label %if.else, !dbg !11535

if.then66:                                        ; preds = %if.end61
  %32 = load i32, i32* %rest, align 4, !dbg !11536
  store i32 %32, i32* %length, align 4, !dbg !11537
  br label %if.end70, !dbg !11538

if.else:                                          ; preds = %if.end61
  %33 = load i32, i32* %offset, align 4, !dbg !11539
  %conv67 = sext i32 %33 to i64, !dbg !11539
  %sub68 = sub i64 4096, %conv67, !dbg !11540
  %conv69 = trunc i64 %sub68 to i32, !dbg !11541
  store i32 %conv69, i32* %length, align 4, !dbg !11542
  br label %if.end70

if.end70:                                         ; preds = %if.else, %if.then66
  %34 = load i32, i32* %length, align 4, !dbg !11543
  %conv71 = trunc i32 %34 to i16, !dbg !11543
  %35 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11544
  %req_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %35, i32 0, i32 0, !dbg !11545
  store i16 %conv71, i16* %req_count, align 16, !dbg !11546
  %36 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11547
  %req_count72 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %36, i32 0, i32 0, !dbg !11548
  %37 = load i16, i16* %req_count72, align 16, !dbg !11548
  %38 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11549
  %res_count = getelementptr inbounds %struct.descriptor, %struct.descriptor* %38, i32 0, i32 4, !dbg !11550
  store i16 %37, i16* %res_count, align 4, !dbg !11551
  %39 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11552
  %transfer_status = getelementptr inbounds %struct.descriptor, %struct.descriptor* %39, i32 0, i32 5, !dbg !11553
  store i16 0, i16* %transfer_status, align 2, !dbg !11554
  %40 = load %struct.fw_iso_buffer*, %struct.fw_iso_buffer** %buffer.addr, align 8, !dbg !11555
  %pages = getelementptr inbounds %struct.fw_iso_buffer, %struct.fw_iso_buffer* %40, i32 0, i32 1, !dbg !11555
  %41 = load %struct.page**, %struct.page*** %pages, align 8, !dbg !11555
  %42 = load i32, i32* %page, align 4, !dbg !11555
  %idxprom = sext i32 %42 to i64, !dbg !11555
  %arrayidx = getelementptr %struct.page*, %struct.page** %41, i64 %idxprom, !dbg !11555
  %43 = load %struct.page*, %struct.page** %arrayidx, align 8, !dbg !11555
  %44 = getelementptr inbounds %struct.page, %struct.page* %43, i32 0, i32 1, !dbg !11555
  %45 = bitcast %union.anon.2* %44 to %struct.anon.3*, !dbg !11555
  %private = getelementptr inbounds %struct.anon.3, %struct.anon.3* %45, i32 0, i32 3, !dbg !11555
  %46 = load i64, i64* %private, align 8, !dbg !11555
  store i64 %46, i64* %page_bus, align 8, !dbg !11556
  %47 = load i64, i64* %page_bus, align 8, !dbg !11557
  %48 = load i32, i32* %offset, align 4, !dbg !11557
  %conv73 = sext i32 %48 to i64, !dbg !11557
  %add74 = add i64 %47, %conv73, !dbg !11557
  %conv75 = trunc i64 %add74 to i32, !dbg !11557
  %49 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11558
  %data_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %49, i32 0, i32 2, !dbg !11559
  store i32 %conv75, i32* %data_address, align 4, !dbg !11560
  %50 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11561
  %context76 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %50, i32 0, i32 1, !dbg !11562
  %ohci = getelementptr inbounds %struct.context, %struct.context* %context76, i32 0, i32 0, !dbg !11563
  %51 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !11563
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %51, i32 0, i32 0, !dbg !11564
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !11565
  %52 = load %struct.device*, %struct.device** %device, align 8, !dbg !11565
  %53 = load i64, i64* %page_bus, align 8, !dbg !11566
  %54 = load i32, i32* %offset, align 4, !dbg !11567
  %conv77 = sext i32 %54 to i64, !dbg !11567
  %55 = load i32, i32* %length, align 4, !dbg !11568
  %conv78 = sext i32 %55 to i64, !dbg !11568
  call void @dma_sync_single_range_for_device(%struct.device* %52, i64 %53, i64 %conv77, i64 %conv78, i32 2) #11, !dbg !11569
  %56 = load i32, i32* %length, align 4, !dbg !11570
  %57 = load i32, i32* %rest, align 4, !dbg !11571
  %sub79 = sub i32 %57, %56, !dbg !11571
  store i32 %sub79, i32* %rest, align 4, !dbg !11571
  store i32 0, i32* %offset, align 4, !dbg !11572
  %58 = load i32, i32* %page, align 4, !dbg !11573
  %inc = add i32 %58, 1, !dbg !11573
  store i32 %inc, i32* %page, align 4, !dbg !11573
  %59 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11574
  %context80 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %59, i32 0, i32 1, !dbg !11575
  %60 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11576
  call void @context_append(%struct.context* %context80, %struct.descriptor* %60, i32 1, i32 0) #11, !dbg !11577
  br label %for.inc, !dbg !11578

for.inc:                                          ; preds = %if.end70
  %61 = load i32, i32* %i, align 4, !dbg !11579
  %inc81 = add i32 %61, 1, !dbg !11579
  store i32 %inc81, i32* %i, align 4, !dbg !11579
  br label %for.cond, !dbg !11580, !llvm.loop !11581

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !11583
  br label %return, !dbg !11583

return:                                           ; preds = %for.end, %if.then38, %if.then32
  %62 = load i32, i32* %retval, align 4, !dbg !11584
  ret i32 %62, !dbg !11584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_sync_single_range_for_device(%struct.device* %dev, i64 %addr, i64 %offset, i64 %size, i32 %dir) #2 !dbg !11585 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11586, metadata !DIExpression()), !dbg !11587
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !11588, metadata !DIExpression()), !dbg !11589
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !11590, metadata !DIExpression()), !dbg !11591
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11592, metadata !DIExpression()), !dbg !11593
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !11594, metadata !DIExpression()), !dbg !11595
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11596
  %1 = load i64, i64* %addr.addr, align 8, !dbg !11597
  %2 = load i64, i64* %offset.addr, align 8, !dbg !11598
  %add = add i64 %1, %2, !dbg !11599
  %3 = load i64, i64* %size.addr, align 8, !dbg !11600
  %4 = load i32, i32* %dir.addr, align 4, !dbg !11601
  call void @dma_sync_single_for_device(%struct.device* %0, i64 %add, i64 %3, i32 %4) #11, !dbg !11602
  ret void, !dbg !11603
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_device(%struct.device*, i64, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit_lock(i64 %nr, i64* %addr) #2 !dbg !11604 {
entry:
  %nr.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i.i, metadata !11610, metadata !DIExpression()), !dbg !11612
  %addr.addr.i.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i.i, metadata !11616, metadata !DIExpression()), !dbg !11617
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !11618, metadata !DIExpression()), !dbg !11620
  %tmp.i.i = alloca i8, align 1
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11621, metadata !DIExpression()), !dbg !11622
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11623, metadata !DIExpression()), !dbg !11624
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10256, metadata !DIExpression()), !dbg !11625
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10266, metadata !DIExpression()), !dbg !11627
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11628, metadata !DIExpression()), !dbg !11629
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11630, metadata !DIExpression()), !dbg !11631
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11632
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11633
  %div = sdiv i64 %1, 64, !dbg !11633
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11634
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11632
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11635
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11636
  %conv.i = trunc i64 %4 to i32, !dbg !11636
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !11637
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11638
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11638
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #15, !dbg !11638
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11639
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11640
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !11641
  %10 = load i64*, i64** %addr.addr.i, align 8, !dbg !11642
  store i64 %9, i64* %nr.addr.i.i, align 8
  store i64* %10, i64** %addr.addr.i.i, align 8
  %11 = load i64*, i64** %addr.addr.i.i, align 8, !dbg !11620
  %12 = load i64, i64* %nr.addr.i.i, align 8, !dbg !11620
  %13 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %11, i64 %12, i64* %11) #10, !dbg !11620, !srcloc !11643
  store i8 %13, i8* %c.i.i, align 1, !dbg !11620
  %14 = load i8, i8* %c.i.i, align 1, !dbg !11620
  %tobool.i.i = trunc i8 %14 to i1, !dbg !11620
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !11620
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !11620
  %15 = load i8, i8* %tmp.i.i, align 1, !dbg !11620
  %tobool1.i.i = trunc i8 %15 to i1, !dbg !11620
  ret i1 %tobool1.i.i, !dbg !11644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @context_tasklet(i64 %data) #2 !dbg !11645 {
entry:
  %lock.addr.i56 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i56, metadata !7300, metadata !DIExpression()), !dbg !11646
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7306, metadata !DIExpression()), !dbg !11651
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4643, metadata !DIExpression()), !dbg !11652
  %data.addr = alloca i64, align 8
  %ctx = alloca %struct.context*, align 8
  %d = alloca %struct.descriptor*, align 8
  %last = alloca %struct.descriptor*, align 8
  %address = alloca i32, align 4
  %z = alloca i32, align 4
  %desc = alloca %struct.descriptor_buffer*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.descriptor_buffer*, align 8
  %old_desc = alloca %struct.descriptor_buffer*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp14 = alloca %struct.descriptor_buffer*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  %__dummy34 = alloca i64, align 8
  %__dummy235 = alloca i64, align 8
  %tmp38 = alloca i32, align 4
  store i64 %data, i64* %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %data.addr, metadata !11659, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.declare(metadata %struct.context** %ctx, metadata !11661, metadata !DIExpression()), !dbg !11662
  %0 = load i64, i64* %data.addr, align 8, !dbg !11663
  %1 = inttoptr i64 %0 to %struct.context*, !dbg !11664
  store %struct.context* %1, %struct.context** %ctx, align 8, !dbg !11662
  call void @llvm.dbg.declare(metadata %struct.descriptor** %d, metadata !11665, metadata !DIExpression()), !dbg !11666
  call void @llvm.dbg.declare(metadata %struct.descriptor** %last, metadata !11667, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.declare(metadata i32* %address, metadata !11669, metadata !DIExpression()), !dbg !11670
  call void @llvm.dbg.declare(metadata i32* %z, metadata !11671, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.declare(metadata %struct.descriptor_buffer** %desc, metadata !11673, metadata !DIExpression()), !dbg !11674
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11675, metadata !DIExpression()), !dbg !11677
  %2 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !11677
  %buffer_list = getelementptr inbounds %struct.context, %struct.context* %2, i32 0, i32 6, !dbg !11677
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %buffer_list, i32 0, i32 0, !dbg !11677
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11677
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !11677
  store i8* %4, i8** %__mptr, align 8, !dbg !11677
  br label %do.body, !dbg !11677

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11678

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11677
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11677
  %6 = bitcast i8* %add.ptr to %struct.descriptor_buffer*, !dbg !11677
  store %struct.descriptor_buffer* %6, %struct.descriptor_buffer** %tmp, align 8, !dbg !11678
  %7 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %tmp, align 8, !dbg !11677
  store %struct.descriptor_buffer* %7, %struct.descriptor_buffer** %desc, align 8, !dbg !11680
  %8 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !11681
  %last1 = getelementptr inbounds %struct.context, %struct.context* %8, i32 0, i32 8, !dbg !11682
  %9 = load %struct.descriptor*, %struct.descriptor** %last1, align 8, !dbg !11682
  store %struct.descriptor* %9, %struct.descriptor** %last, align 8, !dbg !11683
  br label %while.cond, !dbg !11684

while.cond:                                       ; preds = %if.end54, %do.end
  %10 = load %struct.descriptor*, %struct.descriptor** %last, align 8, !dbg !11685
  %branch_address = getelementptr inbounds %struct.descriptor, %struct.descriptor* %10, i32 0, i32 3, !dbg !11686
  %11 = load i32, i32* %branch_address, align 8, !dbg !11686
  %cmp = icmp ne i32 %11, 0, !dbg !11687
  br i1 %cmp, label %while.body, label %while.end, !dbg !11684

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.descriptor_buffer** %old_desc, metadata !11688, metadata !DIExpression()), !dbg !11689
  %12 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !11690
  store %struct.descriptor_buffer* %12, %struct.descriptor_buffer** %old_desc, align 8, !dbg !11689
  %13 = load %struct.descriptor*, %struct.descriptor** %last, align 8, !dbg !11691
  %branch_address2 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %13, i32 0, i32 3, !dbg !11691
  %14 = load i32, i32* %branch_address2, align 8, !dbg !11691
  store i32 %14, i32* %address, align 4, !dbg !11692
  %15 = load i32, i32* %address, align 4, !dbg !11693
  %and = and i32 %15, 15, !dbg !11694
  store i32 %and, i32* %z, align 4, !dbg !11695
  %16 = load i32, i32* %address, align 4, !dbg !11696
  %and3 = and i32 %16, -16, !dbg !11696
  store i32 %and3, i32* %address, align 4, !dbg !11696
  %17 = load i32, i32* %address, align 4, !dbg !11697
  %18 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !11698
  %current_bus = getelementptr inbounds %struct.context, %struct.context* %18, i32 0, i32 3, !dbg !11699
  store i32 %17, i32* %current_bus, align 8, !dbg !11700
  %19 = load i32, i32* %address, align 4, !dbg !11701
  %conv = zext i32 %19 to i64, !dbg !11701
  %20 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !11703
  %buffer_bus = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %20, i32 0, i32 1, !dbg !11704
  %21 = load i64, i64* %buffer_bus, align 16, !dbg !11704
  %cmp4 = icmp ult i64 %conv, %21, !dbg !11705
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !11706

lor.lhs.false:                                    ; preds = %while.body
  %22 = load i32, i32* %address, align 4, !dbg !11707
  %conv6 = zext i32 %22 to i64, !dbg !11707
  %23 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !11708
  %buffer_bus7 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %23, i32 0, i32 1, !dbg !11709
  %24 = load i64, i64* %buffer_bus7, align 16, !dbg !11709
  %25 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !11710
  %used = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %25, i32 0, i32 3, !dbg !11711
  %26 = load i64, i64* %used, align 16, !dbg !11711
  %add = add i64 %24, %26, !dbg !11712
  %cmp8 = icmp uge i64 %conv6, %add, !dbg !11713
  br i1 %cmp8, label %if.then, label %if.end, !dbg !11714

if.then:                                          ; preds = %lor.lhs.false, %while.body
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !11715, metadata !DIExpression()), !dbg !11717
  %27 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !11717
  %list = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %27, i32 0, i32 0, !dbg !11717
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !11717
  %28 = load %struct.list_head*, %struct.list_head** %next11, align 16, !dbg !11717
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !11717
  store i8* %29, i8** %__mptr10, align 8, !dbg !11717
  br label %do.body12, !dbg !11717

do.body12:                                        ; preds = %if.then
  br label %do.end13, !dbg !11718

do.end13:                                         ; preds = %do.body12
  %30 = load i8*, i8** %__mptr10, align 8, !dbg !11717
  %add.ptr15 = getelementptr i8, i8* %30, i64 0, !dbg !11717
  %31 = bitcast i8* %add.ptr15 to %struct.descriptor_buffer*, !dbg !11717
  store %struct.descriptor_buffer* %31, %struct.descriptor_buffer** %tmp14, align 8, !dbg !11718
  %32 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %tmp14, align 8, !dbg !11717
  store %struct.descriptor_buffer* %32, %struct.descriptor_buffer** %desc, align 8, !dbg !11720
  br label %if.end, !dbg !11721

if.end:                                           ; preds = %do.end13, %lor.lhs.false
  %33 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !11722
  %buffer = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %33, i32 0, i32 5, !dbg !11723
  %arraydecay = getelementptr inbounds [0 x %struct.descriptor], [0 x %struct.descriptor]* %buffer, i64 0, i64 0, !dbg !11722
  %34 = load i32, i32* %address, align 4, !dbg !11724
  %conv16 = zext i32 %34 to i64, !dbg !11724
  %35 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !11725
  %buffer_bus17 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %35, i32 0, i32 1, !dbg !11726
  %36 = load i64, i64* %buffer_bus17, align 16, !dbg !11726
  %sub = sub i64 %conv16, %36, !dbg !11727
  %div = udiv i64 %sub, 16, !dbg !11728
  %add.ptr18 = getelementptr %struct.descriptor, %struct.descriptor* %arraydecay, i64 %div, !dbg !11729
  store %struct.descriptor* %add.ptr18, %struct.descriptor** %d, align 8, !dbg !11730
  %37 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11731
  %38 = load i32, i32* %z, align 4, !dbg !11732
  %call = call %struct.descriptor* @find_branch_descriptor(%struct.descriptor* %37, i32 %38) #11, !dbg !11733
  store %struct.descriptor* %call, %struct.descriptor** %last, align 8, !dbg !11734
  %39 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !11735
  %callback = getelementptr inbounds %struct.context, %struct.context* %39, i32 0, i32 11, !dbg !11737
  %40 = load i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)*, i32 (%struct.context*, %struct.descriptor*, %struct.descriptor*)** %callback, align 8, !dbg !11737
  %41 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !11738
  %42 = load %struct.descriptor*, %struct.descriptor** %d, align 8, !dbg !11739
  %43 = load %struct.descriptor*, %struct.descriptor** %last, align 8, !dbg !11740
  %call19 = call i32 %40(%struct.context* %41, %struct.descriptor* %42, %struct.descriptor* %43) #11, !dbg !11735
  %tobool = icmp ne i32 %call19, 0, !dbg !11735
  br i1 %tobool, label %if.end21, label %if.then20, !dbg !11741

if.then20:                                        ; preds = %if.end
  br label %while.end, !dbg !11742

if.end21:                                         ; preds = %if.end
  %44 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %old_desc, align 8, !dbg !11743
  %45 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %desc, align 8, !dbg !11744
  %cmp22 = icmp ne %struct.descriptor_buffer* %44, %45, !dbg !11745
  br i1 %cmp22, label %if.then24, label %if.end54, !dbg !11746

if.then24:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11747, metadata !DIExpression()), !dbg !11748
  %46 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %old_desc, align 8, !dbg !11749
  %used25 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %46, i32 0, i32 3, !dbg !11750
  store i64 0, i64* %used25, align 16, !dbg !11751
  br label %do.body26, !dbg !11752

do.body26:                                        ; preds = %if.then24
  br label %do.body27, !dbg !11753

do.body27:                                        ; preds = %do.body26
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11754, metadata !DIExpression()), !dbg !11756
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11757, metadata !DIExpression()), !dbg !11756
  %cmp28 = icmp eq i64* %__dummy, %__dummy2, !dbg !11756
  %conv29 = zext i1 %cmp28 to i32, !dbg !11756
  store i32 1, i32* %tmp30, align 4, !dbg !11756
  %47 = load i32, i32* %tmp30, align 4, !dbg !11756
  br label %do.body31, !dbg !11758

do.body31:                                        ; preds = %do.body27
  br label %do.body32, !dbg !11759

do.body32:                                        ; preds = %do.body31
  br label %do.body33, !dbg !11760

do.body33:                                        ; preds = %do.body32
  call void @llvm.dbg.declare(metadata i64* %__dummy34, metadata !11762, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.declare(metadata i64* %__dummy235, metadata !11766, metadata !DIExpression()), !dbg !11765
  %cmp36 = icmp eq i64* %__dummy34, %__dummy235, !dbg !11765
  %conv37 = zext i1 %cmp36 to i32, !dbg !11765
  store i32 1, i32* %tmp38, align 4, !dbg !11765
  %48 = load i32, i32* %tmp38, align 4, !dbg !11765
  %call39 = call i64 @arch_local_irq_save() #11, !dbg !11767
  store i64 %call39, i64* %flags, align 8, !dbg !11767
  br label %do.end40, !dbg !11767

do.end40:                                         ; preds = %do.body33
  br label %do.end41, !dbg !11760

do.end41:                                         ; preds = %do.end40
  br label %do.body42, !dbg !11759

do.body42:                                        ; preds = %do.end41
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11768, !srcloc !11769
  br label %do.body43, !dbg !11768

do.body43:                                        ; preds = %do.body42
  %49 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !11770
  %ohci = getelementptr inbounds %struct.context, %struct.context* %49, i32 0, i32 0, !dbg !11770
  %50 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !11770
  %lock = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %50, i32 0, i32 13, !dbg !11770
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %51 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11771
  %52 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %51, i32 0, i32 0, !dbg !11772
  %rlock.i = bitcast %union.anon.4* %52 to %struct.raw_spinlock*, !dbg !11772
  br label %do.end45, !dbg !11770

do.end45:                                         ; preds = %do.body43
  br label %do.end46, !dbg !11768

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !11759

do.end47:                                         ; preds = %do.end46
  br label %do.end48, !dbg !11758

do.end48:                                         ; preds = %do.end47
  br label %do.end49, !dbg !11753

do.end49:                                         ; preds = %do.end48
  %53 = load %struct.descriptor_buffer*, %struct.descriptor_buffer** %old_desc, align 8, !dbg !11773
  %list50 = getelementptr inbounds %struct.descriptor_buffer, %struct.descriptor_buffer* %53, i32 0, i32 0, !dbg !11774
  %54 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !11775
  %buffer_list51 = getelementptr inbounds %struct.context, %struct.context* %54, i32 0, i32 6, !dbg !11776
  call void @list_move_tail(%struct.list_head* %list50, %struct.list_head* %buffer_list51) #11, !dbg !11777
  %55 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !11778
  %ohci52 = getelementptr inbounds %struct.context, %struct.context* %55, i32 0, i32 0, !dbg !11779
  %56 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci52, align 8, !dbg !11779
  %lock53 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %56, i32 0, i32 13, !dbg !11780
  %57 = load i64, i64* %flags, align 8, !dbg !11781
  store %struct.spinlock* %lock53, %struct.spinlock** %lock.addr.i56, align 8
  store i64 %57, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !458, metadata !7392, metadata !DIExpression()) #10, !dbg !11782
  call void @llvm.dbg.declare(metadata !458, metadata !7396, metadata !DIExpression()) #10, !dbg !11782
  store i32 1, i32* %tmp.i, align 4, !dbg !11782
  %58 = load i32, i32* %tmp.i, align 4, !dbg !11782
  call void @llvm.dbg.declare(metadata !458, metadata !7397, metadata !DIExpression()) #10, !dbg !11783
  call void @llvm.dbg.declare(metadata !458, metadata !7403, metadata !DIExpression()) #10, !dbg !11783
  store i32 1, i32* %tmp8.i, align 4, !dbg !11783
  %59 = load i32, i32* %tmp8.i, align 4, !dbg !11783
  %60 = load i64, i64* %flags.addr.i, align 8, !dbg !11784
  call void @arch_local_irq_restore(i64 %60) #15, !dbg !11784
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11785, !srcloc !7407
  %61 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i56, align 8, !dbg !11786
  %62 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %61, i32 0, i32 0, !dbg !11786
  %rlock.i57 = bitcast %union.anon.4* %62 to %struct.raw_spinlock*, !dbg !11786
  br label %if.end54, !dbg !11787

if.end54:                                         ; preds = %do.end49, %if.end21
  %63 = load %struct.descriptor*, %struct.descriptor** %last, align 8, !dbg !11788
  %64 = load %struct.context*, %struct.context** %ctx, align 8, !dbg !11789
  %last55 = getelementptr inbounds %struct.context, %struct.context* %64, i32 0, i32 8, !dbg !11790
  store %struct.descriptor* %63, %struct.descriptor** %last55, align 8, !dbg !11791
  br label %while.cond, !dbg !11684, !llvm.loop !11792

while.end:                                        ; preds = %if.then20, %while.cond
  ret void, !dbg !11794
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @flush_ir_buffer_fill(%struct.iso_context* %ctx) #2 !dbg !11795 {
entry:
  %ctx.addr = alloca %struct.iso_context*, align 8
  store %struct.iso_context* %ctx, %struct.iso_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx.addr, metadata !11796, metadata !DIExpression()), !dbg !11797
  %0 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11798
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %0, i32 0, i32 1, !dbg !11799
  %ohci = getelementptr inbounds %struct.context, %struct.context* %context, i32 0, i32 0, !dbg !11800
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !11800
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 0, !dbg !11801
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !11802
  %2 = load %struct.device*, %struct.device** %device, align 8, !dbg !11802
  %3 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11803
  %mc_buffer_bus = getelementptr inbounds %struct.iso_context, %struct.iso_context* %3, i32 0, i32 5, !dbg !11804
  %4 = load i32, i32* %mc_buffer_bus, align 8, !dbg !11804
  %conv = zext i32 %4 to i64, !dbg !11803
  %and = and i64 %conv, -4096, !dbg !11805
  %5 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11806
  %mc_buffer_bus1 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %5, i32 0, i32 5, !dbg !11807
  %6 = load i32, i32* %mc_buffer_bus1, align 8, !dbg !11807
  %conv2 = zext i32 %6 to i64, !dbg !11806
  %and3 = and i64 %conv2, 4095, !dbg !11808
  %7 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11809
  %mc_completed = getelementptr inbounds %struct.iso_context, %struct.iso_context* %7, i32 0, i32 6, !dbg !11810
  %8 = load i16, i16* %mc_completed, align 4, !dbg !11810
  %conv4 = zext i16 %8 to i64, !dbg !11809
  call void @dma_sync_single_range_for_cpu(%struct.device* %2, i64 %and, i64 %and3, i64 %conv4, i32 2) #11, !dbg !11811
  %9 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11812
  %base = getelementptr inbounds %struct.iso_context, %struct.iso_context* %9, i32 0, i32 0, !dbg !11813
  %callback = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base, i32 0, i32 6, !dbg !11814
  %mc = bitcast %union.anon.67* %callback to void (%struct.fw_iso_context*, i64, i8*)**, !dbg !11815
  %10 = load void (%struct.fw_iso_context*, i64, i8*)*, void (%struct.fw_iso_context*, i64, i8*)** %mc, align 8, !dbg !11815
  %11 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11816
  %base5 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %11, i32 0, i32 0, !dbg !11817
  %12 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11818
  %mc_buffer_bus6 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %12, i32 0, i32 5, !dbg !11819
  %13 = load i32, i32* %mc_buffer_bus6, align 8, !dbg !11819
  %14 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11820
  %mc_completed7 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %14, i32 0, i32 6, !dbg !11821
  %15 = load i16, i16* %mc_completed7, align 4, !dbg !11821
  %conv8 = zext i16 %15 to i32, !dbg !11820
  %add = add i32 %13, %conv8, !dbg !11822
  %conv9 = zext i32 %add to i64, !dbg !11818
  %16 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11823
  %base10 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %16, i32 0, i32 0, !dbg !11824
  %callback_data = getelementptr inbounds %struct.fw_iso_context, %struct.fw_iso_context* %base10, i32 0, i32 7, !dbg !11825
  %17 = load i8*, i8** %callback_data, align 8, !dbg !11825
  call void %10(%struct.fw_iso_context* %base5, i64 %conv9, i8* %17) #11, !dbg !11812
  %18 = load %struct.iso_context*, %struct.iso_context** %ctx.addr, align 8, !dbg !11826
  %mc_completed11 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %18, i32 0, i32 6, !dbg !11827
  store i16 0, i16* %mc_completed11, align 4, !dbg !11828
  ret void, !dbg !11829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit_unlock(i64 %nr, i64* %addr) #2 !dbg !11830 {
entry:
  %nr.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i.i, metadata !11833, metadata !DIExpression()), !dbg !11835
  %addr.addr.i.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i.i, metadata !11839, metadata !DIExpression()), !dbg !11840
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11841, metadata !DIExpression()), !dbg !11842
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11843, metadata !DIExpression()), !dbg !11844
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11845, metadata !DIExpression()), !dbg !11847
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11849, metadata !DIExpression()), !dbg !11850
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11851, metadata !DIExpression()), !dbg !11852
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11853, metadata !DIExpression()), !dbg !11854
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11855
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11856
  %div = sdiv i64 %1, 64, !dbg !11856
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11857
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11855
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11858
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11859
  %conv.i = trunc i64 %4 to i32, !dbg !11859
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !11860
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11861
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11861
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #15, !dbg !11861
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11862
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11863
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11864, !srcloc !11865
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !11866
  %10 = load i64*, i64** %addr.addr.i, align 8, !dbg !11867
  store i64 %9, i64* %nr.addr.i.i, align 8
  store i64* %10, i64** %addr.addr.i.i, align 8
  %11 = load i64, i64* %nr.addr.i.i, align 8, !dbg !11868
  %12 = call i1 @llvm.is.constant.i64(i64 %11) #10, !dbg !11870
  br i1 %12, label %if.then.i.i, label %if.else.i.i, !dbg !11871

if.then.i.i:                                      ; preds = %entry
  %13 = load i64*, i64** %addr.addr.i.i, align 8, !dbg !11872
  %14 = bitcast i64* %13 to i8*, !dbg !11872
  %15 = load i64, i64* %nr.addr.i.i, align 8, !dbg !11872
  %shr.i.i = ashr i64 %15, 3, !dbg !11872
  %add.ptr.i.i = getelementptr i8, i8* %14, i64 %shr.i.i, !dbg !11872
  %16 = load i64, i64* %nr.addr.i.i, align 8, !dbg !11874
  %and.i.i = and i64 %16, 7, !dbg !11874
  %sh_prom.i.i = trunc i64 %and.i.i to i32, !dbg !11874
  %shl.i.i = shl i32 1, %sh_prom.i.i, !dbg !11874
  %neg.i.i = xor i32 %shl.i.i, -1, !dbg !11875
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i.i, i32 %neg.i.i, i8* %add.ptr.i.i) #10, !dbg !11876, !srcloc !11877
  br label %arch_clear_bit_unlock.exit, !dbg !11878

if.else.i.i:                                      ; preds = %entry
  %17 = load i64*, i64** %addr.addr.i.i, align 8, !dbg !11879
  %18 = load i64, i64* %nr.addr.i.i, align 8, !dbg !11881
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !11882, !srcloc !11883
  br label %arch_clear_bit_unlock.exit

arch_clear_bit_unlock.exit:                       ; preds = %if.then.i.i, %if.else.i.i
  ret void, !dbg !11884
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #2 !dbg !11885 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11886, metadata !DIExpression()), !dbg !11887
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11888, metadata !DIExpression()), !dbg !11889
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11890
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !11891
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11892
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11893
  call void @list_add_tail(%struct.list_head* %1, %struct.list_head* %2) #11, !dbg !11894
  ret void, !dbg !11895
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #2 !dbg !11896 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11897, metadata !DIExpression()), !dbg !11898
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11899
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !11901
  br i1 %call, label %if.end, label %if.then, !dbg !11902

if.then:                                          ; preds = %entry
  br label %return, !dbg !11903

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11904
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11905
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !11905
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11906
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11907
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11907
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !11908
  br label %return, !dbg !11909

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #2 !dbg !11910 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11913, metadata !DIExpression()), !dbg !11914
  ret i1 true, !dbg !11915
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !11916 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11917, metadata !DIExpression()), !dbg !11918
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11919, metadata !DIExpression()), !dbg !11920
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11921
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11922
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11923
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !11924
  br label %do.body, !dbg !11925

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !11926

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !11928

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !11926

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11930
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11930
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11930
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !11930
  br label %do.end5, !dbg !11930

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !11926

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !11932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @context_stop(%struct.context* %ctx) #2 !dbg !11933 {
entry:
  %ctx.addr = alloca %struct.context*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %reg = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.context* %ctx, %struct.context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %ctx.addr, metadata !11934, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !11936, metadata !DIExpression()), !dbg !11937
  %0 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !11938
  %ohci1 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0, !dbg !11939
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci1, align 8, !dbg !11939
  store %struct.fw_ohci* %1, %struct.fw_ohci** %ohci, align 8, !dbg !11937
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !11940, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11942, metadata !DIExpression()), !dbg !11943
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !11944
  %3 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !11945
  %regs = getelementptr inbounds %struct.context, %struct.context* %3, i32 0, i32 1, !dbg !11945
  %4 = load i32, i32* %regs, align 8, !dbg !11945
  %add = add i32 %4, 4, !dbg !11945
  call void @reg_write(%struct.fw_ohci* %2, i32 %add, i32 32768) #11, !dbg !11946
  %5 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !11947
  %running = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 4, !dbg !11948
  store i8 0, i8* %running, align 4, !dbg !11949
  store i32 0, i32* %i, align 4, !dbg !11950
  br label %for.cond, !dbg !11952

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !11953
  %cmp = icmp slt i32 %6, 1000, !dbg !11955
  br i1 %cmp, label %for.body, label %for.end, !dbg !11956

for.body:                                         ; preds = %for.cond
  %7 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !11957
  %8 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !11959
  %regs2 = getelementptr inbounds %struct.context, %struct.context* %8, i32 0, i32 1, !dbg !11959
  %9 = load i32, i32* %regs2, align 8, !dbg !11959
  %call = call i32 @reg_read(%struct.fw_ohci* %7, i32 %9) #11, !dbg !11960
  store i32 %call, i32* %reg, align 4, !dbg !11961
  %10 = load i32, i32* %reg, align 4, !dbg !11962
  %and = and i32 %10, 1024, !dbg !11964
  %cmp3 = icmp eq i32 %and, 0, !dbg !11965
  br i1 %cmp3, label %if.then, label %if.end, !dbg !11966

if.then:                                          ; preds = %for.body
  br label %return, !dbg !11967

if.end:                                           ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !11968
  %tobool = icmp ne i32 %11, 0, !dbg !11968
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !11970

if.then4:                                         ; preds = %if.end
  call void @__const_udelay(i64 42950) #11, !dbg !11971
  br label %if.end5, !dbg !11976

if.end5:                                          ; preds = %if.then4, %if.end
  br label %for.inc, !dbg !11977

for.inc:                                          ; preds = %if.end5
  %12 = load i32, i32* %i, align 4, !dbg !11978
  %inc = add i32 %12, 1, !dbg !11978
  store i32 %inc, i32* %i, align 4, !dbg !11978
  br label %for.cond, !dbg !11979, !llvm.loop !11980

for.end:                                          ; preds = %for.cond
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !11982
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %13, i32 0, i32 0, !dbg !11982
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !11982
  %14 = load %struct.device*, %struct.device** %device, align 8, !dbg !11982
  %15 = load i32, i32* %reg, align 4, !dbg !11982
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63, i64 0, i64 0), i32 %15) #12, !dbg !11982
  br label %return, !dbg !11983

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !11983
}

; Function Attrs: noredzone
declare dso_local void @tasklet_kill(%struct.tasklet_struct*) #1

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !11984 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11987, metadata !DIExpression()), !dbg !11988
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11989, metadata !DIExpression()), !dbg !11990
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11991
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11992
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !11993
  store i8* %0, i8** %driver_data, align 8, !dbg !11994
  ret void, !dbg !11995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @find_and_insert_self_id(%struct.fw_ohci* %ohci, i32 %self_id_count) #2 !dbg !11996 {
entry:
  %retval = alloca i32, align 4
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %self_id_count.addr = alloca i32, align 4
  %reg = alloca i32, align 4
  %i = alloca i32, align 4
  %pos = alloca i32, align 4
  %status = alloca i32, align 4
  %self_id = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !11997, metadata !DIExpression()), !dbg !11998
  store i32 %self_id_count, i32* %self_id_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %self_id_count.addr, metadata !11999, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12001, metadata !DIExpression()), !dbg !12002
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12003, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !12005, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12007, metadata !DIExpression()), !dbg !12008
  call void @llvm.dbg.declare(metadata i32* %self_id, metadata !12009, metadata !DIExpression()), !dbg !12010
  store i32 -2143238144, i32* %self_id, align 4, !dbg !12010
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12011
  %call = call i32 @reg_read(%struct.fw_ohci* %0, i32 232) #11, !dbg !12012
  store i32 %call, i32* %reg, align 4, !dbg !12013
  %1 = load i32, i32* %reg, align 4, !dbg !12014
  %and = and i32 %1, -2147483648, !dbg !12016
  %tobool = icmp ne i32 %and, 0, !dbg !12016
  br i1 %tobool, label %if.end, label %if.then, !dbg !12017

if.then:                                          ; preds = %entry
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12018
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %2, i32 0, i32 0, !dbg !12018
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !12018
  %3 = load %struct.device*, %struct.device** %device, align 8, !dbg !12018
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !12018
  store i32 -16, i32* %retval, align 4, !dbg !12020
  br label %return, !dbg !12020

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %reg, align 4, !dbg !12021
  %and1 = and i32 %4, 63, !dbg !12022
  %shl = shl i32 %and1, 24, !dbg !12023
  %5 = load i32, i32* %self_id, align 4, !dbg !12024
  %or = or i32 %5, %shl, !dbg !12024
  store i32 %or, i32* %self_id, align 4, !dbg !12024
  %6 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12025
  %card2 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %6, i32 0, i32 0, !dbg !12026
  %call3 = call i32 @ohci_read_phy_reg(%struct.fw_card* %card2, i32 4) #11, !dbg !12027
  store i32 %call3, i32* %reg, align 4, !dbg !12028
  %7 = load i32, i32* %reg, align 4, !dbg !12029
  %cmp = icmp slt i32 %7, 0, !dbg !12031
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !12032

if.then4:                                         ; preds = %if.end
  %8 = load i32, i32* %reg, align 4, !dbg !12033
  store i32 %8, i32* %retval, align 4, !dbg !12034
  br label %return, !dbg !12034

if.end5:                                          ; preds = %if.end
  %9 = load i32, i32* %reg, align 4, !dbg !12035
  %and6 = and i32 %9, 7, !dbg !12036
  %shl7 = shl i32 %and6, 8, !dbg !12037
  %10 = load i32, i32* %self_id, align 4, !dbg !12038
  %or8 = or i32 %10, %shl7, !dbg !12038
  store i32 %or8, i32* %self_id, align 4, !dbg !12038
  %11 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12039
  %card9 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %11, i32 0, i32 0, !dbg !12040
  %call10 = call i32 @ohci_read_phy_reg(%struct.fw_card* %card9, i32 1) #11, !dbg !12041
  store i32 %call10, i32* %reg, align 4, !dbg !12042
  %12 = load i32, i32* %reg, align 4, !dbg !12043
  %cmp11 = icmp slt i32 %12, 0, !dbg !12045
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !12046

if.then12:                                        ; preds = %if.end5
  %13 = load i32, i32* %reg, align 4, !dbg !12047
  store i32 %13, i32* %retval, align 4, !dbg !12048
  br label %return, !dbg !12048

if.end13:                                         ; preds = %if.end5
  %14 = load i32, i32* %reg, align 4, !dbg !12049
  %and14 = and i32 %14, 63, !dbg !12050
  %shl15 = shl i32 %and14, 16, !dbg !12051
  %15 = load i32, i32* %self_id, align 4, !dbg !12052
  %or16 = or i32 %15, %shl15, !dbg !12052
  store i32 %or16, i32* %self_id, align 4, !dbg !12052
  store i32 0, i32* %i, align 4, !dbg !12053
  br label %for.cond, !dbg !12055

for.cond:                                         ; preds = %for.inc, %if.end13
  %16 = load i32, i32* %i, align 4, !dbg !12056
  %cmp17 = icmp slt i32 %16, 3, !dbg !12058
  br i1 %cmp17, label %for.body, label %for.end, !dbg !12059

for.body:                                         ; preds = %for.cond
  %17 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12060
  %18 = load i32, i32* %i, align 4, !dbg !12062
  %call18 = call i32 @get_status_for_port(%struct.fw_ohci* %17, i32 %18) #11, !dbg !12063
  store i32 %call18, i32* %status, align 4, !dbg !12064
  %19 = load i32, i32* %status, align 4, !dbg !12065
  %cmp19 = icmp slt i32 %19, 0, !dbg !12067
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !12068

if.then20:                                        ; preds = %for.body
  %20 = load i32, i32* %status, align 4, !dbg !12069
  store i32 %20, i32* %retval, align 4, !dbg !12070
  br label %return, !dbg !12070

if.end21:                                         ; preds = %for.body
  %21 = load i32, i32* %status, align 4, !dbg !12071
  %and22 = and i32 %21, 3, !dbg !12072
  %22 = load i32, i32* %i, align 4, !dbg !12073
  %mul = mul i32 %22, 2, !dbg !12074
  %sub = sub i32 6, %mul, !dbg !12075
  %shl23 = shl i32 %and22, %sub, !dbg !12076
  %23 = load i32, i32* %self_id, align 4, !dbg !12077
  %or24 = or i32 %23, %shl23, !dbg !12077
  store i32 %or24, i32* %self_id, align 4, !dbg !12077
  br label %for.inc, !dbg !12078

for.inc:                                          ; preds = %if.end21
  %24 = load i32, i32* %i, align 4, !dbg !12079
  %inc = add i32 %24, 1, !dbg !12079
  store i32 %inc, i32* %i, align 4, !dbg !12079
  br label %for.cond, !dbg !12080, !llvm.loop !12081

for.end:                                          ; preds = %for.cond
  %25 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12083
  %call25 = call i32 @initiated_reset(%struct.fw_ohci* %25) #11, !dbg !12084
  %26 = load i32, i32* %self_id, align 4, !dbg !12085
  %or26 = or i32 %26, %call25, !dbg !12085
  store i32 %or26, i32* %self_id, align 4, !dbg !12085
  %27 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12086
  %28 = load i32, i32* %self_id, align 4, !dbg !12087
  %29 = load i32, i32* %self_id_count.addr, align 4, !dbg !12088
  %call27 = call i32 @get_self_id_pos(%struct.fw_ohci* %27, i32 %28, i32 %29) #11, !dbg !12089
  store i32 %call27, i32* %pos, align 4, !dbg !12090
  %30 = load i32, i32* %pos, align 4, !dbg !12091
  %cmp28 = icmp sge i32 %30, 0, !dbg !12093
  br i1 %cmp28, label %if.then29, label %if.end39, !dbg !12094

if.then29:                                        ; preds = %for.end
  %31 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12095
  %self_id_buffer = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %31, i32 0, i32 38, !dbg !12097
  %32 = load i32, i32* %pos, align 4, !dbg !12098
  %add = add i32 %32, 1, !dbg !12099
  %idxprom = sext i32 %add to i64, !dbg !12095
  %arrayidx = getelementptr [512 x i32], [512 x i32]* %self_id_buffer, i64 0, i64 %idxprom, !dbg !12095
  %33 = bitcast i32* %arrayidx to i8*, !dbg !12100
  %34 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12101
  %self_id_buffer30 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %34, i32 0, i32 38, !dbg !12102
  %35 = load i32, i32* %pos, align 4, !dbg !12103
  %idxprom31 = sext i32 %35 to i64, !dbg !12101
  %arrayidx32 = getelementptr [512 x i32], [512 x i32]* %self_id_buffer30, i64 0, i64 %idxprom31, !dbg !12101
  %36 = bitcast i32* %arrayidx32 to i8*, !dbg !12100
  %37 = load i32, i32* %self_id_count.addr, align 4, !dbg !12104
  %38 = load i32, i32* %pos, align 4, !dbg !12105
  %sub33 = sub i32 %37, %38, !dbg !12106
  %conv = sext i32 %sub33 to i64, !dbg !12107
  %mul34 = mul i64 %conv, 4, !dbg !12108
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %36, i64 %mul34, i1 false), !dbg !12100
  %39 = load i32, i32* %self_id, align 4, !dbg !12109
  %40 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12110
  %self_id_buffer35 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %40, i32 0, i32 38, !dbg !12111
  %41 = load i32, i32* %pos, align 4, !dbg !12112
  %idxprom36 = sext i32 %41 to i64, !dbg !12110
  %arrayidx37 = getelementptr [512 x i32], [512 x i32]* %self_id_buffer35, i64 0, i64 %idxprom36, !dbg !12110
  store i32 %39, i32* %arrayidx37, align 4, !dbg !12113
  %42 = load i32, i32* %self_id_count.addr, align 4, !dbg !12114
  %inc38 = add i32 %42, 1, !dbg !12114
  store i32 %inc38, i32* %self_id_count.addr, align 4, !dbg !12114
  br label %if.end39, !dbg !12115

if.end39:                                         ; preds = %if.then29, %for.end
  %43 = load i32, i32* %self_id_count.addr, align 4, !dbg !12116
  store i32 %43, i32* %retval, align 4, !dbg !12117
  br label %return, !dbg !12117

return:                                           ; preds = %if.end39, %if.then20, %if.then12, %if.then4, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !12118
  ret i32 %44, !dbg !12118
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @at_context_flush(%struct.context* %ctx) #2 !dbg !12119 {
entry:
  %ctx.addr = alloca %struct.context*, align 8
  store %struct.context* %ctx, %struct.context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %ctx.addr, metadata !12120, metadata !DIExpression()), !dbg !12121
  %0 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !12122
  %tasklet = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 12, !dbg !12123
  call void @tasklet_disable(%struct.tasklet_struct* %tasklet) #11, !dbg !12124
  %1 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !12125
  %flushing = getelementptr inbounds %struct.context, %struct.context* %1, i32 0, i32 5, !dbg !12126
  store i8 1, i8* %flushing, align 1, !dbg !12127
  %2 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !12128
  %3 = ptrtoint %struct.context* %2 to i64, !dbg !12129
  call void @context_tasklet(i64 %3) #11, !dbg !12130
  %4 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !12131
  %flushing1 = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 5, !dbg !12132
  store i8 0, i8* %flushing1, align 1, !dbg !12133
  %5 = load %struct.context*, %struct.context** %ctx.addr, align 8, !dbg !12134
  %tasklet2 = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 12, !dbg !12135
  call void @tasklet_enable(%struct.tasklet_struct* %tasklet2) #11, !dbg !12136
  ret void, !dbg !12137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @log_selfids(%struct.fw_ohci* %ohci, i32 %generation, i32 %self_id_count) #2 !dbg !12138 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %generation.addr = alloca i32, align 4
  %self_id_count.addr = alloca i32, align 4
  %s = alloca i32*, align 8
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !12141, metadata !DIExpression()), !dbg !12142
  store i32 %generation, i32* %generation.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %generation.addr, metadata !12143, metadata !DIExpression()), !dbg !12144
  store i32 %self_id_count, i32* %self_id_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %self_id_count.addr, metadata !12145, metadata !DIExpression()), !dbg !12146
  call void @llvm.dbg.declare(metadata i32** %s, metadata !12147, metadata !DIExpression()), !dbg !12148
  %0 = load i32, i32* @param_debug, align 4, !dbg !12149
  %and = and i32 %0, 2, !dbg !12149
  %tobool = icmp ne i32 %and, 0, !dbg !12149
  %lnot = xor i1 %tobool, true, !dbg !12149
  %lnot1 = xor i1 %lnot, true, !dbg !12149
  %lnot2 = xor i1 %lnot1, true, !dbg !12149
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12149
  %conv = sext i32 %lnot.ext to i64, !dbg !12149
  %tobool3 = icmp ne i64 %conv, 0, !dbg !12149
  br i1 %tobool3, label %if.then, label %if.end, !dbg !12151

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !12152

if.end:                                           ; preds = %entry
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12153
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 0, !dbg !12153
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !12153
  %2 = load %struct.device*, %struct.device** %device, align 8, !dbg !12153
  %3 = load i32, i32* %self_id_count.addr, align 4, !dbg !12153
  %4 = load i32, i32* %generation.addr, align 4, !dbg !12153
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12153
  %node_id = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %5, i32 0, i32 2, !dbg !12153
  %6 = load i32, i32* %node_id, align 8, !dbg !12153
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.73, i64 0, i64 0), i32 %3, i32 %4, i32 %6) #12, !dbg !12153
  %7 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12154
  %self_id_buffer = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %7, i32 0, i32 38, !dbg !12156
  %arraydecay = getelementptr inbounds [512 x i32], [512 x i32]* %self_id_buffer, i64 0, i64 0, !dbg !12154
  store i32* %arraydecay, i32** %s, align 8, !dbg !12157
  br label %for.cond, !dbg !12158

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %self_id_count.addr, align 4, !dbg !12159
  %dec = add i32 %8, -1, !dbg !12159
  store i32 %dec, i32* %self_id_count.addr, align 4, !dbg !12159
  %tobool4 = icmp ne i32 %8, 0, !dbg !12161
  br i1 %tobool4, label %for.body, label %for.end, !dbg !12161

for.body:                                         ; preds = %for.cond
  %9 = load i32*, i32** %s, align 8, !dbg !12162
  %10 = load i32, i32* %9, align 4, !dbg !12164
  %and5 = and i32 %10, 8388608, !dbg !12165
  %cmp = icmp eq i32 %and5, 0, !dbg !12166
  br i1 %cmp, label %if.then7, label %if.else, !dbg !12167

if.then7:                                         ; preds = %for.body
  %11 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12168
  %card8 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %11, i32 0, i32 0, !dbg !12168
  %device9 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card8, i32 0, i32 1, !dbg !12168
  %12 = load %struct.device*, %struct.device** %device9, align 8, !dbg !12168
  %13 = load i32*, i32** %s, align 8, !dbg !12168
  %14 = load i32, i32* %13, align 4, !dbg !12168
  %15 = load i32*, i32** %s, align 8, !dbg !12168
  %16 = load i32, i32* %15, align 4, !dbg !12168
  %shr = lshr i32 %16, 24, !dbg !12168
  %and10 = and i32 %shr, 63, !dbg !12168
  %17 = load i32*, i32** %s, align 8, !dbg !12168
  %call = call signext i8 @_p(i32* %17, i32 6) #11, !dbg !12168
  %conv11 = sext i8 %call to i32, !dbg !12168
  %18 = load i32*, i32** %s, align 8, !dbg !12168
  %call12 = call signext i8 @_p(i32* %18, i32 4) #11, !dbg !12168
  %conv13 = sext i8 %call12 to i32, !dbg !12168
  %19 = load i32*, i32** %s, align 8, !dbg !12168
  %call14 = call signext i8 @_p(i32* %19, i32 2) #11, !dbg !12168
  %conv15 = sext i8 %call14 to i32, !dbg !12168
  %20 = load i32*, i32** %s, align 8, !dbg !12168
  %21 = load i32, i32* %20, align 4, !dbg !12168
  %shr16 = lshr i32 %21, 14, !dbg !12168
  %and17 = and i32 %shr16, 3, !dbg !12168
  %idxprom = zext i32 %and17 to i64, !dbg !12168
  %arrayidx = getelementptr [4 x i8*], [4 x i8*]* @speed, i64 0, i64 %idxprom, !dbg !12168
  %22 = load i8*, i8** %arrayidx, align 8, !dbg !12168
  %23 = load i32*, i32** %s, align 8, !dbg !12168
  %24 = load i32, i32* %23, align 4, !dbg !12168
  %shr18 = lshr i32 %24, 16, !dbg !12168
  %and19 = and i32 %shr18, 63, !dbg !12168
  %25 = load i32*, i32** %s, align 8, !dbg !12168
  %26 = load i32, i32* %25, align 4, !dbg !12168
  %shr20 = lshr i32 %26, 8, !dbg !12168
  %and21 = and i32 %shr20, 7, !dbg !12168
  %idxprom22 = zext i32 %and21 to i64, !dbg !12168
  %arrayidx23 = getelementptr [8 x i8*], [8 x i8*]* @power, i64 0, i64 %idxprom22, !dbg !12168
  %27 = load i8*, i8** %arrayidx23, align 8, !dbg !12168
  %28 = load i32*, i32** %s, align 8, !dbg !12168
  %29 = load i32, i32* %28, align 4, !dbg !12168
  %shr24 = lshr i32 %29, 22, !dbg !12168
  %and25 = and i32 %shr24, 1, !dbg !12168
  %tobool26 = icmp ne i32 %and25, 0, !dbg !12168
  %30 = zext i1 %tobool26 to i64, !dbg !12168
  %cond = select i1 %tobool26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12168
  %31 = load i32*, i32** %s, align 8, !dbg !12168
  %32 = load i32, i32* %31, align 4, !dbg !12168
  %shr27 = lshr i32 %32, 11, !dbg !12168
  %and28 = and i32 %shr27, 1, !dbg !12168
  %tobool29 = icmp ne i32 %and28, 0, !dbg !12168
  %33 = zext i1 %tobool29 to i64, !dbg !12168
  %cond30 = select i1 %tobool29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12168
  %34 = load i32*, i32** %s, align 8, !dbg !12168
  %35 = load i32, i32* %34, align 4, !dbg !12168
  %and31 = and i32 %35, 2, !dbg !12168
  %tobool32 = icmp ne i32 %and31, 0, !dbg !12168
  %36 = zext i1 %tobool32 to i64, !dbg !12168
  %cond33 = select i1 %tobool32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12168
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %12, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.74, i64 0, i64 0), i32 %14, i32 %and10, i32 %conv11, i32 %conv13, i32 %conv15, i8* %22, i32 %and19, i8* %27, i8* %cond, i8* %cond30, i8* %cond33) #12, !dbg !12168
  br label %if.end54, !dbg !12168

if.else:                                          ; preds = %for.body
  %37 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12169
  %card34 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %37, i32 0, i32 0, !dbg !12169
  %device35 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card34, i32 0, i32 1, !dbg !12169
  %38 = load %struct.device*, %struct.device** %device35, align 8, !dbg !12169
  %39 = load i32*, i32** %s, align 8, !dbg !12169
  %40 = load i32, i32* %39, align 4, !dbg !12169
  %41 = load i32*, i32** %s, align 8, !dbg !12169
  %42 = load i32, i32* %41, align 4, !dbg !12169
  %shr36 = lshr i32 %42, 24, !dbg !12169
  %and37 = and i32 %shr36, 63, !dbg !12169
  %43 = load i32*, i32** %s, align 8, !dbg !12169
  %call38 = call signext i8 @_p(i32* %43, i32 16) #11, !dbg !12169
  %conv39 = sext i8 %call38 to i32, !dbg !12169
  %44 = load i32*, i32** %s, align 8, !dbg !12169
  %call40 = call signext i8 @_p(i32* %44, i32 14) #11, !dbg !12169
  %conv41 = sext i8 %call40 to i32, !dbg !12169
  %45 = load i32*, i32** %s, align 8, !dbg !12169
  %call42 = call signext i8 @_p(i32* %45, i32 12) #11, !dbg !12169
  %conv43 = sext i8 %call42 to i32, !dbg !12169
  %46 = load i32*, i32** %s, align 8, !dbg !12169
  %call44 = call signext i8 @_p(i32* %46, i32 10) #11, !dbg !12169
  %conv45 = sext i8 %call44 to i32, !dbg !12169
  %47 = load i32*, i32** %s, align 8, !dbg !12169
  %call46 = call signext i8 @_p(i32* %47, i32 8) #11, !dbg !12169
  %conv47 = sext i8 %call46 to i32, !dbg !12169
  %48 = load i32*, i32** %s, align 8, !dbg !12169
  %call48 = call signext i8 @_p(i32* %48, i32 6) #11, !dbg !12169
  %conv49 = sext i8 %call48 to i32, !dbg !12169
  %49 = load i32*, i32** %s, align 8, !dbg !12169
  %call50 = call signext i8 @_p(i32* %49, i32 4) #11, !dbg !12169
  %conv51 = sext i8 %call50 to i32, !dbg !12169
  %50 = load i32*, i32** %s, align 8, !dbg !12169
  %call52 = call signext i8 @_p(i32* %50, i32 2) #11, !dbg !12169
  %conv53 = sext i8 %call52 to i32, !dbg !12169
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %38, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.78, i64 0, i64 0), i32 %40, i32 %and37, i32 %conv39, i32 %conv41, i32 %conv43, i32 %conv45, i32 %conv47, i32 %conv49, i32 %conv51, i32 %conv53) #12, !dbg !12169
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.then7
  br label %for.inc, !dbg !12170

for.inc:                                          ; preds = %if.end54
  %51 = load i32*, i32** %s, align 8, !dbg !12171
  %incdec.ptr = getelementptr i32, i32* %51, i32 1, !dbg !12171
  store i32* %incdec.ptr, i32** %s, align 8, !dbg !12171
  br label %for.cond, !dbg !12172, !llvm.loop !12173

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !12175
}

; Function Attrs: noredzone
declare dso_local void @fw_core_handle_bus_reset(%struct.fw_card*, i32, i32, i32, i32*, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_status_for_port(%struct.fw_ohci* %ohci, i32 %port_index) #2 !dbg !12176 {
entry:
  %retval = alloca i32, align 4
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %port_index.addr = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !12177, metadata !DIExpression()), !dbg !12178
  store i32 %port_index, i32* %port_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_index.addr, metadata !12179, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12181, metadata !DIExpression()), !dbg !12182
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12183
  %phy_reg_mutex = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %0, i32 0, i32 14, !dbg !12184
  call void @mutex_lock(%struct.mutex* %phy_reg_mutex) #11, !dbg !12185
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12186
  %2 = load i32, i32* %port_index.addr, align 4, !dbg !12187
  %call = call i32 @write_phy_reg(%struct.fw_ohci* %1, i32 7, i32 %2) #11, !dbg !12188
  store i32 %call, i32* %reg, align 4, !dbg !12189
  %3 = load i32, i32* %reg, align 4, !dbg !12190
  %cmp = icmp sge i32 %3, 0, !dbg !12192
  br i1 %cmp, label %if.then, label %if.end, !dbg !12193

if.then:                                          ; preds = %entry
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12194
  %call1 = call i32 @read_phy_reg(%struct.fw_ohci* %4, i32 8) #11, !dbg !12195
  store i32 %call1, i32* %reg, align 4, !dbg !12196
  br label %if.end, !dbg !12197

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12198
  %phy_reg_mutex2 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %5, i32 0, i32 14, !dbg !12199
  call void @mutex_unlock(%struct.mutex* %phy_reg_mutex2) #11, !dbg !12200
  %6 = load i32, i32* %reg, align 4, !dbg !12201
  %cmp3 = icmp slt i32 %6, 0, !dbg !12203
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !12204

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* %reg, align 4, !dbg !12205
  store i32 %7, i32* %retval, align 4, !dbg !12206
  br label %return, !dbg !12206

if.end5:                                          ; preds = %if.end
  %8 = load i32, i32* %reg, align 4, !dbg !12207
  %and = and i32 %8, 15, !dbg !12208
  switch i32 %and, label %sw.epilog [
    i32 6, label %sw.bb
    i32 14, label %sw.bb6
  ], !dbg !12209

sw.bb:                                            ; preds = %if.end5
  store i32 2, i32* %retval, align 4, !dbg !12210
  br label %return, !dbg !12210

sw.bb6:                                           ; preds = %if.end5
  store i32 3, i32* %retval, align 4, !dbg !12212
  br label %return, !dbg !12212

sw.epilog:                                        ; preds = %if.end5
  store i32 1, i32* %retval, align 4, !dbg !12213
  br label %return, !dbg !12213

return:                                           ; preds = %sw.epilog, %sw.bb6, %sw.bb, %if.then4
  %9 = load i32, i32* %retval, align 4, !dbg !12214
  ret i32 %9, !dbg !12214
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @initiated_reset(%struct.fw_ohci* %ohci) #2 !dbg !12215 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %reg = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !12216, metadata !DIExpression()), !dbg !12217
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12218, metadata !DIExpression()), !dbg !12219
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12220, metadata !DIExpression()), !dbg !12221
  store i32 0, i32* %ret, align 4, !dbg !12221
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12222
  %phy_reg_mutex = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %0, i32 0, i32 14, !dbg !12223
  call void @mutex_lock(%struct.mutex* %phy_reg_mutex) #11, !dbg !12224
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12225
  %call = call i32 @write_phy_reg(%struct.fw_ohci* %1, i32 7, i32 224) #11, !dbg !12226
  store i32 %call, i32* %reg, align 4, !dbg !12227
  %2 = load i32, i32* %reg, align 4, !dbg !12228
  %cmp = icmp sge i32 %2, 0, !dbg !12230
  br i1 %cmp, label %if.then, label %if.end12, !dbg !12231

if.then:                                          ; preds = %entry
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12232
  %call1 = call i32 @read_phy_reg(%struct.fw_ohci* %3, i32 8) #11, !dbg !12234
  store i32 %call1, i32* %reg, align 4, !dbg !12235
  %4 = load i32, i32* %reg, align 4, !dbg !12236
  %or = or i32 %4, 64, !dbg !12236
  store i32 %or, i32* %reg, align 4, !dbg !12236
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12237
  %6 = load i32, i32* %reg, align 4, !dbg !12238
  %call2 = call i32 @write_phy_reg(%struct.fw_ohci* %5, i32 8, i32 %6) #11, !dbg !12239
  store i32 %call2, i32* %reg, align 4, !dbg !12240
  %7 = load i32, i32* %reg, align 4, !dbg !12241
  %cmp3 = icmp sge i32 %7, 0, !dbg !12243
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !12244

if.then4:                                         ; preds = %if.then
  %8 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12245
  %call5 = call i32 @read_phy_reg(%struct.fw_ohci* %8, i32 12) #11, !dbg !12247
  store i32 %call5, i32* %reg, align 4, !dbg !12248
  %9 = load i32, i32* %reg, align 4, !dbg !12249
  %cmp6 = icmp sge i32 %9, 0, !dbg !12251
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !12252

if.then7:                                         ; preds = %if.then4
  %10 = load i32, i32* %reg, align 4, !dbg !12253
  %and = and i32 %10, 8, !dbg !12256
  %cmp8 = icmp eq i32 %and, 8, !dbg !12257
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !12258

if.then9:                                         ; preds = %if.then7
  store i32 2, i32* %ret, align 4, !dbg !12259
  br label %if.end, !dbg !12261

if.end:                                           ; preds = %if.then9, %if.then7
  br label %if.end10, !dbg !12262

if.end10:                                         ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !12263

if.end11:                                         ; preds = %if.end10, %if.then
  br label %if.end12, !dbg !12264

if.end12:                                         ; preds = %if.end11, %entry
  %11 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12265
  %phy_reg_mutex13 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %11, i32 0, i32 14, !dbg !12266
  call void @mutex_unlock(%struct.mutex* %phy_reg_mutex13) #11, !dbg !12267
  %12 = load i32, i32* %ret, align 4, !dbg !12268
  ret i32 %12, !dbg !12269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_self_id_pos(%struct.fw_ohci* %ohci, i32 %self_id, i32 %self_id_count) #2 !dbg !12270 {
entry:
  %retval = alloca i32, align 4
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %self_id.addr = alloca i32, align 4
  %self_id_count.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %entry1 = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !12273, metadata !DIExpression()), !dbg !12274
  store i32 %self_id, i32* %self_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %self_id.addr, metadata !12275, metadata !DIExpression()), !dbg !12276
  store i32 %self_id_count, i32* %self_id_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %self_id_count.addr, metadata !12277, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12279, metadata !DIExpression()), !dbg !12280
  call void @llvm.dbg.declare(metadata i32* %entry1, metadata !12281, metadata !DIExpression()), !dbg !12282
  store i32 0, i32* %i, align 4, !dbg !12283
  br label %for.cond, !dbg !12285

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12286
  %1 = load i32, i32* %self_id_count.addr, align 4, !dbg !12288
  %cmp = icmp slt i32 %0, %1, !dbg !12289
  br i1 %cmp, label %for.body, label %for.end, !dbg !12290

for.body:                                         ; preds = %for.cond
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12291
  %self_id_buffer = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %2, i32 0, i32 38, !dbg !12293
  %3 = load i32, i32* %i, align 4, !dbg !12294
  %idxprom = sext i32 %3 to i64, !dbg !12291
  %arrayidx = getelementptr [512 x i32], [512 x i32]* %self_id_buffer, i64 0, i64 %idxprom, !dbg !12291
  %4 = load i32, i32* %arrayidx, align 4, !dbg !12291
  store i32 %4, i32* %entry1, align 4, !dbg !12295
  %5 = load i32, i32* %self_id.addr, align 4, !dbg !12296
  %and = and i32 %5, -16777216, !dbg !12298
  %6 = load i32, i32* %entry1, align 4, !dbg !12299
  %and2 = and i32 %6, -16777216, !dbg !12300
  %cmp3 = icmp eq i32 %and, %and2, !dbg !12301
  br i1 %cmp3, label %if.then, label %if.end, !dbg !12302

if.then:                                          ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !12303
  br label %return, !dbg !12303

if.end:                                           ; preds = %for.body
  %7 = load i32, i32* %self_id.addr, align 4, !dbg !12304
  %and4 = and i32 %7, -16777216, !dbg !12306
  %8 = load i32, i32* %entry1, align 4, !dbg !12307
  %and5 = and i32 %8, -16777216, !dbg !12308
  %cmp6 = icmp ult i32 %and4, %and5, !dbg !12309
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !12310

if.then7:                                         ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !12311
  store i32 %9, i32* %retval, align 4, !dbg !12312
  br label %return, !dbg !12312

if.end8:                                          ; preds = %if.end
  br label %for.inc, !dbg !12313

for.inc:                                          ; preds = %if.end8
  %10 = load i32, i32* %i, align 4, !dbg !12314
  %inc = add i32 %10, 1, !dbg !12314
  store i32 %inc, i32* %i, align 4, !dbg !12314
  br label %for.cond, !dbg !12315, !llvm.loop !12316

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !12318
  store i32 %11, i32* %retval, align 4, !dbg !12319
  br label %return, !dbg !12319

return:                                           ; preds = %for.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !12320
  ret i32 %12, !dbg !12320
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal signext i8 @_p(i32* %s, i32 %shift) #2 !dbg !12321 {
entry:
  %s.addr = alloca i32*, align 8
  %shift.addr = alloca i32, align 4
  store i32* %s, i32** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %s.addr, metadata !12324, metadata !DIExpression()), !dbg !12325
  store i32 %shift, i32* %shift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr, metadata !12326, metadata !DIExpression()), !dbg !12327
  %0 = load i32*, i32** %s.addr, align 8, !dbg !12328
  %1 = load i32, i32* %0, align 4, !dbg !12329
  %2 = load i32, i32* %shift.addr, align 4, !dbg !12330
  %shr = lshr i32 %1, %2, !dbg !12331
  %and = and i32 %shr, 3, !dbg !12332
  %idxprom = zext i32 %and to i64, !dbg !12333
  %arrayidx = getelementptr [4 x i8], [4 x i8]* @port, i64 0, i64 %idxprom, !dbg !12333
  %3 = load i8, i8* %arrayidx, align 1, !dbg !12333
  ret i8 %3, !dbg !12334
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #1

; Function Attrs: noredzone
declare dso_local void @tasklet_init(%struct.tasklet_struct*, void (i64)*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ar_context_tasklet(i64 %data) #2 !dbg !12335 {
entry:
  %data.addr = alloca i64, align 8
  %ctx = alloca %struct.ar_context*, align 8
  %end_buffer_index = alloca i32, align 4
  %end_buffer_offset = alloca i32, align 4
  %p = alloca i8*, align 8
  %end = alloca i8*, align 8
  %buffer_end = alloca i8*, align 8
  store i64 %data, i64* %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %data.addr, metadata !12336, metadata !DIExpression()), !dbg !12337
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx, metadata !12338, metadata !DIExpression()), !dbg !12339
  %0 = load i64, i64* %data.addr, align 8, !dbg !12340
  %1 = inttoptr i64 %0 to %struct.ar_context*, !dbg !12341
  store %struct.ar_context* %1, %struct.ar_context** %ctx, align 8, !dbg !12339
  call void @llvm.dbg.declare(metadata i32* %end_buffer_index, metadata !12342, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.declare(metadata i32* %end_buffer_offset, metadata !12344, metadata !DIExpression()), !dbg !12345
  call void @llvm.dbg.declare(metadata i8** %p, metadata !12346, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.declare(metadata i8** %end, metadata !12348, metadata !DIExpression()), !dbg !12349
  %2 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12350
  %pointer = getelementptr inbounds %struct.ar_context, %struct.ar_context* %2, i32 0, i32 5, !dbg !12351
  %3 = load i8*, i8** %pointer, align 8, !dbg !12351
  store i8* %3, i8** %p, align 8, !dbg !12352
  %4 = load i8*, i8** %p, align 8, !dbg !12353
  %tobool = icmp ne i8* %4, null, !dbg !12353
  br i1 %tobool, label %if.end, label %if.then, !dbg !12355

if.then:                                          ; preds = %entry
  br label %return, !dbg !12356

if.end:                                           ; preds = %entry
  %5 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12357
  %call = call i32 @ar_search_last_active_buffer(%struct.ar_context* %5, i32* %end_buffer_offset) #11, !dbg !12358
  store i32 %call, i32* %end_buffer_index, align 4, !dbg !12359
  %6 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12360
  %7 = load i32, i32* %end_buffer_index, align 4, !dbg !12361
  %8 = load i32, i32* %end_buffer_offset, align 4, !dbg !12362
  call void @ar_sync_buffers_for_cpu(%struct.ar_context* %6, i32 %7, i32 %8) #11, !dbg !12363
  %9 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12364
  %buffer = getelementptr inbounds %struct.ar_context, %struct.ar_context* %9, i32 0, i32 2, !dbg !12365
  %10 = load i8*, i8** %buffer, align 8, !dbg !12365
  %11 = load i32, i32* %end_buffer_index, align 4, !dbg !12366
  %conv = zext i32 %11 to i64, !dbg !12366
  %mul = mul i64 %conv, 4096, !dbg !12367
  %add.ptr = getelementptr i8, i8* %10, i64 %mul, !dbg !12368
  %12 = load i32, i32* %end_buffer_offset, align 4, !dbg !12369
  %idx.ext = zext i32 %12 to i64, !dbg !12370
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !12370
  store i8* %add.ptr1, i8** %end, align 8, !dbg !12371
  %13 = load i32, i32* %end_buffer_index, align 4, !dbg !12372
  %14 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12374
  %call2 = call i32 @ar_first_buffer_index(%struct.ar_context* %14) #11, !dbg !12375
  %cmp = icmp ult i32 %13, %call2, !dbg !12376
  br i1 %cmp, label %if.then4, label %if.end13, !dbg !12377

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %buffer_end, metadata !12378, metadata !DIExpression()), !dbg !12380
  %15 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12381
  %buffer5 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %15, i32 0, i32 2, !dbg !12382
  %16 = load i8*, i8** %buffer5, align 8, !dbg !12382
  %add.ptr6 = getelementptr i8, i8* %16, i64 32768, !dbg !12383
  store i8* %add.ptr6, i8** %buffer_end, align 8, !dbg !12380
  %17 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12384
  %18 = load i8*, i8** %p, align 8, !dbg !12385
  %19 = load i8*, i8** %buffer_end, align 8, !dbg !12386
  %call7 = call i8* @handle_ar_packets(%struct.ar_context* %17, i8* %18, i8* %19) #11, !dbg !12387
  store i8* %call7, i8** %p, align 8, !dbg !12388
  %20 = load i8*, i8** %p, align 8, !dbg !12389
  %21 = load i8*, i8** %buffer_end, align 8, !dbg !12391
  %cmp8 = icmp ult i8* %20, %21, !dbg !12392
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !12393

if.then10:                                        ; preds = %if.then4
  br label %error, !dbg !12394

if.end11:                                         ; preds = %if.then4
  %22 = load i8*, i8** %p, align 8, !dbg !12395
  %add.ptr12 = getelementptr i8, i8* %22, i64 -32768, !dbg !12395
  store i8* %add.ptr12, i8** %p, align 8, !dbg !12395
  br label %if.end13, !dbg !12396

if.end13:                                         ; preds = %if.end11, %if.end
  %23 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12397
  %24 = load i8*, i8** %p, align 8, !dbg !12398
  %25 = load i8*, i8** %end, align 8, !dbg !12399
  %call14 = call i8* @handle_ar_packets(%struct.ar_context* %23, i8* %24, i8* %25) #11, !dbg !12400
  store i8* %call14, i8** %p, align 8, !dbg !12401
  %26 = load i8*, i8** %p, align 8, !dbg !12402
  %27 = load i8*, i8** %end, align 8, !dbg !12404
  %cmp15 = icmp ne i8* %26, %27, !dbg !12405
  br i1 %cmp15, label %if.then17, label %if.end22, !dbg !12406

if.then17:                                        ; preds = %if.end13
  %28 = load i8*, i8** %p, align 8, !dbg !12407
  %29 = load i8*, i8** %end, align 8, !dbg !12410
  %cmp18 = icmp ugt i8* %28, %29, !dbg !12411
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !12412

if.then20:                                        ; preds = %if.then17
  %30 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12413
  call void @ar_context_abort(%struct.ar_context* %30, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.91, i64 0, i64 0)) #11, !dbg !12414
  br label %if.end21, !dbg !12414

if.end21:                                         ; preds = %if.then20, %if.then17
  br label %error, !dbg !12415

if.end22:                                         ; preds = %if.end13
  %31 = load i8*, i8** %p, align 8, !dbg !12416
  %32 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12417
  %pointer23 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %32, i32 0, i32 5, !dbg !12418
  store i8* %31, i8** %pointer23, align 8, !dbg !12419
  %33 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12420
  %34 = load i32, i32* %end_buffer_index, align 4, !dbg !12421
  call void @ar_recycle_buffers(%struct.ar_context* %33, i32 %34) #11, !dbg !12422
  br label %return, !dbg !12423

error:                                            ; preds = %if.end21, %if.then10
  call void @llvm.dbg.label(metadata !12424), !dbg !12425
  %35 = load %struct.ar_context*, %struct.ar_context** %ctx, align 8, !dbg !12426
  %pointer24 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %35, i32 0, i32 5, !dbg !12427
  store i8* null, i8** %pointer24, align 8, !dbg !12428
  br label %return, !dbg !12429

return:                                           ; preds = %error, %if.end22, %if.then
  ret void, !dbg !12429
}

; Function Attrs: noredzone
declare dso_local %struct.page* @dma_alloc_pages(%struct.device*, i64, i64*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_page_private(%struct.page* %page, i64 %private) #2 !dbg !12430 {
entry:
  %page.addr = alloca %struct.page*, align 8
  %private.addr = alloca i64, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !12433, metadata !DIExpression()), !dbg !12434
  store i64 %private, i64* %private.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %private.addr, metadata !12435, metadata !DIExpression()), !dbg !12436
  %0 = load i64, i64* %private.addr, align 8, !dbg !12437
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !12438
  %2 = getelementptr inbounds %struct.page, %struct.page* %1, i32 0, i32 1, !dbg !12439
  %3 = bitcast %union.anon.2* %2 to %struct.anon.3*, !dbg !12439
  %private1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3, i32 0, i32 3, !dbg !12439
  store i64 %0, i64* %private1, align 8, !dbg !12440
  ret void, !dbg !12441
}

; Function Attrs: noredzone
declare dso_local i8* @vmap(%struct.page**, i32, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ar_buffer_bus(%struct.ar_context* %ctx, i32 %i) #2 !dbg !12442 {
entry:
  %ctx.addr = alloca %struct.ar_context*, align 8
  %i.addr = alloca i32, align 4
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !12445, metadata !DIExpression()), !dbg !12446
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !12447, metadata !DIExpression()), !dbg !12448
  %0 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12449
  %pages = getelementptr inbounds %struct.ar_context, %struct.ar_context* %0, i32 0, i32 1, !dbg !12449
  %1 = load i32, i32* %i.addr, align 4, !dbg !12449
  %idxprom = zext i32 %1 to i64, !dbg !12449
  %arrayidx = getelementptr [8 x %struct.page*], [8 x %struct.page*]* %pages, i64 0, i64 %idxprom, !dbg !12449
  %2 = load %struct.page*, %struct.page** %arrayidx, align 8, !dbg !12449
  %3 = getelementptr inbounds %struct.page, %struct.page* %2, i32 0, i32 1, !dbg !12449
  %4 = bitcast %union.anon.2* %3 to %struct.anon.3*, !dbg !12449
  %private = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4, i32 0, i32 3, !dbg !12449
  %5 = load i64, i64* %private, align 8, !dbg !12449
  ret i64 %5, !dbg !12450
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ar_next_buffer_index(i32 %index) #2 !dbg !12451 {
entry:
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12452, metadata !DIExpression()), !dbg !12453
  %0 = load i32, i32* %index.addr, align 4, !dbg !12454
  %add = add i32 %0, 1, !dbg !12455
  %conv = zext i32 %add to i64, !dbg !12456
  %rem = urem i64 %conv, 8, !dbg !12457
  %conv1 = trunc i64 %rem to i32, !dbg !12456
  ret i32 %conv1, !dbg !12458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ar_search_last_active_buffer(%struct.ar_context* %ctx, i32* %buffer_offset) #2 !dbg !12459 {
entry:
  %ctx.addr = alloca %struct.ar_context*, align 8
  %buffer_offset.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %next_i = alloca i32, align 4
  %last = alloca i32, align 4
  %res_count = alloca i16, align 2
  %next_res_count = alloca i16, align 2
  %tmp = alloca i16, align 2
  %tmp7 = alloca i16, align 2
  %tmp21 = alloca i16, align 2
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !12462, metadata !DIExpression()), !dbg !12463
  store i32* %buffer_offset, i32** %buffer_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer_offset.addr, metadata !12464, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12466, metadata !DIExpression()), !dbg !12467
  call void @llvm.dbg.declare(metadata i32* %next_i, metadata !12468, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.declare(metadata i32* %last, metadata !12470, metadata !DIExpression()), !dbg !12471
  %0 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12472
  %last_buffer_index = getelementptr inbounds %struct.ar_context, %struct.ar_context* %0, i32 0, i32 6, !dbg !12473
  %1 = load i32, i32* %last_buffer_index, align 8, !dbg !12473
  store i32 %1, i32* %last, align 4, !dbg !12471
  call void @llvm.dbg.declare(metadata i16* %res_count, metadata !12474, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.declare(metadata i16* %next_res_count, metadata !12476, metadata !DIExpression()), !dbg !12477
  %2 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12478
  %call = call i32 @ar_first_buffer_index(%struct.ar_context* %2) #11, !dbg !12479
  store i32 %call, i32* %i, align 4, !dbg !12480
  br label %do.body, !dbg !12481

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12483

do.end:                                           ; preds = %do.body
  %3 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12481
  %descriptors = getelementptr inbounds %struct.ar_context, %struct.ar_context* %3, i32 0, i32 3, !dbg !12481
  %4 = load %struct.descriptor*, %struct.descriptor** %descriptors, align 8, !dbg !12481
  %5 = load i32, i32* %i, align 4, !dbg !12481
  %idxprom = zext i32 %5 to i64, !dbg !12481
  %arrayidx = getelementptr %struct.descriptor, %struct.descriptor* %4, i64 %idxprom, !dbg !12481
  %res_count1 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx, i32 0, i32 4, !dbg !12481
  %6 = load volatile i16, i16* %res_count1, align 4, !dbg !12481
  store i16 %6, i16* %tmp, align 2, !dbg !12483
  %7 = load i16, i16* %tmp, align 2, !dbg !12481
  store i16 %7, i16* %res_count, align 2, !dbg !12485
  br label %while.cond, !dbg !12486

while.cond:                                       ; preds = %next_buffer_is_active, %do.end
  %8 = load i32, i32* %i, align 4, !dbg !12487
  %9 = load i32, i32* %last, align 4, !dbg !12488
  %cmp = icmp ne i32 %8, %9, !dbg !12489
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12490

land.rhs:                                         ; preds = %while.cond
  %10 = load i16, i16* %res_count, align 2, !dbg !12491
  %conv = zext i16 %10 to i32, !dbg !12491
  %cmp2 = icmp eq i32 %conv, 0, !dbg !12492
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ], !dbg !12493
  br i1 %11, label %while.body, label %while.end, !dbg !12486

while.body:                                       ; preds = %land.end
  %12 = load i32, i32* %i, align 4, !dbg !12494
  %call4 = call i32 @ar_next_buffer_index(i32 %12) #11, !dbg !12496
  store i32 %call4, i32* %next_i, align 4, !dbg !12497
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12498, !srcloc !12499
  br label %do.body5, !dbg !12500

do.body5:                                         ; preds = %while.body
  br label %do.end6, !dbg !12502

do.end6:                                          ; preds = %do.body5
  %13 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12500
  %descriptors8 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %13, i32 0, i32 3, !dbg !12500
  %14 = load %struct.descriptor*, %struct.descriptor** %descriptors8, align 8, !dbg !12500
  %15 = load i32, i32* %next_i, align 4, !dbg !12500
  %idxprom9 = zext i32 %15 to i64, !dbg !12500
  %arrayidx10 = getelementptr %struct.descriptor, %struct.descriptor* %14, i64 %idxprom9, !dbg !12500
  %res_count11 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx10, i32 0, i32 4, !dbg !12500
  %16 = load volatile i16, i16* %res_count11, align 4, !dbg !12500
  store i16 %16, i16* %tmp7, align 2, !dbg !12502
  %17 = load i16, i16* %tmp7, align 2, !dbg !12500
  store i16 %17, i16* %next_res_count, align 2, !dbg !12504
  %18 = load i16, i16* %next_res_count, align 2, !dbg !12505
  %conv12 = zext i16 %18 to i32, !dbg !12505
  %cmp13 = icmp eq i32 %conv12, 4096, !dbg !12507
  br i1 %cmp13, label %if.then, label %if.end31, !dbg !12508

if.then:                                          ; preds = %do.end6
  %19 = load i32, i32* %i, align 4, !dbg !12509
  %20 = load i32, i32* %last, align 4, !dbg !12512
  %cmp15 = icmp ne i32 %19, %20, !dbg !12513
  br i1 %cmp15, label %if.then17, label %if.end30, !dbg !12514

if.then17:                                        ; preds = %if.then
  %21 = load i32, i32* %next_i, align 4, !dbg !12515
  %call18 = call i32 @ar_next_buffer_index(i32 %21) #11, !dbg !12517
  store i32 %call18, i32* %next_i, align 4, !dbg !12518
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12519, !srcloc !12520
  br label %do.body19, !dbg !12521

do.body19:                                        ; preds = %if.then17
  br label %do.end20, !dbg !12523

do.end20:                                         ; preds = %do.body19
  %22 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12521
  %descriptors22 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %22, i32 0, i32 3, !dbg !12521
  %23 = load %struct.descriptor*, %struct.descriptor** %descriptors22, align 8, !dbg !12521
  %24 = load i32, i32* %next_i, align 4, !dbg !12521
  %idxprom23 = zext i32 %24 to i64, !dbg !12521
  %arrayidx24 = getelementptr %struct.descriptor, %struct.descriptor* %23, i64 %idxprom23, !dbg !12521
  %res_count25 = getelementptr inbounds %struct.descriptor, %struct.descriptor* %arrayidx24, i32 0, i32 4, !dbg !12521
  %25 = load volatile i16, i16* %res_count25, align 4, !dbg !12521
  store i16 %25, i16* %tmp21, align 2, !dbg !12523
  %26 = load i16, i16* %tmp21, align 2, !dbg !12521
  store i16 %26, i16* %next_res_count, align 2, !dbg !12525
  %27 = load i16, i16* %next_res_count, align 2, !dbg !12526
  %conv26 = zext i16 %27 to i32, !dbg !12526
  %cmp27 = icmp ne i32 %conv26, 4096, !dbg !12528
  br i1 %cmp27, label %if.then29, label %if.end, !dbg !12529

if.then29:                                        ; preds = %do.end20
  br label %next_buffer_is_active, !dbg !12530

if.end:                                           ; preds = %do.end20
  br label %if.end30, !dbg !12531

if.end30:                                         ; preds = %if.end, %if.then
  br label %while.end, !dbg !12532

if.end31:                                         ; preds = %do.end6
  br label %next_buffer_is_active, !dbg !12533

next_buffer_is_active:                            ; preds = %if.end31, %if.then29
  call void @llvm.dbg.label(metadata !12534), !dbg !12535
  %28 = load i32, i32* %next_i, align 4, !dbg !12536
  store i32 %28, i32* %i, align 4, !dbg !12537
  %29 = load i16, i16* %next_res_count, align 2, !dbg !12538
  store i16 %29, i16* %res_count, align 2, !dbg !12539
  br label %while.cond, !dbg !12486, !llvm.loop !12540

while.end:                                        ; preds = %if.end30, %land.end
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12542, !srcloc !12543
  %30 = load i16, i16* %res_count, align 2, !dbg !12544
  %conv32 = zext i16 %30 to i64, !dbg !12544
  %sub = sub i64 4096, %conv32, !dbg !12545
  %conv33 = trunc i64 %sub to i32, !dbg !12546
  %31 = load i32*, i32** %buffer_offset.addr, align 8, !dbg !12547
  store i32 %conv33, i32* %31, align 4, !dbg !12548
  %32 = load i32*, i32** %buffer_offset.addr, align 8, !dbg !12549
  %33 = load i32, i32* %32, align 4, !dbg !12551
  %conv34 = zext i32 %33 to i64, !dbg !12551
  %cmp35 = icmp ugt i64 %conv34, 4096, !dbg !12552
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12553

if.then37:                                        ; preds = %while.end
  %34 = load i32*, i32** %buffer_offset.addr, align 8, !dbg !12554
  store i32 0, i32* %34, align 4, !dbg !12556
  %35 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12557
  call void @ar_context_abort(%struct.ar_context* %35, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.92, i64 0, i64 0)) #11, !dbg !12558
  br label %if.end38, !dbg !12559

if.end38:                                         ; preds = %if.then37, %while.end
  %36 = load i32, i32* %i, align 4, !dbg !12560
  ret i32 %36, !dbg !12561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ar_sync_buffers_for_cpu(%struct.ar_context* %ctx, i32 %end_buffer_index, i32 %end_buffer_offset) #2 !dbg !12562 {
entry:
  %ctx.addr = alloca %struct.ar_context*, align 8
  %end_buffer_index.addr = alloca i32, align 4
  %end_buffer_offset.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !12565, metadata !DIExpression()), !dbg !12566
  store i32 %end_buffer_index, i32* %end_buffer_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end_buffer_index.addr, metadata !12567, metadata !DIExpression()), !dbg !12568
  store i32 %end_buffer_offset, i32* %end_buffer_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end_buffer_offset.addr, metadata !12569, metadata !DIExpression()), !dbg !12570
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12571, metadata !DIExpression()), !dbg !12572
  %0 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12573
  %call = call i32 @ar_first_buffer_index(%struct.ar_context* %0) #11, !dbg !12574
  store i32 %call, i32* %i, align 4, !dbg !12575
  br label %while.cond, !dbg !12576

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i32, i32* %i, align 4, !dbg !12577
  %2 = load i32, i32* %end_buffer_index.addr, align 4, !dbg !12578
  %cmp = icmp ne i32 %1, %2, !dbg !12579
  br i1 %cmp, label %while.body, label %while.end, !dbg !12576

while.body:                                       ; preds = %while.cond
  %3 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12580
  %ohci = getelementptr inbounds %struct.ar_context, %struct.ar_context* %3, i32 0, i32 0, !dbg !12582
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12582
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %4, i32 0, i32 0, !dbg !12583
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !12584
  %5 = load %struct.device*, %struct.device** %device, align 8, !dbg !12584
  %6 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12585
  %7 = load i32, i32* %i, align 4, !dbg !12586
  %call1 = call i64 @ar_buffer_bus(%struct.ar_context* %6, i32 %7) #11, !dbg !12587
  call void @dma_sync_single_for_cpu(%struct.device* %5, i64 %call1, i64 4096, i32 2) #11, !dbg !12588
  %8 = load i32, i32* %i, align 4, !dbg !12589
  %call2 = call i32 @ar_next_buffer_index(i32 %8) #11, !dbg !12590
  store i32 %call2, i32* %i, align 4, !dbg !12591
  br label %while.cond, !dbg !12576, !llvm.loop !12592

while.end:                                        ; preds = %while.cond
  %9 = load i32, i32* %end_buffer_offset.addr, align 4, !dbg !12594
  %cmp3 = icmp ugt i32 %9, 0, !dbg !12596
  br i1 %cmp3, label %if.then, label %if.end, !dbg !12597

if.then:                                          ; preds = %while.end
  %10 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12598
  %ohci4 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %10, i32 0, i32 0, !dbg !12599
  %11 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci4, align 8, !dbg !12599
  %card5 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %11, i32 0, i32 0, !dbg !12600
  %device6 = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card5, i32 0, i32 1, !dbg !12601
  %12 = load %struct.device*, %struct.device** %device6, align 8, !dbg !12601
  %13 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12602
  %14 = load i32, i32* %i, align 4, !dbg !12603
  %call7 = call i64 @ar_buffer_bus(%struct.ar_context* %13, i32 %14) #11, !dbg !12604
  %15 = load i32, i32* %end_buffer_offset.addr, align 4, !dbg !12605
  %conv = zext i32 %15 to i64, !dbg !12605
  call void @dma_sync_single_for_cpu(%struct.device* %12, i64 %call7, i64 %conv, i32 2) #11, !dbg !12606
  br label %if.end, !dbg !12606

if.end:                                           ; preds = %if.then, %while.end
  ret void, !dbg !12607
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ar_first_buffer_index(%struct.ar_context* %ctx) #2 !dbg !12608 {
entry:
  %ctx.addr = alloca %struct.ar_context*, align 8
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !12611, metadata !DIExpression()), !dbg !12612
  %0 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12613
  %last_buffer_index = getelementptr inbounds %struct.ar_context, %struct.ar_context* %0, i32 0, i32 6, !dbg !12614
  %1 = load i32, i32* %last_buffer_index, align 8, !dbg !12614
  %call = call i32 @ar_next_buffer_index(i32 %1) #11, !dbg !12615
  ret i32 %call, !dbg !12616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @handle_ar_packets(%struct.ar_context* %ctx, i8* %p, i8* %end) #2 !dbg !12617 {
entry:
  %retval = alloca i8*, align 8
  %ctx.addr = alloca %struct.ar_context*, align 8
  %p.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %next = alloca i8*, align 8
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !12620, metadata !DIExpression()), !dbg !12621
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12622, metadata !DIExpression()), !dbg !12623
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !12624, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.declare(metadata i8** %next, metadata !12626, metadata !DIExpression()), !dbg !12627
  br label %while.cond, !dbg !12628

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %p.addr, align 8, !dbg !12629
  %1 = load i8*, i8** %end.addr, align 8, !dbg !12630
  %cmp = icmp ult i8* %0, %1, !dbg !12631
  br i1 %cmp, label %while.body, label %while.end, !dbg !12628

while.body:                                       ; preds = %while.cond
  %2 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12632
  %3 = load i8*, i8** %p.addr, align 8, !dbg !12634
  %4 = bitcast i8* %3 to i32*, !dbg !12634
  %call = call i32* @handle_ar_packet(%struct.ar_context* %2, i32* %4) #11, !dbg !12635
  %5 = bitcast i32* %call to i8*, !dbg !12635
  store i8* %5, i8** %next, align 8, !dbg !12636
  %6 = load i8*, i8** %next, align 8, !dbg !12637
  %tobool = icmp ne i8* %6, null, !dbg !12637
  br i1 %tobool, label %if.end, label %if.then, !dbg !12639

if.then:                                          ; preds = %while.body
  %7 = load i8*, i8** %p.addr, align 8, !dbg !12640
  store i8* %7, i8** %retval, align 8, !dbg !12641
  br label %return, !dbg !12641

if.end:                                           ; preds = %while.body
  %8 = load i8*, i8** %next, align 8, !dbg !12642
  store i8* %8, i8** %p.addr, align 8, !dbg !12643
  br label %while.cond, !dbg !12628, !llvm.loop !12644

while.end:                                        ; preds = %while.cond
  %9 = load i8*, i8** %p.addr, align 8, !dbg !12646
  store i8* %9, i8** %retval, align 8, !dbg !12647
  br label %return, !dbg !12647

return:                                           ; preds = %while.end, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !12648
  ret i8* %10, !dbg !12648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ar_context_abort(%struct.ar_context* %ctx, i8* %error_msg) #2 !dbg !12649 {
entry:
  %ctx.addr = alloca %struct.ar_context*, align 8
  %error_msg.addr = alloca i8*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !12652, metadata !DIExpression()), !dbg !12653
  store i8* %error_msg, i8** %error_msg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %error_msg.addr, metadata !12654, metadata !DIExpression()), !dbg !12655
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !12656, metadata !DIExpression()), !dbg !12657
  %0 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12658
  %ohci1 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %0, i32 0, i32 0, !dbg !12659
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci1, align 8, !dbg !12659
  store %struct.fw_ohci* %1, %struct.fw_ohci** %ohci, align 8, !dbg !12657
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12660
  %3 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12662
  %regs = getelementptr inbounds %struct.ar_context, %struct.ar_context* %3, i32 0, i32 7, !dbg !12662
  %4 = load i32, i32* %regs, align 4, !dbg !12662
  %add = add i32 %4, 4, !dbg !12662
  %call = call i32 @reg_read(%struct.fw_ohci* %2, i32 %add) #11, !dbg !12663
  %and = and i32 %call, 32768, !dbg !12664
  %tobool = icmp ne i32 %and, 0, !dbg !12664
  br i1 %tobool, label %if.then, label %if.end, !dbg !12665

if.then:                                          ; preds = %entry
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12666
  %6 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12668
  %regs2 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %6, i32 0, i32 7, !dbg !12668
  %7 = load i32, i32* %regs2, align 4, !dbg !12668
  %add3 = add i32 %7, 4, !dbg !12668
  call void @reg_write(%struct.fw_ohci* %5, i32 %add3, i32 32768) #11, !dbg !12669
  %8 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12670
  call void @flush_writes(%struct.fw_ohci* %8) #11, !dbg !12671
  %9 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12672
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %9, i32 0, i32 0, !dbg !12672
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !12672
  %10 = load %struct.device*, %struct.device** %device, align 8, !dbg !12672
  %11 = load i8*, i8** %error_msg.addr, align 8, !dbg !12672
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %10, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.95, i64 0, i64 0), i8* %11) #12, !dbg !12672
  br label %if.end, !dbg !12673

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12674
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ar_recycle_buffers(%struct.ar_context* %ctx, i32 %end_buffer) #2 !dbg !12675 {
entry:
  %ctx.addr = alloca %struct.ar_context*, align 8
  %end_buffer.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !12676, metadata !DIExpression()), !dbg !12677
  store i32 %end_buffer, i32* %end_buffer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end_buffer.addr, metadata !12678, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12680, metadata !DIExpression()), !dbg !12681
  %0 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12682
  %call = call i32 @ar_first_buffer_index(%struct.ar_context* %0) #11, !dbg !12683
  store i32 %call, i32* %i, align 4, !dbg !12684
  br label %while.cond, !dbg !12685

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i32, i32* %i, align 4, !dbg !12686
  %2 = load i32, i32* %end_buffer.addr, align 4, !dbg !12687
  %cmp = icmp ne i32 %1, %2, !dbg !12688
  br i1 %cmp, label %while.body, label %while.end, !dbg !12685

while.body:                                       ; preds = %while.cond
  %3 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12689
  %ohci = getelementptr inbounds %struct.ar_context, %struct.ar_context* %3, i32 0, i32 0, !dbg !12691
  %4 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12691
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %4, i32 0, i32 0, !dbg !12692
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !12693
  %5 = load %struct.device*, %struct.device** %device, align 8, !dbg !12693
  %6 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12694
  %7 = load i32, i32* %i, align 4, !dbg !12695
  %call1 = call i64 @ar_buffer_bus(%struct.ar_context* %6, i32 %7) #11, !dbg !12696
  call void @dma_sync_single_for_device(%struct.device* %5, i64 %call1, i64 4096, i32 2) #11, !dbg !12697
  %8 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12698
  %9 = load i32, i32* %i, align 4, !dbg !12699
  call void @ar_context_link_page(%struct.ar_context* %8, i32 %9) #11, !dbg !12700
  %10 = load i32, i32* %i, align 4, !dbg !12701
  %call2 = call i32 @ar_next_buffer_index(i32 %10) #11, !dbg !12702
  store i32 %call2, i32* %i, align 4, !dbg !12703
  br label %while.cond, !dbg !12685, !llvm.loop !12704

while.end:                                        ; preds = %while.cond
  ret void, !dbg !12706
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32* @handle_ar_packet(%struct.ar_context* %ctx, i32* %buffer) #2 !dbg !12707 {
entry:
  %retval = alloca i32*, align 8
  %ctx.addr = alloca %struct.ar_context*, align 8
  %buffer.addr = alloca i32*, align 8
  %ohci = alloca %struct.fw_ohci*, align 8
  %p = alloca %struct.fw_packet, align 8
  %status = alloca i32, align 4
  %length = alloca i32, align 4
  %tcode = alloca i32, align 4
  %evt = alloca i32, align 4
  store %struct.ar_context* %ctx, %struct.ar_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ar_context** %ctx.addr, metadata !12710, metadata !DIExpression()), !dbg !12711
  store i32* %buffer, i32** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.addr, metadata !12712, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci, metadata !12714, metadata !DIExpression()), !dbg !12715
  %0 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12716
  %ohci1 = getelementptr inbounds %struct.ar_context, %struct.ar_context* %0, i32 0, i32 0, !dbg !12717
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci1, align 8, !dbg !12717
  store %struct.fw_ohci* %1, %struct.fw_ohci** %ohci, align 8, !dbg !12715
  call void @llvm.dbg.declare(metadata %struct.fw_packet* %p, metadata !12718, metadata !DIExpression()), !dbg !12719
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12720, metadata !DIExpression()), !dbg !12721
  call void @llvm.dbg.declare(metadata i32* %length, metadata !12722, metadata !DIExpression()), !dbg !12723
  call void @llvm.dbg.declare(metadata i32* %tcode, metadata !12724, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.declare(metadata i32* %evt, metadata !12726, metadata !DIExpression()), !dbg !12727
  %2 = load i32*, i32** %buffer.addr, align 8, !dbg !12728
  %arrayidx = getelementptr i32, i32* %2, i64 0, !dbg !12728
  %3 = load i32, i32* %arrayidx, align 4, !dbg !12728
  %header = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 2, !dbg !12729
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %header, i64 0, i64 0, !dbg !12730
  store i32 %3, i32* %arrayidx2, align 8, !dbg !12731
  %4 = load i32*, i32** %buffer.addr, align 8, !dbg !12732
  %arrayidx3 = getelementptr i32, i32* %4, i64 1, !dbg !12732
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !12732
  %header4 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 2, !dbg !12733
  %arrayidx5 = getelementptr [4 x i32], [4 x i32]* %header4, i64 0, i64 1, !dbg !12734
  store i32 %5, i32* %arrayidx5, align 4, !dbg !12735
  %6 = load i32*, i32** %buffer.addr, align 8, !dbg !12736
  %arrayidx6 = getelementptr i32, i32* %6, i64 2, !dbg !12736
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !12736
  %header7 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 2, !dbg !12737
  %arrayidx8 = getelementptr [4 x i32], [4 x i32]* %header7, i64 0, i64 2, !dbg !12738
  store i32 %7, i32* %arrayidx8, align 8, !dbg !12739
  %header9 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 2, !dbg !12740
  %arrayidx10 = getelementptr [4 x i32], [4 x i32]* %header9, i64 0, i64 0, !dbg !12741
  %8 = load i32, i32* %arrayidx10, align 8, !dbg !12741
  %shr = lshr i32 %8, 4, !dbg !12742
  %and = and i32 %shr, 15, !dbg !12743
  store i32 %and, i32* %tcode, align 4, !dbg !12744
  %9 = load i32, i32* %tcode, align 4, !dbg !12745
  switch i32 %9, label %sw.default [
    i32 0, label %sw.bb
    i32 6, label %sw.bb
    i32 5, label %sw.bb14
    i32 1, label %sw.bb20
    i32 7, label %sw.bb20
    i32 9, label %sw.bb20
    i32 11, label %sw.bb20
    i32 2, label %sw.bb31
    i32 4, label %sw.bb31
    i32 14, label %sw.bb31
  ], !dbg !12746

sw.bb:                                            ; preds = %entry, %entry
  %10 = load i32*, i32** %buffer.addr, align 8, !dbg !12747
  %arrayidx11 = getelementptr i32, i32* %10, i64 3, !dbg !12747
  %11 = load i32, i32* %arrayidx11, align 4, !dbg !12747
  %header12 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 2, !dbg !12749
  %arrayidx13 = getelementptr [4 x i32], [4 x i32]* %header12, i64 0, i64 3, !dbg !12750
  store i32 %11, i32* %arrayidx13, align 4, !dbg !12751
  %header_length = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 3, !dbg !12752
  store i64 16, i64* %header_length, align 8, !dbg !12753
  %payload_length = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 5, !dbg !12754
  store i64 0, i64* %payload_length, align 8, !dbg !12755
  br label %sw.epilog, !dbg !12756

sw.bb14:                                          ; preds = %entry
  %12 = load i32*, i32** %buffer.addr, align 8, !dbg !12757
  %arrayidx15 = getelementptr i32, i32* %12, i64 3, !dbg !12757
  %13 = load i32, i32* %arrayidx15, align 4, !dbg !12757
  %header16 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 2, !dbg !12758
  %arrayidx17 = getelementptr [4 x i32], [4 x i32]* %header16, i64 0, i64 3, !dbg !12759
  store i32 %13, i32* %arrayidx17, align 4, !dbg !12760
  %header_length18 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 3, !dbg !12761
  store i64 16, i64* %header_length18, align 8, !dbg !12762
  %payload_length19 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 5, !dbg !12763
  store i64 0, i64* %payload_length19, align 8, !dbg !12764
  br label %sw.epilog, !dbg !12765

sw.bb20:                                          ; preds = %entry, %entry, %entry, %entry
  %14 = load i32*, i32** %buffer.addr, align 8, !dbg !12766
  %arrayidx21 = getelementptr i32, i32* %14, i64 3, !dbg !12766
  %15 = load i32, i32* %arrayidx21, align 4, !dbg !12766
  %header22 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 2, !dbg !12767
  %arrayidx23 = getelementptr [4 x i32], [4 x i32]* %header22, i64 0, i64 3, !dbg !12768
  store i32 %15, i32* %arrayidx23, align 4, !dbg !12769
  %header_length24 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 3, !dbg !12770
  store i64 16, i64* %header_length24, align 8, !dbg !12771
  %header25 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 2, !dbg !12772
  %arrayidx26 = getelementptr [4 x i32], [4 x i32]* %header25, i64 0, i64 3, !dbg !12773
  %16 = load i32, i32* %arrayidx26, align 4, !dbg !12773
  %shr27 = lshr i32 %16, 16, !dbg !12774
  %conv = zext i32 %shr27 to i64, !dbg !12773
  %payload_length28 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 5, !dbg !12775
  store i64 %conv, i64* %payload_length28, align 8, !dbg !12776
  %payload_length29 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 5, !dbg !12777
  %17 = load i64, i64* %payload_length29, align 8, !dbg !12777
  %cmp = icmp ugt i64 %17, 4096, !dbg !12779
  br i1 %cmp, label %if.then, label %if.end, !dbg !12780

if.then:                                          ; preds = %sw.bb20
  %18 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12781
  call void @ar_context_abort(%struct.ar_context* %18, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.93, i64 0, i64 0)) #11, !dbg !12783
  store i32* null, i32** %retval, align 8, !dbg !12784
  br label %return, !dbg !12784

if.end:                                           ; preds = %sw.bb20
  br label %sw.epilog, !dbg !12785

sw.bb31:                                          ; preds = %entry, %entry, %entry
  %header_length32 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 3, !dbg !12786
  store i64 12, i64* %header_length32, align 8, !dbg !12787
  %payload_length33 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 5, !dbg !12788
  store i64 0, i64* %payload_length33, align 8, !dbg !12789
  br label %sw.epilog, !dbg !12790

sw.default:                                       ; preds = %entry
  %19 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12791
  call void @ar_context_abort(%struct.ar_context* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.94, i64 0, i64 0)) #11, !dbg !12792
  store i32* null, i32** %retval, align 8, !dbg !12793
  br label %return, !dbg !12793

sw.epilog:                                        ; preds = %sw.bb31, %if.end, %sw.bb14, %sw.bb
  %20 = load i32*, i32** %buffer.addr, align 8, !dbg !12794
  %21 = bitcast i32* %20 to i8*, !dbg !12795
  %header_length34 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 3, !dbg !12796
  %22 = load i64, i64* %header_length34, align 8, !dbg !12796
  %add.ptr = getelementptr i8, i8* %21, i64 %22, !dbg !12797
  %payload = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 4, !dbg !12798
  store i8* %add.ptr, i8** %payload, align 8, !dbg !12799
  %header_length35 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 3, !dbg !12800
  %23 = load i64, i64* %header_length35, align 8, !dbg !12800
  %payload_length36 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 5, !dbg !12801
  %24 = load i64, i64* %payload_length36, align 8, !dbg !12801
  %add = add i64 %23, %24, !dbg !12802
  %add37 = add i64 %add, 3, !dbg !12803
  %div = udiv i64 %add37, 4, !dbg !12804
  %conv38 = trunc i64 %div to i32, !dbg !12805
  store i32 %conv38, i32* %length, align 4, !dbg !12806
  %25 = load i32*, i32** %buffer.addr, align 8, !dbg !12807
  %26 = load i32, i32* %length, align 4, !dbg !12807
  %idxprom = zext i32 %26 to i64, !dbg !12807
  %arrayidx39 = getelementptr i32, i32* %25, i64 %idxprom, !dbg !12807
  %27 = load i32, i32* %arrayidx39, align 4, !dbg !12807
  store i32 %27, i32* %status, align 4, !dbg !12808
  %28 = load i32, i32* %status, align 4, !dbg !12809
  %shr40 = lshr i32 %28, 16, !dbg !12810
  %and41 = and i32 %shr40, 31, !dbg !12811
  store i32 %and41, i32* %evt, align 4, !dbg !12812
  %29 = load i32, i32* %evt, align 4, !dbg !12813
  %sub = sub i32 %29, 16, !dbg !12814
  %ack = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 10, !dbg !12815
  store i32 %sub, i32* %ack, align 8, !dbg !12816
  %30 = load i32, i32* %status, align 4, !dbg !12817
  %shr42 = lshr i32 %30, 21, !dbg !12818
  %and43 = and i32 %shr42, 7, !dbg !12819
  %speed = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 0, !dbg !12820
  store i32 %and43, i32* %speed, align 8, !dbg !12821
  %31 = load i32, i32* %status, align 4, !dbg !12822
  %and44 = and i32 %31, 65535, !dbg !12823
  %timestamp = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 8, !dbg !12824
  store i32 %and44, i32* %timestamp, align 4, !dbg !12825
  %32 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12826
  %request_generation = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %32, i32 0, i32 4, !dbg !12827
  %33 = load i32, i32* %request_generation, align 8, !dbg !12827
  %generation = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 1, !dbg !12828
  store i32 %33, i32* %generation, align 4, !dbg !12829
  %34 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12830
  %speed45 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 0, !dbg !12831
  %35 = load i32, i32* %speed45, align 8, !dbg !12831
  %header46 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 2, !dbg !12832
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %header46, i64 0, i64 0, !dbg !12833
  %36 = load i32, i32* %evt, align 4, !dbg !12834
  call void @log_ar_at_event(%struct.fw_ohci* %34, i8 signext 82, i32 %35, i32* %arraydecay, i32 %36) #11, !dbg !12835
  %37 = load i32, i32* %evt, align 4, !dbg !12836
  %cmp47 = icmp eq i32 %37, 0, !dbg !12838
  br i1 %cmp47, label %land.lhs.true, label %if.end56, !dbg !12839

land.lhs.true:                                    ; preds = %sw.epilog
  %header49 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 2, !dbg !12840
  %arrayidx50 = getelementptr [4 x i32], [4 x i32]* %header49, i64 0, i64 0, !dbg !12841
  %38 = load i32, i32* %arrayidx50, align 8, !dbg !12841
  %and51 = and i32 %38, 255, !dbg !12842
  %cmp52 = icmp eq i32 %and51, 224, !dbg !12843
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !12844

if.then54:                                        ; preds = %land.lhs.true
  %ack55 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 10, !dbg !12845
  store i32 1, i32* %ack55, align 8, !dbg !12846
  br label %if.end56, !dbg !12847

if.end56:                                         ; preds = %if.then54, %land.lhs.true, %sw.epilog
  %39 = load i32, i32* %evt, align 4, !dbg !12848
  %cmp57 = icmp eq i32 %39, 9, !dbg !12850
  br i1 %cmp57, label %if.then59, label %if.else, !dbg !12851

if.then59:                                        ; preds = %if.end56
  %40 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12852
  %quirks = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %40, i32 0, i32 5, !dbg !12855
  %41 = load i32, i32* %quirks, align 4, !dbg !12855
  %and60 = and i32 %41, 2, !dbg !12856
  %tobool = icmp ne i32 %and60, 0, !dbg !12856
  br i1 %tobool, label %if.end67, label %if.then61, !dbg !12857

if.then61:                                        ; preds = %if.then59
  %header62 = getelementptr inbounds %struct.fw_packet, %struct.fw_packet* %p, i32 0, i32 2, !dbg !12858
  %arrayidx63 = getelementptr [4 x i32], [4 x i32]* %header62, i64 0, i64 2, !dbg !12859
  %42 = load i32, i32* %arrayidx63, align 8, !dbg !12859
  %shr64 = lshr i32 %42, 16, !dbg !12860
  %and65 = and i32 %shr64, 255, !dbg !12861
  %43 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12862
  %request_generation66 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %43, i32 0, i32 4, !dbg !12863
  store i32 %and65, i32* %request_generation66, align 8, !dbg !12864
  br label %if.end67, !dbg !12862

if.end67:                                         ; preds = %if.then61, %if.then59
  br label %if.end74, !dbg !12865

if.else:                                          ; preds = %if.end56
  %44 = load %struct.ar_context*, %struct.ar_context** %ctx.addr, align 8, !dbg !12866
  %45 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12868
  %ar_request_ctx = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %45, i32 0, i32 17, !dbg !12869
  %cmp68 = icmp eq %struct.ar_context* %44, %ar_request_ctx, !dbg !12870
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !12871

if.then70:                                        ; preds = %if.else
  %46 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12872
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %46, i32 0, i32 0, !dbg !12874
  call void @fw_core_handle_request(%struct.fw_card* %card, %struct.fw_packet* %p) #11, !dbg !12875
  br label %if.end73, !dbg !12876

if.else71:                                        ; preds = %if.else
  %47 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci, align 8, !dbg !12877
  %card72 = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %47, i32 0, i32 0, !dbg !12879
  call void @fw_core_handle_response(%struct.fw_card* %card72, %struct.fw_packet* %p) #11, !dbg !12880
  br label %if.end73

if.end73:                                         ; preds = %if.else71, %if.then70
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.end67
  %48 = load i32*, i32** %buffer.addr, align 8, !dbg !12881
  %49 = load i32, i32* %length, align 4, !dbg !12882
  %idx.ext = zext i32 %49 to i64, !dbg !12883
  %add.ptr75 = getelementptr i32, i32* %48, i64 %idx.ext, !dbg !12883
  %add.ptr76 = getelementptr i32, i32* %add.ptr75, i64 1, !dbg !12884
  store i32* %add.ptr76, i32** %retval, align 8, !dbg !12885
  br label %return, !dbg !12885

return:                                           ; preds = %if.end74, %sw.default, %if.then
  %50 = load i32*, i32** %retval, align 8, !dbg !12886
  ret i32* %50, !dbg !12886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !12887 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12892, metadata !DIExpression()), !dbg !12893
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !12894, metadata !DIExpression()), !dbg !12893
  %0 = load i32, i32* %val.addr, align 4, !dbg !12893
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !12893
  %2 = bitcast i8* %1 to i32*, !dbg !12893
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #10, !dbg !12893, !srcloc !12895
  ret void, !dbg !12893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #2 !dbg !12896 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !12899, metadata !DIExpression()), !dbg !12900
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12901, metadata !DIExpression()), !dbg !12900
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !12900
  %1 = bitcast i8* %0 to i32*, !dbg !12900
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #10, !dbg !12900, !srcloc !12902
  store i32 %2, i32* %ret, align 4, !dbg !12900
  %3 = load i32, i32* %ret, align 4, !dbg !12900
  ret i32 %3, !dbg !12900
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @log_irqs(%struct.fw_ohci* %ohci, i32 %evt) #2 !dbg !12903 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %evt.addr = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !12906, metadata !DIExpression()), !dbg !12907
  store i32 %evt, i32* %evt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evt.addr, metadata !12908, metadata !DIExpression()), !dbg !12909
  %0 = load i32, i32* @param_debug, align 4, !dbg !12910
  %and = and i32 %0, 12, !dbg !12910
  %tobool = icmp ne i32 %and, 0, !dbg !12910
  %lnot = xor i1 %tobool, true, !dbg !12910
  %lnot1 = xor i1 %lnot, true, !dbg !12910
  %lnot2 = xor i1 %lnot1, true, !dbg !12910
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12910
  %conv = sext i32 %lnot.ext to i64, !dbg !12910
  %tobool3 = icmp ne i64 %conv, 0, !dbg !12910
  br i1 %tobool3, label %if.then, label %if.end, !dbg !12912

if.then:                                          ; preds = %entry
  br label %return, !dbg !12913

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @param_debug, align 4, !dbg !12914
  %and4 = and i32 %1, 4, !dbg !12916
  %tobool5 = icmp ne i32 %and4, 0, !dbg !12916
  br i1 %tobool5, label %if.end9, label %land.lhs.true, !dbg !12917

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* %evt.addr, align 4, !dbg !12918
  %and6 = and i32 %2, 131072, !dbg !12919
  %tobool7 = icmp ne i32 %and6, 0, !dbg !12919
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !12920

if.then8:                                         ; preds = %land.lhs.true
  br label %return, !dbg !12921

if.end9:                                          ; preds = %land.lhs.true, %if.end
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12922
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %3, i32 0, i32 0, !dbg !12922
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !12922
  %4 = load %struct.device*, %struct.device** %device, align 8, !dbg !12922
  %5 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %6 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and10 = and i32 %6, 65536, !dbg !12922
  %tobool11 = icmp ne i32 %and10, 0, !dbg !12922
  %7 = zext i1 %tobool11 to i64, !dbg !12922
  %cond = select i1 %tobool11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %8 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and12 = and i32 %8, 16, !dbg !12922
  %tobool13 = icmp ne i32 %and12, 0, !dbg !12922
  %9 = zext i1 %tobool13 to i64, !dbg !12922
  %cond14 = select i1 %tobool13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %10 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and15 = and i32 %10, 32, !dbg !12922
  %tobool16 = icmp ne i32 %and15, 0, !dbg !12922
  %11 = zext i1 %tobool16 to i64, !dbg !12922
  %cond17 = select i1 %tobool16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %12 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and18 = and i32 %12, 1, !dbg !12922
  %tobool19 = icmp ne i32 %and18, 0, !dbg !12922
  %13 = zext i1 %tobool19 to i64, !dbg !12922
  %cond20 = select i1 %tobool19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %14 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and21 = and i32 %14, 2, !dbg !12922
  %tobool22 = icmp ne i32 %and21, 0, !dbg !12922
  %15 = zext i1 %tobool22 to i64, !dbg !12922
  %cond23 = select i1 %tobool22, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %16 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and24 = and i32 %16, 128, !dbg !12922
  %tobool25 = icmp ne i32 %and24, 0, !dbg !12922
  %17 = zext i1 %tobool25 to i64, !dbg !12922
  %cond26 = select i1 %tobool25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %18 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and27 = and i32 %18, 64, !dbg !12922
  %tobool28 = icmp ne i32 %and27, 0, !dbg !12922
  %19 = zext i1 %tobool28 to i64, !dbg !12922
  %cond29 = select i1 %tobool28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %20 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and30 = and i32 %20, 256, !dbg !12922
  %tobool31 = icmp ne i32 %and30, 0, !dbg !12922
  %21 = zext i1 %tobool31 to i64, !dbg !12922
  %cond32 = select i1 %tobool31, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %22 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and33 = and i32 %22, 33554432, !dbg !12922
  %tobool34 = icmp ne i32 %and33, 0, !dbg !12922
  %23 = zext i1 %tobool34 to i64, !dbg !12922
  %cond35 = select i1 %tobool34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %24 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and36 = and i32 %24, 2097152, !dbg !12922
  %tobool37 = icmp ne i32 %and36, 0, !dbg !12922
  %25 = zext i1 %tobool37 to i64, !dbg !12922
  %cond38 = select i1 %tobool37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %26 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and39 = and i32 %26, 8388608, !dbg !12922
  %tobool40 = icmp ne i32 %and39, 0, !dbg !12922
  %27 = zext i1 %tobool40 to i64, !dbg !12922
  %cond41 = select i1 %tobool40, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %28 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and42 = and i32 %28, 262144, !dbg !12922
  %tobool43 = icmp ne i32 %and42, 0, !dbg !12922
  %29 = zext i1 %tobool43 to i64, !dbg !12922
  %cond44 = select i1 %tobool43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %30 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and45 = and i32 %30, 16777216, !dbg !12922
  %tobool46 = icmp ne i32 %and45, 0, !dbg !12922
  %31 = zext i1 %tobool46 to i64, !dbg !12922
  %cond47 = select i1 %tobool46, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %32 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and48 = and i32 %32, 131072, !dbg !12922
  %tobool49 = icmp ne i32 %and48, 0, !dbg !12922
  %33 = zext i1 %tobool49 to i64, !dbg !12922
  %cond50 = select i1 %tobool49, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  %34 = load i32, i32* %evt.addr, align 4, !dbg !12922
  %and51 = and i32 %34, -44499444, !dbg !12922
  %tobool52 = icmp ne i32 %and51, 0, !dbg !12922
  %35 = zext i1 %tobool52 to i64, !dbg !12922
  %cond53 = select i1 %tobool52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !12922
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.100, i64 0, i64 0), i32 %5, i8* %cond, i8* %cond14, i8* %cond17, i8* %cond20, i8* %cond23, i8* %cond26, i8* %cond29, i8* %cond32, i8* %cond35, i8* %cond38, i8* %cond41, i8* %cond44, i8* %cond47, i8* %cond50, i8* %cond53) #12, !dbg !12922
  br label %return, !dbg !12923

return:                                           ; preds = %if.end9, %if.then8, %if.then
  ret void, !dbg !12923
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #2 !dbg !12924 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !12927, metadata !DIExpression()), !dbg !12928
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !12929, metadata !DIExpression()), !dbg !12930
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !12931
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !12932
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !12933
  ret i1 %call, !dbg !12934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #2 !dbg !12935 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !12936, metadata !DIExpression()), !dbg !12937
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !12938
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !12940
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #11, !dbg !12941
  br i1 %call, label %if.end, label %if.then, !dbg !12942

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !12943
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #11, !dbg !12944
  br label %if.end, !dbg !12944

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12945
}

; Function Attrs: noredzone
declare dso_local i32 @__printk_ratelimit(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_dead_contexts(%struct.fw_ohci* %ohci) #2 !dbg !12946 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %i = alloca i32, align 4
  %name = alloca [8 x i8], align 1
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !12949, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12951, metadata !DIExpression()), !dbg !12952
  call void @llvm.dbg.declare(metadata [8 x i8]* %name, metadata !12953, metadata !DIExpression()), !dbg !12954
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12955
  call void @detect_dead_context(%struct.fw_ohci* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i64 0, i64 0), i32 384) #11, !dbg !12956
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12957
  call void @detect_dead_context(%struct.fw_ohci* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.117, i64 0, i64 0), i32 416) #11, !dbg !12958
  %2 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12959
  call void @detect_dead_context(%struct.fw_ohci* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i64 0, i64 0), i32 448) #11, !dbg !12960
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12961
  call void @detect_dead_context(%struct.fw_ohci* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0), i32 480) #11, !dbg !12962
  store i32 0, i32* %i, align 4, !dbg !12963
  br label %for.cond, !dbg !12965

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !12966
  %cmp = icmp ult i32 %4, 32, !dbg !12968
  br i1 %cmp, label %for.body, label %for.end, !dbg !12969

for.body:                                         ; preds = %for.cond
  %5 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12970
  %it_context_support = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %5, i32 0, i32 21, !dbg !12973
  %6 = load i32, i32* %it_context_support, align 8, !dbg !12973
  %7 = load i32, i32* %i, align 4, !dbg !12974
  %shl = shl i32 1, %7, !dbg !12975
  %and = and i32 %6, %shl, !dbg !12976
  %tobool = icmp ne i32 %and, 0, !dbg !12976
  br i1 %tobool, label %if.end, label %if.then, !dbg !12977

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !12978

if.end:                                           ; preds = %for.body
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %name, i64 0, i64 0, !dbg !12979
  %8 = load i32, i32* %i, align 4, !dbg !12980
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.120, i64 0, i64 0), i32 %8) #11, !dbg !12981
  %9 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12982
  %arraydecay1 = getelementptr inbounds [8 x i8], [8 x i8]* %name, i64 0, i64 0, !dbg !12983
  %10 = load i32, i32* %i, align 4, !dbg !12984
  %mul = mul i32 16, %10, !dbg !12984
  %add = add i32 512, %mul, !dbg !12984
  call void @detect_dead_context(%struct.fw_ohci* %9, i8* %arraydecay1, i32 %add) #11, !dbg !12985
  br label %for.inc, !dbg !12986

for.inc:                                          ; preds = %if.end, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !12987
  %inc = add i32 %11, 1, !dbg !12987
  store i32 %inc, i32* %i, align 4, !dbg !12987
  br label %for.cond, !dbg !12988, !llvm.loop !12989

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !12991
  br label %for.cond2, !dbg !12993

for.cond2:                                        ; preds = %for.inc15, %for.end
  %12 = load i32, i32* %i, align 4, !dbg !12994
  %cmp3 = icmp ult i32 %12, 32, !dbg !12996
  br i1 %cmp3, label %for.body4, label %for.end17, !dbg !12997

for.body4:                                        ; preds = %for.cond2
  %13 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !12998
  %ir_context_support = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %13, i32 0, i32 25, !dbg !13001
  %14 = load i32, i32* %ir_context_support, align 8, !dbg !13001
  %15 = load i32, i32* %i, align 4, !dbg !13002
  %shl5 = shl i32 1, %15, !dbg !13003
  %and6 = and i32 %14, %shl5, !dbg !13004
  %tobool7 = icmp ne i32 %and6, 0, !dbg !13004
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !13005

if.then8:                                         ; preds = %for.body4
  br label %for.inc15, !dbg !13006

if.end9:                                          ; preds = %for.body4
  %arraydecay10 = getelementptr inbounds [8 x i8], [8 x i8]* %name, i64 0, i64 0, !dbg !13007
  %16 = load i32, i32* %i, align 4, !dbg !13008
  %call11 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i64 0, i64 0), i32 %16) #11, !dbg !13009
  %17 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !13010
  %arraydecay12 = getelementptr inbounds [8 x i8], [8 x i8]* %name, i64 0, i64 0, !dbg !13011
  %18 = load i32, i32* %i, align 4, !dbg !13012
  %mul13 = mul i32 32, %18, !dbg !13012
  %add14 = add i32 1024, %mul13, !dbg !13012
  call void @detect_dead_context(%struct.fw_ohci* %17, i8* %arraydecay12, i32 %add14) #11, !dbg !13013
  br label %for.inc15, !dbg !13014

for.inc15:                                        ; preds = %if.end9, %if.then8
  %19 = load i32, i32* %i, align 4, !dbg !13015
  %inc16 = add i32 %19, 1, !dbg !13015
  store i32 %inc16, i32* %i, align 4, !dbg !13015
  br label %for.cond2, !dbg !13016, !llvm.loop !13017

for.end17:                                        ; preds = %for.cond2
  ret void, !dbg !13019
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #2 !dbg !13020 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11610, metadata !DIExpression()), !dbg !13022
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11616, metadata !DIExpression()), !dbg !13024
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !11618, metadata !DIExpression()), !dbg !13025
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10256, metadata !DIExpression()), !dbg !13026
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10266, metadata !DIExpression()), !dbg !13028
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13029, metadata !DIExpression()), !dbg !13030
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13031, metadata !DIExpression()), !dbg !13032
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13033
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13034
  %div = sdiv i64 %1, 64, !dbg !13034
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13035
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13033
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13036
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13037
  %conv.i = trunc i64 %4 to i32, !dbg !13037
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !13038
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13039
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13039
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #15, !dbg !13039
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13040
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13041
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !13025
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !13025
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #10, !dbg !13025, !srcloc !11643
  store i8 %11, i8* %c.i, align 1, !dbg !13025
  %12 = load i8, i8* %c.i, align 1, !dbg !13025
  %tobool.i = trunc i8 %12 to i1, !dbg !13025
  %frombool.i = zext i1 %tobool.i to i8, !dbg !13025
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !13025
  %13 = load i8, i8* %tmp.i, align 1, !dbg !13025
  %tobool1.i = trunc i8 %13 to i1, !dbg !13025
  ret i1 %tobool1.i, !dbg !13042
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @detect_dead_context(%struct.fw_ohci* %ohci, i8* %name, i32 %regs) #2 !dbg !13043 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %name.addr = alloca i8*, align 8
  %regs.addr = alloca i32, align 4
  %ctl = alloca i32, align 4
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !13046, metadata !DIExpression()), !dbg !13047
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13048, metadata !DIExpression()), !dbg !13049
  store i32 %regs, i32* %regs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regs.addr, metadata !13050, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.declare(metadata i32* %ctl, metadata !13052, metadata !DIExpression()), !dbg !13053
  %0 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !13054
  %1 = load i32, i32* %regs.addr, align 4, !dbg !13055
  %call = call i32 @reg_read(%struct.fw_ohci* %0, i32 %1) #11, !dbg !13056
  store i32 %call, i32* %ctl, align 4, !dbg !13057
  %2 = load i32, i32* %ctl, align 4, !dbg !13058
  %and = and i32 %2, 2048, !dbg !13060
  %tobool = icmp ne i32 %and, 0, !dbg !13060
  br i1 %tobool, label %if.then, label %if.end, !dbg !13061

if.then:                                          ; preds = %entry
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !13062
  %card = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %3, i32 0, i32 0, !dbg !13062
  %device = getelementptr inbounds %struct.fw_card, %struct.fw_card* %card, i32 0, i32 1, !dbg !13062
  %4 = load %struct.device*, %struct.device** %device, align 8, !dbg !13062
  %5 = load i8*, i8** %name.addr, align 8, !dbg !13062
  %6 = load i32, i32* %ctl, align 4, !dbg !13062
  %and1 = and i32 %6, 31, !dbg !13062
  %idxprom = zext i32 %and1 to i64, !dbg !13062
  %arrayidx = getelementptr [33 x i8*], [33 x i8*]* @evts, i64 0, i64 %idxprom, !dbg !13062
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !13062
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.122, i64 0, i64 0), i8* %5, i8* %7) #12, !dbg !13062
  br label %if.end, !dbg !13062

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13063
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local void @vunmap(i8*) #1

; Function Attrs: noredzone
declare dso_local void @dma_free_pages(%struct.device*, i64, %struct.page*, i64, i32) #1

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !13064 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !13067, metadata !DIExpression()), !dbg !13068
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !13069
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !13070
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !13071
  ret i8* %call, !dbg !13072
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_work_sync(%struct.work_struct*) #1

; Function Attrs: noredzone
declare dso_local void @fw_core_remove_card(%struct.fw_card*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !13073 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13076, metadata !DIExpression()), !dbg !13077
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13078
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !13079
  %1 = load i8*, i8** %driver_data, align 8, !dbg !13079
  ret i8* %1, !dbg !13080
}

; Function Attrs: noredzone
declare dso_local i32 @pci_save_state(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_set_power_state(%struct.pci_dev*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_choose_state(%struct.pci_dev*, i32) #1

; Function Attrs: noredzone
declare dso_local void @pci_restore_state(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ohci_resume_iso_dma(%struct.fw_ohci* %ohci) #2 !dbg !13081 {
entry:
  %ohci.addr = alloca %struct.fw_ohci*, align 8
  %i = alloca i32, align 4
  %ctx = alloca %struct.iso_context*, align 8
  store %struct.fw_ohci* %ohci, %struct.fw_ohci** %ohci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fw_ohci** %ohci.addr, metadata !13082, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13084, metadata !DIExpression()), !dbg !13085
  call void @llvm.dbg.declare(metadata %struct.iso_context** %ctx, metadata !13086, metadata !DIExpression()), !dbg !13087
  store i32 0, i32* %i, align 4, !dbg !13088
  br label %for.cond, !dbg !13090

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13091
  %1 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !13093
  %n_ir = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %1, i32 0, i32 11, !dbg !13094
  %2 = load i32, i32* %n_ir, align 4, !dbg !13094
  %cmp = icmp slt i32 %0, %2, !dbg !13095
  br i1 %cmp, label %for.body, label %for.end, !dbg !13096

for.body:                                         ; preds = %for.cond
  %3 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !13097
  %ir_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %3, i32 0, i32 27, !dbg !13099
  %4 = load %struct.iso_context*, %struct.iso_context** %ir_context_list, align 8, !dbg !13099
  %5 = load i32, i32* %i, align 4, !dbg !13100
  %idxprom = sext i32 %5 to i64, !dbg !13097
  %arrayidx = getelementptr %struct.iso_context, %struct.iso_context* %4, i64 %idxprom, !dbg !13097
  store %struct.iso_context* %arrayidx, %struct.iso_context** %ctx, align 8, !dbg !13101
  %6 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !13102
  %context = getelementptr inbounds %struct.iso_context, %struct.iso_context* %6, i32 0, i32 1, !dbg !13104
  %running = getelementptr inbounds %struct.context, %struct.context* %context, i32 0, i32 4, !dbg !13105
  %7 = load i8, i8* %running, align 4, !dbg !13105
  %tobool = trunc i8 %7 to i1, !dbg !13105
  br i1 %tobool, label %if.then, label %if.end, !dbg !13106

if.then:                                          ; preds = %for.body
  %8 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !13107
  %base = getelementptr inbounds %struct.iso_context, %struct.iso_context* %8, i32 0, i32 0, !dbg !13108
  %9 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !13109
  %sync = getelementptr inbounds %struct.iso_context, %struct.iso_context* %9, i32 0, i32 8, !dbg !13110
  %10 = load i8, i8* %sync, align 8, !dbg !13110
  %conv = zext i8 %10 to i32, !dbg !13109
  %11 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !13111
  %tags = getelementptr inbounds %struct.iso_context, %struct.iso_context* %11, i32 0, i32 9, !dbg !13112
  %12 = load i8, i8* %tags, align 1, !dbg !13112
  %conv1 = zext i8 %12 to i32, !dbg !13111
  %call = call i32 @ohci_start_iso(%struct.fw_iso_context* %base, i32 0, i32 %conv, i32 %conv1) #11, !dbg !13113
  br label %if.end, !dbg !13113

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !13114

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !13115
  %inc = add i32 %13, 1, !dbg !13115
  store i32 %inc, i32* %i, align 4, !dbg !13115
  br label %for.cond, !dbg !13116, !llvm.loop !13117

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !13119
  br label %for.cond2, !dbg !13121

for.cond2:                                        ; preds = %for.inc19, %for.end
  %14 = load i32, i32* %i, align 4, !dbg !13122
  %15 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !13124
  %n_it = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %15, i32 0, i32 12, !dbg !13125
  %16 = load i32, i32* %n_it, align 8, !dbg !13125
  %cmp3 = icmp slt i32 %14, %16, !dbg !13126
  br i1 %cmp3, label %for.body5, label %for.end21, !dbg !13127

for.body5:                                        ; preds = %for.cond2
  %17 = load %struct.fw_ohci*, %struct.fw_ohci** %ohci.addr, align 8, !dbg !13128
  %it_context_list = getelementptr inbounds %struct.fw_ohci, %struct.fw_ohci* %17, i32 0, i32 23, !dbg !13130
  %18 = load %struct.iso_context*, %struct.iso_context** %it_context_list, align 8, !dbg !13130
  %19 = load i32, i32* %i, align 4, !dbg !13131
  %idxprom6 = sext i32 %19 to i64, !dbg !13128
  %arrayidx7 = getelementptr %struct.iso_context, %struct.iso_context* %18, i64 %idxprom6, !dbg !13128
  store %struct.iso_context* %arrayidx7, %struct.iso_context** %ctx, align 8, !dbg !13132
  %20 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !13133
  %context8 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %20, i32 0, i32 1, !dbg !13135
  %running9 = getelementptr inbounds %struct.context, %struct.context* %context8, i32 0, i32 4, !dbg !13136
  %21 = load i8, i8* %running9, align 4, !dbg !13136
  %tobool10 = trunc i8 %21 to i1, !dbg !13136
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !13137

if.then11:                                        ; preds = %for.body5
  %22 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !13138
  %base12 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %22, i32 0, i32 0, !dbg !13139
  %23 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !13140
  %sync13 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %23, i32 0, i32 8, !dbg !13141
  %24 = load i8, i8* %sync13, align 8, !dbg !13141
  %conv14 = zext i8 %24 to i32, !dbg !13140
  %25 = load %struct.iso_context*, %struct.iso_context** %ctx, align 8, !dbg !13142
  %tags15 = getelementptr inbounds %struct.iso_context, %struct.iso_context* %25, i32 0, i32 9, !dbg !13143
  %26 = load i8, i8* %tags15, align 1, !dbg !13143
  %conv16 = zext i8 %26 to i32, !dbg !13142
  %call17 = call i32 @ohci_start_iso(%struct.fw_iso_context* %base12, i32 0, i32 %conv14, i32 %conv16) #11, !dbg !13144
  br label %if.end18, !dbg !13144

if.end18:                                         ; preds = %if.then11, %for.body5
  br label %for.inc19, !dbg !13145

for.inc19:                                        ; preds = %if.end18
  %27 = load i32, i32* %i, align 4, !dbg !13146
  %inc20 = add i32 %27, 1, !dbg !13146
  store i32 %inc20, i32* %i, align 4, !dbg !13146
  br label %for.cond2, !dbg !13147, !llvm.loop !13148

for.end21:                                        ; preds = %for.cond2
  ret void, !dbg !13150
}

; Function Attrs: noredzone
declare dso_local %struct.workqueue_struct* @alloc_workqueue(i8*, i32, i32, ...) #1

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { nounwind readnone }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { noredzone nounwind }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4608}
!llvm.module.flags = !{!4609, !4610, !4611, !4612}
!llvm.ident = !{!4613}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_quirks", scope: !2, file: !3, line: 337, type: !4605, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !172, globals: !4141, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/firewire/ohci.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !100, !133, !140, !145, !151, !156}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !94, line: 5, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99}
!96 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !101, line: 30, baseType: !102, size: 64, elements: !103)
!101 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!102 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132}
!104 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!105 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!106 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!107 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!108 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!109 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!110 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!111 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!112 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!113 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!114 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!115 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!116 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!117 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!118 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!119 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!120 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!121 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!122 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!123 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!124 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!125 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!126 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!127 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!128 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!129 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!130 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!131 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!132 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !134, line: 305, baseType: !7, size: 32, elements: !135)
!134 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!135 = !{!136, !137, !138, !139}
!136 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!137 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!138 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!139 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !141, line: 10, baseType: !7, size: 32, elements: !142)
!141 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!142 = !{!143, !144}
!143 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!144 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !146, line: 11, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!147 = !{!148, !149, !150}
!148 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!151 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 651, baseType: !7, size: 32, elements: !153)
!152 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!153 = !{!154, !155}
!154 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!155 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !101, line: 308, baseType: !7, size: 32, elements: !157)
!157 = !{!158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171}
!158 = !DIEnumerator(name: "WQ_UNBOUND", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "WQ_FREEZABLE", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "WQ_MEM_RECLAIM", value: 8, isUnsigned: true)
!161 = !DIEnumerator(name: "WQ_HIGHPRI", value: 16, isUnsigned: true)
!162 = !DIEnumerator(name: "WQ_CPU_INTENSIVE", value: 32, isUnsigned: true)
!163 = !DIEnumerator(name: "WQ_SYSFS", value: 64, isUnsigned: true)
!164 = !DIEnumerator(name: "WQ_POWER_EFFICIENT", value: 128, isUnsigned: true)
!165 = !DIEnumerator(name: "__WQ_DRAINING", value: 65536, isUnsigned: true)
!166 = !DIEnumerator(name: "__WQ_ORDERED", value: 131072, isUnsigned: true)
!167 = !DIEnumerator(name: "__WQ_LEGACY", value: 262144, isUnsigned: true)
!168 = !DIEnumerator(name: "__WQ_ORDERED_EXPLICIT", value: 524288, isUnsigned: true)
!169 = !DIEnumerator(name: "WQ_MAX_ACTIVE", value: 512, isUnsigned: true)
!170 = !DIEnumerator(name: "WQ_MAX_UNBOUND_PER_CPU", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "WQ_DFL_ACTIVE", value: 256, isUnsigned: true)
!172 = !{!173, !175, !176, !177, !178, !7, !179, !184, !185, !187, !4026, !4023, !324, !183, !4115, !4122, !4066, !4128, !238, !340, !231, !4089, !1982, !323, !4130, !207, !4083, !4133, !4135, !1246, !4136, !4137, !4139, !572}
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !174, line: 148, baseType: !7)
!174 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!176 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!177 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!178 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !180, line: 23, baseType: !181)
!180 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !182, line: 31, baseType: !183)
!182 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!183 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !182, line: 27, baseType: !7)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !186, line: 32, baseType: !184)
!186 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_ohci", file: !3, line: 178, size: 34112, elements: !189)
!189 = !{!190, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4054, !4055, !4085, !4086, !4087, !4088, !4102, !4103, !4104, !4105, !4106, !4107, !4108, !4110, !4111, !4112, !4113, !4114, !4116, !4117, !4118}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "card", scope: !188, file: !3, line: 179, baseType: !191, size: 11520)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_card", file: !192, line: 83, size: 11520, elements: !193)
!192 = !DIFile(filename: "./include/linux/firewire.h", directory: "/home/lizy2001/genbc/linux")
!193 = !{!194, !3183, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3994}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !191, file: !192, line: 84, baseType: !195, size: 64)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !197)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_card_driver", file: !198, line: 53, size: 1152, elements: !199)
!198 = !DIFile(filename: "drivers/firewire/core.h", directory: "/home/lizy2001/genbc/linux")
!199 = !{!200, !211, !215, !219, !220, !256, !257, !261, !265, !269, !273, !300, !304, !310, !315, !3177, !3178, !3182}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !197, file: !198, line: 60, baseType: !201, size: 64)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = !DISubroutineType(types: !203)
!203 = !{!177, !204, !205, !207}
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !174, line: 55, baseType: !208)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !209, line: 72, baseType: !210)
!209 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !209, line: 16, baseType: !176)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "read_phy_reg", scope: !197, file: !198, line: 63, baseType: !212, size: 64, offset: 64)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DISubroutineType(types: !214)
!214 = !{!177, !204, !177}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "update_phy_reg", scope: !197, file: !198, line: 64, baseType: !216, size: 64, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!217 = !DISubroutineType(types: !218)
!218 = !{!177, !204, !177, !177, !177}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "set_config_rom", scope: !197, file: !198, line: 72, baseType: !201, size: 64, offset: 192)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "send_request", scope: !197, file: !198, line: 75, baseType: !221, size: 64, offset: 256)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DISubroutineType(types: !223)
!223 = !{null, !204, !224}
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_packet", file: !192, line: 291, size: 832, elements: !226)
!226 = !{!227, !228, !229, !234, !235, !236, !237, !239, !242, !243, !248, !249, !255}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !225, file: !192, line: 292, baseType: !177, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "generation", scope: !225, file: !192, line: 293, baseType: !177, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !225, file: !192, line: 294, baseType: !230, size: 128, offset: 64)
!230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 128, elements: !232)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !180, line: 21, baseType: !184)
!232 = !{!233}
!233 = !DISubrange(count: 4)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "header_length", scope: !225, file: !192, line: 295, baseType: !207, size: 64, offset: 192)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !225, file: !192, line: 296, baseType: !175, size: 64, offset: 256)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "payload_length", scope: !225, file: !192, line: 297, baseType: !207, size: 64, offset: 320)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "payload_bus", scope: !225, file: !192, line: 298, baseType: !238, size: 64, offset: 384)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !174, line: 143, baseType: !179)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "payload_mapped", scope: !225, file: !192, line: 299, baseType: !240, size: 8, offset: 448)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !174, line: 30, baseType: !241)
!241 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !225, file: !192, line: 300, baseType: !231, size: 32, offset: 480)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !225, file: !192, line: 310, baseType: !244, size: 64, offset: 512)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "fw_packet_callback_t", file: !192, line: 266, baseType: !245)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DISubroutineType(types: !247)
!247 = !{null, !224, !204, !177}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !225, file: !192, line: 311, baseType: !177, size: 32, offset: 576)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !225, file: !192, line: 312, baseType: !250, size: 128, offset: 640)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !174, line: 178, size: 128, elements: !251)
!251 = !{!252, !254}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !250, file: !174, line: 179, baseType: !253, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !250, file: !174, line: 179, baseType: !253, size: 64, offset: 64)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !225, file: !192, line: 313, baseType: !175, size: 64, offset: 768)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "send_response", scope: !197, file: !198, line: 76, baseType: !221, size: 64, offset: 320)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "cancel_packet", scope: !197, file: !198, line: 78, baseType: !258, size: 64, offset: 384)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = !DISubroutineType(types: !260)
!260 = !{!177, !204, !224}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "enable_phys_dma", scope: !197, file: !198, line: 88, baseType: !262, size: 64, offset: 448)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = !DISubroutineType(types: !264)
!264 = !{!177, !204, !177, !177}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "read_csr", scope: !197, file: !198, line: 91, baseType: !266, size: 64, offset: 512)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!267 = !DISubroutineType(types: !268)
!268 = !{!231, !204, !177}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "write_csr", scope: !197, file: !198, line: 92, baseType: !270, size: 64, offset: 576)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = !DISubroutineType(types: !272)
!272 = !{null, !204, !177, !231}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_iso_context", scope: !197, file: !198, line: 95, baseType: !274, size: 64, offset: 640)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DISubroutineType(types: !276)
!276 = !{!277, !204, !177, !177, !207}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_iso_context", file: !192, line: 439, size: 384, elements: !279)
!279 = !{!280, !281, !282, !283, !284, !285, !286, !299}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "card", scope: !278, file: !192, line: 440, baseType: !204, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !278, file: !192, line: 441, baseType: !177, size: 32, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !278, file: !192, line: 442, baseType: !177, size: 32, offset: 96)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !278, file: !192, line: 443, baseType: !177, size: 32, offset: 128)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "drop_overflow_headers", scope: !278, file: !192, line: 444, baseType: !240, size: 8, offset: 160)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "header_size", scope: !278, file: !192, line: 445, baseType: !207, size: 64, offset: 192)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !278, file: !192, line: 449, baseType: !287, size: 64, offset: 256)
!287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !278, file: !192, line: 446, size: 64, elements: !288)
!288 = !{!289, !294}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "sc", scope: !287, file: !192, line: 447, baseType: !290, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "fw_iso_callback_t", file: !192, line: 434, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = !DISubroutineType(types: !293)
!293 = !{null, !277, !231, !207, !175, !175}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !287, file: !192, line: 448, baseType: !295, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "fw_iso_mc_callback_t", file: !192, line: 437, baseType: !296)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = !DISubroutineType(types: !298)
!298 = !{null, !277, !238, !175}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "callback_data", scope: !278, file: !192, line: 450, baseType: !175, size: 64, offset: 320)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "free_iso_context", scope: !197, file: !198, line: 97, baseType: !301, size: 64, offset: 704)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DISubroutineType(types: !303)
!303 = !{null, !277}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "start_iso", scope: !197, file: !198, line: 99, baseType: !305, size: 64, offset: 768)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = !DISubroutineType(types: !307)
!307 = !{!177, !277, !308, !231, !231}
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !180, line: 20, baseType: !309)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !182, line: 26, baseType: !177)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "set_iso_channels", scope: !197, file: !198, line: 102, baseType: !311, size: 64, offset: 832)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{!177, !277, !314}
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "queue_iso", scope: !197, file: !198, line: 104, baseType: !316, size: 64, offset: 896)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DISubroutineType(types: !318)
!318 = !{!177, !277, !319, !334, !176}
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_iso_packet", file: !192, line: 393, size: 32, elements: !321)
!321 = !{!322, !325, !326, !327, !328, !329, !330}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "payload_length", scope: !320, file: !192, line: 394, baseType: !323, size: 16)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !180, line: 19, baseType: !324)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !182, line: 24, baseType: !178)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt", scope: !320, file: !192, line: 395, baseType: !231, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !320, file: !192, line: 396, baseType: !231, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !320, file: !192, line: 398, baseType: !231, size: 2, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !320, file: !192, line: 399, baseType: !231, size: 4, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "header_length", scope: !320, file: !192, line: 400, baseType: !231, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !320, file: !192, line: 401, baseType: !331, offset: 32)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 0)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_iso_buffer", file: !192, line: 421, size: 192, elements: !336)
!336 = !{!337, !338, !3175, !3176}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !335, file: !192, line: 422, baseType: !93, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !335, file: !192, line: 423, baseType: !339, size: 64, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !342, line: 68, size: 512, align: 128, elements: !343)
!342 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!343 = !{!344, !345, !3167, !3174}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !341, file: !342, line: 69, baseType: !176, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, scope: !341, file: !342, line: 77, baseType: !346, size: 320, offset: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !341, file: !342, line: 77, size: 320, elements: !347)
!347 = !{!348, !3042, !3046, !3072, !3080, !3086, !3098, !3166}
!348 = !DIDerivedType(tag: DW_TAG_member, scope: !346, file: !342, line: 78, baseType: !349, size: 320)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !346, file: !342, line: 78, size: 320, elements: !350)
!350 = !{!351, !352, !3040, !3041}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !349, file: !342, line: 84, baseType: !250, size: 128)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !349, file: !342, line: 86, baseType: !353, size: 64, offset: 128)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !355)
!355 = !{!356, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !3035, !3036, !3037, !3038, !3039}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !354, file: !44, line: 452, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !359)
!359 = !{!360, !362, !363, !371, !378, !379, !2866, !2867, !2868, !2869, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2910, !2918, !2919, !2920, !2930, !2931, !2932, !2933}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !358, file: !44, line: 611, baseType: !361, size: 16)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !174, line: 19, baseType: !178)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !358, file: !44, line: 612, baseType: !178, size: 16, offset: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !358, file: !44, line: 613, baseType: !364, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !365, line: 23, baseType: !366)
!365 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !365, line: 21, size: 32, elements: !367)
!367 = !{!368}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !366, file: !365, line: 22, baseType: !369, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !174, line: 32, baseType: !370)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !209, line: 49, baseType: !7)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !358, file: !44, line: 614, baseType: !372, size: 32, offset: 64)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !365, line: 28, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !365, line: 26, size: 32, elements: !374)
!374 = !{!375}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !373, file: !365, line: 27, baseType: !376, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !174, line: 33, baseType: !377)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !209, line: 50, baseType: !7)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !358, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !358, file: !44, line: 622, baseType: !380, size: 64, offset: 128)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !382)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !383)
!383 = !{!384, !2740, !2753, !2757, !2763, !2767, !2771, !2775, !2779, !2783, !2787, !2788, !2792, !2796, !2816, !2842, !2846, !2852, !2857, !2861, !2862}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !382, file: !44, line: 1865, baseType: !385, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!386 = !DISubroutineType(types: !387)
!387 = !{!388, !357, !388, !7}
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !390, line: 89, size: 1536, elements: !391)
!390 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!391 = !{!392, !393, !403, !411, !412, !428, !429, !433, !460, !532, !2724, !2725, !2726, !2732, !2733, !2734}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !389, file: !390, line: 91, baseType: !7, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !389, file: !390, line: 92, baseType: !394, size: 32, offset: 32)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !395, line: 277, baseType: !396)
!395 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !395, line: 277, size: 32, elements: !397)
!397 = !{!398}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !396, file: !395, line: 277, baseType: !399, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !395, line: 70, baseType: !400)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !395, line: 65, size: 32, elements: !401)
!401 = !{!402}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !400, file: !395, line: 66, baseType: !7, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !389, file: !390, line: 93, baseType: !404, size: 128, offset: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !405, line: 38, size: 128, elements: !406)
!405 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!406 = !{!407, !409}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !404, file: !405, line: 39, baseType: !408, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !404, file: !405, line: 39, baseType: !410, size: 64, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !389, file: !390, line: 94, baseType: !388, size: 64, offset: 192)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !389, file: !390, line: 95, baseType: !413, size: 128, offset: 256)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !390, line: 47, size: 128, elements: !414)
!414 = !{!415, !424}
!415 = !DIDerivedType(tag: DW_TAG_member, scope: !413, file: !390, line: 48, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !413, file: !390, line: 48, size: 64, elements: !417)
!417 = !{!418, !423}
!418 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !390, line: 49, baseType: !419, size: 64)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !416, file: !390, line: 49, size: 64, elements: !420)
!420 = !{!421, !422}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !419, file: !390, line: 50, baseType: !231, size: 32)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !419, file: !390, line: 50, baseType: !231, size: 32, offset: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !416, file: !390, line: 52, baseType: !179, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !413, file: !390, line: 54, baseType: !425, size: 64, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !427)
!427 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !389, file: !390, line: 96, baseType: !357, size: 64, offset: 384)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !389, file: !390, line: 98, baseType: !430, size: 256, offset: 448)
!430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !427, size: 256, elements: !431)
!431 = !{!432}
!432 = !DISubrange(count: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !389, file: !390, line: 101, baseType: !434, size: 32, offset: 704)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !435, line: 25, size: 32, elements: !436)
!435 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!436 = !{!437}
!437 = !DIDerivedType(tag: DW_TAG_member, scope: !434, file: !435, line: 26, baseType: !438, size: 32)
!438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !434, file: !435, line: 26, size: 32, elements: !439)
!439 = !{!440}
!440 = !DIDerivedType(tag: DW_TAG_member, scope: !438, file: !435, line: 30, baseType: !441, size: 32)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !438, file: !435, line: 30, size: 32, elements: !442)
!442 = !{!443, !459}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !441, file: !435, line: 31, baseType: !444)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !445, line: 83, baseType: !446)
!445 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !445, line: 71, elements: !447)
!447 = !{!448}
!448 = !DIDerivedType(tag: DW_TAG_member, scope: !446, file: !445, line: 72, baseType: !449)
!449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !446, file: !445, line: 72, elements: !450)
!450 = !{!451}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !449, file: !445, line: 73, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !445, line: 20, elements: !453)
!453 = !{!454}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !452, file: !445, line: 21, baseType: !455)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !456, line: 25, baseType: !457)
!456 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !456, line: 25, elements: !458)
!458 = !{}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !441, file: !435, line: 32, baseType: !177, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !389, file: !390, line: 102, baseType: !461, size: 64, offset: 768)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !390, line: 135, size: 1024, align: 512, elements: !464)
!464 = !{!465, !469, !470, !477, !486, !490, !494, !498, !499, !503, !508, !520, !526}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !463, file: !390, line: 136, baseType: !466, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DISubroutineType(types: !468)
!468 = !{!177, !388, !7}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !463, file: !390, line: 137, baseType: !466, size: 64, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !463, file: !390, line: 138, baseType: !471, size: 64, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DISubroutineType(types: !473)
!473 = !{!177, !474, !476}
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !389)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !463, file: !390, line: 139, baseType: !478, size: 64, offset: 192)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DISubroutineType(types: !480)
!480 = !{!177, !474, !7, !481, !484}
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !483)
!483 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !413)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !463, file: !390, line: 141, baseType: !487, size: 64, offset: 256)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DISubroutineType(types: !489)
!489 = !{!177, !474}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !463, file: !390, line: 142, baseType: !491, size: 64, offset: 320)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DISubroutineType(types: !493)
!493 = !{!177, !388}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !463, file: !390, line: 143, baseType: !495, size: 64, offset: 384)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DISubroutineType(types: !497)
!497 = !{null, !388}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !463, file: !390, line: 144, baseType: !495, size: 64, offset: 448)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !463, file: !390, line: 145, baseType: !500, size: 64, offset: 512)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DISubroutineType(types: !502)
!502 = !{null, !388, !357}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !463, file: !390, line: 146, baseType: !504, size: 64, offset: 576)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{!507, !388, !507, !177}
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !463, file: !390, line: 147, baseType: !509, size: 64, offset: 640)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DISubroutineType(types: !511)
!511 = !{!512, !514}
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !390, line: 18, flags: DIFlagFwdDecl)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !516, line: 8, size: 128, elements: !517)
!516 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!517 = !{!518, !519}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !515, file: !516, line: 9, baseType: !512, size: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !515, file: !516, line: 10, baseType: !388, size: 64, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !463, file: !390, line: 148, baseType: !521, size: 64, offset: 704)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DISubroutineType(types: !523)
!523 = !{!177, !524, !240}
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !515)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !463, file: !390, line: 149, baseType: !527, size: 64, offset: 768)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DISubroutineType(types: !529)
!529 = !{!388, !388, !530}
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !358)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !389, file: !390, line: 103, baseType: !533, size: 64, offset: 832)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !535)
!535 = !{!536, !537, !540, !541, !542, !546, !598, !681, !783, !866, !870, !871, !872, !873, !874, !883, !884, !885, !890, !894, !895, !898, !902, !905, !906, !907, !948, !2653, !2654, !2655, !2656, !2657, !2658, !2661, !2663, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2691, !2692, !2693, !2694, !2695, !2698, !2699, !2700, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !534, file: !44, line: 1417, baseType: !250, size: 128)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !534, file: !44, line: 1418, baseType: !538, size: 32, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !174, line: 16, baseType: !539)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !174, line: 13, baseType: !231)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !534, file: !44, line: 1419, baseType: !427, size: 8, offset: 160)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !534, file: !44, line: 1420, baseType: !176, size: 64, offset: 192)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !534, file: !44, line: 1421, baseType: !543, size: 64, offset: 256)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !174, line: 46, baseType: !544)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !209, line: 88, baseType: !545)
!545 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !534, file: !44, line: 1422, baseType: !547, size: 64, offset: 320)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !549)
!549 = !{!550, !551, !552, !559, !563, !567, !571, !575, !576, !586, !589, !590, !591, !595, !596, !597}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !548, file: !44, line: 2229, baseType: !481, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !548, file: !44, line: 2230, baseType: !177, size: 32, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !548, file: !44, line: 2238, baseType: !553, size: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DISubroutineType(types: !555)
!555 = !{!177, !556}
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !558, line: 28, flags: DIFlagFwdDecl)
!558 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!559 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !548, file: !44, line: 2239, baseType: !560, size: 64, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !562)
!562 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !548, file: !44, line: 2240, baseType: !564, size: 64, offset: 256)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DISubroutineType(types: !566)
!566 = !{!388, !547, !177, !481, !175}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !548, file: !44, line: 2242, baseType: !568, size: 64, offset: 320)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DISubroutineType(types: !570)
!570 = !{null, !533}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !548, file: !44, line: 2243, baseType: !572, size: 64, offset: 384)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !574, line: 76, flags: DIFlagFwdDecl)
!574 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!575 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !548, file: !44, line: 2244, baseType: !547, size: 64, offset: 448)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !548, file: !44, line: 2245, baseType: !577, size: 64, offset: 512)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !174, line: 182, size: 64, elements: !578)
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !577, file: !174, line: 183, baseType: !580, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !174, line: 186, size: 128, elements: !582)
!582 = !{!583, !584}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !581, file: !174, line: 187, baseType: !580, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !581, file: !174, line: 187, baseType: !585, size: 64, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !548, file: !44, line: 2247, baseType: !587, offset: 576)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !588, line: 187, elements: !458)
!588 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!589 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !548, file: !44, line: 2248, baseType: !587, offset: 576)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !548, file: !44, line: 2249, baseType: !587, offset: 576)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !548, file: !44, line: 2250, baseType: !592, offset: 576)
!592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !587, elements: !593)
!593 = !{!594}
!594 = !DISubrange(count: 3)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !548, file: !44, line: 2252, baseType: !587, offset: 576)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !548, file: !44, line: 2253, baseType: !587, offset: 576)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !548, file: !44, line: 2254, baseType: !587, offset: 576)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !534, file: !44, line: 1423, baseType: !599, size: 64, offset: 384)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !601)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !602)
!602 = !{!603, !607, !611, !612, !616, !622, !626, !627, !628, !632, !636, !637, !638, !639, !645, !650, !651, !658, !659, !660, !661, !665, !680}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !601, file: !44, line: 1936, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DISubroutineType(types: !606)
!606 = !{!357, !533}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !601, file: !44, line: 1937, baseType: !608, size: 64, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{null, !357}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !601, file: !44, line: 1938, baseType: !608, size: 64, offset: 128)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !601, file: !44, line: 1940, baseType: !613, size: 64, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DISubroutineType(types: !615)
!615 = !{null, !357, !177}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !601, file: !44, line: 1941, baseType: !617, size: 64, offset: 256)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DISubroutineType(types: !619)
!619 = !{!177, !357, !620}
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !601, file: !44, line: 1942, baseType: !623, size: 64, offset: 320)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DISubroutineType(types: !625)
!625 = !{!177, !357}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !601, file: !44, line: 1943, baseType: !608, size: 64, offset: 384)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !601, file: !44, line: 1944, baseType: !568, size: 64, offset: 448)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !601, file: !44, line: 1945, baseType: !629, size: 64, offset: 512)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{!177, !533, !177}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !601, file: !44, line: 1946, baseType: !633, size: 64, offset: 576)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{!177, !533}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !601, file: !44, line: 1947, baseType: !633, size: 64, offset: 640)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !601, file: !44, line: 1948, baseType: !633, size: 64, offset: 704)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !601, file: !44, line: 1949, baseType: !633, size: 64, offset: 768)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !601, file: !44, line: 1950, baseType: !640, size: 64, offset: 832)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DISubroutineType(types: !642)
!642 = !{!177, !388, !643}
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !601, file: !44, line: 1951, baseType: !646, size: 64, offset: 896)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DISubroutineType(types: !648)
!648 = !{!177, !533, !649, !507}
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !601, file: !44, line: 1952, baseType: !568, size: 64, offset: 960)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !601, file: !44, line: 1954, baseType: !652, size: 64, offset: 1024)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DISubroutineType(types: !654)
!654 = !{!177, !655, !388}
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !657, line: 539, flags: DIFlagFwdDecl)
!657 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!658 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !601, file: !44, line: 1955, baseType: !652, size: 64, offset: 1088)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !601, file: !44, line: 1956, baseType: !652, size: 64, offset: 1152)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !601, file: !44, line: 1957, baseType: !652, size: 64, offset: 1216)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !601, file: !44, line: 1963, baseType: !662, size: 64, offset: 1280)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DISubroutineType(types: !664)
!664 = !{!177, !533, !340, !173}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !601, file: !44, line: 1964, baseType: !666, size: 64, offset: 1344)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!102, !533, !669}
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !671, line: 12, size: 256, elements: !672)
!671 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!672 = !{!673, !674, !675, !676, !677}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !670, file: !671, line: 13, baseType: !173, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !670, file: !671, line: 16, baseType: !177, size: 32, offset: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !670, file: !671, line: 23, baseType: !176, size: 64, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !670, file: !671, line: 30, baseType: !176, size: 64, offset: 128)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !670, file: !671, line: 33, baseType: !678, size: 64, offset: 192)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !342, line: 27, flags: DIFlagFwdDecl)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !601, file: !44, line: 1966, baseType: !666, size: 64, offset: 1408)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !534, file: !44, line: 1424, baseType: !682, size: 64, offset: 448)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !685)
!685 = !{!686, !752, !756, !760, !761, !762, !763, !764, !769, !774, !778}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !684, file: !38, line: 323, baseType: !687, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{!177, !690}
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !712, !713, !718, !719, !735, !736, !737}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !691, file: !38, line: 295, baseType: !581, size: 128)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !691, file: !38, line: 296, baseType: !250, size: 128, offset: 128)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !691, file: !38, line: 297, baseType: !250, size: 128, offset: 256)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !691, file: !38, line: 298, baseType: !250, size: 128, offset: 384)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !691, file: !38, line: 299, baseType: !698, size: 192, offset: 512)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !699, line: 53, size: 192, elements: !700)
!699 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!700 = !{!701, !710, !711}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !698, file: !699, line: 54, baseType: !702, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !703, line: 13, baseType: !704)
!703 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !174, line: 175, baseType: !705)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !174, line: 173, size: 64, elements: !706)
!706 = !{!707}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !705, file: !174, line: 174, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !180, line: 22, baseType: !709)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !182, line: 30, baseType: !545)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !698, file: !699, line: 55, baseType: !444, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !698, file: !699, line: 59, baseType: !250, size: 128, offset: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !691, file: !38, line: 300, baseType: !444, offset: 704)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !691, file: !38, line: 301, baseType: !714, size: 32, offset: 704)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !174, line: 168, baseType: !715)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !174, line: 166, size: 32, elements: !716)
!716 = !{!717}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !715, file: !174, line: 167, baseType: !177, size: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !691, file: !38, line: 302, baseType: !533, size: 64, offset: 768)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !691, file: !38, line: 303, baseType: !720, size: 64, offset: 832)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !721)
!721 = !{!722, !734}
!722 = !DIDerivedType(tag: DW_TAG_member, scope: !720, file: !38, line: 69, baseType: !723, size: 32)
!723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !720, file: !38, line: 69, size: 32, elements: !724)
!724 = !{!725, !726, !727}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !723, file: !38, line: 70, baseType: !364, size: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !723, file: !38, line: 71, baseType: !372, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !723, file: !38, line: 72, baseType: !728, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !729, line: 24, baseType: !730)
!729 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !729, line: 22, size: 32, elements: !731)
!731 = !{!732}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !730, file: !729, line: 23, baseType: !733, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !729, line: 20, baseType: !370)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !720, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !691, file: !38, line: 304, baseType: !543, size: 64, offset: 896)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !691, file: !38, line: 305, baseType: !176, size: 64, offset: 960)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !691, file: !38, line: 306, baseType: !738, size: 576, offset: 1024)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !739)
!739 = !{!740, !742, !743, !744, !745, !746, !747, !748, !751}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !738, file: !38, line: 206, baseType: !741, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !545)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !738, file: !38, line: 207, baseType: !741, size: 64, offset: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !738, file: !38, line: 208, baseType: !741, size: 64, offset: 128)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !738, file: !38, line: 209, baseType: !741, size: 64, offset: 192)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !738, file: !38, line: 210, baseType: !741, size: 64, offset: 256)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !738, file: !38, line: 211, baseType: !741, size: 64, offset: 320)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !738, file: !38, line: 212, baseType: !741, size: 64, offset: 384)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !738, file: !38, line: 213, baseType: !749, size: 64, offset: 448)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !750, line: 8, baseType: !709)
!750 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!751 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !738, file: !38, line: 214, baseType: !749, size: 64, offset: 512)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !684, file: !38, line: 324, baseType: !753, size: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DISubroutineType(types: !755)
!755 = !{!690, !533, !177}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !684, file: !38, line: 325, baseType: !757, size: 64, offset: 128)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DISubroutineType(types: !759)
!759 = !{null, !690}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !684, file: !38, line: 326, baseType: !687, size: 64, offset: 192)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !684, file: !38, line: 327, baseType: !687, size: 64, offset: 256)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !684, file: !38, line: 328, baseType: !687, size: 64, offset: 320)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !684, file: !38, line: 329, baseType: !629, size: 64, offset: 384)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !684, file: !38, line: 332, baseType: !765, size: 64, offset: 448)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DISubroutineType(types: !767)
!767 = !{!768, !357}
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !684, file: !38, line: 333, baseType: !770, size: 64, offset: 512)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DISubroutineType(types: !772)
!772 = !{!177, !357, !773}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !684, file: !38, line: 335, baseType: !775, size: 64, offset: 576)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DISubroutineType(types: !777)
!777 = !{!177, !357, !768}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !684, file: !38, line: 337, baseType: !779, size: 64, offset: 640)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!177, !533, !782}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !534, file: !44, line: 1425, baseType: !784, size: 64, offset: 512)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !787)
!787 = !{!788, !792, !793, !797, !798, !799, !814, !837, !841, !842, !865}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !786, file: !38, line: 429, baseType: !789, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DISubroutineType(types: !791)
!791 = !{!177, !533, !177, !177, !524}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !786, file: !38, line: 430, baseType: !629, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !786, file: !38, line: 431, baseType: !794, size: 64, offset: 128)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DISubroutineType(types: !796)
!796 = !{!177, !533, !7}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !786, file: !38, line: 432, baseType: !794, size: 64, offset: 192)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !786, file: !38, line: 433, baseType: !629, size: 64, offset: 256)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !786, file: !38, line: 434, baseType: !800, size: 64, offset: 320)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!177, !533, !177, !803}
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !805)
!805 = !{!806, !807, !808, !809, !810, !811, !812, !813}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !804, file: !38, line: 416, baseType: !177, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !804, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !804, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !804, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !804, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !804, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !804, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !804, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !786, file: !38, line: 435, baseType: !815, size: 64, offset: 384)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{!177, !533, !720, !818}
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !820)
!820 = !{!821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !819, file: !38, line: 344, baseType: !177, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !819, file: !38, line: 345, baseType: !179, size: 64, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !819, file: !38, line: 346, baseType: !179, size: 64, offset: 128)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !819, file: !38, line: 347, baseType: !179, size: 64, offset: 192)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !819, file: !38, line: 348, baseType: !179, size: 64, offset: 256)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !819, file: !38, line: 349, baseType: !179, size: 64, offset: 320)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !819, file: !38, line: 350, baseType: !179, size: 64, offset: 384)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !819, file: !38, line: 351, baseType: !708, size: 64, offset: 448)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !819, file: !38, line: 353, baseType: !708, size: 64, offset: 512)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !819, file: !38, line: 354, baseType: !177, size: 32, offset: 576)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !819, file: !38, line: 355, baseType: !177, size: 32, offset: 608)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !819, file: !38, line: 356, baseType: !179, size: 64, offset: 640)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !819, file: !38, line: 357, baseType: !179, size: 64, offset: 704)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !819, file: !38, line: 358, baseType: !179, size: 64, offset: 768)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !819, file: !38, line: 359, baseType: !708, size: 64, offset: 832)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !819, file: !38, line: 360, baseType: !177, size: 32, offset: 896)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !786, file: !38, line: 436, baseType: !838, size: 64, offset: 448)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!177, !533, !782, !818}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !786, file: !38, line: 438, baseType: !815, size: 64, offset: 512)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !786, file: !38, line: 439, baseType: !843, size: 64, offset: 576)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DISubroutineType(types: !845)
!845 = !{!177, !533, !846}
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !848)
!848 = !{!849, !850}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !847, file: !38, line: 410, baseType: !7, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !847, file: !38, line: 411, baseType: !851, size: 1344, offset: 64)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !852, size: 1344, elements: !593)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859, !860, !861, !862, !864}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !852, file: !38, line: 396, baseType: !7, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !852, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !852, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !852, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !852, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !852, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !852, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !852, file: !38, line: 404, baseType: !183, size: 64, offset: 256)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !852, file: !38, line: 405, baseType: !863, size: 64, offset: 320)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !174, line: 126, baseType: !179)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !852, file: !38, line: 406, baseType: !863, size: 64, offset: 384)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !786, file: !38, line: 440, baseType: !794, size: 64, offset: 640)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !534, file: !44, line: 1426, baseType: !867, size: 64, offset: 576)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !869)
!869 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !534, file: !44, line: 1427, baseType: !176, size: 64, offset: 640)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !534, file: !44, line: 1428, baseType: !176, size: 64, offset: 704)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !534, file: !44, line: 1429, baseType: !176, size: 64, offset: 768)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !534, file: !44, line: 1430, baseType: !388, size: 64, offset: 832)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !534, file: !44, line: 1431, baseType: !875, size: 256, offset: 896)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !876, line: 35, size: 256, elements: !877)
!876 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!877 = !{!878, !879, !880, !882}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !875, file: !876, line: 36, baseType: !702, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !875, file: !876, line: 42, baseType: !702, size: 64, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !875, file: !876, line: 46, baseType: !881, offset: 128)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !445, line: 29, baseType: !452)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !875, file: !876, line: 47, baseType: !250, size: 128, offset: 128)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !534, file: !44, line: 1432, baseType: !177, size: 32, offset: 1152)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !534, file: !44, line: 1433, baseType: !714, size: 32, offset: 1184)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !534, file: !44, line: 1437, baseType: !886, size: 64, offset: 1216)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !889)
!889 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !534, file: !44, line: 1449, baseType: !891, size: 64, offset: 1280)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !405, line: 34, size: 64, elements: !892)
!892 = !{!893}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !891, file: !405, line: 35, baseType: !408, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !534, file: !44, line: 1450, baseType: !250, size: 128, offset: 1344)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !534, file: !44, line: 1451, baseType: !896, size: 64, offset: 1472)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !534, file: !44, line: 1452, baseType: !899, size: 64, offset: 1536)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !901, line: 40, flags: DIFlagFwdDecl)
!901 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!902 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !534, file: !44, line: 1453, baseType: !903, size: 64, offset: 1600)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !534, file: !44, line: 1454, baseType: !581, size: 128, offset: 1664)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !534, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !534, file: !44, line: 1456, baseType: !908, size: 2432, offset: 1856)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !909)
!909 = !{!910, !911, !912, !914, !946}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !908, file: !38, line: 519, baseType: !7, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !908, file: !38, line: 520, baseType: !875, size: 256, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !908, file: !38, line: 521, baseType: !913, size: 192, offset: 320)
!913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 192, elements: !593)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !908, file: !38, line: 522, baseType: !915, size: 1728, offset: 512)
!915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 1728, elements: !593)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !917)
!917 = !{!918, !938, !939, !940, !941, !942, !943, !944, !945}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !916, file: !38, line: 223, baseType: !919, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !921)
!921 = !{!922, !923, !936, !937}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !920, file: !38, line: 444, baseType: !177, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !920, file: !38, line: 445, baseType: !924, size: 64, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !927)
!927 = !{!928, !929, !930, !931, !932, !933, !934, !935}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !926, file: !38, line: 311, baseType: !629, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !926, file: !38, line: 312, baseType: !629, size: 64, offset: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !926, file: !38, line: 313, baseType: !629, size: 64, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !926, file: !38, line: 314, baseType: !629, size: 64, offset: 192)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !926, file: !38, line: 315, baseType: !687, size: 64, offset: 256)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !926, file: !38, line: 316, baseType: !687, size: 64, offset: 320)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !926, file: !38, line: 317, baseType: !687, size: 64, offset: 384)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !926, file: !38, line: 318, baseType: !779, size: 64, offset: 448)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !920, file: !38, line: 446, baseType: !572, size: 64, offset: 128)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !920, file: !38, line: 447, baseType: !919, size: 64, offset: 192)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !916, file: !38, line: 224, baseType: !177, size: 32, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !916, file: !38, line: 226, baseType: !250, size: 128, offset: 128)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !916, file: !38, line: 227, baseType: !176, size: 64, offset: 256)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !916, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !916, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !916, file: !38, line: 230, baseType: !741, size: 64, offset: 384)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !916, file: !38, line: 231, baseType: !741, size: 64, offset: 448)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !916, file: !38, line: 232, baseType: !175, size: 64, offset: 512)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !908, file: !38, line: 523, baseType: !947, size: 192, offset: 2240)
!947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !924, size: 192, elements: !593)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !534, file: !44, line: 1458, baseType: !949, size: 2112, offset: 4288)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !950)
!950 = !{!951, !952, !959}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !949, file: !44, line: 1411, baseType: !177, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !949, file: !44, line: 1412, baseType: !953, size: 128, offset: 64)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !954, line: 40, baseType: !955)
!954 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !954, line: 36, size: 128, elements: !956)
!956 = !{!957, !958}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !955, file: !954, line: 37, baseType: !444)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !955, file: !954, line: 38, baseType: !250, size: 128)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !949, file: !44, line: 1413, baseType: !960, size: 1920, offset: 192)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 1920, elements: !593)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !962, line: 12, size: 640, elements: !963)
!962 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!963 = !{!964, !980, !982, !2651, !2652}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !961, file: !962, line: 13, baseType: !965, size: 320)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !966, line: 17, size: 320, elements: !967)
!966 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!967 = !{!968, !969, !970, !971}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !965, file: !966, line: 18, baseType: !177, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !965, file: !966, line: 19, baseType: !177, size: 32, offset: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !965, file: !966, line: 20, baseType: !953, size: 128, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !965, file: !966, line: 22, baseType: !972, size: 128, align: 64, offset: 192)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !174, line: 216, size: 128, align: 64, elements: !973)
!973 = !{!974, !976}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !972, file: !174, line: 217, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !972, file: !174, line: 218, baseType: !977, size: 64, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !975}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !961, file: !962, line: 14, baseType: !981, size: 64, offset: 320)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !961, file: !962, line: 15, baseType: !983, size: 64, offset: 384)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !984, line: 16, size: 64, elements: !985)
!984 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!985 = !{!986}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !983, file: !984, line: 17, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !901, line: 640, size: 48640, elements: !989)
!989 = !{!990, !996, !998, !999, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1016, !1041, !1052, !1144, !1145, !1146, !1157, !1158, !1160, !1161, !1945, !1946, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !2023, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2038, !2039, !2040, !2042, !2043, !2044, !2045, !2046, !2047, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2071, !2076, !2077, !2078, !2079, !2080, !2084, !2087, !2090, !2093, !2096, !2099, !2200, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2248, !2249, !2250, !2251, !2252, !2257, !2258, !2259, !2262, !2263, !2266, !2269, !2272, !2273, !2313, !2316, !2317, !2396, !2397, !2400, !2401, !2404, !2405, !2406, !2410, !2411, !2412, !2425, !2426, !2427, !2437, !2442, !2443, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !988, file: !901, line: 646, baseType: !991, size: 128)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !992, line: 56, size: 128, elements: !993)
!992 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !991, file: !992, line: 57, baseType: !176, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !991, file: !992, line: 58, baseType: !231, size: 32, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !988, file: !901, line: 649, baseType: !997, size: 64, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !102)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !988, file: !901, line: 657, baseType: !175, size: 64, offset: 192)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !988, file: !901, line: 658, baseType: !1000, size: 32, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1001, line: 113, baseType: !1002)
!1001 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1001, line: 111, size: 32, elements: !1003)
!1003 = !{!1004}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1002, file: !1001, line: 112, baseType: !714, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !988, file: !901, line: 660, baseType: !7, size: 32, offset: 288)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !988, file: !901, line: 661, baseType: !7, size: 32, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !988, file: !901, line: 684, baseType: !177, size: 32, offset: 352)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !988, file: !901, line: 686, baseType: !177, size: 32, offset: 384)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !988, file: !901, line: 687, baseType: !177, size: 32, offset: 416)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !988, file: !901, line: 688, baseType: !177, size: 32, offset: 448)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !988, file: !901, line: 689, baseType: !7, size: 32, offset: 480)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !988, file: !901, line: 691, baseType: !1013, size: 64, offset: 512)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1015 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !901, line: 691, flags: DIFlagFwdDecl)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !988, file: !901, line: 692, baseType: !1017, size: 832, offset: 576)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !901, line: 451, size: 832, elements: !1018)
!1018 = !{!1019, !1024, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1017, file: !901, line: 453, baseType: !1020, size: 128)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !901, line: 325, size: 128, elements: !1021)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1020, file: !901, line: 326, baseType: !176, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1020, file: !901, line: 327, baseType: !231, size: 32, offset: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1017, file: !901, line: 454, baseType: !1025, size: 192, align: 64, offset: 128)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1026, line: 24, size: 192, align: 64, elements: !1027)
!1026 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1027 = !{!1028, !1029, !1031}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1025, file: !1026, line: 25, baseType: !176, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1025, file: !1026, line: 26, baseType: !1030, size: 64, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1025, file: !1026, line: 27, baseType: !1030, size: 64, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1017, file: !901, line: 455, baseType: !250, size: 128, offset: 320)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1017, file: !901, line: 456, baseType: !7, size: 32, offset: 448)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1017, file: !901, line: 458, baseType: !179, size: 64, offset: 512)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1017, file: !901, line: 459, baseType: !179, size: 64, offset: 576)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1017, file: !901, line: 460, baseType: !179, size: 64, offset: 640)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1017, file: !901, line: 461, baseType: !179, size: 64, offset: 704)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1017, file: !901, line: 463, baseType: !179, size: 64, offset: 768)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1017, file: !901, line: 465, baseType: !1040, offset: 832)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !901, line: 415, elements: !458)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !988, file: !901, line: 693, baseType: !1042, size: 384, offset: 1408)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !901, line: 489, size: 384, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1049, !1050}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1042, file: !901, line: 490, baseType: !250, size: 128)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1042, file: !901, line: 491, baseType: !176, size: 64, offset: 128)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1042, file: !901, line: 492, baseType: !176, size: 64, offset: 192)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1042, file: !901, line: 493, baseType: !7, size: 32, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1042, file: !901, line: 494, baseType: !178, size: 16, offset: 288)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1042, file: !901, line: 495, baseType: !178, size: 16, offset: 304)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1042, file: !901, line: 497, baseType: !1051, size: 64, offset: 320)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !988, file: !901, line: 697, baseType: !1053, size: 1792, offset: 1792)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !901, line: 507, size: 1792, elements: !1054)
!1054 = !{!1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1141, !1142}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1053, file: !901, line: 508, baseType: !1025, size: 192, align: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1053, file: !901, line: 515, baseType: !179, size: 64, offset: 192)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1053, file: !901, line: 516, baseType: !179, size: 64, offset: 256)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1053, file: !901, line: 517, baseType: !179, size: 64, offset: 320)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1053, file: !901, line: 518, baseType: !179, size: 64, offset: 384)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1053, file: !901, line: 519, baseType: !179, size: 64, offset: 448)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1053, file: !901, line: 526, baseType: !708, size: 64, offset: 512)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1053, file: !901, line: 527, baseType: !179, size: 64, offset: 576)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1053, file: !901, line: 528, baseType: !7, size: 32, offset: 640)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1053, file: !901, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1053, file: !901, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1053, file: !901, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1053, file: !901, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1053, file: !901, line: 563, baseType: !1069, size: 512, offset: 704)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1070)
!1070 = !{!1071, !1079, !1080, !1085, !1135, !1138, !1139, !1140}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1069, file: !20, line: 119, baseType: !1072, size: 256)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1073, line: 9, size: 256, elements: !1074)
!1073 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1074 = !{!1075, !1076}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1072, file: !1073, line: 10, baseType: !1025, size: 192, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1072, file: !1073, line: 11, baseType: !1077, size: 64, offset: 192)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1078, line: 29, baseType: !708)
!1078 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1069, file: !20, line: 120, baseType: !1077, size: 64, offset: 256)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1069, file: !20, line: 121, baseType: !1081, size: 64, offset: 320)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!19, !1084}
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1069, file: !20, line: 122, baseType: !1086, size: 64, offset: 384)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1088)
!1088 = !{!1089, !1109, !1110, !1113, !1118, !1119, !1130, !1134}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1087, file: !20, line: 160, baseType: !1090, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1092)
!1092 = !{!1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1091, file: !20, line: 215, baseType: !881)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1091, file: !20, line: 216, baseType: !7, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1091, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1091, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1091, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1091, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1091, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1091, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1091, file: !20, line: 233, baseType: !1077, size: 64, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1091, file: !20, line: 234, baseType: !1084, size: 64, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1091, file: !20, line: 235, baseType: !1077, size: 64, offset: 256)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1091, file: !20, line: 236, baseType: !1084, size: 64, offset: 320)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1091, file: !20, line: 237, baseType: !1106, size: 4096, offset: 512)
!1106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1087, size: 4096, elements: !1107)
!1107 = !{!1108}
!1108 = !DISubrange(count: 8)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1087, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1087, file: !20, line: 162, baseType: !1111, size: 32, offset: 96)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !174, line: 27, baseType: !1112)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !209, line: 96, baseType: !177)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1087, file: !20, line: 163, baseType: !1114, size: 32, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !395, line: 276, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !395, line: 276, size: 32, elements: !1116)
!1116 = !{!1117}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1115, file: !395, line: 276, baseType: !399, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1087, file: !20, line: 164, baseType: !1084, size: 64, offset: 192)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1087, file: !20, line: 165, baseType: !1120, size: 128, offset: 256)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1073, line: 14, size: 128, elements: !1121)
!1121 = !{!1122}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1120, file: !1073, line: 15, baseType: !1123, size: 128)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1026, line: 125, size: 128, elements: !1124)
!1124 = !{!1125, !1129}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1123, file: !1026, line: 126, baseType: !1126, size: 64)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1026, line: 31, size: 64, elements: !1127)
!1127 = !{!1128}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1126, file: !1026, line: 32, baseType: !1030, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1123, file: !1026, line: 127, baseType: !1030, size: 64, offset: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1087, file: !20, line: 166, baseType: !1131, size: 64, offset: 384)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!1077}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1087, file: !20, line: 167, baseType: !1077, size: 64, offset: 448)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1069, file: !20, line: 123, baseType: !1136, size: 8, offset: 448)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !180, line: 17, baseType: !1137)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !182, line: 21, baseType: !427)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1069, file: !20, line: 124, baseType: !1136, size: 8, offset: 456)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1069, file: !20, line: 125, baseType: !1136, size: 8, offset: 464)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1069, file: !20, line: 126, baseType: !1136, size: 8, offset: 472)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1053, file: !901, line: 572, baseType: !1069, size: 512, offset: 1216)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1053, file: !901, line: 580, baseType: !1143, size: 64, offset: 1728)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !988, file: !901, line: 721, baseType: !7, size: 32, offset: 3584)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !988, file: !901, line: 722, baseType: !177, size: 32, offset: 3616)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !988, file: !901, line: 723, baseType: !1147, size: 64, offset: 3648)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1149)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1150, line: 17, baseType: !1151)
!1150 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1150, line: 17, size: 64, elements: !1152)
!1152 = !{!1153}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1151, file: !1150, line: 17, baseType: !1154, size: 64)
!1154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 64, elements: !1155)
!1155 = !{!1156}
!1156 = !DISubrange(count: 1)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !988, file: !901, line: 724, baseType: !1149, size: 64, offset: 3712)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !988, file: !901, line: 749, baseType: !1159, offset: 3776)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !901, line: 290, elements: !458)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !988, file: !901, line: 751, baseType: !250, size: 128, offset: 3776)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !988, file: !901, line: 757, baseType: !1162, size: 64, offset: 3904)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !342, line: 388, size: 7296, elements: !1164)
!1164 = !{!1165, !1941}
!1165 = !DIDerivedType(tag: DW_TAG_member, scope: !1163, file: !342, line: 389, baseType: !1166, size: 7296)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1163, file: !342, line: 389, size: 7296, elements: !1167)
!1167 = !{!1168, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1844, !1850, !1853, !1892, !1893, !1915, !1916, !1919, !1920, !1921, !1924, !1925, !1926, !1929, !1940}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1166, file: !342, line: 390, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !342, line: 305, size: 1472, elements: !1171)
!1171 = !{!1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1186, !1187, !1192, !1193, !1196, !1281, !1282, !1792, !1793, !1794}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1170, file: !342, line: 308, baseType: !176, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1170, file: !342, line: 309, baseType: !176, size: 64, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1170, file: !342, line: 313, baseType: !1169, size: 64, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1170, file: !342, line: 313, baseType: !1169, size: 64, offset: 192)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1170, file: !342, line: 315, baseType: !1025, size: 192, align: 64, offset: 256)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1170, file: !342, line: 323, baseType: !176, size: 64, offset: 448)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1170, file: !342, line: 327, baseType: !1162, size: 64, offset: 512)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1170, file: !342, line: 333, baseType: !1180, size: 64, offset: 576)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !657, line: 284, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !657, line: 284, size: 64, elements: !1182)
!1182 = !{!1183}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1181, file: !657, line: 284, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1185, line: 19, baseType: !176)
!1185 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1170, file: !342, line: 334, baseType: !176, size: 64, offset: 640)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1170, file: !342, line: 343, baseType: !1188, size: 256, offset: 704)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1170, file: !342, line: 340, size: 256, elements: !1189)
!1189 = !{!1190, !1191}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1188, file: !342, line: 341, baseType: !1025, size: 192, align: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1188, file: !342, line: 342, baseType: !176, size: 64, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1170, file: !342, line: 351, baseType: !250, size: 128, offset: 960)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1170, file: !342, line: 353, baseType: !1194, size: 64, offset: 1088)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !342, line: 353, flags: DIFlagFwdDecl)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1170, file: !342, line: 356, baseType: !1197, size: 64, offset: 1152)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1199)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1200)
!1200 = !{!1201, !1205, !1206, !1210, !1214, !1255, !1259, !1263, !1267, !1268, !1269, !1273, !1277}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1199, file: !14, line: 558, baseType: !1202, size: 64)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{null, !1169}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1199, file: !14, line: 559, baseType: !1202, size: 64, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1199, file: !14, line: 560, baseType: !1207, size: 64, offset: 128)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!177, !1169, !176}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1199, file: !14, line: 561, baseType: !1211, size: 64, offset: 192)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!177, !1169}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1199, file: !14, line: 562, baseType: !1215, size: 64, offset: 256)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!1218, !1219}
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !342, line: 682, baseType: !7)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1221)
!1221 = !{!1222, !1223, !1224, !1225, !1226, !1227, !1234, !1241, !1247, !1248, !1249, !1251, !1253}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1220, file: !14, line: 509, baseType: !1169, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1220, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1220, file: !14, line: 511, baseType: !173, size: 32, offset: 96)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1220, file: !14, line: 512, baseType: !176, size: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1220, file: !14, line: 513, baseType: !176, size: 64, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1220, file: !14, line: 514, baseType: !1228, size: 64, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !657, line: 385, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 385, size: 64, elements: !1231)
!1231 = !{!1232}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1230, file: !657, line: 385, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1185, line: 15, baseType: !176)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1220, file: !14, line: 516, baseType: !1235, size: 64, offset: 320)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !657, line: 359, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 359, size: 64, elements: !1238)
!1238 = !{!1239}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1237, file: !657, line: 359, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1185, line: 16, baseType: !176)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1220, file: !14, line: 519, baseType: !1242, size: 64, offset: 384)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1185, line: 21, baseType: !1243)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1185, line: 21, size: 64, elements: !1244)
!1244 = !{!1245}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1243, file: !1185, line: 21, baseType: !1246, size: 64)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1185, line: 14, baseType: !176)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1220, file: !14, line: 521, baseType: !340, size: 64, offset: 448)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1220, file: !14, line: 522, baseType: !340, size: 64, offset: 512)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1220, file: !14, line: 528, baseType: !1250, size: 64, offset: 576)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1220, file: !14, line: 532, baseType: !1252, size: 64, offset: 640)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1220, file: !14, line: 536, baseType: !1254, size: 64, offset: 704)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !657, line: 509, baseType: !340)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1199, file: !14, line: 563, baseType: !1256, size: 64, offset: 320)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!1218, !1219, !13}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1199, file: !14, line: 565, baseType: !1260, size: 64, offset: 384)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{null, !1219, !176, !176}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1199, file: !14, line: 567, baseType: !1264, size: 64, offset: 448)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!176, !1169}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1199, file: !14, line: 571, baseType: !1215, size: 64, offset: 512)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1199, file: !14, line: 574, baseType: !1215, size: 64, offset: 576)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1199, file: !14, line: 579, baseType: !1270, size: 64, offset: 640)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!177, !1169, !176, !175, !177, !177}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1199, file: !14, line: 585, baseType: !1274, size: 64, offset: 704)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DISubroutineType(types: !1276)
!1276 = !{!481, !1169}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1199, file: !14, line: 615, baseType: !1278, size: 64, offset: 768)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!340, !1169, !176}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1170, file: !342, line: 359, baseType: !176, size: 64, offset: 1216)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1170, file: !342, line: 361, baseType: !1283, size: 64, offset: 1280)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !1285)
!1285 = !{!1286, !1296, !1297, !1298, !1554, !1555, !1556, !1557, !1558, !1560, !1561, !1562, !1590, !1774, !1783, !1784, !1785, !1786, !1787, !1788, !1791}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1284, file: !44, line: 920, baseType: !1287, size: 128)
!1287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1284, file: !44, line: 917, size: 128, elements: !1288)
!1288 = !{!1289, !1295}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1287, file: !44, line: 918, baseType: !1290, size: 64)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1291, line: 58, size: 64, elements: !1292)
!1291 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1292 = !{!1293}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1290, file: !1291, line: 59, baseType: !1294, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1287, file: !44, line: 919, baseType: !972, size: 128, align: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1284, file: !44, line: 921, baseType: !515, size: 128, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1284, file: !44, line: 922, baseType: !357, size: 64, offset: 256)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1284, file: !44, line: 923, baseType: !1299, size: 64, offset: 320)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1301)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !1302)
!1302 = !{!1303, !1304, !1308, !1316, !1320, !1346, !1347, !1351, !1364, !1365, !1372, !1376, !1377, !1381, !1382, !1386, !1391, !1392, !1396, !1400, !1509, !1513, !1517, !1521, !1522, !1528, !1532, !1537, !1541, !1545, !1549, !1553}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1301, file: !44, line: 1823, baseType: !572, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1301, file: !44, line: 1824, baseType: !1305, size: 64, offset: 64)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!543, !1283, !543, !177}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1301, file: !44, line: 1825, baseType: !1309, size: 64, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = !DISubroutineType(types: !1311)
!1311 = !{!1312, !1283, !507, !207, !1315}
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !174, line: 60, baseType: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !209, line: 73, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !209, line: 15, baseType: !102)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1301, file: !44, line: 1826, baseType: !1317, size: 64, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!1312, !1283, !481, !207, !1315}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1301, file: !44, line: 1827, baseType: !1321, size: 64, offset: 256)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!1312, !1324, !1344}
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !1326)
!1326 = !{!1327, !1328, !1329, !1333, !1334, !1335, !1336, !1337}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1325, file: !44, line: 321, baseType: !1283, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1325, file: !44, line: 326, baseType: !543, size: 64, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1325, file: !44, line: 327, baseType: !1330, size: 64, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{null, !1324, !102, !102}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1325, file: !44, line: 328, baseType: !175, size: 64, offset: 192)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1325, file: !44, line: 329, baseType: !177, size: 32, offset: 256)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1325, file: !44, line: 330, baseType: !323, size: 16, offset: 288)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1325, file: !44, line: 331, baseType: !323, size: 16, offset: 304)
!1337 = !DIDerivedType(tag: DW_TAG_member, scope: !1325, file: !44, line: 332, baseType: !1338, size: 64, offset: 320)
!1338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1325, file: !44, line: 332, size: 64, elements: !1339)
!1339 = !{!1340, !1341}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1338, file: !44, line: 333, baseType: !7, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1338, file: !44, line: 334, baseType: !1342, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1301, file: !44, line: 1828, baseType: !1321, size: 64, offset: 320)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1301, file: !44, line: 1829, baseType: !1348, size: 64, offset: 384)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!177, !1324, !240}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1301, file: !44, line: 1830, baseType: !1352, size: 64, offset: 448)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!177, !1283, !1355}
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !1357)
!1357 = !{!1358, !1363}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1356, file: !44, line: 1777, baseType: !1359, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !1360)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = !DISubroutineType(types: !1362)
!1362 = !{!177, !1355, !481, !177, !543, !179, !7}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1356, file: !44, line: 1778, baseType: !543, size: 64, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1301, file: !44, line: 1831, baseType: !1352, size: 64, offset: 512)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1301, file: !44, line: 1832, baseType: !1366, size: 64, offset: 576)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!1369, !1283, !1370}
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !186, line: 52, baseType: !7)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !558, line: 27, flags: DIFlagFwdDecl)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1301, file: !44, line: 1833, baseType: !1373, size: 64, offset: 640)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!102, !1283, !7, !176}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1301, file: !44, line: 1834, baseType: !1373, size: 64, offset: 704)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1301, file: !44, line: 1835, baseType: !1378, size: 64, offset: 768)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{!177, !1283, !1169}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1301, file: !44, line: 1836, baseType: !176, size: 64, offset: 832)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1301, file: !44, line: 1837, baseType: !1383, size: 64, offset: 896)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = !DISubroutineType(types: !1385)
!1385 = !{!177, !357, !1283}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1301, file: !44, line: 1838, baseType: !1387, size: 64, offset: 960)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!177, !1283, !1390}
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !175)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1301, file: !44, line: 1839, baseType: !1383, size: 64, offset: 1024)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1301, file: !44, line: 1840, baseType: !1393, size: 64, offset: 1088)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{!177, !1283, !543, !543, !177}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1301, file: !44, line: 1841, baseType: !1397, size: 64, offset: 1152)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DISubroutineType(types: !1399)
!1399 = !{!177, !177, !1283, !177}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1301, file: !44, line: 1842, baseType: !1401, size: 64, offset: 1216)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{!177, !1283, !177, !1404}
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !1406)
!1406 = !{!1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1438, !1439, !1440, !1453, !1485}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1405, file: !44, line: 1063, baseType: !1404, size: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1405, file: !44, line: 1064, baseType: !250, size: 128, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1405, file: !44, line: 1065, baseType: !581, size: 128, offset: 192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1405, file: !44, line: 1066, baseType: !250, size: 128, offset: 320)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1405, file: !44, line: 1069, baseType: !250, size: 128, offset: 448)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1405, file: !44, line: 1072, baseType: !1390, size: 64, offset: 576)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1405, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1405, file: !44, line: 1074, baseType: !427, size: 8, offset: 672)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1405, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1405, file: !44, line: 1076, baseType: !177, size: 32, offset: 736)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1405, file: !44, line: 1077, baseType: !953, size: 128, offset: 768)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1405, file: !44, line: 1078, baseType: !1283, size: 64, offset: 896)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1405, file: !44, line: 1079, baseType: !543, size: 64, offset: 960)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1405, file: !44, line: 1080, baseType: !543, size: 64, offset: 1024)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1405, file: !44, line: 1082, baseType: !1422, size: 64, offset: 1088)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !1424)
!1424 = !{!1425, !1433, !1434, !1435, !1436, !1437}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1423, file: !44, line: 1315, baseType: !1426)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1427, line: 20, baseType: !1428)
!1427 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1427, line: 11, elements: !1429)
!1429 = !{!1430}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1428, file: !1427, line: 12, baseType: !1431)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !456, line: 33, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !456, line: 31, elements: !458)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1423, file: !44, line: 1316, baseType: !177, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1423, file: !44, line: 1317, baseType: !177, size: 32, offset: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1423, file: !44, line: 1318, baseType: !1422, size: 64, offset: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1423, file: !44, line: 1319, baseType: !1283, size: 64, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1423, file: !44, line: 1320, baseType: !972, size: 128, align: 64, offset: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1405, file: !44, line: 1084, baseType: !176, size: 64, offset: 1152)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1405, file: !44, line: 1085, baseType: !176, size: 64, offset: 1216)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1405, file: !44, line: 1087, baseType: !1441, size: 64, offset: 1280)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !1444)
!1444 = !{!1445, !1449}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1443, file: !44, line: 1012, baseType: !1446, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{null, !1404, !1404}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1443, file: !44, line: 1013, baseType: !1450, size: 64, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{null, !1404}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1405, file: !44, line: 1088, baseType: !1454, size: 64, offset: 1344)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1456)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !1457)
!1457 = !{!1458, !1462, !1466, !1467, !1471, !1475, !1479, !1484}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1456, file: !44, line: 1017, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!1390, !1390}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1456, file: !44, line: 1018, baseType: !1463, size: 64, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{null, !1390}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1456, file: !44, line: 1019, baseType: !1450, size: 64, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1456, file: !44, line: 1020, baseType: !1468, size: 64, offset: 192)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!177, !1404, !177}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1456, file: !44, line: 1021, baseType: !1472, size: 64, offset: 256)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!240, !1404}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1456, file: !44, line: 1022, baseType: !1476, size: 64, offset: 320)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!177, !1404, !177, !253}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1456, file: !44, line: 1023, baseType: !1480, size: 64, offset: 384)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{null, !1404, !1483}
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1456, file: !44, line: 1024, baseType: !1472, size: 64, offset: 448)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1405, file: !44, line: 1097, baseType: !1486, size: 256, offset: 1408)
!1486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1405, file: !44, line: 1089, size: 256, elements: !1487)
!1487 = !{!1488, !1497, !1503}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1486, file: !44, line: 1090, baseType: !1489, size: 256)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1490, line: 10, size: 256, elements: !1491)
!1490 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1491 = !{!1492, !1493, !1496}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1489, file: !1490, line: 11, baseType: !231, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1489, file: !1490, line: 12, baseType: !1494, size: 64, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1490, line: 5, flags: DIFlagFwdDecl)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1489, file: !1490, line: 13, baseType: !250, size: 128, offset: 128)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1486, file: !44, line: 1091, baseType: !1498, size: 64)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1490, line: 17, size: 64, elements: !1499)
!1499 = !{!1500}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1498, file: !1490, line: 18, baseType: !1501, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1490, line: 16, flags: DIFlagFwdDecl)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1486, file: !44, line: 1096, baseType: !1504, size: 192)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1486, file: !44, line: 1092, size: 192, elements: !1505)
!1505 = !{!1506, !1507, !1508}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1504, file: !44, line: 1093, baseType: !250, size: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1504, file: !44, line: 1094, baseType: !177, size: 32, offset: 128)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1504, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1301, file: !44, line: 1843, baseType: !1510, size: 64, offset: 1280)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!1312, !1283, !340, !177, !207, !1315, !177}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1301, file: !44, line: 1844, baseType: !1514, size: 64, offset: 1344)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!176, !1283, !176, !176, !176, !176}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1301, file: !44, line: 1845, baseType: !1518, size: 64, offset: 1408)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!177, !177}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1301, file: !44, line: 1846, baseType: !1401, size: 64, offset: 1472)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1301, file: !44, line: 1847, baseType: !1523, size: 64, offset: 1536)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!1312, !1526, !1283, !1315, !207, !7}
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !901, line: 53, flags: DIFlagFwdDecl)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1301, file: !44, line: 1848, baseType: !1529, size: 64, offset: 1600)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!1312, !1283, !1315, !1526, !207, !7}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1301, file: !44, line: 1849, baseType: !1533, size: 64, offset: 1664)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!177, !1283, !102, !1536, !1483}
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1301, file: !44, line: 1850, baseType: !1538, size: 64, offset: 1728)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!102, !1283, !177, !543, !543}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1301, file: !44, line: 1852, baseType: !1542, size: 64, offset: 1792)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{null, !655, !1283}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1301, file: !44, line: 1856, baseType: !1546, size: 64, offset: 1856)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!1312, !1283, !543, !1283, !543, !207, !7}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1301, file: !44, line: 1858, baseType: !1550, size: 64, offset: 1920)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!543, !1283, !543, !1283, !543, !543, !7}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1301, file: !44, line: 1861, baseType: !1393, size: 64, offset: 1984)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1284, file: !44, line: 929, baseType: !444, offset: 384)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1284, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1284, file: !44, line: 931, baseType: !702, size: 64, offset: 448)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1284, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1284, file: !44, line: 933, baseType: !1559, size: 32, offset: 544)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !174, line: 150, baseType: !7)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1284, file: !44, line: 934, baseType: !698, size: 192, offset: 576)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1284, file: !44, line: 935, baseType: !543, size: 64, offset: 768)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1284, file: !44, line: 936, baseType: !1563, size: 192, offset: 832)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !1564)
!1564 = !{!1565, !1566, !1586, !1587, !1588, !1589}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1563, file: !44, line: 886, baseType: !1426)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1563, file: !44, line: 887, baseType: !1567, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1575, !1576, !1577, !1578}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1568, file: !53, line: 61, baseType: !1000, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1568, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1568, file: !53, line: 63, baseType: !444, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1568, file: !53, line: 65, baseType: !1574, size: 256, offset: 64)
!1574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 256, elements: !232)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1568, file: !53, line: 66, baseType: !577, size: 64, offset: 320)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1568, file: !53, line: 68, baseType: !953, size: 128, offset: 384)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1568, file: !53, line: 69, baseType: !972, size: 128, align: 64, offset: 512)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1568, file: !53, line: 70, baseType: !1579, size: 128, offset: 640)
!1579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1580, size: 128, elements: !1155)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1581)
!1581 = !{!1582, !1583}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1580, file: !53, line: 55, baseType: !177, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1580, file: !53, line: 56, baseType: !1584, size: 64, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1563, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1563, file: !44, line: 889, baseType: !364, size: 32, offset: 96)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1563, file: !44, line: 889, baseType: !364, size: 32, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1563, file: !44, line: 890, baseType: !177, size: 32, offset: 160)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1284, file: !44, line: 937, baseType: !1591, size: 64, offset: 1024)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1594, line: 111, size: 1280, elements: !1595)
!1594 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1595 = !{!1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1615, !1616, !1617, !1618, !1619, !1620, !1729, !1730, !1731, !1732, !1758, !1761, !1769}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1593, file: !1594, line: 112, baseType: !714, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1593, file: !1594, line: 120, baseType: !364, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1593, file: !1594, line: 121, baseType: !372, size: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1593, file: !1594, line: 122, baseType: !364, size: 32, offset: 96)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1593, file: !1594, line: 123, baseType: !372, size: 32, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1593, file: !1594, line: 124, baseType: !364, size: 32, offset: 160)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1593, file: !1594, line: 125, baseType: !372, size: 32, offset: 192)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1593, file: !1594, line: 126, baseType: !364, size: 32, offset: 224)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1593, file: !1594, line: 127, baseType: !372, size: 32, offset: 256)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1593, file: !1594, line: 128, baseType: !7, size: 32, offset: 288)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1593, file: !1594, line: 129, baseType: !1607, size: 64, offset: 320)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1608, line: 26, baseType: !1609)
!1608 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1608, line: 24, size: 64, elements: !1610)
!1610 = !{!1611}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1609, file: !1608, line: 25, baseType: !1612, size: 64)
!1612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 64, elements: !1613)
!1613 = !{!1614}
!1614 = !DISubrange(count: 2)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1593, file: !1594, line: 130, baseType: !1607, size: 64, offset: 384)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1593, file: !1594, line: 131, baseType: !1607, size: 64, offset: 448)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1593, file: !1594, line: 132, baseType: !1607, size: 64, offset: 512)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1593, file: !1594, line: 133, baseType: !1607, size: 64, offset: 576)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1593, file: !1594, line: 135, baseType: !427, size: 8, offset: 640)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1593, file: !1594, line: 137, baseType: !1621, size: 64, offset: 704)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1623, line: 189, size: 1664, elements: !1624)
!1623 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1624 = !{!1625, !1626, !1629, !1634, !1635, !1638, !1639, !1644, !1645, !1646, !1647, !1650, !1651, !1652, !1654, !1655, !1693, !1714}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1622, file: !1623, line: 190, baseType: !1000, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1622, file: !1623, line: 191, baseType: !1627, size: 32, offset: 32)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1623, line: 28, baseType: !1628)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !174, line: 98, baseType: !308)
!1629 = !DIDerivedType(tag: DW_TAG_member, scope: !1622, file: !1623, line: 192, baseType: !1630, size: 192, offset: 64)
!1630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1622, file: !1623, line: 192, size: 192, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1630, file: !1623, line: 193, baseType: !250, size: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1630, file: !1623, line: 194, baseType: !1025, size: 192, align: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1622, file: !1623, line: 199, baseType: !875, size: 256, offset: 256)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1622, file: !1623, line: 200, baseType: !1636, size: 64, offset: 512)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1623, line: 200, flags: DIFlagFwdDecl)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1622, file: !1623, line: 201, baseType: !175, size: 64, offset: 576)
!1639 = !DIDerivedType(tag: DW_TAG_member, scope: !1622, file: !1623, line: 202, baseType: !1640, size: 64, offset: 640)
!1640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1622, file: !1623, line: 202, size: 64, elements: !1641)
!1641 = !{!1642, !1643}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1640, file: !1623, line: 203, baseType: !749, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1640, file: !1623, line: 204, baseType: !749, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1622, file: !1623, line: 206, baseType: !749, size: 64, offset: 704)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1622, file: !1623, line: 207, baseType: !364, size: 32, offset: 768)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1622, file: !1623, line: 208, baseType: !372, size: 32, offset: 800)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1622, file: !1623, line: 209, baseType: !1648, size: 32, offset: 832)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1623, line: 31, baseType: !1649)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !174, line: 104, baseType: !231)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1622, file: !1623, line: 210, baseType: !178, size: 16, offset: 864)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1622, file: !1623, line: 211, baseType: !178, size: 16, offset: 880)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1622, file: !1623, line: 215, baseType: !1653, size: 16, offset: 896)
!1653 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1622, file: !1623, line: 222, baseType: !176, size: 64, offset: 960)
!1655 = !DIDerivedType(tag: DW_TAG_member, scope: !1622, file: !1623, line: 239, baseType: !1656, size: 320, offset: 1024)
!1656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1622, file: !1623, line: 239, size: 320, elements: !1657)
!1657 = !{!1658, !1685}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1656, file: !1623, line: 240, baseType: !1659, size: 320)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1623, line: 108, size: 320, elements: !1660)
!1660 = !{!1661, !1662, !1674, !1677, !1684}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1659, file: !1623, line: 110, baseType: !176, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, scope: !1659, file: !1623, line: 111, baseType: !1663, size: 64, offset: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1659, file: !1623, line: 111, size: 64, elements: !1664)
!1664 = !{!1665, !1673}
!1665 = !DIDerivedType(tag: DW_TAG_member, scope: !1663, file: !1623, line: 112, baseType: !1666, size: 64)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1663, file: !1623, line: 112, size: 64, elements: !1667)
!1667 = !{!1668, !1669}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1666, file: !1623, line: 114, baseType: !323, size: 16)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1666, file: !1623, line: 115, baseType: !1670, size: 48, offset: 16)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 48, elements: !1671)
!1671 = !{!1672}
!1672 = !DISubrange(count: 6)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1663, file: !1623, line: 121, baseType: !176, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1659, file: !1623, line: 123, baseType: !1675, size: 64, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1623, line: 96, flags: DIFlagFwdDecl)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1659, file: !1623, line: 124, baseType: !1678, size: 64, offset: 192)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1623, line: 102, size: 192, elements: !1680)
!1680 = !{!1681, !1682, !1683}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1679, file: !1623, line: 103, baseType: !972, size: 128, align: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1679, file: !1623, line: 104, baseType: !1000, size: 32, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1679, file: !1623, line: 105, baseType: !240, size: 8, offset: 160)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1659, file: !1623, line: 125, baseType: !481, size: 64, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_member, scope: !1656, file: !1623, line: 241, baseType: !1686, size: 320)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1656, file: !1623, line: 241, size: 320, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691, !1692}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1686, file: !1623, line: 242, baseType: !176, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1686, file: !1623, line: 243, baseType: !176, size: 64, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1686, file: !1623, line: 244, baseType: !1675, size: 64, offset: 128)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1686, file: !1623, line: 245, baseType: !1678, size: 64, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1686, file: !1623, line: 246, baseType: !507, size: 64, offset: 256)
!1693 = !DIDerivedType(tag: DW_TAG_member, scope: !1622, file: !1623, line: 254, baseType: !1694, size: 256, offset: 1344)
!1694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1622, file: !1623, line: 254, size: 256, elements: !1695)
!1695 = !{!1696, !1702}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1694, file: !1623, line: 255, baseType: !1697, size: 256)
!1697 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1623, line: 128, size: 256, elements: !1698)
!1698 = !{!1699, !1700}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1697, file: !1623, line: 129, baseType: !175, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1697, file: !1623, line: 130, baseType: !1701, size: 256)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 256, elements: !232)
!1702 = !DIDerivedType(tag: DW_TAG_member, scope: !1694, file: !1623, line: 256, baseType: !1703, size: 256)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1694, file: !1623, line: 256, size: 256, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1703, file: !1623, line: 258, baseType: !250, size: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1703, file: !1623, line: 259, baseType: !1707, size: 128, offset: 128)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1708, line: 22, size: 128, elements: !1709)
!1708 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1709 = !{!1710, !1713}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1707, file: !1708, line: 23, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1708, line: 23, flags: DIFlagFwdDecl)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1707, file: !1708, line: 24, baseType: !176, size: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1622, file: !1623, line: 274, baseType: !1715, size: 64, offset: 1600)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1623, line: 170, size: 192, elements: !1717)
!1717 = !{!1718, !1727, !1728}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1716, file: !1623, line: 171, baseType: !1719, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1623, line: 165, baseType: !1720)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{!177, !1621, !1723, !1725, !1621}
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1697)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1716, file: !1623, line: 172, baseType: !1621, size: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1716, file: !1623, line: 173, baseType: !1675, size: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1593, file: !1594, line: 138, baseType: !1621, size: 64, offset: 768)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1593, file: !1594, line: 139, baseType: !1621, size: 64, offset: 832)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1593, file: !1594, line: 140, baseType: !1621, size: 64, offset: 896)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1593, file: !1594, line: 145, baseType: !1733, size: 64, offset: 960)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1735, line: 13, size: 896, elements: !1736)
!1735 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1734, file: !1735, line: 14, baseType: !1000, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1734, file: !1735, line: 15, baseType: !714, size: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1734, file: !1735, line: 16, baseType: !714, size: 32, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1734, file: !1735, line: 21, baseType: !702, size: 64, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1734, file: !1735, line: 27, baseType: !176, size: 64, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1734, file: !1735, line: 28, baseType: !176, size: 64, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1734, file: !1735, line: 29, baseType: !702, size: 64, offset: 320)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1734, file: !1735, line: 32, baseType: !581, size: 128, offset: 384)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1734, file: !1735, line: 33, baseType: !364, size: 32, offset: 512)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1734, file: !1735, line: 37, baseType: !702, size: 64, offset: 576)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1734, file: !1735, line: 44, baseType: !1748, size: 256, offset: 640)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1749, line: 15, size: 256, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1752, !1753, !1754, !1755, !1756, !1757}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1748, file: !1749, line: 16, baseType: !881)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1748, file: !1749, line: 18, baseType: !177, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1748, file: !1749, line: 19, baseType: !177, size: 32, offset: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1748, file: !1749, line: 20, baseType: !177, size: 32, offset: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1748, file: !1749, line: 21, baseType: !177, size: 32, offset: 96)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1748, file: !1749, line: 22, baseType: !176, size: 64, offset: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1748, file: !1749, line: 23, baseType: !176, size: 64, offset: 192)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1593, file: !1594, line: 146, baseType: !1759, size: 64, offset: 1024)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !365, line: 18, flags: DIFlagFwdDecl)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1593, file: !1594, line: 147, baseType: !1762, size: 64, offset: 1088)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1594, line: 25, size: 64, elements: !1764)
!1764 = !{!1765, !1766, !1767}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1763, file: !1594, line: 26, baseType: !714, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1763, file: !1594, line: 27, baseType: !177, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1763, file: !1594, line: 28, baseType: !1768, offset: 64)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, elements: !332)
!1769 = !DIDerivedType(tag: DW_TAG_member, scope: !1593, file: !1594, line: 149, baseType: !1770, size: 128, offset: 1152)
!1770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1593, file: !1594, line: 149, size: 128, elements: !1771)
!1771 = !{!1772, !1773}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1770, file: !1594, line: 150, baseType: !177, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1770, file: !1594, line: 151, baseType: !972, size: 128, align: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1284, file: !44, line: 938, baseType: !1775, size: 256, offset: 1088)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1781, !1782}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1775, file: !44, line: 897, baseType: !176, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1775, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !1775, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1775, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !1775, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !1775, file: !44, line: 904, baseType: !543, size: 64, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1284, file: !44, line: 940, baseType: !179, size: 64, offset: 1344)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1284, file: !44, line: 945, baseType: !175, size: 64, offset: 1408)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1284, file: !44, line: 949, baseType: !250, size: 128, offset: 1472)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1284, file: !44, line: 950, baseType: !250, size: 128, offset: 1600)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1284, file: !44, line: 952, baseType: !353, size: 64, offset: 1728)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1284, file: !44, line: 953, baseType: !1789, size: 32, offset: 1792)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1790, line: 8, baseType: !231)
!1790 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1284, file: !44, line: 954, baseType: !1789, size: 32, offset: 1824)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1170, file: !342, line: 362, baseType: !175, size: 64, offset: 1344)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1170, file: !342, line: 365, baseType: !702, size: 64, offset: 1408)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1170, file: !342, line: 373, baseType: !1795, offset: 1472)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !342, line: 296, elements: !458)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1166, file: !342, line: 391, baseType: !1126, size: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1166, file: !342, line: 392, baseType: !179, size: 64, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1166, file: !342, line: 394, baseType: !1514, size: 64, offset: 192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1166, file: !342, line: 398, baseType: !176, size: 64, offset: 256)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1166, file: !342, line: 399, baseType: !176, size: 64, offset: 320)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1166, file: !342, line: 405, baseType: !176, size: 64, offset: 384)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1166, file: !342, line: 406, baseType: !176, size: 64, offset: 448)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1166, file: !342, line: 407, baseType: !1804, size: 64, offset: 512)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !657, line: 286, baseType: !1806)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 286, size: 64, elements: !1807)
!1807 = !{!1808}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1806, file: !657, line: 286, baseType: !1809, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1185, line: 18, baseType: !176)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1166, file: !342, line: 416, baseType: !714, size: 32, offset: 576)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1166, file: !342, line: 428, baseType: !714, size: 32, offset: 608)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1166, file: !342, line: 437, baseType: !714, size: 32, offset: 640)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1166, file: !342, line: 447, baseType: !714, size: 32, offset: 672)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1166, file: !342, line: 450, baseType: !702, size: 64, offset: 704)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1166, file: !342, line: 452, baseType: !177, size: 32, offset: 768)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1166, file: !342, line: 454, baseType: !444, offset: 800)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1166, file: !342, line: 457, baseType: !875, size: 256, offset: 832)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1166, file: !342, line: 459, baseType: !250, size: 128, offset: 1088)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1166, file: !342, line: 466, baseType: !176, size: 64, offset: 1216)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1166, file: !342, line: 467, baseType: !176, size: 64, offset: 1280)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1166, file: !342, line: 469, baseType: !176, size: 64, offset: 1344)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1166, file: !342, line: 470, baseType: !176, size: 64, offset: 1408)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1166, file: !342, line: 471, baseType: !704, size: 64, offset: 1472)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1166, file: !342, line: 472, baseType: !176, size: 64, offset: 1536)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1166, file: !342, line: 473, baseType: !176, size: 64, offset: 1600)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1166, file: !342, line: 474, baseType: !176, size: 64, offset: 1664)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1166, file: !342, line: 475, baseType: !176, size: 64, offset: 1728)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1166, file: !342, line: 477, baseType: !444, offset: 1792)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1166, file: !342, line: 478, baseType: !176, size: 64, offset: 1792)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1166, file: !342, line: 478, baseType: !176, size: 64, offset: 1856)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1166, file: !342, line: 478, baseType: !176, size: 64, offset: 1920)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1166, file: !342, line: 478, baseType: !176, size: 64, offset: 1984)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1166, file: !342, line: 479, baseType: !176, size: 64, offset: 2048)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1166, file: !342, line: 479, baseType: !176, size: 64, offset: 2112)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1166, file: !342, line: 479, baseType: !176, size: 64, offset: 2176)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1166, file: !342, line: 480, baseType: !176, size: 64, offset: 2240)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1166, file: !342, line: 480, baseType: !176, size: 64, offset: 2304)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1166, file: !342, line: 480, baseType: !176, size: 64, offset: 2368)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1166, file: !342, line: 480, baseType: !176, size: 64, offset: 2432)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1166, file: !342, line: 482, baseType: !1841, size: 2816, offset: 2496)
!1841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 2816, elements: !1842)
!1842 = !{!1843}
!1843 = !DISubrange(count: 44)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1166, file: !342, line: 488, baseType: !1845, size: 256, offset: 5312)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1846, line: 60, size: 256, elements: !1847)
!1846 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1847 = !{!1848}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1845, file: !1846, line: 61, baseType: !1849, size: 256)
!1849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !702, size: 256, elements: !232)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1166, file: !342, line: 490, baseType: !1851, size: 64, offset: 5568)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !342, line: 490, flags: DIFlagFwdDecl)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1166, file: !342, line: 493, baseType: !1854, size: 896, offset: 5632)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1855, line: 53, baseType: !1856)
!1855 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1855, line: 13, size: 896, elements: !1857)
!1857 = !{!1858, !1859, !1860, !1861, !1864, !1865, !1866, !1867, !1887, !1888, !1889}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1856, file: !1855, line: 18, baseType: !179, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1856, file: !1855, line: 28, baseType: !704, size: 64, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1856, file: !1855, line: 31, baseType: !875, size: 256, offset: 128)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1856, file: !1855, line: 32, baseType: !1862, size: 64, offset: 384)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1855, line: 32, flags: DIFlagFwdDecl)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1856, file: !1855, line: 37, baseType: !178, size: 16, offset: 448)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1856, file: !1855, line: 40, baseType: !698, size: 192, offset: 512)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1856, file: !1855, line: 41, baseType: !175, size: 64, offset: 704)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1856, file: !1855, line: 42, baseType: !1868, size: 64, offset: 768)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1870)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1871, line: 13, size: 896, elements: !1872)
!1871 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1872 = !{!1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1870, file: !1871, line: 14, baseType: !175, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1870, file: !1871, line: 15, baseType: !176, size: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1870, file: !1871, line: 17, baseType: !176, size: 64, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1870, file: !1871, line: 17, baseType: !176, size: 64, offset: 192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1870, file: !1871, line: 19, baseType: !102, size: 64, offset: 256)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1870, file: !1871, line: 21, baseType: !102, size: 64, offset: 320)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1870, file: !1871, line: 22, baseType: !102, size: 64, offset: 384)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1870, file: !1871, line: 23, baseType: !102, size: 64, offset: 448)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1870, file: !1871, line: 24, baseType: !102, size: 64, offset: 512)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1870, file: !1871, line: 25, baseType: !102, size: 64, offset: 576)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1870, file: !1871, line: 26, baseType: !102, size: 64, offset: 640)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1870, file: !1871, line: 27, baseType: !102, size: 64, offset: 704)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1870, file: !1871, line: 28, baseType: !102, size: 64, offset: 768)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1870, file: !1871, line: 29, baseType: !102, size: 64, offset: 832)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1856, file: !1855, line: 44, baseType: !714, size: 32, offset: 832)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1856, file: !1855, line: 50, baseType: !323, size: 16, offset: 864)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1856, file: !1855, line: 51, baseType: !1890, size: 16, offset: 880)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !180, line: 18, baseType: !1891)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !182, line: 23, baseType: !1653)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1166, file: !342, line: 495, baseType: !176, size: 64, offset: 6528)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1166, file: !342, line: 497, baseType: !1894, size: 64, offset: 6592)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !342, line: 381, size: 384, elements: !1896)
!1896 = !{!1897, !1898, !1904}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1895, file: !342, line: 382, baseType: !714, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1895, file: !342, line: 383, baseType: !1899, size: 128, offset: 64)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !342, line: 376, size: 128, elements: !1900)
!1900 = !{!1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1899, file: !342, line: 377, baseType: !987, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1899, file: !342, line: 378, baseType: !1903, size: 64, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1895, file: !342, line: 384, baseType: !1905, size: 192, offset: 192)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1906, line: 26, size: 192, elements: !1907)
!1906 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1907 = !{!1908, !1909}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1905, file: !1906, line: 27, baseType: !7, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1905, file: !1906, line: 28, baseType: !1910, size: 128, offset: 64)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1911, line: 43, size: 128, elements: !1912)
!1911 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1912 = !{!1913, !1914}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1910, file: !1911, line: 44, baseType: !881)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1910, file: !1911, line: 45, baseType: !250, size: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1166, file: !342, line: 500, baseType: !444, offset: 6656)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1166, file: !342, line: 501, baseType: !1917, size: 64, offset: 6656)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !342, line: 387, flags: DIFlagFwdDecl)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1166, file: !342, line: 516, baseType: !1759, size: 64, offset: 6720)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1166, file: !342, line: 519, baseType: !1283, size: 64, offset: 6784)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1166, file: !342, line: 521, baseType: !1922, size: 64, offset: 6848)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !342, line: 521, flags: DIFlagFwdDecl)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1166, file: !342, line: 545, baseType: !714, size: 32, offset: 6912)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1166, file: !342, line: 548, baseType: !240, size: 8, offset: 6944)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1166, file: !342, line: 550, baseType: !1927, offset: 6952)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !1928, line: 142, elements: !458)
!1928 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1166, file: !342, line: 554, baseType: !1930, size: 256, offset: 6976)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !101, line: 102, size: 256, elements: !1931)
!1931 = !{!1932, !1933, !1934}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1930, file: !101, line: 103, baseType: !702, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1930, file: !101, line: 104, baseType: !250, size: 128, offset: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1930, file: !101, line: 105, baseType: !1935, size: 64, offset: 192)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !101, line: 21, baseType: !1936)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{null, !1939}
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1166, file: !342, line: 557, baseType: !231, size: 32, offset: 7232)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1163, file: !342, line: 565, baseType: !1942, offset: 7296)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, elements: !1943)
!1943 = !{!1944}
!1944 = !DISubrange(count: -1)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !988, file: !901, line: 758, baseType: !1162, size: 64, offset: 3968)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !988, file: !901, line: 761, baseType: !1947, size: 320, offset: 4032)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1846, line: 34, size: 320, elements: !1948)
!1948 = !{!1949, !1950}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1947, file: !1846, line: 35, baseType: !179, size: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1947, file: !1846, line: 36, baseType: !1951, size: 256, offset: 64)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1169, size: 256, elements: !232)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !988, file: !901, line: 766, baseType: !177, size: 32, offset: 4352)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !988, file: !901, line: 767, baseType: !177, size: 32, offset: 4384)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !988, file: !901, line: 768, baseType: !177, size: 32, offset: 4416)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !988, file: !901, line: 770, baseType: !177, size: 32, offset: 4448)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !988, file: !901, line: 772, baseType: !176, size: 64, offset: 4480)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !988, file: !901, line: 775, baseType: !7, size: 32, offset: 4544)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !988, file: !901, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !988, file: !901, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !988, file: !901, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !988, file: !901, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !988, file: !901, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !988, file: !901, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !988, file: !901, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !988, file: !901, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !988, file: !901, line: 831, baseType: !176, size: 64, offset: 4672)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !988, file: !901, line: 833, baseType: !1968, size: 384, offset: 4736)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1969)
!1969 = !{!1970, !1975}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1968, file: !25, line: 26, baseType: !1971, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!102, !1974}
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, scope: !1968, file: !25, line: 27, baseType: !1976, size: 320, offset: 64)
!1976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1968, file: !25, line: 27, size: 320, elements: !1977)
!1977 = !{!1978, !1988, !2013}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1976, file: !25, line: 36, baseType: !1979, size: 320)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1976, file: !25, line: 29, size: 320, elements: !1980)
!1980 = !{!1981, !1983, !1984, !1985, !1986, !1987}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1979, file: !25, line: 30, baseType: !1982, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1979, file: !25, line: 31, baseType: !231, size: 32, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1979, file: !25, line: 32, baseType: !231, size: 32, offset: 96)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1979, file: !25, line: 33, baseType: !231, size: 32, offset: 128)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1979, file: !25, line: 34, baseType: !179, size: 64, offset: 192)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1979, file: !25, line: 35, baseType: !1982, size: 64, offset: 256)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1976, file: !25, line: 46, baseType: !1989, size: 192)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1976, file: !25, line: 38, size: 192, elements: !1990)
!1990 = !{!1991, !1992, !1993, !2012}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1989, file: !25, line: 39, baseType: !1111, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1989, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, scope: !1989, file: !25, line: 41, baseType: !1994, size: 64, offset: 64)
!1994 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1989, file: !25, line: 41, size: 64, elements: !1995)
!1995 = !{!1996, !2004}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1994, file: !25, line: 42, baseType: !1997, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1999, line: 7, size: 128, elements: !2000)
!1999 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2000 = !{!2001, !2003}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1998, file: !1999, line: 8, baseType: !2002, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !209, line: 93, baseType: !545)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1998, file: !1999, line: 9, baseType: !545, size: 64, offset: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1994, file: !25, line: 43, baseType: !2005, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2007, line: 7, size: 64, elements: !2008)
!2007 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2008 = !{!2009, !2011}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2006, file: !2007, line: 8, baseType: !2010, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2007, line: 5, baseType: !308)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2006, file: !2007, line: 9, baseType: !308, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1989, file: !25, line: 45, baseType: !179, size: 64, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1976, file: !25, line: 54, baseType: !2014, size: 256)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1976, file: !25, line: 48, size: 256, elements: !2015)
!2015 = !{!2016, !2019, !2020, !2021, !2022}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2014, file: !25, line: 49, baseType: !2017, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2014, file: !25, line: 50, baseType: !177, size: 32, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2014, file: !25, line: 51, baseType: !177, size: 32, offset: 96)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2014, file: !25, line: 52, baseType: !176, size: 64, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2014, file: !25, line: 53, baseType: !176, size: 64, offset: 192)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !988, file: !901, line: 835, baseType: !2024, size: 32, offset: 5120)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !174, line: 22, baseType: !2025)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !209, line: 28, baseType: !177)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !988, file: !901, line: 836, baseType: !2024, size: 32, offset: 5152)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !988, file: !901, line: 840, baseType: !176, size: 64, offset: 5184)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !988, file: !901, line: 849, baseType: !987, size: 64, offset: 5248)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !988, file: !901, line: 852, baseType: !987, size: 64, offset: 5312)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !988, file: !901, line: 857, baseType: !250, size: 128, offset: 5376)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !988, file: !901, line: 858, baseType: !250, size: 128, offset: 5504)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !988, file: !901, line: 859, baseType: !987, size: 64, offset: 5632)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !988, file: !901, line: 867, baseType: !250, size: 128, offset: 5696)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !988, file: !901, line: 868, baseType: !250, size: 128, offset: 5824)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !988, file: !901, line: 871, baseType: !1567, size: 64, offset: 5952)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !988, file: !901, line: 872, baseType: !2037, size: 512, offset: 6016)
!2037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 512, elements: !232)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !988, file: !901, line: 873, baseType: !250, size: 128, offset: 6528)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !988, file: !901, line: 874, baseType: !250, size: 128, offset: 6656)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !988, file: !901, line: 876, baseType: !2041, size: 64, offset: 6784)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !988, file: !901, line: 879, baseType: !649, size: 64, offset: 6848)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !988, file: !901, line: 882, baseType: !649, size: 64, offset: 6912)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !988, file: !901, line: 884, baseType: !179, size: 64, offset: 6976)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !988, file: !901, line: 885, baseType: !179, size: 64, offset: 7040)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !988, file: !901, line: 890, baseType: !179, size: 64, offset: 7104)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !988, file: !901, line: 891, baseType: !2048, size: 128, offset: 7168)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !901, line: 242, size: 128, elements: !2049)
!2049 = !{!2050, !2051, !2052}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2048, file: !901, line: 244, baseType: !179, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2048, file: !901, line: 245, baseType: !179, size: 64, offset: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2048, file: !901, line: 246, baseType: !881, offset: 128)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !988, file: !901, line: 900, baseType: !176, size: 64, offset: 7296)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !988, file: !901, line: 901, baseType: !176, size: 64, offset: 7360)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !988, file: !901, line: 904, baseType: !179, size: 64, offset: 7424)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !988, file: !901, line: 907, baseType: !179, size: 64, offset: 7488)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !988, file: !901, line: 910, baseType: !176, size: 64, offset: 7552)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !988, file: !901, line: 911, baseType: !176, size: 64, offset: 7616)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !988, file: !901, line: 914, baseType: !2060, size: 640, offset: 7680)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2061, line: 123, size: 640, elements: !2062)
!2061 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2062 = !{!2063, !2069, !2070}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2060, file: !2061, line: 124, baseType: !2064, size: 576)
!2064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2065, size: 576, elements: !593)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2061, line: 108, size: 192, elements: !2066)
!2066 = !{!2067, !2068}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2065, file: !2061, line: 109, baseType: !179, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2065, file: !2061, line: 110, baseType: !1120, size: 128, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2060, file: !2061, line: 125, baseType: !7, size: 32, offset: 576)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2060, file: !2061, line: 126, baseType: !7, size: 32, offset: 608)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !988, file: !901, line: 917, baseType: !2072, size: 192, offset: 8320)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2061, line: 134, size: 192, elements: !2073)
!2073 = !{!2074, !2075}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2072, file: !2061, line: 135, baseType: !972, size: 128, align: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2072, file: !2061, line: 136, baseType: !7, size: 32, offset: 128)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !988, file: !901, line: 923, baseType: !1591, size: 64, offset: 8512)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !988, file: !901, line: 926, baseType: !1591, size: 64, offset: 8576)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !988, file: !901, line: 929, baseType: !1591, size: 64, offset: 8640)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !988, file: !901, line: 933, baseType: !1621, size: 64, offset: 8704)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !988, file: !901, line: 943, baseType: !2081, size: 128, offset: 8768)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 128, elements: !2082)
!2082 = !{!2083}
!2083 = !DISubrange(count: 16)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !988, file: !901, line: 945, baseType: !2085, size: 64, offset: 8896)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !901, line: 49, flags: DIFlagFwdDecl)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !988, file: !901, line: 956, baseType: !2088, size: 64, offset: 8960)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !901, line: 45, flags: DIFlagFwdDecl)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !988, file: !901, line: 959, baseType: !2091, size: 64, offset: 9024)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !901, line: 959, flags: DIFlagFwdDecl)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !988, file: !901, line: 962, baseType: !2094, size: 64, offset: 9088)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !901, line: 66, flags: DIFlagFwdDecl)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !988, file: !901, line: 966, baseType: !2097, size: 64, offset: 9152)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !901, line: 50, flags: DIFlagFwdDecl)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !988, file: !901, line: 969, baseType: !2100, size: 64, offset: 9216)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2102, line: 82, size: 7296, elements: !2103)
!2102 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2103 = !{!2104, !2105, !2106, !2107, !2108, !2109, !2110, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2139, !2148, !2149, !2151, !2152, !2153, !2156, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2186, !2187, !2194, !2195, !2196, !2197, !2198, !2199}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2101, file: !2102, line: 83, baseType: !1000, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2101, file: !2102, line: 84, baseType: !714, size: 32, offset: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2101, file: !2102, line: 85, baseType: !177, size: 32, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2101, file: !2102, line: 86, baseType: !250, size: 128, offset: 128)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2101, file: !2102, line: 88, baseType: !953, size: 128, offset: 256)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2101, file: !2102, line: 91, baseType: !987, size: 64, offset: 384)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2101, file: !2102, line: 94, baseType: !2111, size: 192, offset: 448)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2112, line: 30, size: 192, elements: !2113)
!2112 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2113 = !{!2114, !2115}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2111, file: !2112, line: 31, baseType: !250, size: 128)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2111, file: !2112, line: 32, baseType: !2116, size: 64, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2117, line: 25, baseType: !2118)
!2117 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2117, line: 23, size: 64, elements: !2119)
!2119 = !{!2120}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2118, file: !2117, line: 24, baseType: !1154, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2101, file: !2102, line: 97, baseType: !577, size: 64, offset: 640)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2101, file: !2102, line: 100, baseType: !177, size: 32, offset: 704)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2101, file: !2102, line: 106, baseType: !177, size: 32, offset: 736)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2101, file: !2102, line: 107, baseType: !987, size: 64, offset: 768)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2101, file: !2102, line: 110, baseType: !177, size: 32, offset: 832)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2101, file: !2102, line: 111, baseType: !7, size: 32, offset: 864)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2101, file: !2102, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2101, file: !2102, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2101, file: !2102, line: 128, baseType: !177, size: 32, offset: 928)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2101, file: !2102, line: 129, baseType: !250, size: 128, offset: 960)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2101, file: !2102, line: 132, baseType: !1069, size: 512, offset: 1088)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2101, file: !2102, line: 133, baseType: !1077, size: 64, offset: 1600)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2101, file: !2102, line: 140, baseType: !2134, size: 256, offset: 1664)
!2134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2135, size: 256, elements: !1613)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2102, line: 38, size: 128, elements: !2136)
!2136 = !{!2137, !2138}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2135, file: !2102, line: 39, baseType: !179, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2135, file: !2102, line: 40, baseType: !179, size: 64, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2101, file: !2102, line: 146, baseType: !2140, size: 192, offset: 1920)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2102, line: 66, size: 192, elements: !2141)
!2141 = !{!2142}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2140, file: !2102, line: 67, baseType: !2143, size: 192)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2102, line: 47, size: 192, elements: !2144)
!2144 = !{!2145, !2146, !2147}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2143, file: !2102, line: 48, baseType: !704, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2143, file: !2102, line: 49, baseType: !704, size: 64, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2143, file: !2102, line: 50, baseType: !704, size: 64, offset: 128)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2101, file: !2102, line: 150, baseType: !2060, size: 640, offset: 2112)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2101, file: !2102, line: 153, baseType: !2150, size: 256, offset: 2752)
!2150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1567, size: 256, elements: !232)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2101, file: !2102, line: 159, baseType: !1567, size: 64, offset: 3008)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2101, file: !2102, line: 162, baseType: !177, size: 32, offset: 3072)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2101, file: !2102, line: 164, baseType: !2154, size: 64, offset: 3136)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2102, line: 164, flags: DIFlagFwdDecl)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2101, file: !2102, line: 175, baseType: !2157, size: 32, offset: 3200)
!2157 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !395, line: 805, baseType: !2158)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !395, line: 798, size: 32, elements: !2159)
!2159 = !{!2160, !2161}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2158, file: !395, line: 803, baseType: !394, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2158, file: !395, line: 804, baseType: !444, offset: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2101, file: !2102, line: 176, baseType: !179, size: 64, offset: 3264)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2101, file: !2102, line: 176, baseType: !179, size: 64, offset: 3328)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2101, file: !2102, line: 176, baseType: !179, size: 64, offset: 3392)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2101, file: !2102, line: 176, baseType: !179, size: 64, offset: 3456)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2101, file: !2102, line: 177, baseType: !179, size: 64, offset: 3520)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2101, file: !2102, line: 178, baseType: !179, size: 64, offset: 3584)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2101, file: !2102, line: 179, baseType: !2048, size: 128, offset: 3648)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2101, file: !2102, line: 180, baseType: !176, size: 64, offset: 3776)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2101, file: !2102, line: 180, baseType: !176, size: 64, offset: 3840)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2101, file: !2102, line: 180, baseType: !176, size: 64, offset: 3904)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2101, file: !2102, line: 180, baseType: !176, size: 64, offset: 3968)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2101, file: !2102, line: 181, baseType: !176, size: 64, offset: 4032)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2101, file: !2102, line: 181, baseType: !176, size: 64, offset: 4096)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2101, file: !2102, line: 181, baseType: !176, size: 64, offset: 4160)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2101, file: !2102, line: 181, baseType: !176, size: 64, offset: 4224)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2101, file: !2102, line: 182, baseType: !176, size: 64, offset: 4288)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2101, file: !2102, line: 182, baseType: !176, size: 64, offset: 4352)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2101, file: !2102, line: 182, baseType: !176, size: 64, offset: 4416)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2101, file: !2102, line: 182, baseType: !176, size: 64, offset: 4480)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2101, file: !2102, line: 183, baseType: !176, size: 64, offset: 4544)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2101, file: !2102, line: 183, baseType: !176, size: 64, offset: 4608)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2101, file: !2102, line: 184, baseType: !2184, offset: 4672)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2185, line: 12, elements: !458)
!2185 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2101, file: !2102, line: 192, baseType: !183, size: 64, offset: 4672)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2101, file: !2102, line: 203, baseType: !2188, size: 2048, offset: 4736)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2189, size: 2048, elements: !2082)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2190, line: 43, size: 128, elements: !2191)
!2190 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2191 = !{!2192, !2193}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2189, file: !2190, line: 44, baseType: !210, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2189, file: !2190, line: 45, baseType: !210, size: 64, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2101, file: !2102, line: 220, baseType: !240, size: 8, offset: 6784)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2101, file: !2102, line: 221, baseType: !1653, size: 16, offset: 6800)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2101, file: !2102, line: 222, baseType: !1653, size: 16, offset: 6816)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2101, file: !2102, line: 224, baseType: !1162, size: 64, offset: 6848)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2101, file: !2102, line: 227, baseType: !698, size: 192, offset: 6912)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2101, file: !2102, line: 233, baseType: !698, size: 192, offset: 7104)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !988, file: !901, line: 970, baseType: !2201, size: 64, offset: 9280)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2102, line: 20, size: 16576, elements: !2203)
!2203 = !{!2204, !2205, !2206, !2207}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2202, file: !2102, line: 21, baseType: !444)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2202, file: !2102, line: 22, baseType: !1000, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2202, file: !2102, line: 23, baseType: !953, size: 128, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2202, file: !2102, line: 24, baseType: !2208, size: 16384, offset: 192)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2209, size: 16384, elements: !2229)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2112, line: 49, size: 256, elements: !2210)
!2210 = !{!2211}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2209, file: !2112, line: 50, baseType: !2212, size: 256)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2112, line: 35, size: 256, elements: !2213)
!2213 = !{!2214, !2221, !2222, !2228}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2212, file: !2112, line: 37, baseType: !2215, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2216, line: 19, baseType: !2217)
!2216 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2216, line: 18, baseType: !2219)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{null, !177}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2212, file: !2112, line: 38, baseType: !176, size: 64, offset: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2212, file: !2112, line: 44, baseType: !2223, size: 64, offset: 128)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2216, line: 22, baseType: !2224)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2216, line: 21, baseType: !2226)
!2226 = !DISubroutineType(types: !2227)
!2227 = !{null}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2212, file: !2112, line: 46, baseType: !2116, size: 64, offset: 192)
!2229 = !{!2230}
!2230 = !DISubrange(count: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !988, file: !901, line: 971, baseType: !2116, size: 64, offset: 9344)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !988, file: !901, line: 972, baseType: !2116, size: 64, offset: 9408)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !988, file: !901, line: 974, baseType: !2116, size: 64, offset: 9472)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !988, file: !901, line: 975, baseType: !2111, size: 192, offset: 9536)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !988, file: !901, line: 976, baseType: !176, size: 64, offset: 9728)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !988, file: !901, line: 977, baseType: !207, size: 64, offset: 9792)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !988, file: !901, line: 978, baseType: !7, size: 32, offset: 9856)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !988, file: !901, line: 980, baseType: !975, size: 64, offset: 9920)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !988, file: !901, line: 989, baseType: !2240, size: 128, offset: 9984)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2241, line: 35, size: 128, elements: !2242)
!2241 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2242 = !{!2243, !2244, !2245}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2240, file: !2241, line: 36, baseType: !177, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2240, file: !2241, line: 37, baseType: !714, size: 32, offset: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2240, file: !2241, line: 38, baseType: !2246, size: 64, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2241, line: 23, flags: DIFlagFwdDecl)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !988, file: !901, line: 992, baseType: !179, size: 64, offset: 10112)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !988, file: !901, line: 993, baseType: !179, size: 64, offset: 10176)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !988, file: !901, line: 996, baseType: !444, offset: 10240)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !988, file: !901, line: 999, baseType: !881, offset: 10240)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !988, file: !901, line: 1001, baseType: !2253, size: 64, offset: 10240)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !901, line: 636, size: 64, elements: !2254)
!2254 = !{!2255}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2253, file: !901, line: 637, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !988, file: !901, line: 1005, baseType: !1123, size: 128, offset: 10304)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !988, file: !901, line: 1007, baseType: !987, size: 64, offset: 10432)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !988, file: !901, line: 1009, baseType: !2260, size: 64, offset: 10496)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !901, line: 1009, flags: DIFlagFwdDecl)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !988, file: !901, line: 1043, baseType: !175, size: 64, offset: 10560)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !988, file: !901, line: 1046, baseType: !2264, size: 64, offset: 10624)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !901, line: 41, flags: DIFlagFwdDecl)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !988, file: !901, line: 1050, baseType: !2267, size: 64, offset: 10688)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !901, line: 42, flags: DIFlagFwdDecl)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !988, file: !901, line: 1054, baseType: !2270, size: 64, offset: 10752)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !901, line: 55, flags: DIFlagFwdDecl)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !988, file: !901, line: 1056, baseType: !899, size: 64, offset: 10816)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !988, file: !901, line: 1058, baseType: !2274, size: 64, offset: 10880)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2276, line: 99, size: 704, elements: !2277)
!2276 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2277 = !{!2278, !2279, !2280, !2281, !2282, !2283, !2290, !2311, !2312}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2275, file: !2276, line: 100, baseType: !702, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2275, file: !2276, line: 101, baseType: !714, size: 32, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2275, file: !2276, line: 102, baseType: !714, size: 32, offset: 96)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2275, file: !2276, line: 105, baseType: !444, offset: 128)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2275, file: !2276, line: 107, baseType: !178, size: 16, offset: 128)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2275, file: !2276, line: 109, baseType: !2284, size: 128, offset: 192)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2285, line: 292, size: 128, elements: !2286)
!2285 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2286 = !{!2287, !2288, !2289}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2284, file: !2285, line: 293, baseType: !444)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2284, file: !2285, line: 295, baseType: !173, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2284, file: !2285, line: 296, baseType: !175, size: 64, offset: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2275, file: !2276, line: 110, baseType: !2291, size: 64, offset: 320)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2276, line: 73, size: 448, elements: !2293)
!2293 = !{!2294, !2297, !2298, !2305, !2310}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2292, file: !2276, line: 74, baseType: !2295, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2276, line: 74, flags: DIFlagFwdDecl)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2292, file: !2276, line: 75, baseType: !2274, size: 64, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, scope: !2292, file: !2276, line: 83, baseType: !2299, size: 128, offset: 128)
!2299 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2292, file: !2276, line: 83, size: 128, elements: !2300)
!2300 = !{!2301, !2302}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2299, file: !2276, line: 84, baseType: !250, size: 128)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2299, file: !2276, line: 85, baseType: !2303, size: 64)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !342, line: 117, flags: DIFlagFwdDecl)
!2305 = !DIDerivedType(tag: DW_TAG_member, scope: !2292, file: !2276, line: 87, baseType: !2306, size: 128, offset: 256)
!2306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2292, file: !2276, line: 87, size: 128, elements: !2307)
!2307 = !{!2308, !2309}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2306, file: !2276, line: 88, baseType: !581, size: 128)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2306, file: !2276, line: 89, baseType: !972, size: 128, align: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2292, file: !2276, line: 92, baseType: !7, size: 32, offset: 384)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2275, file: !2276, line: 111, baseType: !577, size: 64, offset: 384)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2275, file: !2276, line: 113, baseType: !1930, size: 256, offset: 448)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !988, file: !901, line: 1061, baseType: !2314, size: 64, offset: 10944)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !901, line: 43, flags: DIFlagFwdDecl)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !988, file: !901, line: 1064, baseType: !176, size: 64, offset: 11008)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !988, file: !901, line: 1065, baseType: !2318, size: 64, offset: 11072)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2112, line: 14, baseType: !2320)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2112, line: 12, size: 384, elements: !2321)
!2321 = !{!2322}
!2322 = !DIDerivedType(tag: DW_TAG_member, scope: !2320, file: !2112, line: 13, baseType: !2323, size: 384)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2320, file: !2112, line: 13, size: 384, elements: !2324)
!2324 = !{!2325, !2326, !2327, !2328}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2323, file: !2112, line: 13, baseType: !177, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2323, file: !2112, line: 13, baseType: !177, size: 32, offset: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2323, file: !2112, line: 13, baseType: !177, size: 32, offset: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2323, file: !2112, line: 13, baseType: !2329, size: 256, offset: 128)
!2329 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2330, line: 32, size: 256, elements: !2331)
!2330 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2331 = !{!2332, !2337, !2350, !2356, !2365, !2385, !2390}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2329, file: !2330, line: 37, baseType: !2333, size: 64)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2329, file: !2330, line: 34, size: 64, elements: !2334)
!2334 = !{!2335, !2336}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2333, file: !2330, line: 35, baseType: !2025, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2333, file: !2330, line: 36, baseType: !370, size: 32, offset: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2329, file: !2330, line: 45, baseType: !2338, size: 192)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2329, file: !2330, line: 40, size: 192, elements: !2339)
!2339 = !{!2340, !2342, !2343, !2349}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2338, file: !2330, line: 41, baseType: !2341, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !209, line: 95, baseType: !177)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2338, file: !2330, line: 42, baseType: !177, size: 32, offset: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2338, file: !2330, line: 43, baseType: !2344, size: 64, offset: 64)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2330, line: 11, baseType: !2345)
!2345 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2330, line: 8, size: 64, elements: !2346)
!2346 = !{!2347, !2348}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2345, file: !2330, line: 9, baseType: !177, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2345, file: !2330, line: 10, baseType: !175, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2338, file: !2330, line: 44, baseType: !177, size: 32, offset: 128)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2329, file: !2330, line: 52, baseType: !2351, size: 128)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2329, file: !2330, line: 48, size: 128, elements: !2352)
!2352 = !{!2353, !2354, !2355}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2351, file: !2330, line: 49, baseType: !2025, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2351, file: !2330, line: 50, baseType: !370, size: 32, offset: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2351, file: !2330, line: 51, baseType: !2344, size: 64, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2329, file: !2330, line: 61, baseType: !2357, size: 256)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2329, file: !2330, line: 55, size: 256, elements: !2358)
!2358 = !{!2359, !2360, !2361, !2362, !2364}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2357, file: !2330, line: 56, baseType: !2025, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2357, file: !2330, line: 57, baseType: !370, size: 32, offset: 32)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2357, file: !2330, line: 58, baseType: !177, size: 32, offset: 64)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2357, file: !2330, line: 59, baseType: !2363, size: 64, offset: 128)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !209, line: 94, baseType: !1314)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2357, file: !2330, line: 60, baseType: !2363, size: 64, offset: 192)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2329, file: !2330, line: 95, baseType: !2366, size: 256)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2329, file: !2330, line: 64, size: 256, elements: !2367)
!2367 = !{!2368, !2369}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2366, file: !2330, line: 65, baseType: !175, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !2330, line: 77, baseType: !2370, size: 192, offset: 64)
!2370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2366, file: !2330, line: 77, size: 192, elements: !2371)
!2371 = !{!2372, !2373, !2380}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2370, file: !2330, line: 82, baseType: !1653, size: 16)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2370, file: !2330, line: 88, baseType: !2374, size: 192)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2370, file: !2330, line: 84, size: 192, elements: !2375)
!2375 = !{!2376, !2378, !2379}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2374, file: !2330, line: 85, baseType: !2377, size: 64)
!2377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 64, elements: !1107)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2374, file: !2330, line: 86, baseType: !175, size: 64, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2374, file: !2330, line: 87, baseType: !175, size: 64, offset: 128)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2370, file: !2330, line: 93, baseType: !2381, size: 96)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2370, file: !2330, line: 90, size: 96, elements: !2382)
!2382 = !{!2383, !2384}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2381, file: !2330, line: 91, baseType: !2377, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2381, file: !2330, line: 92, baseType: !184, size: 32, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2329, file: !2330, line: 101, baseType: !2386, size: 128)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2329, file: !2330, line: 98, size: 128, elements: !2387)
!2387 = !{!2388, !2389}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2386, file: !2330, line: 99, baseType: !102, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2386, file: !2330, line: 100, baseType: !177, size: 32, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2329, file: !2330, line: 108, baseType: !2391, size: 128)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2329, file: !2330, line: 104, size: 128, elements: !2392)
!2392 = !{!2393, !2394, !2395}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2391, file: !2330, line: 105, baseType: !175, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2391, file: !2330, line: 106, baseType: !177, size: 32, offset: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2391, file: !2330, line: 107, baseType: !7, size: 32, offset: 96)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !988, file: !901, line: 1067, baseType: !2184, offset: 11136)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !988, file: !901, line: 1099, baseType: !2398, size: 64, offset: 11136)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !901, line: 56, flags: DIFlagFwdDecl)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !988, file: !901, line: 1103, baseType: !250, size: 128, offset: 11200)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !988, file: !901, line: 1104, baseType: !2402, size: 64, offset: 11328)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !901, line: 46, flags: DIFlagFwdDecl)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !988, file: !901, line: 1105, baseType: !698, size: 192, offset: 11392)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !988, file: !901, line: 1106, baseType: !7, size: 32, offset: 11584)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !988, file: !901, line: 1109, baseType: !2407, size: 128, offset: 11648)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2408, size: 128, elements: !1613)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !901, line: 51, flags: DIFlagFwdDecl)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !988, file: !901, line: 1110, baseType: !698, size: 192, offset: 11776)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !988, file: !901, line: 1111, baseType: !250, size: 128, offset: 11968)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !988, file: !901, line: 1173, baseType: !2413, size: 64, offset: 12096)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2415, line: 62, size: 256, align: 256, elements: !2416)
!2415 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2416 = !{!2417, !2418, !2419, !2424}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2414, file: !2415, line: 75, baseType: !184, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2414, file: !2415, line: 90, baseType: !184, size: 32, offset: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2414, file: !2415, line: 124, baseType: !2420, size: 64, offset: 64)
!2420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2414, file: !2415, line: 109, size: 64, elements: !2421)
!2421 = !{!2422, !2423}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2420, file: !2415, line: 110, baseType: !181, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2420, file: !2415, line: 112, baseType: !181, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2414, file: !2415, line: 144, baseType: !184, size: 32, offset: 128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !988, file: !901, line: 1174, baseType: !231, size: 32, offset: 12160)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !988, file: !901, line: 1179, baseType: !176, size: 64, offset: 12224)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !988, file: !901, line: 1182, baseType: !2428, size: 128, offset: 12288)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1846, line: 76, size: 128, elements: !2429)
!2429 = !{!2430, !2435, !2436}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2428, file: !1846, line: 85, baseType: !2431, size: 64)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2432, line: 7, size: 64, elements: !2433)
!2432 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2433 = !{!2434}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2431, file: !2432, line: 12, baseType: !1151, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2428, file: !1846, line: 88, baseType: !240, size: 8, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2428, file: !1846, line: 95, baseType: !240, size: 8, offset: 72)
!2437 = !DIDerivedType(tag: DW_TAG_member, scope: !988, file: !901, line: 1184, baseType: !2438, size: 128, offset: 12416)
!2438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !988, file: !901, line: 1184, size: 128, elements: !2439)
!2439 = !{!2440, !2441}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2438, file: !901, line: 1185, baseType: !1000, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2438, file: !901, line: 1186, baseType: !972, size: 128, align: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !988, file: !901, line: 1190, baseType: !1526, size: 64, offset: 12544)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !988, file: !901, line: 1192, baseType: !2444, size: 128, offset: 12608)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1846, line: 64, size: 128, elements: !2445)
!2445 = !{!2446, !2447, !2448}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2444, file: !1846, line: 65, baseType: !340, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2444, file: !1846, line: 67, baseType: !184, size: 32, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2444, file: !1846, line: 68, baseType: !184, size: 32, offset: 96)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !988, file: !901, line: 1206, baseType: !177, size: 32, offset: 12736)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !988, file: !901, line: 1207, baseType: !177, size: 32, offset: 12768)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !988, file: !901, line: 1209, baseType: !176, size: 64, offset: 12800)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !988, file: !901, line: 1219, baseType: !179, size: 64, offset: 12864)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !988, file: !901, line: 1220, baseType: !179, size: 64, offset: 12928)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !988, file: !901, line: 1317, baseType: !177, size: 32, offset: 12992)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !988, file: !901, line: 1319, baseType: !987, size: 64, offset: 13056)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !988, file: !901, line: 1322, baseType: !2457, size: 64, offset: 13120)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2459, line: 56, size: 512, elements: !2460)
!2459 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2460 = !{!2461, !2462, !2463, !2464, !2465, !2466, !2467, !2469}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2458, file: !2459, line: 57, baseType: !2457, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2458, file: !2459, line: 58, baseType: !175, size: 64, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2458, file: !2459, line: 59, baseType: !176, size: 64, offset: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2458, file: !2459, line: 60, baseType: !176, size: 64, offset: 192)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2458, file: !2459, line: 61, baseType: !339, size: 64, offset: 256)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2458, file: !2459, line: 62, baseType: !7, size: 32, offset: 320)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2458, file: !2459, line: 63, baseType: !2468, size: 64, offset: 384)
!2468 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !174, line: 153, baseType: !179)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2458, file: !2459, line: 64, baseType: !2470, size: 64, offset: 448)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !988, file: !901, line: 1326, baseType: !1000, size: 32, offset: 13184)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !988, file: !901, line: 1342, baseType: !175, size: 64, offset: 13248)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !988, file: !901, line: 1343, baseType: !181, size: 64, offset: 13312)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !988, file: !901, line: 1344, baseType: !179, size: 64, offset: 13376)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !988, file: !901, line: 1345, baseType: !181, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !988, file: !901, line: 1346, baseType: !181, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !988, file: !901, line: 1347, baseType: !181, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !988, file: !901, line: 1348, baseType: !972, size: 128, align: 64, offset: 13504)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !988, file: !901, line: 1358, baseType: !2481, size: 34816, offset: 13824)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2482, line: 485, size: 34816, elements: !2483)
!2482 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2483 = !{!2484, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2513, !2514, !2515, !2516, !2517, !2518, !2521, !2522, !2523}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2481, file: !2482, line: 487, baseType: !2485, size: 192)
!2485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2486, size: 192, elements: !593)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2487, line: 16, size: 64, elements: !2488)
!2487 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2488 = !{!2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2486, file: !2487, line: 17, baseType: !323, size: 16)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2486, file: !2487, line: 18, baseType: !323, size: 16, offset: 16)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2486, file: !2487, line: 19, baseType: !323, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2486, file: !2487, line: 19, baseType: !323, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2486, file: !2487, line: 19, baseType: !323, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2486, file: !2487, line: 19, baseType: !323, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2486, file: !2487, line: 19, baseType: !323, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2486, file: !2487, line: 20, baseType: !323, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2486, file: !2487, line: 20, baseType: !323, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2486, file: !2487, line: 20, baseType: !323, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2486, file: !2487, line: 20, baseType: !323, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2486, file: !2487, line: 20, baseType: !323, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2486, file: !2487, line: 20, baseType: !323, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2481, file: !2482, line: 491, baseType: !176, size: 64, offset: 192)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2481, file: !2482, line: 495, baseType: !178, size: 16, offset: 256)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2481, file: !2482, line: 496, baseType: !178, size: 16, offset: 272)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2481, file: !2482, line: 497, baseType: !178, size: 16, offset: 288)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2481, file: !2482, line: 498, baseType: !178, size: 16, offset: 304)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2481, file: !2482, line: 502, baseType: !176, size: 64, offset: 320)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2481, file: !2482, line: 503, baseType: !176, size: 64, offset: 384)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2481, file: !2482, line: 514, baseType: !2510, size: 256, offset: 448)
!2510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2511, size: 256, elements: !232)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2482, line: 483, flags: DIFlagFwdDecl)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2481, file: !2482, line: 516, baseType: !176, size: 64, offset: 704)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2481, file: !2482, line: 518, baseType: !176, size: 64, offset: 768)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2481, file: !2482, line: 520, baseType: !176, size: 64, offset: 832)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2481, file: !2482, line: 521, baseType: !176, size: 64, offset: 896)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2481, file: !2482, line: 522, baseType: !176, size: 64, offset: 960)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2481, file: !2482, line: 528, baseType: !2519, size: 64, offset: 1024)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2482, line: 10, flags: DIFlagFwdDecl)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2481, file: !2482, line: 535, baseType: !176, size: 64, offset: 1088)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2481, file: !2482, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2481, file: !2482, line: 540, baseType: !2524, size: 33280, offset: 1536)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2525, line: 317, size: 33280, elements: !2526)
!2525 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2526 = !{!2527, !2528, !2529}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2524, file: !2525, line: 330, baseType: !7, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2524, file: !2525, line: 337, baseType: !176, size: 64, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2524, file: !2525, line: 348, baseType: !2530, size: 32768, offset: 512)
!2530 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2525, line: 304, size: 32768, elements: !2531)
!2531 = !{!2532, !2547, !2584, !2634, !2647}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2530, file: !2525, line: 305, baseType: !2533, size: 896)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2525, line: 12, size: 896, elements: !2534)
!2534 = !{!2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2546}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2533, file: !2525, line: 13, baseType: !231, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2533, file: !2525, line: 14, baseType: !231, size: 32, offset: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2533, file: !2525, line: 15, baseType: !231, size: 32, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2533, file: !2525, line: 16, baseType: !231, size: 32, offset: 96)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2533, file: !2525, line: 17, baseType: !231, size: 32, offset: 128)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2533, file: !2525, line: 18, baseType: !231, size: 32, offset: 160)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2533, file: !2525, line: 19, baseType: !231, size: 32, offset: 192)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2533, file: !2525, line: 22, baseType: !2543, size: 640, offset: 224)
!2543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 640, elements: !2544)
!2544 = !{!2545}
!2545 = !DISubrange(count: 20)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2533, file: !2525, line: 25, baseType: !231, size: 32, offset: 864)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2530, file: !2525, line: 306, baseType: !2548, size: 4096, align: 128)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2525, line: 34, size: 4096, align: 128, elements: !2549)
!2549 = !{!2550, !2551, !2552, !2553, !2554, !2569, !2570, !2571, !2573, !2575, !2579}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2548, file: !2525, line: 35, baseType: !323, size: 16)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2548, file: !2525, line: 36, baseType: !323, size: 16, offset: 16)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2548, file: !2525, line: 37, baseType: !323, size: 16, offset: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2548, file: !2525, line: 38, baseType: !323, size: 16, offset: 48)
!2554 = !DIDerivedType(tag: DW_TAG_member, scope: !2548, file: !2525, line: 39, baseType: !2555, size: 128, offset: 64)
!2555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2548, file: !2525, line: 39, size: 128, elements: !2556)
!2556 = !{!2557, !2562}
!2557 = !DIDerivedType(tag: DW_TAG_member, scope: !2555, file: !2525, line: 40, baseType: !2558, size: 128)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2555, file: !2525, line: 40, size: 128, elements: !2559)
!2559 = !{!2560, !2561}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2558, file: !2525, line: 41, baseType: !179, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2558, file: !2525, line: 42, baseType: !179, size: 64, offset: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, scope: !2555, file: !2525, line: 44, baseType: !2563, size: 128)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2555, file: !2525, line: 44, size: 128, elements: !2564)
!2564 = !{!2565, !2566, !2567, !2568}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2563, file: !2525, line: 45, baseType: !231, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2563, file: !2525, line: 46, baseType: !231, size: 32, offset: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2563, file: !2525, line: 47, baseType: !231, size: 32, offset: 64)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2563, file: !2525, line: 48, baseType: !231, size: 32, offset: 96)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2548, file: !2525, line: 51, baseType: !231, size: 32, offset: 192)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2548, file: !2525, line: 52, baseType: !231, size: 32, offset: 224)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2548, file: !2525, line: 55, baseType: !2572, size: 1024, offset: 256)
!2572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 1024, elements: !431)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2548, file: !2525, line: 58, baseType: !2574, size: 2048, offset: 1280)
!2574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 2048, elements: !2229)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2548, file: !2525, line: 60, baseType: !2576, size: 384, offset: 3328)
!2576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 384, elements: !2577)
!2577 = !{!2578}
!2578 = !DISubrange(count: 12)
!2579 = !DIDerivedType(tag: DW_TAG_member, scope: !2548, file: !2525, line: 62, baseType: !2580, size: 384, offset: 3712)
!2580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2548, file: !2525, line: 62, size: 384, elements: !2581)
!2581 = !{!2582, !2583}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2580, file: !2525, line: 63, baseType: !2576, size: 384)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2580, file: !2525, line: 64, baseType: !2576, size: 384)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2530, file: !2525, line: 307, baseType: !2585, size: 1088)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2525, line: 79, size: 1088, elements: !2586)
!2586 = !{!2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2633}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2585, file: !2525, line: 80, baseType: !231, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2585, file: !2525, line: 81, baseType: !231, size: 32, offset: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2585, file: !2525, line: 82, baseType: !231, size: 32, offset: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2585, file: !2525, line: 83, baseType: !231, size: 32, offset: 96)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2585, file: !2525, line: 84, baseType: !231, size: 32, offset: 128)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2585, file: !2525, line: 85, baseType: !231, size: 32, offset: 160)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2585, file: !2525, line: 86, baseType: !231, size: 32, offset: 192)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2585, file: !2525, line: 88, baseType: !2543, size: 640, offset: 224)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2585, file: !2525, line: 89, baseType: !1136, size: 8, offset: 864)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2585, file: !2525, line: 90, baseType: !1136, size: 8, offset: 872)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2585, file: !2525, line: 91, baseType: !1136, size: 8, offset: 880)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2585, file: !2525, line: 92, baseType: !1136, size: 8, offset: 888)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2585, file: !2525, line: 93, baseType: !1136, size: 8, offset: 896)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2585, file: !2525, line: 94, baseType: !1136, size: 8, offset: 904)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2585, file: !2525, line: 95, baseType: !2602, size: 64, offset: 960)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2604, line: 11, size: 128, elements: !2605)
!2604 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2605 = !{!2606, !2607}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2603, file: !2604, line: 12, baseType: !102, size: 64)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2603, file: !2604, line: 13, baseType: !2608, size: 64, offset: 64)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2610, line: 56, size: 1344, elements: !2611)
!2610 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2611 = !{!2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2609, file: !2610, line: 61, baseType: !176, size: 64)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2609, file: !2610, line: 62, baseType: !176, size: 64, offset: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2609, file: !2610, line: 63, baseType: !176, size: 64, offset: 128)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2609, file: !2610, line: 64, baseType: !176, size: 64, offset: 192)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2609, file: !2610, line: 65, baseType: !176, size: 64, offset: 256)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2609, file: !2610, line: 66, baseType: !176, size: 64, offset: 320)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2609, file: !2610, line: 68, baseType: !176, size: 64, offset: 384)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2609, file: !2610, line: 69, baseType: !176, size: 64, offset: 448)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2609, file: !2610, line: 70, baseType: !176, size: 64, offset: 512)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2609, file: !2610, line: 71, baseType: !176, size: 64, offset: 576)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2609, file: !2610, line: 72, baseType: !176, size: 64, offset: 640)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2609, file: !2610, line: 73, baseType: !176, size: 64, offset: 704)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2609, file: !2610, line: 74, baseType: !176, size: 64, offset: 768)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2609, file: !2610, line: 75, baseType: !176, size: 64, offset: 832)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2609, file: !2610, line: 76, baseType: !176, size: 64, offset: 896)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2609, file: !2610, line: 81, baseType: !176, size: 64, offset: 960)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2609, file: !2610, line: 83, baseType: !176, size: 64, offset: 1024)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2609, file: !2610, line: 84, baseType: !176, size: 64, offset: 1088)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2609, file: !2610, line: 85, baseType: !176, size: 64, offset: 1152)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2609, file: !2610, line: 86, baseType: !176, size: 64, offset: 1216)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2609, file: !2610, line: 87, baseType: !176, size: 64, offset: 1280)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2585, file: !2525, line: 96, baseType: !231, size: 32, offset: 1024)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2530, file: !2525, line: 308, baseType: !2635, size: 4608, align: 512)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2525, line: 289, size: 4608, align: 512, elements: !2636)
!2636 = !{!2637, !2638, !2645}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2635, file: !2525, line: 290, baseType: !2548, size: 4096, align: 128)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2635, file: !2525, line: 291, baseType: !2639, size: 512, offset: 4096)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2525, line: 268, size: 512, elements: !2640)
!2640 = !{!2641, !2642, !2643}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2639, file: !2525, line: 269, baseType: !179, size: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2639, file: !2525, line: 270, baseType: !179, size: 64, offset: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2639, file: !2525, line: 271, baseType: !2644, size: 384, offset: 128)
!2644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 384, elements: !1671)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2635, file: !2525, line: 292, baseType: !2646, offset: 4608)
!2646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1136, elements: !332)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2530, file: !2525, line: 309, baseType: !2648, size: 32768)
!2648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1136, size: 32768, elements: !2649)
!2649 = !{!2650}
!2650 = !DISubrange(count: 4096)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !961, file: !962, line: 16, baseType: !953, size: 128, offset: 448)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !961, file: !962, line: 17, baseType: !714, size: 32, offset: 576)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !534, file: !44, line: 1465, baseType: !175, size: 64, offset: 6400)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !534, file: !44, line: 1468, baseType: !231, size: 32, offset: 6464)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !534, file: !44, line: 1470, baseType: !749, size: 64, offset: 6528)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !534, file: !44, line: 1471, baseType: !749, size: 64, offset: 6592)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !534, file: !44, line: 1473, baseType: !184, size: 32, offset: 6656)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !534, file: !44, line: 1474, baseType: !2659, size: 64, offset: 6720)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !534, file: !44, line: 1477, baseType: !2662, size: 256, offset: 6784)
!2662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 256, elements: !431)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !534, file: !44, line: 1478, baseType: !2664, size: 128, offset: 7040)
!2664 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2665, line: 18, baseType: !2666)
!2665 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2665, line: 16, size: 128, elements: !2667)
!2667 = !{!2668}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2666, file: !2665, line: 17, baseType: !2669, size: 128)
!2669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1137, size: 128, elements: !2082)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !534, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !534, file: !44, line: 1481, baseType: !1559, size: 32, offset: 7200)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !534, file: !44, line: 1487, baseType: !698, size: 192, offset: 7232)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !534, file: !44, line: 1493, baseType: !481, size: 64, offset: 7424)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !534, file: !44, line: 1495, baseType: !461, size: 64, offset: 7488)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !534, file: !44, line: 1500, baseType: !177, size: 32, offset: 7552)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !534, file: !44, line: 1502, baseType: !2677, size: 448, offset: 7616)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !671, line: 60, size: 448, elements: !2678)
!2678 = !{!2679, !2684, !2685, !2686, !2687, !2688, !2689}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2677, file: !671, line: 61, baseType: !2680, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!176, !2683, !669}
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2677, file: !671, line: 63, baseType: !2680, size: 64, offset: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2677, file: !671, line: 66, baseType: !102, size: 64, offset: 128)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2677, file: !671, line: 67, baseType: !177, size: 32, offset: 192)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2677, file: !671, line: 68, baseType: !7, size: 32, offset: 224)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2677, file: !671, line: 71, baseType: !250, size: 128, offset: 256)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2677, file: !671, line: 77, baseType: !2690, size: 64, offset: 384)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !534, file: !44, line: 1505, baseType: !702, size: 64, offset: 8064)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !534, file: !44, line: 1508, baseType: !702, size: 64, offset: 8128)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !534, file: !44, line: 1511, baseType: !177, size: 32, offset: 8192)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !534, file: !44, line: 1514, baseType: !1789, size: 32, offset: 8224)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !534, file: !44, line: 1517, baseType: !2696, size: 64, offset: 8256)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!2697 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !101, line: 18, flags: DIFlagFwdDecl)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !534, file: !44, line: 1518, baseType: !577, size: 64, offset: 8320)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !534, file: !44, line: 1525, baseType: !1759, size: 64, offset: 8384)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !534, file: !44, line: 1532, baseType: !2701, size: 64, offset: 8448)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2702, line: 52, size: 64, elements: !2703)
!2702 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2703 = !{!2704}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2701, file: !2702, line: 53, baseType: !2705, size: 64)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2702, line: 40, size: 256, elements: !2707)
!2707 = !{!2708, !2709, !2714}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2706, file: !2702, line: 42, baseType: !444)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2706, file: !2702, line: 44, baseType: !2710, size: 192)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2702, line: 28, size: 192, elements: !2711)
!2711 = !{!2712, !2713}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2710, file: !2702, line: 29, baseType: !250, size: 128)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2710, file: !2702, line: 31, baseType: !102, size: 64, offset: 128)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2706, file: !2702, line: 49, baseType: !102, size: 64, offset: 192)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !534, file: !44, line: 1533, baseType: !2701, size: 64, offset: 8512)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !534, file: !44, line: 1534, baseType: !972, size: 128, align: 64, offset: 8576)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !534, file: !44, line: 1535, baseType: !1930, size: 256, offset: 8704)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !534, file: !44, line: 1537, baseType: !698, size: 192, offset: 8960)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !534, file: !44, line: 1542, baseType: !177, size: 32, offset: 9152)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !534, file: !44, line: 1545, baseType: !444, offset: 9184)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !534, file: !44, line: 1546, baseType: !250, size: 128, offset: 9216)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !534, file: !44, line: 1548, baseType: !444, offset: 9344)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !534, file: !44, line: 1549, baseType: !250, size: 128, offset: 9344)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !389, file: !390, line: 104, baseType: !176, size: 64, offset: 896)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !389, file: !390, line: 105, baseType: !175, size: 64, offset: 960)
!2726 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !390, line: 107, baseType: !2727, size: 128, offset: 1024)
!2727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !390, line: 107, size: 128, elements: !2728)
!2728 = !{!2729, !2730}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !2727, file: !390, line: 108, baseType: !250, size: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !2727, file: !390, line: 109, baseType: !2731, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !389, file: !390, line: 111, baseType: !250, size: 128, offset: 1152)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !389, file: !390, line: 112, baseType: !250, size: 128, offset: 1280)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !389, file: !390, line: 120, baseType: !2735, size: 128, offset: 1408)
!2735 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !390, line: 116, size: 128, elements: !2736)
!2736 = !{!2737, !2738, !2739}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !2735, file: !390, line: 117, baseType: !581, size: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !2735, file: !390, line: 118, baseType: !404, size: 128)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !2735, file: !390, line: 119, baseType: !972, size: 128, align: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !382, file: !44, line: 1866, baseType: !2741, size: 64, offset: 64)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{!481, !388, !357, !2744}
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !2746, line: 10, size: 128, elements: !2747)
!2746 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!2747 = !{!2748, !2752}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2745, file: !2746, line: 11, baseType: !2749, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = !DISubroutineType(types: !2751)
!2751 = !{null, !175}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !2745, file: !2746, line: 12, baseType: !175, size: 64, offset: 64)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !382, file: !44, line: 1867, baseType: !2754, size: 64, offset: 128)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{!177, !357, !177}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !382, file: !44, line: 1868, baseType: !2758, size: 64, offset: 192)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DISubroutineType(types: !2760)
!2760 = !{!2761, !357, !177}
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !382, file: !44, line: 1870, baseType: !2764, size: 64, offset: 256)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!177, !388, !507, !177}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !382, file: !44, line: 1872, baseType: !2768, size: 64, offset: 320)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = !DISubroutineType(types: !2770)
!2770 = !{!177, !357, !388, !361, !240}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !382, file: !44, line: 1873, baseType: !2772, size: 64, offset: 384)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DISubroutineType(types: !2774)
!2774 = !{!177, !388, !357, !388}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !382, file: !44, line: 1874, baseType: !2776, size: 64, offset: 448)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!177, !357, !388}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !382, file: !44, line: 1875, baseType: !2780, size: 64, offset: 512)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{!177, !357, !388, !481}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !382, file: !44, line: 1876, baseType: !2784, size: 64, offset: 576)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DISubroutineType(types: !2786)
!2786 = !{!177, !357, !388, !361}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !382, file: !44, line: 1877, baseType: !2776, size: 64, offset: 640)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !382, file: !44, line: 1878, baseType: !2789, size: 64, offset: 704)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{!177, !357, !388, !361, !538}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !382, file: !44, line: 1879, baseType: !2793, size: 64, offset: 768)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{!177, !357, !388, !357, !388, !7}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !382, file: !44, line: 1881, baseType: !2797, size: 64, offset: 832)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{!177, !388, !2800}
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !2802)
!2802 = !{!2803, !2804, !2805, !2806, !2807, !2808, !2813, !2814, !2815}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !2801, file: !44, line: 220, baseType: !7, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !2801, file: !44, line: 221, baseType: !361, size: 16, offset: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !2801, file: !44, line: 222, baseType: !364, size: 32, offset: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !2801, file: !44, line: 223, baseType: !372, size: 32, offset: 96)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !2801, file: !44, line: 224, baseType: !543, size: 64, offset: 128)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !2801, file: !44, line: 225, baseType: !2809, size: 128, offset: 192)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !750, line: 13, size: 128, elements: !2810)
!2810 = !{!2811, !2812}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2809, file: !750, line: 14, baseType: !749, size: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2809, file: !750, line: 15, baseType: !102, size: 64, offset: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !2801, file: !44, line: 226, baseType: !2809, size: 128, offset: 320)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !2801, file: !44, line: 227, baseType: !2809, size: 128, offset: 448)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !2801, file: !44, line: 234, baseType: !1283, size: 64, offset: 576)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !382, file: !44, line: 1882, baseType: !2817, size: 64, offset: 896)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 64)
!2818 = !DISubroutineType(types: !2819)
!2819 = !{!177, !524, !2820, !231, !7}
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !2822, line: 22, size: 1152, elements: !2823)
!2822 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!2823 = !{!2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !2821, file: !2822, line: 23, baseType: !231, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2821, file: !2822, line: 24, baseType: !361, size: 16, offset: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !2821, file: !2822, line: 25, baseType: !7, size: 32, offset: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !2821, file: !2822, line: 26, baseType: !1649, size: 32, offset: 96)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2821, file: !2822, line: 27, baseType: !179, size: 64, offset: 128)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !2821, file: !2822, line: 28, baseType: !179, size: 64, offset: 192)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2821, file: !2822, line: 37, baseType: !179, size: 64, offset: 256)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2821, file: !2822, line: 38, baseType: !538, size: 32, offset: 320)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !2821, file: !2822, line: 39, baseType: !538, size: 32, offset: 352)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2821, file: !2822, line: 40, baseType: !364, size: 32, offset: 384)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2821, file: !2822, line: 41, baseType: !372, size: 32, offset: 416)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2821, file: !2822, line: 42, baseType: !543, size: 64, offset: 448)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !2821, file: !2822, line: 43, baseType: !2809, size: 128, offset: 512)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !2821, file: !2822, line: 44, baseType: !2809, size: 128, offset: 640)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2821, file: !2822, line: 45, baseType: !2809, size: 128, offset: 768)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !2821, file: !2822, line: 46, baseType: !2809, size: 128, offset: 896)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2821, file: !2822, line: 47, baseType: !179, size: 64, offset: 1024)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !2821, file: !2822, line: 48, baseType: !179, size: 64, offset: 1088)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !382, file: !44, line: 1883, baseType: !2843, size: 64, offset: 960)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{!1312, !388, !507, !207}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !382, file: !44, line: 1884, baseType: !2847, size: 64, offset: 1024)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{!177, !357, !2850, !179, !179}
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !382, file: !44, line: 1886, baseType: !2853, size: 64, offset: 1088)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!177, !357, !2856, !177}
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !382, file: !44, line: 1887, baseType: !2858, size: 64, offset: 1152)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{!177, !357, !388, !1283, !7, !361}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !382, file: !44, line: 1890, baseType: !2784, size: 64, offset: 1216)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !382, file: !44, line: 1891, baseType: !2863, size: 64, offset: 1280)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{!177, !357, !2761, !177}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !358, file: !44, line: 623, baseType: !533, size: 64, offset: 192)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !358, file: !44, line: 624, baseType: !353, size: 64, offset: 256)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !358, file: !44, line: 631, baseType: !176, size: 64, offset: 320)
!2869 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !44, line: 639, baseType: !2870, size: 32, offset: 384)
!2870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !44, line: 639, size: 32, elements: !2871)
!2871 = !{!2872, !2874}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2870, file: !44, line: 640, baseType: !2873, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2870, file: !44, line: 641, baseType: !7, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !358, file: !44, line: 643, baseType: !538, size: 32, offset: 416)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !358, file: !44, line: 644, baseType: !543, size: 64, offset: 448)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !358, file: !44, line: 645, baseType: !2809, size: 128, offset: 512)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !358, file: !44, line: 646, baseType: !2809, size: 128, offset: 640)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !358, file: !44, line: 647, baseType: !2809, size: 128, offset: 768)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !358, file: !44, line: 648, baseType: !444, offset: 896)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !358, file: !44, line: 649, baseType: !178, size: 16, offset: 896)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !358, file: !44, line: 650, baseType: !1136, size: 8, offset: 912)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !358, file: !44, line: 651, baseType: !1136, size: 8, offset: 920)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !358, file: !44, line: 652, baseType: !863, size: 64, offset: 960)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !358, file: !44, line: 659, baseType: !176, size: 64, offset: 1024)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !358, file: !44, line: 660, baseType: !875, size: 256, offset: 1088)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !358, file: !44, line: 662, baseType: !176, size: 64, offset: 1344)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !358, file: !44, line: 663, baseType: !176, size: 64, offset: 1408)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !358, file: !44, line: 665, baseType: !581, size: 128, offset: 1472)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !358, file: !44, line: 666, baseType: !250, size: 128, offset: 1600)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !358, file: !44, line: 675, baseType: !250, size: 128, offset: 1728)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !358, file: !44, line: 676, baseType: !250, size: 128, offset: 1856)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !358, file: !44, line: 677, baseType: !250, size: 128, offset: 1984)
!2894 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !44, line: 678, baseType: !2895, size: 128, offset: 2112)
!2895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !44, line: 678, size: 128, elements: !2896)
!2896 = !{!2897, !2898}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2895, file: !44, line: 679, baseType: !577, size: 64)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2895, file: !44, line: 680, baseType: !972, size: 128, align: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !358, file: !44, line: 682, baseType: !704, size: 64, offset: 2240)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !358, file: !44, line: 683, baseType: !704, size: 64, offset: 2304)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !358, file: !44, line: 684, baseType: !714, size: 32, offset: 2368)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !358, file: !44, line: 685, baseType: !714, size: 32, offset: 2400)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !358, file: !44, line: 686, baseType: !714, size: 32, offset: 2432)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !358, file: !44, line: 688, baseType: !714, size: 32, offset: 2464)
!2905 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !44, line: 690, baseType: !2906, size: 64, offset: 2496)
!2906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !44, line: 690, size: 64, elements: !2907)
!2907 = !{!2908, !2909}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2906, file: !44, line: 691, baseType: !1299, size: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2906, file: !44, line: 692, baseType: !608, size: 64)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !358, file: !44, line: 694, baseType: !2911, size: 64, offset: 2560)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !2913)
!2913 = !{!2914, !2915, !2916, !2917}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2912, file: !44, line: 1101, baseType: !444)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2912, file: !44, line: 1102, baseType: !250, size: 128)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2912, file: !44, line: 1103, baseType: !250, size: 128, offset: 128)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2912, file: !44, line: 1104, baseType: !250, size: 128, offset: 256)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !358, file: !44, line: 695, baseType: !354, size: 1216, align: 64, offset: 2624)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !358, file: !44, line: 696, baseType: !250, size: 128, offset: 3840)
!2920 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !44, line: 697, baseType: !2921, size: 64, offset: 3968)
!2921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !44, line: 697, size: 64, elements: !2922)
!2922 = !{!2923, !2924, !2925, !2928, !2929}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2921, file: !44, line: 698, baseType: !1526, size: 64)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2921, file: !44, line: 699, baseType: !896, size: 64)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2921, file: !44, line: 700, baseType: !2926, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 64)
!2927 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2921, file: !44, line: 701, baseType: !507, size: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2921, file: !44, line: 702, baseType: !7, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !358, file: !44, line: 705, baseType: !184, size: 32, offset: 4032)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !358, file: !44, line: 708, baseType: !184, size: 32, offset: 4064)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !358, file: !44, line: 709, baseType: !2659, size: 64, offset: 4096)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !358, file: !44, line: 720, baseType: !175, size: 64, offset: 4160)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !354, file: !44, line: 453, baseType: !2284, size: 128, offset: 64)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !354, file: !44, line: 454, baseType: !173, size: 32, offset: 192)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !354, file: !44, line: 455, baseType: !714, size: 32, offset: 224)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !354, file: !44, line: 460, baseType: !1123, size: 128, offset: 256)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !354, file: !44, line: 461, baseType: !875, size: 256, offset: 384)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !354, file: !44, line: 462, baseType: !176, size: 64, offset: 640)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !354, file: !44, line: 463, baseType: !176, size: 64, offset: 704)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !354, file: !44, line: 464, baseType: !176, size: 64, offset: 768)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !354, file: !44, line: 465, baseType: !2943, size: 64, offset: 832)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2945)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !2946)
!2946 = !{!2947, !2951, !2955, !2959, !2963, !2967, !2973, !2977, !2981, !2986, !2990, !2994, !2998, !2999, !3003, !3009, !3010, !3011, !3015, !3020, !3024, !3031}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !2945, file: !44, line: 368, baseType: !2948, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!177, !340, !620}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !2945, file: !44, line: 369, baseType: !2952, size: 64, offset: 64)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!177, !1283, !340}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !2945, file: !44, line: 372, baseType: !2956, size: 64, offset: 128)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{!177, !353, !620}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !2945, file: !44, line: 375, baseType: !2960, size: 64, offset: 192)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DISubroutineType(types: !2962)
!2962 = !{!177, !340}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !2945, file: !44, line: 381, baseType: !2964, size: 64, offset: 256)
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 64)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{!177, !1283, !353, !253, !7}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !2945, file: !44, line: 383, baseType: !2968, size: 64, offset: 320)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{null, !2971}
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !2945, file: !44, line: 385, baseType: !2974, size: 64, offset: 384)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!177, !1283, !353, !543, !7, !7, !339, !1483}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !2945, file: !44, line: 388, baseType: !2978, size: 64, offset: 448)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!177, !1283, !353, !543, !7, !7, !340, !175}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !2945, file: !44, line: 393, baseType: !2982, size: 64, offset: 512)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DISubroutineType(types: !2984)
!2984 = !{!2985, !353, !2985}
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !174, line: 125, baseType: !179)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !2945, file: !44, line: 394, baseType: !2987, size: 64, offset: 576)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{null, !340, !7, !7}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !2945, file: !44, line: 395, baseType: !2991, size: 64, offset: 640)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{!177, !340, !173}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !2945, file: !44, line: 396, baseType: !2995, size: 64, offset: 704)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{null, !340}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !2945, file: !44, line: 397, baseType: !1321, size: 64, offset: 768)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !2945, file: !44, line: 402, baseType: !3000, size: 64, offset: 832)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!177, !353, !340, !340, !5}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !2945, file: !44, line: 404, baseType: !3004, size: 64, offset: 896)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{!240, !340, !3007}
!3007 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !3008, line: 305, baseType: !7)
!3008 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !2945, file: !44, line: 405, baseType: !2995, size: 64, offset: 960)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !2945, file: !44, line: 406, baseType: !2960, size: 64, offset: 1024)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !2945, file: !44, line: 407, baseType: !3012, size: 64, offset: 1088)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{!177, !340, !176, !176}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !2945, file: !44, line: 409, baseType: !3016, size: 64, offset: 1152)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DISubroutineType(types: !3018)
!3018 = !{null, !340, !3019, !3019}
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !2945, file: !44, line: 410, baseType: !3021, size: 64, offset: 1216)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!177, !353, !340}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !2945, file: !44, line: 413, baseType: !3025, size: 64, offset: 1280)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{!177, !3028, !1283, !3030}
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !2945, file: !44, line: 415, baseType: !3032, size: 64, offset: 1344)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{null, !1283}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !354, file: !44, line: 466, baseType: !176, size: 64, offset: 896)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !354, file: !44, line: 467, baseType: !1789, size: 32, offset: 960)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !354, file: !44, line: 468, baseType: !444, offset: 992)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !354, file: !44, line: 469, baseType: !250, size: 128, offset: 1024)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !354, file: !44, line: 470, baseType: !175, size: 64, offset: 1152)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !349, file: !342, line: 87, baseType: !176, size: 64, offset: 192)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !349, file: !342, line: 94, baseType: !176, size: 64, offset: 256)
!3042 = !DIDerivedType(tag: DW_TAG_member, scope: !346, file: !342, line: 96, baseType: !3043, size: 64)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !346, file: !342, line: 96, size: 64, elements: !3044)
!3044 = !{!3045}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !3043, file: !342, line: 101, baseType: !238, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, scope: !346, file: !342, line: 103, baseType: !3047, size: 320)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !346, file: !342, line: 103, size: 320, elements: !3048)
!3048 = !{!3049, !3059, !3060, !3061}
!3049 = !DIDerivedType(tag: DW_TAG_member, scope: !3047, file: !342, line: 104, baseType: !3050, size: 128)
!3050 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3047, file: !342, line: 104, size: 128, elements: !3051)
!3051 = !{!3052, !3053}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !3050, file: !342, line: 105, baseType: !250, size: 128)
!3053 = !DIDerivedType(tag: DW_TAG_member, scope: !3050, file: !342, line: 106, baseType: !3054, size: 128)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3050, file: !342, line: 106, size: 128, elements: !3055)
!3055 = !{!3056, !3057, !3058}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3054, file: !342, line: 107, baseType: !340, size: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3054, file: !342, line: 109, baseType: !177, size: 32, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !3054, file: !342, line: 110, baseType: !177, size: 32, offset: 96)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !3047, file: !342, line: 117, baseType: !2303, size: 64, offset: 128)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !3047, file: !342, line: 119, baseType: !175, size: 64, offset: 192)
!3061 = !DIDerivedType(tag: DW_TAG_member, scope: !3047, file: !342, line: 120, baseType: !3062, size: 64, offset: 256)
!3062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3047, file: !342, line: 120, size: 64, elements: !3063)
!3063 = !{!3064, !3065, !3066}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !3062, file: !342, line: 121, baseType: !175, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !3062, file: !342, line: 122, baseType: !176, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, scope: !3062, file: !342, line: 123, baseType: !3067, size: 32)
!3067 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3062, file: !342, line: 123, size: 32, elements: !3068)
!3068 = !{!3069, !3070, !3071}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !3067, file: !342, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3067, file: !342, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3067, file: !342, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3072 = !DIDerivedType(tag: DW_TAG_member, scope: !346, file: !342, line: 130, baseType: !3073, size: 192)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !346, file: !342, line: 130, size: 192, elements: !3074)
!3074 = !{!3075, !3076, !3077, !3078, !3079}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !3073, file: !342, line: 131, baseType: !176, size: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !3073, file: !342, line: 134, baseType: !427, size: 8, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !3073, file: !342, line: 135, baseType: !427, size: 8, offset: 72)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !3073, file: !342, line: 136, baseType: !714, size: 32, offset: 96)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !3073, file: !342, line: 137, baseType: !7, size: 32, offset: 128)
!3080 = !DIDerivedType(tag: DW_TAG_member, scope: !346, file: !342, line: 139, baseType: !3081, size: 256)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !346, file: !342, line: 139, size: 256, elements: !3082)
!3082 = !{!3083, !3084, !3085}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !3081, file: !342, line: 140, baseType: !176, size: 64)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !3081, file: !342, line: 141, baseType: !714, size: 32, offset: 64)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !3081, file: !342, line: 143, baseType: !250, size: 128, offset: 128)
!3086 = !DIDerivedType(tag: DW_TAG_member, scope: !346, file: !342, line: 145, baseType: !3087, size: 256)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !346, file: !342, line: 145, size: 256, elements: !3088)
!3088 = !{!3089, !3090, !3091, !3092, !3097}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !3087, file: !342, line: 146, baseType: !176, size: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !3087, file: !342, line: 147, baseType: !1254, size: 64, offset: 64)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !3087, file: !342, line: 148, baseType: !176, size: 64, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_member, scope: !3087, file: !342, line: 149, baseType: !3093, size: 64, offset: 192)
!3093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3087, file: !342, line: 149, size: 64, elements: !3094)
!3094 = !{!3095, !3096}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !3093, file: !342, line: 150, baseType: !1162, size: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !3093, file: !342, line: 151, baseType: !714, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !3087, file: !342, line: 156, baseType: !444, offset: 256)
!3098 = !DIDerivedType(tag: DW_TAG_member, scope: !346, file: !342, line: 159, baseType: !3099, size: 128)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !346, file: !342, line: 159, size: 128, elements: !3100)
!3100 = !{!3101, !3165}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3099, file: !342, line: 161, baseType: !3102, size: 64)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !3104)
!3104 = !{!3105, !3115, !3136, !3137, !3138, !3139, !3140, !3152, !3153, !3154}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3103, file: !31, line: 111, baseType: !3106, size: 384)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !3107)
!3107 = !{!3108, !3110, !3111, !3112, !3113, !3114}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3106, file: !31, line: 20, baseType: !3109, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3106, file: !31, line: 21, baseType: !3109, size: 64, offset: 64)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3106, file: !31, line: 22, baseType: !3109, size: 64, offset: 128)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3106, file: !31, line: 23, baseType: !176, size: 64, offset: 192)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3106, file: !31, line: 24, baseType: !176, size: 64, offset: 256)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3106, file: !31, line: 25, baseType: !176, size: 64, offset: 320)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3103, file: !31, line: 112, baseType: !3116, size: 64, offset: 384)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3118, line: 105, size: 128, elements: !3119)
!3118 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3119 = !{!3120, !3121}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3117, file: !3118, line: 110, baseType: !176, size: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3117, file: !3118, line: 118, baseType: !3122, size: 64, offset: 64)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3118, line: 95, size: 448, elements: !3124)
!3124 = !{!3125, !3126, !3131, !3132, !3133, !3134, !3135}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3123, file: !3118, line: 96, baseType: !702, size: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3123, file: !3118, line: 97, baseType: !3127, size: 64, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 64)
!3128 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3118, line: 60, baseType: !3129)
!3129 = !DISubroutineType(types: !3130)
!3130 = !{null, !3116}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3123, file: !3118, line: 98, baseType: !3127, size: 64, offset: 128)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3123, file: !3118, line: 99, baseType: !240, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3123, file: !3118, line: 100, baseType: !240, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3123, file: !3118, line: 101, baseType: !972, size: 128, align: 64, offset: 256)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3123, file: !3118, line: 102, baseType: !3116, size: 64, offset: 384)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3103, file: !31, line: 113, baseType: !3117, size: 128, offset: 448)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3103, file: !31, line: 114, baseType: !1905, size: 192, offset: 576)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3103, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3103, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3103, file: !31, line: 117, baseType: !3141, size: 64, offset: 832)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3143)
!3143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !3144)
!3144 = !{!3145, !3146, !3150, !3151}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3143, file: !31, line: 73, baseType: !2995, size: 64)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3143, file: !31, line: 78, baseType: !3147, size: 64, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 64)
!3148 = !DISubroutineType(types: !3149)
!3149 = !{null, !3102}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3143, file: !31, line: 83, baseType: !3147, size: 64, offset: 128)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3143, file: !31, line: 89, baseType: !1215, size: 64, offset: 192)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3103, file: !31, line: 118, baseType: !175, size: 64, offset: 896)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3103, file: !31, line: 119, baseType: !177, size: 32, offset: 960)
!3154 = !DIDerivedType(tag: DW_TAG_member, scope: !3103, file: !31, line: 120, baseType: !3155, size: 128, offset: 1024)
!3155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3103, file: !31, line: 120, size: 128, elements: !3156)
!3156 = !{!3157, !3163}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3155, file: !31, line: 121, baseType: !3158, size: 128)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3159, line: 6, size: 128, elements: !3160)
!3159 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3160 = !{!3161, !3162}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3158, file: !3159, line: 7, baseType: !179, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3158, file: !3159, line: 8, baseType: !179, size: 64, offset: 64)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3155, file: !31, line: 122, baseType: !3164)
!3164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3158, elements: !332)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3099, file: !342, line: 162, baseType: !175, size: 64, offset: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !346, file: !342, line: 176, baseType: !972, size: 128, align: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, scope: !341, file: !342, line: 179, baseType: !3168, size: 32, offset: 384)
!3168 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !341, file: !342, line: 179, size: 32, elements: !3169)
!3169 = !{!3170, !3171, !3172, !3173}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3168, file: !342, line: 184, baseType: !714, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3168, file: !342, line: 192, baseType: !7, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3168, file: !342, line: 194, baseType: !7, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3168, file: !342, line: 195, baseType: !177, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !341, file: !342, line: 199, baseType: !714, size: 32, offset: 416)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "page_count", scope: !335, file: !192, line: 424, baseType: !177, size: 32, offset: 128)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "page_count_mapped", scope: !335, file: !192, line: 425, baseType: !177, size: 32, offset: 160)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "flush_queue_iso", scope: !197, file: !198, line: 109, baseType: !301, size: 64, offset: 960)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "flush_iso_completions", scope: !197, file: !198, line: 111, baseType: !3179, size: 64, offset: 1024)
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3180, size: 64)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{!177, !277}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "stop_iso", scope: !197, file: !198, line: 113, baseType: !3179, size: 64, offset: 1088)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !191, file: !192, line: 85, baseType: !3184, size: 64, offset: 64)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !3186)
!3186 = !{!3187, !3484, !3485, !3488, !3489, !3540, !3631, !3632, !3633, !3634, !3635, !3644, !3749, !3762, !3765, !3766, !3770, !3771, !3772, !3773, !3777, !3783, !3784, !3787, !3791, !3881, !3882, !3883, !3884, !3885, !3917, !3918, !3919, !3922, !3925, !3926, !3927, !3928}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3185, file: !73, line: 462, baseType: !3188, size: 512)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3189, line: 64, size: 512, elements: !3190)
!3189 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3190 = !{!3191, !3192, !3193, !3195, !3235, !3335, !3474, !3479, !3480, !3481, !3482, !3483}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3188, file: !3189, line: 65, baseType: !481, size: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3188, file: !3189, line: 66, baseType: !250, size: 128, offset: 64)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3188, file: !3189, line: 67, baseType: !3194, size: 64, offset: 192)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3188, file: !3189, line: 68, baseType: !3196, size: 64, offset: 256)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 64)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3189, line: 192, size: 704, elements: !3198)
!3198 = !{!3199, !3200, !3201, !3202}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3197, file: !3189, line: 193, baseType: !250, size: 128)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3197, file: !3189, line: 194, baseType: !444, offset: 128)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3197, file: !3189, line: 195, baseType: !3188, size: 512, offset: 128)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3197, file: !3189, line: 196, baseType: !3203, size: 64, offset: 640)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!3204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3205)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3189, line: 156, size: 192, elements: !3206)
!3206 = !{!3207, !3212, !3217}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3205, file: !3189, line: 157, baseType: !3208, size: 64)
!3208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3209)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 64)
!3210 = !DISubroutineType(types: !3211)
!3211 = !{!177, !3196, !3194}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3205, file: !3189, line: 158, baseType: !3213, size: 64, offset: 64)
!3213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3214)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!481, !3196, !3194}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3205, file: !3189, line: 159, baseType: !3218, size: 64, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3219)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3220 = !DISubroutineType(types: !3221)
!3221 = !{!177, !3196, !3194, !3222}
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3189, line: 148, size: 20736, elements: !3224)
!3224 = !{!3225, !3227, !3229, !3230, !3234}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3223, file: !3189, line: 149, baseType: !3226, size: 192)
!3226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 192, elements: !593)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3223, file: !3189, line: 150, baseType: !3228, size: 4096, offset: 192)
!3228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 4096, elements: !2229)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3223, file: !3189, line: 151, baseType: !177, size: 32, offset: 4288)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3223, file: !3189, line: 152, baseType: !3231, size: 16384, offset: 4320)
!3231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 16384, elements: !3232)
!3232 = !{!3233}
!3233 = !DISubrange(count: 2048)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3223, file: !3189, line: 153, baseType: !177, size: 32, offset: 20704)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3188, file: !3189, line: 69, baseType: !3236, size: 64, offset: 320)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3189, line: 138, size: 448, elements: !3238)
!3238 = !{!3239, !3243, !3262, !3264, !3297, !3325, !3329}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3237, file: !3189, line: 139, baseType: !3240, size: 64)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DISubroutineType(types: !3242)
!3242 = !{null, !3194}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3237, file: !3189, line: 140, baseType: !3244, size: 64, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3246)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3247, line: 230, size: 128, elements: !3248)
!3247 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3248 = !{!3249, !3258}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3246, file: !3247, line: 231, baseType: !3250, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3251 = !DISubroutineType(types: !3252)
!3252 = !{!1312, !3194, !3253, !507}
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3247, line: 30, size: 128, elements: !3255)
!3255 = !{!3256, !3257}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3254, file: !3247, line: 31, baseType: !481, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3254, file: !3247, line: 32, baseType: !361, size: 16, offset: 64)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3246, file: !3247, line: 232, baseType: !3259, size: 64, offset: 64)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{!1312, !3194, !3253, !481, !207}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3237, file: !3189, line: 141, baseType: !3263, size: 64, offset: 128)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3237, file: !3189, line: 142, baseType: !3265, size: 64, offset: 192)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3268)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3247, line: 84, size: 320, elements: !3269)
!3269 = !{!3270, !3271, !3275, !3294, !3295}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3268, file: !3247, line: 85, baseType: !481, size: 64)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3268, file: !3247, line: 86, baseType: !3272, size: 64, offset: 64)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = !DISubroutineType(types: !3274)
!3274 = !{!361, !3194, !3253, !177}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3268, file: !3247, line: 88, baseType: !3276, size: 64, offset: 128)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!361, !3194, !3279, !177}
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3247, line: 168, size: 448, elements: !3281)
!3281 = !{!3282, !3283, !3284, !3285, !3289, !3290}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3280, file: !3247, line: 169, baseType: !3254, size: 128)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3280, file: !3247, line: 170, baseType: !207, size: 64, offset: 128)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3280, file: !3247, line: 171, baseType: !175, size: 64, offset: 192)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3280, file: !3247, line: 172, baseType: !3286, size: 64, offset: 256)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!1312, !1283, !3194, !3279, !507, !543, !207}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3280, file: !3247, line: 174, baseType: !3286, size: 64, offset: 320)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3280, file: !3247, line: 176, baseType: !3291, size: 64, offset: 384)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!177, !1283, !3194, !3279, !1169}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3268, file: !3247, line: 90, baseType: !3263, size: 64, offset: 192)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3268, file: !3247, line: 91, baseType: !3296, size: 64, offset: 256)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3237, file: !3189, line: 143, baseType: !3298, size: 64, offset: 256)
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3299, size: 64)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{!3301, !3194}
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 64)
!3302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3303)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3304)
!3304 = !{!3305, !3306, !3310, !3314, !3320, !3324}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3303, file: !61, line: 40, baseType: !60, size: 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3303, file: !61, line: 41, baseType: !3307, size: 64, offset: 64)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{!240}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3303, file: !61, line: 42, baseType: !3311, size: 64, offset: 128)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{!175}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3303, file: !61, line: 43, baseType: !3315, size: 64, offset: 192)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!2470, !3318}
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 64)
!3319 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3303, file: !61, line: 44, baseType: !3321, size: 64, offset: 256)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{!2470}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3303, file: !61, line: 45, baseType: !2749, size: 64, offset: 320)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3237, file: !3189, line: 144, baseType: !3326, size: 64, offset: 320)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 64)
!3327 = !DISubroutineType(types: !3328)
!3328 = !{!2470, !3194}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3237, file: !3189, line: 145, baseType: !3330, size: 64, offset: 384)
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{null, !3194, !3333, !3334}
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3188, file: !3189, line: 70, baseType: !3336, size: 64, offset: 384)
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3337, size: 64)
!3337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !558, line: 123, size: 1024, elements: !3338)
!3338 = !{!3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3467, !3468, !3469, !3470, !3471}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3337, file: !558, line: 124, baseType: !714, size: 32)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3337, file: !558, line: 125, baseType: !714, size: 32, offset: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3337, file: !558, line: 135, baseType: !3336, size: 64, offset: 64)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3337, file: !558, line: 136, baseType: !481, size: 64, offset: 128)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3337, file: !558, line: 138, baseType: !1025, size: 192, align: 64, offset: 192)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3337, file: !558, line: 140, baseType: !2470, size: 64, offset: 384)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3337, file: !558, line: 141, baseType: !7, size: 32, offset: 448)
!3346 = !DIDerivedType(tag: DW_TAG_member, scope: !3337, file: !558, line: 142, baseType: !3347, size: 256, offset: 512)
!3347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3337, file: !558, line: 142, size: 256, elements: !3348)
!3348 = !{!3349, !3395, !3399}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3347, file: !558, line: 143, baseType: !3350, size: 192)
!3350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !558, line: 91, size: 192, elements: !3351)
!3351 = !{!3352, !3353, !3354}
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3350, file: !558, line: 92, baseType: !176, size: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3350, file: !558, line: 94, baseType: !1126, size: 64, offset: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3350, file: !558, line: 100, baseType: !3355, size: 64, offset: 128)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !558, line: 180, size: 704, elements: !3357)
!3357 = !{!3358, !3359, !3360, !3367, !3368, !3369, !3393, !3394}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3356, file: !558, line: 182, baseType: !3336, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3356, file: !558, line: 183, baseType: !7, size: 32, offset: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3356, file: !558, line: 186, baseType: !3361, size: 192, offset: 128)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3362, line: 19, size: 192, elements: !3363)
!3362 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3363 = !{!3364, !3365, !3366}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3361, file: !3362, line: 20, baseType: !2284, size: 128)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3361, file: !3362, line: 21, baseType: !7, size: 32, offset: 128)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3361, file: !3362, line: 22, baseType: !7, size: 32, offset: 160)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3356, file: !558, line: 187, baseType: !231, size: 32, offset: 320)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3356, file: !558, line: 188, baseType: !231, size: 32, offset: 352)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3356, file: !558, line: 189, baseType: !3370, size: 64, offset: 384)
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 64)
!3371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !558, line: 168, size: 320, elements: !3372)
!3372 = !{!3373, !3377, !3381, !3385, !3389}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3371, file: !558, line: 169, baseType: !3374, size: 64)
!3374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3375, size: 64)
!3375 = !DISubroutineType(types: !3376)
!3376 = !{!177, !655, !3355}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3371, file: !558, line: 171, baseType: !3378, size: 64, offset: 64)
!3378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3379, size: 64)
!3379 = !DISubroutineType(types: !3380)
!3380 = !{!177, !3336, !481, !361}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3371, file: !558, line: 173, baseType: !3382, size: 64, offset: 128)
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{!177, !3336}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3371, file: !558, line: 174, baseType: !3386, size: 64, offset: 192)
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{!177, !3336, !3336, !481}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3371, file: !558, line: 176, baseType: !3390, size: 64, offset: 256)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{!177, !655, !3336, !3355}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3356, file: !558, line: 192, baseType: !250, size: 128, offset: 448)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3356, file: !558, line: 194, baseType: !953, size: 128, offset: 576)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3347, file: !558, line: 144, baseType: !3396, size: 64)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !558, line: 103, size: 64, elements: !3397)
!3397 = !{!3398}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3396, file: !558, line: 104, baseType: !3336, size: 64)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3347, file: !558, line: 145, baseType: !3400, size: 256)
!3400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !558, line: 107, size: 256, elements: !3401)
!3401 = !{!3402, !3462, !3465, !3466}
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3400, file: !558, line: 108, baseType: !3403, size: 64)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3405)
!3405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !558, line: 217, size: 768, elements: !3406)
!3406 = !{!3407, !3427, !3431, !3435, !3439, !3443, !3447, !3451, !3452, !3453, !3454, !3458}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3405, file: !558, line: 222, baseType: !3408, size: 64)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DISubroutineType(types: !3410)
!3410 = !{!177, !3411}
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !558, line: 197, size: 1088, elements: !3413)
!3413 = !{!3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3412, file: !558, line: 199, baseType: !3336, size: 64)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3412, file: !558, line: 200, baseType: !1283, size: 64, offset: 64)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3412, file: !558, line: 201, baseType: !655, size: 64, offset: 128)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3412, file: !558, line: 202, baseType: !175, size: 64, offset: 192)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3412, file: !558, line: 205, baseType: !698, size: 192, offset: 256)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3412, file: !558, line: 206, baseType: !698, size: 192, offset: 448)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3412, file: !558, line: 207, baseType: !177, size: 32, offset: 640)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3412, file: !558, line: 208, baseType: !250, size: 128, offset: 704)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3412, file: !558, line: 209, baseType: !507, size: 64, offset: 832)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3412, file: !558, line: 211, baseType: !207, size: 64, offset: 896)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3412, file: !558, line: 212, baseType: !240, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3412, file: !558, line: 213, baseType: !240, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3412, file: !558, line: 214, baseType: !1197, size: 64, offset: 1024)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3405, file: !558, line: 223, baseType: !3428, size: 64, offset: 64)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{null, !3411}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3405, file: !558, line: 236, baseType: !3432, size: 64, offset: 128)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{!177, !655, !175}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3405, file: !558, line: 238, baseType: !3436, size: 64, offset: 192)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!175, !655, !1315}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3405, file: !558, line: 239, baseType: !3440, size: 64, offset: 256)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = !DISubroutineType(types: !3442)
!3442 = !{!175, !655, !175, !1315}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3405, file: !558, line: 240, baseType: !3444, size: 64, offset: 320)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = !DISubroutineType(types: !3446)
!3446 = !{null, !655, !175}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3405, file: !558, line: 242, baseType: !3448, size: 64, offset: 384)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{!1312, !3411, !507, !207, !543}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3405, file: !558, line: 252, baseType: !207, size: 64, offset: 448)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3405, file: !558, line: 259, baseType: !240, size: 8, offset: 512)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3405, file: !558, line: 260, baseType: !3448, size: 64, offset: 576)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3405, file: !558, line: 263, baseType: !3455, size: 64, offset: 640)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{!1369, !3411, !1370}
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3405, file: !558, line: 266, baseType: !3459, size: 64, offset: 704)
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{!177, !3411, !1169}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3400, file: !558, line: 109, baseType: !3463, size: 64, offset: 64)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !558, line: 31, flags: DIFlagFwdDecl)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3400, file: !558, line: 110, baseType: !543, size: 64, offset: 128)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3400, file: !558, line: 111, baseType: !3336, size: 64, offset: 192)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3337, file: !558, line: 148, baseType: !175, size: 64, offset: 768)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3337, file: !558, line: 154, baseType: !179, size: 64, offset: 832)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3337, file: !558, line: 156, baseType: !178, size: 16, offset: 896)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3337, file: !558, line: 157, baseType: !361, size: 16, offset: 912)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3337, file: !558, line: 158, baseType: !3472, size: 64, offset: 960)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !558, line: 32, flags: DIFlagFwdDecl)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3188, file: !3189, line: 71, baseType: !3475, size: 32, offset: 448)
!3475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3476, line: 19, size: 32, elements: !3477)
!3476 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3477 = !{!3478}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3475, file: !3476, line: 20, baseType: !1000, size: 32)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3188, file: !3189, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3188, file: !3189, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3188, file: !3189, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3188, file: !3189, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3188, file: !3189, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3185, file: !73, line: 463, baseType: !3184, size: 64, offset: 512)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3185, file: !73, line: 465, baseType: !3486, size: 64, offset: 576)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3185, file: !73, line: 467, baseType: !481, size: 64, offset: 640)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3185, file: !73, line: 468, baseType: !3490, size: 64, offset: 704)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3492)
!3492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3493)
!3493 = !{!3494, !3495, !3496, !3500, !3505, !3509}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3492, file: !73, line: 88, baseType: !481, size: 64)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3492, file: !73, line: 89, baseType: !3265, size: 64, offset: 64)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3492, file: !73, line: 90, baseType: !3497, size: 64, offset: 128)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!177, !3184, !3222}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3492, file: !73, line: 91, baseType: !3501, size: 64, offset: 192)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!3502 = !DISubroutineType(types: !3503)
!3503 = !{!507, !3184, !3504, !3333, !3334}
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3492, file: !73, line: 93, baseType: !3506, size: 64, offset: 256)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{null, !3184}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3492, file: !73, line: 95, baseType: !3510, size: 64, offset: 320)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3512)
!3512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3513)
!3513 = !{!3514, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3512, file: !80, line: 279, baseType: !3515, size: 64)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{!177, !3184}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3512, file: !80, line: 280, baseType: !3506, size: 64, offset: 64)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3512, file: !80, line: 281, baseType: !3515, size: 64, offset: 128)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3512, file: !80, line: 282, baseType: !3515, size: 64, offset: 192)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3512, file: !80, line: 283, baseType: !3515, size: 64, offset: 256)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3512, file: !80, line: 284, baseType: !3515, size: 64, offset: 320)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3512, file: !80, line: 285, baseType: !3515, size: 64, offset: 384)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3512, file: !80, line: 286, baseType: !3515, size: 64, offset: 448)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3512, file: !80, line: 287, baseType: !3515, size: 64, offset: 512)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3512, file: !80, line: 288, baseType: !3515, size: 64, offset: 576)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3512, file: !80, line: 289, baseType: !3515, size: 64, offset: 640)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3512, file: !80, line: 290, baseType: !3515, size: 64, offset: 704)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3512, file: !80, line: 291, baseType: !3515, size: 64, offset: 768)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3512, file: !80, line: 292, baseType: !3515, size: 64, offset: 832)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3512, file: !80, line: 293, baseType: !3515, size: 64, offset: 896)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3512, file: !80, line: 294, baseType: !3515, size: 64, offset: 960)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3512, file: !80, line: 295, baseType: !3515, size: 64, offset: 1024)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3512, file: !80, line: 296, baseType: !3515, size: 64, offset: 1088)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3512, file: !80, line: 297, baseType: !3515, size: 64, offset: 1152)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3512, file: !80, line: 298, baseType: !3515, size: 64, offset: 1216)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3512, file: !80, line: 299, baseType: !3515, size: 64, offset: 1280)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3512, file: !80, line: 300, baseType: !3515, size: 64, offset: 1344)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3512, file: !80, line: 301, baseType: !3515, size: 64, offset: 1408)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3185, file: !73, line: 470, baseType: !3541, size: 64, offset: 768)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3543, line: 82, size: 1408, elements: !3544)
!3543 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3544 = !{!3545, !3546, !3547, !3548, !3549, !3550, !3551, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3626, !3629, !3630}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3542, file: !3543, line: 83, baseType: !481, size: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3542, file: !3543, line: 84, baseType: !481, size: 64, offset: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3542, file: !3543, line: 85, baseType: !3184, size: 64, offset: 128)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3542, file: !3543, line: 86, baseType: !3265, size: 64, offset: 192)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3542, file: !3543, line: 87, baseType: !3265, size: 64, offset: 256)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3542, file: !3543, line: 88, baseType: !3265, size: 64, offset: 320)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3542, file: !3543, line: 90, baseType: !3552, size: 64, offset: 384)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{!177, !3184, !3555}
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3557)
!3557 = !{!3558, !3559, !3560, !3561, !3562, !3563, !3564, !3577, !3590, !3591, !3592, !3593, !3594, !3602, !3603, !3604, !3605, !3606, !3607}
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3556, file: !67, line: 96, baseType: !481, size: 64)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3556, file: !67, line: 97, baseType: !3541, size: 64, offset: 64)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3556, file: !67, line: 99, baseType: !572, size: 64, offset: 128)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3556, file: !67, line: 100, baseType: !481, size: 64, offset: 192)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3556, file: !67, line: 102, baseType: !240, size: 8, offset: 256)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3556, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3556, file: !67, line: 105, baseType: !3565, size: 64, offset: 320)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3567)
!3567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3568, line: 262, size: 1600, elements: !3569)
!3568 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3569 = !{!3570, !3571, !3572, !3576}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3567, file: !3568, line: 263, baseType: !2662, size: 256)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3567, file: !3568, line: 264, baseType: !2662, size: 256, offset: 256)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3567, file: !3568, line: 265, baseType: !3573, size: 1024, offset: 512)
!3573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 1024, elements: !3574)
!3574 = !{!3575}
!3575 = !DISubrange(count: 128)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3567, file: !3568, line: 266, baseType: !2470, size: 64, offset: 1536)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3556, file: !67, line: 106, baseType: !3578, size: 64, offset: 384)
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3580)
!3580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3568, line: 210, size: 256, elements: !3581)
!3581 = !{!3582, !3586, !3588, !3589}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3580, file: !3568, line: 211, baseType: !3583, size: 72)
!3583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1137, size: 72, elements: !3584)
!3584 = !{!3585}
!3585 = !DISubrange(count: 9)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3580, file: !3568, line: 212, baseType: !3587, size: 64, offset: 128)
!3587 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3568, line: 14, baseType: !176)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3580, file: !3568, line: 213, baseType: !184, size: 32, offset: 192)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3580, file: !3568, line: 214, baseType: !184, size: 32, offset: 224)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3556, file: !67, line: 108, baseType: !3515, size: 64, offset: 448)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3556, file: !67, line: 109, baseType: !3506, size: 64, offset: 512)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3556, file: !67, line: 110, baseType: !3515, size: 64, offset: 576)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3556, file: !67, line: 111, baseType: !3506, size: 64, offset: 640)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3556, file: !67, line: 112, baseType: !3595, size: 64, offset: 704)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{!177, !3184, !3598}
!3598 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3599)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3600)
!3600 = !{!3601}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3599, file: !80, line: 51, baseType: !177, size: 32)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3556, file: !67, line: 113, baseType: !3515, size: 64, offset: 768)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3556, file: !67, line: 114, baseType: !3265, size: 64, offset: 832)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3556, file: !67, line: 115, baseType: !3265, size: 64, offset: 896)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3556, file: !67, line: 117, baseType: !3510, size: 64, offset: 960)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3556, file: !67, line: 118, baseType: !3506, size: 64, offset: 1024)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3556, file: !67, line: 120, baseType: !3608, size: 64, offset: 1088)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3542, file: !3543, line: 91, baseType: !3497, size: 64, offset: 448)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3542, file: !3543, line: 92, baseType: !3515, size: 64, offset: 512)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3542, file: !3543, line: 93, baseType: !3506, size: 64, offset: 576)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3542, file: !3543, line: 94, baseType: !3515, size: 64, offset: 640)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3542, file: !3543, line: 95, baseType: !3506, size: 64, offset: 704)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3542, file: !3543, line: 97, baseType: !3515, size: 64, offset: 768)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3542, file: !3543, line: 98, baseType: !3515, size: 64, offset: 832)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3542, file: !3543, line: 100, baseType: !3595, size: 64, offset: 896)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3542, file: !3543, line: 101, baseType: !3515, size: 64, offset: 960)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3542, file: !3543, line: 103, baseType: !3515, size: 64, offset: 1024)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3542, file: !3543, line: 105, baseType: !3515, size: 64, offset: 1088)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3542, file: !3543, line: 107, baseType: !3510, size: 64, offset: 1152)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3542, file: !3543, line: 109, baseType: !3623, size: 64, offset: 1216)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 64)
!3624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3625)
!3625 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3543, line: 109, flags: DIFlagFwdDecl)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3542, file: !3543, line: 111, baseType: !3627, size: 64, offset: 1280)
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3628, size: 64)
!3628 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3543, line: 111, flags: DIFlagFwdDecl)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3542, file: !3543, line: 112, baseType: !587, offset: 1344)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3542, file: !3543, line: 114, baseType: !240, size: 8, offset: 1344)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3185, file: !73, line: 471, baseType: !3555, size: 64, offset: 832)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3185, file: !73, line: 473, baseType: !175, size: 64, offset: 896)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3185, file: !73, line: 475, baseType: !175, size: 64, offset: 960)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3185, file: !73, line: 480, baseType: !698, size: 192, offset: 1024)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3185, file: !73, line: 484, baseType: !3636, size: 576, offset: 1216)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3637)
!3637 = !{!3638, !3639, !3640, !3641, !3642, !3643}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3636, file: !73, line: 362, baseType: !250, size: 128)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3636, file: !73, line: 363, baseType: !250, size: 128, offset: 128)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3636, file: !73, line: 364, baseType: !250, size: 128, offset: 256)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3636, file: !73, line: 365, baseType: !250, size: 128, offset: 384)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3636, file: !73, line: 366, baseType: !240, size: 8, offset: 512)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3636, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3185, file: !73, line: 485, baseType: !3645, size: 2304, offset: 1792)
!3645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3646)
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3742, !3746}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3645, file: !80, line: 566, baseType: !3598, size: 32)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3645, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3645, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3645, file: !80, line: 569, baseType: !240, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3645, file: !80, line: 570, baseType: !240, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3645, file: !80, line: 571, baseType: !240, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3645, file: !80, line: 572, baseType: !240, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3645, file: !80, line: 573, baseType: !240, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3645, file: !80, line: 574, baseType: !240, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3645, file: !80, line: 575, baseType: !240, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3645, file: !80, line: 576, baseType: !240, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3645, file: !80, line: 577, baseType: !231, size: 32, offset: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3645, file: !80, line: 578, baseType: !444, offset: 96)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3645, file: !80, line: 580, baseType: !250, size: 128, offset: 128)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3645, file: !80, line: 581, baseType: !1905, size: 192, offset: 256)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3645, file: !80, line: 582, baseType: !3663, size: 64, offset: 448)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3665, line: 43, size: 1472, elements: !3666)
!3665 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3666 = !{!3667, !3668, !3669, !3670, !3671, !3674, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3664, file: !3665, line: 44, baseType: !481, size: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3664, file: !3665, line: 45, baseType: !177, size: 32, offset: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3664, file: !3665, line: 46, baseType: !250, size: 128, offset: 128)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3664, file: !3665, line: 47, baseType: !444, offset: 256)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3664, file: !3665, line: 48, baseType: !3672, size: 64, offset: 256)
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 64)
!3673 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3664, file: !3665, line: 49, baseType: !3675, size: 320, offset: 320)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3676, line: 11, size: 320, elements: !3677)
!3676 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3677 = !{!3678, !3679, !3680, !3685}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3675, file: !3676, line: 16, baseType: !581, size: 128)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3675, file: !3676, line: 17, baseType: !176, size: 64, offset: 128)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3675, file: !3676, line: 18, baseType: !3681, size: 64, offset: 192)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{null, !3684}
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3675, file: !3676, line: 19, baseType: !231, size: 32, offset: 256)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3664, file: !3665, line: 50, baseType: !176, size: 64, offset: 640)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3664, file: !3665, line: 51, baseType: !1077, size: 64, offset: 704)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3664, file: !3665, line: 52, baseType: !1077, size: 64, offset: 768)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3664, file: !3665, line: 53, baseType: !1077, size: 64, offset: 832)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3664, file: !3665, line: 54, baseType: !1077, size: 64, offset: 896)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3664, file: !3665, line: 55, baseType: !1077, size: 64, offset: 960)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3664, file: !3665, line: 56, baseType: !176, size: 64, offset: 1024)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3664, file: !3665, line: 57, baseType: !176, size: 64, offset: 1088)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3664, file: !3665, line: 58, baseType: !176, size: 64, offset: 1152)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3664, file: !3665, line: 59, baseType: !176, size: 64, offset: 1216)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3664, file: !3665, line: 60, baseType: !176, size: 64, offset: 1280)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3664, file: !3665, line: 61, baseType: !3184, size: 64, offset: 1344)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3664, file: !3665, line: 62, baseType: !240, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3664, file: !3665, line: 63, baseType: !240, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3645, file: !80, line: 583, baseType: !240, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3645, file: !80, line: 584, baseType: !240, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3645, file: !80, line: 585, baseType: !240, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3645, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3645, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3645, file: !80, line: 592, baseType: !1069, size: 512, offset: 576)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3645, file: !80, line: 593, baseType: !179, size: 64, offset: 1088)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3645, file: !80, line: 594, baseType: !1930, size: 256, offset: 1152)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3645, file: !80, line: 595, baseType: !953, size: 128, offset: 1408)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3645, file: !80, line: 596, baseType: !3672, size: 64, offset: 1536)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3645, file: !80, line: 597, baseType: !714, size: 32, offset: 1600)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3645, file: !80, line: 598, baseType: !714, size: 32, offset: 1632)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3645, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3645, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3645, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3645, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3645, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3645, file: !80, line: 604, baseType: !240, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3645, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3645, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3645, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3645, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3645, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3645, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3645, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3645, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3645, file: !80, line: 613, baseType: !177, size: 32, offset: 1792)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3645, file: !80, line: 614, baseType: !177, size: 32, offset: 1824)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3645, file: !80, line: 615, baseType: !179, size: 64, offset: 1856)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3645, file: !80, line: 616, baseType: !179, size: 64, offset: 1920)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3645, file: !80, line: 617, baseType: !179, size: 64, offset: 1984)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3645, file: !80, line: 618, baseType: !179, size: 64, offset: 2048)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3645, file: !80, line: 620, baseType: !3733, size: 64, offset: 2112)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3735)
!3735 = !{!3736, !3737, !3738, !3739}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3734, file: !80, line: 537, baseType: !444)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3734, file: !80, line: 538, baseType: !7, size: 32)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3734, file: !80, line: 540, baseType: !250, size: 128, offset: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3734, file: !80, line: 543, baseType: !3740, size: 64, offset: 192)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3645, file: !80, line: 621, baseType: !3743, size: 64, offset: 2176)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{null, !3184, !308}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3645, file: !80, line: 622, baseType: !3747, size: 64, offset: 2240)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3185, file: !73, line: 486, baseType: !3750, size: 64, offset: 4096)
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 64)
!3751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3752)
!3752 = !{!3753, !3754, !3755, !3759, !3760, !3761}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3751, file: !80, line: 643, baseType: !3512, size: 1472)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3751, file: !80, line: 644, baseType: !3515, size: 64, offset: 1472)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3751, file: !80, line: 645, baseType: !3756, size: 64, offset: 1536)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{null, !3184, !240}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3751, file: !80, line: 646, baseType: !3515, size: 64, offset: 1600)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3751, file: !80, line: 647, baseType: !3506, size: 64, offset: 1664)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3751, file: !80, line: 648, baseType: !3506, size: 64, offset: 1728)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3185, file: !73, line: 493, baseType: !3763, size: 64, offset: 4160)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3185, file: !73, line: 499, baseType: !250, size: 128, offset: 4224)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3185, file: !73, line: 502, baseType: !3767, size: 64, offset: 4352)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3769)
!3769 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3185, file: !73, line: 504, baseType: !314, size: 64, offset: 4416)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3185, file: !73, line: 505, baseType: !179, size: 64, offset: 4480)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3185, file: !73, line: 510, baseType: !179, size: 64, offset: 4544)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3185, file: !73, line: 511, baseType: !3774, size: 64, offset: 4608)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3776)
!3776 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3185, file: !73, line: 513, baseType: !3778, size: 64, offset: 4672)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3780)
!3780 = !{!3781, !3782}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3779, file: !73, line: 293, baseType: !7, size: 32)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3779, file: !73, line: 294, baseType: !176, size: 64, offset: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3185, file: !73, line: 515, baseType: !250, size: 128, offset: 4736)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3185, file: !73, line: 526, baseType: !3785, offset: 4864)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3786, line: 5, elements: !458)
!3786 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3185, file: !73, line: 528, baseType: !3788, size: 64, offset: 4864)
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3789, size: 64)
!3789 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3790, line: 14, flags: DIFlagFwdDecl)
!3790 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3185, file: !73, line: 529, baseType: !3792, size: 64, offset: 4928)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3794, line: 17, size: 192, elements: !3795)
!3794 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3795 = !{!3796, !3797, !3880}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3793, file: !3794, line: 18, baseType: !3792, size: 64)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3793, file: !3794, line: 19, baseType: !3798, size: 64, offset: 64)
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3800)
!3800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3794, line: 110, size: 1152, elements: !3801)
!3801 = !{!3802, !3806, !3810, !3816, !3822, !3826, !3830, !3835, !3839, !3840, !3844, !3848, !3852, !3863, !3864, !3865, !3866, !3876}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3800, file: !3794, line: 111, baseType: !3803, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DISubroutineType(types: !3805)
!3805 = !{!3792, !3792}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3800, file: !3794, line: 112, baseType: !3807, size: 64, offset: 64)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DISubroutineType(types: !3809)
!3809 = !{null, !3792}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3800, file: !3794, line: 113, baseType: !3811, size: 64, offset: 128)
!3811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3812, size: 64)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{!240, !3814}
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 64)
!3815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3793)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3800, file: !3794, line: 114, baseType: !3817, size: 64, offset: 192)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!2470, !3814, !3820}
!3820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3821, size: 64)
!3821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3185)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3800, file: !3794, line: 116, baseType: !3823, size: 64, offset: 256)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{!240, !3814, !481}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3800, file: !3794, line: 118, baseType: !3827, size: 64, offset: 320)
!3827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3828, size: 64)
!3828 = !DISubroutineType(types: !3829)
!3829 = !{!177, !3814, !481, !7, !175, !207}
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3800, file: !3794, line: 123, baseType: !3831, size: 64, offset: 384)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{!177, !3814, !481, !3834, !207}
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3800, file: !3794, line: 126, baseType: !3836, size: 64, offset: 448)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{!481, !3814}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3800, file: !3794, line: 127, baseType: !3836, size: 64, offset: 512)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3800, file: !3794, line: 128, baseType: !3841, size: 64, offset: 576)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{!3792, !3814}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3800, file: !3794, line: 130, baseType: !3845, size: 64, offset: 640)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!3792, !3814, !3792}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3800, file: !3794, line: 133, baseType: !3849, size: 64, offset: 704)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{!3792, !3814, !481}
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3800, file: !3794, line: 135, baseType: !3853, size: 64, offset: 768)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{!177, !3814, !481, !481, !7, !7, !3856}
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3794, line: 43, size: 640, elements: !3858)
!3858 = !{!3859, !3860, !3861}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3857, file: !3794, line: 44, baseType: !3792, size: 64)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3857, file: !3794, line: 45, baseType: !7, size: 32, offset: 64)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3857, file: !3794, line: 46, baseType: !3862, size: 512, offset: 128)
!3862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 512, elements: !1107)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3800, file: !3794, line: 140, baseType: !3845, size: 64, offset: 832)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3800, file: !3794, line: 143, baseType: !3841, size: 64, offset: 896)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3800, file: !3794, line: 145, baseType: !3803, size: 64, offset: 960)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3800, file: !3794, line: 146, baseType: !3867, size: 64, offset: 1024)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!177, !3814, !3870}
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3794, line: 29, size: 128, elements: !3872)
!3872 = !{!3873, !3874, !3875}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3871, file: !3794, line: 30, baseType: !7, size: 32)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3871, file: !3794, line: 31, baseType: !7, size: 32, offset: 32)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3871, file: !3794, line: 32, baseType: !3814, size: 64, offset: 64)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3800, file: !3794, line: 148, baseType: !3877, size: 64, offset: 1088)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{!177, !3814, !3184}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3793, file: !3794, line: 20, baseType: !3184, size: 64, offset: 128)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3185, file: !73, line: 534, baseType: !538, size: 32, offset: 4992)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3185, file: !73, line: 535, baseType: !231, size: 32, offset: 5024)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3185, file: !73, line: 537, baseType: !444, offset: 5056)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3185, file: !73, line: 538, baseType: !250, size: 128, offset: 5056)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3185, file: !73, line: 540, baseType: !3886, size: 64, offset: 5184)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3888, line: 54, size: 960, elements: !3889)
!3888 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3889 = !{!3890, !3891, !3892, !3893, !3894, !3895, !3896, !3900, !3904, !3905, !3906, !3907, !3911, !3915, !3916}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3887, file: !3888, line: 55, baseType: !481, size: 64)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3887, file: !3888, line: 56, baseType: !572, size: 64, offset: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3887, file: !3888, line: 58, baseType: !3265, size: 64, offset: 128)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3887, file: !3888, line: 59, baseType: !3265, size: 64, offset: 192)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3887, file: !3888, line: 60, baseType: !3194, size: 64, offset: 256)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3887, file: !3888, line: 62, baseType: !3497, size: 64, offset: 320)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3887, file: !3888, line: 63, baseType: !3897, size: 64, offset: 384)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{!507, !3184, !3504}
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3887, file: !3888, line: 65, baseType: !3901, size: 64, offset: 448)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{null, !3886}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3887, file: !3888, line: 66, baseType: !3506, size: 64, offset: 512)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3887, file: !3888, line: 68, baseType: !3515, size: 64, offset: 576)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3887, file: !3888, line: 70, baseType: !3301, size: 64, offset: 640)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3887, file: !3888, line: 71, baseType: !3908, size: 64, offset: 704)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = !DISubroutineType(types: !3910)
!3910 = !{!2470, !3184}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3887, file: !3888, line: 73, baseType: !3912, size: 64, offset: 768)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{null, !3184, !3333, !3334}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3887, file: !3888, line: 75, baseType: !3510, size: 64, offset: 832)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3887, file: !3888, line: 77, baseType: !3627, size: 64, offset: 896)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3185, file: !73, line: 541, baseType: !3265, size: 64, offset: 5248)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3185, file: !73, line: 543, baseType: !3506, size: 64, offset: 5312)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3185, file: !73, line: 544, baseType: !3920, size: 64, offset: 5376)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3185, file: !73, line: 545, baseType: !3923, size: 64, offset: 5440)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3185, file: !73, line: 547, baseType: !240, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3185, file: !73, line: 548, baseType: !240, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3185, file: !73, line: 549, baseType: !240, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3185, file: !73, line: 550, baseType: !240, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !191, file: !192, line: 86, baseType: !3475, size: 32, offset: 128)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !191, file: !192, line: 87, baseType: !1905, size: 192, offset: 192)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !191, file: !192, line: 89, baseType: !177, size: 32, offset: 384)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "generation", scope: !191, file: !192, line: 90, baseType: !177, size: 32, offset: 416)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "current_tlabel", scope: !191, file: !192, line: 91, baseType: !177, size: 32, offset: 448)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "tlabel_mask", scope: !191, file: !192, line: 92, baseType: !179, size: 64, offset: 512)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_list", scope: !191, file: !192, line: 93, baseType: !250, size: 128, offset: 576)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "reset_jiffies", scope: !191, file: !192, line: 94, baseType: !179, size: 64, offset: 704)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "split_timeout_hi", scope: !191, file: !192, line: 96, baseType: !231, size: 32, offset: 768)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "split_timeout_lo", scope: !191, file: !192, line: 97, baseType: !231, size: 32, offset: 800)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "split_timeout_cycles", scope: !191, file: !192, line: 98, baseType: !7, size: 32, offset: 832)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "split_timeout_jiffies", scope: !191, file: !192, line: 99, baseType: !7, size: 32, offset: 864)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !191, file: !192, line: 101, baseType: !183, size: 64, offset: 896)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "max_receive", scope: !191, file: !192, line: 102, baseType: !7, size: 32, offset: 960)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "link_speed", scope: !191, file: !192, line: 103, baseType: !177, size: 32, offset: 992)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "config_rom_generation", scope: !191, file: !192, line: 104, baseType: !177, size: 32, offset: 1024)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !191, file: !192, line: 106, baseType: !444, offset: 1056)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "local_node", scope: !191, file: !192, line: 108, baseType: !3947, size: 64, offset: 1088)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3948, size: 64)
!3948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fw_node", file: !198, line: 174, size: 320, elements: !3949)
!3949 = !{!3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963}
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !3948, file: !198, line: 175, baseType: !323, size: 16)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !3948, file: !198, line: 176, baseType: !1136, size: 8, offset: 16)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "port_count", scope: !3948, file: !198, line: 177, baseType: !1136, size: 8, offset: 24)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "link_on", scope: !3948, file: !198, line: 178, baseType: !1136, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "initiated_reset", scope: !3948, file: !198, line: 179, baseType: !1136, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "b_path", scope: !3948, file: !198, line: 180, baseType: !1136, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "phy_speed", scope: !3948, file: !198, line: 181, baseType: !1136, size: 2, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed", scope: !3948, file: !198, line: 182, baseType: !1136, size: 2, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !3948, file: !198, line: 184, baseType: !1136, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 40)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "max_hops", scope: !3948, file: !198, line: 185, baseType: !1136, size: 4, offset: 44, flags: DIFlagBitField, extraData: i64 40)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !3948, file: !198, line: 186, baseType: !1000, size: 32, offset: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3948, file: !198, line: 189, baseType: !250, size: 128, offset: 128)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3948, file: !198, line: 192, baseType: !175, size: 64, offset: 256)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !3948, file: !198, line: 194, baseType: !3964, offset: 320)
!3964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3947, elements: !1943)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "root_node", scope: !191, file: !192, line: 109, baseType: !3947, size: 64, offset: 1152)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "irm_node", scope: !191, file: !192, line: 110, baseType: !3947, size: 64, offset: 1216)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !191, file: !192, line: 111, baseType: !1136, size: 8, offset: 1280)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "gap_count", scope: !191, file: !192, line: 112, baseType: !177, size: 32, offset: 1312)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "beta_repeaters_present", scope: !191, file: !192, line: 113, baseType: !240, size: 8, offset: 1344)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !191, file: !192, line: 115, baseType: !177, size: 32, offset: 1376)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !191, file: !192, line: 116, baseType: !250, size: 128, offset: 1408)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "phy_receiver_list", scope: !191, file: !192, line: 118, baseType: !250, size: 128, offset: 1536)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "br_work", scope: !191, file: !192, line: 120, baseType: !3974, size: 704, offset: 1664)
!3974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !101, line: 115, size: 704, elements: !3975)
!3975 = !{!3976, !3977, !3978, !3979}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3974, file: !101, line: 116, baseType: !1930, size: 256)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3974, file: !101, line: 117, baseType: !3675, size: 320, offset: 256)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3974, file: !101, line: 120, baseType: !2696, size: 64, offset: 576)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3974, file: !101, line: 121, baseType: !177, size: 32, offset: 640)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "br_short", scope: !191, file: !192, line: 121, baseType: !240, size: 8, offset: 2368)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "bm_work", scope: !191, file: !192, line: 123, baseType: !3974, size: 704, offset: 2432)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "bm_retries", scope: !191, file: !192, line: 124, baseType: !177, size: 32, offset: 3136)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "bm_generation", scope: !191, file: !192, line: 125, baseType: !177, size: 32, offset: 3168)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "bm_node_id", scope: !191, file: !192, line: 126, baseType: !177, size: 32, offset: 3200)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "bm_abdicate", scope: !191, file: !192, line: 127, baseType: !240, size: 8, offset: 3232)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "priority_budget_implemented", scope: !191, file: !192, line: 129, baseType: !240, size: 8, offset: 3240)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast_channel_auto_allocated", scope: !191, file: !192, line: 130, baseType: !240, size: 8, offset: 3248)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast_channel_allocated", scope: !191, file: !192, line: 132, baseType: !240, size: 8, offset: 3256)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast_channel", scope: !191, file: !192, line: 133, baseType: !231, size: 32, offset: 3264)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "topology_map", scope: !191, file: !192, line: 134, baseType: !3991, size: 8192, offset: 3296)
!3991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 8192, elements: !3992)
!3992 = !{!3993}
!3993 = !DISubrange(count: 256)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "maint_utility_register", scope: !191, file: !192, line: 136, baseType: !185, size: 32, offset: 11488)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "registers", scope: !188, file: !3, line: 181, baseType: !507, size: 64, offset: 11520)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !188, file: !3, line: 182, baseType: !177, size: 32, offset: 11584)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "generation", scope: !188, file: !3, line: 183, baseType: !177, size: 32, offset: 11616)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "request_generation", scope: !188, file: !3, line: 184, baseType: !177, size: 32, offset: 11648)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !188, file: !3, line: 185, baseType: !7, size: 32, offset: 11680)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "pri_req_max", scope: !188, file: !3, line: 186, baseType: !7, size: 32, offset: 11712)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "bus_time", scope: !188, file: !3, line: 187, baseType: !231, size: 32, offset: 11744)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "bus_time_running", scope: !188, file: !3, line: 188, baseType: !240, size: 8, offset: 11776)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "is_root", scope: !188, file: !3, line: 189, baseType: !240, size: 8, offset: 11784)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "csr_state_setclear_abdicate", scope: !188, file: !3, line: 190, baseType: !240, size: 8, offset: 11792)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "n_ir", scope: !188, file: !3, line: 191, baseType: !177, size: 32, offset: 11808)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "n_it", scope: !188, file: !3, line: 192, baseType: !177, size: 32, offset: 11840)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !188, file: !3, line: 197, baseType: !444, offset: 11872)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "phy_reg_mutex", scope: !188, file: !3, line: 199, baseType: !698, size: 192, offset: 11904)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "misc_buffer", scope: !188, file: !3, line: 201, baseType: !175, size: 64, offset: 12096)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "misc_buffer_bus", scope: !188, file: !3, line: 202, baseType: !238, size: 64, offset: 12160)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "ar_request_ctx", scope: !188, file: !3, line: 204, baseType: !4012, size: 1216, offset: 12224)
!4012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ar_context", file: !3, line: 87, size: 1216, elements: !4013)
!4013 = !{!4014, !4015, !4017, !4018, !4030, !4031, !4032, !4033, !4034}
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "ohci", scope: !4012, file: !3, line: 88, baseType: !187, size: 64)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4012, file: !3, line: 89, baseType: !4016, size: 512, offset: 64)
!4016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !340, size: 512, elements: !1107)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4012, file: !3, line: 90, baseType: !175, size: 64, offset: 576)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "descriptors", scope: !4012, file: !3, line: 91, baseType: !4019, size: 64, offset: 640)
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4020, size: 64)
!4020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "descriptor", file: !3, line: 64, size: 128, align: 128, elements: !4021)
!4021 = !{!4022, !4024, !4025, !4027, !4028, !4029}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "req_count", scope: !4020, file: !3, line: 65, baseType: !4023, size: 16)
!4023 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !186, line: 29, baseType: !324)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !4020, file: !3, line: 66, baseType: !4023, size: 16, offset: 16)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "data_address", scope: !4020, file: !3, line: 67, baseType: !4026, size: 32, offset: 32)
!4026 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !186, line: 31, baseType: !184)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "branch_address", scope: !4020, file: !3, line: 68, baseType: !4026, size: 32, offset: 64)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "res_count", scope: !4020, file: !3, line: 69, baseType: !4023, size: 16, offset: 96)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_status", scope: !4020, file: !3, line: 70, baseType: !4023, size: 16, offset: 112)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "descriptors_bus", scope: !4012, file: !3, line: 92, baseType: !238, size: 64, offset: 704)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4012, file: !3, line: 93, baseType: !175, size: 64, offset: 768)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "last_buffer_index", scope: !4012, file: !3, line: 94, baseType: !7, size: 32, offset: 832)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4012, file: !3, line: 95, baseType: !231, size: 32, offset: 864)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "tasklet", scope: !4012, file: !3, line: 96, baseType: !4035, size: 320, offset: 896)
!4035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !152, line: 609, size: 320, elements: !4036)
!4036 = !{!4037, !4039, !4040, !4041, !4042, !4053}
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4035, file: !152, line: 611, baseType: !4038, size: 64)
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4035, file: !152, line: 612, baseType: !176, size: 64, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4035, file: !152, line: 613, baseType: !714, size: 32, offset: 128)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !4035, file: !152, line: 614, baseType: !240, size: 8, offset: 160)
!4042 = !DIDerivedType(tag: DW_TAG_member, scope: !4035, file: !152, line: 615, baseType: !4043, size: 64, offset: 192)
!4043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4035, file: !152, line: 615, size: 64, elements: !4044)
!4044 = !{!4045, !4049}
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4043, file: !152, line: 616, baseType: !4046, size: 64)
!4046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4047, size: 64)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{null, !176}
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4043, file: !152, line: 617, baseType: !4050, size: 64)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{null, !4038}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4035, file: !152, line: 619, baseType: !176, size: 64, offset: 256)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "ar_response_ctx", scope: !188, file: !3, line: 205, baseType: !4012, size: 1216, offset: 13440)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "at_request_ctx", scope: !188, file: !3, line: 206, baseType: !4056, size: 960, offset: 14656)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !3, line: 117, size: 960, elements: !4057)
!4057 = !{!4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4075, !4076, !4077, !4078, !4084}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "ohci", scope: !4056, file: !3, line: 118, baseType: !187, size: 64)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4056, file: !3, line: 119, baseType: !231, size: 32, offset: 64)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocation", scope: !4056, file: !3, line: 120, baseType: !177, size: 32, offset: 96)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "current_bus", scope: !4056, file: !3, line: 121, baseType: !231, size: 32, offset: 128)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !4056, file: !3, line: 122, baseType: !240, size: 8, offset: 160)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !4056, file: !3, line: 123, baseType: !240, size: 8, offset: 168)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_list", scope: !4056, file: !3, line: 130, baseType: !250, size: 128, offset: 192)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_tail", scope: !4056, file: !3, line: 136, baseType: !4066, size: 64, offset: 320)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "descriptor_buffer", file: !3, line: 109, size: 384, elements: !4068)
!4068 = !{!4069, !4070, !4071, !4072, !4073}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4067, file: !3, line: 110, baseType: !250, size: 128)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_bus", scope: !4067, file: !3, line: 111, baseType: !238, size: 64, offset: 128)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !4067, file: !3, line: 112, baseType: !207, size: 64, offset: 192)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4067, file: !3, line: 113, baseType: !207, size: 64, offset: 256)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4067, file: !3, line: 114, baseType: !4074, offset: 384)
!4074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4020, align: 128, elements: !1943)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4056, file: !3, line: 142, baseType: !4019, size: 64, offset: 384)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4056, file: !3, line: 148, baseType: !4019, size: 64, offset: 448)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "prev_z", scope: !4056, file: !3, line: 149, baseType: !177, size: 32, offset: 512)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4056, file: !3, line: 151, baseType: !4079, size: 64, offset: 576)
!4079 = !DIDerivedType(tag: DW_TAG_typedef, name: "descriptor_callback_t", file: !3, line: 101, baseType: !4080)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!177, !4083, !4019, !4019}
!4083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "tasklet", scope: !4056, file: !3, line: 153, baseType: !4035, size: 320, offset: 640)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "at_response_ctx", scope: !188, file: !3, line: 207, baseType: !4056, size: 960, offset: 15616)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "it_context_support", scope: !188, file: !3, line: 209, baseType: !231, size: 32, offset: 16576)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "it_context_mask", scope: !188, file: !3, line: 210, baseType: !231, size: 32, offset: 16608)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "it_context_list", scope: !188, file: !3, line: 211, baseType: !4089, size: 64, offset: 16640)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iso_context", file: !3, line: 163, size: 1664, elements: !4091)
!4091 = !{!4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4090, file: !3, line: 164, baseType: !278, size: 384)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4090, file: !3, line: 165, baseType: !4056, size: 960, offset: 384)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4090, file: !3, line: 166, baseType: !175, size: 64, offset: 1344)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "header_length", scope: !4090, file: !3, line: 167, baseType: !207, size: 64, offset: 1408)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "flushing_completions", scope: !4090, file: !3, line: 168, baseType: !176, size: 64, offset: 1472)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "mc_buffer_bus", scope: !4090, file: !3, line: 169, baseType: !231, size: 32, offset: 1536)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "mc_completed", scope: !4090, file: !3, line: 170, baseType: !323, size: 16, offset: 1568)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "last_timestamp", scope: !4090, file: !3, line: 171, baseType: !323, size: 16, offset: 1584)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4090, file: !3, line: 172, baseType: !1136, size: 8, offset: 1600)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !4090, file: !3, line: 173, baseType: !1136, size: 8, offset: 1608)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "ir_context_channels", scope: !188, file: !3, line: 212, baseType: !179, size: 64, offset: 16704)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "ir_context_support", scope: !188, file: !3, line: 213, baseType: !231, size: 32, offset: 16768)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "ir_context_mask", scope: !188, file: !3, line: 214, baseType: !231, size: 32, offset: 16800)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "ir_context_list", scope: !188, file: !3, line: 215, baseType: !4089, size: 64, offset: 16832)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "mc_channels", scope: !188, file: !3, line: 216, baseType: !179, size: 64, offset: 16896)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "mc_allocated", scope: !188, file: !3, line: 217, baseType: !240, size: 8, offset: 16960)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "config_rom", scope: !188, file: !3, line: 219, baseType: !4109, size: 64, offset: 17024)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "config_rom_bus", scope: !188, file: !3, line: 220, baseType: !238, size: 64, offset: 17088)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "next_config_rom", scope: !188, file: !3, line: 221, baseType: !4109, size: 64, offset: 17152)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "next_config_rom_bus", scope: !188, file: !3, line: 222, baseType: !238, size: 64, offset: 17216)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "next_header", scope: !188, file: !3, line: 223, baseType: !185, size: 32, offset: 17280)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "self_id", scope: !188, file: !3, line: 225, baseType: !4115, size: 64, offset: 17344)
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "self_id_bus", scope: !188, file: !3, line: 226, baseType: !238, size: 64, offset: 17408)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "bus_reset_work", scope: !188, file: !3, line: 227, baseType: !1930, size: 256, offset: 17472)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "self_id_buffer", scope: !188, file: !3, line: 229, baseType: !4119, size: 16384, offset: 17728)
!4119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 16384, elements: !4120)
!4120 = !{!4121}
!4121 = !DISubrange(count: 512)
!4122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4123, size: 64)
!4123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "driver_data", file: !3, line: 1274, size: 128, elements: !4124)
!4124 = !{!4125, !4127}
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "inline_data", scope: !4123, file: !3, line: 1275, baseType: !4126, size: 64)
!4126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1136, size: 64, elements: !1107)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !4123, file: !3, line: 1276, baseType: !224, size: 64, offset: 64)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !253)
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4132)
!4132 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !178)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !483)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!4139 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !4140, line: 155, baseType: !177)
!4140 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!4141 = !{!4142, !4194, !4199, !4204, !4206, !4211, !4216, !4218, !4223, !4228, !4230, !4235, !4240, !4245, !4250, !4255, !4260, !4262, !4264, !4266, !0, !4268, !4271, !4276, !4554, !4559, !4562, !4565, !4567, !4574, !4580, !4583, !4586, !4589, !4592, !4595}
!4142 = !DIGlobalVariableExpression(var: !4143, expr: !DIExpression())
!4143 = distinct !DIGlobalVariable(name: "__param_quirks", scope: !2, file: !3, line: 337, type: !4144, isLocal: true, isDefinition: true, align: 64)
!4144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4145)
!4145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4146, line: 69, size: 320, elements: !4147)
!4146 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4147 = !{!4148, !4149, !4150, !4166, !4168, !4172, !4173}
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4145, file: !4146, line: 70, baseType: !481, size: 64)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4145, file: !4146, line: 71, baseType: !572, size: 64, offset: 64)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4145, file: !4146, line: 72, baseType: !4151, size: 64, offset: 128)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4153)
!4153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4146, line: 47, size: 256, elements: !4154)
!4154 = !{!4155, !4156, !4161, !4165}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4153, file: !4146, line: 49, baseType: !7, size: 32)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4153, file: !4146, line: 51, baseType: !4157, size: 64, offset: 64)
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4158, size: 64)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{!177, !481, !4160}
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 64)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4153, file: !4146, line: 53, baseType: !4162, size: 64, offset: 128)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!177, !507, !4160}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4153, file: !4146, line: 55, baseType: !2749, size: 64, offset: 192)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4145, file: !4146, line: 73, baseType: !4167, size: 16, offset: 192)
!4167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4145, file: !4146, line: 74, baseType: !4169, size: 8, offset: 208)
!4169 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !180, line: 16, baseType: !4170)
!4170 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !182, line: 20, baseType: !4171)
!4171 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4145, file: !4146, line: 75, baseType: !1136, size: 8, offset: 216)
!4173 = !DIDerivedType(tag: DW_TAG_member, scope: !4145, file: !4146, line: 76, baseType: !4174, size: 64, offset: 256)
!4174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4145, file: !4146, line: 76, size: 64, elements: !4175)
!4175 = !{!4176, !4177, !4184}
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4174, file: !4146, line: 77, baseType: !175, size: 64)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4174, file: !4146, line: 78, baseType: !4178, size: 64)
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4179, size: 64)
!4179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4180)
!4180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4146, line: 86, size: 128, elements: !4181)
!4181 = !{!4182, !4183}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4180, file: !4146, line: 87, baseType: !7, size: 32)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4180, file: !4146, line: 88, baseType: !507, size: 64, offset: 64)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4174, file: !4146, line: 79, baseType: !4185, size: 64)
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4186, size: 64)
!4186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4187)
!4187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4146, line: 92, size: 256, elements: !4188)
!4188 = !{!4189, !4190, !4191, !4192, !4193}
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4187, file: !4146, line: 94, baseType: !7, size: 32)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4187, file: !4146, line: 95, baseType: !7, size: 32, offset: 32)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4187, file: !4146, line: 96, baseType: !981, size: 64, offset: 64)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4187, file: !4146, line: 97, baseType: !4151, size: 64, offset: 128)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4187, file: !4146, line: 98, baseType: !175, size: 64, offset: 192)
!4194 = !DIGlobalVariableExpression(var: !4195, expr: !DIExpression())
!4195 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_quirkstype237", scope: !2, file: !3, line: 337, type: !4196, isLocal: true, isDefinition: true, align: 8)
!4196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 272, elements: !4197)
!4197 = !{!4198}
!4198 = !DISubrange(count: 34)
!4199 = !DIGlobalVariableExpression(var: !4200, expr: !DIExpression())
!4200 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_quirks238", scope: !2, file: !3, line: 338, type: !4201, isLocal: true, isDefinition: true, align: 8)
!4201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 1944, elements: !4202)
!4202 = !{!4203}
!4203 = !DISubrange(count: 243)
!4204 = !DIGlobalVariableExpression(var: !4205, expr: !DIExpression())
!4205 = distinct !DIGlobalVariable(name: "__param_debug", scope: !2, file: !3, line: 354, type: !4144, isLocal: true, isDefinition: true, align: 64)
!4206 = !DIGlobalVariableExpression(var: !4207, expr: !DIExpression())
!4207 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debugtype239", scope: !2, file: !3, line: 354, type: !4208, isLocal: true, isDefinition: true, align: 8)
!4208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 264, elements: !4209)
!4209 = !{!4210}
!4210 = !DISubrange(count: 33)
!4211 = !DIGlobalVariableExpression(var: !4212, expr: !DIExpression())
!4212 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug240", scope: !2, file: !3, line: 355, type: !4213, isLocal: true, isDefinition: true, align: 8)
!4213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 1192, elements: !4214)
!4214 = !{!4215}
!4215 = !DISubrange(count: 149)
!4216 = !DIGlobalVariableExpression(var: !4217, expr: !DIExpression())
!4217 = distinct !DIGlobalVariable(name: "__param_remote_dma", scope: !2, file: !3, line: 363, type: !4144, isLocal: true, isDefinition: true, align: 64)
!4218 = !DIGlobalVariableExpression(var: !4219, expr: !DIExpression())
!4219 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_remote_dmatype241", scope: !2, file: !3, line: 363, type: !4220, isLocal: true, isDefinition: true, align: 8)
!4220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 312, elements: !4221)
!4221 = !{!4222}
!4222 = !DISubrange(count: 39)
!4223 = !DIGlobalVariableExpression(var: !4224, expr: !DIExpression())
!4224 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_remote_dma242", scope: !2, file: !3, line: 364, type: !4225, isLocal: true, isDefinition: true, align: 8)
!4225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 584, elements: !4226)
!4226 = !{!4227}
!4227 = !DISubrange(count: 73)
!4228 = !DIGlobalVariableExpression(var: !4229, expr: !DIExpression())
!4229 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_fw_ohci_init274", scope: !2, file: !3, line: 3876, type: !175, isLocal: true, isDefinition: true)
!4230 = !DIGlobalVariableExpression(var: !4231, expr: !DIExpression())
!4231 = distinct !DIGlobalVariable(name: "__exitcall_fw_ohci_cleanup", scope: !2, file: !3, line: 3877, type: !4232, isLocal: true, isDefinition: true)
!4232 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4233, line: 117, baseType: !4234)
!4233 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!4235 = !DIGlobalVariableExpression(var: !4236, expr: !DIExpression())
!4236 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author275", scope: !2, file: !3, line: 3879, type: !4237, isLocal: true, isDefinition: true, align: 8)
!4237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 480, elements: !4238)
!4238 = !{!4239}
!4239 = !DISubrange(count: 60)
!4240 = !DIGlobalVariableExpression(var: !4241, expr: !DIExpression())
!4241 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description276", scope: !2, file: !3, line: 3880, type: !4242, isLocal: true, isDefinition: true, align: 8)
!4242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 536, elements: !4243)
!4243 = !{!4244}
!4244 = !DISubrange(count: 67)
!4245 = !DIGlobalVariableExpression(var: !4246, expr: !DIExpression())
!4246 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file277", scope: !2, file: !3, line: 3881, type: !4247, isLocal: true, isDefinition: true, align: 8)
!4247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 400, elements: !4248)
!4248 = !{!4249}
!4249 = !DISubrange(count: 50)
!4250 = !DIGlobalVariableExpression(var: !4251, expr: !DIExpression())
!4251 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license278", scope: !2, file: !3, line: 3881, type: !4252, isLocal: true, isDefinition: true, align: 8)
!4252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 208, elements: !4253)
!4253 = !{!4254}
!4254 = !DISubrange(count: 26)
!4255 = !DIGlobalVariableExpression(var: !4256, expr: !DIExpression())
!4256 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_alias279", scope: !2, file: !3, line: 3884, type: !4257, isLocal: true, isDefinition: true, align: 8)
!4257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 232, elements: !4258)
!4258 = !{!4259}
!4259 = !DISubrange(count: 29)
!4260 = !DIGlobalVariableExpression(var: !4261, expr: !DIExpression())
!4261 = distinct !DIGlobalVariable(name: "selfid_workqueue", scope: !2, file: !3, line: 232, type: !2696, isLocal: true, isDefinition: true)
!4262 = !DIGlobalVariableExpression(var: !4263, expr: !DIExpression())
!4263 = distinct !DIGlobalVariable(name: "param_quirks", scope: !2, file: !3, line: 336, type: !177, isLocal: true, isDefinition: true)
!4264 = !DIGlobalVariableExpression(var: !4265, expr: !DIExpression())
!4265 = distinct !DIGlobalVariable(name: "param_debug", scope: !2, file: !3, line: 353, type: !177, isLocal: true, isDefinition: true)
!4266 = !DIGlobalVariableExpression(var: !4267, expr: !DIExpression())
!4267 = distinct !DIGlobalVariable(name: "param_remote_dma", scope: !2, file: !3, line: 362, type: !240, isLocal: true, isDefinition: true)
!4268 = !DIGlobalVariableExpression(var: !4269, expr: !DIExpression())
!4269 = distinct !DIGlobalVariable(name: "__param_str_debug", scope: !2, file: !3, line: 354, type: !4270, isLocal: true, isDefinition: true)
!4270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 160, elements: !2544)
!4271 = !DIGlobalVariableExpression(var: !4272, expr: !DIExpression())
!4272 = distinct !DIGlobalVariable(name: "__param_str_remote_dma", scope: !2, file: !3, line: 363, type: !4273, isLocal: true, isDefinition: true)
!4273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 200, elements: !4274)
!4274 = !{!4275}
!4275 = !DISubrange(count: 25)
!4276 = !DIGlobalVariableExpression(var: !4277, expr: !DIExpression())
!4277 = distinct !DIGlobalVariable(name: "fw_ohci_pci_driver", scope: !2, file: !3, line: 3850, type: !4278, isLocal: true, isDefinition: true)
!4278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !4140, line: 858, size: 2048, elements: !4279)
!4279 = !{!4280, !4281, !4282, !4294, !4512, !4516, !4520, !4524, !4525, !4529, !4547, !4548, !4549}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4278, file: !4140, line: 859, baseType: !250, size: 128)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4278, file: !4140, line: 860, baseType: !481, size: 64, offset: 128)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4278, file: !4140, line: 861, baseType: !4283, size: 64, offset: 192)
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64)
!4284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4285)
!4285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3568, line: 38, size: 256, elements: !4286)
!4286 = !{!4287, !4288, !4289, !4290, !4291, !4292, !4293}
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4285, file: !3568, line: 39, baseType: !184, size: 32)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4285, file: !3568, line: 39, baseType: !184, size: 32, offset: 32)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4285, file: !3568, line: 40, baseType: !184, size: 32, offset: 64)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4285, file: !3568, line: 40, baseType: !184, size: 32, offset: 96)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4285, file: !3568, line: 41, baseType: !184, size: 32, offset: 128)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4285, file: !3568, line: 41, baseType: !184, size: 32, offset: 160)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4285, file: !3568, line: 42, baseType: !3587, size: 64, offset: 192)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4278, file: !4140, line: 862, baseType: !4295, size: 64, offset: 256)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = !DISubroutineType(types: !4297)
!4297 = !{!177, !4298, !4283}
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 64)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !4140, line: 309, size: 19264, elements: !4300)
!4300 = !{!4301, !4302, !4376, !4377, !4378, !4379, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4407, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4434, !4435, !4436, !4437, !4439, !4440, !4441, !4442, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4485, !4486, !4488, !4489, !4490, !4491, !4493, !4494, !4495, !4498, !4505, !4506, !4507, !4508, !4509, !4510, !4511}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !4299, file: !4140, line: 310, baseType: !250, size: 128)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4299, file: !4140, line: 311, baseType: !4303, size: 64, offset: 128)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !4140, line: 605, size: 8064, elements: !4305)
!4305 = !{!4306, !4307, !4308, !4309, !4310, !4311, !4312, !4327, !4328, !4329, !4353, !4356, !4357, !4360, !4361, !4362, !4363, !4364, !4368, !4369, !4371, !4372, !4373, !4374, !4375}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4304, file: !4140, line: 606, baseType: !250, size: 128)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4304, file: !4140, line: 607, baseType: !4303, size: 64, offset: 128)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4304, file: !4140, line: 608, baseType: !250, size: 128, offset: 192)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4304, file: !4140, line: 609, baseType: !250, size: 128, offset: 320)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4304, file: !4140, line: 610, baseType: !4298, size: 64, offset: 448)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !4304, file: !4140, line: 611, baseType: !250, size: 128, offset: 512)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4304, file: !4140, line: 613, baseType: !4313, size: 256, offset: 640)
!4313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4314, size: 256, elements: !232)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 64)
!4315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4316, line: 20, size: 512, elements: !4317)
!4316 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4317 = !{!4318, !4320, !4321, !4322, !4323, !4324, !4325, !4326}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4315, file: !4316, line: 21, baseType: !4319, size: 64)
!4319 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !174, line: 158, baseType: !2468)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4315, file: !4316, line: 22, baseType: !4319, size: 64, offset: 64)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4315, file: !4316, line: 23, baseType: !481, size: 64, offset: 128)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4315, file: !4316, line: 24, baseType: !176, size: 64, offset: 192)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4315, file: !4316, line: 25, baseType: !176, size: 64, offset: 256)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4315, file: !4316, line: 26, baseType: !4314, size: 64, offset: 320)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4315, file: !4316, line: 26, baseType: !4314, size: 64, offset: 384)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4315, file: !4316, line: 26, baseType: !4314, size: 64, offset: 448)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4304, file: !4140, line: 614, baseType: !250, size: 128, offset: 896)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !4304, file: !4140, line: 615, baseType: !4315, size: 512, offset: 1024)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4304, file: !4140, line: 617, baseType: !4330, size: 64, offset: 1536)
!4330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !4140, line: 731, size: 320, elements: !4332)
!4332 = !{!4333, !4337, !4341, !4345, !4349}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4331, file: !4140, line: 732, baseType: !4334, size: 64)
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = !DISubroutineType(types: !4336)
!4336 = !{!177, !4303}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4331, file: !4140, line: 733, baseType: !4338, size: 64, offset: 64)
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4339, size: 64)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{null, !4303}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4331, file: !4140, line: 734, baseType: !4342, size: 64, offset: 128)
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4343 = !DISubroutineType(types: !4344)
!4344 = !{!175, !4303, !7, !177}
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4331, file: !4140, line: 735, baseType: !4346, size: 64, offset: 192)
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 64)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{!177, !4303, !7, !177, !177, !1982}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4331, file: !4140, line: 736, baseType: !4350, size: 64, offset: 256)
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4351, size: 64)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{!177, !4303, !7, !177, !177, !231}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4304, file: !4140, line: 618, baseType: !4354, size: 64, offset: 1600)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !4140, line: 537, flags: DIFlagFwdDecl)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4304, file: !4140, line: 619, baseType: !175, size: 64, offset: 1664)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !4304, file: !4140, line: 620, baseType: !4358, size: 64, offset: 1728)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !152, line: 123, flags: DIFlagFwdDecl)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4304, file: !4140, line: 622, baseType: !427, size: 8, offset: 1792)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4304, file: !4140, line: 623, baseType: !427, size: 8, offset: 1800)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !4304, file: !4140, line: 624, baseType: !427, size: 8, offset: 1808)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !4304, file: !4140, line: 625, baseType: !427, size: 8, offset: 1816)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4304, file: !4140, line: 630, baseType: !4365, size: 384, offset: 1824)
!4365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 384, elements: !4366)
!4366 = !{!4367}
!4367 = !DISubrange(count: 48)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !4304, file: !4140, line: 632, baseType: !178, size: 16, offset: 2208)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4304, file: !4140, line: 633, baseType: !4370, size: 16, offset: 2224)
!4370 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !4140, line: 237, baseType: !178)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !4304, file: !4140, line: 634, baseType: !3184, size: 64, offset: 2240)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4304, file: !4140, line: 635, baseType: !3185, size: 5568, offset: 2304)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !4304, file: !4140, line: 636, baseType: !3279, size: 64, offset: 7872)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !4304, file: !4140, line: 637, baseType: !3279, size: 64, offset: 7936)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !4304, file: !4140, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !4299, file: !4140, line: 312, baseType: !4303, size: 64, offset: 192)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4299, file: !4140, line: 314, baseType: !175, size: 64, offset: 256)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !4299, file: !4140, line: 315, baseType: !4358, size: 64, offset: 320)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4299, file: !4140, line: 316, baseType: !4380, size: 64, offset: 384)
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4381, size: 64)
!4381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !4140, line: 69, size: 832, elements: !4382)
!4382 = !{!4383, !4384, !4385, !4388, !4389}
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4381, file: !4140, line: 70, baseType: !4303, size: 64)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4381, file: !4140, line: 71, baseType: !250, size: 128, offset: 64)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4381, file: !4140, line: 72, baseType: !4386, size: 64, offset: 192)
!4386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4387, size: 64)
!4387 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !4140, line: 72, flags: DIFlagFwdDecl)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4381, file: !4140, line: 73, baseType: !427, size: 8, offset: 256)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4381, file: !4140, line: 74, baseType: !3188, size: 512, offset: 320)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !4299, file: !4140, line: 318, baseType: !7, size: 32, offset: 448)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4299, file: !4140, line: 319, baseType: !178, size: 16, offset: 480)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4299, file: !4140, line: 320, baseType: !178, size: 16, offset: 496)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4299, file: !4140, line: 321, baseType: !178, size: 16, offset: 512)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4299, file: !4140, line: 322, baseType: !178, size: 16, offset: 528)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4299, file: !4140, line: 323, baseType: !7, size: 32, offset: 544)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4299, file: !4140, line: 324, baseType: !1136, size: 8, offset: 576)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4299, file: !4140, line: 325, baseType: !1136, size: 8, offset: 584)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !4299, file: !4140, line: 330, baseType: !1136, size: 8, offset: 592)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !4299, file: !4140, line: 331, baseType: !1136, size: 8, offset: 600)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !4299, file: !4140, line: 332, baseType: !1136, size: 8, offset: 608)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !4299, file: !4140, line: 333, baseType: !1136, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !4299, file: !4140, line: 334, baseType: !1136, size: 8, offset: 624)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4299, file: !4140, line: 335, baseType: !1136, size: 8, offset: 632)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !4299, file: !4140, line: 336, baseType: !323, size: 16, offset: 640)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !4299, file: !4140, line: 337, baseType: !4406, size: 64, offset: 704)
!4406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4299, file: !4140, line: 339, baseType: !4408, size: 64, offset: 768)
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4299, file: !4140, line: 340, baseType: !179, size: 64, offset: 832)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4299, file: !4140, line: 346, baseType: !3779, size: 128, offset: 896)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !4299, file: !4140, line: 348, baseType: !4139, size: 32, offset: 1024)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !4299, file: !4140, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !4299, file: !4140, line: 352, baseType: !1136, size: 8, offset: 1064)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !4299, file: !4140, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !4299, file: !4140, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !4299, file: !4140, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !4299, file: !4140, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !4299, file: !4140, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !4299, file: !4140, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !4299, file: !4140, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !4299, file: !4140, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !4299, file: !4140, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !4299, file: !4140, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !4299, file: !4140, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !4299, file: !4140, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !4299, file: !4140, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !4299, file: !4140, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !4299, file: !4140, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !4299, file: !4140, line: 376, baseType: !7, size: 32, offset: 1120)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !4299, file: !4140, line: 377, baseType: !7, size: 32, offset: 1152)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !4299, file: !4140, line: 380, baseType: !4432, size: 64, offset: 1216)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 64)
!4433 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !4140, line: 303, flags: DIFlagFwdDecl)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !4299, file: !4140, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !4299, file: !4140, line: 383, baseType: !177, size: 32, offset: 1312)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !4299, file: !4140, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !4299, file: !4140, line: 387, baseType: !4438, size: 32, offset: 1376)
!4438 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !4140, line: 180, baseType: !7)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4299, file: !4140, line: 388, baseType: !3185, size: 5568, offset: 1408)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !4299, file: !4140, line: 390, baseType: !177, size: 32, offset: 6976)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4299, file: !4140, line: 396, baseType: !7, size: 32, offset: 7008)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4299, file: !4140, line: 397, baseType: !4443, size: 8704, offset: 7040)
!4443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4315, size: 8704, elements: !4444)
!4444 = !{!4445}
!4445 = !DISubrange(count: 17)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4299, file: !4140, line: 399, baseType: !240, size: 8, offset: 15744)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !4299, file: !4140, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !4299, file: !4140, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !4299, file: !4140, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !4299, file: !4140, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !4299, file: !4140, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !4299, file: !4140, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !4299, file: !4140, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !4299, file: !4140, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !4299, file: !4140, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !4299, file: !4140, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !4299, file: !4140, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4299, file: !4140, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4299, file: !4140, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !4299, file: !4140, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !4299, file: !4140, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !4299, file: !4140, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !4299, file: !4140, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4299, file: !4140, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !4299, file: !4140, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !4299, file: !4140, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !4299, file: !4140, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !4299, file: !4140, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !4299, file: !4140, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !4299, file: !4140, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !4299, file: !4140, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !4299, file: !4140, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !4299, file: !4140, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !4299, file: !4140, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !4299, file: !4140, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !4299, file: !4140, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !4299, file: !4140, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !4299, file: !4140, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !4299, file: !4140, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !4299, file: !4140, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !4299, file: !4140, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !4299, file: !4140, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !4299, file: !4140, line: 450, baseType: !4484, size: 16, offset: 15792)
!4484 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !4140, line: 206, baseType: !178)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !4299, file: !4140, line: 451, baseType: !714, size: 32, offset: 15808)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !4299, file: !4140, line: 453, baseType: !4487, size: 512, offset: 15840)
!4487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 512, elements: !2082)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !4299, file: !4140, line: 454, baseType: !577, size: 64, offset: 16384)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !4299, file: !4140, line: 455, baseType: !3279, size: 64, offset: 16448)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !4299, file: !4140, line: 456, baseType: !177, size: 32, offset: 16512)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !4299, file: !4140, line: 457, baseType: !4492, size: 1088, offset: 16576)
!4492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3279, size: 1088, elements: !4444)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !4299, file: !4140, line: 458, baseType: !4492, size: 1088, offset: 17664)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !4299, file: !4140, line: 469, baseType: !3265, size: 64, offset: 18752)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !4299, file: !4140, line: 471, baseType: !4496, size: 64, offset: 18816)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !4140, line: 304, flags: DIFlagFwdDecl)
!4498 = !DIDerivedType(tag: DW_TAG_member, scope: !4299, file: !4140, line: 478, baseType: !4499, size: 64, offset: 18880)
!4499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4299, file: !4140, line: 478, size: 64, elements: !4500)
!4500 = !{!4501, !4504}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4499, file: !4140, line: 479, baseType: !4502, size: 64)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 64)
!4503 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4140, line: 305, flags: DIFlagFwdDecl)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4499, file: !4140, line: 480, baseType: !4298, size: 64)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !4299, file: !4140, line: 482, baseType: !323, size: 16, offset: 18944)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !4299, file: !4140, line: 483, baseType: !1136, size: 8, offset: 18960)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !4299, file: !4140, line: 497, baseType: !323, size: 16, offset: 18976)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !4299, file: !4140, line: 498, baseType: !2468, size: 64, offset: 19008)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !4299, file: !4140, line: 499, baseType: !207, size: 64, offset: 19072)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4299, file: !4140, line: 500, baseType: !507, size: 64, offset: 19136)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !4299, file: !4140, line: 502, baseType: !176, size: 64, offset: 19200)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4278, file: !4140, line: 863, baseType: !4513, size: 64, offset: 320)
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 64)
!4514 = !DISubroutineType(types: !4515)
!4515 = !{null, !4298}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4278, file: !4140, line: 864, baseType: !4517, size: 64, offset: 384)
!4517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4518, size: 64)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!177, !4298, !3598}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4278, file: !4140, line: 865, baseType: !4521, size: 64, offset: 448)
!4521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4522, size: 64)
!4522 = !DISubroutineType(types: !4523)
!4523 = !{!177, !4298}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4278, file: !4140, line: 866, baseType: !4513, size: 64, offset: 512)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4278, file: !4140, line: 867, baseType: !4526, size: 64, offset: 576)
!4526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4527, size: 64)
!4527 = !DISubroutineType(types: !4528)
!4528 = !{!177, !4298, !177}
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4278, file: !4140, line: 868, baseType: !4530, size: 64, offset: 640)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4532)
!4532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !4140, line: 795, size: 384, elements: !4533)
!4533 = !{!4534, !4539, !4543, !4544, !4545, !4546}
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4532, file: !4140, line: 797, baseType: !4535, size: 64)
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 64)
!4536 = !DISubroutineType(types: !4537)
!4537 = !{!4538, !4298, !4438}
!4538 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !4140, line: 772, baseType: !7)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4532, file: !4140, line: 801, baseType: !4540, size: 64, offset: 64)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{!4538, !4298}
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4532, file: !4140, line: 804, baseType: !4540, size: 64, offset: 128)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4532, file: !4140, line: 807, baseType: !4513, size: 64, offset: 192)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4532, file: !4140, line: 808, baseType: !4513, size: 64, offset: 256)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4532, file: !4140, line: 811, baseType: !4513, size: 64, offset: 320)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4278, file: !4140, line: 869, baseType: !3265, size: 64, offset: 704)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4278, file: !4140, line: 870, baseType: !3556, size: 1152, offset: 768)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4278, file: !4140, line: 871, baseType: !4550, size: 128, offset: 1920)
!4550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !4140, line: 759, size: 128, elements: !4551)
!4551 = !{!4552, !4553}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4550, file: !4140, line: 760, baseType: !444)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4550, file: !4140, line: 761, baseType: !250, size: 128)
!4554 = !DIGlobalVariableExpression(var: !4555, expr: !DIExpression())
!4555 = distinct !DIGlobalVariable(name: "ohci_driver_name", scope: !2, file: !3, line: 261, type: !4556, isLocal: true, isDefinition: true)
!4556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 112, elements: !4557)
!4557 = !{!4558}
!4558 = !DISubrange(count: 14)
!4559 = !DIGlobalVariableExpression(var: !4560, expr: !DIExpression())
!4560 = distinct !DIGlobalVariable(name: "pci_table", scope: !2, file: !3, line: 3843, type: !4561, isLocal: true, isDefinition: true)
!4561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4284, size: 512, elements: !1613)
!4562 = !DIGlobalVariableExpression(var: !4563, expr: !DIExpression())
!4563 = distinct !DIGlobalVariable(name: "__key", scope: !4564, file: !3, line: 3582, type: !587, isLocal: true, isDefinition: true)
!4564 = distinct !DISubprogram(name: "pci_probe", scope: !3, file: !3, line: 3547, type: !4296, scopeLine: 3549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!4565 = !DIGlobalVariableExpression(var: !4566, expr: !DIExpression())
!4566 = distinct !DIGlobalVariable(name: "ohci_driver", scope: !2, file: !3, line: 3496, type: !196, isLocal: true, isDefinition: true)
!4567 = !DIGlobalVariableExpression(var: !4568, expr: !DIExpression())
!4568 = distinct !DIGlobalVariable(name: "id", scope: !4569, file: !3, line: 2242, type: !4572, isLocal: true, isDefinition: true)
!4569 = distinct !DISubprogram(name: "probe_tsb41ba3d", scope: !3, file: !3, line: 2239, type: !4570, scopeLine: 2240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!4570 = !DISubroutineType(types: !4571)
!4571 = !{!177, !187}
!4572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4573, size: 48, elements: !1671)
!4573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!4574 = !DIGlobalVariableExpression(var: !4575, expr: !DIExpression())
!4575 = distinct !DIGlobalVariable(name: "__warned", scope: !4576, file: !4577, line: 275, type: !240, isLocal: true, isDefinition: true)
!4576 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !4577, file: !4577, line: 271, type: !4578, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!4577 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!238, !3184, !175, !207, !93, !176}
!4580 = !DIGlobalVariableExpression(var: !4581, expr: !DIExpression())
!4581 = distinct !DIGlobalVariable(name: "evts", scope: !2, file: !3, line: 441, type: !4582, isLocal: true, isDefinition: true)
!4582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 2112, elements: !4209)
!4583 = !DIGlobalVariableExpression(var: !4584, expr: !DIExpression())
!4584 = distinct !DIGlobalVariable(name: "tcodes", scope: !2, file: !3, line: 460, type: !4585, isLocal: true, isDefinition: true)
!4585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 1024, elements: !2082)
!4586 = !DIGlobalVariableExpression(var: !4587, expr: !DIExpression())
!4587 = distinct !DIGlobalVariable(name: "port", scope: !2, file: !3, line: 408, type: !4588, isLocal: true, isDefinition: true)
!4588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 32, elements: !232)
!4589 = !DIGlobalVariableExpression(var: !4590, expr: !DIExpression())
!4590 = distinct !DIGlobalVariable(name: "speed", scope: !2, file: !3, line: 401, type: !4591, isLocal: true, isDefinition: true)
!4591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 256, elements: !232)
!4592 = !DIGlobalVariableExpression(var: !4593, expr: !DIExpression())
!4593 = distinct !DIGlobalVariable(name: "power", scope: !2, file: !3, line: 404, type: !4594, isLocal: true, isDefinition: true)
!4594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 512, elements: !1107)
!4595 = !DIGlobalVariableExpression(var: !4596, expr: !DIExpression())
!4596 = distinct !DIGlobalVariable(name: "ohci_quirks", scope: !2, file: !3, line: 285, type: !4597, isLocal: true, isDefinition: true)
!4597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4598, size: 1024, elements: !2082)
!4598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4599)
!4599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 283, size: 64, elements: !4600)
!4600 = !{!4601, !4602, !4603, !4604}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4599, file: !3, line: 284, baseType: !178, size: 16)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4599, file: !3, line: 284, baseType: !178, size: 16, offset: 16)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4599, file: !3, line: 284, baseType: !178, size: 16, offset: 32)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4599, file: !3, line: 284, baseType: !178, size: 16, offset: 48)
!4605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 168, elements: !4606)
!4606 = !{!4607}
!4607 = !DISubrange(count: 21)
!4608 = !{!"rsp"}
!4609 = !{i32 7, !"Dwarf Version", i32 4}
!4610 = !{i32 2, !"Debug Info Version", i32 3}
!4611 = !{i32 1, !"wchar_size", i32 2}
!4612 = !{i32 1, !"Code Model", i32 2}
!4613 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4614 = distinct !DISubprogram(name: "fw_ohci_cleanup", scope: !3, file: !3, line: 3870, type: !2226, scopeLine: 3871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!4615 = !DILocation(line: 3872, column: 2, scope: !4614)
!4616 = !DILocation(line: 3873, column: 20, scope: !4614)
!4617 = !DILocation(line: 3873, column: 2, scope: !4614)
!4618 = !DILocation(line: 3874, column: 1, scope: !4614)
!4619 = distinct !DISubprogram(name: "fw_ohci_init", scope: !3, file: !3, line: 3861, type: !4620, scopeLine: 3862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{!177}
!4622 = !DILocation(line: 3863, column: 21, scope: !4619)
!4623 = !DILocation(line: 3863, column: 19, scope: !4619)
!4624 = !DILocation(line: 3864, column: 7, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 3864, column: 6)
!4626 = !DILocation(line: 3864, column: 6, scope: !4619)
!4627 = !DILocation(line: 3865, column: 3, scope: !4625)
!4628 = !DILocation(line: 3867, column: 9, scope: !4619)
!4629 = !DILocation(line: 3867, column: 2, scope: !4619)
!4630 = !DILocation(line: 3868, column: 1, scope: !4619)
!4631 = !DILocalVariable(name: "w", arg: 1, scope: !4632, file: !4633, line: 15, type: !7)
!4632 = distinct !DISubprogram(name: "__arch_hweight32", scope: !4633, file: !4633, line: 15, type: !4634, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!4633 = !DIFile(filename: "./arch/x86/include/asm/arch_hweight.h", directory: "/home/lizy2001/genbc/linux")
!4634 = !DISubroutineType(types: !4635)
!4635 = !{!7, !7}
!4636 = !DILocation(line: 15, column: 67, scope: !4632, inlinedAt: !4637)
!4637 = distinct !DILocation(line: 3672, column: 15, scope: !4564)
!4638 = !DILocalVariable(name: "res", scope: !4632, file: !4633, line: 17, type: !7)
!4639 = !DILocation(line: 17, column: 15, scope: !4632, inlinedAt: !4637)
!4640 = !DILocation(line: 15, column: 67, scope: !4632, inlinedAt: !4641)
!4641 = distinct !DILocation(line: 3659, column: 15, scope: !4564)
!4642 = !DILocation(line: 17, column: 15, scope: !4632, inlinedAt: !4641)
!4643 = !DILocalVariable(name: "lock", arg: 1, scope: !4644, file: !4645, line: 327, type: !1252)
!4644 = distinct !DISubprogram(name: "spinlock_check", scope: !4645, file: !4645, line: 327, type: !4646, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!4645 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4646 = !DISubroutineType(types: !4647)
!4647 = !{!4648, !1252}
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!4649 = !DILocation(line: 327, column: 67, scope: !4644, inlinedAt: !4650)
!4650 = distinct !DILocation(line: 3581, column: 2, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3581, column: 2)
!4652 = !DILocalVariable(name: "dev", arg: 1, scope: !4564, file: !3, line: 3547, type: !4298)
!4653 = !DILocation(line: 3547, column: 38, scope: !4564)
!4654 = !DILocalVariable(name: "ent", arg: 2, scope: !4564, file: !3, line: 3548, type: !4283)
!4655 = !DILocation(line: 3548, column: 39, scope: !4564)
!4656 = !DILocalVariable(name: "ohci", scope: !4564, file: !3, line: 3550, type: !187)
!4657 = !DILocation(line: 3550, column: 18, scope: !4564)
!4658 = !DILocalVariable(name: "bus_options", scope: !4564, file: !3, line: 3551, type: !231)
!4659 = !DILocation(line: 3551, column: 6, scope: !4564)
!4660 = !DILocalVariable(name: "max_receive", scope: !4564, file: !3, line: 3551, type: !231)
!4661 = !DILocation(line: 3551, column: 19, scope: !4564)
!4662 = !DILocalVariable(name: "link_speed", scope: !4564, file: !3, line: 3551, type: !231)
!4663 = !DILocation(line: 3551, column: 32, scope: !4564)
!4664 = !DILocalVariable(name: "version", scope: !4564, file: !3, line: 3551, type: !231)
!4665 = !DILocation(line: 3551, column: 44, scope: !4564)
!4666 = !DILocalVariable(name: "guid", scope: !4564, file: !3, line: 3552, type: !179)
!4667 = !DILocation(line: 3552, column: 6, scope: !4564)
!4668 = !DILocalVariable(name: "i", scope: !4564, file: !3, line: 3553, type: !177)
!4669 = !DILocation(line: 3553, column: 6, scope: !4564)
!4670 = !DILocalVariable(name: "err", scope: !4564, file: !3, line: 3553, type: !177)
!4671 = !DILocation(line: 3553, column: 9, scope: !4564)
!4672 = !DILocalVariable(name: "size", scope: !4564, file: !3, line: 3554, type: !207)
!4673 = !DILocation(line: 3554, column: 9, scope: !4564)
!4674 = !DILocation(line: 3556, column: 6, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3556, column: 6)
!4676 = !DILocation(line: 3556, column: 11, scope: !4675)
!4677 = !DILocation(line: 3556, column: 18, scope: !4675)
!4678 = !DILocation(line: 3556, column: 6, scope: !4564)
!4679 = !DILocation(line: 3557, column: 3, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 3556, column: 53)
!4681 = !DILocation(line: 3558, column: 3, scope: !4680)
!4682 = !DILocation(line: 3561, column: 9, scope: !4564)
!4683 = !DILocation(line: 3561, column: 7, scope: !4564)
!4684 = !DILocation(line: 3562, column: 6, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3562, column: 6)
!4686 = !DILocation(line: 3562, column: 11, scope: !4685)
!4687 = !DILocation(line: 3562, column: 6, scope: !4564)
!4688 = !DILocation(line: 3563, column: 7, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 3562, column: 20)
!4690 = !DILocation(line: 3564, column: 3, scope: !4689)
!4691 = !DILocation(line: 3567, column: 22, scope: !4564)
!4692 = !DILocation(line: 3567, column: 28, scope: !4564)
!4693 = !DILocation(line: 3567, column: 49, scope: !4564)
!4694 = !DILocation(line: 3567, column: 54, scope: !4564)
!4695 = !DILocation(line: 3567, column: 2, scope: !4564)
!4696 = !DILocation(line: 3569, column: 15, scope: !4564)
!4697 = !DILocation(line: 3569, column: 2, scope: !4564)
!4698 = !DILocation(line: 3571, column: 26, scope: !4564)
!4699 = !DILocation(line: 3571, column: 8, scope: !4564)
!4700 = !DILocation(line: 3571, column: 6, scope: !4564)
!4701 = !DILocation(line: 3572, column: 6, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3572, column: 6)
!4703 = !DILocation(line: 3572, column: 6, scope: !4564)
!4704 = !DILocation(line: 3573, column: 3, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 3572, column: 11)
!4706 = !DILocation(line: 3574, column: 3, scope: !4705)
!4707 = !DILocation(line: 3577, column: 17, scope: !4564)
!4708 = !DILocation(line: 3577, column: 2, scope: !4564)
!4709 = !DILocation(line: 3578, column: 25, scope: !4564)
!4710 = !DILocation(line: 3578, column: 2, scope: !4564)
!4711 = !DILocation(line: 3579, column: 18, scope: !4564)
!4712 = !DILocation(line: 3579, column: 23, scope: !4564)
!4713 = !DILocation(line: 3579, column: 2, scope: !4564)
!4714 = !DILocation(line: 3581, column: 2, scope: !4564)
!4715 = !DILocation(line: 3581, column: 2, scope: !4651)
!4716 = !DILocation(line: 329, column: 10, scope: !4644, inlinedAt: !4650)
!4717 = !DILocation(line: 329, column: 16, scope: !4644, inlinedAt: !4650)
!4718 = !DILocation(line: 3582, column: 2, scope: !4564)
!4719 = !DILocation(line: 3582, column: 2, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3582, column: 2)
!4721 = !DILocation(line: 3584, column: 2, scope: !4564)
!4722 = !DILocation(line: 3584, column: 2, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3584, column: 2)
!4724 = !DILocation(line: 3586, column: 8, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3586, column: 6)
!4726 = !DILocation(line: 3586, column: 35, scope: !4725)
!4727 = !DILocation(line: 3586, column: 53, scope: !4725)
!4728 = !DILocation(line: 3587, column: 6, scope: !4725)
!4729 = !DILocation(line: 3587, column: 31, scope: !4725)
!4730 = !DILocation(line: 3586, column: 6, scope: !4564)
!4731 = !DILocation(line: 3588, column: 3, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 3587, column: 57)
!4733 = !DILocation(line: 3589, column: 7, scope: !4732)
!4734 = !DILocation(line: 3590, column: 3, scope: !4732)
!4735 = !DILocation(line: 3593, column: 27, scope: !4564)
!4736 = !DILocation(line: 3593, column: 8, scope: !4564)
!4737 = !DILocation(line: 3593, column: 6, scope: !4564)
!4738 = !DILocation(line: 3594, column: 6, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3594, column: 6)
!4740 = !DILocation(line: 3594, column: 6, scope: !4564)
!4741 = !DILocation(line: 3595, column: 3, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 3594, column: 11)
!4743 = !DILocation(line: 3596, column: 3, scope: !4742)
!4744 = !DILocation(line: 3599, column: 30, scope: !4564)
!4745 = !DILocation(line: 3599, column: 20, scope: !4564)
!4746 = !DILocation(line: 3599, column: 2, scope: !4564)
!4747 = !DILocation(line: 3599, column: 8, scope: !4564)
!4748 = !DILocation(line: 3599, column: 18, scope: !4564)
!4749 = !DILocation(line: 3600, column: 6, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3600, column: 6)
!4751 = !DILocation(line: 3600, column: 12, scope: !4750)
!4752 = !DILocation(line: 3600, column: 22, scope: !4750)
!4753 = !DILocation(line: 3600, column: 6, scope: !4564)
!4754 = !DILocation(line: 3601, column: 3, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 3600, column: 31)
!4756 = !DILocation(line: 3602, column: 7, scope: !4755)
!4757 = !DILocation(line: 3603, column: 3, scope: !4755)
!4758 = !DILocation(line: 3606, column: 9, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3606, column: 2)
!4760 = !DILocation(line: 3606, column: 7, scope: !4759)
!4761 = !DILocation(line: 3606, column: 14, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 3606, column: 2)
!4763 = !DILocation(line: 3606, column: 16, scope: !4762)
!4764 = !DILocation(line: 3606, column: 2, scope: !4759)
!4765 = !DILocation(line: 3607, column: 20, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 3607, column: 7)
!4767 = !DILocation(line: 3607, column: 8, scope: !4766)
!4768 = !DILocation(line: 3607, column: 23, scope: !4766)
!4769 = !DILocation(line: 3607, column: 33, scope: !4766)
!4770 = !DILocation(line: 3607, column: 38, scope: !4766)
!4771 = !DILocation(line: 3607, column: 30, scope: !4766)
!4772 = !DILocation(line: 3607, column: 46, scope: !4766)
!4773 = !DILocation(line: 3608, column: 20, scope: !4766)
!4774 = !DILocation(line: 3608, column: 8, scope: !4766)
!4775 = !DILocation(line: 3608, column: 23, scope: !4766)
!4776 = !DILocation(line: 3608, column: 30, scope: !4766)
!4777 = !DILocation(line: 3608, column: 60, scope: !4766)
!4778 = !DILocation(line: 3609, column: 20, scope: !4766)
!4779 = !DILocation(line: 3609, column: 8, scope: !4766)
!4780 = !DILocation(line: 3609, column: 23, scope: !4766)
!4781 = !DILocation(line: 3609, column: 33, scope: !4766)
!4782 = !DILocation(line: 3609, column: 38, scope: !4766)
!4783 = !DILocation(line: 3609, column: 30, scope: !4766)
!4784 = !DILocation(line: 3609, column: 46, scope: !4766)
!4785 = !DILocation(line: 3610, column: 20, scope: !4766)
!4786 = !DILocation(line: 3610, column: 8, scope: !4766)
!4787 = !DILocation(line: 3610, column: 23, scope: !4766)
!4788 = !DILocation(line: 3610, column: 32, scope: !4766)
!4789 = !DILocation(line: 3610, column: 62, scope: !4766)
!4790 = !DILocation(line: 3611, column: 20, scope: !4766)
!4791 = !DILocation(line: 3611, column: 8, scope: !4766)
!4792 = !DILocation(line: 3611, column: 23, scope: !4766)
!4793 = !DILocation(line: 3611, column: 35, scope: !4766)
!4794 = !DILocation(line: 3611, column: 40, scope: !4766)
!4795 = !DILocation(line: 3611, column: 32, scope: !4766)
!4796 = !DILocation(line: 3607, column: 7, scope: !4762)
!4797 = !DILocation(line: 3612, column: 31, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 3611, column: 51)
!4799 = !DILocation(line: 3612, column: 19, scope: !4798)
!4800 = !DILocation(line: 3612, column: 34, scope: !4798)
!4801 = !DILocation(line: 3612, column: 4, scope: !4798)
!4802 = !DILocation(line: 3612, column: 10, scope: !4798)
!4803 = !DILocation(line: 3612, column: 17, scope: !4798)
!4804 = !DILocation(line: 3613, column: 4, scope: !4798)
!4805 = !DILocation(line: 3611, column: 48, scope: !4766)
!4806 = !DILocation(line: 3606, column: 44, scope: !4762)
!4807 = !DILocation(line: 3606, column: 2, scope: !4762)
!4808 = distinct !{!4808, !4764, !4809}
!4809 = !DILocation(line: 3614, column: 3, scope: !4759)
!4810 = !DILocation(line: 3615, column: 6, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3615, column: 6)
!4812 = !DILocation(line: 3615, column: 6, scope: !4564)
!4813 = !DILocation(line: 3616, column: 18, scope: !4811)
!4814 = !DILocation(line: 3616, column: 3, scope: !4811)
!4815 = !DILocation(line: 3616, column: 9, scope: !4811)
!4816 = !DILocation(line: 3616, column: 16, scope: !4811)
!4817 = !DILocation(line: 3623, column: 2, scope: !4564)
!4818 = !DILocation(line: 3623, column: 2, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3623, column: 2)
!4820 = !DILocation(line: 3624, column: 2, scope: !4564)
!4821 = !DILocation(line: 3624, column: 2, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3624, column: 2)
!4823 = !DILocation(line: 3625, column: 41, scope: !4564)
!4824 = !DILocation(line: 3625, column: 47, scope: !4564)
!4825 = !DILocation(line: 3625, column: 52, scope: !4564)
!4826 = !DILocation(line: 3627, column: 14, scope: !4564)
!4827 = !DILocation(line: 3627, column: 20, scope: !4564)
!4828 = !DILocation(line: 3625, column: 22, scope: !4564)
!4829 = !DILocation(line: 3625, column: 2, scope: !4564)
!4830 = !DILocation(line: 3625, column: 8, scope: !4564)
!4831 = !DILocation(line: 3625, column: 20, scope: !4564)
!4832 = !DILocation(line: 3629, column: 7, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3629, column: 6)
!4834 = !DILocation(line: 3629, column: 13, scope: !4833)
!4835 = !DILocation(line: 3629, column: 6, scope: !4564)
!4836 = !DILocation(line: 3630, column: 7, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 3629, column: 26)
!4838 = !DILocation(line: 3631, column: 3, scope: !4837)
!4839 = !DILocation(line: 3634, column: 25, scope: !4564)
!4840 = !DILocation(line: 3634, column: 31, scope: !4564)
!4841 = !DILocation(line: 3634, column: 47, scope: !4564)
!4842 = !DILocation(line: 3634, column: 8, scope: !4564)
!4843 = !DILocation(line: 3634, column: 6, scope: !4564)
!4844 = !DILocation(line: 3636, column: 6, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3636, column: 6)
!4846 = !DILocation(line: 3636, column: 10, scope: !4845)
!4847 = !DILocation(line: 3636, column: 6, scope: !4564)
!4848 = !DILocation(line: 3637, column: 3, scope: !4845)
!4849 = !DILocation(line: 3639, column: 25, scope: !4564)
!4850 = !DILocation(line: 3639, column: 31, scope: !4564)
!4851 = !DILocation(line: 3639, column: 48, scope: !4564)
!4852 = !DILocation(line: 3639, column: 8, scope: !4564)
!4853 = !DILocation(line: 3639, column: 6, scope: !4564)
!4854 = !DILocation(line: 3641, column: 6, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3641, column: 6)
!4856 = !DILocation(line: 3641, column: 10, scope: !4855)
!4857 = !DILocation(line: 3641, column: 6, scope: !4564)
!4858 = !DILocation(line: 3642, column: 3, scope: !4855)
!4859 = !DILocation(line: 3644, column: 22, scope: !4564)
!4860 = !DILocation(line: 3644, column: 28, scope: !4564)
!4861 = !DILocation(line: 3644, column: 44, scope: !4564)
!4862 = !DILocation(line: 3644, column: 8, scope: !4564)
!4863 = !DILocation(line: 3644, column: 6, scope: !4564)
!4864 = !DILocation(line: 3646, column: 6, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3646, column: 6)
!4866 = !DILocation(line: 3646, column: 10, scope: !4865)
!4867 = !DILocation(line: 3646, column: 6, scope: !4564)
!4868 = !DILocation(line: 3647, column: 3, scope: !4865)
!4869 = !DILocation(line: 3649, column: 22, scope: !4564)
!4870 = !DILocation(line: 3649, column: 28, scope: !4564)
!4871 = !DILocation(line: 3649, column: 45, scope: !4564)
!4872 = !DILocation(line: 3649, column: 8, scope: !4564)
!4873 = !DILocation(line: 3649, column: 6, scope: !4564)
!4874 = !DILocation(line: 3651, column: 6, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3651, column: 6)
!4876 = !DILocation(line: 3651, column: 10, scope: !4875)
!4877 = !DILocation(line: 3651, column: 6, scope: !4564)
!4878 = !DILocation(line: 3652, column: 3, scope: !4875)
!4879 = !DILocation(line: 3654, column: 12, scope: !4564)
!4880 = !DILocation(line: 3654, column: 2, scope: !4564)
!4881 = !DILocation(line: 3655, column: 2, scope: !4564)
!4882 = !DILocation(line: 3655, column: 8, scope: !4564)
!4883 = !DILocation(line: 3655, column: 28, scope: !4564)
!4884 = !DILocation(line: 3656, column: 38, scope: !4564)
!4885 = !DILocation(line: 3656, column: 29, scope: !4564)
!4886 = !DILocation(line: 3656, column: 2, scope: !4564)
!4887 = !DILocation(line: 3656, column: 8, scope: !4564)
!4888 = !DILocation(line: 3656, column: 27, scope: !4564)
!4889 = !DILocation(line: 3657, column: 12, scope: !4564)
!4890 = !DILocation(line: 3657, column: 2, scope: !4564)
!4891 = !DILocation(line: 3658, column: 26, scope: !4564)
!4892 = !DILocation(line: 3658, column: 32, scope: !4564)
!4893 = !DILocation(line: 3658, column: 2, scope: !4564)
!4894 = !DILocation(line: 3658, column: 8, scope: !4564)
!4895 = !DILocation(line: 3658, column: 24, scope: !4564)
!4896 = !DILocation(line: 3659, column: 15, scope: !4564)
!4897 = !DILocation(line: 21, column: 15, scope: !4632, inlinedAt: !4641)
!4898 = !DILocation(line: 19, column: 2, scope: !4632, inlinedAt: !4641)
!4899 = !{i32 -2147109880, i32 -2147109852, i32 -2147109846, i32 -2147109830, i32 -2147109814, i32 -2147109787, i32 -2147109454, i32 -2147110172, i32 -2147109448, i32 -2147109400, i32 -2147109336, i32 -2147109274, i32 -2147109217, i32 -2147109161, i32 -2147110092, i32 -2147110067, i32 -2147108927, i32 -2147108797, i32 -2147108866, i32 -2147108783, i32 -2147109967}
!4900 = !DILocation(line: 23, column: 9, scope: !4632, inlinedAt: !4641)
!4901 = !DILocation(line: 3659, column: 2, scope: !4564)
!4902 = !DILocation(line: 3659, column: 8, scope: !4564)
!4903 = !DILocation(line: 3659, column: 13, scope: !4564)
!4904 = !DILocation(line: 3660, column: 38, scope: !4564)
!4905 = !DILocation(line: 3660, column: 44, scope: !4564)
!4906 = !DILocation(line: 3660, column: 36, scope: !4564)
!4907 = !DILocation(line: 3660, column: 7, scope: !4564)
!4908 = !DILocation(line: 3661, column: 34, scope: !4564)
!4909 = !DILocation(line: 3661, column: 26, scope: !4564)
!4910 = !DILocation(line: 3661, column: 2, scope: !4564)
!4911 = !DILocation(line: 3661, column: 8, scope: !4564)
!4912 = !DILocation(line: 3661, column: 24, scope: !4564)
!4913 = !DILocation(line: 3663, column: 12, scope: !4564)
!4914 = !DILocation(line: 3663, column: 2, scope: !4564)
!4915 = !DILocation(line: 3664, column: 38, scope: !4564)
!4916 = !DILocation(line: 3664, column: 29, scope: !4564)
!4917 = !DILocation(line: 3664, column: 2, scope: !4564)
!4918 = !DILocation(line: 3664, column: 8, scope: !4564)
!4919 = !DILocation(line: 3664, column: 27, scope: !4564)
!4920 = !DILocation(line: 3666, column: 7, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3666, column: 6)
!4922 = !DILocation(line: 3666, column: 13, scope: !4921)
!4923 = !DILocation(line: 3666, column: 6, scope: !4564)
!4924 = !DILocation(line: 3667, column: 3, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 3666, column: 33)
!4926 = !DILocation(line: 3668, column: 3, scope: !4925)
!4927 = !DILocation(line: 3668, column: 9, scope: !4925)
!4928 = !DILocation(line: 3668, column: 28, scope: !4925)
!4929 = !DILocation(line: 3669, column: 2, scope: !4925)
!4930 = !DILocation(line: 3670, column: 12, scope: !4564)
!4931 = !DILocation(line: 3670, column: 2, scope: !4564)
!4932 = !DILocation(line: 3671, column: 26, scope: !4564)
!4933 = !DILocation(line: 3671, column: 32, scope: !4564)
!4934 = !DILocation(line: 3671, column: 2, scope: !4564)
!4935 = !DILocation(line: 3671, column: 8, scope: !4564)
!4936 = !DILocation(line: 3671, column: 24, scope: !4564)
!4937 = !DILocation(line: 3672, column: 15, scope: !4564)
!4938 = !DILocation(line: 21, column: 15, scope: !4632, inlinedAt: !4637)
!4939 = !DILocation(line: 19, column: 2, scope: !4632, inlinedAt: !4637)
!4940 = !DILocation(line: 23, column: 9, scope: !4632, inlinedAt: !4637)
!4941 = !DILocation(line: 3672, column: 2, scope: !4564)
!4942 = !DILocation(line: 3672, column: 8, scope: !4564)
!4943 = !DILocation(line: 3672, column: 13, scope: !4564)
!4944 = !DILocation(line: 3673, column: 38, scope: !4564)
!4945 = !DILocation(line: 3673, column: 44, scope: !4564)
!4946 = !DILocation(line: 3673, column: 36, scope: !4564)
!4947 = !DILocation(line: 3673, column: 7, scope: !4564)
!4948 = !DILocation(line: 3674, column: 34, scope: !4564)
!4949 = !DILocation(line: 3674, column: 26, scope: !4564)
!4950 = !DILocation(line: 3674, column: 2, scope: !4564)
!4951 = !DILocation(line: 3674, column: 8, scope: !4564)
!4952 = !DILocation(line: 3674, column: 24, scope: !4564)
!4953 = !DILocation(line: 3676, column: 6, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3676, column: 6)
!4955 = !DILocation(line: 3676, column: 12, scope: !4954)
!4956 = !DILocation(line: 3676, column: 28, scope: !4954)
!4957 = !DILocation(line: 3676, column: 36, scope: !4954)
!4958 = !DILocation(line: 3676, column: 39, scope: !4954)
!4959 = !DILocation(line: 3676, column: 45, scope: !4954)
!4960 = !DILocation(line: 3676, column: 61, scope: !4954)
!4961 = !DILocation(line: 3676, column: 6, scope: !4564)
!4962 = !DILocation(line: 3677, column: 7, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 3676, column: 70)
!4964 = !DILocation(line: 3678, column: 3, scope: !4963)
!4965 = !DILocation(line: 3681, column: 22, scope: !4564)
!4966 = !DILocation(line: 3681, column: 28, scope: !4564)
!4967 = !DILocation(line: 3681, column: 44, scope: !4564)
!4968 = !DILocation(line: 3681, column: 2, scope: !4564)
!4969 = !DILocation(line: 3681, column: 8, scope: !4564)
!4970 = !DILocation(line: 3681, column: 20, scope: !4564)
!4971 = !DILocation(line: 3682, column: 22, scope: !4564)
!4972 = !DILocation(line: 3682, column: 28, scope: !4564)
!4973 = !DILocation(line: 3682, column: 44, scope: !4564)
!4974 = !DILocation(line: 3682, column: 2, scope: !4564)
!4975 = !DILocation(line: 3682, column: 8, scope: !4564)
!4976 = !DILocation(line: 3682, column: 20, scope: !4564)
!4977 = !DILocation(line: 3684, column: 25, scope: !4564)
!4978 = !DILocation(line: 3684, column: 16, scope: !4564)
!4979 = !DILocation(line: 3684, column: 14, scope: !4564)
!4980 = !DILocation(line: 3685, column: 17, scope: !4564)
!4981 = !DILocation(line: 3685, column: 29, scope: !4564)
!4982 = !DILocation(line: 3685, column: 36, scope: !4564)
!4983 = !DILocation(line: 3685, column: 14, scope: !4564)
!4984 = !DILocation(line: 3686, column: 15, scope: !4564)
!4985 = !DILocation(line: 3686, column: 27, scope: !4564)
!4986 = !DILocation(line: 3686, column: 13, scope: !4564)
!4987 = !DILocation(line: 3687, column: 25, scope: !4564)
!4988 = !DILocation(line: 3687, column: 16, scope: !4564)
!4989 = !DILocation(line: 3687, column: 10, scope: !4564)
!4990 = !DILocation(line: 3687, column: 48, scope: !4564)
!4991 = !DILocation(line: 3688, column: 12, scope: !4564)
!4992 = !DILocation(line: 3688, column: 3, scope: !4564)
!4993 = !DILocation(line: 3687, column: 55, scope: !4564)
!4994 = !DILocation(line: 3687, column: 7, scope: !4564)
!4995 = !DILocation(line: 3690, column: 8, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3690, column: 6)
!4997 = !DILocation(line: 3690, column: 14, scope: !4996)
!4998 = !DILocation(line: 3690, column: 21, scope: !4996)
!4999 = !DILocation(line: 3690, column: 6, scope: !4564)
!5000 = !DILocation(line: 3691, column: 18, scope: !4996)
!5001 = !DILocation(line: 3691, column: 3, scope: !4996)
!5002 = !DILocation(line: 3692, column: 18, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3692, column: 6)
!5004 = !DILocation(line: 3692, column: 23, scope: !5003)
!5005 = !DILocation(line: 3693, column: 24, scope: !5003)
!5006 = !DILocation(line: 3693, column: 4, scope: !5003)
!5007 = !DILocation(line: 3694, column: 22, scope: !5003)
!5008 = !DILocation(line: 3692, column: 6, scope: !5003)
!5009 = !DILocation(line: 3692, column: 6, scope: !4564)
!5010 = !DILocation(line: 3695, column: 3, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 3694, column: 29)
!5012 = !DILocation(line: 3696, column: 7, scope: !5011)
!5013 = !DILocation(line: 3697, column: 3, scope: !5011)
!5014 = !DILocation(line: 3700, column: 21, scope: !4564)
!5015 = !DILocation(line: 3700, column: 27, scope: !4564)
!5016 = !DILocation(line: 3700, column: 33, scope: !4564)
!5017 = !DILocation(line: 3700, column: 46, scope: !4564)
!5018 = !DILocation(line: 3700, column: 58, scope: !4564)
!5019 = !DILocation(line: 3700, column: 8, scope: !4564)
!5020 = !DILocation(line: 3700, column: 6, scope: !4564)
!5021 = !DILocation(line: 3701, column: 6, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 3701, column: 6)
!5023 = !DILocation(line: 3701, column: 6, scope: !4564)
!5024 = !DILocation(line: 3702, column: 3, scope: !5022)
!5025 = !DILocation(line: 3704, column: 21, scope: !4564)
!5026 = !DILocation(line: 3704, column: 12, scope: !4564)
!5027 = !DILocation(line: 3704, column: 45, scope: !4564)
!5028 = !DILocation(line: 3704, column: 10, scope: !4564)
!5029 = !DILocation(line: 3705, column: 2, scope: !4564)
!5030 = !DILocation(line: 3713, column: 2, scope: !4564)
!5031 = !DILabel(scope: !4564, name: "fail_irq", file: !3, line: 3715)
!5032 = !DILocation(line: 3715, column: 2, scope: !4564)
!5033 = !DILocation(line: 3716, column: 11, scope: !4564)
!5034 = !DILocation(line: 3716, column: 16, scope: !4564)
!5035 = !DILocation(line: 3716, column: 21, scope: !4564)
!5036 = !DILocation(line: 3716, column: 2, scope: !4564)
!5037 = !DILabel(scope: !4564, name: "fail_msi", file: !3, line: 3717)
!5038 = !DILocation(line: 3717, column: 2, scope: !4564)
!5039 = !DILocation(line: 3718, column: 18, scope: !4564)
!5040 = !DILocation(line: 3718, column: 2, scope: !4564)
!5041 = !DILabel(scope: !4564, name: "fail_contexts", file: !3, line: 3719)
!5042 = !DILocation(line: 3719, column: 2, scope: !4564)
!5043 = !DILocation(line: 3720, column: 8, scope: !4564)
!5044 = !DILocation(line: 3720, column: 14, scope: !4564)
!5045 = !DILocation(line: 3720, column: 2, scope: !4564)
!5046 = !DILocation(line: 3721, column: 8, scope: !4564)
!5047 = !DILocation(line: 3721, column: 14, scope: !4564)
!5048 = !DILocation(line: 3721, column: 2, scope: !4564)
!5049 = !DILocation(line: 3722, column: 19, scope: !4564)
!5050 = !DILocation(line: 3722, column: 25, scope: !4564)
!5051 = !DILocation(line: 3722, column: 2, scope: !4564)
!5052 = !DILabel(scope: !4564, name: "fail_atreq_ctx", file: !3, line: 3723)
!5053 = !DILocation(line: 3723, column: 2, scope: !4564)
!5054 = !DILocation(line: 3724, column: 19, scope: !4564)
!5055 = !DILocation(line: 3724, column: 25, scope: !4564)
!5056 = !DILocation(line: 3724, column: 2, scope: !4564)
!5057 = !DILabel(scope: !4564, name: "fail_arrsp_ctx", file: !3, line: 3725)
!5058 = !DILocation(line: 3725, column: 2, scope: !4564)
!5059 = !DILocation(line: 3726, column: 22, scope: !4564)
!5060 = !DILocation(line: 3726, column: 28, scope: !4564)
!5061 = !DILocation(line: 3726, column: 2, scope: !4564)
!5062 = !DILabel(scope: !4564, name: "fail_arreq_ctx", file: !3, line: 3727)
!5063 = !DILocation(line: 3727, column: 2, scope: !4564)
!5064 = !DILocation(line: 3728, column: 22, scope: !4564)
!5065 = !DILocation(line: 3728, column: 28, scope: !4564)
!5066 = !DILocation(line: 3728, column: 2, scope: !4564)
!5067 = !DILabel(scope: !4564, name: "fail_misc_buf", file: !3, line: 3729)
!5068 = !DILocation(line: 3729, column: 2, scope: !4564)
!5069 = !DILocation(line: 3730, column: 20, scope: !4564)
!5070 = !DILocation(line: 3730, column: 26, scope: !4564)
!5071 = !DILocation(line: 3730, column: 31, scope: !4564)
!5072 = !DILocation(line: 3731, column: 6, scope: !4564)
!5073 = !DILocation(line: 3731, column: 12, scope: !4564)
!5074 = !DILocation(line: 3731, column: 25, scope: !4564)
!5075 = !DILocation(line: 3731, column: 31, scope: !4564)
!5076 = !DILocation(line: 3730, column: 2, scope: !4564)
!5077 = !DILabel(scope: !4564, name: "fail_iounmap", file: !3, line: 3732)
!5078 = !DILocation(line: 3732, column: 2, scope: !4564)
!5079 = !DILocation(line: 3733, column: 14, scope: !4564)
!5080 = !DILocation(line: 3733, column: 19, scope: !4564)
!5081 = !DILocation(line: 3733, column: 25, scope: !4564)
!5082 = !DILocation(line: 3733, column: 2, scope: !4564)
!5083 = !DILabel(scope: !4564, name: "fail_iomem", file: !3, line: 3734)
!5084 = !DILocation(line: 3734, column: 2, scope: !4564)
!5085 = !DILocation(line: 3735, column: 21, scope: !4564)
!5086 = !DILocation(line: 3735, column: 2, scope: !4564)
!5087 = !DILabel(scope: !4564, name: "fail_disable", file: !3, line: 3736)
!5088 = !DILocation(line: 3736, column: 2, scope: !4564)
!5089 = !DILocation(line: 3737, column: 21, scope: !4564)
!5090 = !DILocation(line: 3737, column: 2, scope: !4564)
!5091 = !DILabel(scope: !4564, name: "fail_free", file: !3, line: 3738)
!5092 = !DILocation(line: 3738, column: 2, scope: !4564)
!5093 = !DILocation(line: 3739, column: 8, scope: !4564)
!5094 = !DILocation(line: 3739, column: 2, scope: !4564)
!5095 = !DILocation(line: 3740, column: 16, scope: !4564)
!5096 = !DILocation(line: 3740, column: 2, scope: !4564)
!5097 = !DILabel(scope: !4564, name: "fail", file: !3, line: 3741)
!5098 = !DILocation(line: 3741, column: 2, scope: !4564)
!5099 = !DILocation(line: 3742, column: 9, scope: !4564)
!5100 = !DILocation(line: 3742, column: 2, scope: !4564)
!5101 = !DILocation(line: 3743, column: 1, scope: !4564)
!5102 = distinct !DISubprogram(name: "pci_remove", scope: !3, file: !3, line: 3745, type: !4514, scopeLine: 3746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5103 = !DILocalVariable(name: "dev", arg: 1, scope: !5102, file: !3, line: 3745, type: !4298)
!5104 = !DILocation(line: 3745, column: 40, scope: !5102)
!5105 = !DILocalVariable(name: "ohci", scope: !5102, file: !3, line: 3747, type: !187)
!5106 = !DILocation(line: 3747, column: 18, scope: !5102)
!5107 = !DILocation(line: 3747, column: 41, scope: !5102)
!5108 = !DILocation(line: 3747, column: 25, scope: !5102)
!5109 = !DILocation(line: 3753, column: 15, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 3753, column: 6)
!5111 = !DILocation(line: 3753, column: 6, scope: !5110)
!5112 = !DILocation(line: 3753, column: 44, scope: !5110)
!5113 = !DILocation(line: 3753, column: 6, scope: !5102)
!5114 = !DILocation(line: 3754, column: 13, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 3753, column: 70)
!5116 = !DILocation(line: 3754, column: 3, scope: !5115)
!5117 = !DILocation(line: 3755, column: 16, scope: !5115)
!5118 = !DILocation(line: 3755, column: 3, scope: !5115)
!5119 = !DILocation(line: 3756, column: 2, scope: !5115)
!5120 = !DILocation(line: 3757, column: 20, scope: !5102)
!5121 = !DILocation(line: 3757, column: 26, scope: !5102)
!5122 = !DILocation(line: 3757, column: 2, scope: !5102)
!5123 = !DILocation(line: 3758, column: 23, scope: !5102)
!5124 = !DILocation(line: 3758, column: 29, scope: !5102)
!5125 = !DILocation(line: 3758, column: 2, scope: !5102)
!5126 = !DILocation(line: 3765, column: 17, scope: !5102)
!5127 = !DILocation(line: 3765, column: 2, scope: !5102)
!5128 = !DILocation(line: 3766, column: 11, scope: !5102)
!5129 = !DILocation(line: 3766, column: 16, scope: !5102)
!5130 = !DILocation(line: 3766, column: 21, scope: !5102)
!5131 = !DILocation(line: 3766, column: 2, scope: !5102)
!5132 = !DILocation(line: 3768, column: 6, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 3768, column: 6)
!5134 = !DILocation(line: 3768, column: 12, scope: !5133)
!5135 = !DILocation(line: 3768, column: 28, scope: !5133)
!5136 = !DILocation(line: 3768, column: 31, scope: !5133)
!5137 = !DILocation(line: 3768, column: 37, scope: !5133)
!5138 = !DILocation(line: 3768, column: 56, scope: !5133)
!5139 = !DILocation(line: 3768, column: 62, scope: !5133)
!5140 = !DILocation(line: 3768, column: 53, scope: !5133)
!5141 = !DILocation(line: 3768, column: 6, scope: !5102)
!5142 = !DILocation(line: 3769, column: 21, scope: !5133)
!5143 = !DILocation(line: 3769, column: 27, scope: !5133)
!5144 = !DILocation(line: 3769, column: 32, scope: !5133)
!5145 = !DILocation(line: 3770, column: 7, scope: !5133)
!5146 = !DILocation(line: 3770, column: 13, scope: !5133)
!5147 = !DILocation(line: 3770, column: 30, scope: !5133)
!5148 = !DILocation(line: 3770, column: 36, scope: !5133)
!5149 = !DILocation(line: 3769, column: 3, scope: !5133)
!5150 = !DILocation(line: 3771, column: 6, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 3771, column: 6)
!5152 = !DILocation(line: 3771, column: 12, scope: !5151)
!5153 = !DILocation(line: 3771, column: 6, scope: !5102)
!5154 = !DILocation(line: 3772, column: 21, scope: !5151)
!5155 = !DILocation(line: 3772, column: 27, scope: !5151)
!5156 = !DILocation(line: 3772, column: 32, scope: !5151)
!5157 = !DILocation(line: 3773, column: 7, scope: !5151)
!5158 = !DILocation(line: 3773, column: 13, scope: !5151)
!5159 = !DILocation(line: 3773, column: 25, scope: !5151)
!5160 = !DILocation(line: 3773, column: 31, scope: !5151)
!5161 = !DILocation(line: 3772, column: 3, scope: !5151)
!5162 = !DILocation(line: 3774, column: 22, scope: !5102)
!5163 = !DILocation(line: 3774, column: 28, scope: !5102)
!5164 = !DILocation(line: 3774, column: 2, scope: !5102)
!5165 = !DILocation(line: 3775, column: 22, scope: !5102)
!5166 = !DILocation(line: 3775, column: 28, scope: !5102)
!5167 = !DILocation(line: 3775, column: 2, scope: !5102)
!5168 = !DILocation(line: 3776, column: 20, scope: !5102)
!5169 = !DILocation(line: 3776, column: 26, scope: !5102)
!5170 = !DILocation(line: 3776, column: 31, scope: !5102)
!5171 = !DILocation(line: 3777, column: 6, scope: !5102)
!5172 = !DILocation(line: 3777, column: 12, scope: !5102)
!5173 = !DILocation(line: 3777, column: 25, scope: !5102)
!5174 = !DILocation(line: 3777, column: 31, scope: !5102)
!5175 = !DILocation(line: 3776, column: 2, scope: !5102)
!5176 = !DILocation(line: 3778, column: 19, scope: !5102)
!5177 = !DILocation(line: 3778, column: 25, scope: !5102)
!5178 = !DILocation(line: 3778, column: 2, scope: !5102)
!5179 = !DILocation(line: 3779, column: 19, scope: !5102)
!5180 = !DILocation(line: 3779, column: 25, scope: !5102)
!5181 = !DILocation(line: 3779, column: 2, scope: !5102)
!5182 = !DILocation(line: 3780, column: 8, scope: !5102)
!5183 = !DILocation(line: 3780, column: 14, scope: !5102)
!5184 = !DILocation(line: 3780, column: 2, scope: !5102)
!5185 = !DILocation(line: 3781, column: 8, scope: !5102)
!5186 = !DILocation(line: 3781, column: 14, scope: !5102)
!5187 = !DILocation(line: 3781, column: 2, scope: !5102)
!5188 = !DILocation(line: 3782, column: 18, scope: !5102)
!5189 = !DILocation(line: 3782, column: 2, scope: !5102)
!5190 = !DILocation(line: 3783, column: 14, scope: !5102)
!5191 = !DILocation(line: 3783, column: 19, scope: !5102)
!5192 = !DILocation(line: 3783, column: 25, scope: !5102)
!5193 = !DILocation(line: 3783, column: 2, scope: !5102)
!5194 = !DILocation(line: 3784, column: 21, scope: !5102)
!5195 = !DILocation(line: 3784, column: 2, scope: !5102)
!5196 = !DILocation(line: 3785, column: 21, scope: !5102)
!5197 = !DILocation(line: 3785, column: 2, scope: !5102)
!5198 = !DILocation(line: 3786, column: 8, scope: !5102)
!5199 = !DILocation(line: 3786, column: 2, scope: !5102)
!5200 = !DILocation(line: 3787, column: 16, scope: !5102)
!5201 = !DILocation(line: 3787, column: 2, scope: !5102)
!5202 = !DILocation(line: 3789, column: 2, scope: !5102)
!5203 = !DILocation(line: 3790, column: 1, scope: !5102)
!5204 = distinct !DISubprogram(name: "pci_suspend", scope: !3, file: !3, line: 3793, type: !4518, scopeLine: 3794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5205 = !DILocalVariable(name: "dev", arg: 1, scope: !5204, file: !3, line: 3793, type: !4298)
!5206 = !DILocation(line: 3793, column: 40, scope: !5204)
!5207 = !DILocalVariable(name: "state", arg: 2, scope: !5204, file: !3, line: 3793, type: !3598)
!5208 = !DILocation(line: 3793, column: 58, scope: !5204)
!5209 = !DILocalVariable(name: "ohci", scope: !5204, file: !3, line: 3795, type: !187)
!5210 = !DILocation(line: 3795, column: 18, scope: !5204)
!5211 = !DILocation(line: 3795, column: 41, scope: !5204)
!5212 = !DILocation(line: 3795, column: 25, scope: !5204)
!5213 = !DILocalVariable(name: "err", scope: !5204, file: !3, line: 3796, type: !177)
!5214 = !DILocation(line: 3796, column: 6, scope: !5204)
!5215 = !DILocation(line: 3798, column: 17, scope: !5204)
!5216 = !DILocation(line: 3798, column: 2, scope: !5204)
!5217 = !DILocation(line: 3799, column: 23, scope: !5204)
!5218 = !DILocation(line: 3799, column: 8, scope: !5204)
!5219 = !DILocation(line: 3799, column: 6, scope: !5204)
!5220 = !DILocation(line: 3800, column: 6, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 3800, column: 6)
!5222 = !DILocation(line: 3800, column: 6, scope: !5204)
!5223 = !DILocation(line: 3801, column: 3, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 3800, column: 11)
!5225 = !DILocation(line: 3802, column: 10, scope: !5224)
!5226 = !DILocation(line: 3802, column: 3, scope: !5224)
!5227 = !DILocation(line: 3804, column: 28, scope: !5204)
!5228 = !DILocation(line: 3804, column: 50, scope: !5204)
!5229 = !DILocation(line: 3804, column: 33, scope: !5204)
!5230 = !DILocation(line: 3804, column: 8, scope: !5204)
!5231 = !DILocation(line: 3804, column: 6, scope: !5204)
!5232 = !DILocation(line: 3805, column: 6, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 3805, column: 6)
!5234 = !DILocation(line: 3805, column: 6, scope: !5204)
!5235 = !DILocation(line: 3806, column: 3, scope: !5233)
!5236 = !DILocation(line: 3807, column: 16, scope: !5204)
!5237 = !DILocation(line: 3807, column: 2, scope: !5204)
!5238 = !DILocation(line: 3809, column: 2, scope: !5204)
!5239 = !DILocation(line: 3810, column: 1, scope: !5204)
!5240 = distinct !DISubprogram(name: "pci_resume", scope: !3, file: !3, line: 3812, type: !4522, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5241 = !DILocalVariable(name: "dev", arg: 1, scope: !5240, file: !3, line: 3812, type: !4298)
!5242 = !DILocation(line: 3812, column: 39, scope: !5240)
!5243 = !DILocalVariable(name: "ohci", scope: !5240, file: !3, line: 3814, type: !187)
!5244 = !DILocation(line: 3814, column: 18, scope: !5240)
!5245 = !DILocation(line: 3814, column: 41, scope: !5240)
!5246 = !DILocation(line: 3814, column: 25, scope: !5240)
!5247 = !DILocalVariable(name: "err", scope: !5240, file: !3, line: 3815, type: !177)
!5248 = !DILocation(line: 3815, column: 6, scope: !5240)
!5249 = !DILocation(line: 3817, column: 15, scope: !5240)
!5250 = !DILocation(line: 3817, column: 2, scope: !5240)
!5251 = !DILocation(line: 3818, column: 22, scope: !5240)
!5252 = !DILocation(line: 3818, column: 2, scope: !5240)
!5253 = !DILocation(line: 3819, column: 20, scope: !5240)
!5254 = !DILocation(line: 3819, column: 2, scope: !5240)
!5255 = !DILocation(line: 3820, column: 26, scope: !5240)
!5256 = !DILocation(line: 3820, column: 8, scope: !5240)
!5257 = !DILocation(line: 3820, column: 6, scope: !5240)
!5258 = !DILocation(line: 3821, column: 6, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 3821, column: 6)
!5260 = !DILocation(line: 3821, column: 6, scope: !5240)
!5261 = !DILocation(line: 3822, column: 3, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 3821, column: 11)
!5263 = !DILocation(line: 3823, column: 10, scope: !5262)
!5264 = !DILocation(line: 3823, column: 3, scope: !5262)
!5265 = !DILocation(line: 3827, column: 16, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 3827, column: 6)
!5267 = !DILocation(line: 3827, column: 7, scope: !5266)
!5268 = !DILocation(line: 3827, column: 39, scope: !5266)
!5269 = !DILocation(line: 3828, column: 16, scope: !5266)
!5270 = !DILocation(line: 3828, column: 7, scope: !5266)
!5271 = !DILocation(line: 3827, column: 6, scope: !5240)
!5272 = !DILocation(line: 3829, column: 13, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 3828, column: 40)
!5274 = !DILocation(line: 3829, column: 41, scope: !5273)
!5275 = !DILocation(line: 3829, column: 47, scope: !5273)
!5276 = !DILocation(line: 3829, column: 52, scope: !5273)
!5277 = !DILocation(line: 3829, column: 36, scope: !5273)
!5278 = !DILocation(line: 3829, column: 3, scope: !5273)
!5279 = !DILocation(line: 3830, column: 13, scope: !5273)
!5280 = !DILocation(line: 3830, column: 42, scope: !5273)
!5281 = !DILocation(line: 3830, column: 48, scope: !5273)
!5282 = !DILocation(line: 3830, column: 53, scope: !5273)
!5283 = !DILocation(line: 3830, column: 58, scope: !5273)
!5284 = !DILocation(line: 3830, column: 36, scope: !5273)
!5285 = !DILocation(line: 3830, column: 3, scope: !5273)
!5286 = !DILocation(line: 3831, column: 2, scope: !5273)
!5287 = !DILocation(line: 3833, column: 21, scope: !5240)
!5288 = !DILocation(line: 3833, column: 27, scope: !5240)
!5289 = !DILocation(line: 3833, column: 8, scope: !5240)
!5290 = !DILocation(line: 3833, column: 6, scope: !5240)
!5291 = !DILocation(line: 3834, column: 6, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 3834, column: 6)
!5293 = !DILocation(line: 3834, column: 6, scope: !5240)
!5294 = !DILocation(line: 3835, column: 10, scope: !5292)
!5295 = !DILocation(line: 3835, column: 3, scope: !5292)
!5296 = !DILocation(line: 3837, column: 22, scope: !5240)
!5297 = !DILocation(line: 3837, column: 2, scope: !5240)
!5298 = !DILocation(line: 3839, column: 2, scope: !5240)
!5299 = !DILocation(line: 3840, column: 1, scope: !5240)
!5300 = distinct !DISubprogram(name: "kzalloc", scope: !134, file: !134, line: 662, type: !5301, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{!175, !207, !173}
!5303 = !DILocalVariable(name: "s", arg: 1, scope: !5304, file: !134, line: 445, type: !2303)
!5304 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !134, file: !134, line: 445, type: !5305, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5305 = !DISubroutineType(types: !5306)
!5306 = !{!175, !2303, !173, !207}
!5307 = !DILocation(line: 445, column: 72, scope: !5304, inlinedAt: !5308)
!5308 = distinct !DILocation(line: 552, column: 10, scope: !5309, inlinedAt: !5312)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !134, line: 540, column: 34)
!5310 = distinct !DILexicalBlock(scope: !5311, file: !134, line: 540, column: 6)
!5311 = distinct !DISubprogram(name: "kmalloc", scope: !134, file: !134, line: 538, type: !5301, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5312 = distinct !DILocation(line: 664, column: 9, scope: !5300)
!5313 = !DILocalVariable(name: "flags", arg: 2, scope: !5304, file: !134, line: 446, type: !173)
!5314 = !DILocation(line: 446, column: 9, scope: !5304, inlinedAt: !5308)
!5315 = !DILocalVariable(name: "size", arg: 3, scope: !5304, file: !134, line: 446, type: !207)
!5316 = !DILocation(line: 446, column: 23, scope: !5304, inlinedAt: !5308)
!5317 = !DILocalVariable(name: "ret", scope: !5304, file: !134, line: 448, type: !175)
!5318 = !DILocation(line: 448, column: 8, scope: !5304, inlinedAt: !5308)
!5319 = !DILocalVariable(name: "flags", arg: 1, scope: !5320, file: !134, line: 318, type: !173)
!5320 = distinct !DISubprogram(name: "kmalloc_type", scope: !134, file: !134, line: 318, type: !5321, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5321 = !DISubroutineType(types: !5322)
!5322 = !{!133, !173}
!5323 = !DILocation(line: 318, column: 67, scope: !5320, inlinedAt: !5324)
!5324 = distinct !DILocation(line: 553, column: 20, scope: !5309, inlinedAt: !5312)
!5325 = !DILocalVariable(name: "size", arg: 1, scope: !5326, file: !134, line: 346, type: !207)
!5326 = distinct !DISubprogram(name: "kmalloc_index", scope: !134, file: !134, line: 346, type: !5327, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5327 = !DISubroutineType(types: !5328)
!5328 = !{!7, !207}
!5329 = !DILocation(line: 346, column: 58, scope: !5326, inlinedAt: !5330)
!5330 = distinct !DILocation(line: 547, column: 11, scope: !5309, inlinedAt: !5312)
!5331 = !DILocalVariable(name: "size", arg: 1, scope: !5332, file: !134, line: 472, type: !207)
!5332 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !134, file: !134, line: 472, type: !5333, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5333 = !DISubroutineType(types: !5334)
!5334 = !{!175, !207, !173, !7}
!5335 = !DILocation(line: 472, column: 28, scope: !5332, inlinedAt: !5336)
!5336 = distinct !DILocation(line: 481, column: 9, scope: !5337, inlinedAt: !5338)
!5337 = distinct !DISubprogram(name: "kmalloc_large", scope: !134, file: !134, line: 478, type: !5301, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5338 = distinct !DILocation(line: 545, column: 11, scope: !5339, inlinedAt: !5312)
!5339 = distinct !DILexicalBlock(scope: !5309, file: !134, line: 544, column: 7)
!5340 = !DILocalVariable(name: "flags", arg: 2, scope: !5332, file: !134, line: 472, type: !173)
!5341 = !DILocation(line: 472, column: 40, scope: !5332, inlinedAt: !5336)
!5342 = !DILocalVariable(name: "order", arg: 3, scope: !5332, file: !134, line: 472, type: !7)
!5343 = !DILocation(line: 472, column: 60, scope: !5332, inlinedAt: !5336)
!5344 = !DILocalVariable(name: "size", arg: 1, scope: !5337, file: !134, line: 478, type: !207)
!5345 = !DILocation(line: 478, column: 51, scope: !5337, inlinedAt: !5338)
!5346 = !DILocalVariable(name: "flags", arg: 2, scope: !5337, file: !134, line: 478, type: !173)
!5347 = !DILocation(line: 478, column: 63, scope: !5337, inlinedAt: !5338)
!5348 = !DILocalVariable(name: "order", scope: !5337, file: !134, line: 480, type: !7)
!5349 = !DILocation(line: 480, column: 15, scope: !5337, inlinedAt: !5338)
!5350 = !DILocalVariable(name: "size", arg: 1, scope: !5311, file: !134, line: 538, type: !207)
!5351 = !DILocation(line: 538, column: 45, scope: !5311, inlinedAt: !5312)
!5352 = !DILocalVariable(name: "flags", arg: 2, scope: !5311, file: !134, line: 538, type: !173)
!5353 = !DILocation(line: 538, column: 57, scope: !5311, inlinedAt: !5312)
!5354 = !DILocalVariable(name: "index", scope: !5309, file: !134, line: 542, type: !7)
!5355 = !DILocation(line: 542, column: 16, scope: !5309, inlinedAt: !5312)
!5356 = !DILocalVariable(name: "size", arg: 1, scope: !5300, file: !134, line: 662, type: !207)
!5357 = !DILocation(line: 662, column: 36, scope: !5300)
!5358 = !DILocalVariable(name: "flags", arg: 2, scope: !5300, file: !134, line: 662, type: !173)
!5359 = !DILocation(line: 662, column: 48, scope: !5300)
!5360 = !DILocation(line: 664, column: 17, scope: !5300)
!5361 = !DILocation(line: 664, column: 23, scope: !5300)
!5362 = !DILocation(line: 664, column: 29, scope: !5300)
!5363 = !DILocation(line: 540, column: 27, scope: !5310, inlinedAt: !5312)
!5364 = !DILocation(line: 540, column: 6, scope: !5310, inlinedAt: !5312)
!5365 = !DILocation(line: 540, column: 6, scope: !5311, inlinedAt: !5312)
!5366 = !DILocation(line: 544, column: 7, scope: !5339, inlinedAt: !5312)
!5367 = !DILocation(line: 544, column: 12, scope: !5339, inlinedAt: !5312)
!5368 = !DILocation(line: 544, column: 7, scope: !5309, inlinedAt: !5312)
!5369 = !DILocation(line: 545, column: 25, scope: !5339, inlinedAt: !5312)
!5370 = !DILocation(line: 545, column: 31, scope: !5339, inlinedAt: !5312)
!5371 = !DILocation(line: 480, column: 33, scope: !5337, inlinedAt: !5338)
!5372 = !DILocation(line: 480, column: 23, scope: !5337, inlinedAt: !5338)
!5373 = !DILocation(line: 481, column: 29, scope: !5337, inlinedAt: !5338)
!5374 = !DILocation(line: 481, column: 35, scope: !5337, inlinedAt: !5338)
!5375 = !DILocation(line: 481, column: 42, scope: !5337, inlinedAt: !5338)
!5376 = !DILocation(line: 474, column: 23, scope: !5332, inlinedAt: !5336)
!5377 = !DILocation(line: 474, column: 29, scope: !5332, inlinedAt: !5336)
!5378 = !DILocation(line: 474, column: 36, scope: !5332, inlinedAt: !5336)
!5379 = !DILocation(line: 474, column: 9, scope: !5332, inlinedAt: !5336)
!5380 = !DILocation(line: 545, column: 4, scope: !5339, inlinedAt: !5312)
!5381 = !DILocation(line: 547, column: 25, scope: !5309, inlinedAt: !5312)
!5382 = !DILocation(line: 348, column: 7, scope: !5383, inlinedAt: !5330)
!5383 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 348, column: 6)
!5384 = !DILocation(line: 348, column: 6, scope: !5326, inlinedAt: !5330)
!5385 = !DILocation(line: 349, column: 3, scope: !5383, inlinedAt: !5330)
!5386 = !DILocation(line: 351, column: 6, scope: !5387, inlinedAt: !5330)
!5387 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 351, column: 6)
!5388 = !DILocation(line: 351, column: 11, scope: !5387, inlinedAt: !5330)
!5389 = !DILocation(line: 351, column: 6, scope: !5326, inlinedAt: !5330)
!5390 = !DILocation(line: 352, column: 3, scope: !5387, inlinedAt: !5330)
!5391 = !DILocation(line: 354, column: 32, scope: !5392, inlinedAt: !5330)
!5392 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 354, column: 6)
!5393 = !DILocation(line: 354, column: 37, scope: !5392, inlinedAt: !5330)
!5394 = !DILocation(line: 354, column: 42, scope: !5392, inlinedAt: !5330)
!5395 = !DILocation(line: 354, column: 45, scope: !5392, inlinedAt: !5330)
!5396 = !DILocation(line: 354, column: 50, scope: !5392, inlinedAt: !5330)
!5397 = !DILocation(line: 354, column: 6, scope: !5326, inlinedAt: !5330)
!5398 = !DILocation(line: 355, column: 3, scope: !5392, inlinedAt: !5330)
!5399 = !DILocation(line: 356, column: 32, scope: !5400, inlinedAt: !5330)
!5400 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 356, column: 6)
!5401 = !DILocation(line: 356, column: 37, scope: !5400, inlinedAt: !5330)
!5402 = !DILocation(line: 356, column: 43, scope: !5400, inlinedAt: !5330)
!5403 = !DILocation(line: 356, column: 46, scope: !5400, inlinedAt: !5330)
!5404 = !DILocation(line: 356, column: 51, scope: !5400, inlinedAt: !5330)
!5405 = !DILocation(line: 356, column: 6, scope: !5326, inlinedAt: !5330)
!5406 = !DILocation(line: 357, column: 3, scope: !5400, inlinedAt: !5330)
!5407 = !DILocation(line: 358, column: 6, scope: !5408, inlinedAt: !5330)
!5408 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 358, column: 6)
!5409 = !DILocation(line: 358, column: 11, scope: !5408, inlinedAt: !5330)
!5410 = !DILocation(line: 358, column: 6, scope: !5326, inlinedAt: !5330)
!5411 = !DILocation(line: 358, column: 26, scope: !5408, inlinedAt: !5330)
!5412 = !DILocation(line: 359, column: 6, scope: !5413, inlinedAt: !5330)
!5413 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 359, column: 6)
!5414 = !DILocation(line: 359, column: 11, scope: !5413, inlinedAt: !5330)
!5415 = !DILocation(line: 359, column: 6, scope: !5326, inlinedAt: !5330)
!5416 = !DILocation(line: 359, column: 26, scope: !5413, inlinedAt: !5330)
!5417 = !DILocation(line: 360, column: 6, scope: !5418, inlinedAt: !5330)
!5418 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 360, column: 6)
!5419 = !DILocation(line: 360, column: 11, scope: !5418, inlinedAt: !5330)
!5420 = !DILocation(line: 360, column: 6, scope: !5326, inlinedAt: !5330)
!5421 = !DILocation(line: 360, column: 26, scope: !5418, inlinedAt: !5330)
!5422 = !DILocation(line: 361, column: 6, scope: !5423, inlinedAt: !5330)
!5423 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 361, column: 6)
!5424 = !DILocation(line: 361, column: 11, scope: !5423, inlinedAt: !5330)
!5425 = !DILocation(line: 361, column: 6, scope: !5326, inlinedAt: !5330)
!5426 = !DILocation(line: 361, column: 26, scope: !5423, inlinedAt: !5330)
!5427 = !DILocation(line: 362, column: 6, scope: !5428, inlinedAt: !5330)
!5428 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 362, column: 6)
!5429 = !DILocation(line: 362, column: 11, scope: !5428, inlinedAt: !5330)
!5430 = !DILocation(line: 362, column: 6, scope: !5326, inlinedAt: !5330)
!5431 = !DILocation(line: 362, column: 26, scope: !5428, inlinedAt: !5330)
!5432 = !DILocation(line: 363, column: 6, scope: !5433, inlinedAt: !5330)
!5433 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 363, column: 6)
!5434 = !DILocation(line: 363, column: 11, scope: !5433, inlinedAt: !5330)
!5435 = !DILocation(line: 363, column: 6, scope: !5326, inlinedAt: !5330)
!5436 = !DILocation(line: 363, column: 26, scope: !5433, inlinedAt: !5330)
!5437 = !DILocation(line: 364, column: 6, scope: !5438, inlinedAt: !5330)
!5438 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 364, column: 6)
!5439 = !DILocation(line: 364, column: 11, scope: !5438, inlinedAt: !5330)
!5440 = !DILocation(line: 364, column: 6, scope: !5326, inlinedAt: !5330)
!5441 = !DILocation(line: 364, column: 26, scope: !5438, inlinedAt: !5330)
!5442 = !DILocation(line: 365, column: 6, scope: !5443, inlinedAt: !5330)
!5443 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 365, column: 6)
!5444 = !DILocation(line: 365, column: 11, scope: !5443, inlinedAt: !5330)
!5445 = !DILocation(line: 365, column: 6, scope: !5326, inlinedAt: !5330)
!5446 = !DILocation(line: 365, column: 26, scope: !5443, inlinedAt: !5330)
!5447 = !DILocation(line: 366, column: 6, scope: !5448, inlinedAt: !5330)
!5448 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 366, column: 6)
!5449 = !DILocation(line: 366, column: 11, scope: !5448, inlinedAt: !5330)
!5450 = !DILocation(line: 366, column: 6, scope: !5326, inlinedAt: !5330)
!5451 = !DILocation(line: 366, column: 26, scope: !5448, inlinedAt: !5330)
!5452 = !DILocation(line: 367, column: 6, scope: !5453, inlinedAt: !5330)
!5453 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 367, column: 6)
!5454 = !DILocation(line: 367, column: 11, scope: !5453, inlinedAt: !5330)
!5455 = !DILocation(line: 367, column: 6, scope: !5326, inlinedAt: !5330)
!5456 = !DILocation(line: 367, column: 26, scope: !5453, inlinedAt: !5330)
!5457 = !DILocation(line: 368, column: 6, scope: !5458, inlinedAt: !5330)
!5458 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 368, column: 6)
!5459 = !DILocation(line: 368, column: 11, scope: !5458, inlinedAt: !5330)
!5460 = !DILocation(line: 368, column: 6, scope: !5326, inlinedAt: !5330)
!5461 = !DILocation(line: 368, column: 26, scope: !5458, inlinedAt: !5330)
!5462 = !DILocation(line: 369, column: 6, scope: !5463, inlinedAt: !5330)
!5463 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 369, column: 6)
!5464 = !DILocation(line: 369, column: 11, scope: !5463, inlinedAt: !5330)
!5465 = !DILocation(line: 369, column: 6, scope: !5326, inlinedAt: !5330)
!5466 = !DILocation(line: 369, column: 26, scope: !5463, inlinedAt: !5330)
!5467 = !DILocation(line: 370, column: 6, scope: !5468, inlinedAt: !5330)
!5468 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 370, column: 6)
!5469 = !DILocation(line: 370, column: 11, scope: !5468, inlinedAt: !5330)
!5470 = !DILocation(line: 370, column: 6, scope: !5326, inlinedAt: !5330)
!5471 = !DILocation(line: 370, column: 26, scope: !5468, inlinedAt: !5330)
!5472 = !DILocation(line: 371, column: 6, scope: !5473, inlinedAt: !5330)
!5473 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 371, column: 6)
!5474 = !DILocation(line: 371, column: 11, scope: !5473, inlinedAt: !5330)
!5475 = !DILocation(line: 371, column: 6, scope: !5326, inlinedAt: !5330)
!5476 = !DILocation(line: 371, column: 26, scope: !5473, inlinedAt: !5330)
!5477 = !DILocation(line: 372, column: 6, scope: !5478, inlinedAt: !5330)
!5478 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 372, column: 6)
!5479 = !DILocation(line: 372, column: 11, scope: !5478, inlinedAt: !5330)
!5480 = !DILocation(line: 372, column: 6, scope: !5326, inlinedAt: !5330)
!5481 = !DILocation(line: 372, column: 26, scope: !5478, inlinedAt: !5330)
!5482 = !DILocation(line: 373, column: 6, scope: !5483, inlinedAt: !5330)
!5483 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 373, column: 6)
!5484 = !DILocation(line: 373, column: 11, scope: !5483, inlinedAt: !5330)
!5485 = !DILocation(line: 373, column: 6, scope: !5326, inlinedAt: !5330)
!5486 = !DILocation(line: 373, column: 26, scope: !5483, inlinedAt: !5330)
!5487 = !DILocation(line: 374, column: 6, scope: !5488, inlinedAt: !5330)
!5488 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 374, column: 6)
!5489 = !DILocation(line: 374, column: 11, scope: !5488, inlinedAt: !5330)
!5490 = !DILocation(line: 374, column: 6, scope: !5326, inlinedAt: !5330)
!5491 = !DILocation(line: 374, column: 26, scope: !5488, inlinedAt: !5330)
!5492 = !DILocation(line: 375, column: 6, scope: !5493, inlinedAt: !5330)
!5493 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 375, column: 6)
!5494 = !DILocation(line: 375, column: 11, scope: !5493, inlinedAt: !5330)
!5495 = !DILocation(line: 375, column: 6, scope: !5326, inlinedAt: !5330)
!5496 = !DILocation(line: 375, column: 27, scope: !5493, inlinedAt: !5330)
!5497 = !DILocation(line: 376, column: 6, scope: !5498, inlinedAt: !5330)
!5498 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 376, column: 6)
!5499 = !DILocation(line: 376, column: 11, scope: !5498, inlinedAt: !5330)
!5500 = !DILocation(line: 376, column: 6, scope: !5326, inlinedAt: !5330)
!5501 = !DILocation(line: 376, column: 32, scope: !5498, inlinedAt: !5330)
!5502 = !DILocation(line: 377, column: 6, scope: !5503, inlinedAt: !5330)
!5503 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 377, column: 6)
!5504 = !DILocation(line: 377, column: 11, scope: !5503, inlinedAt: !5330)
!5505 = !DILocation(line: 377, column: 6, scope: !5326, inlinedAt: !5330)
!5506 = !DILocation(line: 377, column: 32, scope: !5503, inlinedAt: !5330)
!5507 = !DILocation(line: 378, column: 6, scope: !5508, inlinedAt: !5330)
!5508 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 378, column: 6)
!5509 = !DILocation(line: 378, column: 11, scope: !5508, inlinedAt: !5330)
!5510 = !DILocation(line: 378, column: 6, scope: !5326, inlinedAt: !5330)
!5511 = !DILocation(line: 378, column: 32, scope: !5508, inlinedAt: !5330)
!5512 = !DILocation(line: 379, column: 6, scope: !5513, inlinedAt: !5330)
!5513 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 379, column: 6)
!5514 = !DILocation(line: 379, column: 11, scope: !5513, inlinedAt: !5330)
!5515 = !DILocation(line: 379, column: 6, scope: !5326, inlinedAt: !5330)
!5516 = !DILocation(line: 379, column: 33, scope: !5513, inlinedAt: !5330)
!5517 = !DILocation(line: 380, column: 6, scope: !5518, inlinedAt: !5330)
!5518 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 380, column: 6)
!5519 = !DILocation(line: 380, column: 11, scope: !5518, inlinedAt: !5330)
!5520 = !DILocation(line: 380, column: 6, scope: !5326, inlinedAt: !5330)
!5521 = !DILocation(line: 380, column: 33, scope: !5518, inlinedAt: !5330)
!5522 = !DILocation(line: 381, column: 6, scope: !5523, inlinedAt: !5330)
!5523 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 381, column: 6)
!5524 = !DILocation(line: 381, column: 11, scope: !5523, inlinedAt: !5330)
!5525 = !DILocation(line: 381, column: 6, scope: !5326, inlinedAt: !5330)
!5526 = !DILocation(line: 381, column: 33, scope: !5523, inlinedAt: !5330)
!5527 = !DILocation(line: 382, column: 2, scope: !5528, inlinedAt: !5330)
!5528 = distinct !DILexicalBlock(scope: !5529, file: !134, line: 382, column: 2)
!5529 = distinct !DILexicalBlock(scope: !5326, file: !134, line: 382, column: 2)
!5530 = !{i32 -2141845490, i32 -2141845461, i32 -2141845415, i32 -2141845357, i32 -2141845303, i32 -2141845249, i32 -2141845194, i32 -2141845163}
!5531 = !DILocation(line: 382, column: 2, scope: !5532, inlinedAt: !5330)
!5532 = distinct !DILexicalBlock(scope: !5533, file: !134, line: 382, column: 2)
!5533 = distinct !DILexicalBlock(scope: !5529, file: !134, line: 382, column: 2)
!5534 = !{i32 -2141844720, i32 -2141844713, i32 -2141844659, i32 -2141844628, i32 -2141844598}
!5535 = !DILocation(line: 382, column: 2, scope: !5533, inlinedAt: !5330)
!5536 = !DILocation(line: 386, column: 1, scope: !5326, inlinedAt: !5330)
!5537 = !DILocation(line: 547, column: 9, scope: !5309, inlinedAt: !5312)
!5538 = !DILocation(line: 549, column: 8, scope: !5539, inlinedAt: !5312)
!5539 = distinct !DILexicalBlock(scope: !5309, file: !134, line: 549, column: 7)
!5540 = !DILocation(line: 549, column: 7, scope: !5309, inlinedAt: !5312)
!5541 = !DILocation(line: 550, column: 4, scope: !5539, inlinedAt: !5312)
!5542 = !DILocation(line: 553, column: 33, scope: !5309, inlinedAt: !5312)
!5543 = !DILocation(line: 325, column: 6, scope: !5544, inlinedAt: !5324)
!5544 = distinct !DILexicalBlock(scope: !5320, file: !134, line: 325, column: 6)
!5545 = !DILocation(line: 325, column: 6, scope: !5320, inlinedAt: !5324)
!5546 = !DILocation(line: 326, column: 3, scope: !5544, inlinedAt: !5324)
!5547 = !DILocation(line: 332, column: 9, scope: !5320, inlinedAt: !5324)
!5548 = !DILocation(line: 332, column: 15, scope: !5320, inlinedAt: !5324)
!5549 = !DILocation(line: 332, column: 2, scope: !5320, inlinedAt: !5324)
!5550 = !DILocation(line: 336, column: 1, scope: !5320, inlinedAt: !5324)
!5551 = !DILocation(line: 553, column: 5, scope: !5309, inlinedAt: !5312)
!5552 = !DILocation(line: 553, column: 41, scope: !5309, inlinedAt: !5312)
!5553 = !DILocation(line: 554, column: 5, scope: !5309, inlinedAt: !5312)
!5554 = !DILocation(line: 554, column: 12, scope: !5309, inlinedAt: !5312)
!5555 = !DILocation(line: 448, column: 31, scope: !5304, inlinedAt: !5308)
!5556 = !DILocation(line: 448, column: 34, scope: !5304, inlinedAt: !5308)
!5557 = !DILocation(line: 448, column: 14, scope: !5304, inlinedAt: !5308)
!5558 = !DILocation(line: 450, column: 22, scope: !5304, inlinedAt: !5308)
!5559 = !DILocation(line: 450, column: 25, scope: !5304, inlinedAt: !5308)
!5560 = !DILocation(line: 450, column: 30, scope: !5304, inlinedAt: !5308)
!5561 = !DILocation(line: 450, column: 36, scope: !5304, inlinedAt: !5308)
!5562 = !DILocation(line: 450, column: 8, scope: !5304, inlinedAt: !5308)
!5563 = !DILocation(line: 450, column: 6, scope: !5304, inlinedAt: !5308)
!5564 = !DILocation(line: 451, column: 9, scope: !5304, inlinedAt: !5308)
!5565 = !DILocation(line: 552, column: 3, scope: !5309, inlinedAt: !5312)
!5566 = !DILocation(line: 557, column: 19, scope: !5311, inlinedAt: !5312)
!5567 = !DILocation(line: 557, column: 25, scope: !5311, inlinedAt: !5312)
!5568 = !DILocation(line: 557, column: 9, scope: !5311, inlinedAt: !5312)
!5569 = !DILocation(line: 557, column: 2, scope: !5311, inlinedAt: !5312)
!5570 = !DILocation(line: 558, column: 1, scope: !5311, inlinedAt: !5312)
!5571 = !DILocation(line: 664, column: 2, scope: !5300)
!5572 = distinct !DISubprogram(name: "pmac_ohci_on", scope: !3, file: !3, line: 3543, type: !4514, scopeLine: 3543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5573 = !DILocalVariable(name: "dev", arg: 1, scope: !5572, file: !3, line: 3543, type: !4298)
!5574 = !DILocation(line: 3543, column: 49, scope: !5572)
!5575 = !DILocation(line: 3543, column: 55, scope: !5572)
!5576 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !4140, file: !4140, line: 1870, type: !5577, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5577 = !DISubroutineType(types: !5578)
!5578 = !{null, !4298, !175}
!5579 = !DILocalVariable(name: "pdev", arg: 1, scope: !5576, file: !4140, line: 1870, type: !4298)
!5580 = !DILocation(line: 1870, column: 52, scope: !5576)
!5581 = !DILocalVariable(name: "data", arg: 2, scope: !5576, file: !4140, line: 1870, type: !175)
!5582 = !DILocation(line: 1870, column: 64, scope: !5576)
!5583 = !DILocation(line: 1872, column: 19, scope: !5576)
!5584 = !DILocation(line: 1872, column: 25, scope: !5576)
!5585 = !DILocation(line: 1872, column: 30, scope: !5576)
!5586 = !DILocation(line: 1872, column: 2, scope: !5576)
!5587 = !DILocation(line: 1873, column: 1, scope: !5576)
!5588 = distinct !DISubprogram(name: "__init_work", scope: !101, file: !101, line: 215, type: !5589, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5589 = !DISubroutineType(types: !5590)
!5590 = !{null, !1939, !177}
!5591 = !DILocalVariable(name: "work", arg: 1, scope: !5588, file: !101, line: 215, type: !1939)
!5592 = !DILocation(line: 215, column: 52, scope: !5588)
!5593 = !DILocalVariable(name: "onstack", arg: 2, scope: !5588, file: !101, line: 215, type: !177)
!5594 = !DILocation(line: 215, column: 62, scope: !5588)
!5595 = !DILocation(line: 215, column: 73, scope: !5588)
!5596 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !5597, file: !5597, line: 33, type: !5598, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5597 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5598 = !DISubroutineType(types: !5599)
!5599 = !{null, !253}
!5600 = !DILocalVariable(name: "list", arg: 1, scope: !5596, file: !5597, line: 33, type: !253)
!5601 = !DILocation(line: 33, column: 53, scope: !5596)
!5602 = !DILocation(line: 35, column: 2, scope: !5596)
!5603 = !DILocation(line: 35, column: 2, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5596, file: !5597, line: 35, column: 2)
!5605 = !DILocation(line: 35, column: 2, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5604, file: !5597, line: 35, column: 2)
!5607 = !DILocation(line: 35, column: 2, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5604, file: !5597, line: 35, column: 2)
!5609 = !DILocation(line: 36, column: 15, scope: !5596)
!5610 = !DILocation(line: 36, column: 2, scope: !5596)
!5611 = !DILocation(line: 36, column: 8, scope: !5596)
!5612 = !DILocation(line: 36, column: 13, scope: !5596)
!5613 = !DILocation(line: 37, column: 1, scope: !5596)
!5614 = distinct !DISubprogram(name: "bus_reset_work", scope: !3, file: !3, line: 1873, type: !1937, scopeLine: 1874, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5615 = !DILocalVariable(name: "lock", arg: 1, scope: !5616, file: !4645, line: 402, type: !1252)
!5616 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !4645, file: !4645, line: 402, type: !5617, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5617 = !DISubroutineType(types: !5618)
!5618 = !{null, !1252}
!5619 = !DILocation(line: 402, column: 57, scope: !5616, inlinedAt: !5620)
!5620 = distinct !DILocation(line: 2044, column: 2, scope: !5614)
!5621 = !DILocalVariable(name: "lock", arg: 1, scope: !5622, file: !4645, line: 377, type: !1252)
!5622 = distinct !DISubprogram(name: "spin_lock_irq", scope: !4645, file: !4645, line: 377, type: !5617, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5623 = !DILocation(line: 377, column: 55, scope: !5622, inlinedAt: !5624)
!5624 = distinct !DILocation(line: 2000, column: 2, scope: !5614)
!5625 = !DILocation(line: 402, column: 57, scope: !5616, inlinedAt: !5626)
!5626 = distinct !DILocation(line: 1990, column: 2, scope: !5614)
!5627 = !DILocation(line: 377, column: 55, scope: !5622, inlinedAt: !5628)
!5628 = distinct !DILocation(line: 1984, column: 2, scope: !5614)
!5629 = !DILocalVariable(name: "work", arg: 1, scope: !5614, file: !3, line: 1873, type: !1939)
!5630 = !DILocation(line: 1873, column: 48, scope: !5614)
!5631 = !DILocalVariable(name: "ohci", scope: !5614, file: !3, line: 1875, type: !187)
!5632 = !DILocation(line: 1875, column: 18, scope: !5614)
!5633 = !DILocalVariable(name: "__mptr", scope: !5634, file: !3, line: 1876, type: !175)
!5634 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1876, column: 3)
!5635 = !DILocation(line: 1876, column: 3, scope: !5634)
!5636 = !DILocation(line: 1876, column: 3, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1876, column: 3)
!5638 = !DILocalVariable(name: "self_id_count", scope: !5614, file: !3, line: 1877, type: !177)
!5639 = !DILocation(line: 1877, column: 6, scope: !5614)
!5640 = !DILocalVariable(name: "generation", scope: !5614, file: !3, line: 1877, type: !177)
!5641 = !DILocation(line: 1877, column: 21, scope: !5614)
!5642 = !DILocalVariable(name: "new_generation", scope: !5614, file: !3, line: 1877, type: !177)
!5643 = !DILocation(line: 1877, column: 33, scope: !5614)
!5644 = !DILocalVariable(name: "i", scope: !5614, file: !3, line: 1877, type: !177)
!5645 = !DILocation(line: 1877, column: 49, scope: !5614)
!5646 = !DILocalVariable(name: "j", scope: !5614, file: !3, line: 1877, type: !177)
!5647 = !DILocation(line: 1877, column: 52, scope: !5614)
!5648 = !DILocalVariable(name: "reg", scope: !5614, file: !3, line: 1878, type: !231)
!5649 = !DILocation(line: 1878, column: 6, scope: !5614)
!5650 = !DILocalVariable(name: "free_rom", scope: !5614, file: !3, line: 1879, type: !175)
!5651 = !DILocation(line: 1879, column: 8, scope: !5614)
!5652 = !DILocalVariable(name: "free_rom_bus", scope: !5614, file: !3, line: 1880, type: !238)
!5653 = !DILocation(line: 1880, column: 13, scope: !5614)
!5654 = !DILocalVariable(name: "is_new_root", scope: !5614, file: !3, line: 1881, type: !240)
!5655 = !DILocation(line: 1881, column: 7, scope: !5614)
!5656 = !DILocation(line: 1883, column: 17, scope: !5614)
!5657 = !DILocation(line: 1883, column: 8, scope: !5614)
!5658 = !DILocation(line: 1883, column: 6, scope: !5614)
!5659 = !DILocation(line: 1884, column: 8, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1884, column: 6)
!5661 = !DILocation(line: 1884, column: 12, scope: !5660)
!5662 = !DILocation(line: 1884, column: 6, scope: !5614)
!5663 = !DILocation(line: 1885, column: 3, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5660, file: !3, line: 1884, column: 40)
!5665 = !DILocation(line: 1887, column: 3, scope: !5664)
!5666 = !DILocation(line: 1889, column: 7, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1889, column: 6)
!5668 = !DILocation(line: 1889, column: 11, scope: !5667)
!5669 = !DILocation(line: 1889, column: 41, scope: !5667)
!5670 = !DILocation(line: 1889, column: 6, scope: !5614)
!5671 = !DILocation(line: 1890, column: 3, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 1889, column: 48)
!5673 = !DILocation(line: 1891, column: 3, scope: !5672)
!5674 = !DILocation(line: 1893, column: 18, scope: !5614)
!5675 = !DILocation(line: 1893, column: 22, scope: !5614)
!5676 = !DILocation(line: 1893, column: 2, scope: !5614)
!5677 = !DILocation(line: 1893, column: 8, scope: !5614)
!5678 = !DILocation(line: 1893, column: 16, scope: !5614)
!5679 = !DILocation(line: 1896, column: 17, scope: !5614)
!5680 = !DILocation(line: 1896, column: 21, scope: !5614)
!5681 = !DILocation(line: 1896, column: 45, scope: !5614)
!5682 = !DILocation(line: 1896, column: 14, scope: !5614)
!5683 = !DILocation(line: 1897, column: 8, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1897, column: 6)
!5685 = !DILocation(line: 1897, column: 14, scope: !5684)
!5686 = !DILocation(line: 1897, column: 22, scope: !5684)
!5687 = !DILocation(line: 1897, column: 25, scope: !5684)
!5688 = !DILocation(line: 1897, column: 6, scope: !5614)
!5689 = !DILocation(line: 1898, column: 13, scope: !5684)
!5690 = !DILocation(line: 1898, column: 3, scope: !5684)
!5691 = !DILocation(line: 1900, column: 18, scope: !5614)
!5692 = !DILocation(line: 1900, column: 2, scope: !5614)
!5693 = !DILocation(line: 1900, column: 8, scope: !5614)
!5694 = !DILocation(line: 1900, column: 16, scope: !5614)
!5695 = !DILocation(line: 1902, column: 17, scope: !5614)
!5696 = !DILocation(line: 1902, column: 8, scope: !5614)
!5697 = !DILocation(line: 1902, column: 6, scope: !5614)
!5698 = !DILocation(line: 1903, column: 6, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1903, column: 6)
!5700 = !DILocation(line: 1903, column: 10, scope: !5699)
!5701 = !DILocation(line: 1903, column: 6, scope: !5614)
!5702 = !DILocation(line: 1904, column: 3, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 1903, column: 46)
!5704 = !DILocation(line: 1905, column: 3, scope: !5703)
!5705 = !DILocation(line: 1913, column: 19, scope: !5614)
!5706 = !DILocation(line: 1913, column: 23, scope: !5614)
!5707 = !DILocation(line: 1913, column: 29, scope: !5614)
!5708 = !DILocation(line: 1913, column: 16, scope: !5614)
!5709 = !DILocation(line: 1915, column: 6, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1915, column: 6)
!5711 = !DILocation(line: 1915, column: 20, scope: !5710)
!5712 = !DILocation(line: 1915, column: 6, scope: !5614)
!5713 = !DILocation(line: 1916, column: 3, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 1915, column: 27)
!5715 = !DILocation(line: 1917, column: 3, scope: !5714)
!5716 = !DILocation(line: 1920, column: 16, scope: !5614)
!5717 = !DILocation(line: 1920, column: 51, scope: !5614)
!5718 = !DILocation(line: 1920, column: 58, scope: !5614)
!5719 = !DILocation(line: 1920, column: 13, scope: !5614)
!5720 = !DILocation(line: 1921, column: 2, scope: !5614)
!5721 = !{i32 -2141538317}
!5722 = !DILocation(line: 1923, column: 9, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1923, column: 2)
!5724 = !DILocation(line: 1923, column: 16, scope: !5723)
!5725 = !DILocation(line: 1923, column: 7, scope: !5723)
!5726 = !DILocation(line: 1923, column: 21, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 1923, column: 2)
!5728 = !DILocation(line: 1923, column: 25, scope: !5727)
!5729 = !DILocation(line: 1923, column: 23, scope: !5727)
!5730 = !DILocation(line: 1923, column: 2, scope: !5723)
!5731 = !DILocalVariable(name: "id", scope: !5732, file: !3, line: 1924, type: !231)
!5732 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 1923, column: 53)
!5733 = !DILocation(line: 1924, column: 7, scope: !5732)
!5734 = !DILocation(line: 1924, column: 13, scope: !5732)
!5735 = !DILocalVariable(name: "id2", scope: !5732, file: !3, line: 1925, type: !231)
!5736 = !DILocation(line: 1925, column: 7, scope: !5732)
!5737 = !DILocation(line: 1925, column: 13, scope: !5732)
!5738 = !DILocation(line: 1927, column: 7, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 1927, column: 7)
!5740 = !DILocation(line: 1927, column: 14, scope: !5739)
!5741 = !DILocation(line: 1927, column: 13, scope: !5739)
!5742 = !DILocation(line: 1927, column: 10, scope: !5739)
!5743 = !DILocation(line: 1927, column: 7, scope: !5732)
!5744 = !DILocation(line: 1935, column: 8, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 1935, column: 8)
!5746 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 1927, column: 19)
!5747 = !DILocation(line: 1935, column: 11, scope: !5745)
!5748 = !DILocation(line: 1935, column: 8, scope: !5746)
!5749 = !DILocation(line: 1936, column: 5, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1935, column: 26)
!5751 = !DILocation(line: 1937, column: 21, scope: !5750)
!5752 = !DILocation(line: 1937, column: 19, scope: !5750)
!5753 = !DILocation(line: 1938, column: 5, scope: !5750)
!5754 = !DILocation(line: 1941, column: 4, scope: !5746)
!5755 = !DILocation(line: 1943, column: 4, scope: !5746)
!5756 = !DILocation(line: 1945, column: 29, scope: !5732)
!5757 = !DILocation(line: 1945, column: 3, scope: !5732)
!5758 = !DILocation(line: 1945, column: 9, scope: !5732)
!5759 = !DILocation(line: 1945, column: 24, scope: !5732)
!5760 = !DILocation(line: 1945, column: 27, scope: !5732)
!5761 = !DILocation(line: 1946, column: 2, scope: !5732)
!5762 = !DILocation(line: 1923, column: 42, scope: !5727)
!5763 = !DILocation(line: 1923, column: 49, scope: !5727)
!5764 = !DILocation(line: 1923, column: 2, scope: !5727)
!5765 = distinct !{!5765, !5730, !5766}
!5766 = !DILocation(line: 1946, column: 2, scope: !5723)
!5767 = !DILocation(line: 1948, column: 6, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1948, column: 6)
!5769 = !DILocation(line: 1948, column: 12, scope: !5768)
!5770 = !DILocation(line: 1948, column: 19, scope: !5768)
!5771 = !DILocation(line: 1948, column: 6, scope: !5614)
!5772 = !DILocation(line: 1949, column: 43, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 1948, column: 39)
!5774 = !DILocation(line: 1949, column: 49, scope: !5773)
!5775 = !DILocation(line: 1949, column: 19, scope: !5773)
!5776 = !DILocation(line: 1949, column: 17, scope: !5773)
!5777 = !DILocation(line: 1950, column: 7, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 1950, column: 7)
!5779 = !DILocation(line: 1950, column: 21, scope: !5778)
!5780 = !DILocation(line: 1950, column: 7, scope: !5773)
!5781 = !DILocation(line: 1951, column: 4, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 1950, column: 26)
!5783 = !DILocation(line: 1953, column: 4, scope: !5782)
!5784 = !DILocation(line: 1955, column: 2, scope: !5773)
!5785 = !DILocation(line: 1957, column: 6, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1957, column: 6)
!5787 = !DILocation(line: 1957, column: 20, scope: !5786)
!5788 = !DILocation(line: 1957, column: 6, scope: !5614)
!5789 = !DILocation(line: 1958, column: 3, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 1957, column: 26)
!5791 = !DILocation(line: 1959, column: 3, scope: !5790)
!5792 = !DILocation(line: 1961, column: 2, scope: !5614)
!5793 = !{i32 -2141537205}
!5794 = !DILocation(line: 1977, column: 29, scope: !5614)
!5795 = !DILocation(line: 1977, column: 20, scope: !5614)
!5796 = !DILocation(line: 1977, column: 57, scope: !5614)
!5797 = !DILocation(line: 1977, column: 64, scope: !5614)
!5798 = !DILocation(line: 1977, column: 17, scope: !5614)
!5799 = !DILocation(line: 1978, column: 6, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1978, column: 6)
!5801 = !DILocation(line: 1978, column: 24, scope: !5800)
!5802 = !DILocation(line: 1978, column: 21, scope: !5800)
!5803 = !DILocation(line: 1978, column: 6, scope: !5614)
!5804 = !DILocation(line: 1979, column: 3, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 1978, column: 36)
!5806 = !DILocation(line: 1980, column: 3, scope: !5805)
!5807 = !DILocation(line: 1984, column: 17, scope: !5614)
!5808 = !DILocation(line: 1984, column: 23, scope: !5614)
!5809 = !DILocation(line: 379, column: 2, scope: !5810, inlinedAt: !5628)
!5810 = distinct !DILexicalBlock(scope: !5811, file: !4645, line: 379, column: 2)
!5811 = distinct !DILexicalBlock(scope: !5622, file: !4645, line: 379, column: 2)
!5812 = !DILocation(line: 379, column: 2, scope: !5813, inlinedAt: !5628)
!5813 = distinct !DILexicalBlock(scope: !5811, file: !4645, line: 379, column: 2)
!5814 = !{i32 -2145188618}
!5815 = !DILocation(line: 379, column: 2, scope: !5816, inlinedAt: !5628)
!5816 = distinct !DILexicalBlock(scope: !5813, file: !4645, line: 379, column: 2)
!5817 = !DILocation(line: 1986, column: 2, scope: !5614)
!5818 = !DILocation(line: 1986, column: 8, scope: !5614)
!5819 = !DILocation(line: 1986, column: 19, scope: !5614)
!5820 = !DILocation(line: 1987, column: 16, scope: !5614)
!5821 = !DILocation(line: 1987, column: 22, scope: !5614)
!5822 = !DILocation(line: 1987, column: 2, scope: !5614)
!5823 = !DILocation(line: 1988, column: 16, scope: !5614)
!5824 = !DILocation(line: 1988, column: 22, scope: !5614)
!5825 = !DILocation(line: 1988, column: 2, scope: !5614)
!5826 = !DILocation(line: 1990, column: 19, scope: !5614)
!5827 = !DILocation(line: 1990, column: 25, scope: !5614)
!5828 = !DILocation(line: 404, column: 2, scope: !5829, inlinedAt: !5626)
!5829 = distinct !DILexicalBlock(scope: !5830, file: !4645, line: 404, column: 2)
!5830 = distinct !DILexicalBlock(scope: !5616, file: !4645, line: 404, column: 2)
!5831 = !DILocation(line: 404, column: 2, scope: !5832, inlinedAt: !5626)
!5832 = distinct !DILexicalBlock(scope: !5830, file: !4645, line: 404, column: 2)
!5833 = !{i32 -2145186870}
!5834 = !DILocation(line: 404, column: 2, scope: !5835, inlinedAt: !5626)
!5835 = distinct !DILexicalBlock(scope: !5832, file: !4645, line: 404, column: 2)
!5836 = !DILocation(line: 1997, column: 20, scope: !5614)
!5837 = !DILocation(line: 1997, column: 26, scope: !5614)
!5838 = !DILocation(line: 1997, column: 2, scope: !5614)
!5839 = !DILocation(line: 1998, column: 20, scope: !5614)
!5840 = !DILocation(line: 1998, column: 26, scope: !5614)
!5841 = !DILocation(line: 1998, column: 2, scope: !5614)
!5842 = !DILocation(line: 2000, column: 17, scope: !5614)
!5843 = !DILocation(line: 2000, column: 23, scope: !5614)
!5844 = !DILocation(line: 379, column: 2, scope: !5810, inlinedAt: !5624)
!5845 = !DILocation(line: 379, column: 2, scope: !5813, inlinedAt: !5624)
!5846 = !DILocation(line: 379, column: 2, scope: !5816, inlinedAt: !5624)
!5847 = !DILocation(line: 2002, column: 21, scope: !5614)
!5848 = !DILocation(line: 2002, column: 2, scope: !5614)
!5849 = !DILocation(line: 2002, column: 8, scope: !5614)
!5850 = !DILocation(line: 2002, column: 19, scope: !5614)
!5851 = !DILocation(line: 2003, column: 12, scope: !5614)
!5852 = !DILocation(line: 2003, column: 2, scope: !5614)
!5853 = !DILocation(line: 2005, column: 6, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 2005, column: 6)
!5855 = !DILocation(line: 2005, column: 12, scope: !5854)
!5856 = !DILocation(line: 2005, column: 19, scope: !5854)
!5857 = !DILocation(line: 2005, column: 6, scope: !5614)
!5858 = !DILocation(line: 2006, column: 30, scope: !5854)
!5859 = !DILocation(line: 2006, column: 3, scope: !5854)
!5860 = !DILocation(line: 2006, column: 9, scope: !5854)
!5861 = !DILocation(line: 2006, column: 28, scope: !5854)
!5862 = !DILocation(line: 2017, column: 6, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 2017, column: 6)
!5864 = !DILocation(line: 2017, column: 12, scope: !5863)
!5865 = !DILocation(line: 2017, column: 28, scope: !5863)
!5866 = !DILocation(line: 2017, column: 6, scope: !5614)
!5867 = !DILocation(line: 2018, column: 7, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 2018, column: 7)
!5869 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 2017, column: 37)
!5870 = !DILocation(line: 2018, column: 13, scope: !5868)
!5871 = !DILocation(line: 2018, column: 32, scope: !5868)
!5872 = !DILocation(line: 2018, column: 38, scope: !5868)
!5873 = !DILocation(line: 2018, column: 29, scope: !5868)
!5874 = !DILocation(line: 2018, column: 7, scope: !5869)
!5875 = !DILocation(line: 2019, column: 20, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 2018, column: 50)
!5877 = !DILocation(line: 2019, column: 26, scope: !5876)
!5878 = !DILocation(line: 2019, column: 18, scope: !5876)
!5879 = !DILocation(line: 2020, column: 20, scope: !5876)
!5880 = !DILocation(line: 2020, column: 26, scope: !5876)
!5881 = !DILocation(line: 2020, column: 18, scope: !5876)
!5882 = !DILocation(line: 2021, column: 3, scope: !5876)
!5883 = !DILocation(line: 2022, column: 27, scope: !5869)
!5884 = !DILocation(line: 2022, column: 33, scope: !5869)
!5885 = !DILocation(line: 2022, column: 3, scope: !5869)
!5886 = !DILocation(line: 2022, column: 9, scope: !5869)
!5887 = !DILocation(line: 2022, column: 25, scope: !5869)
!5888 = !DILocation(line: 2023, column: 27, scope: !5869)
!5889 = !DILocation(line: 2023, column: 33, scope: !5869)
!5890 = !DILocation(line: 2023, column: 3, scope: !5869)
!5891 = !DILocation(line: 2023, column: 9, scope: !5869)
!5892 = !DILocation(line: 2023, column: 25, scope: !5869)
!5893 = !DILocation(line: 2024, column: 3, scope: !5869)
!5894 = !DILocation(line: 2024, column: 9, scope: !5869)
!5895 = !DILocation(line: 2024, column: 25, scope: !5869)
!5896 = !DILocation(line: 2032, column: 13, scope: !5869)
!5897 = !DILocation(line: 2033, column: 6, scope: !5869)
!5898 = !DILocation(line: 2032, column: 3, scope: !5869)
!5899 = !DILocation(line: 2034, column: 25, scope: !5869)
!5900 = !DILocation(line: 2034, column: 31, scope: !5869)
!5901 = !DILocation(line: 2034, column: 3, scope: !5869)
!5902 = !DILocation(line: 2034, column: 9, scope: !5869)
!5903 = !DILocation(line: 2034, column: 23, scope: !5869)
!5904 = !DILocation(line: 2035, column: 13, scope: !5869)
!5905 = !DILocation(line: 2036, column: 6, scope: !5869)
!5906 = !DILocation(line: 2035, column: 3, scope: !5869)
!5907 = !DILocation(line: 2037, column: 2, scope: !5869)
!5908 = !DILocation(line: 2039, column: 6, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 2039, column: 6)
!5910 = !DILocation(line: 2039, column: 6, scope: !5614)
!5911 = !DILocation(line: 2040, column: 13, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 2039, column: 24)
!5913 = !DILocation(line: 2040, column: 3, scope: !5912)
!5914 = !DILocation(line: 2041, column: 13, scope: !5912)
!5915 = !DILocation(line: 2041, column: 3, scope: !5912)
!5916 = !DILocation(line: 2042, column: 2, scope: !5912)
!5917 = !DILocation(line: 2044, column: 19, scope: !5614)
!5918 = !DILocation(line: 2044, column: 25, scope: !5614)
!5919 = !DILocation(line: 404, column: 2, scope: !5829, inlinedAt: !5620)
!5920 = !DILocation(line: 404, column: 2, scope: !5832, inlinedAt: !5620)
!5921 = !DILocation(line: 404, column: 2, scope: !5835, inlinedAt: !5620)
!5922 = !DILocation(line: 2046, column: 6, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 2046, column: 6)
!5924 = !DILocation(line: 2046, column: 6, scope: !5614)
!5925 = !DILocation(line: 2047, column: 21, scope: !5923)
!5926 = !DILocation(line: 2047, column: 27, scope: !5923)
!5927 = !DILocation(line: 2047, column: 32, scope: !5923)
!5928 = !DILocation(line: 2048, column: 7, scope: !5923)
!5929 = !DILocation(line: 2048, column: 17, scope: !5923)
!5930 = !DILocation(line: 2047, column: 3, scope: !5923)
!5931 = !DILocation(line: 2050, column: 14, scope: !5614)
!5932 = !DILocation(line: 2050, column: 20, scope: !5614)
!5933 = !DILocation(line: 2050, column: 32, scope: !5614)
!5934 = !DILocation(line: 2050, column: 2, scope: !5614)
!5935 = !DILocation(line: 2052, column: 28, scope: !5614)
!5936 = !DILocation(line: 2052, column: 34, scope: !5614)
!5937 = !DILocation(line: 2052, column: 40, scope: !5614)
!5938 = !DILocation(line: 2052, column: 46, scope: !5614)
!5939 = !DILocation(line: 2052, column: 55, scope: !5614)
!5940 = !DILocation(line: 2053, column: 6, scope: !5614)
!5941 = !DILocation(line: 2053, column: 21, scope: !5614)
!5942 = !DILocation(line: 2053, column: 27, scope: !5614)
!5943 = !DILocation(line: 2054, column: 6, scope: !5614)
!5944 = !DILocation(line: 2054, column: 12, scope: !5614)
!5945 = !DILocation(line: 2052, column: 2, scope: !5614)
!5946 = !DILocation(line: 2055, column: 2, scope: !5614)
!5947 = !DILocation(line: 2055, column: 8, scope: !5614)
!5948 = !DILocation(line: 2055, column: 36, scope: !5614)
!5949 = !DILocation(line: 2056, column: 1, scope: !5614)
!5950 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !4577, file: !4577, line: 392, type: !5951, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5951 = !DISubroutineType(types: !5952)
!5952 = !{!175, !3184, !207, !5953, !173}
!5953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!5954 = !DILocalVariable(name: "dev", arg: 1, scope: !5950, file: !4577, line: 392, type: !3184)
!5955 = !DILocation(line: 392, column: 55, scope: !5950)
!5956 = !DILocalVariable(name: "size", arg: 2, scope: !5950, file: !4577, line: 392, type: !207)
!5957 = !DILocation(line: 392, column: 67, scope: !5950)
!5958 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !5950, file: !4577, line: 393, type: !5953)
!5959 = !DILocation(line: 393, column: 15, scope: !5950)
!5960 = !DILocalVariable(name: "gfp", arg: 4, scope: !5950, file: !4577, line: 393, type: !173)
!5961 = !DILocation(line: 393, column: 33, scope: !5950)
!5962 = !DILocation(line: 396, column: 25, scope: !5950)
!5963 = !DILocation(line: 396, column: 30, scope: !5950)
!5964 = !DILocation(line: 396, column: 36, scope: !5950)
!5965 = !DILocation(line: 396, column: 48, scope: !5950)
!5966 = !DILocation(line: 397, column: 5, scope: !5950)
!5967 = !DILocation(line: 397, column: 9, scope: !5950)
!5968 = !DILocation(line: 397, column: 4, scope: !5950)
!5969 = !DILocation(line: 396, column: 9, scope: !5950)
!5970 = !DILocation(line: 396, column: 2, scope: !5950)
!5971 = distinct !DISubprogram(name: "ar_context_init", scope: !3, file: !3, line: 969, type: !5972, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!5972 = !DISubroutineType(types: !5973)
!5973 = !{!177, !4136, !187, !7, !231}
!5974 = !DILocalVariable(name: "ctx", arg: 1, scope: !5971, file: !3, line: 969, type: !4136)
!5975 = !DILocation(line: 969, column: 47, scope: !5971)
!5976 = !DILocalVariable(name: "ohci", arg: 2, scope: !5971, file: !3, line: 969, type: !187)
!5977 = !DILocation(line: 969, column: 68, scope: !5971)
!5978 = !DILocalVariable(name: "descriptors_offset", arg: 3, scope: !5971, file: !3, line: 970, type: !7)
!5979 = !DILocation(line: 970, column: 20, scope: !5971)
!5980 = !DILocalVariable(name: "regs", arg: 4, scope: !5971, file: !3, line: 970, type: !231)
!5981 = !DILocation(line: 970, column: 44, scope: !5971)
!5982 = !DILocalVariable(name: "dev", scope: !5971, file: !3, line: 972, type: !3184)
!5983 = !DILocation(line: 972, column: 17, scope: !5971)
!5984 = !DILocation(line: 972, column: 23, scope: !5971)
!5985 = !DILocation(line: 972, column: 29, scope: !5971)
!5986 = !DILocation(line: 972, column: 34, scope: !5971)
!5987 = !DILocalVariable(name: "i", scope: !5971, file: !3, line: 973, type: !7)
!5988 = !DILocation(line: 973, column: 15, scope: !5971)
!5989 = !DILocalVariable(name: "dma_addr", scope: !5971, file: !3, line: 974, type: !238)
!5990 = !DILocation(line: 974, column: 13, scope: !5971)
!5991 = !DILocalVariable(name: "pages", scope: !5971, file: !3, line: 975, type: !5992)
!5992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !340, size: 640, elements: !5993)
!5993 = !{!5994}
!5994 = !DISubrange(count: 10)
!5995 = !DILocation(line: 975, column: 15, scope: !5971)
!5996 = !DILocalVariable(name: "d", scope: !5971, file: !3, line: 976, type: !4019)
!5997 = !DILocation(line: 976, column: 21, scope: !5971)
!5998 = !DILocation(line: 978, column: 21, scope: !5971)
!5999 = !DILocation(line: 978, column: 2, scope: !5971)
!6000 = !DILocation(line: 978, column: 7, scope: !5971)
!6001 = !DILocation(line: 978, column: 19, scope: !5971)
!6002 = !DILocation(line: 979, column: 21, scope: !5971)
!6003 = !DILocation(line: 979, column: 2, scope: !5971)
!6004 = !DILocation(line: 979, column: 7, scope: !5971)
!6005 = !DILocation(line: 979, column: 19, scope: !5971)
!6006 = !DILocation(line: 980, column: 16, scope: !5971)
!6007 = !DILocation(line: 980, column: 21, scope: !5971)
!6008 = !DILocation(line: 980, column: 65, scope: !5971)
!6009 = !DILocation(line: 980, column: 50, scope: !5971)
!6010 = !DILocation(line: 980, column: 2, scope: !5971)
!6011 = !DILocation(line: 982, column: 9, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 982, column: 2)
!6013 = !DILocation(line: 982, column: 7, scope: !6012)
!6014 = !DILocation(line: 982, column: 14, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 982, column: 2)
!6016 = !DILocation(line: 982, column: 16, scope: !6015)
!6017 = !DILocation(line: 982, column: 2, scope: !6012)
!6018 = !DILocation(line: 983, column: 35, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 982, column: 35)
!6020 = !DILocation(line: 983, column: 19, scope: !6019)
!6021 = !DILocation(line: 983, column: 3, scope: !6019)
!6022 = !DILocation(line: 983, column: 8, scope: !6019)
!6023 = !DILocation(line: 983, column: 14, scope: !6019)
!6024 = !DILocation(line: 983, column: 17, scope: !6019)
!6025 = !DILocation(line: 985, column: 8, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 985, column: 7)
!6027 = !DILocation(line: 985, column: 13, scope: !6026)
!6028 = !DILocation(line: 985, column: 19, scope: !6026)
!6029 = !DILocation(line: 985, column: 7, scope: !6019)
!6030 = !DILocation(line: 986, column: 4, scope: !6026)
!6031 = !DILocation(line: 987, column: 20, scope: !6019)
!6032 = !DILocation(line: 987, column: 25, scope: !6019)
!6033 = !DILocation(line: 987, column: 31, scope: !6019)
!6034 = !DILocation(line: 987, column: 35, scope: !6019)
!6035 = !DILocation(line: 987, column: 3, scope: !6019)
!6036 = !DILocation(line: 988, column: 30, scope: !6019)
!6037 = !DILocation(line: 988, column: 35, scope: !6019)
!6038 = !DILocation(line: 988, column: 3, scope: !6019)
!6039 = !DILocation(line: 990, column: 2, scope: !6019)
!6040 = !DILocation(line: 982, column: 31, scope: !6015)
!6041 = !DILocation(line: 982, column: 2, scope: !6015)
!6042 = distinct !{!6042, !6017, !6043}
!6043 = !DILocation(line: 990, column: 2, scope: !6012)
!6044 = !DILocation(line: 992, column: 9, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 992, column: 2)
!6046 = !DILocation(line: 992, column: 7, scope: !6045)
!6047 = !DILocation(line: 992, column: 14, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 992, column: 2)
!6049 = !DILocation(line: 992, column: 16, scope: !6048)
!6050 = !DILocation(line: 992, column: 2, scope: !6045)
!6051 = !DILocation(line: 993, column: 27, scope: !6048)
!6052 = !DILocation(line: 993, column: 32, scope: !6048)
!6053 = !DILocation(line: 993, column: 38, scope: !6048)
!6054 = !DILocation(line: 993, column: 9, scope: !6048)
!6055 = !DILocation(line: 993, column: 3, scope: !6048)
!6056 = !DILocation(line: 993, column: 25, scope: !6048)
!6057 = !DILocation(line: 992, column: 31, scope: !6048)
!6058 = !DILocation(line: 992, column: 2, scope: !6048)
!6059 = distinct !{!6059, !6050, !6060}
!6060 = !DILocation(line: 993, column: 39, scope: !6045)
!6061 = !DILocation(line: 994, column: 9, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 994, column: 2)
!6063 = !DILocation(line: 994, column: 7, scope: !6062)
!6064 = !DILocation(line: 994, column: 14, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 994, column: 2)
!6066 = !DILocation(line: 994, column: 16, scope: !6065)
!6067 = !DILocation(line: 994, column: 2, scope: !6062)
!6068 = !DILocation(line: 995, column: 27, scope: !6065)
!6069 = !DILocation(line: 995, column: 32, scope: !6065)
!6070 = !DILocation(line: 995, column: 38, scope: !6065)
!6071 = !DILocation(line: 995, column: 22, scope: !6065)
!6072 = !DILocation(line: 995, column: 20, scope: !6065)
!6073 = !DILocation(line: 995, column: 3, scope: !6065)
!6074 = !DILocation(line: 995, column: 25, scope: !6065)
!6075 = !DILocation(line: 994, column: 40, scope: !6065)
!6076 = !DILocation(line: 994, column: 2, scope: !6065)
!6077 = distinct !{!6077, !6067, !6078}
!6078 = !DILocation(line: 995, column: 39, scope: !6062)
!6079 = !DILocation(line: 996, column: 21, scope: !5971)
!6080 = !DILocation(line: 996, column: 55, scope: !5971)
!6081 = !DILocation(line: 996, column: 16, scope: !5971)
!6082 = !DILocation(line: 996, column: 2, scope: !5971)
!6083 = !DILocation(line: 996, column: 7, scope: !5971)
!6084 = !DILocation(line: 996, column: 14, scope: !5971)
!6085 = !DILocation(line: 997, column: 7, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 997, column: 6)
!6087 = !DILocation(line: 997, column: 12, scope: !6086)
!6088 = !DILocation(line: 997, column: 6, scope: !5971)
!6089 = !DILocation(line: 998, column: 3, scope: !6086)
!6090 = !DILocation(line: 1000, column: 25, scope: !5971)
!6091 = !DILocation(line: 1000, column: 31, scope: !5971)
!6092 = !DILocation(line: 1000, column: 49, scope: !5971)
!6093 = !DILocation(line: 1000, column: 47, scope: !5971)
!6094 = !DILocation(line: 1000, column: 2, scope: !5971)
!6095 = !DILocation(line: 1000, column: 7, scope: !5971)
!6096 = !DILocation(line: 1000, column: 23, scope: !5971)
!6097 = !DILocation(line: 1001, column: 25, scope: !5971)
!6098 = !DILocation(line: 1001, column: 31, scope: !5971)
!6099 = !DILocation(line: 1001, column: 49, scope: !5971)
!6100 = !DILocation(line: 1001, column: 47, scope: !5971)
!6101 = !DILocation(line: 1001, column: 2, scope: !5971)
!6102 = !DILocation(line: 1001, column: 7, scope: !5971)
!6103 = !DILocation(line: 1001, column: 23, scope: !5971)
!6104 = !DILocation(line: 1003, column: 9, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 1003, column: 2)
!6106 = !DILocation(line: 1003, column: 7, scope: !6105)
!6107 = !DILocation(line: 1003, column: 14, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 1003, column: 2)
!6109 = !DILocation(line: 1003, column: 16, scope: !6108)
!6110 = !DILocation(line: 1003, column: 2, scope: !6105)
!6111 = !DILocation(line: 1004, column: 8, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 1003, column: 35)
!6113 = !DILocation(line: 1004, column: 13, scope: !6112)
!6114 = !DILocation(line: 1004, column: 25, scope: !6112)
!6115 = !DILocation(line: 1004, column: 5, scope: !6112)
!6116 = !DILocation(line: 1005, column: 3, scope: !6112)
!6117 = !DILocation(line: 1005, column: 6, scope: !6112)
!6118 = !DILocation(line: 1005, column: 21, scope: !6112)
!6119 = !DILocation(line: 1006, column: 3, scope: !6112)
!6120 = !DILocation(line: 1006, column: 6, scope: !6112)
!6121 = !DILocation(line: 1006, column: 21, scope: !6112)
!6122 = !DILocation(line: 1009, column: 23, scope: !6112)
!6123 = !DILocation(line: 1009, column: 3, scope: !6112)
!6124 = !DILocation(line: 1009, column: 6, scope: !6112)
!6125 = !DILocation(line: 1009, column: 21, scope: !6112)
!6126 = !DILocation(line: 1010, column: 23, scope: !6112)
!6127 = !DILocation(line: 1010, column: 3, scope: !6112)
!6128 = !DILocation(line: 1010, column: 6, scope: !6112)
!6129 = !DILocation(line: 1010, column: 21, scope: !6112)
!6130 = !DILocation(line: 1012, column: 2, scope: !6112)
!6131 = !DILocation(line: 1003, column: 31, scope: !6108)
!6132 = !DILocation(line: 1003, column: 2, scope: !6108)
!6133 = distinct !{!6133, !6110, !6134}
!6134 = !DILocation(line: 1012, column: 2, scope: !6105)
!6135 = !DILocation(line: 1014, column: 2, scope: !5971)
!6136 = !DILabel(scope: !5971, name: "out_of_memory", file: !3, line: 1016)
!6137 = !DILocation(line: 1016, column: 1, scope: !5971)
!6138 = !DILocation(line: 1017, column: 21, scope: !5971)
!6139 = !DILocation(line: 1017, column: 2, scope: !5971)
!6140 = !DILocation(line: 1019, column: 2, scope: !5971)
!6141 = !DILocation(line: 1020, column: 1, scope: !5971)
!6142 = distinct !DISubprogram(name: "context_init", scope: !3, file: !3, line: 1130, type: !6143, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6143 = !DISubroutineType(types: !6144)
!6144 = !{!177, !4083, !187, !231, !4079}
!6145 = !DILocalVariable(name: "ctx", arg: 1, scope: !6142, file: !3, line: 1130, type: !4083)
!6146 = !DILocation(line: 1130, column: 41, scope: !6142)
!6147 = !DILocalVariable(name: "ohci", arg: 2, scope: !6142, file: !3, line: 1130, type: !187)
!6148 = !DILocation(line: 1130, column: 62, scope: !6142)
!6149 = !DILocalVariable(name: "regs", arg: 3, scope: !6142, file: !3, line: 1131, type: !231)
!6150 = !DILocation(line: 1131, column: 8, scope: !6142)
!6151 = !DILocalVariable(name: "callback", arg: 4, scope: !6142, file: !3, line: 1131, type: !4079)
!6152 = !DILocation(line: 1131, column: 36, scope: !6142)
!6153 = !DILocation(line: 1133, column: 14, scope: !6142)
!6154 = !DILocation(line: 1133, column: 2, scope: !6142)
!6155 = !DILocation(line: 1133, column: 7, scope: !6142)
!6156 = !DILocation(line: 1133, column: 12, scope: !6142)
!6157 = !DILocation(line: 1134, column: 14, scope: !6142)
!6158 = !DILocation(line: 1134, column: 2, scope: !6142)
!6159 = !DILocation(line: 1134, column: 7, scope: !6142)
!6160 = !DILocation(line: 1134, column: 12, scope: !6142)
!6161 = !DILocation(line: 1135, column: 2, scope: !6142)
!6162 = !DILocation(line: 1135, column: 7, scope: !6142)
!6163 = !DILocation(line: 1135, column: 24, scope: !6142)
!6164 = !DILocation(line: 1137, column: 18, scope: !6142)
!6165 = !DILocation(line: 1137, column: 23, scope: !6142)
!6166 = !DILocation(line: 1137, column: 2, scope: !6142)
!6167 = !DILocation(line: 1138, column: 25, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 1138, column: 6)
!6169 = !DILocation(line: 1138, column: 6, scope: !6168)
!6170 = !DILocation(line: 1138, column: 30, scope: !6168)
!6171 = !DILocation(line: 1138, column: 6, scope: !6142)
!6172 = !DILocation(line: 1139, column: 3, scope: !6168)
!6173 = !DILocalVariable(name: "__mptr", scope: !6174, file: !3, line: 1141, type: !175)
!6174 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 1141, column: 21)
!6175 = !DILocation(line: 1141, column: 21, scope: !6174)
!6176 = !DILocation(line: 1141, column: 21, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 1141, column: 21)
!6178 = !DILocation(line: 1141, column: 2, scope: !6142)
!6179 = !DILocation(line: 1141, column: 7, scope: !6142)
!6180 = !DILocation(line: 1141, column: 19, scope: !6142)
!6181 = !DILocation(line: 1144, column: 16, scope: !6142)
!6182 = !DILocation(line: 1144, column: 21, scope: !6142)
!6183 = !DILocation(line: 1144, column: 62, scope: !6142)
!6184 = !DILocation(line: 1144, column: 47, scope: !6142)
!6185 = !DILocation(line: 1144, column: 2, scope: !6142)
!6186 = !DILocation(line: 1145, column: 18, scope: !6142)
!6187 = !DILocation(line: 1145, column: 2, scope: !6142)
!6188 = !DILocation(line: 1145, column: 7, scope: !6142)
!6189 = !DILocation(line: 1145, column: 16, scope: !6142)
!6190 = !DILocation(line: 1152, column: 9, scope: !6142)
!6191 = !DILocation(line: 1152, column: 14, scope: !6142)
!6192 = !DILocation(line: 1152, column: 27, scope: !6142)
!6193 = !DILocation(line: 1152, column: 2, scope: !6142)
!6194 = !DILocation(line: 1153, column: 2, scope: !6142)
!6195 = !DILocation(line: 1153, column: 7, scope: !6142)
!6196 = !DILocation(line: 1153, column: 20, scope: !6142)
!6197 = !DILocation(line: 1153, column: 28, scope: !6142)
!6198 = !DILocation(line: 1153, column: 36, scope: !6142)
!6199 = !DILocation(line: 1154, column: 2, scope: !6142)
!6200 = !DILocation(line: 1154, column: 7, scope: !6142)
!6201 = !DILocation(line: 1154, column: 20, scope: !6142)
!6202 = !DILocation(line: 1154, column: 28, scope: !6142)
!6203 = !DILocation(line: 1154, column: 44, scope: !6142)
!6204 = !DILocation(line: 1155, column: 2, scope: !6142)
!6205 = !DILocation(line: 1155, column: 7, scope: !6142)
!6206 = !DILocation(line: 1155, column: 20, scope: !6142)
!6207 = !DILocation(line: 1155, column: 25, scope: !6142)
!6208 = !DILocation(line: 1156, column: 14, scope: !6142)
!6209 = !DILocation(line: 1156, column: 19, scope: !6142)
!6210 = !DILocation(line: 1156, column: 32, scope: !6142)
!6211 = !DILocation(line: 1156, column: 2, scope: !6142)
!6212 = !DILocation(line: 1156, column: 7, scope: !6142)
!6213 = !DILocation(line: 1156, column: 12, scope: !6142)
!6214 = !DILocation(line: 1157, column: 14, scope: !6142)
!6215 = !DILocation(line: 1157, column: 19, scope: !6142)
!6216 = !DILocation(line: 1157, column: 32, scope: !6142)
!6217 = !DILocation(line: 1157, column: 2, scope: !6142)
!6218 = !DILocation(line: 1157, column: 7, scope: !6142)
!6219 = !DILocation(line: 1157, column: 12, scope: !6142)
!6220 = !DILocation(line: 1158, column: 2, scope: !6142)
!6221 = !DILocation(line: 1158, column: 7, scope: !6142)
!6222 = !DILocation(line: 1158, column: 14, scope: !6142)
!6223 = !DILocation(line: 1160, column: 2, scope: !6142)
!6224 = !DILocation(line: 1161, column: 1, scope: !6142)
!6225 = distinct !DISubprogram(name: "handle_at_packet", scope: !3, file: !3, line: 1425, type: !4081, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6226 = !DILocalVariable(name: "context", arg: 1, scope: !6225, file: !3, line: 1425, type: !4083)
!6227 = !DILocation(line: 1425, column: 45, scope: !6225)
!6228 = !DILocalVariable(name: "d", arg: 2, scope: !6225, file: !3, line: 1426, type: !4019)
!6229 = !DILocation(line: 1426, column: 27, scope: !6225)
!6230 = !DILocalVariable(name: "last", arg: 3, scope: !6225, file: !3, line: 1427, type: !4019)
!6231 = !DILocation(line: 1427, column: 27, scope: !6225)
!6232 = !DILocalVariable(name: "driver_data", scope: !6225, file: !3, line: 1429, type: !4122)
!6233 = !DILocation(line: 1429, column: 22, scope: !6225)
!6234 = !DILocalVariable(name: "packet", scope: !6225, file: !3, line: 1430, type: !224)
!6235 = !DILocation(line: 1430, column: 20, scope: !6225)
!6236 = !DILocalVariable(name: "ohci", scope: !6225, file: !3, line: 1431, type: !187)
!6237 = !DILocation(line: 1431, column: 18, scope: !6225)
!6238 = !DILocation(line: 1431, column: 25, scope: !6225)
!6239 = !DILocation(line: 1431, column: 34, scope: !6225)
!6240 = !DILocalVariable(name: "evt", scope: !6225, file: !3, line: 1432, type: !177)
!6241 = !DILocation(line: 1432, column: 6, scope: !6225)
!6242 = !DILocation(line: 1434, column: 6, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 1434, column: 6)
!6244 = !DILocation(line: 1434, column: 12, scope: !6243)
!6245 = !DILocation(line: 1434, column: 28, scope: !6243)
!6246 = !DILocation(line: 1434, column: 33, scope: !6243)
!6247 = !DILocation(line: 1434, column: 37, scope: !6243)
!6248 = !DILocation(line: 1434, column: 46, scope: !6243)
!6249 = !DILocation(line: 1434, column: 6, scope: !6225)
!6250 = !DILocation(line: 1436, column: 3, scope: !6243)
!6251 = !DILocation(line: 1438, column: 40, scope: !6225)
!6252 = !DILocation(line: 1438, column: 16, scope: !6225)
!6253 = !DILocation(line: 1438, column: 14, scope: !6225)
!6254 = !DILocation(line: 1439, column: 11, scope: !6225)
!6255 = !DILocation(line: 1439, column: 24, scope: !6225)
!6256 = !DILocation(line: 1439, column: 9, scope: !6225)
!6257 = !DILocation(line: 1440, column: 6, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 1440, column: 6)
!6259 = !DILocation(line: 1440, column: 13, scope: !6258)
!6260 = !DILocation(line: 1440, column: 6, scope: !6225)
!6261 = !DILocation(line: 1442, column: 3, scope: !6258)
!6262 = !DILocation(line: 1444, column: 6, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 1444, column: 6)
!6264 = !DILocation(line: 1444, column: 14, scope: !6263)
!6265 = !DILocation(line: 1444, column: 6, scope: !6225)
!6266 = !DILocation(line: 1445, column: 3, scope: !6263)
!6267 = !DILocation(line: 1448, column: 8, scope: !6225)
!6268 = !DILocation(line: 1448, column: 43, scope: !6225)
!6269 = !DILocation(line: 1448, column: 6, scope: !6225)
!6270 = !DILocation(line: 1449, column: 22, scope: !6225)
!6271 = !DILocation(line: 1449, column: 2, scope: !6225)
!6272 = !DILocation(line: 1449, column: 10, scope: !6225)
!6273 = !DILocation(line: 1449, column: 20, scope: !6225)
!6274 = !DILocation(line: 1451, column: 18, scope: !6225)
!6275 = !DILocation(line: 1451, column: 29, scope: !6225)
!6276 = !DILocation(line: 1451, column: 37, scope: !6225)
!6277 = !DILocation(line: 1451, column: 44, scope: !6225)
!6278 = !DILocation(line: 1451, column: 52, scope: !6225)
!6279 = !DILocation(line: 1451, column: 60, scope: !6225)
!6280 = !DILocation(line: 1451, column: 2, scope: !6225)
!6281 = !DILocation(line: 1453, column: 10, scope: !6225)
!6282 = !DILocation(line: 1453, column: 2, scope: !6225)
!6283 = !DILocation(line: 1456, column: 3, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 1453, column: 15)
!6285 = !DILocation(line: 1456, column: 11, scope: !6284)
!6286 = !DILocation(line: 1456, column: 15, scope: !6284)
!6287 = !DILocation(line: 1457, column: 3, scope: !6284)
!6288 = !DILocation(line: 1464, column: 3, scope: !6284)
!6289 = !DILocation(line: 1464, column: 11, scope: !6284)
!6290 = !DILocation(line: 1464, column: 15, scope: !6284)
!6291 = !DILocation(line: 1465, column: 3, scope: !6284)
!6292 = !DILocation(line: 1468, column: 7, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 1468, column: 7)
!6294 = !DILocation(line: 1468, column: 16, scope: !6293)
!6295 = !DILocation(line: 1468, column: 7, scope: !6284)
!6296 = !DILocation(line: 1469, column: 4, scope: !6293)
!6297 = !DILocation(line: 1469, column: 12, scope: !6293)
!6298 = !DILocation(line: 1469, column: 16, scope: !6293)
!6299 = !DILocation(line: 1475, column: 4, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 1470, column: 8)
!6301 = !DILocation(line: 1475, column: 12, scope: !6300)
!6302 = !DILocation(line: 1475, column: 16, scope: !6300)
!6303 = !DILocation(line: 1477, column: 3, scope: !6284)
!6304 = !DILocation(line: 1486, column: 17, scope: !6284)
!6305 = !DILocation(line: 1486, column: 21, scope: !6284)
!6306 = !DILocation(line: 1486, column: 3, scope: !6284)
!6307 = !DILocation(line: 1486, column: 11, scope: !6284)
!6308 = !DILocation(line: 1486, column: 15, scope: !6284)
!6309 = !DILocation(line: 1487, column: 3, scope: !6284)
!6310 = !DILocation(line: 1490, column: 7, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 1490, column: 7)
!6312 = !DILocation(line: 1490, column: 16, scope: !6311)
!6313 = !DILocation(line: 1490, column: 7, scope: !6284)
!6314 = !DILocation(line: 1491, column: 4, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 1490, column: 26)
!6316 = !DILocation(line: 1491, column: 12, scope: !6315)
!6317 = !DILocation(line: 1491, column: 16, scope: !6315)
!6318 = !DILocation(line: 1492, column: 4, scope: !6315)
!6319 = !DILocation(line: 1497, column: 3, scope: !6284)
!6320 = !DILocation(line: 1497, column: 11, scope: !6284)
!6321 = !DILocation(line: 1497, column: 15, scope: !6284)
!6322 = !DILocation(line: 1498, column: 3, scope: !6284)
!6323 = !DILocation(line: 1501, column: 2, scope: !6225)
!6324 = !DILocation(line: 1501, column: 10, scope: !6225)
!6325 = !DILocation(line: 1501, column: 19, scope: !6225)
!6326 = !DILocation(line: 1501, column: 28, scope: !6225)
!6327 = !DILocation(line: 1501, column: 34, scope: !6225)
!6328 = !DILocation(line: 1501, column: 40, scope: !6225)
!6329 = !DILocation(line: 1501, column: 48, scope: !6225)
!6330 = !DILocation(line: 1503, column: 2, scope: !6225)
!6331 = !DILocation(line: 1504, column: 1, scope: !6225)
!6332 = distinct !DISubprogram(name: "reg_write", scope: !3, file: !3, line: 527, type: !6333, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{null, !6335, !177, !231}
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6336, size: 64)
!6336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !188)
!6337 = !DILocalVariable(name: "ohci", arg: 1, scope: !6332, file: !3, line: 527, type: !6335)
!6338 = !DILocation(line: 527, column: 52, scope: !6332)
!6339 = !DILocalVariable(name: "offset", arg: 2, scope: !6332, file: !3, line: 527, type: !177)
!6340 = !DILocation(line: 527, column: 62, scope: !6332)
!6341 = !DILocalVariable(name: "data", arg: 3, scope: !6332, file: !3, line: 527, type: !231)
!6342 = !DILocation(line: 527, column: 74, scope: !6332)
!6343 = !DILocation(line: 529, column: 9, scope: !6332)
!6344 = !DILocation(line: 529, column: 15, scope: !6332)
!6345 = !DILocation(line: 529, column: 21, scope: !6332)
!6346 = !DILocation(line: 529, column: 33, scope: !6332)
!6347 = !DILocation(line: 529, column: 31, scope: !6332)
!6348 = !DILocation(line: 529, column: 2, scope: !6332)
!6349 = !DILocation(line: 530, column: 1, scope: !6332)
!6350 = distinct !DISubprogram(name: "reg_read", scope: !3, file: !3, line: 532, type: !6351, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6351 = !DISubroutineType(types: !6352)
!6352 = !{!231, !6335, !177}
!6353 = !DILocalVariable(name: "ohci", arg: 1, scope: !6350, file: !3, line: 532, type: !6335)
!6354 = !DILocation(line: 532, column: 50, scope: !6350)
!6355 = !DILocalVariable(name: "offset", arg: 2, scope: !6350, file: !3, line: 532, type: !177)
!6356 = !DILocation(line: 532, column: 60, scope: !6350)
!6357 = !DILocation(line: 534, column: 15, scope: !6350)
!6358 = !DILocation(line: 534, column: 21, scope: !6350)
!6359 = !DILocation(line: 534, column: 33, scope: !6350)
!6360 = !DILocation(line: 534, column: 31, scope: !6350)
!6361 = !DILocation(line: 534, column: 9, scope: !6350)
!6362 = !DILocation(line: 534, column: 2, scope: !6350)
!6363 = distinct !DISubprogram(name: "request_irq", scope: !152, file: !152, line: 157, type: !6364, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6364 = !DISubroutineType(types: !6365)
!6365 = !{!177, !7, !6366, !176, !481, !175}
!6366 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !152, line: 92, baseType: !6367)
!6367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6368, size: 64)
!6368 = !DISubroutineType(types: !6369)
!6369 = !{!6370, !177, !175}
!6370 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !146, line: 17, baseType: !145)
!6371 = !DILocalVariable(name: "irq", arg: 1, scope: !6363, file: !152, line: 157, type: !7)
!6372 = !DILocation(line: 157, column: 26, scope: !6363)
!6373 = !DILocalVariable(name: "handler", arg: 2, scope: !6363, file: !152, line: 157, type: !6366)
!6374 = !DILocation(line: 157, column: 45, scope: !6363)
!6375 = !DILocalVariable(name: "flags", arg: 3, scope: !6363, file: !152, line: 157, type: !176)
!6376 = !DILocation(line: 157, column: 68, scope: !6363)
!6377 = !DILocalVariable(name: "name", arg: 4, scope: !6363, file: !152, line: 158, type: !481)
!6378 = !DILocation(line: 158, column: 18, scope: !6363)
!6379 = !DILocalVariable(name: "dev", arg: 5, scope: !6363, file: !152, line: 158, type: !175)
!6380 = !DILocation(line: 158, column: 30, scope: !6363)
!6381 = !DILocation(line: 160, column: 30, scope: !6363)
!6382 = !DILocation(line: 160, column: 35, scope: !6363)
!6383 = !DILocation(line: 160, column: 50, scope: !6363)
!6384 = !DILocation(line: 160, column: 57, scope: !6363)
!6385 = !DILocation(line: 160, column: 63, scope: !6363)
!6386 = !DILocation(line: 160, column: 9, scope: !6363)
!6387 = !DILocation(line: 160, column: 2, scope: !6363)
!6388 = distinct !DISubprogram(name: "irq_handler", scope: !3, file: !3, line: 2058, type: !6368, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6389 = !DILocalVariable(name: "lock", arg: 1, scope: !6390, file: !4645, line: 392, type: !1252)
!6390 = distinct !DISubprogram(name: "spin_unlock", scope: !4645, file: !4645, line: 392, type: !5617, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6391 = !DILocation(line: 392, column: 53, scope: !6390, inlinedAt: !6392)
!6392 = distinct !DILocation(line: 2152, column: 3, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 2149, column: 39)
!6394 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2149, column: 6)
!6395 = !DILocalVariable(name: "lock", arg: 1, scope: !6396, file: !4645, line: 352, type: !1252)
!6396 = distinct !DISubprogram(name: "spin_lock", scope: !4645, file: !4645, line: 352, type: !5617, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6397 = !DILocation(line: 352, column: 51, scope: !6396, inlinedAt: !6398)
!6398 = distinct !DILocation(line: 2150, column: 3, scope: !6393)
!6399 = !DILocalVariable(name: "x", arg: 1, scope: !6400, file: !6401, line: 283, type: !177)
!6400 = distinct !DISubprogram(name: "ffs", scope: !6401, file: !6401, line: 283, type: !1519, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6401 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6402 = !DILocation(line: 283, column: 36, scope: !6400, inlinedAt: !6403)
!6403 = distinct !DILocation(line: 2109, column: 8, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 2108, column: 21)
!6405 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 2104, column: 32)
!6406 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2104, column: 6)
!6407 = !DILocalVariable(name: "r", scope: !6400, file: !6401, line: 285, type: !177)
!6408 = !DILocation(line: 285, column: 6, scope: !6400, inlinedAt: !6403)
!6409 = !DILocation(line: 283, column: 36, scope: !6400, inlinedAt: !6410)
!6410 = distinct !DILocation(line: 2097, column: 8, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 2096, column: 21)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 2092, column: 32)
!6413 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2092, column: 6)
!6414 = !DILocation(line: 285, column: 6, scope: !6400, inlinedAt: !6410)
!6415 = !DILocalVariable(name: "irq", arg: 1, scope: !6388, file: !3, line: 2058, type: !177)
!6416 = !DILocation(line: 2058, column: 36, scope: !6388)
!6417 = !DILocalVariable(name: "data", arg: 2, scope: !6388, file: !3, line: 2058, type: !175)
!6418 = !DILocation(line: 2058, column: 47, scope: !6388)
!6419 = !DILocalVariable(name: "ohci", scope: !6388, file: !3, line: 2060, type: !187)
!6420 = !DILocation(line: 2060, column: 18, scope: !6388)
!6421 = !DILocation(line: 2060, column: 25, scope: !6388)
!6422 = !DILocalVariable(name: "event", scope: !6388, file: !3, line: 2061, type: !231)
!6423 = !DILocation(line: 2061, column: 6, scope: !6388)
!6424 = !DILocalVariable(name: "iso_event", scope: !6388, file: !3, line: 2061, type: !231)
!6425 = !DILocation(line: 2061, column: 13, scope: !6388)
!6426 = !DILocalVariable(name: "i", scope: !6388, file: !3, line: 2062, type: !177)
!6427 = !DILocation(line: 2062, column: 6, scope: !6388)
!6428 = !DILocation(line: 2064, column: 19, scope: !6388)
!6429 = !DILocation(line: 2064, column: 10, scope: !6388)
!6430 = !DILocation(line: 2064, column: 8, scope: !6388)
!6431 = !DILocation(line: 2066, column: 7, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2066, column: 6)
!6433 = !DILocation(line: 2066, column: 13, scope: !6432)
!6434 = !DILocation(line: 2066, column: 18, scope: !6432)
!6435 = !DILocation(line: 2066, column: 17, scope: !6432)
!6436 = !DILocation(line: 2066, column: 6, scope: !6388)
!6437 = !DILocation(line: 2067, column: 3, scope: !6432)
!6438 = !DILocation(line: 2073, column: 12, scope: !6388)
!6439 = !DILocation(line: 2074, column: 5, scope: !6388)
!6440 = !DILocation(line: 2074, column: 11, scope: !6388)
!6441 = !DILocation(line: 2073, column: 2, scope: !6388)
!6442 = !DILocation(line: 2075, column: 11, scope: !6388)
!6443 = !DILocation(line: 2075, column: 17, scope: !6388)
!6444 = !DILocation(line: 2075, column: 2, scope: !6388)
!6445 = !DILocation(line: 2077, column: 6, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2077, column: 6)
!6447 = !DILocation(line: 2077, column: 12, scope: !6446)
!6448 = !DILocation(line: 2077, column: 6, scope: !6388)
!6449 = !DILocation(line: 2078, column: 14, scope: !6446)
!6450 = !DILocation(line: 2078, column: 33, scope: !6446)
!6451 = !DILocation(line: 2078, column: 39, scope: !6446)
!6452 = !DILocation(line: 2078, column: 3, scope: !6446)
!6453 = !DILocation(line: 2080, column: 6, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2080, column: 6)
!6455 = !DILocation(line: 2080, column: 12, scope: !6454)
!6456 = !DILocation(line: 2080, column: 6, scope: !6388)
!6457 = !DILocation(line: 2081, column: 21, scope: !6454)
!6458 = !DILocation(line: 2081, column: 27, scope: !6454)
!6459 = !DILocation(line: 2081, column: 42, scope: !6454)
!6460 = !DILocation(line: 2081, column: 3, scope: !6454)
!6461 = !DILocation(line: 2083, column: 6, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2083, column: 6)
!6463 = !DILocation(line: 2083, column: 12, scope: !6462)
!6464 = !DILocation(line: 2083, column: 6, scope: !6388)
!6465 = !DILocation(line: 2084, column: 21, scope: !6462)
!6466 = !DILocation(line: 2084, column: 27, scope: !6462)
!6467 = !DILocation(line: 2084, column: 43, scope: !6462)
!6468 = !DILocation(line: 2084, column: 3, scope: !6462)
!6469 = !DILocation(line: 2086, column: 6, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2086, column: 6)
!6471 = !DILocation(line: 2086, column: 12, scope: !6470)
!6472 = !DILocation(line: 2086, column: 6, scope: !6388)
!6473 = !DILocation(line: 2087, column: 21, scope: !6470)
!6474 = !DILocation(line: 2087, column: 27, scope: !6470)
!6475 = !DILocation(line: 2087, column: 42, scope: !6470)
!6476 = !DILocation(line: 2087, column: 3, scope: !6470)
!6477 = !DILocation(line: 2089, column: 6, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2089, column: 6)
!6479 = !DILocation(line: 2089, column: 12, scope: !6478)
!6480 = !DILocation(line: 2089, column: 6, scope: !6388)
!6481 = !DILocation(line: 2090, column: 21, scope: !6478)
!6482 = !DILocation(line: 2090, column: 27, scope: !6478)
!6483 = !DILocation(line: 2090, column: 43, scope: !6478)
!6484 = !DILocation(line: 2090, column: 3, scope: !6478)
!6485 = !DILocation(line: 2092, column: 6, scope: !6413)
!6486 = !DILocation(line: 2092, column: 12, scope: !6413)
!6487 = !DILocation(line: 2092, column: 6, scope: !6388)
!6488 = !DILocation(line: 2093, column: 24, scope: !6412)
!6489 = !DILocation(line: 2093, column: 15, scope: !6412)
!6490 = !DILocation(line: 2093, column: 13, scope: !6412)
!6491 = !DILocation(line: 2094, column: 13, scope: !6412)
!6492 = !DILocation(line: 2094, column: 50, scope: !6412)
!6493 = !DILocation(line: 2094, column: 3, scope: !6412)
!6494 = !DILocation(line: 2096, column: 3, scope: !6412)
!6495 = !DILocation(line: 2096, column: 10, scope: !6412)
!6496 = !DILocation(line: 2097, column: 12, scope: !6411)
!6497 = !DILocation(line: 299, column: 14, scope: !6400, inlinedAt: !6410)
!6498 = !DILocation(line: 297, column: 2, scope: !6400, inlinedAt: !6410)
!6499 = !{i32 291054}
!6500 = !DILocation(line: 310, column: 9, scope: !6400, inlinedAt: !6410)
!6501 = !DILocation(line: 310, column: 11, scope: !6400, inlinedAt: !6410)
!6502 = !DILocation(line: 2097, column: 23, scope: !6411)
!6503 = !DILocation(line: 2097, column: 6, scope: !6411)
!6504 = !DILocation(line: 2099, column: 6, scope: !6411)
!6505 = !DILocation(line: 2099, column: 12, scope: !6411)
!6506 = !DILocation(line: 2099, column: 28, scope: !6411)
!6507 = !DILocation(line: 2099, column: 31, scope: !6411)
!6508 = !DILocation(line: 2099, column: 39, scope: !6411)
!6509 = !DILocation(line: 2098, column: 4, scope: !6411)
!6510 = !DILocation(line: 2100, column: 24, scope: !6411)
!6511 = !DILocation(line: 2100, column: 21, scope: !6411)
!6512 = !DILocation(line: 2100, column: 17, scope: !6411)
!6513 = !DILocation(line: 2100, column: 14, scope: !6411)
!6514 = distinct !{!6514, !6494, !6515}
!6515 = !DILocation(line: 2101, column: 3, scope: !6412)
!6516 = !DILocation(line: 2102, column: 2, scope: !6412)
!6517 = !DILocation(line: 2104, column: 6, scope: !6406)
!6518 = !DILocation(line: 2104, column: 12, scope: !6406)
!6519 = !DILocation(line: 2104, column: 6, scope: !6388)
!6520 = !DILocation(line: 2105, column: 24, scope: !6405)
!6521 = !DILocation(line: 2105, column: 15, scope: !6405)
!6522 = !DILocation(line: 2105, column: 13, scope: !6405)
!6523 = !DILocation(line: 2106, column: 13, scope: !6405)
!6524 = !DILocation(line: 2106, column: 50, scope: !6405)
!6525 = !DILocation(line: 2106, column: 3, scope: !6405)
!6526 = !DILocation(line: 2108, column: 3, scope: !6405)
!6527 = !DILocation(line: 2108, column: 10, scope: !6405)
!6528 = !DILocation(line: 2109, column: 12, scope: !6404)
!6529 = !DILocation(line: 299, column: 14, scope: !6400, inlinedAt: !6403)
!6530 = !DILocation(line: 297, column: 2, scope: !6400, inlinedAt: !6403)
!6531 = !DILocation(line: 310, column: 9, scope: !6400, inlinedAt: !6403)
!6532 = !DILocation(line: 310, column: 11, scope: !6400, inlinedAt: !6403)
!6533 = !DILocation(line: 2109, column: 23, scope: !6404)
!6534 = !DILocation(line: 2109, column: 6, scope: !6404)
!6535 = !DILocation(line: 2111, column: 6, scope: !6404)
!6536 = !DILocation(line: 2111, column: 12, scope: !6404)
!6537 = !DILocation(line: 2111, column: 28, scope: !6404)
!6538 = !DILocation(line: 2111, column: 31, scope: !6404)
!6539 = !DILocation(line: 2111, column: 39, scope: !6404)
!6540 = !DILocation(line: 2110, column: 4, scope: !6404)
!6541 = !DILocation(line: 2112, column: 24, scope: !6404)
!6542 = !DILocation(line: 2112, column: 21, scope: !6404)
!6543 = !DILocation(line: 2112, column: 17, scope: !6404)
!6544 = !DILocation(line: 2112, column: 14, scope: !6404)
!6545 = distinct !{!6545, !6526, !6546}
!6546 = !DILocation(line: 2113, column: 3, scope: !6405)
!6547 = !DILocation(line: 2114, column: 2, scope: !6405)
!6548 = !DILocation(line: 2116, column: 6, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2116, column: 6)
!6550 = !DILocation(line: 2116, column: 6, scope: !6388)
!6551 = !DILocation(line: 2117, column: 3, scope: !6549)
!6552 = !DILocation(line: 2119, column: 6, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2119, column: 6)
!6554 = !DILocation(line: 2119, column: 6, scope: !6388)
!6555 = !DILocation(line: 2120, column: 12, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 2119, column: 49)
!6557 = !DILocation(line: 2120, column: 3, scope: !6556)
!6558 = !DILocation(line: 2121, column: 12, scope: !6556)
!6559 = !DILocation(line: 2121, column: 3, scope: !6556)
!6560 = !DILocation(line: 2122, column: 13, scope: !6556)
!6561 = !DILocation(line: 2122, column: 3, scope: !6556)
!6562 = !DILocation(line: 2124, column: 7, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 2124, column: 7)
!6564 = !DILocation(line: 2124, column: 7, scope: !6556)
!6565 = !DILocation(line: 2125, column: 4, scope: !6563)
!6566 = !DILocation(line: 2126, column: 2, scope: !6556)
!6567 = !DILocation(line: 2128, column: 6, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2128, column: 6)
!6569 = !DILocation(line: 2128, column: 6, scope: !6388)
!6570 = !DILocation(line: 2129, column: 7, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 2129, column: 7)
!6572 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 2128, column: 47)
!6573 = !DILocation(line: 2129, column: 7, scope: !6572)
!6574 = !DILocation(line: 2130, column: 4, scope: !6571)
!6575 = !DILocation(line: 2131, column: 13, scope: !6572)
!6576 = !DILocation(line: 2131, column: 3, scope: !6572)
!6577 = !DILocation(line: 2133, column: 2, scope: !6572)
!6578 = !DILocation(line: 2135, column: 6, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2135, column: 6)
!6580 = !DILocation(line: 2135, column: 6, scope: !6388)
!6581 = !DILocation(line: 2142, column: 7, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 2142, column: 7)
!6583 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 2135, column: 52)
!6584 = !DILocation(line: 2142, column: 7, scope: !6583)
!6585 = !DILocation(line: 2143, column: 4, scope: !6582)
!6586 = !DILocation(line: 2144, column: 2, scope: !6583)
!6587 = !DILocation(line: 2146, column: 6, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2146, column: 6)
!6589 = !DILocation(line: 2146, column: 6, scope: !6388)
!6590 = !DILocation(line: 2147, column: 24, scope: !6588)
!6591 = !DILocation(line: 2147, column: 3, scope: !6588)
!6592 = !DILocation(line: 2149, column: 6, scope: !6394)
!6593 = !DILocation(line: 2149, column: 12, scope: !6394)
!6594 = !DILocation(line: 2149, column: 6, scope: !6388)
!6595 = !DILocation(line: 2150, column: 14, scope: !6393)
!6596 = !DILocation(line: 2150, column: 20, scope: !6393)
!6597 = !DILocation(line: 354, column: 2, scope: !6598, inlinedAt: !6398)
!6598 = distinct !DILexicalBlock(scope: !6396, file: !4645, line: 354, column: 2)
!6599 = !{i32 -2145190513}
!6600 = !DILocation(line: 354, column: 2, scope: !6601, inlinedAt: !6398)
!6601 = distinct !DILexicalBlock(scope: !6598, file: !4645, line: 354, column: 2)
!6602 = !DILocation(line: 2151, column: 19, scope: !6393)
!6603 = !DILocation(line: 2151, column: 3, scope: !6393)
!6604 = !DILocation(line: 2152, column: 16, scope: !6393)
!6605 = !DILocation(line: 2152, column: 22, scope: !6393)
!6606 = !DILocation(line: 394, column: 2, scope: !6607, inlinedAt: !6392)
!6607 = distinct !DILexicalBlock(scope: !6390, file: !4645, line: 394, column: 2)
!6608 = !{i32 -2145188152}
!6609 = !DILocation(line: 394, column: 2, scope: !6610, inlinedAt: !6392)
!6610 = distinct !DILexicalBlock(scope: !6607, file: !4645, line: 394, column: 2)
!6611 = !DILocation(line: 2153, column: 2, scope: !6393)
!6612 = !DILocation(line: 2154, column: 16, scope: !6394)
!6613 = !DILocation(line: 2154, column: 3, scope: !6394)
!6614 = !DILocation(line: 2156, column: 2, scope: !6388)
!6615 = !DILocation(line: 2157, column: 1, scope: !6388)
!6616 = distinct !DISubprogram(name: "pci_dev_msi_enabled", scope: !4140, file: !4140, line: 688, type: !6617, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6617 = !DISubroutineType(types: !6618)
!6618 = !{!240, !4298}
!6619 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !6616, file: !4140, line: 688, type: !4298)
!6620 = !DILocation(line: 688, column: 56, scope: !6616)
!6621 = !DILocation(line: 690, column: 9, scope: !6616)
!6622 = !DILocation(line: 690, column: 18, scope: !6616)
!6623 = !DILocation(line: 690, column: 30, scope: !6616)
!6624 = !DILocation(line: 690, column: 33, scope: !6616)
!6625 = !DILocation(line: 690, column: 42, scope: !6616)
!6626 = !DILocation(line: 690, column: 2, scope: !6616)
!6627 = distinct !DISubprogram(name: "context_release", scope: !3, file: !3, line: 1163, type: !6628, scopeLine: 1164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6628 = !DISubroutineType(types: !6629)
!6629 = !{null, !4083}
!6630 = !DILocalVariable(name: "ctx", arg: 1, scope: !6627, file: !3, line: 1163, type: !4083)
!6631 = !DILocation(line: 1163, column: 45, scope: !6627)
!6632 = !DILocalVariable(name: "card", scope: !6627, file: !3, line: 1165, type: !204)
!6633 = !DILocation(line: 1165, column: 18, scope: !6627)
!6634 = !DILocation(line: 1165, column: 26, scope: !6627)
!6635 = !DILocation(line: 1165, column: 31, scope: !6627)
!6636 = !DILocation(line: 1165, column: 37, scope: !6627)
!6637 = !DILocalVariable(name: "desc", scope: !6627, file: !3, line: 1166, type: !4066)
!6638 = !DILocation(line: 1166, column: 28, scope: !6627)
!6639 = !DILocalVariable(name: "tmp", scope: !6627, file: !3, line: 1166, type: !4066)
!6640 = !DILocation(line: 1166, column: 35, scope: !6627)
!6641 = !DILocalVariable(name: "__mptr", scope: !6642, file: !3, line: 1168, type: !175)
!6642 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 1168, column: 2)
!6643 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 1168, column: 2)
!6644 = !DILocation(line: 1168, column: 2, scope: !6642)
!6645 = !DILocation(line: 1168, column: 2, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 1168, column: 2)
!6647 = !DILocation(line: 1168, column: 2, scope: !6643)
!6648 = !DILocalVariable(name: "__mptr", scope: !6649, file: !3, line: 1168, type: !175)
!6649 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 1168, column: 2)
!6650 = !DILocation(line: 1168, column: 2, scope: !6649)
!6651 = !DILocation(line: 1168, column: 2, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 1168, column: 2)
!6653 = !DILocation(line: 1168, column: 2, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 1168, column: 2)
!6655 = !DILocation(line: 1169, column: 21, scope: !6654)
!6656 = !DILocation(line: 1169, column: 27, scope: !6654)
!6657 = !DILocation(line: 1169, column: 46, scope: !6654)
!6658 = !DILocation(line: 1170, column: 4, scope: !6654)
!6659 = !DILocation(line: 1170, column: 10, scope: !6654)
!6660 = !DILocation(line: 1171, column: 14, scope: !6654)
!6661 = !DILocation(line: 1171, column: 20, scope: !6654)
!6662 = !DILocation(line: 1171, column: 5, scope: !6654)
!6663 = !DILocation(line: 1171, column: 37, scope: !6654)
!6664 = !DILocation(line: 1171, column: 29, scope: !6654)
!6665 = !DILocation(line: 1171, column: 27, scope: !6654)
!6666 = !DILocation(line: 1170, column: 21, scope: !6654)
!6667 = !DILocation(line: 1169, column: 3, scope: !6654)
!6668 = !DILocalVariable(name: "__mptr", scope: !6669, file: !3, line: 1168, type: !175)
!6669 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 1168, column: 2)
!6670 = !DILocation(line: 1168, column: 2, scope: !6669)
!6671 = !DILocation(line: 1168, column: 2, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 1168, column: 2)
!6673 = distinct !{!6673, !6647, !6674}
!6674 = !DILocation(line: 1171, column: 42, scope: !6643)
!6675 = !DILocation(line: 1172, column: 1, scope: !6627)
!6676 = distinct !DISubprogram(name: "ar_context_release", scope: !3, file: !3, line: 675, type: !6677, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6677 = !DISubroutineType(types: !6678)
!6678 = !{null, !4136}
!6679 = !DILocalVariable(name: "ctx", arg: 1, scope: !6676, file: !3, line: 675, type: !4136)
!6680 = !DILocation(line: 675, column: 51, scope: !6676)
!6681 = !DILocalVariable(name: "dev", scope: !6676, file: !3, line: 677, type: !3184)
!6682 = !DILocation(line: 677, column: 17, scope: !6676)
!6683 = !DILocation(line: 677, column: 23, scope: !6676)
!6684 = !DILocation(line: 677, column: 28, scope: !6676)
!6685 = !DILocation(line: 677, column: 34, scope: !6676)
!6686 = !DILocation(line: 677, column: 39, scope: !6676)
!6687 = !DILocalVariable(name: "i", scope: !6676, file: !3, line: 678, type: !7)
!6688 = !DILocation(line: 678, column: 15, scope: !6676)
!6689 = !DILocation(line: 680, column: 9, scope: !6676)
!6690 = !DILocation(line: 680, column: 14, scope: !6676)
!6691 = !DILocation(line: 680, column: 2, scope: !6676)
!6692 = !DILocation(line: 682, column: 9, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 682, column: 2)
!6694 = !DILocation(line: 682, column: 7, scope: !6693)
!6695 = !DILocation(line: 682, column: 14, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 682, column: 2)
!6697 = !DILocation(line: 682, column: 16, scope: !6696)
!6698 = !DILocation(line: 682, column: 2, scope: !6693)
!6699 = !DILocation(line: 683, column: 7, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 683, column: 7)
!6701 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 682, column: 35)
!6702 = !DILocation(line: 683, column: 12, scope: !6700)
!6703 = !DILocation(line: 683, column: 18, scope: !6700)
!6704 = !DILocation(line: 683, column: 7, scope: !6701)
!6705 = !DILocation(line: 684, column: 19, scope: !6700)
!6706 = !DILocation(line: 684, column: 35, scope: !6700)
!6707 = !DILocation(line: 684, column: 40, scope: !6700)
!6708 = !DILocation(line: 684, column: 46, scope: !6700)
!6709 = !DILocation(line: 685, column: 26, scope: !6700)
!6710 = !DILocation(line: 685, column: 31, scope: !6700)
!6711 = !DILocation(line: 685, column: 12, scope: !6700)
!6712 = !DILocation(line: 684, column: 4, scope: !6700)
!6713 = !DILocation(line: 686, column: 2, scope: !6701)
!6714 = !DILocation(line: 682, column: 31, scope: !6696)
!6715 = !DILocation(line: 682, column: 2, scope: !6696)
!6716 = distinct !{!6716, !6698, !6717}
!6717 = !DILocation(line: 686, column: 2, scope: !6693)
!6718 = !DILocation(line: 687, column: 1, scope: !6676)
!6719 = distinct !DISubprogram(name: "dma_free_coherent", scope: !4577, file: !4577, line: 400, type: !6720, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6720 = !DISubroutineType(types: !6721)
!6721 = !{null, !3184, !207, !175, !238}
!6722 = !DILocalVariable(name: "dev", arg: 1, scope: !6719, file: !4577, line: 400, type: !3184)
!6723 = !DILocation(line: 400, column: 53, scope: !6719)
!6724 = !DILocalVariable(name: "size", arg: 2, scope: !6719, file: !4577, line: 400, type: !207)
!6725 = !DILocation(line: 400, column: 65, scope: !6719)
!6726 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !6719, file: !4577, line: 401, type: !175)
!6727 = !DILocation(line: 401, column: 9, scope: !6719)
!6728 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !6719, file: !4577, line: 401, type: !238)
!6729 = !DILocation(line: 401, column: 30, scope: !6719)
!6730 = !DILocation(line: 403, column: 24, scope: !6719)
!6731 = !DILocation(line: 403, column: 29, scope: !6719)
!6732 = !DILocation(line: 403, column: 35, scope: !6719)
!6733 = !DILocation(line: 403, column: 45, scope: !6719)
!6734 = !DILocation(line: 403, column: 9, scope: !6719)
!6735 = !DILocation(line: 403, column: 2, scope: !6719)
!6736 = distinct !DISubprogram(name: "pmac_ohci_off", scope: !3, file: !3, line: 3544, type: !4514, scopeLine: 3544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6737 = !DILocalVariable(name: "dev", arg: 1, scope: !6736, file: !3, line: 3544, type: !4298)
!6738 = !DILocation(line: 3544, column: 50, scope: !6736)
!6739 = !DILocation(line: 3544, column: 56, scope: !6736)
!6740 = distinct !DISubprogram(name: "get_order", scope: !6741, file: !6741, line: 29, type: !6742, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6741 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!6742 = !DISubroutineType(types: !6743)
!6743 = !{!177, !176}
!6744 = !DILocalVariable(name: "x", arg: 1, scope: !6745, file: !6401, line: 366, type: !181)
!6745 = distinct !DISubprogram(name: "fls64", scope: !6401, file: !6401, line: 366, type: !6746, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6746 = !DISubroutineType(types: !6747)
!6747 = !{!177, !181}
!6748 = !DILocation(line: 366, column: 40, scope: !6745, inlinedAt: !6749)
!6749 = distinct !DILocation(line: 46, column: 9, scope: !6740)
!6750 = !DILocalVariable(name: "bitpos", scope: !6745, file: !6401, line: 368, type: !177)
!6751 = !DILocation(line: 368, column: 6, scope: !6745, inlinedAt: !6749)
!6752 = !DILocalVariable(name: "size", arg: 1, scope: !6740, file: !6741, line: 29, type: !176)
!6753 = !DILocation(line: 29, column: 63, scope: !6740)
!6754 = !DILocation(line: 31, column: 27, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6740, file: !6741, line: 31, column: 6)
!6756 = !DILocation(line: 31, column: 6, scope: !6755)
!6757 = !DILocation(line: 31, column: 6, scope: !6740)
!6758 = !DILocation(line: 32, column: 8, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !6741, line: 32, column: 7)
!6760 = distinct !DILexicalBlock(scope: !6755, file: !6741, line: 31, column: 34)
!6761 = !DILocation(line: 32, column: 7, scope: !6760)
!6762 = !DILocation(line: 33, column: 4, scope: !6759)
!6763 = !DILocation(line: 35, column: 7, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6760, file: !6741, line: 35, column: 7)
!6765 = !DILocation(line: 35, column: 12, scope: !6764)
!6766 = !DILocation(line: 35, column: 7, scope: !6760)
!6767 = !DILocation(line: 36, column: 4, scope: !6764)
!6768 = !DILocation(line: 38, column: 10, scope: !6760)
!6769 = !DILocation(line: 38, column: 28, scope: !6760)
!6770 = !DILocation(line: 38, column: 41, scope: !6760)
!6771 = !DILocation(line: 38, column: 3, scope: !6760)
!6772 = !DILocation(line: 41, column: 6, scope: !6740)
!6773 = !DILocation(line: 42, column: 7, scope: !6740)
!6774 = !DILocation(line: 46, column: 15, scope: !6740)
!6775 = !DILocation(line: 374, column: 2, scope: !6745, inlinedAt: !6749)
!6776 = !DILocation(line: 376, column: 14, scope: !6745, inlinedAt: !6749)
!6777 = !{i32 293121}
!6778 = !DILocation(line: 377, column: 9, scope: !6745, inlinedAt: !6749)
!6779 = !DILocation(line: 377, column: 16, scope: !6745, inlinedAt: !6749)
!6780 = !DILocation(line: 46, column: 2, scope: !6740)
!6781 = !DILocation(line: 48, column: 1, scope: !6740)
!6782 = distinct !DISubprogram(name: "__ilog2_u64", scope: !6783, file: !6783, line: 30, type: !6784, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6783 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!6784 = !DISubroutineType(types: !6785)
!6785 = !{!177, !179}
!6786 = !DILocation(line: 366, column: 40, scope: !6745, inlinedAt: !6787)
!6787 = distinct !DILocation(line: 32, column: 9, scope: !6782)
!6788 = !DILocation(line: 368, column: 6, scope: !6745, inlinedAt: !6787)
!6789 = !DILocalVariable(name: "n", arg: 1, scope: !6782, file: !6783, line: 30, type: !179)
!6790 = !DILocation(line: 30, column: 21, scope: !6782)
!6791 = !DILocation(line: 32, column: 15, scope: !6782)
!6792 = !DILocation(line: 374, column: 2, scope: !6745, inlinedAt: !6787)
!6793 = !DILocation(line: 376, column: 14, scope: !6745, inlinedAt: !6787)
!6794 = !DILocation(line: 377, column: 9, scope: !6745, inlinedAt: !6787)
!6795 = !DILocation(line: 377, column: 16, scope: !6745, inlinedAt: !6787)
!6796 = !DILocation(line: 32, column: 18, scope: !6782)
!6797 = !DILocation(line: 32, column: 2, scope: !6782)
!6798 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !6799, file: !6799, line: 137, type: !6800, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6799 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!6800 = !DISubroutineType(types: !6801)
!6801 = !{!175, !2303, !2470, !207, !173}
!6802 = !DILocalVariable(name: "s", arg: 1, scope: !6798, file: !6799, line: 137, type: !2303)
!6803 = !DILocation(line: 137, column: 54, scope: !6798)
!6804 = !DILocalVariable(name: "object", arg: 2, scope: !6798, file: !6799, line: 137, type: !2470)
!6805 = !DILocation(line: 137, column: 69, scope: !6798)
!6806 = !DILocalVariable(name: "size", arg: 3, scope: !6798, file: !6799, line: 138, type: !207)
!6807 = !DILocation(line: 138, column: 12, scope: !6798)
!6808 = !DILocalVariable(name: "flags", arg: 4, scope: !6798, file: !6799, line: 138, type: !173)
!6809 = !DILocation(line: 138, column: 24, scope: !6798)
!6810 = !DILocation(line: 140, column: 17, scope: !6798)
!6811 = !DILocation(line: 140, column: 2, scope: !6798)
!6812 = distinct !DISubprogram(name: "ohci_enable", scope: !3, file: !3, line: 2261, type: !202, scopeLine: 2263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!6813 = !DILocalVariable(name: "card", arg: 1, scope: !6812, file: !3, line: 2261, type: !204)
!6814 = !DILocation(line: 2261, column: 40, scope: !6812)
!6815 = !DILocalVariable(name: "config_rom", arg: 2, scope: !6812, file: !3, line: 2262, type: !205)
!6816 = !DILocation(line: 2262, column: 24, scope: !6812)
!6817 = !DILocalVariable(name: "length", arg: 3, scope: !6812, file: !3, line: 2262, type: !207)
!6818 = !DILocation(line: 2262, column: 43, scope: !6812)
!6819 = !DILocalVariable(name: "ohci", scope: !6812, file: !3, line: 2264, type: !187)
!6820 = !DILocation(line: 2264, column: 18, scope: !6812)
!6821 = !DILocation(line: 2264, column: 33, scope: !6812)
!6822 = !DILocation(line: 2264, column: 25, scope: !6812)
!6823 = !DILocalVariable(name: "lps", scope: !6812, file: !3, line: 2265, type: !231)
!6824 = !DILocation(line: 2265, column: 6, scope: !6812)
!6825 = !DILocalVariable(name: "version", scope: !6812, file: !3, line: 2265, type: !231)
!6826 = !DILocation(line: 2265, column: 11, scope: !6812)
!6827 = !DILocalVariable(name: "irqs", scope: !6812, file: !3, line: 2265, type: !231)
!6828 = !DILocation(line: 2265, column: 20, scope: !6812)
!6829 = !DILocalVariable(name: "i", scope: !6812, file: !3, line: 2266, type: !177)
!6830 = !DILocation(line: 2266, column: 6, scope: !6812)
!6831 = !DILocalVariable(name: "ret", scope: !6812, file: !3, line: 2266, type: !177)
!6832 = !DILocation(line: 2266, column: 9, scope: !6812)
!6833 = !DILocation(line: 2268, column: 23, scope: !6812)
!6834 = !DILocation(line: 2268, column: 8, scope: !6812)
!6835 = !DILocation(line: 2268, column: 6, scope: !6812)
!6836 = !DILocation(line: 2269, column: 6, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2269, column: 6)
!6838 = !DILocation(line: 2269, column: 10, scope: !6837)
!6839 = !DILocation(line: 2269, column: 6, scope: !6812)
!6840 = !DILocation(line: 2270, column: 3, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 2269, column: 15)
!6842 = !DILocation(line: 2271, column: 10, scope: !6841)
!6843 = !DILocation(line: 2271, column: 3, scope: !6841)
!6844 = !DILocation(line: 2287, column: 12, scope: !6812)
!6845 = !DILocation(line: 2287, column: 2, scope: !6812)
!6846 = !DILocation(line: 2290, column: 15, scope: !6812)
!6847 = !DILocation(line: 2290, column: 2, scope: !6812)
!6848 = !DILocation(line: 2292, column: 11, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2292, column: 2)
!6850 = !DILocation(line: 2292, column: 18, scope: !6849)
!6851 = !DILocation(line: 2292, column: 7, scope: !6849)
!6852 = !DILocation(line: 2292, column: 24, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 2292, column: 2)
!6854 = !DILocation(line: 2292, column: 28, scope: !6853)
!6855 = !DILocation(line: 2292, column: 31, scope: !6853)
!6856 = !DILocation(line: 2292, column: 33, scope: !6853)
!6857 = !DILocation(line: 0, scope: !6853)
!6858 = !DILocation(line: 2292, column: 2, scope: !6849)
!6859 = !DILocation(line: 2293, column: 3, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 2292, column: 43)
!6861 = !DILocation(line: 2294, column: 18, scope: !6860)
!6862 = !DILocation(line: 2294, column: 9, scope: !6860)
!6863 = !DILocation(line: 2294, column: 47, scope: !6860)
!6864 = !DILocation(line: 2294, column: 7, scope: !6860)
!6865 = !DILocation(line: 2296, column: 2, scope: !6860)
!6866 = !DILocation(line: 2292, column: 39, scope: !6853)
!6867 = !DILocation(line: 2292, column: 2, scope: !6853)
!6868 = distinct !{!6868, !6858, !6869}
!6869 = !DILocation(line: 2296, column: 2, scope: !6849)
!6870 = !DILocation(line: 2298, column: 7, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2298, column: 6)
!6872 = !DILocation(line: 2298, column: 6, scope: !6812)
!6873 = !DILocation(line: 2299, column: 3, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 2298, column: 12)
!6875 = !DILocation(line: 2300, column: 3, scope: !6874)
!6876 = !DILocation(line: 2303, column: 6, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2303, column: 6)
!6878 = !DILocation(line: 2303, column: 12, scope: !6877)
!6879 = !DILocation(line: 2303, column: 19, scope: !6877)
!6880 = !DILocation(line: 2303, column: 6, scope: !6812)
!6881 = !DILocation(line: 2304, column: 25, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 2303, column: 39)
!6883 = !DILocation(line: 2304, column: 9, scope: !6882)
!6884 = !DILocation(line: 2304, column: 7, scope: !6882)
!6885 = !DILocation(line: 2305, column: 7, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 2305, column: 7)
!6887 = !DILocation(line: 2305, column: 11, scope: !6886)
!6888 = !DILocation(line: 2305, column: 7, scope: !6882)
!6889 = !DILocation(line: 2306, column: 11, scope: !6886)
!6890 = !DILocation(line: 2306, column: 4, scope: !6886)
!6891 = !DILocation(line: 2307, column: 7, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 2307, column: 7)
!6893 = !DILocation(line: 2307, column: 7, scope: !6882)
!6894 = !DILocation(line: 2308, column: 4, scope: !6892)
!6895 = !DILocation(line: 2310, column: 4, scope: !6892)
!6896 = !DILocation(line: 2310, column: 10, scope: !6892)
!6897 = !DILocation(line: 2310, column: 17, scope: !6892)
!6898 = !DILocation(line: 2311, column: 2, scope: !6882)
!6899 = !DILocation(line: 2313, column: 12, scope: !6812)
!6900 = !DILocation(line: 2313, column: 2, scope: !6812)
!6901 = !DILocation(line: 2316, column: 12, scope: !6812)
!6902 = !DILocation(line: 2316, column: 41, scope: !6812)
!6903 = !DILocation(line: 2316, column: 47, scope: !6812)
!6904 = !DILocation(line: 2316, column: 2, scope: !6812)
!6905 = !DILocation(line: 2317, column: 12, scope: !6812)
!6906 = !DILocation(line: 2317, column: 2, scope: !6812)
!6907 = !DILocation(line: 2321, column: 12, scope: !6812)
!6908 = !DILocation(line: 2321, column: 2, scope: !6812)
!6909 = !DILocation(line: 2327, column: 2, scope: !6812)
!6910 = !DILocation(line: 2327, column: 8, scope: !6812)
!6911 = !DILocation(line: 2327, column: 25, scope: !6812)
!6912 = !DILocation(line: 2329, column: 9, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2329, column: 2)
!6914 = !DILocation(line: 2329, column: 7, scope: !6913)
!6915 = !DILocation(line: 2329, column: 14, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 2329, column: 2)
!6917 = !DILocation(line: 2329, column: 16, scope: !6916)
!6918 = !DILocation(line: 2329, column: 2, scope: !6913)
!6919 = !DILocation(line: 2330, column: 7, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 2330, column: 7)
!6921 = !DILocation(line: 2330, column: 13, scope: !6920)
!6922 = !DILocation(line: 2330, column: 40, scope: !6920)
!6923 = !DILocation(line: 2330, column: 37, scope: !6920)
!6924 = !DILocation(line: 2330, column: 32, scope: !6920)
!6925 = !DILocation(line: 2330, column: 7, scope: !6916)
!6926 = !DILocation(line: 2331, column: 14, scope: !6920)
!6927 = !DILocation(line: 2331, column: 20, scope: !6920)
!6928 = !DILocation(line: 2331, column: 4, scope: !6920)
!6929 = !DILocation(line: 2330, column: 41, scope: !6920)
!6930 = !DILocation(line: 2329, column: 23, scope: !6916)
!6931 = !DILocation(line: 2329, column: 2, scope: !6916)
!6932 = distinct !{!6932, !6918, !6933}
!6933 = !DILocation(line: 2332, column: 36, scope: !6913)
!6934 = !DILocation(line: 2334, column: 21, scope: !6812)
!6935 = !DILocation(line: 2334, column: 12, scope: !6812)
!6936 = !DILocation(line: 2334, column: 45, scope: !6812)
!6937 = !DILocation(line: 2334, column: 10, scope: !6812)
!6938 = !DILocation(line: 2335, column: 6, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2335, column: 6)
!6940 = !DILocation(line: 2335, column: 14, scope: !6939)
!6941 = !DILocation(line: 2335, column: 6, scope: !6812)
!6942 = !DILocation(line: 2336, column: 13, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 2335, column: 35)
!6944 = !DILocation(line: 2336, column: 3, scope: !6943)
!6945 = !DILocation(line: 2338, column: 3, scope: !6943)
!6946 = !DILocation(line: 2338, column: 9, scope: !6943)
!6947 = !DILocation(line: 2338, column: 42, scope: !6943)
!6948 = !DILocation(line: 2339, column: 2, scope: !6943)
!6949 = !DILocation(line: 2342, column: 12, scope: !6812)
!6950 = !DILocation(line: 2342, column: 2, scope: !6812)
!6951 = !DILocation(line: 2343, column: 31, scope: !6812)
!6952 = !DILocation(line: 2343, column: 22, scope: !6812)
!6953 = !DILocation(line: 2343, column: 63, scope: !6812)
!6954 = !DILocation(line: 2343, column: 2, scope: !6812)
!6955 = !DILocation(line: 2343, column: 8, scope: !6812)
!6956 = !DILocation(line: 2343, column: 20, scope: !6812)
!6957 = !DILocation(line: 2344, column: 12, scope: !6812)
!6958 = !DILocation(line: 2344, column: 2, scope: !6812)
!6959 = !DILocation(line: 2345, column: 38, scope: !6812)
!6960 = !DILocation(line: 2345, column: 44, scope: !6812)
!6961 = !DILocation(line: 2345, column: 56, scope: !6812)
!6962 = !DILocation(line: 2345, column: 2, scope: !6812)
!6963 = !DILocation(line: 2345, column: 8, scope: !6812)
!6964 = !DILocation(line: 2345, column: 36, scope: !6812)
!6965 = !DILocation(line: 2347, column: 12, scope: !6812)
!6966 = !DILocation(line: 2347, column: 2, scope: !6812)
!6967 = !DILocation(line: 2348, column: 12, scope: !6812)
!6968 = !DILocation(line: 2348, column: 2, scope: !6812)
!6969 = !DILocation(line: 2349, column: 12, scope: !6812)
!6970 = !DILocation(line: 2349, column: 2, scope: !6812)
!6971 = !DILocation(line: 2351, column: 37, scope: !6812)
!6972 = !DILocation(line: 2351, column: 8, scope: !6812)
!6973 = !DILocation(line: 2351, column: 6, scope: !6812)
!6974 = !DILocation(line: 2352, column: 6, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2352, column: 6)
!6976 = !DILocation(line: 2352, column: 10, scope: !6975)
!6977 = !DILocation(line: 2352, column: 6, scope: !6812)
!6978 = !DILocation(line: 2353, column: 10, scope: !6975)
!6979 = !DILocation(line: 2353, column: 3, scope: !6975)
!6980 = !DILocation(line: 2356, column: 28, scope: !6812)
!6981 = !DILocation(line: 2356, column: 8, scope: !6812)
!6982 = !DILocation(line: 2356, column: 6, scope: !6812)
!6983 = !DILocation(line: 2357, column: 6, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2357, column: 6)
!6985 = !DILocation(line: 2357, column: 10, scope: !6984)
!6986 = !DILocation(line: 2357, column: 6, scope: !6812)
!6987 = !DILocation(line: 2358, column: 10, scope: !6984)
!6988 = !DILocation(line: 2358, column: 3, scope: !6984)
!6989 = !DILocation(line: 2379, column: 6, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2379, column: 6)
!6991 = !DILocation(line: 2379, column: 6, scope: !6812)
!6992 = !DILocation(line: 2381, column: 23, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 2379, column: 18)
!6994 = !DILocation(line: 2381, column: 29, scope: !6993)
!6995 = !DILocation(line: 2381, column: 34, scope: !6993)
!6996 = !DILocation(line: 2382, column: 10, scope: !6993)
!6997 = !DILocation(line: 2382, column: 16, scope: !6993)
!6998 = !DILocation(line: 2381, column: 4, scope: !6993)
!6999 = !DILocation(line: 2380, column: 3, scope: !6993)
!7000 = !DILocation(line: 2380, column: 9, scope: !6993)
!7001 = !DILocation(line: 2380, column: 25, scope: !6993)
!7002 = !DILocation(line: 2384, column: 7, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 2384, column: 7)
!7004 = !DILocation(line: 2384, column: 13, scope: !7003)
!7005 = !DILocation(line: 2384, column: 29, scope: !7003)
!7006 = !DILocation(line: 2384, column: 7, scope: !6993)
!7007 = !DILocation(line: 2385, column: 4, scope: !7003)
!7008 = !DILocation(line: 2387, column: 19, scope: !6993)
!7009 = !DILocation(line: 2387, column: 25, scope: !6993)
!7010 = !DILocation(line: 2387, column: 42, scope: !6993)
!7011 = !DILocation(line: 2387, column: 54, scope: !6993)
!7012 = !DILocation(line: 2387, column: 3, scope: !6993)
!7013 = !DILocation(line: 2388, column: 2, scope: !6993)
!7014 = !DILocation(line: 2393, column: 27, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 2388, column: 9)
!7016 = !DILocation(line: 2393, column: 33, scope: !7015)
!7017 = !DILocation(line: 2393, column: 3, scope: !7015)
!7018 = !DILocation(line: 2393, column: 9, scope: !7015)
!7019 = !DILocation(line: 2393, column: 25, scope: !7015)
!7020 = !DILocation(line: 2394, column: 31, scope: !7015)
!7021 = !DILocation(line: 2394, column: 37, scope: !7015)
!7022 = !DILocation(line: 2394, column: 3, scope: !7015)
!7023 = !DILocation(line: 2394, column: 9, scope: !7015)
!7024 = !DILocation(line: 2394, column: 29, scope: !7015)
!7025 = !DILocation(line: 2397, column: 22, scope: !6812)
!7026 = !DILocation(line: 2397, column: 28, scope: !6812)
!7027 = !DILocation(line: 2397, column: 2, scope: !6812)
!7028 = !DILocation(line: 2397, column: 8, scope: !6812)
!7029 = !DILocation(line: 2397, column: 20, scope: !6812)
!7030 = !DILocation(line: 2398, column: 2, scope: !6812)
!7031 = !DILocation(line: 2398, column: 8, scope: !6812)
!7032 = !DILocation(line: 2398, column: 27, scope: !6812)
!7033 = !DILocation(line: 2399, column: 12, scope: !6812)
!7034 = !DILocation(line: 2399, column: 2, scope: !6812)
!7035 = !DILocation(line: 2400, column: 12, scope: !6812)
!7036 = !DILocation(line: 2401, column: 5, scope: !6812)
!7037 = !DILocation(line: 2400, column: 2, scope: !6812)
!7038 = !DILocation(line: 2402, column: 12, scope: !6812)
!7039 = !DILocation(line: 2402, column: 41, scope: !6812)
!7040 = !DILocation(line: 2402, column: 47, scope: !6812)
!7041 = !DILocation(line: 2402, column: 2, scope: !6812)
!7042 = !DILocation(line: 2404, column: 12, scope: !6812)
!7043 = !DILocation(line: 2404, column: 2, scope: !6812)
!7044 = !DILocation(line: 2406, column: 7, scope: !6812)
!7045 = !DILocation(line: 2416, column: 6, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2416, column: 6)
!7047 = !DILocation(line: 2416, column: 18, scope: !7046)
!7048 = !DILocation(line: 2416, column: 6, scope: !6812)
!7049 = !DILocation(line: 2417, column: 8, scope: !7046)
!7050 = !DILocation(line: 2417, column: 3, scope: !7046)
!7051 = !DILocation(line: 2418, column: 12, scope: !6812)
!7052 = !DILocation(line: 2418, column: 39, scope: !6812)
!7053 = !DILocation(line: 2418, column: 2, scope: !6812)
!7054 = !DILocation(line: 2420, column: 12, scope: !6812)
!7055 = !DILocation(line: 2420, column: 2, scope: !6812)
!7056 = !DILocation(line: 2424, column: 12, scope: !6812)
!7057 = !DILocation(line: 2424, column: 2, scope: !6812)
!7058 = !DILocation(line: 2428, column: 18, scope: !6812)
!7059 = !DILocation(line: 2428, column: 24, scope: !6812)
!7060 = !DILocation(line: 2428, column: 2, scope: !6812)
!7061 = !DILocation(line: 2429, column: 18, scope: !6812)
!7062 = !DILocation(line: 2429, column: 24, scope: !6812)
!7063 = !DILocation(line: 2429, column: 2, scope: !6812)
!7064 = !DILocation(line: 2431, column: 15, scope: !6812)
!7065 = !DILocation(line: 2431, column: 2, scope: !6812)
!7066 = !DILocation(line: 2434, column: 25, scope: !6812)
!7067 = !DILocation(line: 2434, column: 31, scope: !6812)
!7068 = !DILocation(line: 2434, column: 2, scope: !6812)
!7069 = !DILocation(line: 2436, column: 2, scope: !6812)
!7070 = !DILocation(line: 2437, column: 1, scope: !6812)
!7071 = distinct !DISubprogram(name: "ohci_read_phy_reg", scope: !3, file: !3, line: 627, type: !213, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7072 = !DILocalVariable(name: "card", arg: 1, scope: !7071, file: !3, line: 627, type: !204)
!7073 = !DILocation(line: 627, column: 46, scope: !7071)
!7074 = !DILocalVariable(name: "addr", arg: 2, scope: !7071, file: !3, line: 627, type: !177)
!7075 = !DILocation(line: 627, column: 56, scope: !7071)
!7076 = !DILocalVariable(name: "ohci", scope: !7071, file: !3, line: 629, type: !187)
!7077 = !DILocation(line: 629, column: 18, scope: !7071)
!7078 = !DILocation(line: 629, column: 33, scope: !7071)
!7079 = !DILocation(line: 629, column: 25, scope: !7071)
!7080 = !DILocalVariable(name: "ret", scope: !7071, file: !3, line: 630, type: !177)
!7081 = !DILocation(line: 630, column: 6, scope: !7071)
!7082 = !DILocation(line: 632, column: 14, scope: !7071)
!7083 = !DILocation(line: 632, column: 20, scope: !7071)
!7084 = !DILocation(line: 632, column: 2, scope: !7071)
!7085 = !DILocation(line: 633, column: 21, scope: !7071)
!7086 = !DILocation(line: 633, column: 27, scope: !7071)
!7087 = !DILocation(line: 633, column: 8, scope: !7071)
!7088 = !DILocation(line: 633, column: 6, scope: !7071)
!7089 = !DILocation(line: 634, column: 16, scope: !7071)
!7090 = !DILocation(line: 634, column: 22, scope: !7071)
!7091 = !DILocation(line: 634, column: 2, scope: !7071)
!7092 = !DILocation(line: 636, column: 9, scope: !7071)
!7093 = !DILocation(line: 636, column: 2, scope: !7071)
!7094 = distinct !DISubprogram(name: "ohci_update_phy_reg", scope: !3, file: !3, line: 639, type: !217, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7095 = !DILocalVariable(name: "card", arg: 1, scope: !7094, file: !3, line: 639, type: !204)
!7096 = !DILocation(line: 639, column: 48, scope: !7094)
!7097 = !DILocalVariable(name: "addr", arg: 2, scope: !7094, file: !3, line: 639, type: !177)
!7098 = !DILocation(line: 639, column: 58, scope: !7094)
!7099 = !DILocalVariable(name: "clear_bits", arg: 3, scope: !7094, file: !3, line: 640, type: !177)
!7100 = !DILocation(line: 640, column: 15, scope: !7094)
!7101 = !DILocalVariable(name: "set_bits", arg: 4, scope: !7094, file: !3, line: 640, type: !177)
!7102 = !DILocation(line: 640, column: 31, scope: !7094)
!7103 = !DILocalVariable(name: "ohci", scope: !7094, file: !3, line: 642, type: !187)
!7104 = !DILocation(line: 642, column: 18, scope: !7094)
!7105 = !DILocation(line: 642, column: 33, scope: !7094)
!7106 = !DILocation(line: 642, column: 25, scope: !7094)
!7107 = !DILocalVariable(name: "ret", scope: !7094, file: !3, line: 643, type: !177)
!7108 = !DILocation(line: 643, column: 6, scope: !7094)
!7109 = !DILocation(line: 645, column: 14, scope: !7094)
!7110 = !DILocation(line: 645, column: 20, scope: !7094)
!7111 = !DILocation(line: 645, column: 2, scope: !7094)
!7112 = !DILocation(line: 646, column: 23, scope: !7094)
!7113 = !DILocation(line: 646, column: 29, scope: !7094)
!7114 = !DILocation(line: 646, column: 35, scope: !7094)
!7115 = !DILocation(line: 646, column: 47, scope: !7094)
!7116 = !DILocation(line: 646, column: 8, scope: !7094)
!7117 = !DILocation(line: 646, column: 6, scope: !7094)
!7118 = !DILocation(line: 647, column: 16, scope: !7094)
!7119 = !DILocation(line: 647, column: 22, scope: !7094)
!7120 = !DILocation(line: 647, column: 2, scope: !7094)
!7121 = !DILocation(line: 649, column: 9, scope: !7094)
!7122 = !DILocation(line: 649, column: 2, scope: !7094)
!7123 = distinct !DISubprogram(name: "ohci_set_config_rom", scope: !3, file: !3, line: 2439, type: !202, scopeLine: 2441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7124 = !DILocation(line: 402, column: 57, scope: !5616, inlinedAt: !7125)
!7125 = distinct !DILocation(line: 2507, column: 2, scope: !7123)
!7126 = !DILocation(line: 377, column: 55, scope: !5622, inlinedAt: !7127)
!7127 = distinct !DILocation(line: 2481, column: 2, scope: !7123)
!7128 = !DILocalVariable(name: "card", arg: 1, scope: !7123, file: !3, line: 2439, type: !204)
!7129 = !DILocation(line: 2439, column: 48, scope: !7123)
!7130 = !DILocalVariable(name: "config_rom", arg: 2, scope: !7123, file: !3, line: 2440, type: !205)
!7131 = !DILocation(line: 2440, column: 25, scope: !7123)
!7132 = !DILocalVariable(name: "length", arg: 3, scope: !7123, file: !3, line: 2440, type: !207)
!7133 = !DILocation(line: 2440, column: 44, scope: !7123)
!7134 = !DILocalVariable(name: "ohci", scope: !7123, file: !3, line: 2442, type: !187)
!7135 = !DILocation(line: 2442, column: 18, scope: !7123)
!7136 = !DILocalVariable(name: "next_config_rom", scope: !7123, file: !3, line: 2443, type: !4109)
!7137 = !DILocation(line: 2443, column: 10, scope: !7123)
!7138 = !DILocalVariable(name: "next_config_rom_bus", scope: !7123, file: !3, line: 2444, type: !238)
!7139 = !DILocation(line: 2444, column: 13, scope: !7123)
!7140 = !DILocation(line: 2446, column: 17, scope: !7123)
!7141 = !DILocation(line: 2446, column: 9, scope: !7123)
!7142 = !DILocation(line: 2446, column: 7, scope: !7123)
!7143 = !DILocation(line: 2476, column: 22, scope: !7123)
!7144 = !DILocation(line: 2476, column: 28, scope: !7123)
!7145 = !DILocation(line: 2476, column: 33, scope: !7123)
!7146 = !DILocation(line: 2476, column: 3, scope: !7123)
!7147 = !DILocation(line: 2475, column: 18, scope: !7123)
!7148 = !DILocation(line: 2478, column: 6, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 2478, column: 6)
!7150 = !DILocation(line: 2478, column: 22, scope: !7149)
!7151 = !DILocation(line: 2478, column: 6, scope: !7123)
!7152 = !DILocation(line: 2479, column: 3, scope: !7149)
!7153 = !DILocation(line: 2481, column: 17, scope: !7123)
!7154 = !DILocation(line: 2481, column: 23, scope: !7123)
!7155 = !DILocation(line: 379, column: 2, scope: !5810, inlinedAt: !7127)
!7156 = !DILocation(line: 379, column: 2, scope: !5813, inlinedAt: !7127)
!7157 = !DILocation(line: 379, column: 2, scope: !5816, inlinedAt: !7127)
!7158 = !DILocation(line: 2494, column: 6, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 2494, column: 6)
!7160 = !DILocation(line: 2494, column: 12, scope: !7159)
!7161 = !DILocation(line: 2494, column: 28, scope: !7159)
!7162 = !DILocation(line: 2494, column: 6, scope: !7123)
!7163 = !DILocation(line: 2495, column: 27, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 2494, column: 37)
!7165 = !DILocation(line: 2495, column: 3, scope: !7164)
!7166 = !DILocation(line: 2495, column: 9, scope: !7164)
!7167 = !DILocation(line: 2495, column: 25, scope: !7164)
!7168 = !DILocation(line: 2496, column: 31, scope: !7164)
!7169 = !DILocation(line: 2496, column: 3, scope: !7164)
!7170 = !DILocation(line: 2496, column: 9, scope: !7164)
!7171 = !DILocation(line: 2496, column: 29, scope: !7164)
!7172 = !DILocation(line: 2497, column: 19, scope: !7164)
!7173 = !DILocation(line: 2498, column: 2, scope: !7164)
!7174 = !DILocation(line: 2500, column: 18, scope: !7123)
!7175 = !DILocation(line: 2500, column: 24, scope: !7123)
!7176 = !DILocation(line: 2500, column: 41, scope: !7123)
!7177 = !DILocation(line: 2500, column: 53, scope: !7123)
!7178 = !DILocation(line: 2500, column: 2, scope: !7123)
!7179 = !DILocation(line: 2502, column: 22, scope: !7123)
!7180 = !DILocation(line: 2502, column: 2, scope: !7123)
!7181 = !DILocation(line: 2502, column: 8, scope: !7123)
!7182 = !DILocation(line: 2502, column: 20, scope: !7123)
!7183 = !DILocation(line: 2503, column: 2, scope: !7123)
!7184 = !DILocation(line: 2503, column: 8, scope: !7123)
!7185 = !DILocation(line: 2503, column: 27, scope: !7123)
!7186 = !DILocation(line: 2505, column: 12, scope: !7123)
!7187 = !DILocation(line: 2505, column: 41, scope: !7123)
!7188 = !DILocation(line: 2505, column: 47, scope: !7123)
!7189 = !DILocation(line: 2505, column: 2, scope: !7123)
!7190 = !DILocation(line: 2507, column: 19, scope: !7123)
!7191 = !DILocation(line: 2507, column: 25, scope: !7123)
!7192 = !DILocation(line: 404, column: 2, scope: !5829, inlinedAt: !7125)
!7193 = !DILocation(line: 404, column: 2, scope: !5832, inlinedAt: !7125)
!7194 = !DILocation(line: 404, column: 2, scope: !5835, inlinedAt: !7125)
!7195 = !DILocation(line: 2510, column: 6, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 2510, column: 6)
!7197 = !DILocation(line: 2510, column: 22, scope: !7196)
!7198 = !DILocation(line: 2510, column: 6, scope: !7123)
!7199 = !DILocation(line: 2511, column: 21, scope: !7196)
!7200 = !DILocation(line: 2511, column: 27, scope: !7196)
!7201 = !DILocation(line: 2511, column: 32, scope: !7196)
!7202 = !DILocation(line: 2512, column: 7, scope: !7196)
!7203 = !DILocation(line: 2512, column: 24, scope: !7196)
!7204 = !DILocation(line: 2511, column: 3, scope: !7196)
!7205 = !DILocation(line: 2522, column: 25, scope: !7123)
!7206 = !DILocation(line: 2522, column: 31, scope: !7123)
!7207 = !DILocation(line: 2522, column: 2, scope: !7123)
!7208 = !DILocation(line: 2524, column: 2, scope: !7123)
!7209 = !DILocation(line: 2525, column: 1, scope: !7123)
!7210 = distinct !DISubprogram(name: "ohci_send_request", scope: !3, file: !3, line: 2527, type: !222, scopeLine: 2528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7211 = !DILocalVariable(name: "card", arg: 1, scope: !7210, file: !3, line: 2527, type: !204)
!7212 = !DILocation(line: 2527, column: 47, scope: !7210)
!7213 = !DILocalVariable(name: "packet", arg: 2, scope: !7210, file: !3, line: 2527, type: !224)
!7214 = !DILocation(line: 2527, column: 71, scope: !7210)
!7215 = !DILocalVariable(name: "ohci", scope: !7210, file: !3, line: 2529, type: !187)
!7216 = !DILocation(line: 2529, column: 18, scope: !7210)
!7217 = !DILocation(line: 2529, column: 33, scope: !7210)
!7218 = !DILocation(line: 2529, column: 25, scope: !7210)
!7219 = !DILocation(line: 2531, column: 23, scope: !7210)
!7220 = !DILocation(line: 2531, column: 29, scope: !7210)
!7221 = !DILocation(line: 2531, column: 45, scope: !7210)
!7222 = !DILocation(line: 2531, column: 2, scope: !7210)
!7223 = !DILocation(line: 2532, column: 1, scope: !7210)
!7224 = distinct !DISubprogram(name: "ohci_send_response", scope: !3, file: !3, line: 2534, type: !222, scopeLine: 2535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7225 = !DILocalVariable(name: "card", arg: 1, scope: !7224, file: !3, line: 2534, type: !204)
!7226 = !DILocation(line: 2534, column: 48, scope: !7224)
!7227 = !DILocalVariable(name: "packet", arg: 2, scope: !7224, file: !3, line: 2534, type: !224)
!7228 = !DILocation(line: 2534, column: 72, scope: !7224)
!7229 = !DILocalVariable(name: "ohci", scope: !7224, file: !3, line: 2536, type: !187)
!7230 = !DILocation(line: 2536, column: 18, scope: !7224)
!7231 = !DILocation(line: 2536, column: 33, scope: !7224)
!7232 = !DILocation(line: 2536, column: 25, scope: !7224)
!7233 = !DILocation(line: 2538, column: 23, scope: !7224)
!7234 = !DILocation(line: 2538, column: 29, scope: !7224)
!7235 = !DILocation(line: 2538, column: 46, scope: !7224)
!7236 = !DILocation(line: 2538, column: 2, scope: !7224)
!7237 = !DILocation(line: 2539, column: 1, scope: !7224)
!7238 = distinct !DISubprogram(name: "ohci_cancel_packet", scope: !3, file: !3, line: 2541, type: !259, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7239 = !DILocalVariable(name: "card", arg: 1, scope: !7238, file: !3, line: 2541, type: !204)
!7240 = !DILocation(line: 2541, column: 47, scope: !7238)
!7241 = !DILocalVariable(name: "packet", arg: 2, scope: !7238, file: !3, line: 2541, type: !224)
!7242 = !DILocation(line: 2541, column: 71, scope: !7238)
!7243 = !DILocalVariable(name: "ohci", scope: !7238, file: !3, line: 2543, type: !187)
!7244 = !DILocation(line: 2543, column: 18, scope: !7238)
!7245 = !DILocation(line: 2543, column: 33, scope: !7238)
!7246 = !DILocation(line: 2543, column: 25, scope: !7238)
!7247 = !DILocalVariable(name: "ctx", scope: !7238, file: !3, line: 2544, type: !4083)
!7248 = !DILocation(line: 2544, column: 18, scope: !7238)
!7249 = !DILocation(line: 2544, column: 25, scope: !7238)
!7250 = !DILocation(line: 2544, column: 31, scope: !7238)
!7251 = !DILocalVariable(name: "driver_data", scope: !7238, file: !3, line: 2545, type: !4122)
!7252 = !DILocation(line: 2545, column: 22, scope: !7238)
!7253 = !DILocation(line: 2545, column: 36, scope: !7238)
!7254 = !DILocation(line: 2545, column: 44, scope: !7238)
!7255 = !DILocalVariable(name: "ret", scope: !7238, file: !3, line: 2546, type: !177)
!7256 = !DILocation(line: 2546, column: 6, scope: !7238)
!7257 = !DILocation(line: 2548, column: 19, scope: !7238)
!7258 = !DILocation(line: 2548, column: 24, scope: !7238)
!7259 = !DILocation(line: 2548, column: 2, scope: !7238)
!7260 = !DILocation(line: 2550, column: 6, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 2550, column: 6)
!7262 = !DILocation(line: 2550, column: 14, scope: !7261)
!7263 = !DILocation(line: 2550, column: 18, scope: !7261)
!7264 = !DILocation(line: 2550, column: 6, scope: !7238)
!7265 = !DILocation(line: 2551, column: 3, scope: !7261)
!7266 = !DILocation(line: 2553, column: 6, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 2553, column: 6)
!7268 = !DILocation(line: 2553, column: 14, scope: !7267)
!7269 = !DILocation(line: 2553, column: 6, scope: !7238)
!7270 = !DILocation(line: 2554, column: 3, scope: !7267)
!7271 = !DILocation(line: 2557, column: 18, scope: !7238)
!7272 = !DILocation(line: 2557, column: 29, scope: !7238)
!7273 = !DILocation(line: 2557, column: 37, scope: !7238)
!7274 = !DILocation(line: 2557, column: 44, scope: !7238)
!7275 = !DILocation(line: 2557, column: 52, scope: !7238)
!7276 = !DILocation(line: 2557, column: 2, scope: !7238)
!7277 = !DILocation(line: 2558, column: 2, scope: !7238)
!7278 = !DILocation(line: 2558, column: 15, scope: !7238)
!7279 = !DILocation(line: 2558, column: 22, scope: !7238)
!7280 = !DILocation(line: 2559, column: 2, scope: !7238)
!7281 = !DILocation(line: 2559, column: 10, scope: !7238)
!7282 = !DILocation(line: 2559, column: 14, scope: !7238)
!7283 = !DILocation(line: 2560, column: 2, scope: !7238)
!7284 = !DILocation(line: 2560, column: 10, scope: !7238)
!7285 = !DILocation(line: 2560, column: 19, scope: !7238)
!7286 = !DILocation(line: 2560, column: 28, scope: !7238)
!7287 = !DILocation(line: 2560, column: 34, scope: !7238)
!7288 = !DILocation(line: 2560, column: 40, scope: !7238)
!7289 = !DILocation(line: 2560, column: 48, scope: !7238)
!7290 = !DILocation(line: 2561, column: 6, scope: !7238)
!7291 = !DILocation(line: 2561, column: 2, scope: !7238)
!7292 = !DILabel(scope: !7238, name: "out", file: !3, line: 2562)
!7293 = !DILocation(line: 2562, column: 2, scope: !7238)
!7294 = !DILocation(line: 2563, column: 18, scope: !7238)
!7295 = !DILocation(line: 2563, column: 23, scope: !7238)
!7296 = !DILocation(line: 2563, column: 2, scope: !7238)
!7297 = !DILocation(line: 2565, column: 9, scope: !7238)
!7298 = !DILocation(line: 2565, column: 2, scope: !7238)
!7299 = distinct !DISubprogram(name: "ohci_enable_phys_dma", scope: !3, file: !3, line: 2568, type: !263, scopeLine: 2570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7300 = !DILocalVariable(name: "lock", arg: 1, scope: !7301, file: !4645, line: 407, type: !1252)
!7301 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4645, file: !4645, line: 407, type: !7302, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7302 = !DISubroutineType(types: !7303)
!7303 = !{null, !1252, !176}
!7304 = !DILocation(line: 407, column: 64, scope: !7301, inlinedAt: !7305)
!7305 = distinct !DILocation(line: 2603, column: 2, scope: !7299)
!7306 = !DILocalVariable(name: "flags", arg: 2, scope: !7301, file: !4645, line: 407, type: !176)
!7307 = !DILocation(line: 407, column: 84, scope: !7301, inlinedAt: !7305)
!7308 = !DILocation(line: 327, column: 67, scope: !4644, inlinedAt: !7309)
!7309 = distinct !DILocation(line: 2583, column: 2, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 2583, column: 2)
!7311 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 2583, column: 2)
!7312 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 2583, column: 2)
!7313 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 2583, column: 2)
!7314 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 2583, column: 2)
!7315 = !DILocalVariable(name: "card", arg: 1, scope: !7299, file: !3, line: 2568, type: !204)
!7316 = !DILocation(line: 2568, column: 49, scope: !7299)
!7317 = !DILocalVariable(name: "node_id", arg: 2, scope: !7299, file: !3, line: 2569, type: !177)
!7318 = !DILocation(line: 2569, column: 9, scope: !7299)
!7319 = !DILocalVariable(name: "generation", arg: 3, scope: !7299, file: !3, line: 2569, type: !177)
!7320 = !DILocation(line: 2569, column: 22, scope: !7299)
!7321 = !DILocalVariable(name: "ohci", scope: !7299, file: !3, line: 2571, type: !187)
!7322 = !DILocation(line: 2571, column: 18, scope: !7299)
!7323 = !DILocation(line: 2571, column: 33, scope: !7299)
!7324 = !DILocation(line: 2571, column: 25, scope: !7299)
!7325 = !DILocalVariable(name: "flags", scope: !7299, file: !3, line: 2572, type: !176)
!7326 = !DILocation(line: 2572, column: 16, scope: !7299)
!7327 = !DILocalVariable(name: "n", scope: !7299, file: !3, line: 2573, type: !177)
!7328 = !DILocation(line: 2573, column: 6, scope: !7299)
!7329 = !DILocalVariable(name: "ret", scope: !7299, file: !3, line: 2573, type: !177)
!7330 = !DILocation(line: 2573, column: 9, scope: !7299)
!7331 = !DILocation(line: 2575, column: 6, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 2575, column: 6)
!7333 = !DILocation(line: 2575, column: 6, scope: !7299)
!7334 = !DILocation(line: 2576, column: 3, scope: !7332)
!7335 = !DILocation(line: 2583, column: 2, scope: !7299)
!7336 = !DILocation(line: 2583, column: 2, scope: !7314)
!7337 = !DILocalVariable(name: "__dummy", scope: !7338, file: !3, line: 2583, type: !176)
!7338 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 2583, column: 2)
!7339 = !DILocation(line: 2583, column: 2, scope: !7338)
!7340 = !DILocalVariable(name: "__dummy2", scope: !7338, file: !3, line: 2583, type: !176)
!7341 = !DILocation(line: 2583, column: 2, scope: !7313)
!7342 = !DILocation(line: 2583, column: 2, scope: !7312)
!7343 = !DILocation(line: 2583, column: 2, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 2583, column: 2)
!7345 = !DILocalVariable(name: "__dummy", scope: !7346, file: !3, line: 2583, type: !176)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 2583, column: 2)
!7347 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 2583, column: 2)
!7348 = !DILocation(line: 2583, column: 2, scope: !7346)
!7349 = !DILocalVariable(name: "__dummy2", scope: !7346, file: !3, line: 2583, type: !176)
!7350 = !DILocation(line: 2583, column: 2, scope: !7347)
!7351 = !DILocation(line: 2583, column: 2, scope: !7311)
!7352 = !{i32 -2141530412}
!7353 = !DILocation(line: 2583, column: 2, scope: !7310)
!7354 = !DILocation(line: 329, column: 10, scope: !4644, inlinedAt: !7309)
!7355 = !DILocation(line: 329, column: 16, scope: !4644, inlinedAt: !7309)
!7356 = !DILocation(line: 2585, column: 6, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 2585, column: 6)
!7358 = !DILocation(line: 2585, column: 12, scope: !7357)
!7359 = !DILocation(line: 2585, column: 26, scope: !7357)
!7360 = !DILocation(line: 2585, column: 23, scope: !7357)
!7361 = !DILocation(line: 2585, column: 6, scope: !7299)
!7362 = !DILocation(line: 2586, column: 7, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 2585, column: 38)
!7364 = !DILocation(line: 2587, column: 3, scope: !7363)
!7365 = !DILocation(line: 2595, column: 7, scope: !7299)
!7366 = !DILocation(line: 2595, column: 15, scope: !7299)
!7367 = !DILocation(line: 2595, column: 25, scope: !7299)
!7368 = !DILocation(line: 2595, column: 6, scope: !7299)
!7369 = !DILocation(line: 2595, column: 40, scope: !7299)
!7370 = !DILocation(line: 2595, column: 48, scope: !7299)
!7371 = !DILocation(line: 2595, column: 4, scope: !7299)
!7372 = !DILocation(line: 2596, column: 6, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 2596, column: 6)
!7374 = !DILocation(line: 2596, column: 8, scope: !7373)
!7375 = !DILocation(line: 2596, column: 6, scope: !7299)
!7376 = !DILocation(line: 2597, column: 13, scope: !7373)
!7377 = !DILocation(line: 2597, column: 52, scope: !7373)
!7378 = !DILocation(line: 2597, column: 49, scope: !7373)
!7379 = !DILocation(line: 2597, column: 3, scope: !7373)
!7380 = !DILocation(line: 2599, column: 13, scope: !7373)
!7381 = !DILocation(line: 2599, column: 53, scope: !7373)
!7382 = !DILocation(line: 2599, column: 55, scope: !7373)
!7383 = !DILocation(line: 2599, column: 49, scope: !7373)
!7384 = !DILocation(line: 2599, column: 3, scope: !7373)
!7385 = !DILocation(line: 2601, column: 15, scope: !7299)
!7386 = !DILocation(line: 2601, column: 2, scope: !7299)
!7387 = !DILabel(scope: !7299, name: "out", file: !3, line: 2602)
!7388 = !DILocation(line: 2602, column: 2, scope: !7299)
!7389 = !DILocation(line: 2603, column: 26, scope: !7299)
!7390 = !DILocation(line: 2603, column: 32, scope: !7299)
!7391 = !DILocation(line: 2603, column: 38, scope: !7299)
!7392 = !DILocalVariable(name: "__dummy", scope: !7393, file: !4645, line: 409, type: !176)
!7393 = distinct !DILexicalBlock(scope: !7394, file: !4645, line: 409, column: 2)
!7394 = distinct !DILexicalBlock(scope: !7301, file: !4645, line: 409, column: 2)
!7395 = !DILocation(line: 409, column: 2, scope: !7393, inlinedAt: !7305)
!7396 = !DILocalVariable(name: "__dummy2", scope: !7393, file: !4645, line: 409, type: !176)
!7397 = !DILocalVariable(name: "__dummy", scope: !7398, file: !4645, line: 409, type: !176)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !4645, line: 409, column: 2)
!7399 = distinct !DILexicalBlock(scope: !7400, file: !4645, line: 409, column: 2)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !4645, line: 409, column: 2)
!7401 = distinct !DILexicalBlock(scope: !7394, file: !4645, line: 409, column: 2)
!7402 = !DILocation(line: 409, column: 2, scope: !7398, inlinedAt: !7305)
!7403 = !DILocalVariable(name: "__dummy2", scope: !7398, file: !4645, line: 409, type: !176)
!7404 = !DILocation(line: 409, column: 2, scope: !7399, inlinedAt: !7305)
!7405 = !DILocation(line: 409, column: 2, scope: !7406, inlinedAt: !7305)
!7406 = distinct !DILexicalBlock(scope: !7401, file: !4645, line: 409, column: 2)
!7407 = !{i32 -2145185826}
!7408 = !DILocation(line: 409, column: 2, scope: !7409, inlinedAt: !7305)
!7409 = distinct !DILexicalBlock(scope: !7406, file: !4645, line: 409, column: 2)
!7410 = !DILocation(line: 2605, column: 9, scope: !7299)
!7411 = !DILocation(line: 2605, column: 2, scope: !7299)
!7412 = !DILocation(line: 2606, column: 1, scope: !7299)
!7413 = distinct !DISubprogram(name: "ohci_read_csr", scope: !3, file: !3, line: 2608, type: !267, scopeLine: 2609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7414 = !DILocation(line: 407, column: 64, scope: !7301, inlinedAt: !7415)
!7415 = distinct !DILocation(line: 2642, column: 3, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 2614, column: 22)
!7417 = !DILocation(line: 407, column: 84, scope: !7301, inlinedAt: !7415)
!7418 = !DILocation(line: 327, column: 67, scope: !4644, inlinedAt: !7419)
!7419 = distinct !DILocation(line: 2640, column: 3, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 2640, column: 3)
!7421 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 2640, column: 3)
!7422 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 2640, column: 3)
!7423 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 2640, column: 3)
!7424 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 2640, column: 3)
!7425 = !DILocalVariable(name: "card", arg: 1, scope: !7413, file: !3, line: 2608, type: !204)
!7426 = !DILocation(line: 2608, column: 42, scope: !7413)
!7427 = !DILocalVariable(name: "csr_offset", arg: 2, scope: !7413, file: !3, line: 2608, type: !177)
!7428 = !DILocation(line: 2608, column: 52, scope: !7413)
!7429 = !DILocalVariable(name: "ohci", scope: !7413, file: !3, line: 2610, type: !187)
!7430 = !DILocation(line: 2610, column: 18, scope: !7413)
!7431 = !DILocation(line: 2610, column: 33, scope: !7413)
!7432 = !DILocation(line: 2610, column: 25, scope: !7413)
!7433 = !DILocalVariable(name: "flags", scope: !7413, file: !3, line: 2611, type: !176)
!7434 = !DILocation(line: 2611, column: 16, scope: !7413)
!7435 = !DILocalVariable(name: "value", scope: !7413, file: !3, line: 2612, type: !231)
!7436 = !DILocation(line: 2612, column: 6, scope: !7413)
!7437 = !DILocation(line: 2614, column: 10, scope: !7413)
!7438 = !DILocation(line: 2614, column: 2, scope: !7413)
!7439 = !DILocation(line: 2617, column: 7, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 2617, column: 7)
!7441 = !DILocation(line: 2617, column: 13, scope: !7440)
!7442 = !DILocation(line: 2617, column: 21, scope: !7440)
!7443 = !DILocation(line: 2618, column: 17, scope: !7440)
!7444 = !DILocation(line: 2618, column: 8, scope: !7440)
!7445 = !DILocation(line: 2618, column: 48, scope: !7440)
!7446 = !DILocation(line: 2617, column: 7, scope: !7416)
!7447 = !DILocation(line: 2620, column: 10, scope: !7440)
!7448 = !DILocation(line: 2620, column: 4, scope: !7440)
!7449 = !DILocation(line: 2622, column: 10, scope: !7440)
!7450 = !DILocation(line: 2623, column: 7, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 2623, column: 7)
!7452 = !DILocation(line: 2623, column: 13, scope: !7451)
!7453 = !DILocation(line: 2623, column: 7, scope: !7416)
!7454 = !DILocation(line: 2624, column: 10, scope: !7451)
!7455 = !DILocation(line: 2624, column: 4, scope: !7451)
!7456 = !DILocation(line: 2626, column: 10, scope: !7416)
!7457 = !DILocation(line: 2626, column: 3, scope: !7416)
!7458 = !DILocation(line: 2629, column: 19, scope: !7416)
!7459 = !DILocation(line: 2629, column: 10, scope: !7416)
!7460 = !DILocation(line: 2629, column: 42, scope: !7416)
!7461 = !DILocation(line: 2629, column: 3, scope: !7416)
!7462 = !DILocation(line: 2632, column: 25, scope: !7416)
!7463 = !DILocation(line: 2632, column: 10, scope: !7416)
!7464 = !DILocation(line: 2632, column: 3, scope: !7416)
!7465 = !DILocation(line: 2640, column: 3, scope: !7416)
!7466 = !DILocation(line: 2640, column: 3, scope: !7424)
!7467 = !DILocalVariable(name: "__dummy", scope: !7468, file: !3, line: 2640, type: !176)
!7468 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 2640, column: 3)
!7469 = !DILocation(line: 2640, column: 3, scope: !7468)
!7470 = !DILocalVariable(name: "__dummy2", scope: !7468, file: !3, line: 2640, type: !176)
!7471 = !DILocation(line: 2640, column: 3, scope: !7423)
!7472 = !DILocation(line: 2640, column: 3, scope: !7422)
!7473 = !DILocation(line: 2640, column: 3, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 2640, column: 3)
!7475 = !DILocalVariable(name: "__dummy", scope: !7476, file: !3, line: 2640, type: !176)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !3, line: 2640, column: 3)
!7477 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 2640, column: 3)
!7478 = !DILocation(line: 2640, column: 3, scope: !7476)
!7479 = !DILocalVariable(name: "__dummy2", scope: !7476, file: !3, line: 2640, type: !176)
!7480 = !DILocation(line: 2640, column: 3, scope: !7477)
!7481 = !DILocation(line: 2640, column: 3, scope: !7421)
!7482 = !{i32 -2141529305}
!7483 = !DILocation(line: 2640, column: 3, scope: !7420)
!7484 = !DILocation(line: 329, column: 10, scope: !4644, inlinedAt: !7419)
!7485 = !DILocation(line: 329, column: 16, scope: !4644, inlinedAt: !7419)
!7486 = !DILocation(line: 2641, column: 27, scope: !7416)
!7487 = !DILocation(line: 2641, column: 11, scope: !7416)
!7488 = !DILocation(line: 2641, column: 9, scope: !7416)
!7489 = !DILocation(line: 2642, column: 27, scope: !7416)
!7490 = !DILocation(line: 2642, column: 33, scope: !7416)
!7491 = !DILocation(line: 2642, column: 39, scope: !7416)
!7492 = !DILocation(line: 409, column: 2, scope: !7393, inlinedAt: !7415)
!7493 = !DILocation(line: 409, column: 2, scope: !7398, inlinedAt: !7415)
!7494 = !DILocation(line: 409, column: 2, scope: !7399, inlinedAt: !7415)
!7495 = !DILocation(line: 409, column: 2, scope: !7406, inlinedAt: !7415)
!7496 = !DILocation(line: 409, column: 2, scope: !7409, inlinedAt: !7415)
!7497 = !DILocation(line: 2643, column: 10, scope: !7416)
!7498 = !DILocation(line: 2643, column: 3, scope: !7416)
!7499 = !DILocation(line: 2646, column: 20, scope: !7416)
!7500 = !DILocation(line: 2646, column: 11, scope: !7416)
!7501 = !DILocation(line: 2646, column: 9, scope: !7416)
!7502 = !DILocation(line: 2647, column: 11, scope: !7416)
!7503 = !DILocation(line: 2647, column: 17, scope: !7416)
!7504 = !DILocation(line: 2647, column: 23, scope: !7416)
!7505 = !DILocation(line: 2647, column: 3, scope: !7416)
!7506 = !DILocation(line: 2650, column: 20, scope: !7416)
!7507 = !DILocation(line: 2650, column: 11, scope: !7416)
!7508 = !DILocation(line: 2650, column: 52, scope: !7416)
!7509 = !DILocation(line: 2651, column: 5, scope: !7416)
!7510 = !DILocation(line: 2651, column: 11, scope: !7416)
!7511 = !DILocation(line: 2651, column: 23, scope: !7416)
!7512 = !DILocation(line: 2650, column: 60, scope: !7416)
!7513 = !DILocation(line: 2650, column: 3, scope: !7416)
!7514 = !DILocalVariable(name: "__ret_warn_on", scope: !7515, file: !3, line: 2654, type: !177)
!7515 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 2654, column: 3)
!7516 = !DILocation(line: 2654, column: 3, scope: !7515)
!7517 = !DILocation(line: 2654, column: 3, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 2654, column: 3)
!7519 = !DILocation(line: 2654, column: 3, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 2654, column: 3)
!7521 = !DILocation(line: 2654, column: 3, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 2654, column: 3)
!7523 = !DILocation(line: 2654, column: 3, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 2654, column: 3)
!7525 = !{i32 -2141528670, i32 -2141528641, i32 -2141528595, i32 -2141528537, i32 -2141528483, i32 -2141528429, i32 -2141528374, i32 -2141528343}
!7526 = !DILocation(line: 2654, column: 3, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 2654, column: 3)
!7528 = !{i32 -2141527937, i32 -2141527930, i32 -2141527878, i32 -2141527847, i32 -2141527817}
!7529 = !DILocation(line: 2654, column: 3, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 2654, column: 3)
!7531 = !DILocation(line: 2655, column: 3, scope: !7416)
!7532 = !DILocation(line: 2657, column: 1, scope: !7413)
!7533 = distinct !DISubprogram(name: "ohci_write_csr", scope: !3, file: !3, line: 2659, type: !271, scopeLine: 2660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7534 = !DILocation(line: 407, column: 64, scope: !7301, inlinedAt: !7535)
!7535 = distinct !DILocation(line: 2701, column: 3, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 2664, column: 22)
!7537 = !DILocation(line: 407, column: 84, scope: !7301, inlinedAt: !7535)
!7538 = !DILocation(line: 327, column: 67, scope: !4644, inlinedAt: !7539)
!7539 = distinct !DILocation(line: 2698, column: 3, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 2698, column: 3)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 2698, column: 3)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 2698, column: 3)
!7543 = distinct !DILexicalBlock(scope: !7544, file: !3, line: 2698, column: 3)
!7544 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 2698, column: 3)
!7545 = !DILocalVariable(name: "card", arg: 1, scope: !7533, file: !3, line: 2659, type: !204)
!7546 = !DILocation(line: 2659, column: 44, scope: !7533)
!7547 = !DILocalVariable(name: "csr_offset", arg: 2, scope: !7533, file: !3, line: 2659, type: !177)
!7548 = !DILocation(line: 2659, column: 54, scope: !7533)
!7549 = !DILocalVariable(name: "value", arg: 3, scope: !7533, file: !3, line: 2659, type: !231)
!7550 = !DILocation(line: 2659, column: 70, scope: !7533)
!7551 = !DILocalVariable(name: "ohci", scope: !7533, file: !3, line: 2661, type: !187)
!7552 = !DILocation(line: 2661, column: 18, scope: !7533)
!7553 = !DILocation(line: 2661, column: 33, scope: !7533)
!7554 = !DILocation(line: 2661, column: 25, scope: !7533)
!7555 = !DILocalVariable(name: "flags", scope: !7533, file: !3, line: 2662, type: !176)
!7556 = !DILocation(line: 2662, column: 16, scope: !7533)
!7557 = !DILocation(line: 2664, column: 10, scope: !7533)
!7558 = !DILocation(line: 2664, column: 2, scope: !7533)
!7559 = !DILocation(line: 2666, column: 8, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 2666, column: 7)
!7561 = !DILocation(line: 2666, column: 14, scope: !7560)
!7562 = !DILocation(line: 2666, column: 37, scope: !7560)
!7563 = !DILocation(line: 2666, column: 40, scope: !7560)
!7564 = !DILocation(line: 2666, column: 46, scope: !7560)
!7565 = !DILocation(line: 2666, column: 7, scope: !7536)
!7566 = !DILocation(line: 2667, column: 14, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 2666, column: 55)
!7568 = !DILocation(line: 2667, column: 4, scope: !7567)
!7569 = !DILocation(line: 2669, column: 17, scope: !7567)
!7570 = !DILocation(line: 2669, column: 4, scope: !7567)
!7571 = !DILocation(line: 2670, column: 3, scope: !7567)
!7572 = !DILocation(line: 2671, column: 7, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 2671, column: 7)
!7574 = !DILocation(line: 2671, column: 13, scope: !7573)
!7575 = !DILocation(line: 2671, column: 7, scope: !7536)
!7576 = !DILocation(line: 2672, column: 4, scope: !7573)
!7577 = !DILocation(line: 2672, column: 10, scope: !7573)
!7578 = !DILocation(line: 2672, column: 38, scope: !7573)
!7579 = !DILocation(line: 2673, column: 3, scope: !7536)
!7580 = !DILocation(line: 2676, column: 8, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 2676, column: 7)
!7582 = !DILocation(line: 2676, column: 14, scope: !7581)
!7583 = !DILocation(line: 2676, column: 37, scope: !7581)
!7584 = !DILocation(line: 2676, column: 40, scope: !7581)
!7585 = !DILocation(line: 2676, column: 46, scope: !7581)
!7586 = !DILocation(line: 2676, column: 7, scope: !7536)
!7587 = !DILocation(line: 2677, column: 14, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 2676, column: 55)
!7589 = !DILocation(line: 2677, column: 4, scope: !7588)
!7590 = !DILocation(line: 2679, column: 17, scope: !7588)
!7591 = !DILocation(line: 2679, column: 4, scope: !7588)
!7592 = !DILocation(line: 2680, column: 3, scope: !7588)
!7593 = !DILocation(line: 2681, column: 7, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 2681, column: 7)
!7595 = !DILocation(line: 2681, column: 13, scope: !7594)
!7596 = !DILocation(line: 2681, column: 7, scope: !7536)
!7597 = !DILocation(line: 2682, column: 4, scope: !7594)
!7598 = !DILocation(line: 2682, column: 10, scope: !7594)
!7599 = !DILocation(line: 2682, column: 38, scope: !7594)
!7600 = !DILocation(line: 2683, column: 3, scope: !7536)
!7601 = !DILocation(line: 2686, column: 13, scope: !7536)
!7602 = !DILocation(line: 2686, column: 36, scope: !7536)
!7603 = !DILocation(line: 2686, column: 42, scope: !7536)
!7604 = !DILocation(line: 2686, column: 3, scope: !7536)
!7605 = !DILocation(line: 2687, column: 16, scope: !7536)
!7606 = !DILocation(line: 2687, column: 3, scope: !7536)
!7607 = !DILocation(line: 2688, column: 3, scope: !7536)
!7608 = !DILocation(line: 2691, column: 13, scope: !7536)
!7609 = !DILocation(line: 2691, column: 51, scope: !7536)
!7610 = !DILocation(line: 2691, column: 3, scope: !7536)
!7611 = !DILocation(line: 2692, column: 13, scope: !7536)
!7612 = !DILocation(line: 2692, column: 3, scope: !7536)
!7613 = !DILocation(line: 2694, column: 16, scope: !7536)
!7614 = !DILocation(line: 2694, column: 3, scope: !7536)
!7615 = !DILocation(line: 2695, column: 3, scope: !7536)
!7616 = !DILocation(line: 2698, column: 3, scope: !7536)
!7617 = !DILocation(line: 2698, column: 3, scope: !7544)
!7618 = !DILocalVariable(name: "__dummy", scope: !7619, file: !3, line: 2698, type: !176)
!7619 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 2698, column: 3)
!7620 = !DILocation(line: 2698, column: 3, scope: !7619)
!7621 = !DILocalVariable(name: "__dummy2", scope: !7619, file: !3, line: 2698, type: !176)
!7622 = !DILocation(line: 2698, column: 3, scope: !7543)
!7623 = !DILocation(line: 2698, column: 3, scope: !7542)
!7624 = !DILocation(line: 2698, column: 3, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 2698, column: 3)
!7626 = !DILocalVariable(name: "__dummy", scope: !7627, file: !3, line: 2698, type: !176)
!7627 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 2698, column: 3)
!7628 = distinct !DILexicalBlock(scope: !7625, file: !3, line: 2698, column: 3)
!7629 = !DILocation(line: 2698, column: 3, scope: !7627)
!7630 = !DILocalVariable(name: "__dummy2", scope: !7627, file: !3, line: 2698, type: !176)
!7631 = !DILocation(line: 2698, column: 3, scope: !7628)
!7632 = !DILocation(line: 2698, column: 3, scope: !7541)
!7633 = !{i32 -2141526713}
!7634 = !DILocation(line: 2698, column: 3, scope: !7540)
!7635 = !DILocation(line: 329, column: 10, scope: !4644, inlinedAt: !7539)
!7636 = !DILocation(line: 329, column: 16, scope: !4644, inlinedAt: !7539)
!7637 = !DILocation(line: 2699, column: 37, scope: !7536)
!7638 = !DILocation(line: 2699, column: 21, scope: !7536)
!7639 = !DILocation(line: 2699, column: 43, scope: !7536)
!7640 = !DILocation(line: 2700, column: 21, scope: !7536)
!7641 = !DILocation(line: 2700, column: 27, scope: !7536)
!7642 = !DILocation(line: 2699, column: 51, scope: !7536)
!7643 = !DILocation(line: 2699, column: 3, scope: !7536)
!7644 = !DILocation(line: 2699, column: 9, scope: !7536)
!7645 = !DILocation(line: 2699, column: 18, scope: !7536)
!7646 = !DILocation(line: 2701, column: 27, scope: !7536)
!7647 = !DILocation(line: 2701, column: 33, scope: !7536)
!7648 = !DILocation(line: 2701, column: 39, scope: !7536)
!7649 = !DILocation(line: 409, column: 2, scope: !7393, inlinedAt: !7535)
!7650 = !DILocation(line: 409, column: 2, scope: !7398, inlinedAt: !7535)
!7651 = !DILocation(line: 409, column: 2, scope: !7399, inlinedAt: !7535)
!7652 = !DILocation(line: 409, column: 2, scope: !7406, inlinedAt: !7535)
!7653 = !DILocation(line: 409, column: 2, scope: !7409, inlinedAt: !7535)
!7654 = !DILocation(line: 2702, column: 3, scope: !7536)
!7655 = !DILocation(line: 2705, column: 12, scope: !7536)
!7656 = !DILocation(line: 2705, column: 18, scope: !7536)
!7657 = !DILocation(line: 2705, column: 29, scope: !7536)
!7658 = !DILocation(line: 2705, column: 35, scope: !7536)
!7659 = !DILocation(line: 2705, column: 42, scope: !7536)
!7660 = !DILocation(line: 2705, column: 25, scope: !7536)
!7661 = !DILocation(line: 2706, column: 6, scope: !7536)
!7662 = !DILocation(line: 2706, column: 12, scope: !7536)
!7663 = !DILocation(line: 2706, column: 19, scope: !7536)
!7664 = !DILocation(line: 2705, column: 48, scope: !7536)
!7665 = !DILocation(line: 2706, column: 29, scope: !7536)
!7666 = !DILocation(line: 2706, column: 35, scope: !7536)
!7667 = !DILocation(line: 2706, column: 49, scope: !7536)
!7668 = !DILocation(line: 2706, column: 25, scope: !7536)
!7669 = !DILocation(line: 2705, column: 9, scope: !7536)
!7670 = !DILocation(line: 2707, column: 13, scope: !7536)
!7671 = !DILocation(line: 2707, column: 39, scope: !7536)
!7672 = !DILocation(line: 2707, column: 3, scope: !7536)
!7673 = !DILocation(line: 2708, column: 16, scope: !7536)
!7674 = !DILocation(line: 2708, column: 3, scope: !7536)
!7675 = !DILocation(line: 2709, column: 3, scope: !7536)
!7676 = !DILocation(line: 2712, column: 13, scope: !7536)
!7677 = !DILocation(line: 2712, column: 45, scope: !7536)
!7678 = !DILocation(line: 2712, column: 51, scope: !7536)
!7679 = !DILocation(line: 2712, column: 3, scope: !7536)
!7680 = !DILocation(line: 2713, column: 16, scope: !7536)
!7681 = !DILocation(line: 2713, column: 3, scope: !7536)
!7682 = !DILocation(line: 2714, column: 3, scope: !7536)
!7683 = !DILocalVariable(name: "__ret_warn_on", scope: !7684, file: !3, line: 2717, type: !177)
!7684 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 2717, column: 3)
!7685 = !DILocation(line: 2717, column: 3, scope: !7684)
!7686 = !DILocation(line: 2717, column: 3, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 2717, column: 3)
!7688 = !DILocation(line: 2717, column: 3, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 2717, column: 3)
!7690 = !DILocation(line: 2717, column: 3, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 2717, column: 3)
!7692 = !DILocation(line: 2717, column: 3, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 2717, column: 3)
!7694 = !{i32 -2141526078, i32 -2141526049, i32 -2141526003, i32 -2141525945, i32 -2141525891, i32 -2141525837, i32 -2141525782, i32 -2141525751}
!7695 = !DILocation(line: 2717, column: 3, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 2717, column: 3)
!7697 = !{i32 -2141525345, i32 -2141525338, i32 -2141525286, i32 -2141525255, i32 -2141525225}
!7698 = !DILocation(line: 2717, column: 3, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 2717, column: 3)
!7700 = !DILocation(line: 2718, column: 3, scope: !7536)
!7701 = !DILocation(line: 2720, column: 1, scope: !7533)
!7702 = distinct !DISubprogram(name: "ohci_allocate_iso_context", scope: !3, file: !3, line: 2928, type: !275, scopeLine: 2930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7703 = !DILocation(line: 402, column: 57, scope: !5616, inlinedAt: !7704)
!7704 = distinct !DILocation(line: 3021, column: 2, scope: !7702)
!7705 = !DILocation(line: 377, column: 55, scope: !5622, inlinedAt: !7706)
!7706 = distinct !DILocation(line: 3008, column: 2, scope: !7702)
!7707 = !DILocation(line: 402, column: 57, scope: !5616, inlinedAt: !7708)
!7708 = distinct !DILocation(line: 2982, column: 2, scope: !7702)
!7709 = !DILocation(line: 283, column: 36, scope: !6400, inlinedAt: !7710)
!7710 = distinct !DILocation(line: 2968, column: 36, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 2940, column: 16)
!7712 = !DILocation(line: 285, column: 6, scope: !6400, inlinedAt: !7710)
!7713 = !DILocation(line: 283, column: 36, scope: !6400, inlinedAt: !7714)
!7714 = distinct !DILocation(line: 2956, column: 44, scope: !7711)
!7715 = !DILocation(line: 285, column: 6, scope: !6400, inlinedAt: !7714)
!7716 = !DILocation(line: 283, column: 36, scope: !6400, inlinedAt: !7717)
!7717 = distinct !DILocation(line: 2944, column: 14, scope: !7711)
!7718 = !DILocation(line: 285, column: 6, scope: !6400, inlinedAt: !7717)
!7719 = !DILocation(line: 377, column: 55, scope: !5622, inlinedAt: !7720)
!7720 = distinct !DILocation(line: 2938, column: 2, scope: !7702)
!7721 = !DILocalVariable(name: "card", arg: 1, scope: !7702, file: !3, line: 2928, type: !204)
!7722 = !DILocation(line: 2928, column: 73, scope: !7702)
!7723 = !DILocalVariable(name: "type", arg: 2, scope: !7702, file: !3, line: 2929, type: !177)
!7724 = !DILocation(line: 2929, column: 9, scope: !7702)
!7725 = !DILocalVariable(name: "channel", arg: 3, scope: !7702, file: !3, line: 2929, type: !177)
!7726 = !DILocation(line: 2929, column: 19, scope: !7702)
!7727 = !DILocalVariable(name: "header_size", arg: 4, scope: !7702, file: !3, line: 2929, type: !207)
!7728 = !DILocation(line: 2929, column: 35, scope: !7702)
!7729 = !DILocalVariable(name: "ohci", scope: !7702, file: !3, line: 2931, type: !187)
!7730 = !DILocation(line: 2931, column: 18, scope: !7702)
!7731 = !DILocation(line: 2931, column: 33, scope: !7702)
!7732 = !DILocation(line: 2931, column: 25, scope: !7702)
!7733 = !DILocalVariable(name: "ctx", scope: !7702, file: !3, line: 2932, type: !4089)
!7734 = !DILocation(line: 2932, column: 22, scope: !7702)
!7735 = !DILocalVariable(name: "callback", scope: !7702, file: !3, line: 2933, type: !4079)
!7736 = !DILocation(line: 2933, column: 24, scope: !7702)
!7737 = !DILocalVariable(name: "channels", scope: !7702, file: !3, line: 2934, type: !314)
!7738 = !DILocation(line: 2934, column: 7, scope: !7702)
!7739 = !DILocalVariable(name: "mask", scope: !7702, file: !3, line: 2935, type: !1982)
!7740 = !DILocation(line: 2935, column: 7, scope: !7702)
!7741 = !DILocalVariable(name: "regs", scope: !7702, file: !3, line: 2935, type: !231)
!7742 = !DILocation(line: 2935, column: 13, scope: !7702)
!7743 = !DILocalVariable(name: "index", scope: !7702, file: !3, line: 2936, type: !177)
!7744 = !DILocation(line: 2936, column: 6, scope: !7702)
!7745 = !DILocalVariable(name: "ret", scope: !7702, file: !3, line: 2936, type: !177)
!7746 = !DILocation(line: 2936, column: 13, scope: !7702)
!7747 = !DILocation(line: 2938, column: 17, scope: !7702)
!7748 = !DILocation(line: 2938, column: 23, scope: !7702)
!7749 = !DILocation(line: 379, column: 2, scope: !5810, inlinedAt: !7720)
!7750 = !DILocation(line: 379, column: 2, scope: !5813, inlinedAt: !7720)
!7751 = !DILocation(line: 379, column: 2, scope: !5816, inlinedAt: !7720)
!7752 = !DILocation(line: 2940, column: 10, scope: !7702)
!7753 = !DILocation(line: 2940, column: 2, scope: !7702)
!7754 = !DILocation(line: 2942, column: 15, scope: !7711)
!7755 = !DILocation(line: 2942, column: 21, scope: !7711)
!7756 = !DILocation(line: 2942, column: 12, scope: !7711)
!7757 = !DILocation(line: 2943, column: 12, scope: !7711)
!7758 = !DILocation(line: 2944, column: 19, scope: !7711)
!7759 = !DILocation(line: 2944, column: 18, scope: !7711)
!7760 = !DILocation(line: 299, column: 14, scope: !6400, inlinedAt: !7717)
!7761 = !DILocation(line: 297, column: 2, scope: !6400, inlinedAt: !7717)
!7762 = !DILocation(line: 310, column: 9, scope: !6400, inlinedAt: !7717)
!7763 = !DILocation(line: 310, column: 11, scope: !6400, inlinedAt: !7717)
!7764 = !DILocation(line: 2944, column: 25, scope: !7711)
!7765 = !DILocation(line: 2944, column: 12, scope: !7711)
!7766 = !DILocation(line: 2945, column: 7, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 2945, column: 7)
!7768 = !DILocation(line: 2945, column: 13, scope: !7767)
!7769 = !DILocation(line: 2945, column: 7, scope: !7711)
!7770 = !DILocation(line: 2946, column: 20, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 2945, column: 19)
!7772 = !DILocation(line: 2946, column: 17, scope: !7771)
!7773 = !DILocation(line: 2946, column: 13, scope: !7771)
!7774 = !DILocation(line: 2946, column: 5, scope: !7771)
!7775 = !DILocation(line: 2946, column: 10, scope: !7771)
!7776 = !DILocation(line: 2947, column: 11, scope: !7771)
!7777 = !DILocation(line: 2947, column: 9, scope: !7771)
!7778 = !DILocation(line: 2948, column: 12, scope: !7771)
!7779 = !DILocation(line: 2948, column: 18, scope: !7771)
!7780 = !DILocation(line: 2948, column: 34, scope: !7771)
!7781 = !DILocation(line: 2948, column: 9, scope: !7771)
!7782 = !DILocation(line: 2949, column: 3, scope: !7771)
!7783 = !DILocation(line: 2950, column: 3, scope: !7711)
!7784 = !DILocation(line: 2953, column: 15, scope: !7711)
!7785 = !DILocation(line: 2953, column: 21, scope: !7711)
!7786 = !DILocation(line: 2953, column: 12, scope: !7711)
!7787 = !DILocation(line: 2954, column: 15, scope: !7711)
!7788 = !DILocation(line: 2954, column: 21, scope: !7711)
!7789 = !DILocation(line: 2954, column: 12, scope: !7711)
!7790 = !DILocation(line: 2955, column: 12, scope: !7711)
!7791 = !DILocation(line: 2956, column: 15, scope: !7711)
!7792 = !DILocation(line: 2956, column: 14, scope: !7711)
!7793 = !DILocation(line: 2956, column: 34, scope: !7711)
!7794 = !DILocation(line: 2956, column: 31, scope: !7711)
!7795 = !DILocation(line: 2956, column: 24, scope: !7711)
!7796 = !DILocation(line: 2956, column: 49, scope: !7711)
!7797 = !DILocation(line: 2956, column: 48, scope: !7711)
!7798 = !DILocation(line: 299, column: 14, scope: !6400, inlinedAt: !7714)
!7799 = !DILocation(line: 297, column: 2, scope: !6400, inlinedAt: !7714)
!7800 = !DILocation(line: 310, column: 9, scope: !6400, inlinedAt: !7714)
!7801 = !DILocation(line: 310, column: 11, scope: !6400, inlinedAt: !7714)
!7802 = !DILocation(line: 2956, column: 55, scope: !7711)
!7803 = !DILocation(line: 2956, column: 12, scope: !7711)
!7804 = !DILocation(line: 2957, column: 7, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 2957, column: 7)
!7806 = !DILocation(line: 2957, column: 13, scope: !7805)
!7807 = !DILocation(line: 2957, column: 7, scope: !7711)
!7808 = !DILocation(line: 2958, column: 27, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7805, file: !3, line: 2957, column: 19)
!7810 = !DILocation(line: 2958, column: 24, scope: !7809)
!7811 = !DILocation(line: 2958, column: 17, scope: !7809)
!7812 = !DILocation(line: 2958, column: 5, scope: !7809)
!7813 = !DILocation(line: 2958, column: 14, scope: !7809)
!7814 = !DILocation(line: 2959, column: 24, scope: !7809)
!7815 = !DILocation(line: 2959, column: 21, scope: !7809)
!7816 = !DILocation(line: 2959, column: 17, scope: !7809)
!7817 = !DILocation(line: 2959, column: 5, scope: !7809)
!7818 = !DILocation(line: 2959, column: 14, scope: !7809)
!7819 = !DILocation(line: 2960, column: 11, scope: !7809)
!7820 = !DILocation(line: 2960, column: 9, scope: !7809)
!7821 = !DILocation(line: 2961, column: 12, scope: !7809)
!7822 = !DILocation(line: 2961, column: 18, scope: !7809)
!7823 = !DILocation(line: 2961, column: 34, scope: !7809)
!7824 = !DILocation(line: 2961, column: 9, scope: !7809)
!7825 = !DILocation(line: 2962, column: 3, scope: !7809)
!7826 = !DILocation(line: 2963, column: 3, scope: !7711)
!7827 = !DILocation(line: 2966, column: 15, scope: !7711)
!7828 = !DILocation(line: 2966, column: 21, scope: !7711)
!7829 = !DILocation(line: 2966, column: 12, scope: !7711)
!7830 = !DILocation(line: 2967, column: 12, scope: !7711)
!7831 = !DILocation(line: 2968, column: 15, scope: !7711)
!7832 = !DILocation(line: 2968, column: 21, scope: !7711)
!7833 = !DILocation(line: 2968, column: 14, scope: !7711)
!7834 = !DILocation(line: 2968, column: 41, scope: !7711)
!7835 = !DILocation(line: 2968, column: 40, scope: !7711)
!7836 = !DILocation(line: 299, column: 14, scope: !6400, inlinedAt: !7710)
!7837 = !DILocation(line: 297, column: 2, scope: !6400, inlinedAt: !7710)
!7838 = !DILocation(line: 310, column: 9, scope: !6400, inlinedAt: !7710)
!7839 = !DILocation(line: 310, column: 11, scope: !6400, inlinedAt: !7710)
!7840 = !DILocation(line: 2968, column: 47, scope: !7711)
!7841 = !DILocation(line: 2968, column: 12, scope: !7711)
!7842 = !DILocation(line: 2969, column: 7, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 2969, column: 7)
!7844 = !DILocation(line: 2969, column: 13, scope: !7843)
!7845 = !DILocation(line: 2969, column: 7, scope: !7711)
!7846 = !DILocation(line: 2970, column: 4, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 2969, column: 19)
!7848 = !DILocation(line: 2970, column: 10, scope: !7847)
!7849 = !DILocation(line: 2970, column: 23, scope: !7847)
!7850 = !DILocation(line: 2971, column: 20, scope: !7847)
!7851 = !DILocation(line: 2971, column: 17, scope: !7847)
!7852 = !DILocation(line: 2971, column: 13, scope: !7847)
!7853 = !DILocation(line: 2971, column: 5, scope: !7847)
!7854 = !DILocation(line: 2971, column: 10, scope: !7847)
!7855 = !DILocation(line: 2972, column: 11, scope: !7847)
!7856 = !DILocation(line: 2972, column: 9, scope: !7847)
!7857 = !DILocation(line: 2973, column: 12, scope: !7847)
!7858 = !DILocation(line: 2973, column: 18, scope: !7847)
!7859 = !DILocation(line: 2973, column: 34, scope: !7847)
!7860 = !DILocation(line: 2973, column: 9, scope: !7847)
!7861 = !DILocation(line: 2974, column: 3, scope: !7847)
!7862 = !DILocation(line: 2975, column: 3, scope: !7711)
!7863 = !DILocation(line: 2978, column: 9, scope: !7711)
!7864 = !DILocation(line: 2979, column: 7, scope: !7711)
!7865 = !DILocation(line: 2980, column: 2, scope: !7711)
!7866 = !DILocation(line: 2982, column: 19, scope: !7702)
!7867 = !DILocation(line: 2982, column: 25, scope: !7702)
!7868 = !DILocation(line: 404, column: 2, scope: !5829, inlinedAt: !7708)
!7869 = !DILocation(line: 404, column: 2, scope: !5832, inlinedAt: !7708)
!7870 = !DILocation(line: 404, column: 2, scope: !5835, inlinedAt: !7708)
!7871 = !DILocation(line: 2984, column: 6, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 2984, column: 6)
!7873 = !DILocation(line: 2984, column: 12, scope: !7872)
!7874 = !DILocation(line: 2984, column: 6, scope: !7702)
!7875 = !DILocation(line: 2985, column: 18, scope: !7872)
!7876 = !DILocation(line: 2985, column: 10, scope: !7872)
!7877 = !DILocation(line: 2985, column: 3, scope: !7872)
!7878 = !DILocation(line: 2987, column: 9, scope: !7702)
!7879 = !DILocation(line: 2987, column: 2, scope: !7702)
!7880 = !DILocation(line: 2988, column: 2, scope: !7702)
!7881 = !DILocation(line: 2988, column: 7, scope: !7702)
!7882 = !DILocation(line: 2988, column: 21, scope: !7702)
!7883 = !DILocation(line: 2989, column: 25, scope: !7702)
!7884 = !DILocation(line: 2989, column: 16, scope: !7702)
!7885 = !DILocation(line: 2989, column: 2, scope: !7702)
!7886 = !DILocation(line: 2989, column: 7, scope: !7702)
!7887 = !DILocation(line: 2989, column: 14, scope: !7702)
!7888 = !DILocation(line: 2990, column: 6, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 2990, column: 6)
!7890 = !DILocation(line: 2990, column: 11, scope: !7889)
!7891 = !DILocation(line: 2990, column: 18, scope: !7889)
!7892 = !DILocation(line: 2990, column: 6, scope: !7702)
!7893 = !DILocation(line: 2991, column: 7, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7889, file: !3, line: 2990, column: 27)
!7895 = !DILocation(line: 2992, column: 3, scope: !7894)
!7896 = !DILocation(line: 2994, column: 22, scope: !7702)
!7897 = !DILocation(line: 2994, column: 27, scope: !7702)
!7898 = !DILocation(line: 2994, column: 36, scope: !7702)
!7899 = !DILocation(line: 2994, column: 42, scope: !7702)
!7900 = !DILocation(line: 2994, column: 48, scope: !7702)
!7901 = !DILocation(line: 2994, column: 8, scope: !7702)
!7902 = !DILocation(line: 2994, column: 6, scope: !7702)
!7903 = !DILocation(line: 2995, column: 6, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 2995, column: 6)
!7905 = !DILocation(line: 2995, column: 10, scope: !7904)
!7906 = !DILocation(line: 2995, column: 6, scope: !7702)
!7907 = !DILocation(line: 2996, column: 3, scope: !7904)
!7908 = !DILocation(line: 2998, column: 6, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 2998, column: 6)
!7910 = !DILocation(line: 2998, column: 11, scope: !7909)
!7911 = !DILocation(line: 2998, column: 6, scope: !7702)
!7912 = !DILocation(line: 2999, column: 25, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 2998, column: 51)
!7914 = !DILocation(line: 2999, column: 3, scope: !7913)
!7915 = !DILocation(line: 3000, column: 3, scope: !7913)
!7916 = !DILocation(line: 3000, column: 8, scope: !7913)
!7917 = !DILocation(line: 3000, column: 21, scope: !7913)
!7918 = !DILocation(line: 3001, column: 2, scope: !7913)
!7919 = !DILocation(line: 3003, column: 10, scope: !7702)
!7920 = !DILocation(line: 3003, column: 15, scope: !7702)
!7921 = !DILocation(line: 3003, column: 2, scope: !7702)
!7922 = !DILabel(scope: !7702, name: "out_with_header", file: !3, line: 3005)
!7923 = !DILocation(line: 3005, column: 2, scope: !7702)
!7924 = !DILocation(line: 3006, column: 2, scope: !7702)
!7925 = !DILabel(scope: !7702, name: "out", file: !3, line: 3007)
!7926 = !DILocation(line: 3007, column: 2, scope: !7702)
!7927 = !DILocation(line: 3008, column: 17, scope: !7702)
!7928 = !DILocation(line: 3008, column: 23, scope: !7702)
!7929 = !DILocation(line: 379, column: 2, scope: !5810, inlinedAt: !7706)
!7930 = !DILocation(line: 379, column: 2, scope: !5813, inlinedAt: !7706)
!7931 = !DILocation(line: 379, column: 2, scope: !5816, inlinedAt: !7706)
!7932 = !DILocation(line: 3010, column: 10, scope: !7702)
!7933 = !DILocation(line: 3010, column: 2, scope: !7702)
!7934 = !DILocation(line: 3012, column: 24, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 3010, column: 16)
!7936 = !DILocation(line: 3012, column: 21, scope: !7935)
!7937 = !DILocation(line: 3012, column: 4, scope: !7935)
!7938 = !DILocation(line: 3012, column: 13, scope: !7935)
!7939 = !DILocation(line: 3013, column: 3, scope: !7935)
!7940 = !DILocation(line: 3016, column: 3, scope: !7935)
!7941 = !DILocation(line: 3016, column: 9, scope: !7935)
!7942 = !DILocation(line: 3016, column: 22, scope: !7935)
!7943 = !DILocation(line: 3017, column: 3, scope: !7935)
!7944 = !DILocation(line: 3019, column: 16, scope: !7702)
!7945 = !DILocation(line: 3019, column: 13, scope: !7702)
!7946 = !DILocation(line: 3019, column: 3, scope: !7702)
!7947 = !DILocation(line: 3019, column: 8, scope: !7702)
!7948 = !DILocation(line: 3021, column: 19, scope: !7702)
!7949 = !DILocation(line: 3021, column: 25, scope: !7702)
!7950 = !DILocation(line: 404, column: 2, scope: !5829, inlinedAt: !7704)
!7951 = !DILocation(line: 404, column: 2, scope: !5832, inlinedAt: !7704)
!7952 = !DILocation(line: 404, column: 2, scope: !5835, inlinedAt: !7704)
!7953 = !DILocation(line: 3023, column: 17, scope: !7702)
!7954 = !DILocation(line: 3023, column: 9, scope: !7702)
!7955 = !DILocation(line: 3023, column: 2, scope: !7702)
!7956 = !DILocation(line: 3024, column: 1, scope: !7702)
!7957 = distinct !DISubprogram(name: "ohci_free_iso_context", scope: !3, file: !3, line: 3101, type: !302, scopeLine: 3102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!7958 = !DILocation(line: 407, column: 64, scope: !7301, inlinedAt: !7959)
!7959 = distinct !DILocation(line: 3135, column: 2, scope: !7957)
!7960 = !DILocation(line: 407, column: 84, scope: !7301, inlinedAt: !7959)
!7961 = !DILocation(line: 327, column: 67, scope: !4644, inlinedAt: !7962)
!7962 = distinct !DILocation(line: 3112, column: 2, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 3112, column: 2)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 3112, column: 2)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !3, line: 3112, column: 2)
!7966 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 3112, column: 2)
!7967 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 3112, column: 2)
!7968 = !DILocalVariable(name: "base", arg: 1, scope: !7957, file: !3, line: 3101, type: !277)
!7969 = !DILocation(line: 3101, column: 58, scope: !7957)
!7970 = !DILocalVariable(name: "ohci", scope: !7957, file: !3, line: 3103, type: !187)
!7971 = !DILocation(line: 3103, column: 18, scope: !7957)
!7972 = !DILocation(line: 3103, column: 33, scope: !7957)
!7973 = !DILocation(line: 3103, column: 39, scope: !7957)
!7974 = !DILocation(line: 3103, column: 25, scope: !7957)
!7975 = !DILocalVariable(name: "ctx", scope: !7957, file: !3, line: 3104, type: !4089)
!7976 = !DILocation(line: 3104, column: 22, scope: !7957)
!7977 = !DILocalVariable(name: "__mptr", scope: !7978, file: !3, line: 3104, type: !175)
!7978 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 3104, column: 28)
!7979 = !DILocation(line: 3104, column: 28, scope: !7978)
!7980 = !DILocation(line: 3104, column: 28, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 3104, column: 28)
!7982 = !DILocalVariable(name: "flags", scope: !7957, file: !3, line: 3105, type: !176)
!7983 = !DILocation(line: 3105, column: 16, scope: !7957)
!7984 = !DILocalVariable(name: "index", scope: !7957, file: !3, line: 3106, type: !177)
!7985 = !DILocation(line: 3106, column: 6, scope: !7957)
!7986 = !DILocation(line: 3108, column: 16, scope: !7957)
!7987 = !DILocation(line: 3108, column: 2, scope: !7957)
!7988 = !DILocation(line: 3109, column: 19, scope: !7957)
!7989 = !DILocation(line: 3109, column: 24, scope: !7957)
!7990 = !DILocation(line: 3109, column: 2, scope: !7957)
!7991 = !DILocation(line: 3110, column: 2, scope: !7957)
!7992 = !DILocation(line: 3112, column: 2, scope: !7957)
!7993 = !DILocation(line: 3112, column: 2, scope: !7967)
!7994 = !DILocalVariable(name: "__dummy", scope: !7995, file: !3, line: 3112, type: !176)
!7995 = distinct !DILexicalBlock(scope: !7966, file: !3, line: 3112, column: 2)
!7996 = !DILocation(line: 3112, column: 2, scope: !7995)
!7997 = !DILocalVariable(name: "__dummy2", scope: !7995, file: !3, line: 3112, type: !176)
!7998 = !DILocation(line: 3112, column: 2, scope: !7966)
!7999 = !DILocation(line: 3112, column: 2, scope: !7965)
!8000 = !DILocation(line: 3112, column: 2, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 3112, column: 2)
!8002 = !DILocalVariable(name: "__dummy", scope: !8003, file: !3, line: 3112, type: !176)
!8003 = distinct !DILexicalBlock(scope: !8004, file: !3, line: 3112, column: 2)
!8004 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 3112, column: 2)
!8005 = !DILocation(line: 3112, column: 2, scope: !8003)
!8006 = !DILocalVariable(name: "__dummy2", scope: !8003, file: !3, line: 3112, type: !176)
!8007 = !DILocation(line: 3112, column: 2, scope: !8004)
!8008 = !DILocation(line: 3112, column: 2, scope: !7964)
!8009 = !{i32 -2141507855}
!8010 = !DILocation(line: 3112, column: 2, scope: !7963)
!8011 = !DILocation(line: 329, column: 10, scope: !4644, inlinedAt: !7962)
!8012 = !DILocation(line: 329, column: 16, scope: !4644, inlinedAt: !7962)
!8013 = !DILocation(line: 3114, column: 10, scope: !7957)
!8014 = !DILocation(line: 3114, column: 16, scope: !7957)
!8015 = !DILocation(line: 3114, column: 2, scope: !7957)
!8016 = !DILocation(line: 3116, column: 11, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 3114, column: 22)
!8018 = !DILocation(line: 3116, column: 17, scope: !8017)
!8019 = !DILocation(line: 3116, column: 23, scope: !8017)
!8020 = !DILocation(line: 3116, column: 15, scope: !8017)
!8021 = !DILocation(line: 3116, column: 9, scope: !8017)
!8022 = !DILocation(line: 3117, column: 33, scope: !8017)
!8023 = !DILocation(line: 3117, column: 30, scope: !8017)
!8024 = !DILocation(line: 3117, column: 3, scope: !8017)
!8025 = !DILocation(line: 3117, column: 9, scope: !8017)
!8026 = !DILocation(line: 3117, column: 25, scope: !8017)
!8027 = !DILocation(line: 3118, column: 3, scope: !8017)
!8028 = !DILocation(line: 3121, column: 11, scope: !8017)
!8029 = !DILocation(line: 3121, column: 17, scope: !8017)
!8030 = !DILocation(line: 3121, column: 23, scope: !8017)
!8031 = !DILocation(line: 3121, column: 15, scope: !8017)
!8032 = !DILocation(line: 3121, column: 9, scope: !8017)
!8033 = !DILocation(line: 3122, column: 33, scope: !8017)
!8034 = !DILocation(line: 3122, column: 30, scope: !8017)
!8035 = !DILocation(line: 3122, column: 3, scope: !8017)
!8036 = !DILocation(line: 3122, column: 9, scope: !8017)
!8037 = !DILocation(line: 3122, column: 25, scope: !8017)
!8038 = !DILocation(line: 3123, column: 40, scope: !8017)
!8039 = !DILocation(line: 3123, column: 46, scope: !8017)
!8040 = !DILocation(line: 3123, column: 37, scope: !8017)
!8041 = !DILocation(line: 3123, column: 3, scope: !8017)
!8042 = !DILocation(line: 3123, column: 9, scope: !8017)
!8043 = !DILocation(line: 3123, column: 29, scope: !8017)
!8044 = !DILocation(line: 3124, column: 3, scope: !8017)
!8045 = !DILocation(line: 3127, column: 11, scope: !8017)
!8046 = !DILocation(line: 3127, column: 17, scope: !8017)
!8047 = !DILocation(line: 3127, column: 23, scope: !8017)
!8048 = !DILocation(line: 3127, column: 15, scope: !8017)
!8049 = !DILocation(line: 3127, column: 9, scope: !8017)
!8050 = !DILocation(line: 3128, column: 33, scope: !8017)
!8051 = !DILocation(line: 3128, column: 30, scope: !8017)
!8052 = !DILocation(line: 3128, column: 3, scope: !8017)
!8053 = !DILocation(line: 3128, column: 9, scope: !8017)
!8054 = !DILocation(line: 3128, column: 25, scope: !8017)
!8055 = !DILocation(line: 3129, column: 32, scope: !8017)
!8056 = !DILocation(line: 3129, column: 38, scope: !8017)
!8057 = !DILocation(line: 3129, column: 3, scope: !8017)
!8058 = !DILocation(line: 3129, column: 9, scope: !8017)
!8059 = !DILocation(line: 3129, column: 29, scope: !8017)
!8060 = !DILocation(line: 3130, column: 3, scope: !8017)
!8061 = !DILocation(line: 3130, column: 9, scope: !8017)
!8062 = !DILocation(line: 3130, column: 21, scope: !8017)
!8063 = !DILocation(line: 3131, column: 3, scope: !8017)
!8064 = !DILocation(line: 3131, column: 9, scope: !8017)
!8065 = !DILocation(line: 3131, column: 22, scope: !8017)
!8066 = !DILocation(line: 3132, column: 3, scope: !8017)
!8067 = !DILocation(line: 3135, column: 26, scope: !7957)
!8068 = !DILocation(line: 3135, column: 32, scope: !7957)
!8069 = !DILocation(line: 3135, column: 38, scope: !7957)
!8070 = !DILocation(line: 409, column: 2, scope: !7393, inlinedAt: !7959)
!8071 = !DILocation(line: 409, column: 2, scope: !7398, inlinedAt: !7959)
!8072 = !DILocation(line: 409, column: 2, scope: !7399, inlinedAt: !7959)
!8073 = !DILocation(line: 409, column: 2, scope: !7406, inlinedAt: !7959)
!8074 = !DILocation(line: 409, column: 2, scope: !7409, inlinedAt: !7959)
!8075 = !DILocation(line: 3136, column: 1, scope: !7957)
!8076 = distinct !DISubprogram(name: "ohci_start_iso", scope: !3, file: !3, line: 3026, type: !306, scopeLine: 3028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8077 = !DILocalVariable(name: "base", arg: 1, scope: !8076, file: !3, line: 3026, type: !277)
!8078 = !DILocation(line: 3026, column: 50, scope: !8076)
!8079 = !DILocalVariable(name: "cycle", arg: 2, scope: !8076, file: !3, line: 3027, type: !308)
!8080 = !DILocation(line: 3027, column: 10, scope: !8076)
!8081 = !DILocalVariable(name: "sync", arg: 3, scope: !8076, file: !3, line: 3027, type: !231)
!8082 = !DILocation(line: 3027, column: 21, scope: !8076)
!8083 = !DILocalVariable(name: "tags", arg: 4, scope: !8076, file: !3, line: 3027, type: !231)
!8084 = !DILocation(line: 3027, column: 31, scope: !8076)
!8085 = !DILocalVariable(name: "ctx", scope: !8076, file: !3, line: 3029, type: !4089)
!8086 = !DILocation(line: 3029, column: 22, scope: !8076)
!8087 = !DILocalVariable(name: "__mptr", scope: !8088, file: !3, line: 3029, type: !175)
!8088 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 3029, column: 28)
!8089 = !DILocation(line: 3029, column: 28, scope: !8088)
!8090 = !DILocation(line: 3029, column: 28, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 3029, column: 28)
!8092 = !DILocalVariable(name: "ohci", scope: !8076, file: !3, line: 3030, type: !187)
!8093 = !DILocation(line: 3030, column: 18, scope: !8076)
!8094 = !DILocation(line: 3030, column: 25, scope: !8076)
!8095 = !DILocation(line: 3030, column: 30, scope: !8076)
!8096 = !DILocation(line: 3030, column: 38, scope: !8076)
!8097 = !DILocalVariable(name: "control", scope: !8076, file: !3, line: 3031, type: !231)
!8098 = !DILocation(line: 3031, column: 6, scope: !8076)
!8099 = !DILocalVariable(name: "match", scope: !8076, file: !3, line: 3031, type: !231)
!8100 = !DILocation(line: 3031, column: 41, scope: !8076)
!8101 = !DILocalVariable(name: "index", scope: !8076, file: !3, line: 3032, type: !177)
!8102 = !DILocation(line: 3032, column: 6, scope: !8076)
!8103 = !DILocation(line: 3035, column: 6, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 3035, column: 6)
!8105 = !DILocation(line: 3035, column: 11, scope: !8104)
!8106 = !DILocation(line: 3035, column: 19, scope: !8104)
!8107 = !DILocation(line: 3035, column: 25, scope: !8104)
!8108 = !DILocation(line: 3035, column: 40, scope: !8104)
!8109 = !DILocation(line: 3035, column: 6, scope: !8076)
!8110 = !DILocation(line: 3036, column: 3, scope: !8104)
!8111 = !DILocation(line: 3038, column: 10, scope: !8076)
!8112 = !DILocation(line: 3038, column: 15, scope: !8076)
!8113 = !DILocation(line: 3038, column: 20, scope: !8076)
!8114 = !DILocation(line: 3038, column: 2, scope: !8076)
!8115 = !DILocation(line: 3040, column: 11, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 3038, column: 26)
!8117 = !DILocation(line: 3040, column: 17, scope: !8116)
!8118 = !DILocation(line: 3040, column: 23, scope: !8116)
!8119 = !DILocation(line: 3040, column: 15, scope: !8116)
!8120 = !DILocation(line: 3040, column: 9, scope: !8116)
!8121 = !DILocation(line: 3041, column: 9, scope: !8116)
!8122 = !DILocation(line: 3042, column: 7, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 3042, column: 7)
!8124 = !DILocation(line: 3042, column: 13, scope: !8123)
!8125 = !DILocation(line: 3042, column: 7, scope: !8116)
!8126 = !DILocation(line: 3044, column: 6, scope: !8123)
!8127 = !DILocation(line: 3044, column: 12, scope: !8123)
!8128 = !DILocation(line: 3044, column: 22, scope: !8123)
!8129 = !DILocation(line: 3043, column: 42, scope: !8123)
!8130 = !DILocation(line: 3043, column: 10, scope: !8123)
!8131 = !DILocation(line: 3043, column: 4, scope: !8123)
!8132 = !DILocation(line: 3046, column: 13, scope: !8116)
!8133 = !DILocation(line: 3046, column: 55, scope: !8116)
!8134 = !DILocation(line: 3046, column: 52, scope: !8116)
!8135 = !DILocation(line: 3046, column: 3, scope: !8116)
!8136 = !DILocation(line: 3047, column: 13, scope: !8116)
!8137 = !DILocation(line: 3047, column: 52, scope: !8116)
!8138 = !DILocation(line: 3047, column: 49, scope: !8116)
!8139 = !DILocation(line: 3047, column: 3, scope: !8116)
!8140 = !DILocation(line: 3048, column: 16, scope: !8116)
!8141 = !DILocation(line: 3048, column: 21, scope: !8116)
!8142 = !DILocation(line: 3048, column: 30, scope: !8116)
!8143 = !DILocation(line: 3048, column: 3, scope: !8116)
!8144 = !DILocation(line: 3049, column: 3, scope: !8116)
!8145 = !DILocation(line: 3052, column: 11, scope: !8116)
!8146 = !DILocation(line: 3052, column: 3, scope: !8116)
!8147 = !DILocation(line: 3055, column: 11, scope: !8116)
!8148 = !DILocation(line: 3055, column: 17, scope: !8116)
!8149 = !DILocation(line: 3055, column: 23, scope: !8116)
!8150 = !DILocation(line: 3055, column: 15, scope: !8116)
!8151 = !DILocation(line: 3055, column: 9, scope: !8116)
!8152 = !DILocation(line: 3056, column: 12, scope: !8116)
!8153 = !DILocation(line: 3056, column: 17, scope: !8116)
!8154 = !DILocation(line: 3056, column: 27, scope: !8116)
!8155 = !DILocation(line: 3056, column: 32, scope: !8116)
!8156 = !DILocation(line: 3056, column: 24, scope: !8116)
!8157 = !DILocation(line: 3056, column: 40, scope: !8116)
!8158 = !DILocation(line: 3056, column: 45, scope: !8116)
!8159 = !DILocation(line: 3056, column: 50, scope: !8116)
!8160 = !DILocation(line: 3056, column: 38, scope: !8116)
!8161 = !DILocation(line: 3056, column: 9, scope: !8116)
!8162 = !DILocation(line: 3057, column: 7, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 3057, column: 7)
!8164 = !DILocation(line: 3057, column: 13, scope: !8163)
!8165 = !DILocation(line: 3057, column: 7, scope: !8116)
!8166 = !DILocation(line: 3058, column: 14, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 3057, column: 19)
!8168 = !DILocation(line: 3058, column: 20, scope: !8167)
!8169 = !DILocation(line: 3058, column: 31, scope: !8167)
!8170 = !DILocation(line: 3058, column: 10, scope: !8167)
!8171 = !DILocation(line: 3059, column: 12, scope: !8167)
!8172 = !DILocation(line: 3060, column: 3, scope: !8167)
!8173 = !DILocation(line: 3062, column: 13, scope: !8116)
!8174 = !DILocation(line: 3062, column: 55, scope: !8116)
!8175 = !DILocation(line: 3062, column: 52, scope: !8116)
!8176 = !DILocation(line: 3062, column: 3, scope: !8116)
!8177 = !DILocation(line: 3063, column: 13, scope: !8116)
!8178 = !DILocation(line: 3063, column: 52, scope: !8116)
!8179 = !DILocation(line: 3063, column: 49, scope: !8116)
!8180 = !DILocation(line: 3063, column: 3, scope: !8116)
!8181 = !DILocation(line: 3064, column: 13, scope: !8116)
!8182 = !DILocation(line: 3064, column: 19, scope: !8116)
!8183 = !DILocation(line: 3064, column: 53, scope: !8116)
!8184 = !DILocation(line: 3064, column: 3, scope: !8116)
!8185 = !DILocation(line: 3065, column: 16, scope: !8116)
!8186 = !DILocation(line: 3065, column: 21, scope: !8116)
!8187 = !DILocation(line: 3065, column: 30, scope: !8116)
!8188 = !DILocation(line: 3065, column: 3, scope: !8116)
!8189 = !DILocation(line: 3067, column: 15, scope: !8116)
!8190 = !DILocation(line: 3067, column: 3, scope: !8116)
!8191 = !DILocation(line: 3067, column: 8, scope: !8116)
!8192 = !DILocation(line: 3067, column: 13, scope: !8116)
!8193 = !DILocation(line: 3068, column: 15, scope: !8116)
!8194 = !DILocation(line: 3068, column: 3, scope: !8116)
!8195 = !DILocation(line: 3068, column: 8, scope: !8116)
!8196 = !DILocation(line: 3068, column: 13, scope: !8116)
!8197 = !DILocation(line: 3070, column: 3, scope: !8116)
!8198 = !DILocation(line: 3073, column: 2, scope: !8076)
!8199 = !DILocation(line: 3074, column: 1, scope: !8076)
!8200 = distinct !DISubprogram(name: "ohci_set_iso_channels", scope: !3, file: !3, line: 3138, type: !312, scopeLine: 3139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8201 = !DILocation(line: 407, column: 64, scope: !7301, inlinedAt: !8202)
!8202 = distinct !DILocation(line: 3158, column: 3, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 3144, column: 22)
!8204 = !DILocation(line: 407, column: 84, scope: !7301, inlinedAt: !8202)
!8205 = !DILocation(line: 327, column: 67, scope: !4644, inlinedAt: !8206)
!8206 = distinct !DILocation(line: 3147, column: 3, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 3147, column: 3)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3147, column: 3)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 3147, column: 3)
!8210 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 3147, column: 3)
!8211 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 3147, column: 3)
!8212 = !DILocalVariable(name: "base", arg: 1, scope: !8200, file: !3, line: 3138, type: !277)
!8213 = !DILocation(line: 3138, column: 57, scope: !8200)
!8214 = !DILocalVariable(name: "channels", arg: 2, scope: !8200, file: !3, line: 3138, type: !314)
!8215 = !DILocation(line: 3138, column: 68, scope: !8200)
!8216 = !DILocalVariable(name: "ohci", scope: !8200, file: !3, line: 3140, type: !187)
!8217 = !DILocation(line: 3140, column: 18, scope: !8200)
!8218 = !DILocation(line: 3140, column: 33, scope: !8200)
!8219 = !DILocation(line: 3140, column: 39, scope: !8200)
!8220 = !DILocation(line: 3140, column: 25, scope: !8200)
!8221 = !DILocalVariable(name: "flags", scope: !8200, file: !3, line: 3141, type: !176)
!8222 = !DILocation(line: 3141, column: 16, scope: !8200)
!8223 = !DILocalVariable(name: "ret", scope: !8200, file: !3, line: 3142, type: !177)
!8224 = !DILocation(line: 3142, column: 6, scope: !8200)
!8225 = !DILocation(line: 3144, column: 10, scope: !8200)
!8226 = !DILocation(line: 3144, column: 16, scope: !8200)
!8227 = !DILocation(line: 3144, column: 2, scope: !8200)
!8228 = !DILocation(line: 3147, column: 3, scope: !8203)
!8229 = !DILocation(line: 3147, column: 3, scope: !8211)
!8230 = !DILocalVariable(name: "__dummy", scope: !8231, file: !3, line: 3147, type: !176)
!8231 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 3147, column: 3)
!8232 = !DILocation(line: 3147, column: 3, scope: !8231)
!8233 = !DILocalVariable(name: "__dummy2", scope: !8231, file: !3, line: 3147, type: !176)
!8234 = !DILocation(line: 3147, column: 3, scope: !8210)
!8235 = !DILocation(line: 3147, column: 3, scope: !8209)
!8236 = !DILocation(line: 3147, column: 3, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3147, column: 3)
!8238 = !DILocalVariable(name: "__dummy", scope: !8239, file: !3, line: 3147, type: !176)
!8239 = distinct !DILexicalBlock(scope: !8240, file: !3, line: 3147, column: 3)
!8240 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 3147, column: 3)
!8241 = !DILocation(line: 3147, column: 3, scope: !8239)
!8242 = !DILocalVariable(name: "__dummy2", scope: !8239, file: !3, line: 3147, type: !176)
!8243 = !DILocation(line: 3147, column: 3, scope: !8240)
!8244 = !DILocation(line: 3147, column: 3, scope: !8208)
!8245 = !{i32 -2141506828}
!8246 = !DILocation(line: 3147, column: 3, scope: !8207)
!8247 = !DILocation(line: 329, column: 10, scope: !4644, inlinedAt: !8206)
!8248 = !DILocation(line: 329, column: 16, scope: !4644, inlinedAt: !8206)
!8249 = !DILocation(line: 3150, column: 8, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 3150, column: 7)
!8251 = !DILocation(line: 3150, column: 14, scope: !8250)
!8252 = !DILocation(line: 3150, column: 7, scope: !8250)
!8253 = !DILocation(line: 3150, column: 37, scope: !8250)
!8254 = !DILocation(line: 3150, column: 43, scope: !8250)
!8255 = !DILocation(line: 3150, column: 36, scope: !8250)
!8256 = !DILocation(line: 3150, column: 34, scope: !8250)
!8257 = !DILocation(line: 3150, column: 58, scope: !8250)
!8258 = !DILocation(line: 3150, column: 57, scope: !8250)
!8259 = !DILocation(line: 3150, column: 55, scope: !8250)
!8260 = !DILocation(line: 3150, column: 7, scope: !8203)
!8261 = !DILocation(line: 3151, column: 16, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 3150, column: 68)
!8263 = !DILocation(line: 3151, column: 22, scope: !8262)
!8264 = !DILocation(line: 3151, column: 5, scope: !8262)
!8265 = !DILocation(line: 3151, column: 14, scope: !8262)
!8266 = !DILocation(line: 3152, column: 8, scope: !8262)
!8267 = !DILocation(line: 3153, column: 3, scope: !8262)
!8268 = !DILocation(line: 3154, column: 26, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 3153, column: 10)
!8270 = !DILocation(line: 3154, column: 33, scope: !8269)
!8271 = !DILocation(line: 3154, column: 32, scope: !8269)
!8272 = !DILocation(line: 3154, column: 4, scope: !8269)
!8273 = !DILocation(line: 3155, column: 8, scope: !8269)
!8274 = !DILocation(line: 3158, column: 27, scope: !8203)
!8275 = !DILocation(line: 3158, column: 33, scope: !8203)
!8276 = !DILocation(line: 3158, column: 39, scope: !8203)
!8277 = !DILocation(line: 409, column: 2, scope: !7393, inlinedAt: !8202)
!8278 = !DILocation(line: 409, column: 2, scope: !7398, inlinedAt: !8202)
!8279 = !DILocation(line: 409, column: 2, scope: !7399, inlinedAt: !8202)
!8280 = !DILocation(line: 409, column: 2, scope: !7406, inlinedAt: !8202)
!8281 = !DILocation(line: 409, column: 2, scope: !7409, inlinedAt: !8202)
!8282 = !DILocation(line: 3160, column: 3, scope: !8203)
!8283 = !DILocation(line: 3162, column: 7, scope: !8203)
!8284 = !DILocation(line: 3163, column: 2, scope: !8203)
!8285 = !DILocation(line: 3165, column: 9, scope: !8200)
!8286 = !DILocation(line: 3165, column: 2, scope: !8200)
!8287 = distinct !DISubprogram(name: "ohci_queue_iso", scope: !3, file: !3, line: 3429, type: !317, scopeLine: 3433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8288 = !DILocation(line: 407, column: 64, scope: !7301, inlinedAt: !8289)
!8289 = distinct !DILocation(line: 3450, column: 2, scope: !8287)
!8290 = !DILocation(line: 407, column: 84, scope: !7301, inlinedAt: !8289)
!8291 = !DILocation(line: 327, column: 67, scope: !4644, inlinedAt: !8292)
!8292 = distinct !DILocation(line: 3438, column: 2, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 3438, column: 2)
!8294 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 3438, column: 2)
!8295 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 3438, column: 2)
!8296 = distinct !DILexicalBlock(scope: !8297, file: !3, line: 3438, column: 2)
!8297 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 3438, column: 2)
!8298 = !DILocalVariable(name: "base", arg: 1, scope: !8287, file: !3, line: 3429, type: !277)
!8299 = !DILocation(line: 3429, column: 50, scope: !8287)
!8300 = !DILocalVariable(name: "packet", arg: 2, scope: !8287, file: !3, line: 3430, type: !319)
!8301 = !DILocation(line: 3430, column: 28, scope: !8287)
!8302 = !DILocalVariable(name: "buffer", arg: 3, scope: !8287, file: !3, line: 3431, type: !334)
!8303 = !DILocation(line: 3431, column: 28, scope: !8287)
!8304 = !DILocalVariable(name: "payload", arg: 4, scope: !8287, file: !3, line: 3432, type: !176)
!8305 = !DILocation(line: 3432, column: 20, scope: !8287)
!8306 = !DILocalVariable(name: "ctx", scope: !8287, file: !3, line: 3434, type: !4089)
!8307 = !DILocation(line: 3434, column: 22, scope: !8287)
!8308 = !DILocalVariable(name: "__mptr", scope: !8309, file: !3, line: 3434, type: !175)
!8309 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 3434, column: 28)
!8310 = !DILocation(line: 3434, column: 28, scope: !8309)
!8311 = !DILocation(line: 3434, column: 28, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 3434, column: 28)
!8313 = !DILocalVariable(name: "flags", scope: !8287, file: !3, line: 3435, type: !176)
!8314 = !DILocation(line: 3435, column: 16, scope: !8287)
!8315 = !DILocalVariable(name: "ret", scope: !8287, file: !3, line: 3436, type: !177)
!8316 = !DILocation(line: 3436, column: 6, scope: !8287)
!8317 = !DILocation(line: 3438, column: 2, scope: !8287)
!8318 = !DILocation(line: 3438, column: 2, scope: !8297)
!8319 = !DILocalVariable(name: "__dummy", scope: !8320, file: !3, line: 3438, type: !176)
!8320 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 3438, column: 2)
!8321 = !DILocation(line: 3438, column: 2, scope: !8320)
!8322 = !DILocalVariable(name: "__dummy2", scope: !8320, file: !3, line: 3438, type: !176)
!8323 = !DILocation(line: 3438, column: 2, scope: !8296)
!8324 = !DILocation(line: 3438, column: 2, scope: !8295)
!8325 = !DILocation(line: 3438, column: 2, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 3438, column: 2)
!8327 = !DILocalVariable(name: "__dummy", scope: !8328, file: !3, line: 3438, type: !176)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 3438, column: 2)
!8329 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 3438, column: 2)
!8330 = !DILocation(line: 3438, column: 2, scope: !8328)
!8331 = !DILocalVariable(name: "__dummy2", scope: !8328, file: !3, line: 3438, type: !176)
!8332 = !DILocation(line: 3438, column: 2, scope: !8329)
!8333 = !DILocation(line: 3438, column: 2, scope: !8294)
!8334 = !{i32 -2141495945}
!8335 = !DILocation(line: 3438, column: 2, scope: !8293)
!8336 = !DILocation(line: 329, column: 10, scope: !4644, inlinedAt: !8292)
!8337 = !DILocation(line: 329, column: 16, scope: !4644, inlinedAt: !8292)
!8338 = !DILocation(line: 3439, column: 10, scope: !8287)
!8339 = !DILocation(line: 3439, column: 16, scope: !8287)
!8340 = !DILocation(line: 3439, column: 2, scope: !8287)
!8341 = !DILocation(line: 3441, column: 28, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 3439, column: 22)
!8343 = !DILocation(line: 3441, column: 33, scope: !8342)
!8344 = !DILocation(line: 3441, column: 41, scope: !8342)
!8345 = !DILocation(line: 3441, column: 49, scope: !8342)
!8346 = !DILocation(line: 3441, column: 9, scope: !8342)
!8347 = !DILocation(line: 3441, column: 7, scope: !8342)
!8348 = !DILocation(line: 3442, column: 3, scope: !8342)
!8349 = !DILocation(line: 3444, column: 37, scope: !8342)
!8350 = !DILocation(line: 3444, column: 42, scope: !8342)
!8351 = !DILocation(line: 3444, column: 50, scope: !8342)
!8352 = !DILocation(line: 3444, column: 58, scope: !8342)
!8353 = !DILocation(line: 3444, column: 9, scope: !8342)
!8354 = !DILocation(line: 3444, column: 7, scope: !8342)
!8355 = !DILocation(line: 3445, column: 3, scope: !8342)
!8356 = !DILocation(line: 3447, column: 31, scope: !8342)
!8357 = !DILocation(line: 3447, column: 36, scope: !8342)
!8358 = !DILocation(line: 3447, column: 44, scope: !8342)
!8359 = !DILocation(line: 3447, column: 52, scope: !8342)
!8360 = !DILocation(line: 3447, column: 9, scope: !8342)
!8361 = !DILocation(line: 3447, column: 7, scope: !8342)
!8362 = !DILocation(line: 3448, column: 3, scope: !8342)
!8363 = !DILocation(line: 3450, column: 26, scope: !8287)
!8364 = !DILocation(line: 3450, column: 31, scope: !8287)
!8365 = !DILocation(line: 3450, column: 39, scope: !8287)
!8366 = !DILocation(line: 3450, column: 45, scope: !8287)
!8367 = !DILocation(line: 3450, column: 51, scope: !8287)
!8368 = !DILocation(line: 409, column: 2, scope: !7393, inlinedAt: !8289)
!8369 = !DILocation(line: 409, column: 2, scope: !7398, inlinedAt: !8289)
!8370 = !DILocation(line: 409, column: 2, scope: !7399, inlinedAt: !8289)
!8371 = !DILocation(line: 409, column: 2, scope: !7406, inlinedAt: !8289)
!8372 = !DILocation(line: 409, column: 2, scope: !7409, inlinedAt: !8289)
!8373 = !DILocation(line: 3452, column: 9, scope: !8287)
!8374 = !DILocation(line: 3452, column: 2, scope: !8287)
!8375 = distinct !DISubprogram(name: "ohci_flush_queue_iso", scope: !3, file: !3, line: 3455, type: !302, scopeLine: 3456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8376 = !DILocalVariable(name: "base", arg: 1, scope: !8375, file: !3, line: 3455, type: !277)
!8377 = !DILocation(line: 3455, column: 57, scope: !8375)
!8378 = !DILocalVariable(name: "ctx", scope: !8375, file: !3, line: 3457, type: !4083)
!8379 = !DILocation(line: 3457, column: 18, scope: !8375)
!8380 = !DILocalVariable(name: "__mptr", scope: !8381, file: !3, line: 3458, type: !175)
!8381 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 3458, column: 5)
!8382 = !DILocation(line: 3458, column: 5, scope: !8381)
!8383 = !DILocation(line: 3458, column: 5, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 3458, column: 5)
!8385 = !DILocation(line: 3458, column: 51, scope: !8375)
!8386 = !DILocation(line: 3460, column: 12, scope: !8375)
!8387 = !DILocation(line: 3460, column: 17, scope: !8375)
!8388 = !DILocation(line: 3460, column: 23, scope: !8375)
!8389 = !DILocation(line: 3460, column: 2, scope: !8375)
!8390 = !DILocation(line: 3461, column: 1, scope: !8375)
!8391 = distinct !DISubprogram(name: "ohci_flush_iso_completions", scope: !3, file: !3, line: 3463, type: !3180, scopeLine: 3464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8392 = !DILocalVariable(name: "base", arg: 1, scope: !8391, file: !3, line: 3463, type: !277)
!8393 = !DILocation(line: 3463, column: 62, scope: !8391)
!8394 = !DILocalVariable(name: "ctx", scope: !8391, file: !3, line: 3465, type: !4089)
!8395 = !DILocation(line: 3465, column: 22, scope: !8391)
!8396 = !DILocalVariable(name: "__mptr", scope: !8397, file: !3, line: 3465, type: !175)
!8397 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 3465, column: 28)
!8398 = !DILocation(line: 3465, column: 28, scope: !8397)
!8399 = !DILocation(line: 3465, column: 28, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 3465, column: 28)
!8401 = !DILocalVariable(name: "ret", scope: !8391, file: !3, line: 3466, type: !177)
!8402 = !DILocation(line: 3466, column: 6, scope: !8391)
!8403 = !DILocation(line: 3468, column: 19, scope: !8391)
!8404 = !DILocation(line: 3468, column: 24, scope: !8391)
!8405 = !DILocation(line: 3468, column: 32, scope: !8391)
!8406 = !DILocation(line: 3468, column: 2, scope: !8391)
!8407 = !DILocation(line: 3470, column: 33, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 3470, column: 6)
!8409 = !DILocation(line: 3470, column: 38, scope: !8408)
!8410 = !DILocation(line: 3470, column: 7, scope: !8408)
!8411 = !DILocation(line: 3470, column: 6, scope: !8391)
!8412 = !DILocation(line: 3471, column: 35, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 3470, column: 61)
!8414 = !DILocation(line: 3471, column: 40, scope: !8413)
!8415 = !DILocation(line: 3471, column: 19, scope: !8413)
!8416 = !DILocation(line: 3471, column: 3, scope: !8413)
!8417 = !DILocation(line: 3473, column: 11, scope: !8413)
!8418 = !DILocation(line: 3473, column: 17, scope: !8413)
!8419 = !DILocation(line: 3473, column: 3, scope: !8413)
!8420 = !DILocation(line: 3476, column: 8, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 3476, column: 8)
!8422 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 3473, column: 23)
!8423 = !DILocation(line: 3476, column: 13, scope: !8421)
!8424 = !DILocation(line: 3476, column: 27, scope: !8421)
!8425 = !DILocation(line: 3476, column: 8, scope: !8422)
!8426 = !DILocation(line: 3477, column: 27, scope: !8421)
!8427 = !DILocation(line: 3477, column: 5, scope: !8421)
!8428 = !DILocation(line: 3478, column: 4, scope: !8422)
!8429 = !DILocation(line: 3480, column: 8, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 3480, column: 8)
!8431 = !DILocation(line: 3480, column: 13, scope: !8430)
!8432 = !DILocation(line: 3480, column: 26, scope: !8430)
!8433 = !DILocation(line: 3480, column: 8, scope: !8422)
!8434 = !DILocation(line: 3481, column: 26, scope: !8430)
!8435 = !DILocation(line: 3481, column: 5, scope: !8430)
!8436 = !DILocation(line: 3482, column: 4, scope: !8422)
!8437 = !DILocation(line: 3484, column: 8, scope: !8422)
!8438 = !DILocation(line: 3485, column: 3, scope: !8422)
!8439 = !DILocation(line: 3487, column: 24, scope: !8413)
!8440 = !DILocation(line: 3487, column: 29, scope: !8413)
!8441 = !DILocation(line: 3487, column: 3, scope: !8413)
!8442 = !DILocation(line: 3488, column: 3, scope: !8413)
!8443 = !{i32 -2141492800}
!8444 = !DILocation(line: 3489, column: 2, scope: !8413)
!8445 = !DILocation(line: 3491, column: 18, scope: !8391)
!8446 = !DILocation(line: 3491, column: 23, scope: !8391)
!8447 = !DILocation(line: 3491, column: 31, scope: !8391)
!8448 = !DILocation(line: 3491, column: 2, scope: !8391)
!8449 = !DILocation(line: 3493, column: 9, scope: !8391)
!8450 = !DILocation(line: 3493, column: 2, scope: !8391)
!8451 = distinct !DISubprogram(name: "ohci_stop_iso", scope: !3, file: !3, line: 3076, type: !3180, scopeLine: 3077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8452 = !DILocalVariable(name: "base", arg: 1, scope: !8451, file: !3, line: 3076, type: !277)
!8453 = !DILocation(line: 3076, column: 49, scope: !8451)
!8454 = !DILocalVariable(name: "ohci", scope: !8451, file: !3, line: 3078, type: !187)
!8455 = !DILocation(line: 3078, column: 18, scope: !8451)
!8456 = !DILocation(line: 3078, column: 33, scope: !8451)
!8457 = !DILocation(line: 3078, column: 39, scope: !8451)
!8458 = !DILocation(line: 3078, column: 25, scope: !8451)
!8459 = !DILocalVariable(name: "ctx", scope: !8451, file: !3, line: 3079, type: !4089)
!8460 = !DILocation(line: 3079, column: 22, scope: !8451)
!8461 = !DILocalVariable(name: "__mptr", scope: !8462, file: !3, line: 3079, type: !175)
!8462 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 3079, column: 28)
!8463 = !DILocation(line: 3079, column: 28, scope: !8462)
!8464 = !DILocation(line: 3079, column: 28, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3079, column: 28)
!8466 = !DILocalVariable(name: "index", scope: !8451, file: !3, line: 3080, type: !177)
!8467 = !DILocation(line: 3080, column: 6, scope: !8451)
!8468 = !DILocation(line: 3082, column: 10, scope: !8451)
!8469 = !DILocation(line: 3082, column: 15, scope: !8451)
!8470 = !DILocation(line: 3082, column: 20, scope: !8451)
!8471 = !DILocation(line: 3082, column: 2, scope: !8451)
!8472 = !DILocation(line: 3084, column: 11, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 3082, column: 26)
!8474 = !DILocation(line: 3084, column: 17, scope: !8473)
!8475 = !DILocation(line: 3084, column: 23, scope: !8473)
!8476 = !DILocation(line: 3084, column: 15, scope: !8473)
!8477 = !DILocation(line: 3084, column: 9, scope: !8473)
!8478 = !DILocation(line: 3085, column: 13, scope: !8473)
!8479 = !DILocation(line: 3085, column: 54, scope: !8473)
!8480 = !DILocation(line: 3085, column: 51, scope: !8473)
!8481 = !DILocation(line: 3085, column: 3, scope: !8473)
!8482 = !DILocation(line: 3086, column: 3, scope: !8473)
!8483 = !DILocation(line: 3090, column: 11, scope: !8473)
!8484 = !DILocation(line: 3090, column: 17, scope: !8473)
!8485 = !DILocation(line: 3090, column: 23, scope: !8473)
!8486 = !DILocation(line: 3090, column: 15, scope: !8473)
!8487 = !DILocation(line: 3090, column: 9, scope: !8473)
!8488 = !DILocation(line: 3091, column: 13, scope: !8473)
!8489 = !DILocation(line: 3091, column: 54, scope: !8473)
!8490 = !DILocation(line: 3091, column: 51, scope: !8473)
!8491 = !DILocation(line: 3091, column: 3, scope: !8473)
!8492 = !DILocation(line: 3092, column: 3, scope: !8473)
!8493 = !DILocation(line: 3094, column: 15, scope: !8451)
!8494 = !DILocation(line: 3094, column: 2, scope: !8451)
!8495 = !DILocation(line: 3095, column: 16, scope: !8451)
!8496 = !DILocation(line: 3095, column: 21, scope: !8451)
!8497 = !DILocation(line: 3095, column: 2, scope: !8451)
!8498 = !DILocation(line: 3096, column: 16, scope: !8451)
!8499 = !DILocation(line: 3096, column: 21, scope: !8451)
!8500 = !DILocation(line: 3096, column: 29, scope: !8451)
!8501 = !DILocation(line: 3096, column: 2, scope: !8451)
!8502 = !DILocation(line: 3098, column: 2, scope: !8451)
!8503 = distinct !DISubprogram(name: "fw_ohci", scope: !3, file: !3, line: 234, type: !8504, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8504 = !DISubroutineType(types: !8505)
!8505 = !{!187, !204}
!8506 = !DILocalVariable(name: "card", arg: 1, scope: !8503, file: !3, line: 234, type: !204)
!8507 = !DILocation(line: 234, column: 55, scope: !8503)
!8508 = !DILocalVariable(name: "__mptr", scope: !8509, file: !3, line: 236, type: !175)
!8509 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 236, column: 9)
!8510 = !DILocation(line: 236, column: 9, scope: !8509)
!8511 = !DILocation(line: 236, column: 9, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 236, column: 9)
!8513 = !DILocation(line: 236, column: 2, scope: !8503)
!8514 = distinct !DISubprogram(name: "software_reset", scope: !3, file: !3, line: 2159, type: !4570, scopeLine: 2160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8515 = !DILocalVariable(name: "ohci", arg: 1, scope: !8514, file: !3, line: 2159, type: !187)
!8516 = !DILocation(line: 2159, column: 43, scope: !8514)
!8517 = !DILocalVariable(name: "val", scope: !8514, file: !3, line: 2161, type: !231)
!8518 = !DILocation(line: 2161, column: 6, scope: !8514)
!8519 = !DILocalVariable(name: "i", scope: !8514, file: !3, line: 2162, type: !177)
!8520 = !DILocation(line: 2162, column: 6, scope: !8514)
!8521 = !DILocation(line: 2164, column: 12, scope: !8514)
!8522 = !DILocation(line: 2164, column: 2, scope: !8514)
!8523 = !DILocation(line: 2165, column: 9, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 2165, column: 2)
!8525 = !DILocation(line: 2165, column: 7, scope: !8524)
!8526 = !DILocation(line: 2165, column: 14, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 2165, column: 2)
!8528 = !DILocation(line: 2165, column: 16, scope: !8527)
!8529 = !DILocation(line: 2165, column: 2, scope: !8524)
!8530 = !DILocation(line: 2166, column: 18, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 2165, column: 28)
!8532 = !DILocation(line: 2166, column: 9, scope: !8531)
!8533 = !DILocation(line: 2166, column: 7, scope: !8531)
!8534 = !DILocation(line: 2167, column: 9, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 2167, column: 7)
!8536 = !DILocation(line: 2167, column: 8, scope: !8535)
!8537 = !DILocation(line: 2167, column: 7, scope: !8531)
!8538 = !DILocation(line: 2168, column: 4, scope: !8535)
!8539 = !DILocation(line: 2170, column: 9, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 2170, column: 7)
!8541 = !DILocation(line: 2170, column: 13, scope: !8540)
!8542 = !DILocation(line: 2170, column: 7, scope: !8531)
!8543 = !DILocation(line: 2171, column: 4, scope: !8540)
!8544 = !DILocation(line: 2173, column: 3, scope: !8531)
!8545 = !DILocation(line: 2174, column: 2, scope: !8531)
!8546 = !DILocation(line: 2165, column: 24, scope: !8527)
!8547 = !DILocation(line: 2165, column: 2, scope: !8527)
!8548 = distinct !{!8548, !8529, !8549}
!8549 = !DILocation(line: 2174, column: 2, scope: !8524)
!8550 = !DILocation(line: 2176, column: 2, scope: !8514)
!8551 = !DILocation(line: 2177, column: 1, scope: !8514)
!8552 = distinct !DISubprogram(name: "flush_writes", scope: !3, file: !3, line: 537, type: !8553, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8553 = !DISubroutineType(types: !8554)
!8554 = !{null, !6335}
!8555 = !DILocalVariable(name: "ohci", arg: 1, scope: !8552, file: !3, line: 537, type: !6335)
!8556 = !DILocation(line: 537, column: 55, scope: !8552)
!8557 = !DILocation(line: 540, column: 11, scope: !8552)
!8558 = !DILocation(line: 540, column: 2, scope: !8552)
!8559 = !DILocation(line: 541, column: 1, scope: !8552)
!8560 = !DILocalVariable(name: "ohci", arg: 1, scope: !4569, file: !3, line: 2239, type: !187)
!8561 = !DILocation(line: 2239, column: 44, scope: !4569)
!8562 = !DILocalVariable(name: "reg", scope: !4569, file: !3, line: 2243, type: !177)
!8563 = !DILocation(line: 2243, column: 6, scope: !4569)
!8564 = !DILocalVariable(name: "i", scope: !4569, file: !3, line: 2243, type: !177)
!8565 = !DILocation(line: 2243, column: 11, scope: !4569)
!8566 = !DILocation(line: 2245, column: 21, scope: !4569)
!8567 = !DILocation(line: 2245, column: 8, scope: !4569)
!8568 = !DILocation(line: 2245, column: 6, scope: !4569)
!8569 = !DILocation(line: 2246, column: 6, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !4569, file: !3, line: 2246, column: 6)
!8571 = !DILocation(line: 2246, column: 10, scope: !8570)
!8572 = !DILocation(line: 2246, column: 6, scope: !4569)
!8573 = !DILocation(line: 2247, column: 10, scope: !8570)
!8574 = !DILocation(line: 2247, column: 3, scope: !8570)
!8575 = !DILocation(line: 2248, column: 7, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !4569, file: !3, line: 2248, column: 6)
!8577 = !DILocation(line: 2248, column: 11, scope: !8576)
!8578 = !DILocation(line: 2248, column: 37, scope: !8576)
!8579 = !DILocation(line: 2248, column: 6, scope: !4569)
!8580 = !DILocation(line: 2249, column: 3, scope: !8576)
!8581 = !DILocation(line: 2251, column: 9, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !4569, file: !3, line: 2251, column: 2)
!8583 = !DILocation(line: 2251, column: 7, scope: !8582)
!8584 = !DILocation(line: 2251, column: 31, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 2251, column: 2)
!8586 = !DILocation(line: 2251, column: 33, scope: !8585)
!8587 = !DILocation(line: 2251, column: 2, scope: !8582)
!8588 = !DILocation(line: 2252, column: 28, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 2251, column: 44)
!8590 = !DILocation(line: 2252, column: 37, scope: !8589)
!8591 = !DILocation(line: 2252, column: 39, scope: !8589)
!8592 = !DILocation(line: 2252, column: 9, scope: !8589)
!8593 = !DILocation(line: 2252, column: 7, scope: !8589)
!8594 = !DILocation(line: 2253, column: 7, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8589, file: !3, line: 2253, column: 7)
!8596 = !DILocation(line: 2253, column: 11, scope: !8595)
!8597 = !DILocation(line: 2253, column: 7, scope: !8589)
!8598 = !DILocation(line: 2254, column: 11, scope: !8595)
!8599 = !DILocation(line: 2254, column: 4, scope: !8595)
!8600 = !DILocation(line: 2255, column: 7, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8589, file: !3, line: 2255, column: 7)
!8602 = !DILocation(line: 2255, column: 17, scope: !8601)
!8603 = !DILocation(line: 2255, column: 14, scope: !8601)
!8604 = !DILocation(line: 2255, column: 11, scope: !8601)
!8605 = !DILocation(line: 2255, column: 7, scope: !8589)
!8606 = !DILocation(line: 2256, column: 4, scope: !8601)
!8607 = !DILocation(line: 2257, column: 2, scope: !8589)
!8608 = !DILocation(line: 2251, column: 40, scope: !8585)
!8609 = !DILocation(line: 2251, column: 2, scope: !8585)
!8610 = distinct !{!8610, !8587, !8611}
!8611 = !DILocation(line: 2257, column: 2, scope: !8582)
!8612 = !DILocation(line: 2258, column: 2, scope: !4569)
!8613 = !DILocation(line: 2259, column: 1, scope: !4569)
!8614 = distinct !DISubprogram(name: "configure_1394a_enhancements", scope: !3, file: !3, line: 2188, type: !4570, scopeLine: 2189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8615 = !DILocalVariable(name: "ohci", arg: 1, scope: !8614, file: !3, line: 2188, type: !187)
!8616 = !DILocation(line: 2188, column: 57, scope: !8614)
!8617 = !DILocalVariable(name: "enable_1394a", scope: !8614, file: !3, line: 2190, type: !240)
!8618 = !DILocation(line: 2190, column: 7, scope: !8614)
!8619 = !DILocalVariable(name: "ret", scope: !8614, file: !3, line: 2191, type: !177)
!8620 = !DILocation(line: 2191, column: 6, scope: !8614)
!8621 = !DILocalVariable(name: "clear", scope: !8614, file: !3, line: 2191, type: !177)
!8622 = !DILocation(line: 2191, column: 11, scope: !8614)
!8623 = !DILocalVariable(name: "set", scope: !8614, file: !3, line: 2191, type: !177)
!8624 = !DILocation(line: 2191, column: 18, scope: !8614)
!8625 = !DILocalVariable(name: "offset", scope: !8614, file: !3, line: 2191, type: !177)
!8626 = !DILocation(line: 2191, column: 23, scope: !8614)
!8627 = !DILocation(line: 2194, column: 17, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 2194, column: 6)
!8629 = !DILocation(line: 2194, column: 8, scope: !8628)
!8630 = !DILocation(line: 2194, column: 46, scope: !8628)
!8631 = !DILocation(line: 2194, column: 6, scope: !8614)
!8632 = !DILocation(line: 2196, column: 3, scope: !8628)
!8633 = !DILocation(line: 2199, column: 15, scope: !8614)
!8634 = !DILocation(line: 2200, column: 21, scope: !8614)
!8635 = !DILocation(line: 2200, column: 8, scope: !8614)
!8636 = !DILocation(line: 2200, column: 6, scope: !8614)
!8637 = !DILocation(line: 2201, column: 6, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 2201, column: 6)
!8639 = !DILocation(line: 2201, column: 10, scope: !8638)
!8640 = !DILocation(line: 2201, column: 6, scope: !8614)
!8641 = !DILocation(line: 2202, column: 10, scope: !8638)
!8642 = !DILocation(line: 2202, column: 3, scope: !8638)
!8643 = !DILocation(line: 2203, column: 7, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 2203, column: 6)
!8645 = !DILocation(line: 2203, column: 11, scope: !8644)
!8646 = !DILocation(line: 2203, column: 37, scope: !8644)
!8647 = !DILocation(line: 2203, column: 6, scope: !8614)
!8648 = !DILocation(line: 2204, column: 28, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 2203, column: 64)
!8650 = !DILocation(line: 2204, column: 9, scope: !8649)
!8651 = !DILocation(line: 2204, column: 7, scope: !8649)
!8652 = !DILocation(line: 2205, column: 7, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 2205, column: 7)
!8654 = !DILocation(line: 2205, column: 11, scope: !8653)
!8655 = !DILocation(line: 2205, column: 7, scope: !8649)
!8656 = !DILocation(line: 2206, column: 11, scope: !8653)
!8657 = !DILocation(line: 2206, column: 4, scope: !8653)
!8658 = !DILocation(line: 2207, column: 7, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 2207, column: 7)
!8660 = !DILocation(line: 2207, column: 11, scope: !8659)
!8661 = !DILocation(line: 2207, column: 7, scope: !8649)
!8662 = !DILocation(line: 2208, column: 17, scope: !8659)
!8663 = !DILocation(line: 2208, column: 4, scope: !8659)
!8664 = !DILocation(line: 2209, column: 2, scope: !8649)
!8665 = !DILocation(line: 2211, column: 6, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 2211, column: 6)
!8667 = !DILocation(line: 2211, column: 12, scope: !8666)
!8668 = !DILocation(line: 2211, column: 19, scope: !8666)
!8669 = !DILocation(line: 2211, column: 6, scope: !8614)
!8670 = !DILocation(line: 2212, column: 16, scope: !8666)
!8671 = !DILocation(line: 2212, column: 3, scope: !8666)
!8672 = !DILocation(line: 2215, column: 6, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 2215, column: 6)
!8674 = !DILocation(line: 2215, column: 6, scope: !8614)
!8675 = !DILocation(line: 2216, column: 9, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 2215, column: 20)
!8677 = !DILocation(line: 2217, column: 7, scope: !8676)
!8678 = !DILocation(line: 2218, column: 2, scope: !8676)
!8679 = !DILocation(line: 2219, column: 9, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 2218, column: 9)
!8681 = !DILocation(line: 2220, column: 7, scope: !8680)
!8682 = !DILocation(line: 2222, column: 23, scope: !8614)
!8683 = !DILocation(line: 2222, column: 32, scope: !8614)
!8684 = !DILocation(line: 2222, column: 39, scope: !8614)
!8685 = !DILocation(line: 2222, column: 8, scope: !8614)
!8686 = !DILocation(line: 2222, column: 6, scope: !8614)
!8687 = !DILocation(line: 2223, column: 6, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 2223, column: 6)
!8689 = !DILocation(line: 2223, column: 10, scope: !8688)
!8690 = !DILocation(line: 2223, column: 6, scope: !8614)
!8691 = !DILocation(line: 2224, column: 10, scope: !8688)
!8692 = !DILocation(line: 2224, column: 3, scope: !8688)
!8693 = !DILocation(line: 2226, column: 6, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 2226, column: 6)
!8695 = !DILocation(line: 2226, column: 6, scope: !8614)
!8696 = !DILocation(line: 2227, column: 10, scope: !8694)
!8697 = !DILocation(line: 2227, column: 3, scope: !8694)
!8698 = !DILocation(line: 2229, column: 10, scope: !8694)
!8699 = !DILocation(line: 2230, column: 12, scope: !8614)
!8700 = !DILocation(line: 2230, column: 18, scope: !8614)
!8701 = !DILocation(line: 2230, column: 2, scope: !8614)
!8702 = !DILocation(line: 2233, column: 12, scope: !8614)
!8703 = !DILocation(line: 2233, column: 2, scope: !8614)
!8704 = !DILocation(line: 2236, column: 2, scope: !8614)
!8705 = !DILocation(line: 2237, column: 1, scope: !8614)
!8706 = distinct !DISubprogram(name: "copy_config_rom", scope: !3, file: !3, line: 2179, type: !8707, scopeLine: 2180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8707 = !DISubroutineType(types: !8708)
!8708 = !{null, !4109, !205, !207}
!8709 = !DILocalVariable(name: "dest", arg: 1, scope: !8706, file: !3, line: 2179, type: !4109)
!8710 = !DILocation(line: 2179, column: 37, scope: !8706)
!8711 = !DILocalVariable(name: "src", arg: 2, scope: !8706, file: !3, line: 2179, type: !205)
!8712 = !DILocation(line: 2179, column: 57, scope: !8706)
!8713 = !DILocalVariable(name: "length", arg: 3, scope: !8706, file: !3, line: 2179, type: !207)
!8714 = !DILocation(line: 2179, column: 69, scope: !8706)
!8715 = !DILocalVariable(name: "size", scope: !8706, file: !3, line: 2181, type: !207)
!8716 = !DILocation(line: 2181, column: 9, scope: !8706)
!8717 = !DILocation(line: 2181, column: 16, scope: !8706)
!8718 = !DILocation(line: 2181, column: 23, scope: !8706)
!8719 = !DILocation(line: 2183, column: 9, scope: !8706)
!8720 = !DILocation(line: 2183, column: 2, scope: !8706)
!8721 = !DILocation(line: 2183, column: 15, scope: !8706)
!8722 = !DILocation(line: 2183, column: 20, scope: !8706)
!8723 = !DILocation(line: 2184, column: 6, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 2184, column: 6)
!8725 = !DILocation(line: 2184, column: 11, scope: !8724)
!8726 = !DILocation(line: 2184, column: 6, scope: !8706)
!8727 = !DILocation(line: 2185, column: 11, scope: !8724)
!8728 = !DILocation(line: 2185, column: 16, scope: !8724)
!8729 = !DILocation(line: 2185, column: 3, scope: !8724)
!8730 = !DILocation(line: 2185, column: 46, scope: !8724)
!8731 = !DILocation(line: 2185, column: 44, scope: !8724)
!8732 = !DILocation(line: 2186, column: 1, scope: !8706)
!8733 = distinct !DISubprogram(name: "__fswab32", scope: !8734, file: !8734, line: 57, type: !8735, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8734 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!8735 = !DISubroutineType(types: !8736)
!8736 = !{!184, !184}
!8737 = !DILocalVariable(name: "val", arg: 1, scope: !8733, file: !8734, line: 57, type: !184)
!8738 = !DILocation(line: 57, column: 57, scope: !8733)
!8739 = !DILocation(line: 60, column: 23, scope: !8733)
!8740 = !DILocation(line: 60, column: 9, scope: !8733)
!8741 = !DILocation(line: 60, column: 2, scope: !8733)
!8742 = distinct !DISubprogram(name: "ar_context_run", scope: !3, file: !3, line: 1022, type: !6677, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8743 = !DILocalVariable(name: "ctx", arg: 1, scope: !8742, file: !3, line: 1022, type: !4136)
!8744 = !DILocation(line: 1022, column: 47, scope: !8742)
!8745 = !DILocalVariable(name: "i", scope: !8742, file: !3, line: 1024, type: !7)
!8746 = !DILocation(line: 1024, column: 15, scope: !8742)
!8747 = !DILocation(line: 1026, column: 9, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 1026, column: 2)
!8749 = !DILocation(line: 1026, column: 7, scope: !8748)
!8750 = !DILocation(line: 1026, column: 14, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 1026, column: 2)
!8752 = !DILocation(line: 1026, column: 16, scope: !8751)
!8753 = !DILocation(line: 1026, column: 2, scope: !8748)
!8754 = !DILocation(line: 1027, column: 24, scope: !8751)
!8755 = !DILocation(line: 1027, column: 29, scope: !8751)
!8756 = !DILocation(line: 1027, column: 3, scope: !8751)
!8757 = !DILocation(line: 1026, column: 31, scope: !8751)
!8758 = !DILocation(line: 1026, column: 2, scope: !8751)
!8759 = distinct !{!8759, !8753, !8760}
!8760 = !DILocation(line: 1027, column: 30, scope: !8748)
!8761 = !DILocation(line: 1029, column: 17, scope: !8742)
!8762 = !DILocation(line: 1029, column: 22, scope: !8742)
!8763 = !DILocation(line: 1029, column: 2, scope: !8742)
!8764 = !DILocation(line: 1029, column: 7, scope: !8742)
!8765 = !DILocation(line: 1029, column: 15, scope: !8742)
!8766 = !DILocation(line: 1031, column: 12, scope: !8742)
!8767 = !DILocation(line: 1031, column: 17, scope: !8742)
!8768 = !DILocation(line: 1031, column: 23, scope: !8742)
!8769 = !DILocation(line: 1031, column: 47, scope: !8742)
!8770 = !DILocation(line: 1031, column: 52, scope: !8742)
!8771 = !DILocation(line: 1031, column: 68, scope: !8742)
!8772 = !DILocation(line: 1031, column: 2, scope: !8742)
!8773 = !DILocation(line: 1032, column: 12, scope: !8742)
!8774 = !DILocation(line: 1032, column: 17, scope: !8742)
!8775 = !DILocation(line: 1032, column: 23, scope: !8742)
!8776 = !DILocation(line: 1032, column: 2, scope: !8742)
!8777 = !DILocation(line: 1033, column: 1, scope: !8742)
!8778 = distinct !DISubprogram(name: "read_phy_reg", scope: !3, file: !3, line: 549, type: !8779, scopeLine: 550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8779 = !DISubroutineType(types: !8780)
!8780 = !{!177, !187, !177}
!8781 = !DILocalVariable(name: "ohci", arg: 1, scope: !8778, file: !3, line: 549, type: !187)
!8782 = !DILocation(line: 549, column: 41, scope: !8778)
!8783 = !DILocalVariable(name: "addr", arg: 2, scope: !8778, file: !3, line: 549, type: !177)
!8784 = !DILocation(line: 549, column: 51, scope: !8778)
!8785 = !DILocalVariable(name: "val", scope: !8778, file: !3, line: 551, type: !231)
!8786 = !DILocation(line: 551, column: 6, scope: !8778)
!8787 = !DILocalVariable(name: "i", scope: !8778, file: !3, line: 552, type: !177)
!8788 = !DILocation(line: 552, column: 6, scope: !8778)
!8789 = !DILocation(line: 554, column: 12, scope: !8778)
!8790 = !DILocation(line: 554, column: 39, scope: !8778)
!8791 = !DILocation(line: 554, column: 2, scope: !8778)
!8792 = !DILocation(line: 555, column: 9, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 555, column: 2)
!8794 = !DILocation(line: 555, column: 7, scope: !8793)
!8795 = !DILocation(line: 555, column: 14, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8793, file: !3, line: 555, column: 2)
!8797 = !DILocation(line: 555, column: 16, scope: !8796)
!8798 = !DILocation(line: 555, column: 2, scope: !8793)
!8799 = !DILocation(line: 556, column: 18, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 555, column: 32)
!8801 = !DILocation(line: 556, column: 9, scope: !8800)
!8802 = !DILocation(line: 556, column: 7, scope: !8800)
!8803 = !DILocation(line: 557, column: 9, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 557, column: 7)
!8805 = !DILocation(line: 557, column: 8, scope: !8804)
!8806 = !DILocation(line: 557, column: 7, scope: !8800)
!8807 = !DILocation(line: 558, column: 4, scope: !8804)
!8808 = !DILocation(line: 560, column: 7, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 560, column: 7)
!8810 = !DILocation(line: 560, column: 11, scope: !8809)
!8811 = !DILocation(line: 560, column: 7, scope: !8800)
!8812 = !DILocation(line: 561, column: 11, scope: !8809)
!8813 = !DILocation(line: 561, column: 4, scope: !8809)
!8814 = !DILocation(line: 567, column: 7, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 567, column: 7)
!8816 = !DILocation(line: 567, column: 9, scope: !8815)
!8817 = !DILocation(line: 567, column: 7, scope: !8800)
!8818 = !DILocation(line: 568, column: 4, scope: !8815)
!8819 = !DILocation(line: 569, column: 2, scope: !8800)
!8820 = !DILocation(line: 555, column: 28, scope: !8796)
!8821 = !DILocation(line: 555, column: 2, scope: !8796)
!8822 = distinct !{!8822, !8798, !8823}
!8823 = !DILocation(line: 569, column: 2, scope: !8793)
!8824 = !DILocation(line: 570, column: 2, scope: !8778)
!8825 = !DILocation(line: 571, column: 2, scope: !8778)
!8826 = !DILocation(line: 573, column: 2, scope: !8778)
!8827 = !DILocation(line: 574, column: 1, scope: !8778)
!8828 = distinct !DISubprogram(name: "read_paged_phy_reg", scope: !3, file: !3, line: 616, type: !8829, scopeLine: 617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!177, !187, !177, !177}
!8831 = !DILocalVariable(name: "ohci", arg: 1, scope: !8828, file: !3, line: 616, type: !187)
!8832 = !DILocation(line: 616, column: 47, scope: !8828)
!8833 = !DILocalVariable(name: "page", arg: 2, scope: !8828, file: !3, line: 616, type: !177)
!8834 = !DILocation(line: 616, column: 57, scope: !8828)
!8835 = !DILocalVariable(name: "addr", arg: 3, scope: !8828, file: !3, line: 616, type: !177)
!8836 = !DILocation(line: 616, column: 67, scope: !8828)
!8837 = !DILocalVariable(name: "ret", scope: !8828, file: !3, line: 618, type: !177)
!8838 = !DILocation(line: 618, column: 6, scope: !8828)
!8839 = !DILocation(line: 620, column: 23, scope: !8828)
!8840 = !DILocation(line: 620, column: 49, scope: !8828)
!8841 = !DILocation(line: 620, column: 54, scope: !8828)
!8842 = !DILocation(line: 620, column: 8, scope: !8828)
!8843 = !DILocation(line: 620, column: 6, scope: !8828)
!8844 = !DILocation(line: 621, column: 6, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 621, column: 6)
!8846 = !DILocation(line: 621, column: 10, scope: !8845)
!8847 = !DILocation(line: 621, column: 6, scope: !8828)
!8848 = !DILocation(line: 622, column: 10, scope: !8845)
!8849 = !DILocation(line: 622, column: 3, scope: !8845)
!8850 = !DILocation(line: 624, column: 22, scope: !8828)
!8851 = !DILocation(line: 624, column: 28, scope: !8828)
!8852 = !DILocation(line: 624, column: 9, scope: !8828)
!8853 = !DILocation(line: 624, column: 2, scope: !8828)
!8854 = !DILocation(line: 625, column: 1, scope: !8828)
!8855 = distinct !DISubprogram(name: "update_phy_reg", scope: !3, file: !3, line: 599, type: !8856, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8856 = !DISubroutineType(types: !8857)
!8857 = !{!177, !187, !177, !177, !177}
!8858 = !DILocalVariable(name: "ohci", arg: 1, scope: !8855, file: !3, line: 599, type: !187)
!8859 = !DILocation(line: 599, column: 43, scope: !8855)
!8860 = !DILocalVariable(name: "addr", arg: 2, scope: !8855, file: !3, line: 599, type: !177)
!8861 = !DILocation(line: 599, column: 53, scope: !8855)
!8862 = !DILocalVariable(name: "clear_bits", arg: 3, scope: !8855, file: !3, line: 600, type: !177)
!8863 = !DILocation(line: 600, column: 10, scope: !8855)
!8864 = !DILocalVariable(name: "set_bits", arg: 4, scope: !8855, file: !3, line: 600, type: !177)
!8865 = !DILocation(line: 600, column: 26, scope: !8855)
!8866 = !DILocalVariable(name: "ret", scope: !8855, file: !3, line: 602, type: !177)
!8867 = !DILocation(line: 602, column: 6, scope: !8855)
!8868 = !DILocation(line: 602, column: 25, scope: !8855)
!8869 = !DILocation(line: 602, column: 31, scope: !8855)
!8870 = !DILocation(line: 602, column: 12, scope: !8855)
!8871 = !DILocation(line: 603, column: 6, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8855, file: !3, line: 603, column: 6)
!8873 = !DILocation(line: 603, column: 10, scope: !8872)
!8874 = !DILocation(line: 603, column: 6, scope: !8855)
!8875 = !DILocation(line: 604, column: 10, scope: !8872)
!8876 = !DILocation(line: 604, column: 3, scope: !8872)
!8877 = !DILocation(line: 610, column: 6, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8855, file: !3, line: 610, column: 6)
!8879 = !DILocation(line: 610, column: 11, scope: !8878)
!8880 = !DILocation(line: 610, column: 6, scope: !8855)
!8881 = !DILocation(line: 611, column: 14, scope: !8878)
!8882 = !DILocation(line: 611, column: 3, scope: !8878)
!8883 = !DILocation(line: 613, column: 23, scope: !8855)
!8884 = !DILocation(line: 613, column: 29, scope: !8855)
!8885 = !DILocation(line: 613, column: 36, scope: !8855)
!8886 = !DILocation(line: 613, column: 43, scope: !8855)
!8887 = !DILocation(line: 613, column: 42, scope: !8855)
!8888 = !DILocation(line: 613, column: 40, scope: !8855)
!8889 = !DILocation(line: 613, column: 57, scope: !8855)
!8890 = !DILocation(line: 613, column: 55, scope: !8855)
!8891 = !DILocation(line: 613, column: 9, scope: !8855)
!8892 = !DILocation(line: 613, column: 2, scope: !8855)
!8893 = !DILocation(line: 614, column: 1, scope: !8855)
!8894 = distinct !DISubprogram(name: "write_phy_reg", scope: !3, file: !3, line: 576, type: !8895, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8895 = !DISubroutineType(types: !8896)
!8896 = !{!177, !6335, !177, !231}
!8897 = !DILocalVariable(name: "ohci", arg: 1, scope: !8894, file: !3, line: 576, type: !6335)
!8898 = !DILocation(line: 576, column: 48, scope: !8894)
!8899 = !DILocalVariable(name: "addr", arg: 2, scope: !8894, file: !3, line: 576, type: !177)
!8900 = !DILocation(line: 576, column: 58, scope: !8894)
!8901 = !DILocalVariable(name: "val", arg: 3, scope: !8894, file: !3, line: 576, type: !231)
!8902 = !DILocation(line: 576, column: 68, scope: !8894)
!8903 = !DILocalVariable(name: "i", scope: !8894, file: !3, line: 578, type: !177)
!8904 = !DILocation(line: 578, column: 6, scope: !8894)
!8905 = !DILocation(line: 580, column: 12, scope: !8894)
!8906 = !DILocation(line: 581, column: 5, scope: !8894)
!8907 = !DILocation(line: 580, column: 2, scope: !8894)
!8908 = !DILocation(line: 582, column: 9, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 582, column: 2)
!8910 = !DILocation(line: 582, column: 7, scope: !8909)
!8911 = !DILocation(line: 582, column: 14, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 582, column: 2)
!8913 = !DILocation(line: 582, column: 16, scope: !8912)
!8914 = !DILocation(line: 582, column: 2, scope: !8909)
!8915 = !DILocation(line: 583, column: 18, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 582, column: 32)
!8917 = !DILocation(line: 583, column: 9, scope: !8916)
!8918 = !DILocation(line: 583, column: 7, scope: !8916)
!8919 = !DILocation(line: 584, column: 9, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 584, column: 7)
!8921 = !DILocation(line: 584, column: 8, scope: !8920)
!8922 = !DILocation(line: 584, column: 7, scope: !8916)
!8923 = !DILocation(line: 585, column: 4, scope: !8920)
!8924 = !DILocation(line: 587, column: 9, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 587, column: 7)
!8926 = !DILocation(line: 587, column: 13, scope: !8925)
!8927 = !DILocation(line: 587, column: 7, scope: !8916)
!8928 = !DILocation(line: 588, column: 4, scope: !8925)
!8929 = !DILocation(line: 590, column: 7, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 590, column: 7)
!8931 = !DILocation(line: 590, column: 9, scope: !8930)
!8932 = !DILocation(line: 590, column: 7, scope: !8916)
!8933 = !DILocation(line: 591, column: 4, scope: !8930)
!8934 = !DILocation(line: 592, column: 2, scope: !8916)
!8935 = !DILocation(line: 582, column: 28, scope: !8912)
!8936 = !DILocation(line: 582, column: 2, scope: !8912)
!8937 = distinct !{!8937, !8914, !8938}
!8938 = !DILocation(line: 592, column: 2, scope: !8909)
!8939 = !DILocation(line: 593, column: 2, scope: !8894)
!8940 = !DILocation(line: 594, column: 2, scope: !8894)
!8941 = !DILocation(line: 596, column: 2, scope: !8894)
!8942 = !DILocation(line: 597, column: 1, scope: !8894)
!8943 = distinct !DISubprogram(name: "__arch_swab32", scope: !8944, file: !8944, line: 8, type: !8735, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8944 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!8945 = !DILocalVariable(name: "val", arg: 1, scope: !8943, file: !8944, line: 8, type: !184)
!8946 = !DILocation(line: 8, column: 61, scope: !8943)
!8947 = !DILocation(line: 10, column: 38, scope: !8943)
!8948 = !DILocation(line: 10, column: 2, scope: !8943)
!8949 = !{i32 413927}
!8950 = !DILocation(line: 11, column: 9, scope: !8943)
!8951 = !DILocation(line: 11, column: 2, scope: !8943)
!8952 = distinct !DISubprogram(name: "ar_context_link_page", scope: !3, file: !3, line: 657, type: !8953, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8953 = !DISubroutineType(types: !8954)
!8954 = !{null, !4136, !7}
!8955 = !DILocalVariable(name: "ctx", arg: 1, scope: !8952, file: !3, line: 657, type: !4136)
!8956 = !DILocation(line: 657, column: 53, scope: !8952)
!8957 = !DILocalVariable(name: "index", arg: 2, scope: !8952, file: !3, line: 657, type: !7)
!8958 = !DILocation(line: 657, column: 71, scope: !8952)
!8959 = !DILocalVariable(name: "d", scope: !8952, file: !3, line: 659, type: !4019)
!8960 = !DILocation(line: 659, column: 21, scope: !8952)
!8961 = !DILocation(line: 661, column: 7, scope: !8952)
!8962 = !DILocation(line: 661, column: 12, scope: !8952)
!8963 = !DILocation(line: 661, column: 24, scope: !8952)
!8964 = !DILocation(line: 661, column: 4, scope: !8952)
!8965 = !DILocation(line: 662, column: 2, scope: !8952)
!8966 = !DILocation(line: 662, column: 5, scope: !8952)
!8967 = !DILocation(line: 662, column: 21, scope: !8952)
!8968 = !DILocation(line: 663, column: 2, scope: !8952)
!8969 = !DILocation(line: 663, column: 5, scope: !8952)
!8970 = !DILocation(line: 663, column: 21, scope: !8952)
!8971 = !DILocation(line: 664, column: 2, scope: !8952)
!8972 = !DILocation(line: 664, column: 5, scope: !8952)
!8973 = !DILocation(line: 664, column: 21, scope: !8952)
!8974 = !DILocation(line: 666, column: 2, scope: !8952)
!8975 = !{i32 -2141580308}
!8976 = !DILocation(line: 667, column: 7, scope: !8952)
!8977 = !DILocation(line: 667, column: 12, scope: !8952)
!8978 = !DILocation(line: 667, column: 24, scope: !8952)
!8979 = !DILocation(line: 667, column: 29, scope: !8952)
!8980 = !DILocation(line: 667, column: 4, scope: !8952)
!8981 = !DILocation(line: 668, column: 2, scope: !8952)
!8982 = !DILocation(line: 668, column: 5, scope: !8952)
!8983 = !DILocation(line: 668, column: 21, scope: !8952)
!8984 = !DILocation(line: 670, column: 27, scope: !8952)
!8985 = !DILocation(line: 670, column: 2, scope: !8952)
!8986 = !DILocation(line: 670, column: 7, scope: !8952)
!8987 = !DILocation(line: 670, column: 25, scope: !8952)
!8988 = !DILocation(line: 672, column: 12, scope: !8952)
!8989 = !DILocation(line: 672, column: 17, scope: !8952)
!8990 = !DILocation(line: 672, column: 23, scope: !8952)
!8991 = !DILocation(line: 672, column: 2, scope: !8952)
!8992 = !DILocation(line: 673, column: 1, scope: !8952)
!8993 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !8994, file: !8994, line: 656, type: !2226, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!8994 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!8995 = !DILocalVariable(name: "__edi", scope: !8996, file: !8994, line: 658, type: !176)
!8996 = distinct !DILexicalBlock(scope: !8993, file: !8994, line: 658, column: 2)
!8997 = !DILocation(line: 658, column: 2, scope: !8996)
!8998 = !DILocalVariable(name: "__esi", scope: !8996, file: !8994, line: 658, type: !176)
!8999 = !DILocalVariable(name: "__edx", scope: !8996, file: !8994, line: 658, type: !176)
!9000 = !DILocalVariable(name: "__ecx", scope: !8996, file: !8994, line: 658, type: !176)
!9001 = !DILocalVariable(name: "__eax", scope: !8996, file: !8994, line: 658, type: !176)
!9002 = !{i32 -2145655575, i32 -2145654843, i32 -2145654609, i32 -2145654558, i32 -2145654530, i32 -2145654505, i32 -2145654821, i32 -2145654808, i32 -2145654370, i32 -2145654251, i32 -2145654716, i32 -2145654689, i32 -2145654661, i32 -2145654631}
!9003 = !DILocation(line: 659, column: 1, scope: !8993)
!9004 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !8994, file: !8994, line: 661, type: !2226, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9005 = !DILocalVariable(name: "__edi", scope: !9006, file: !8994, line: 663, type: !176)
!9006 = distinct !DILexicalBlock(scope: !9004, file: !8994, line: 663, column: 2)
!9007 = !DILocation(line: 663, column: 2, scope: !9006)
!9008 = !DILocalVariable(name: "__esi", scope: !9006, file: !8994, line: 663, type: !176)
!9009 = !DILocalVariable(name: "__edx", scope: !9006, file: !8994, line: 663, type: !176)
!9010 = !DILocalVariable(name: "__ecx", scope: !9006, file: !8994, line: 663, type: !176)
!9011 = !DILocalVariable(name: "__eax", scope: !9006, file: !8994, line: 663, type: !176)
!9012 = !{i32 -2145652991, i32 -2145652261, i32 -2145652027, i32 -2145651976, i32 -2145651948, i32 -2145651923, i32 -2145652239, i32 -2145652226, i32 -2145651788, i32 -2145651669, i32 -2145652134, i32 -2145652107, i32 -2145652079, i32 -2145652049}
!9013 = !DILocation(line: 664, column: 1, scope: !9004)
!9014 = distinct !DISubprogram(name: "at_context_transmit", scope: !3, file: !3, line: 1626, type: !9015, scopeLine: 1627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9015 = !DISubroutineType(types: !9016)
!9016 = !{null, !4083, !224}
!9017 = !DILocation(line: 407, column: 64, scope: !7301, inlinedAt: !9018)
!9018 = distinct !DILocation(line: 1641, column: 2, scope: !9014)
!9019 = !DILocation(line: 407, column: 84, scope: !7301, inlinedAt: !9018)
!9020 = !DILocation(line: 407, column: 64, scope: !7301, inlinedAt: !9021)
!9021 = distinct !DILocation(line: 1635, column: 3, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 1634, column: 51)
!9023 = distinct !DILexicalBlock(scope: !9014, file: !3, line: 1633, column: 6)
!9024 = !DILocation(line: 407, column: 84, scope: !7301, inlinedAt: !9021)
!9025 = !DILocation(line: 327, column: 67, scope: !4644, inlinedAt: !9026)
!9026 = distinct !DILocation(line: 1631, column: 2, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 1631, column: 2)
!9028 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 1631, column: 2)
!9029 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 1631, column: 2)
!9030 = distinct !DILexicalBlock(scope: !9031, file: !3, line: 1631, column: 2)
!9031 = distinct !DILexicalBlock(scope: !9014, file: !3, line: 1631, column: 2)
!9032 = !DILocalVariable(name: "ctx", arg: 1, scope: !9014, file: !3, line: 1626, type: !4083)
!9033 = !DILocation(line: 1626, column: 49, scope: !9014)
!9034 = !DILocalVariable(name: "packet", arg: 2, scope: !9014, file: !3, line: 1626, type: !224)
!9035 = !DILocation(line: 1626, column: 72, scope: !9014)
!9036 = !DILocalVariable(name: "flags", scope: !9014, file: !3, line: 1628, type: !176)
!9037 = !DILocation(line: 1628, column: 16, scope: !9014)
!9038 = !DILocalVariable(name: "ret", scope: !9014, file: !3, line: 1629, type: !177)
!9039 = !DILocation(line: 1629, column: 6, scope: !9014)
!9040 = !DILocation(line: 1631, column: 2, scope: !9014)
!9041 = !DILocation(line: 1631, column: 2, scope: !9031)
!9042 = !DILocalVariable(name: "__dummy", scope: !9043, file: !3, line: 1631, type: !176)
!9043 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 1631, column: 2)
!9044 = !DILocation(line: 1631, column: 2, scope: !9043)
!9045 = !DILocalVariable(name: "__dummy2", scope: !9043, file: !3, line: 1631, type: !176)
!9046 = !DILocation(line: 1631, column: 2, scope: !9030)
!9047 = !DILocation(line: 1631, column: 2, scope: !9029)
!9048 = !DILocation(line: 1631, column: 2, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 1631, column: 2)
!9050 = !DILocalVariable(name: "__dummy", scope: !9051, file: !3, line: 1631, type: !176)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 1631, column: 2)
!9052 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 1631, column: 2)
!9053 = !DILocation(line: 1631, column: 2, scope: !9051)
!9054 = !DILocalVariable(name: "__dummy2", scope: !9051, file: !3, line: 1631, type: !176)
!9055 = !DILocation(line: 1631, column: 2, scope: !9052)
!9056 = !DILocation(line: 1631, column: 2, scope: !9028)
!9057 = !{i32 -2141541850}
!9058 = !DILocation(line: 1631, column: 2, scope: !9027)
!9059 = !DILocation(line: 329, column: 10, scope: !4644, inlinedAt: !9026)
!9060 = !DILocation(line: 329, column: 16, scope: !4644, inlinedAt: !9026)
!9061 = !DILocation(line: 1633, column: 6, scope: !9023)
!9062 = !DILocation(line: 1633, column: 51, scope: !9023)
!9063 = !DILocation(line: 1633, column: 56, scope: !9023)
!9064 = !DILocation(line: 1633, column: 62, scope: !9023)
!9065 = !DILocation(line: 1633, column: 48, scope: !9023)
!9066 = !DILocation(line: 1633, column: 70, scope: !9023)
!9067 = !DILocation(line: 1634, column: 6, scope: !9023)
!9068 = !DILocation(line: 1634, column: 11, scope: !9023)
!9069 = !DILocation(line: 1634, column: 17, scope: !9023)
!9070 = !DILocation(line: 1634, column: 31, scope: !9023)
!9071 = !DILocation(line: 1634, column: 39, scope: !9023)
!9072 = !DILocation(line: 1634, column: 28, scope: !9023)
!9073 = !DILocation(line: 1633, column: 6, scope: !9014)
!9074 = !DILocation(line: 1635, column: 27, scope: !9022)
!9075 = !DILocation(line: 1635, column: 32, scope: !9022)
!9076 = !DILocation(line: 1635, column: 38, scope: !9022)
!9077 = !DILocation(line: 1635, column: 44, scope: !9022)
!9078 = !DILocation(line: 409, column: 2, scope: !7393, inlinedAt: !9021)
!9079 = !DILocation(line: 409, column: 2, scope: !7398, inlinedAt: !9021)
!9080 = !DILocation(line: 409, column: 2, scope: !7399, inlinedAt: !9021)
!9081 = !DILocation(line: 409, column: 2, scope: !7406, inlinedAt: !9021)
!9082 = !DILocation(line: 409, column: 2, scope: !7409, inlinedAt: !9021)
!9083 = !DILocation(line: 1636, column: 24, scope: !9022)
!9084 = !DILocation(line: 1636, column: 29, scope: !9022)
!9085 = !DILocation(line: 1636, column: 3, scope: !9022)
!9086 = !DILocation(line: 1637, column: 3, scope: !9022)
!9087 = !DILocation(line: 1640, column: 32, scope: !9014)
!9088 = !DILocation(line: 1640, column: 37, scope: !9014)
!9089 = !DILocation(line: 1640, column: 8, scope: !9014)
!9090 = !DILocation(line: 1640, column: 6, scope: !9014)
!9091 = !DILocation(line: 1641, column: 26, scope: !9014)
!9092 = !DILocation(line: 1641, column: 31, scope: !9014)
!9093 = !DILocation(line: 1641, column: 37, scope: !9014)
!9094 = !DILocation(line: 1641, column: 43, scope: !9014)
!9095 = !DILocation(line: 409, column: 2, scope: !7393, inlinedAt: !9018)
!9096 = !DILocation(line: 409, column: 2, scope: !7398, inlinedAt: !9018)
!9097 = !DILocation(line: 409, column: 2, scope: !7399, inlinedAt: !9018)
!9098 = !DILocation(line: 409, column: 2, scope: !7406, inlinedAt: !9018)
!9099 = !DILocation(line: 409, column: 2, scope: !7409, inlinedAt: !9018)
!9100 = !DILocation(line: 1643, column: 6, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9014, file: !3, line: 1643, column: 6)
!9102 = !DILocation(line: 1643, column: 10, scope: !9101)
!9103 = !DILocation(line: 1643, column: 6, scope: !9014)
!9104 = !DILocation(line: 1644, column: 3, scope: !9101)
!9105 = !DILocation(line: 1644, column: 11, scope: !9101)
!9106 = !DILocation(line: 1644, column: 20, scope: !9101)
!9107 = !DILocation(line: 1644, column: 29, scope: !9101)
!9108 = !DILocation(line: 1644, column: 34, scope: !9101)
!9109 = !DILocation(line: 1644, column: 40, scope: !9101)
!9110 = !DILocation(line: 1644, column: 46, scope: !9101)
!9111 = !DILocation(line: 1644, column: 54, scope: !9101)
!9112 = !DILocation(line: 1646, column: 1, scope: !9014)
!9113 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !8994, file: !8994, line: 666, type: !9114, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9114 = !DISubroutineType(types: !9115)
!9115 = !{!176}
!9116 = !DILocalVariable(name: "f", scope: !9113, file: !8994, line: 668, type: !176)
!9117 = !DILocation(line: 668, column: 16, scope: !9113)
!9118 = !DILocation(line: 670, column: 6, scope: !9113)
!9119 = !DILocation(line: 670, column: 4, scope: !9113)
!9120 = !DILocation(line: 671, column: 2, scope: !9113)
!9121 = !DILocation(line: 672, column: 9, scope: !9113)
!9122 = !DILocation(line: 672, column: 2, scope: !9113)
!9123 = distinct !DISubprogram(name: "handle_local_request", scope: !3, file: !3, line: 1587, type: !9015, scopeLine: 1588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9124 = !DILocalVariable(name: "ctx", arg: 1, scope: !9123, file: !3, line: 1587, type: !4083)
!9125 = !DILocation(line: 1587, column: 50, scope: !9123)
!9126 = !DILocalVariable(name: "packet", arg: 2, scope: !9123, file: !3, line: 1587, type: !224)
!9127 = !DILocation(line: 1587, column: 73, scope: !9123)
!9128 = !DILocalVariable(name: "offset", scope: !9123, file: !3, line: 1589, type: !179)
!9129 = !DILocation(line: 1589, column: 6, scope: !9123)
!9130 = !DILocalVariable(name: "csr", scope: !9123, file: !3, line: 1589, type: !179)
!9131 = !DILocation(line: 1589, column: 14, scope: !9123)
!9132 = !DILocation(line: 1591, column: 6, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 1591, column: 6)
!9134 = !DILocation(line: 1591, column: 14, scope: !9133)
!9135 = !DILocation(line: 1591, column: 19, scope: !9133)
!9136 = !DILocation(line: 1591, column: 25, scope: !9133)
!9137 = !DILocation(line: 1591, column: 10, scope: !9133)
!9138 = !DILocation(line: 1591, column: 6, scope: !9123)
!9139 = !DILocation(line: 1592, column: 3, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 1591, column: 41)
!9141 = !DILocation(line: 1592, column: 11, scope: !9140)
!9142 = !DILocation(line: 1592, column: 15, scope: !9140)
!9143 = !DILocation(line: 1593, column: 3, scope: !9140)
!9144 = !DILocation(line: 1593, column: 11, scope: !9140)
!9145 = !DILocation(line: 1593, column: 20, scope: !9140)
!9146 = !DILocation(line: 1593, column: 29, scope: !9140)
!9147 = !DILocation(line: 1593, column: 34, scope: !9140)
!9148 = !DILocation(line: 1593, column: 40, scope: !9140)
!9149 = !DILocation(line: 1593, column: 46, scope: !9140)
!9150 = !DILocation(line: 1593, column: 54, scope: !9140)
!9151 = !DILocation(line: 1594, column: 2, scope: !9140)
!9152 = !DILocation(line: 1598, column: 4, scope: !9123)
!9153 = !DILocation(line: 1597, column: 4, scope: !9123)
!9154 = !DILocation(line: 1598, column: 46, scope: !9123)
!9155 = !DILocation(line: 1599, column: 3, scope: !9123)
!9156 = !DILocation(line: 1599, column: 11, scope: !9123)
!9157 = !DILocation(line: 1598, column: 53, scope: !9123)
!9158 = !DILocation(line: 1596, column: 9, scope: !9123)
!9159 = !DILocation(line: 1600, column: 8, scope: !9123)
!9160 = !DILocation(line: 1600, column: 15, scope: !9123)
!9161 = !DILocation(line: 1600, column: 6, scope: !9123)
!9162 = !DILocation(line: 1603, column: 6, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 1603, column: 6)
!9164 = !DILocation(line: 1603, column: 10, scope: !9163)
!9165 = !DILocation(line: 1603, column: 28, scope: !9163)
!9166 = !DILocation(line: 1603, column: 31, scope: !9163)
!9167 = !DILocation(line: 1603, column: 35, scope: !9163)
!9168 = !DILocation(line: 1603, column: 6, scope: !9123)
!9169 = !DILocation(line: 1604, column: 20, scope: !9163)
!9170 = !DILocation(line: 1604, column: 25, scope: !9163)
!9171 = !DILocation(line: 1604, column: 31, scope: !9163)
!9172 = !DILocation(line: 1604, column: 39, scope: !9163)
!9173 = !DILocation(line: 1604, column: 3, scope: !9163)
!9174 = !DILocation(line: 1605, column: 15, scope: !9163)
!9175 = !DILocation(line: 1605, column: 7, scope: !9163)
!9176 = !DILocation(line: 1610, column: 21, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 1605, column: 20)
!9178 = !DILocation(line: 1610, column: 26, scope: !9177)
!9179 = !DILocation(line: 1610, column: 32, scope: !9177)
!9180 = !DILocation(line: 1610, column: 40, scope: !9177)
!9181 = !DILocation(line: 1610, column: 3, scope: !9177)
!9182 = !DILocation(line: 1611, column: 3, scope: !9177)
!9183 = !DILocation(line: 1613, column: 7, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 1613, column: 7)
!9185 = !DILocation(line: 1613, column: 15, scope: !9184)
!9186 = !DILocation(line: 1613, column: 20, scope: !9184)
!9187 = !DILocation(line: 1613, column: 26, scope: !9184)
!9188 = !DILocation(line: 1613, column: 11, scope: !9184)
!9189 = !DILocation(line: 1613, column: 7, scope: !9177)
!9190 = !DILocation(line: 1614, column: 28, scope: !9184)
!9191 = !DILocation(line: 1614, column: 33, scope: !9184)
!9192 = !DILocation(line: 1614, column: 39, scope: !9184)
!9193 = !DILocation(line: 1614, column: 45, scope: !9184)
!9194 = !DILocation(line: 1614, column: 4, scope: !9184)
!9195 = !DILocation(line: 1616, column: 29, scope: !9184)
!9196 = !DILocation(line: 1616, column: 34, scope: !9184)
!9197 = !DILocation(line: 1616, column: 40, scope: !9184)
!9198 = !DILocation(line: 1616, column: 46, scope: !9184)
!9199 = !DILocation(line: 1616, column: 4, scope: !9184)
!9200 = !DILocation(line: 1617, column: 3, scope: !9177)
!9201 = !DILocation(line: 1620, column: 6, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 1620, column: 6)
!9203 = !DILocation(line: 1620, column: 14, scope: !9202)
!9204 = !DILocation(line: 1620, column: 19, scope: !9202)
!9205 = !DILocation(line: 1620, column: 25, scope: !9202)
!9206 = !DILocation(line: 1620, column: 10, scope: !9202)
!9207 = !DILocation(line: 1620, column: 6, scope: !9123)
!9208 = !DILocation(line: 1621, column: 3, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9202, file: !3, line: 1620, column: 42)
!9210 = !DILocation(line: 1621, column: 11, scope: !9209)
!9211 = !DILocation(line: 1621, column: 15, scope: !9209)
!9212 = !DILocation(line: 1622, column: 3, scope: !9209)
!9213 = !DILocation(line: 1622, column: 11, scope: !9209)
!9214 = !DILocation(line: 1622, column: 20, scope: !9209)
!9215 = !DILocation(line: 1622, column: 29, scope: !9209)
!9216 = !DILocation(line: 1622, column: 34, scope: !9209)
!9217 = !DILocation(line: 1622, column: 40, scope: !9209)
!9218 = !DILocation(line: 1622, column: 46, scope: !9209)
!9219 = !DILocation(line: 1622, column: 54, scope: !9209)
!9220 = !DILocation(line: 1623, column: 2, scope: !9209)
!9221 = !DILocation(line: 1624, column: 1, scope: !9123)
!9222 = distinct !DISubprogram(name: "at_context_queue_packet", scope: !3, file: !3, line: 1284, type: !9223, scopeLine: 1286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9223 = !DISubroutineType(types: !9224)
!9224 = !{!177, !4083, !224}
!9225 = !DILocalVariable(name: "ctx", arg: 1, scope: !9222, file: !3, line: 1284, type: !4083)
!9226 = !DILocation(line: 1284, column: 52, scope: !9222)
!9227 = !DILocalVariable(name: "packet", arg: 2, scope: !9222, file: !3, line: 1285, type: !224)
!9228 = !DILocation(line: 1285, column: 26, scope: !9222)
!9229 = !DILocalVariable(name: "ohci", scope: !9222, file: !3, line: 1287, type: !187)
!9230 = !DILocation(line: 1287, column: 18, scope: !9222)
!9231 = !DILocation(line: 1287, column: 25, scope: !9222)
!9232 = !DILocation(line: 1287, column: 30, scope: !9222)
!9233 = !DILocalVariable(name: "d_bus", scope: !9222, file: !3, line: 1288, type: !238)
!9234 = !DILocation(line: 1288, column: 13, scope: !9222)
!9235 = !DILocalVariable(name: "payload_bus", scope: !9222, file: !3, line: 1288, type: !238)
!9236 = !DILocation(line: 1288, column: 20, scope: !9222)
!9237 = !DILocalVariable(name: "driver_data", scope: !9222, file: !3, line: 1289, type: !4122)
!9238 = !DILocation(line: 1289, column: 22, scope: !9222)
!9239 = !DILocalVariable(name: "d", scope: !9222, file: !3, line: 1290, type: !4019)
!9240 = !DILocation(line: 1290, column: 21, scope: !9222)
!9241 = !DILocalVariable(name: "last", scope: !9222, file: !3, line: 1290, type: !4019)
!9242 = !DILocation(line: 1290, column: 25, scope: !9222)
!9243 = !DILocalVariable(name: "header", scope: !9222, file: !3, line: 1291, type: !4115)
!9244 = !DILocation(line: 1291, column: 10, scope: !9222)
!9245 = !DILocalVariable(name: "z", scope: !9222, file: !3, line: 1292, type: !177)
!9246 = !DILocation(line: 1292, column: 6, scope: !9222)
!9247 = !DILocalVariable(name: "tcode", scope: !9222, file: !3, line: 1292, type: !177)
!9248 = !DILocation(line: 1292, column: 9, scope: !9222)
!9249 = !DILocation(line: 1294, column: 30, scope: !9222)
!9250 = !DILocation(line: 1294, column: 6, scope: !9222)
!9251 = !DILocation(line: 1294, column: 4, scope: !9222)
!9252 = !DILocation(line: 1295, column: 6, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 1295, column: 6)
!9254 = !DILocation(line: 1295, column: 8, scope: !9253)
!9255 = !DILocation(line: 1295, column: 6, scope: !9222)
!9256 = !DILocation(line: 1296, column: 3, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 1295, column: 17)
!9258 = !DILocation(line: 1296, column: 11, scope: !9257)
!9259 = !DILocation(line: 1296, column: 15, scope: !9257)
!9260 = !DILocation(line: 1297, column: 3, scope: !9257)
!9261 = !DILocation(line: 1300, column: 2, scope: !9222)
!9262 = !DILocation(line: 1300, column: 7, scope: !9222)
!9263 = !DILocation(line: 1300, column: 17, scope: !9222)
!9264 = !DILocation(line: 1301, column: 19, scope: !9222)
!9265 = !DILocation(line: 1301, column: 2, scope: !9222)
!9266 = !DILocation(line: 1301, column: 7, scope: !9222)
!9267 = !DILocation(line: 1301, column: 17, scope: !9222)
!9268 = !DILocation(line: 1309, column: 11, scope: !9222)
!9269 = !DILocation(line: 1309, column: 19, scope: !9222)
!9270 = !DILocation(line: 1309, column: 29, scope: !9222)
!9271 = !DILocation(line: 1309, column: 35, scope: !9222)
!9272 = !DILocation(line: 1309, column: 8, scope: !9222)
!9273 = !DILocation(line: 1310, column: 23, scope: !9222)
!9274 = !DILocation(line: 1310, column: 11, scope: !9222)
!9275 = !DILocation(line: 1310, column: 9, scope: !9222)
!9276 = !DILocation(line: 1311, column: 10, scope: !9222)
!9277 = !DILocation(line: 1311, column: 2, scope: !9222)
!9278 = !DILocation(line: 1321, column: 15, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 1311, column: 17)
!9280 = !DILocation(line: 1321, column: 3, scope: !9279)
!9281 = !DILocation(line: 1321, column: 13, scope: !9279)
!9282 = !DILocation(line: 1323, column: 15, scope: !9279)
!9283 = !DILocation(line: 1323, column: 3, scope: !9279)
!9284 = !DILocation(line: 1323, column: 13, scope: !9279)
!9285 = !DILocation(line: 1325, column: 15, scope: !9279)
!9286 = !DILocation(line: 1325, column: 3, scope: !9279)
!9287 = !DILocation(line: 1325, column: 13, scope: !9279)
!9288 = !DILocation(line: 1327, column: 7, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 1327, column: 7)
!9290 = !DILocation(line: 1327, column: 7, scope: !9279)
!9291 = !DILocation(line: 1328, column: 16, scope: !9289)
!9292 = !DILocation(line: 1328, column: 4, scope: !9289)
!9293 = !DILocation(line: 1328, column: 14, scope: !9289)
!9294 = !DILocation(line: 1330, column: 33, scope: !9289)
!9295 = !DILocation(line: 1330, column: 41, scope: !9289)
!9296 = !DILocation(line: 1330, column: 4, scope: !9289)
!9297 = !DILocation(line: 1330, column: 14, scope: !9289)
!9298 = !DILocation(line: 1332, column: 20, scope: !9279)
!9299 = !DILocation(line: 1332, column: 3, scope: !9279)
!9300 = !DILocation(line: 1332, column: 8, scope: !9279)
!9301 = !DILocation(line: 1332, column: 18, scope: !9279)
!9302 = !DILocation(line: 1333, column: 3, scope: !9279)
!9303 = !DILocation(line: 1336, column: 15, scope: !9279)
!9304 = !DILocation(line: 1336, column: 3, scope: !9279)
!9305 = !DILocation(line: 1336, column: 13, scope: !9279)
!9306 = !DILocation(line: 1338, column: 15, scope: !9279)
!9307 = !DILocation(line: 1338, column: 3, scope: !9279)
!9308 = !DILocation(line: 1338, column: 13, scope: !9279)
!9309 = !DILocation(line: 1339, column: 15, scope: !9279)
!9310 = !DILocation(line: 1339, column: 3, scope: !9279)
!9311 = !DILocation(line: 1339, column: 13, scope: !9279)
!9312 = !DILocation(line: 1340, column: 3, scope: !9279)
!9313 = !DILocation(line: 1340, column: 8, scope: !9279)
!9314 = !DILocation(line: 1340, column: 18, scope: !9279)
!9315 = !DILocation(line: 1342, column: 23, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 1342, column: 7)
!9317 = !DILocation(line: 1342, column: 31, scope: !9316)
!9318 = !DILocation(line: 1342, column: 7, scope: !9316)
!9319 = !DILocation(line: 1342, column: 7, scope: !9279)
!9320 = !DILocation(line: 1343, column: 4, scope: !9316)
!9321 = !DILocation(line: 1343, column: 9, scope: !9316)
!9322 = !DILocation(line: 1343, column: 17, scope: !9316)
!9323 = !DILocation(line: 1344, column: 3, scope: !9279)
!9324 = !DILocation(line: 1347, column: 15, scope: !9279)
!9325 = !DILocation(line: 1347, column: 3, scope: !9279)
!9326 = !DILocation(line: 1347, column: 13, scope: !9279)
!9327 = !DILocation(line: 1349, column: 15, scope: !9279)
!9328 = !DILocation(line: 1349, column: 3, scope: !9279)
!9329 = !DILocation(line: 1349, column: 13, scope: !9279)
!9330 = !DILocation(line: 1350, column: 3, scope: !9279)
!9331 = !DILocation(line: 1350, column: 8, scope: !9279)
!9332 = !DILocation(line: 1350, column: 18, scope: !9279)
!9333 = !DILocation(line: 1351, column: 3, scope: !9279)
!9334 = !DILocation(line: 1355, column: 3, scope: !9279)
!9335 = !DILocation(line: 1355, column: 11, scope: !9279)
!9336 = !DILocation(line: 1355, column: 15, scope: !9279)
!9337 = !DILocation(line: 1356, column: 3, scope: !9279)
!9338 = !DILocation(line: 1359, column: 2, scope: !9222)
!9339 = !DILocation(line: 1359, column: 2, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 1359, column: 2)
!9341 = !DILocation(line: 1360, column: 40, scope: !9222)
!9342 = !DILocation(line: 1360, column: 16, scope: !9222)
!9343 = !DILocation(line: 1360, column: 14, scope: !9222)
!9344 = !DILocation(line: 1361, column: 24, scope: !9222)
!9345 = !DILocation(line: 1361, column: 2, scope: !9222)
!9346 = !DILocation(line: 1361, column: 15, scope: !9222)
!9347 = !DILocation(line: 1361, column: 22, scope: !9222)
!9348 = !DILocation(line: 1362, column: 24, scope: !9222)
!9349 = !DILocation(line: 1362, column: 2, scope: !9222)
!9350 = !DILocation(line: 1362, column: 10, scope: !9222)
!9351 = !DILocation(line: 1362, column: 22, scope: !9222)
!9352 = !DILocation(line: 1364, column: 6, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 1364, column: 6)
!9354 = !DILocation(line: 1364, column: 14, scope: !9353)
!9355 = !DILocation(line: 1364, column: 29, scope: !9353)
!9356 = !DILocation(line: 1364, column: 6, scope: !9222)
!9357 = !DILocation(line: 1365, column: 7, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 1365, column: 7)
!9359 = distinct !DILexicalBlock(scope: !9353, file: !3, line: 1364, column: 34)
!9360 = !DILocation(line: 1365, column: 15, scope: !9358)
!9361 = !DILocation(line: 1365, column: 30, scope: !9358)
!9362 = !DILocation(line: 1365, column: 7, scope: !9359)
!9363 = !DILocation(line: 1366, column: 18, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 1365, column: 66)
!9365 = !DILocation(line: 1366, column: 16, scope: !9364)
!9366 = !DILocation(line: 1370, column: 26, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 1370, column: 8)
!9368 = !DILocation(line: 1370, column: 32, scope: !9367)
!9369 = !DILocation(line: 1370, column: 37, scope: !9367)
!9370 = !DILocation(line: 1370, column: 45, scope: !9367)
!9371 = !DILocation(line: 1370, column: 8, scope: !9367)
!9372 = !DILocation(line: 1370, column: 8, scope: !9364)
!9373 = !DILocation(line: 1371, column: 5, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 1370, column: 59)
!9375 = !DILocation(line: 1371, column: 13, scope: !9374)
!9376 = !DILocation(line: 1371, column: 17, scope: !9374)
!9377 = !DILocation(line: 1372, column: 5, scope: !9374)
!9378 = !DILocation(line: 1374, column: 26, scope: !9364)
!9379 = !DILocation(line: 1374, column: 4, scope: !9364)
!9380 = !DILocation(line: 1374, column: 12, scope: !9364)
!9381 = !DILocation(line: 1374, column: 24, scope: !9364)
!9382 = !DILocation(line: 1375, column: 4, scope: !9364)
!9383 = !DILocation(line: 1375, column: 12, scope: !9364)
!9384 = !DILocation(line: 1375, column: 27, scope: !9364)
!9385 = !DILocation(line: 1376, column: 3, scope: !9364)
!9386 = !DILocation(line: 1377, column: 11, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 1376, column: 10)
!9388 = !DILocation(line: 1377, column: 24, scope: !9387)
!9389 = !DILocation(line: 1377, column: 4, scope: !9387)
!9390 = !DILocation(line: 1377, column: 37, scope: !9387)
!9391 = !DILocation(line: 1377, column: 45, scope: !9387)
!9392 = !DILocation(line: 1378, column: 11, scope: !9387)
!9393 = !DILocation(line: 1378, column: 19, scope: !9387)
!9394 = !DILocation(line: 1379, column: 18, scope: !9387)
!9395 = !DILocation(line: 1379, column: 24, scope: !9387)
!9396 = !DILocation(line: 1379, column: 16, scope: !9387)
!9397 = !DILocation(line: 1382, column: 23, scope: !9359)
!9398 = !DILocation(line: 1382, column: 3, scope: !9359)
!9399 = !DILocation(line: 1382, column: 8, scope: !9359)
!9400 = !DILocation(line: 1382, column: 21, scope: !9359)
!9401 = !DILocation(line: 1383, column: 23, scope: !9359)
!9402 = !DILocation(line: 1383, column: 3, scope: !9359)
!9403 = !DILocation(line: 1383, column: 8, scope: !9359)
!9404 = !DILocation(line: 1383, column: 21, scope: !9359)
!9405 = !DILocation(line: 1384, column: 11, scope: !9359)
!9406 = !DILocation(line: 1384, column: 8, scope: !9359)
!9407 = !DILocation(line: 1385, column: 5, scope: !9359)
!9408 = !DILocation(line: 1386, column: 2, scope: !9359)
!9409 = !DILocation(line: 1387, column: 11, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9353, file: !3, line: 1386, column: 9)
!9411 = !DILocation(line: 1387, column: 8, scope: !9410)
!9412 = !DILocation(line: 1388, column: 5, scope: !9410)
!9413 = !DILocation(line: 1391, column: 2, scope: !9222)
!9414 = !DILocation(line: 1391, column: 8, scope: !9222)
!9415 = !DILocation(line: 1391, column: 16, scope: !9222)
!9416 = !DILocation(line: 1396, column: 6, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 1396, column: 6)
!9418 = !DILocation(line: 1396, column: 12, scope: !9417)
!9419 = !DILocation(line: 1396, column: 26, scope: !9417)
!9420 = !DILocation(line: 1396, column: 34, scope: !9417)
!9421 = !DILocation(line: 1396, column: 23, scope: !9417)
!9422 = !DILocation(line: 1396, column: 6, scope: !9222)
!9423 = !DILocation(line: 1397, column: 7, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9425, file: !3, line: 1397, column: 7)
!9425 = distinct !DILexicalBlock(scope: !9417, file: !3, line: 1396, column: 46)
!9426 = !DILocation(line: 1397, column: 15, scope: !9424)
!9427 = !DILocation(line: 1397, column: 7, scope: !9425)
!9428 = !DILocation(line: 1398, column: 4, scope: !9424)
!9429 = !DILocation(line: 1400, column: 3, scope: !9425)
!9430 = !DILocation(line: 1400, column: 11, scope: !9425)
!9431 = !DILocation(line: 1400, column: 15, scope: !9425)
!9432 = !DILocation(line: 1401, column: 3, scope: !9425)
!9433 = !DILocation(line: 1404, column: 17, scope: !9222)
!9434 = !DILocation(line: 1404, column: 22, scope: !9222)
!9435 = !DILocation(line: 1404, column: 25, scope: !9222)
!9436 = !DILocation(line: 1404, column: 32, scope: !9222)
!9437 = !DILocation(line: 1404, column: 30, scope: !9222)
!9438 = !DILocation(line: 1404, column: 2, scope: !9222)
!9439 = !DILocation(line: 1406, column: 6, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 1406, column: 6)
!9441 = !DILocation(line: 1406, column: 11, scope: !9440)
!9442 = !DILocation(line: 1406, column: 6, scope: !9222)
!9443 = !DILocation(line: 1407, column: 13, scope: !9440)
!9444 = !DILocation(line: 1407, column: 19, scope: !9440)
!9445 = !DILocation(line: 1407, column: 3, scope: !9440)
!9446 = !DILocation(line: 1409, column: 15, scope: !9440)
!9447 = !DILocation(line: 1409, column: 3, scope: !9440)
!9448 = !DILocation(line: 1411, column: 2, scope: !9222)
!9449 = !DILocation(line: 1412, column: 1, scope: !9222)
!9450 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !8994, file: !8994, line: 646, type: !9114, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9451 = !DILocalVariable(name: "__ret", scope: !9452, file: !8994, line: 648, type: !176)
!9452 = distinct !DILexicalBlock(scope: !9450, file: !8994, line: 648, column: 9)
!9453 = !DILocation(line: 648, column: 9, scope: !9452)
!9454 = !DILocalVariable(name: "__edi", scope: !9452, file: !8994, line: 648, type: !176)
!9455 = !DILocalVariable(name: "__esi", scope: !9452, file: !8994, line: 648, type: !176)
!9456 = !DILocalVariable(name: "__edx", scope: !9452, file: !8994, line: 648, type: !176)
!9457 = !DILocalVariable(name: "__ecx", scope: !9452, file: !8994, line: 648, type: !176)
!9458 = !DILocalVariable(name: "__eax", scope: !9452, file: !8994, line: 648, type: !176)
!9459 = !DILocation(line: 648, column: 9, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9461, file: !8994, line: 648, column: 9)
!9461 = distinct !DILexicalBlock(scope: !9452, file: !8994, line: 648, column: 9)
!9462 = !{i32 -2145662669, i32 -2145660354, i32 -2145660120, i32 -2145660069, i32 -2145660041, i32 -2145660016, i32 -2145660332, i32 -2145660319, i32 -2145659881, i32 -2145659762, i32 -2145660227, i32 -2145660200, i32 -2145660172, i32 -2145660142}
!9463 = !DILocalVariable(name: "__mask", scope: !9464, file: !8994, line: 648, type: !176)
!9464 = distinct !DILexicalBlock(scope: !9460, file: !8994, line: 648, column: 9)
!9465 = !DILocation(line: 648, column: 9, scope: !9464)
!9466 = !DILocation(line: 648, column: 9, scope: !9461)
!9467 = !DILocation(line: 648, column: 2, scope: !9450)
!9468 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !8994, file: !8994, line: 651, type: !4047, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9469 = !DILocalVariable(name: "f", arg: 1, scope: !9468, file: !8994, line: 651, type: !176)
!9470 = !DILocation(line: 651, column: 65, scope: !9468)
!9471 = !DILocalVariable(name: "__edi", scope: !9472, file: !8994, line: 653, type: !176)
!9472 = distinct !DILexicalBlock(scope: !9468, file: !8994, line: 653, column: 2)
!9473 = !DILocation(line: 653, column: 2, scope: !9472)
!9474 = !DILocalVariable(name: "__esi", scope: !9472, file: !8994, line: 653, type: !176)
!9475 = !DILocalVariable(name: "__edx", scope: !9472, file: !8994, line: 653, type: !176)
!9476 = !DILocalVariable(name: "__ecx", scope: !9472, file: !8994, line: 653, type: !176)
!9477 = !DILocalVariable(name: "__eax", scope: !9472, file: !8994, line: 653, type: !176)
!9478 = !{i32 -2145658202, i32 -2145657452, i32 -2145657218, i32 -2145657167, i32 -2145657139, i32 -2145657114, i32 -2145657430, i32 -2145657417, i32 -2145656979, i32 -2145656860, i32 -2145657325, i32 -2145657298, i32 -2145657270, i32 -2145657240}
!9479 = !DILocation(line: 654, column: 1, scope: !9468)
!9480 = distinct !DISubprogram(name: "handle_local_rom", scope: !3, file: !3, line: 1512, type: !9481, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9481 = !DISubroutineType(types: !9482)
!9482 = !{null, !187, !224, !231}
!9483 = !DILocalVariable(name: "ohci", arg: 1, scope: !9480, file: !3, line: 1512, type: !187)
!9484 = !DILocation(line: 1512, column: 46, scope: !9480)
!9485 = !DILocalVariable(name: "packet", arg: 2, scope: !9480, file: !3, line: 1513, type: !224)
!9486 = !DILocation(line: 1513, column: 27, scope: !9480)
!9487 = !DILocalVariable(name: "csr", arg: 3, scope: !9480, file: !3, line: 1513, type: !231)
!9488 = !DILocation(line: 1513, column: 39, scope: !9480)
!9489 = !DILocalVariable(name: "response", scope: !9480, file: !3, line: 1515, type: !225)
!9490 = !DILocation(line: 1515, column: 19, scope: !9480)
!9491 = !DILocalVariable(name: "tcode", scope: !9480, file: !3, line: 1516, type: !177)
!9492 = !DILocation(line: 1516, column: 6, scope: !9480)
!9493 = !DILocalVariable(name: "length", scope: !9480, file: !3, line: 1516, type: !177)
!9494 = !DILocation(line: 1516, column: 13, scope: !9480)
!9495 = !DILocalVariable(name: "i", scope: !9480, file: !3, line: 1516, type: !177)
!9496 = !DILocation(line: 1516, column: 21, scope: !9480)
!9497 = !DILocation(line: 1518, column: 10, scope: !9480)
!9498 = !DILocation(line: 1518, column: 8, scope: !9480)
!9499 = !DILocation(line: 1519, column: 6, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9480, file: !3, line: 1519, column: 6)
!9501 = !DILocation(line: 1519, column: 6, scope: !9480)
!9502 = !DILocation(line: 1520, column: 12, scope: !9500)
!9503 = !DILocation(line: 1520, column: 10, scope: !9500)
!9504 = !DILocation(line: 1520, column: 3, scope: !9500)
!9505 = !DILocation(line: 1522, column: 10, scope: !9500)
!9506 = !DILocation(line: 1524, column: 6, scope: !9480)
!9507 = !DILocation(line: 1524, column: 10, scope: !9480)
!9508 = !DILocation(line: 1524, column: 4, scope: !9480)
!9509 = !DILocation(line: 1525, column: 6, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9480, file: !3, line: 1525, column: 6)
!9511 = !DILocation(line: 1525, column: 10, scope: !9510)
!9512 = !DILocation(line: 1525, column: 8, scope: !9510)
!9513 = !DILocation(line: 1525, column: 17, scope: !9510)
!9514 = !DILocation(line: 1525, column: 6, scope: !9480)
!9515 = !DILocation(line: 1526, column: 31, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 1525, column: 36)
!9517 = !DILocation(line: 1526, column: 39, scope: !9516)
!9518 = !DILocation(line: 1526, column: 3, scope: !9516)
!9519 = !DILocation(line: 1528, column: 2, scope: !9516)
!9520 = !DILocation(line: 1528, column: 14, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 1528, column: 13)
!9522 = !DILocation(line: 1528, column: 13, scope: !9510)
!9523 = !DILocation(line: 1529, column: 31, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 1528, column: 44)
!9525 = !DILocation(line: 1529, column: 39, scope: !9524)
!9526 = !DILocation(line: 1529, column: 3, scope: !9524)
!9527 = !DILocation(line: 1531, column: 2, scope: !9524)
!9528 = !DILocation(line: 1532, column: 31, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 1531, column: 9)
!9530 = !DILocation(line: 1532, column: 39, scope: !9529)
!9531 = !DILocation(line: 1533, column: 15, scope: !9529)
!9532 = !DILocation(line: 1533, column: 21, scope: !9529)
!9533 = !DILocation(line: 1533, column: 6, scope: !9529)
!9534 = !DILocation(line: 1533, column: 34, scope: !9529)
!9535 = !DILocation(line: 1533, column: 32, scope: !9529)
!9536 = !DILocation(line: 1533, column: 37, scope: !9529)
!9537 = !DILocation(line: 1532, column: 3, scope: !9529)
!9538 = !DILocation(line: 1536, column: 27, scope: !9480)
!9539 = !DILocation(line: 1536, column: 33, scope: !9480)
!9540 = !DILocation(line: 1536, column: 2, scope: !9480)
!9541 = !DILocation(line: 1537, column: 1, scope: !9480)
!9542 = distinct !DISubprogram(name: "handle_local_lock", scope: !3, file: !3, line: 1539, type: !9481, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9543 = !DILocalVariable(name: "ohci", arg: 1, scope: !9542, file: !3, line: 1539, type: !187)
!9544 = !DILocation(line: 1539, column: 47, scope: !9542)
!9545 = !DILocalVariable(name: "packet", arg: 2, scope: !9542, file: !3, line: 1540, type: !224)
!9546 = !DILocation(line: 1540, column: 28, scope: !9542)
!9547 = !DILocalVariable(name: "csr", arg: 3, scope: !9542, file: !3, line: 1540, type: !231)
!9548 = !DILocation(line: 1540, column: 40, scope: !9542)
!9549 = !DILocalVariable(name: "response", scope: !9542, file: !3, line: 1542, type: !225)
!9550 = !DILocation(line: 1542, column: 19, scope: !9542)
!9551 = !DILocalVariable(name: "tcode", scope: !9542, file: !3, line: 1543, type: !177)
!9552 = !DILocation(line: 1543, column: 6, scope: !9542)
!9553 = !DILocalVariable(name: "length", scope: !9542, file: !3, line: 1543, type: !177)
!9554 = !DILocation(line: 1543, column: 13, scope: !9542)
!9555 = !DILocalVariable(name: "ext_tcode", scope: !9542, file: !3, line: 1543, type: !177)
!9556 = !DILocation(line: 1543, column: 21, scope: !9542)
!9557 = !DILocalVariable(name: "sel", scope: !9542, file: !3, line: 1543, type: !177)
!9558 = !DILocation(line: 1543, column: 32, scope: !9542)
!9559 = !DILocalVariable(name: "try", scope: !9542, file: !3, line: 1543, type: !177)
!9560 = !DILocation(line: 1543, column: 37, scope: !9542)
!9561 = !DILocalVariable(name: "payload", scope: !9542, file: !3, line: 1544, type: !4109)
!9562 = !DILocation(line: 1544, column: 10, scope: !9542)
!9563 = !DILocalVariable(name: "lock_old", scope: !9542, file: !3, line: 1544, type: !185)
!9564 = !DILocation(line: 1544, column: 19, scope: !9542)
!9565 = !DILocalVariable(name: "lock_arg", scope: !9542, file: !3, line: 1545, type: !231)
!9566 = !DILocation(line: 1545, column: 6, scope: !9542)
!9567 = !DILocalVariable(name: "lock_data", scope: !9542, file: !3, line: 1545, type: !231)
!9568 = !DILocation(line: 1545, column: 16, scope: !9542)
!9569 = !DILocation(line: 1547, column: 10, scope: !9542)
!9570 = !DILocation(line: 1547, column: 8, scope: !9542)
!9571 = !DILocation(line: 1548, column: 11, scope: !9542)
!9572 = !DILocation(line: 1548, column: 9, scope: !9542)
!9573 = !DILocation(line: 1549, column: 12, scope: !9542)
!9574 = !DILocation(line: 1549, column: 20, scope: !9542)
!9575 = !DILocation(line: 1549, column: 10, scope: !9542)
!9576 = !DILocation(line: 1550, column: 14, scope: !9542)
!9577 = !DILocation(line: 1550, column: 12, scope: !9542)
!9578 = !DILocation(line: 1552, column: 6, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 1552, column: 6)
!9580 = !DILocation(line: 1552, column: 12, scope: !9579)
!9581 = !DILocation(line: 1552, column: 34, scope: !9579)
!9582 = !DILocation(line: 1553, column: 6, scope: !9579)
!9583 = !DILocation(line: 1553, column: 16, scope: !9579)
!9584 = !DILocation(line: 1553, column: 40, scope: !9579)
!9585 = !DILocation(line: 1553, column: 43, scope: !9579)
!9586 = !DILocation(line: 1553, column: 50, scope: !9579)
!9587 = !DILocation(line: 1552, column: 6, scope: !9542)
!9588 = !DILocation(line: 1554, column: 14, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 1553, column: 56)
!9590 = !DILocation(line: 1554, column: 12, scope: !9589)
!9591 = !DILocation(line: 1555, column: 15, scope: !9589)
!9592 = !DILocation(line: 1555, column: 13, scope: !9589)
!9593 = !DILocation(line: 1556, column: 2, scope: !9589)
!9594 = !DILocation(line: 1556, column: 13, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 1556, column: 13)
!9596 = !DILocation(line: 1556, column: 19, scope: !9595)
!9597 = !DILocation(line: 1556, column: 13, scope: !9579)
!9598 = !DILocation(line: 1557, column: 12, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 1556, column: 50)
!9600 = !DILocation(line: 1558, column: 13, scope: !9599)
!9601 = !DILocation(line: 1559, column: 2, scope: !9599)
!9602 = !DILocation(line: 1560, column: 31, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 1559, column: 9)
!9604 = !DILocation(line: 1560, column: 39, scope: !9603)
!9605 = !DILocation(line: 1560, column: 3, scope: !9603)
!9606 = !DILocation(line: 1562, column: 3, scope: !9603)
!9607 = !DILocation(line: 1565, column: 9, scope: !9542)
!9608 = !DILocation(line: 1565, column: 13, scope: !9542)
!9609 = !DILocation(line: 1565, column: 35, scope: !9542)
!9610 = !DILocation(line: 1565, column: 6, scope: !9542)
!9611 = !DILocation(line: 1566, column: 12, scope: !9542)
!9612 = !DILocation(line: 1566, column: 36, scope: !9542)
!9613 = !DILocation(line: 1566, column: 2, scope: !9542)
!9614 = !DILocation(line: 1567, column: 12, scope: !9542)
!9615 = !DILocation(line: 1567, column: 43, scope: !9542)
!9616 = !DILocation(line: 1567, column: 2, scope: !9542)
!9617 = !DILocation(line: 1568, column: 12, scope: !9542)
!9618 = !DILocation(line: 1568, column: 39, scope: !9542)
!9619 = !DILocation(line: 1568, column: 2, scope: !9542)
!9620 = !DILocation(line: 1570, column: 11, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 1570, column: 2)
!9622 = !DILocation(line: 1570, column: 7, scope: !9621)
!9623 = !DILocation(line: 1570, column: 16, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 1570, column: 2)
!9625 = !DILocation(line: 1570, column: 20, scope: !9624)
!9626 = !DILocation(line: 1570, column: 2, scope: !9621)
!9627 = !DILocation(line: 1571, column: 16, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 1571, column: 7)
!9629 = !DILocation(line: 1571, column: 7, scope: !9628)
!9630 = !DILocation(line: 1571, column: 43, scope: !9628)
!9631 = !DILocation(line: 1571, column: 7, scope: !9624)
!9632 = !DILocation(line: 1572, column: 15, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9628, file: !3, line: 1571, column: 57)
!9634 = !DILocation(line: 1572, column: 13, scope: !9633)
!9635 = !DILocation(line: 1574, column: 32, scope: !9633)
!9636 = !DILocation(line: 1574, column: 40, scope: !9633)
!9637 = !DILocation(line: 1576, column: 7, scope: !9633)
!9638 = !DILocation(line: 1574, column: 4, scope: !9633)
!9639 = !DILocation(line: 1577, column: 4, scope: !9633)
!9640 = !DILocation(line: 1571, column: 45, scope: !9628)
!9641 = !DILocation(line: 1570, column: 29, scope: !9624)
!9642 = !DILocation(line: 1570, column: 2, scope: !9624)
!9643 = distinct !{!9643, !9626, !9644}
!9644 = !DILocation(line: 1578, column: 3, scope: !9621)
!9645 = !DILocation(line: 1580, column: 2, scope: !9542)
!9646 = !DILocation(line: 1581, column: 30, scope: !9542)
!9647 = !DILocation(line: 1581, column: 38, scope: !9542)
!9648 = !DILocation(line: 1581, column: 2, scope: !9542)
!9649 = !DILabel(scope: !9542, name: "out", file: !3, line: 1583)
!9650 = !DILocation(line: 1583, column: 2, scope: !9542)
!9651 = !DILocation(line: 1584, column: 27, scope: !9542)
!9652 = !DILocation(line: 1584, column: 33, scope: !9542)
!9653 = !DILocation(line: 1584, column: 2, scope: !9542)
!9654 = !DILocation(line: 1585, column: 1, scope: !9542)
!9655 = distinct !DISubprogram(name: "context_get_descriptors", scope: !3, file: !3, line: 1175, type: !9656, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9656 = !DISubroutineType(types: !9657)
!9657 = !{!4019, !4083, !177, !5953}
!9658 = !DILocalVariable(name: "ctx", arg: 1, scope: !9655, file: !3, line: 1175, type: !4083)
!9659 = !DILocation(line: 1175, column: 67, scope: !9655)
!9660 = !DILocalVariable(name: "z", arg: 2, scope: !9655, file: !3, line: 1176, type: !177)
!9661 = !DILocation(line: 1176, column: 13, scope: !9655)
!9662 = !DILocalVariable(name: "d_bus", arg: 3, scope: !9655, file: !3, line: 1176, type: !5953)
!9663 = !DILocation(line: 1176, column: 28, scope: !9655)
!9664 = !DILocalVariable(name: "d", scope: !9655, file: !3, line: 1178, type: !4019)
!9665 = !DILocation(line: 1178, column: 21, scope: !9655)
!9666 = !DILocalVariable(name: "desc", scope: !9655, file: !3, line: 1179, type: !4066)
!9667 = !DILocation(line: 1179, column: 28, scope: !9655)
!9668 = !DILocation(line: 1179, column: 35, scope: !9655)
!9669 = !DILocation(line: 1179, column: 40, scope: !9655)
!9670 = !DILocation(line: 1181, column: 6, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 1181, column: 6)
!9672 = !DILocation(line: 1181, column: 8, scope: !9671)
!9673 = !DILocation(line: 1181, column: 23, scope: !9671)
!9674 = !DILocation(line: 1181, column: 29, scope: !9671)
!9675 = !DILocation(line: 1181, column: 21, scope: !9671)
!9676 = !DILocation(line: 1181, column: 6, scope: !9655)
!9677 = !DILocation(line: 1182, column: 3, scope: !9671)
!9678 = !DILocation(line: 1184, column: 6, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 1184, column: 6)
!9680 = !DILocation(line: 1184, column: 8, scope: !9679)
!9681 = !DILocation(line: 1184, column: 23, scope: !9679)
!9682 = !DILocation(line: 1184, column: 29, scope: !9679)
!9683 = !DILocation(line: 1184, column: 43, scope: !9679)
!9684 = !DILocation(line: 1184, column: 49, scope: !9679)
!9685 = !DILocation(line: 1184, column: 41, scope: !9679)
!9686 = !DILocation(line: 1184, column: 21, scope: !9679)
!9687 = !DILocation(line: 1184, column: 6, scope: !9655)
!9688 = !DILocation(line: 1188, column: 7, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9690, file: !3, line: 1188, column: 7)
!9690 = distinct !DILexicalBlock(scope: !9679, file: !3, line: 1184, column: 55)
!9691 = !DILocation(line: 1188, column: 13, scope: !9689)
!9692 = !DILocation(line: 1188, column: 18, scope: !9689)
!9693 = !DILocation(line: 1188, column: 27, scope: !9689)
!9694 = !DILocation(line: 1188, column: 32, scope: !9689)
!9695 = !DILocation(line: 1188, column: 23, scope: !9689)
!9696 = !DILocation(line: 1188, column: 7, scope: !9690)
!9697 = !DILocation(line: 1191, column: 27, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 1191, column: 8)
!9699 = distinct !DILexicalBlock(scope: !9689, file: !3, line: 1188, column: 45)
!9700 = !DILocation(line: 1191, column: 8, scope: !9698)
!9701 = !DILocation(line: 1191, column: 32, scope: !9698)
!9702 = !DILocation(line: 1191, column: 8, scope: !9699)
!9703 = !DILocation(line: 1192, column: 5, scope: !9698)
!9704 = !DILocation(line: 1193, column: 3, scope: !9699)
!9705 = !DILocalVariable(name: "__mptr", scope: !9706, file: !3, line: 1194, type: !175)
!9706 = distinct !DILexicalBlock(scope: !9690, file: !3, line: 1194, column: 10)
!9707 = !DILocation(line: 1194, column: 10, scope: !9706)
!9708 = !DILocation(line: 1194, column: 10, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 1194, column: 10)
!9710 = !DILocation(line: 1194, column: 8, scope: !9690)
!9711 = !DILocation(line: 1196, column: 22, scope: !9690)
!9712 = !DILocation(line: 1196, column: 3, scope: !9690)
!9713 = !DILocation(line: 1196, column: 8, scope: !9690)
!9714 = !DILocation(line: 1196, column: 20, scope: !9690)
!9715 = !DILocation(line: 1197, column: 2, scope: !9690)
!9716 = !DILocation(line: 1199, column: 6, scope: !9655)
!9717 = !DILocation(line: 1199, column: 12, scope: !9655)
!9718 = !DILocation(line: 1199, column: 21, scope: !9655)
!9719 = !DILocation(line: 1199, column: 27, scope: !9655)
!9720 = !DILocation(line: 1199, column: 32, scope: !9655)
!9721 = !DILocation(line: 1199, column: 19, scope: !9655)
!9722 = !DILocation(line: 1199, column: 4, scope: !9655)
!9723 = !DILocation(line: 1200, column: 9, scope: !9655)
!9724 = !DILocation(line: 1200, column: 2, scope: !9655)
!9725 = !DILocation(line: 1200, column: 15, scope: !9655)
!9726 = !DILocation(line: 1200, column: 17, scope: !9655)
!9727 = !DILocation(line: 1201, column: 11, scope: !9655)
!9728 = !DILocation(line: 1201, column: 17, scope: !9655)
!9729 = !DILocation(line: 1201, column: 30, scope: !9655)
!9730 = !DILocation(line: 1201, column: 36, scope: !9655)
!9731 = !DILocation(line: 1201, column: 28, scope: !9655)
!9732 = !DILocation(line: 1201, column: 3, scope: !9655)
!9733 = !DILocation(line: 1201, column: 9, scope: !9655)
!9734 = !DILocation(line: 1203, column: 9, scope: !9655)
!9735 = !DILocation(line: 1203, column: 2, scope: !9655)
!9736 = !DILocation(line: 1204, column: 1, scope: !9655)
!9737 = distinct !DISubprogram(name: "is_ping_packet", scope: !198, file: !198, line: 252, type: !9738, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9738 = !DISubroutineType(types: !9739)
!9739 = !{!240, !1982}
!9740 = !DILocalVariable(name: "data", arg: 1, scope: !9737, file: !198, line: 252, type: !1982)
!9741 = !DILocation(line: 252, column: 40, scope: !9737)
!9742 = !DILocation(line: 254, column: 10, scope: !9737)
!9743 = !DILocation(line: 254, column: 18, scope: !9737)
!9744 = !DILocation(line: 254, column: 32, scope: !9737)
!9745 = !DILocation(line: 254, column: 37, scope: !9737)
!9746 = !DILocation(line: 254, column: 41, scope: !9737)
!9747 = !DILocation(line: 254, column: 40, scope: !9737)
!9748 = !DILocation(line: 254, column: 52, scope: !9737)
!9749 = !DILocation(line: 254, column: 49, scope: !9737)
!9750 = !DILocation(line: 0, scope: !9737)
!9751 = !DILocation(line: 254, column: 2, scope: !9737)
!9752 = !DILocalVariable(name: "dev", arg: 1, scope: !4576, file: !4577, line: 271, type: !3184)
!9753 = !DILocation(line: 271, column: 62, scope: !4576)
!9754 = !DILocalVariable(name: "ptr", arg: 2, scope: !4576, file: !4577, line: 271, type: !175)
!9755 = !DILocation(line: 271, column: 73, scope: !4576)
!9756 = !DILocalVariable(name: "size", arg: 3, scope: !4576, file: !4577, line: 272, type: !207)
!9757 = !DILocation(line: 272, column: 10, scope: !4576)
!9758 = !DILocalVariable(name: "dir", arg: 4, scope: !4576, file: !4577, line: 272, type: !93)
!9759 = !DILocation(line: 272, column: 40, scope: !4576)
!9760 = !DILocalVariable(name: "attrs", arg: 5, scope: !4576, file: !4577, line: 272, type: !176)
!9761 = !DILocation(line: 272, column: 59, scope: !4576)
!9762 = !DILocalVariable(name: "__ret_warn_once", scope: !9763, file: !4577, line: 275, type: !177)
!9763 = distinct !DILexicalBlock(scope: !9764, file: !4577, line: 275, column: 6)
!9764 = distinct !DILexicalBlock(scope: !4576, file: !4577, line: 275, column: 6)
!9765 = !DILocation(line: 275, column: 6, scope: !9763)
!9766 = !DILocation(line: 275, column: 6, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9763, file: !4577, line: 275, column: 6)
!9768 = !DILocation(line: 0, scope: !9767)
!9769 = !DILocation(line: 275, column: 6, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9767, file: !4577, line: 275, column: 6)
!9771 = !DILocalVariable(name: "__ret_warn_on", scope: !9772, file: !4577, line: 275, type: !177)
!9772 = distinct !DILexicalBlock(scope: !9770, file: !4577, line: 275, column: 6)
!9773 = !DILocation(line: 275, column: 6, scope: !9772)
!9774 = !DILocation(line: 275, column: 6, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9772, file: !4577, line: 275, column: 6)
!9776 = !DILocation(line: 275, column: 6, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9775, file: !4577, line: 275, column: 6)
!9778 = !DILocation(line: 275, column: 6, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9777, file: !4577, line: 275, column: 6)
!9780 = !DILocation(line: 275, column: 6, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9777, file: !4577, line: 275, column: 6)
!9782 = !DILocation(line: 275, column: 6, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9781, file: !4577, line: 275, column: 6)
!9784 = !DILocation(line: 275, column: 6, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9781, file: !4577, line: 275, column: 6)
!9786 = !{i32 -2142219751, i32 -2142219722, i32 -2142219676, i32 -2142219618, i32 -2142219564, i32 -2142219510, i32 -2142219455, i32 -2142219424}
!9787 = !DILocation(line: 275, column: 6, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9781, file: !4577, line: 275, column: 6)
!9789 = !{i32 -2142219004, i32 -2142218997, i32 -2142218945, i32 -2142218914, i32 -2142218884}
!9790 = !DILocation(line: 275, column: 6, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9781, file: !4577, line: 275, column: 6)
!9792 = !DILocation(line: 275, column: 6, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9777, file: !4577, line: 275, column: 6)
!9794 = !DILocation(line: 275, column: 6, scope: !9764)
!9795 = !DILocation(line: 275, column: 6, scope: !4576)
!9796 = !DILocation(line: 277, column: 3, scope: !9764)
!9797 = !DILocation(line: 278, column: 23, scope: !4576)
!9798 = !DILocation(line: 278, column: 28, scope: !4576)
!9799 = !DILocation(line: 278, column: 33, scope: !4576)
!9800 = !DILocation(line: 278, column: 2, scope: !4576)
!9801 = !DILocation(line: 279, column: 28, scope: !4576)
!9802 = !DILocation(line: 279, column: 33, scope: !4576)
!9803 = !DILocation(line: 279, column: 52, scope: !4576)
!9804 = !DILocation(line: 280, column: 4, scope: !4576)
!9805 = !DILocation(line: 280, column: 10, scope: !4576)
!9806 = !DILocation(line: 280, column: 15, scope: !4576)
!9807 = !DILocation(line: 279, column: 9, scope: !4576)
!9808 = !DILocation(line: 279, column: 2, scope: !4576)
!9809 = !DILocation(line: 281, column: 1, scope: !4576)
!9810 = distinct !DISubprogram(name: "dma_mapping_error", scope: !4577, file: !4577, line: 94, type: !9811, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9811 = !DISubroutineType(types: !9812)
!9812 = !{!177, !3184, !238}
!9813 = !DILocalVariable(name: "dev", arg: 1, scope: !9810, file: !4577, line: 94, type: !3184)
!9814 = !DILocation(line: 94, column: 52, scope: !9810)
!9815 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !9810, file: !4577, line: 94, type: !238)
!9816 = !DILocation(line: 94, column: 68, scope: !9810)
!9817 = !DILocation(line: 96, column: 26, scope: !9810)
!9818 = !DILocation(line: 96, column: 31, scope: !9810)
!9819 = !DILocation(line: 96, column: 2, scope: !9810)
!9820 = !DILocation(line: 98, column: 6, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9810, file: !4577, line: 98, column: 6)
!9822 = !DILocation(line: 98, column: 15, scope: !9821)
!9823 = !DILocation(line: 98, column: 6, scope: !9810)
!9824 = !DILocation(line: 99, column: 3, scope: !9821)
!9825 = !DILocation(line: 100, column: 2, scope: !9810)
!9826 = !DILocation(line: 101, column: 1, scope: !9810)
!9827 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !4577, file: !4577, line: 283, type: !9828, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9828 = !DISubroutineType(types: !9829)
!9829 = !{null, !3184, !238, !207, !93, !176}
!9830 = !DILocalVariable(name: "dev", arg: 1, scope: !9827, file: !4577, line: 283, type: !3184)
!9831 = !DILocation(line: 283, column: 58, scope: !9827)
!9832 = !DILocalVariable(name: "addr", arg: 2, scope: !9827, file: !4577, line: 283, type: !238)
!9833 = !DILocation(line: 283, column: 74, scope: !9827)
!9834 = !DILocalVariable(name: "size", arg: 3, scope: !9827, file: !4577, line: 284, type: !207)
!9835 = !DILocation(line: 284, column: 10, scope: !9827)
!9836 = !DILocalVariable(name: "dir", arg: 4, scope: !9827, file: !4577, line: 284, type: !93)
!9837 = !DILocation(line: 284, column: 40, scope: !9827)
!9838 = !DILocalVariable(name: "attrs", arg: 5, scope: !9827, file: !4577, line: 284, type: !176)
!9839 = !DILocation(line: 284, column: 59, scope: !9827)
!9840 = !DILocation(line: 286, column: 30, scope: !9827)
!9841 = !DILocation(line: 286, column: 35, scope: !9827)
!9842 = !DILocation(line: 286, column: 41, scope: !9827)
!9843 = !DILocation(line: 286, column: 47, scope: !9827)
!9844 = !DILocation(line: 286, column: 52, scope: !9827)
!9845 = !DILocation(line: 286, column: 9, scope: !9827)
!9846 = !DILocation(line: 286, column: 2, scope: !9827)
!9847 = distinct !DISubprogram(name: "context_append", scope: !3, file: !3, line: 1218, type: !9848, scopeLine: 1220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9848 = !DISubroutineType(types: !9849)
!9849 = !{null, !4083, !4019, !177, !177}
!9850 = !DILocalVariable(name: "ctx", arg: 1, scope: !9847, file: !3, line: 1218, type: !4083)
!9851 = !DILocation(line: 1218, column: 44, scope: !9847)
!9852 = !DILocalVariable(name: "d", arg: 2, scope: !9847, file: !3, line: 1219, type: !4019)
!9853 = !DILocation(line: 1219, column: 26, scope: !9847)
!9854 = !DILocalVariable(name: "z", arg: 3, scope: !9847, file: !3, line: 1219, type: !177)
!9855 = !DILocation(line: 1219, column: 33, scope: !9847)
!9856 = !DILocalVariable(name: "extra", arg: 4, scope: !9847, file: !3, line: 1219, type: !177)
!9857 = !DILocation(line: 1219, column: 40, scope: !9847)
!9858 = !DILocalVariable(name: "d_bus", scope: !9847, file: !3, line: 1221, type: !238)
!9859 = !DILocation(line: 1221, column: 13, scope: !9847)
!9860 = !DILocalVariable(name: "desc", scope: !9847, file: !3, line: 1222, type: !4066)
!9861 = !DILocation(line: 1222, column: 28, scope: !9847)
!9862 = !DILocation(line: 1222, column: 35, scope: !9847)
!9863 = !DILocation(line: 1222, column: 40, scope: !9847)
!9864 = !DILocalVariable(name: "d_branch", scope: !9847, file: !3, line: 1223, type: !4019)
!9865 = !DILocation(line: 1223, column: 21, scope: !9847)
!9866 = !DILocation(line: 1225, column: 10, scope: !9847)
!9867 = !DILocation(line: 1225, column: 16, scope: !9847)
!9868 = !DILocation(line: 1225, column: 30, scope: !9847)
!9869 = !DILocation(line: 1225, column: 34, scope: !9847)
!9870 = !DILocation(line: 1225, column: 40, scope: !9847)
!9871 = !DILocation(line: 1225, column: 32, scope: !9847)
!9872 = !DILocation(line: 1225, column: 48, scope: !9847)
!9873 = !DILocation(line: 1225, column: 27, scope: !9847)
!9874 = !DILocation(line: 1225, column: 8, scope: !9847)
!9875 = !DILocation(line: 1227, column: 17, scope: !9847)
!9876 = !DILocation(line: 1227, column: 21, scope: !9847)
!9877 = !DILocation(line: 1227, column: 19, scope: !9847)
!9878 = !DILocation(line: 1227, column: 16, scope: !9847)
!9879 = !DILocation(line: 1227, column: 28, scope: !9847)
!9880 = !DILocation(line: 1227, column: 2, scope: !9847)
!9881 = !DILocation(line: 1227, column: 8, scope: !9847)
!9882 = !DILocation(line: 1227, column: 13, scope: !9847)
!9883 = !DILocation(line: 1229, column: 2, scope: !9847)
!9884 = !{i32 -2141548859}
!9885 = !DILocation(line: 1231, column: 36, scope: !9847)
!9886 = !DILocation(line: 1231, column: 41, scope: !9847)
!9887 = !DILocation(line: 1231, column: 47, scope: !9847)
!9888 = !DILocation(line: 1231, column: 52, scope: !9847)
!9889 = !DILocation(line: 1231, column: 13, scope: !9847)
!9890 = !DILocation(line: 1231, column: 11, scope: !9847)
!9891 = !DILocation(line: 1232, column: 29, scope: !9847)
!9892 = !DILocation(line: 1232, column: 2, scope: !9847)
!9893 = !DILocation(line: 1232, column: 12, scope: !9847)
!9894 = !DILocation(line: 1232, column: 27, scope: !9847)
!9895 = !DILocation(line: 1243, column: 6, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1243, column: 6)
!9897 = !DILocation(line: 1243, column: 50, scope: !9896)
!9898 = !DILocation(line: 1244, column: 6, scope: !9896)
!9899 = !DILocation(line: 1244, column: 18, scope: !9896)
!9900 = !DILocation(line: 1244, column: 23, scope: !9896)
!9901 = !DILocation(line: 1244, column: 15, scope: !9896)
!9902 = !DILocation(line: 1244, column: 28, scope: !9896)
!9903 = !DILocation(line: 1245, column: 7, scope: !9896)
!9904 = !DILocation(line: 1245, column: 12, scope: !9896)
!9905 = !DILocation(line: 1245, column: 18, scope: !9896)
!9906 = !DILocation(line: 1245, column: 26, scope: !9896)
!9907 = !DILocation(line: 1245, column: 57, scope: !9896)
!9908 = !DILocation(line: 1243, column: 6, scope: !9847)
!9909 = !DILocation(line: 1247, column: 31, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 1246, column: 43)
!9911 = !DILocation(line: 1247, column: 3, scope: !9910)
!9912 = !DILocation(line: 1247, column: 8, scope: !9910)
!9913 = !DILocation(line: 1247, column: 14, scope: !9910)
!9914 = !DILocation(line: 1247, column: 29, scope: !9910)
!9915 = !DILocation(line: 1248, column: 2, scope: !9910)
!9916 = !DILocation(line: 1250, column: 14, scope: !9847)
!9917 = !DILocation(line: 1250, column: 2, scope: !9847)
!9918 = !DILocation(line: 1250, column: 7, scope: !9847)
!9919 = !DILocation(line: 1250, column: 12, scope: !9847)
!9920 = !DILocation(line: 1251, column: 16, scope: !9847)
!9921 = !DILocation(line: 1251, column: 2, scope: !9847)
!9922 = !DILocation(line: 1251, column: 7, scope: !9847)
!9923 = !DILocation(line: 1251, column: 14, scope: !9847)
!9924 = !DILocation(line: 1252, column: 1, scope: !9847)
!9925 = distinct !DISubprogram(name: "context_run", scope: !3, file: !3, line: 1206, type: !9926, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9926 = !DISubroutineType(types: !9927)
!9927 = !{null, !4083, !231}
!9928 = !DILocalVariable(name: "ctx", arg: 1, scope: !9925, file: !3, line: 1206, type: !4083)
!9929 = !DILocation(line: 1206, column: 41, scope: !9925)
!9930 = !DILocalVariable(name: "extra", arg: 2, scope: !9925, file: !3, line: 1206, type: !231)
!9931 = !DILocation(line: 1206, column: 50, scope: !9925)
!9932 = !DILocalVariable(name: "ohci", scope: !9925, file: !3, line: 1208, type: !187)
!9933 = !DILocation(line: 1208, column: 18, scope: !9925)
!9934 = !DILocation(line: 1208, column: 25, scope: !9925)
!9935 = !DILocation(line: 1208, column: 30, scope: !9925)
!9936 = !DILocation(line: 1210, column: 12, scope: !9925)
!9937 = !DILocation(line: 1210, column: 18, scope: !9925)
!9938 = !DILocation(line: 1211, column: 5, scope: !9925)
!9939 = !DILocation(line: 1210, column: 2, scope: !9925)
!9940 = !DILocation(line: 1212, column: 12, scope: !9925)
!9941 = !DILocation(line: 1212, column: 18, scope: !9925)
!9942 = !DILocation(line: 1212, column: 2, scope: !9925)
!9943 = !DILocation(line: 1213, column: 12, scope: !9925)
!9944 = !DILocation(line: 1213, column: 18, scope: !9925)
!9945 = !DILocation(line: 1213, column: 56, scope: !9925)
!9946 = !DILocation(line: 1213, column: 54, scope: !9925)
!9947 = !DILocation(line: 1213, column: 2, scope: !9925)
!9948 = !DILocation(line: 1214, column: 2, scope: !9925)
!9949 = !DILocation(line: 1214, column: 7, scope: !9925)
!9950 = !DILocation(line: 1214, column: 15, scope: !9925)
!9951 = !DILocation(line: 1215, column: 15, scope: !9925)
!9952 = !DILocation(line: 1215, column: 2, scope: !9925)
!9953 = !DILocation(line: 1216, column: 1, scope: !9925)
!9954 = distinct !DISubprogram(name: "context_add_buffer", scope: !3, file: !3, line: 1095, type: !9955, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!9955 = !DISubroutineType(types: !9956)
!9956 = !{!177, !4083}
!9957 = !DILocalVariable(name: "ctx", arg: 1, scope: !9954, file: !3, line: 1095, type: !4083)
!9958 = !DILocation(line: 1095, column: 47, scope: !9954)
!9959 = !DILocalVariable(name: "desc", scope: !9954, file: !3, line: 1097, type: !4066)
!9960 = !DILocation(line: 1097, column: 28, scope: !9954)
!9961 = !DILocalVariable(name: "bus_addr", scope: !9954, file: !3, line: 1098, type: !238)
!9962 = !DILocation(line: 1098, column: 13, scope: !9954)
!9963 = !DILocalVariable(name: "offset", scope: !9954, file: !3, line: 1099, type: !177)
!9964 = !DILocation(line: 1099, column: 6, scope: !9954)
!9965 = !DILocation(line: 1105, column: 6, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 1105, column: 6)
!9967 = !DILocation(line: 1105, column: 11, scope: !9966)
!9968 = !DILocation(line: 1105, column: 28, scope: !9966)
!9969 = !DILocation(line: 1105, column: 6, scope: !9954)
!9970 = !DILocation(line: 1106, column: 3, scope: !9966)
!9971 = !DILocation(line: 1108, column: 28, scope: !9954)
!9972 = !DILocation(line: 1108, column: 33, scope: !9954)
!9973 = !DILocation(line: 1108, column: 39, scope: !9954)
!9974 = !DILocation(line: 1108, column: 44, scope: !9954)
!9975 = !DILocation(line: 1108, column: 9, scope: !9954)
!9976 = !DILocation(line: 1108, column: 7, scope: !9954)
!9977 = !DILocation(line: 1110, column: 7, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 1110, column: 6)
!9979 = !DILocation(line: 1110, column: 6, scope: !9954)
!9980 = !DILocation(line: 1111, column: 3, scope: !9978)
!9981 = !DILocation(line: 1113, column: 20, scope: !9954)
!9982 = !DILocation(line: 1113, column: 26, scope: !9954)
!9983 = !DILocation(line: 1113, column: 11, scope: !9954)
!9984 = !DILocation(line: 1113, column: 43, scope: !9954)
!9985 = !DILocation(line: 1113, column: 35, scope: !9954)
!9986 = !DILocation(line: 1113, column: 33, scope: !9954)
!9987 = !DILocation(line: 1113, column: 9, scope: !9954)
!9988 = !DILocation(line: 1120, column: 34, scope: !9954)
!9989 = !DILocation(line: 1120, column: 32, scope: !9954)
!9990 = !DILocation(line: 1120, column: 41, scope: !9954)
!9991 = !DILocation(line: 1120, column: 2, scope: !9954)
!9992 = !DILocation(line: 1120, column: 8, scope: !9954)
!9993 = !DILocation(line: 1120, column: 20, scope: !9954)
!9994 = !DILocation(line: 1121, column: 21, scope: !9954)
!9995 = !DILocation(line: 1121, column: 32, scope: !9954)
!9996 = !DILocation(line: 1121, column: 30, scope: !9954)
!9997 = !DILocation(line: 1121, column: 2, scope: !9954)
!9998 = !DILocation(line: 1121, column: 8, scope: !9954)
!9999 = !DILocation(line: 1121, column: 19, scope: !9954)
!10000 = !DILocation(line: 1122, column: 2, scope: !9954)
!10001 = !DILocation(line: 1122, column: 8, scope: !9954)
!10002 = !DILocation(line: 1122, column: 13, scope: !9954)
!10003 = !DILocation(line: 1124, column: 17, scope: !9954)
!10004 = !DILocation(line: 1124, column: 23, scope: !9954)
!10005 = !DILocation(line: 1124, column: 30, scope: !9954)
!10006 = !DILocation(line: 1124, column: 35, scope: !9954)
!10007 = !DILocation(line: 1124, column: 2, scope: !9954)
!10008 = !DILocation(line: 1125, column: 2, scope: !9954)
!10009 = !DILocation(line: 1125, column: 7, scope: !9954)
!10010 = !DILocation(line: 1125, column: 24, scope: !9954)
!10011 = !DILocation(line: 1127, column: 2, scope: !9954)
!10012 = !DILocation(line: 1128, column: 1, scope: !9954)
!10013 = distinct !DISubprogram(name: "list_add_tail", scope: !5597, file: !5597, line: 98, type: !10014, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10014 = !DISubroutineType(types: !10015)
!10015 = !{null, !253, !253}
!10016 = !DILocalVariable(name: "new", arg: 1, scope: !10013, file: !5597, line: 98, type: !253)
!10017 = !DILocation(line: 98, column: 52, scope: !10013)
!10018 = !DILocalVariable(name: "head", arg: 2, scope: !10013, file: !5597, line: 98, type: !253)
!10019 = !DILocation(line: 98, column: 75, scope: !10013)
!10020 = !DILocation(line: 100, column: 13, scope: !10013)
!10021 = !DILocation(line: 100, column: 18, scope: !10013)
!10022 = !DILocation(line: 100, column: 24, scope: !10013)
!10023 = !DILocation(line: 100, column: 30, scope: !10013)
!10024 = !DILocation(line: 100, column: 2, scope: !10013)
!10025 = !DILocation(line: 101, column: 1, scope: !10013)
!10026 = distinct !DISubprogram(name: "__list_add", scope: !5597, file: !5597, line: 63, type: !10027, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10027 = !DISubroutineType(types: !10028)
!10028 = !{null, !253, !253, !253}
!10029 = !DILocalVariable(name: "new", arg: 1, scope: !10026, file: !5597, line: 63, type: !253)
!10030 = !DILocation(line: 63, column: 49, scope: !10026)
!10031 = !DILocalVariable(name: "prev", arg: 2, scope: !10026, file: !5597, line: 64, type: !253)
!10032 = !DILocation(line: 64, column: 28, scope: !10026)
!10033 = !DILocalVariable(name: "next", arg: 3, scope: !10026, file: !5597, line: 65, type: !253)
!10034 = !DILocation(line: 65, column: 28, scope: !10026)
!10035 = !DILocation(line: 67, column: 24, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10026, file: !5597, line: 67, column: 6)
!10037 = !DILocation(line: 67, column: 29, scope: !10036)
!10038 = !DILocation(line: 67, column: 35, scope: !10036)
!10039 = !DILocation(line: 67, column: 7, scope: !10036)
!10040 = !DILocation(line: 67, column: 6, scope: !10026)
!10041 = !DILocation(line: 68, column: 3, scope: !10036)
!10042 = !DILocation(line: 70, column: 15, scope: !10026)
!10043 = !DILocation(line: 70, column: 2, scope: !10026)
!10044 = !DILocation(line: 70, column: 8, scope: !10026)
!10045 = !DILocation(line: 70, column: 13, scope: !10026)
!10046 = !DILocation(line: 71, column: 14, scope: !10026)
!10047 = !DILocation(line: 71, column: 2, scope: !10026)
!10048 = !DILocation(line: 71, column: 7, scope: !10026)
!10049 = !DILocation(line: 71, column: 12, scope: !10026)
!10050 = !DILocation(line: 72, column: 14, scope: !10026)
!10051 = !DILocation(line: 72, column: 2, scope: !10026)
!10052 = !DILocation(line: 72, column: 7, scope: !10026)
!10053 = !DILocation(line: 72, column: 12, scope: !10026)
!10054 = !DILocation(line: 73, column: 2, scope: !10026)
!10055 = !DILocation(line: 73, column: 2, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10026, file: !5597, line: 73, column: 2)
!10057 = !DILocation(line: 73, column: 2, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10056, file: !5597, line: 73, column: 2)
!10059 = !DILocation(line: 73, column: 2, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10056, file: !5597, line: 73, column: 2)
!10061 = !DILocation(line: 74, column: 1, scope: !10026)
!10062 = distinct !DISubprogram(name: "__list_add_valid", scope: !5597, file: !5597, line: 45, type: !10063, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10063 = !DISubroutineType(types: !10064)
!10064 = !{!240, !253, !253, !253}
!10065 = !DILocalVariable(name: "new", arg: 1, scope: !10062, file: !5597, line: 45, type: !253)
!10066 = !DILocation(line: 45, column: 55, scope: !10062)
!10067 = !DILocalVariable(name: "prev", arg: 2, scope: !10062, file: !5597, line: 46, type: !253)
!10068 = !DILocation(line: 46, column: 23, scope: !10062)
!10069 = !DILocalVariable(name: "next", arg: 3, scope: !10062, file: !5597, line: 47, type: !253)
!10070 = !DILocation(line: 47, column: 23, scope: !10062)
!10071 = !DILocation(line: 49, column: 2, scope: !10062)
!10072 = distinct !DISubprogram(name: "dev_name", scope: !73, file: !73, line: 609, type: !10073, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10073 = !DISubroutineType(types: !10074)
!10074 = !{!481, !3820}
!10075 = !DILocalVariable(name: "dev", arg: 1, scope: !10072, file: !73, line: 609, type: !3820)
!10076 = !DILocation(line: 609, column: 57, scope: !10072)
!10077 = !DILocation(line: 612, column: 6, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10072, file: !73, line: 612, column: 6)
!10079 = !DILocation(line: 612, column: 11, scope: !10078)
!10080 = !DILocation(line: 612, column: 6, scope: !10072)
!10081 = !DILocation(line: 613, column: 10, scope: !10078)
!10082 = !DILocation(line: 613, column: 15, scope: !10078)
!10083 = !DILocation(line: 613, column: 3, scope: !10078)
!10084 = !DILocation(line: 615, column: 23, scope: !10072)
!10085 = !DILocation(line: 615, column: 28, scope: !10072)
!10086 = !DILocation(line: 615, column: 9, scope: !10072)
!10087 = !DILocation(line: 615, column: 2, scope: !10072)
!10088 = !DILocation(line: 616, column: 1, scope: !10072)
!10089 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !4577, file: !4577, line: 87, type: !10090, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10090 = !DISubroutineType(types: !10091)
!10091 = !{null, !3184, !2470, !176}
!10092 = !DILocalVariable(name: "dev", arg: 1, scope: !10089, file: !4577, line: 87, type: !3184)
!10093 = !DILocation(line: 87, column: 56, scope: !10089)
!10094 = !DILocalVariable(name: "addr", arg: 2, scope: !10089, file: !4577, line: 87, type: !2470)
!10095 = !DILocation(line: 87, column: 73, scope: !10089)
!10096 = !DILocalVariable(name: "len", arg: 3, scope: !10089, file: !4577, line: 88, type: !176)
!10097 = !DILocation(line: 88, column: 17, scope: !10089)
!10098 = !DILocation(line: 90, column: 1, scope: !10089)
!10099 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !10100, file: !10100, line: 18, type: !10101, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10100 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!10101 = !DISubroutineType(types: !10102)
!10102 = !{!176, !176}
!10103 = !DILocalVariable(name: "x", arg: 1, scope: !10099, file: !10100, line: 18, type: !176)
!10104 = !DILocation(line: 18, column: 63, scope: !10099)
!10105 = !DILocalVariable(name: "y", scope: !10099, file: !10100, line: 20, type: !176)
!10106 = !DILocation(line: 20, column: 16, scope: !10099)
!10107 = !DILocation(line: 20, column: 20, scope: !10099)
!10108 = !DILocation(line: 20, column: 22, scope: !10099)
!10109 = !DILocation(line: 23, column: 6, scope: !10099)
!10110 = !DILocation(line: 23, column: 12, scope: !10099)
!10111 = !DILocation(line: 23, column: 16, scope: !10099)
!10112 = !DILocation(line: 23, column: 14, scope: !10099)
!10113 = !DILocation(line: 23, column: 11, scope: !10099)
!10114 = !DILocation(line: 23, column: 21, scope: !10099)
!10115 = !DILocation(line: 23, column: 55, scope: !10099)
!10116 = !DILocation(line: 23, column: 53, scope: !10099)
!10117 = !DILocation(line: 23, column: 8, scope: !10099)
!10118 = !DILocation(line: 23, column: 4, scope: !10099)
!10119 = !DILocation(line: 25, column: 9, scope: !10099)
!10120 = !DILocation(line: 25, column: 2, scope: !10099)
!10121 = distinct !DISubprogram(name: "kobject_name", scope: !3189, file: !3189, line: 88, type: !10122, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10122 = !DISubroutineType(types: !10123)
!10123 = !{!481, !10124}
!10124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10125, size: 64)
!10125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3188)
!10126 = !DILocalVariable(name: "kobj", arg: 1, scope: !10121, file: !3189, line: 88, type: !10124)
!10127 = !DILocation(line: 88, column: 62, scope: !10121)
!10128 = !DILocation(line: 90, column: 9, scope: !10121)
!10129 = !DILocation(line: 90, column: 15, scope: !10121)
!10130 = !DILocation(line: 90, column: 2, scope: !10121)
!10131 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !4577, file: !4577, line: 83, type: !10132, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10132 = !DISubroutineType(types: !10133)
!10133 = !{null, !3184, !238}
!10134 = !DILocalVariable(name: "dev", arg: 1, scope: !10131, file: !4577, line: 83, type: !3184)
!10135 = !DILocation(line: 83, column: 59, scope: !10131)
!10136 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !10131, file: !4577, line: 84, type: !238)
!10137 = !DILocation(line: 84, column: 14, scope: !10131)
!10138 = !DILocation(line: 86, column: 1, scope: !10131)
!10139 = distinct !DISubprogram(name: "find_branch_descriptor", scope: !3, file: !3, line: 1035, type: !10140, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10140 = !DISubroutineType(types: !10141)
!10141 = !{!4019, !4019, !177}
!10142 = !DILocalVariable(name: "d", arg: 1, scope: !10139, file: !3, line: 1035, type: !4019)
!10143 = !DILocation(line: 1035, column: 69, scope: !10139)
!10144 = !DILocalVariable(name: "z", arg: 2, scope: !10139, file: !3, line: 1035, type: !177)
!10145 = !DILocation(line: 1035, column: 76, scope: !10139)
!10146 = !DILocalVariable(name: "branch", scope: !10139, file: !3, line: 1037, type: !4023)
!10147 = !DILocation(line: 1037, column: 9, scope: !10139)
!10148 = !DILocation(line: 1039, column: 11, scope: !10139)
!10149 = !DILocation(line: 1039, column: 14, scope: !10139)
!10150 = !DILocation(line: 1039, column: 22, scope: !10139)
!10151 = !DILocation(line: 1039, column: 9, scope: !10139)
!10152 = !DILocation(line: 1042, column: 6, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10139, file: !3, line: 1042, column: 6)
!10154 = !DILocation(line: 1042, column: 8, scope: !10153)
!10155 = !DILocation(line: 1042, column: 13, scope: !10153)
!10156 = !DILocation(line: 1042, column: 16, scope: !10153)
!10157 = !DILocation(line: 1042, column: 23, scope: !10153)
!10158 = !DILocation(line: 1042, column: 6, scope: !10139)
!10159 = !DILocation(line: 1043, column: 10, scope: !10153)
!10160 = !DILocation(line: 1043, column: 3, scope: !10153)
!10161 = !DILocation(line: 1045, column: 10, scope: !10153)
!10162 = !DILocation(line: 1045, column: 14, scope: !10153)
!10163 = !DILocation(line: 1045, column: 12, scope: !10153)
!10164 = !DILocation(line: 1045, column: 16, scope: !10153)
!10165 = !DILocation(line: 1045, column: 3, scope: !10153)
!10166 = !DILocation(line: 1046, column: 1, scope: !10139)
!10167 = distinct !DISubprogram(name: "tasklet_disable", scope: !152, file: !152, line: 701, type: !4051, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10168 = !DILocalVariable(name: "t", arg: 1, scope: !10167, file: !152, line: 701, type: !4038)
!10169 = !DILocation(line: 701, column: 59, scope: !10167)
!10170 = !DILocation(line: 703, column: 25, scope: !10167)
!10171 = !DILocation(line: 703, column: 2, scope: !10167)
!10172 = !DILocation(line: 704, column: 2, scope: !10167)
!10173 = !DILocation(line: 704, column: 2, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10167, file: !152, line: 704, column: 2)
!10175 = !DILocation(line: 705, column: 2, scope: !10167)
!10176 = !{i32 -2142125171}
!10177 = !DILocation(line: 706, column: 1, scope: !10167)
!10178 = distinct !DISubprogram(name: "log_ar_at_event", scope: !3, file: !3, line: 471, type: !10179, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10179 = !DISubroutineType(types: !10180)
!10180 = !{null, !187, !483, !177, !1982, !177}
!10181 = !DILocalVariable(name: "ohci", arg: 1, scope: !10178, file: !3, line: 471, type: !187)
!10182 = !DILocation(line: 471, column: 45, scope: !10178)
!10183 = !DILocalVariable(name: "dir", arg: 2, scope: !10178, file: !3, line: 472, type: !483)
!10184 = !DILocation(line: 472, column: 13, scope: !10178)
!10185 = !DILocalVariable(name: "speed", arg: 3, scope: !10178, file: !3, line: 472, type: !177)
!10186 = !DILocation(line: 472, column: 22, scope: !10178)
!10187 = !DILocalVariable(name: "header", arg: 4, scope: !10178, file: !3, line: 472, type: !1982)
!10188 = !DILocation(line: 472, column: 34, scope: !10178)
!10189 = !DILocalVariable(name: "evt", arg: 5, scope: !10178, file: !3, line: 472, type: !177)
!10190 = !DILocation(line: 472, column: 46, scope: !10178)
!10191 = !DILocalVariable(name: "tcode", scope: !10178, file: !3, line: 474, type: !177)
!10192 = !DILocation(line: 474, column: 6, scope: !10178)
!10193 = !DILocation(line: 474, column: 14, scope: !10178)
!10194 = !DILocation(line: 474, column: 24, scope: !10178)
!10195 = !DILocation(line: 474, column: 29, scope: !10178)
!10196 = !DILocalVariable(name: "specific", scope: !10178, file: !3, line: 475, type: !10197)
!10197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 96, elements: !2577)
!10198 = !DILocation(line: 475, column: 7, scope: !10178)
!10199 = !DILocation(line: 477, column: 6, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 477, column: 6)
!10201 = !DILocation(line: 477, column: 6, scope: !10178)
!10202 = !DILocation(line: 478, column: 3, scope: !10200)
!10203 = !DILocation(line: 480, column: 6, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 480, column: 6)
!10205 = !DILocation(line: 480, column: 6, scope: !10178)
!10206 = !DILocation(line: 481, column: 8, scope: !10204)
!10207 = !DILocation(line: 481, column: 4, scope: !10204)
!10208 = !DILocation(line: 483, column: 6, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 483, column: 6)
!10210 = !DILocation(line: 483, column: 10, scope: !10209)
!10211 = !DILocation(line: 483, column: 6, scope: !10178)
!10212 = !DILocation(line: 484, column: 3, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 483, column: 37)
!10214 = !DILocation(line: 486, column: 3, scope: !10213)
!10215 = !DILocation(line: 489, column: 10, scope: !10178)
!10216 = !DILocation(line: 489, column: 2, scope: !10178)
!10217 = !DILocation(line: 491, column: 12, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 489, column: 17)
!10219 = !DILocation(line: 492, column: 5, scope: !10218)
!10220 = !DILocation(line: 491, column: 3, scope: !10218)
!10221 = !DILocation(line: 493, column: 3, scope: !10218)
!10222 = !DILocation(line: 495, column: 12, scope: !10218)
!10223 = !DILocation(line: 496, column: 5, scope: !10218)
!10224 = !DILocation(line: 496, column: 15, scope: !10218)
!10225 = !DILocation(line: 496, column: 22, scope: !10218)
!10226 = !DILocation(line: 496, column: 32, scope: !10218)
!10227 = !DILocation(line: 495, column: 3, scope: !10218)
!10228 = !DILocation(line: 497, column: 3, scope: !10218)
!10229 = !DILocation(line: 499, column: 3, scope: !10218)
!10230 = !DILocation(line: 499, column: 15, scope: !10218)
!10231 = !DILocation(line: 500, column: 2, scope: !10218)
!10232 = !DILocation(line: 502, column: 10, scope: !10178)
!10233 = !DILocation(line: 502, column: 2, scope: !10178)
!10234 = !DILocation(line: 504, column: 3, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 502, column: 17)
!10236 = !DILocation(line: 506, column: 3, scope: !10235)
!10237 = !DILocation(line: 508, column: 3, scope: !10235)
!10238 = !DILocation(line: 510, column: 3, scope: !10235)
!10239 = !DILocation(line: 512, column: 3, scope: !10235)
!10240 = !DILocation(line: 517, column: 3, scope: !10235)
!10241 = !DILocation(line: 519, column: 3, scope: !10235)
!10242 = !DILocation(line: 524, column: 2, scope: !10235)
!10243 = !DILocation(line: 525, column: 1, scope: !10178)
!10244 = distinct !DISubprogram(name: "tasklet_enable", scope: !152, file: !152, line: 708, type: !4051, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10245 = !DILocalVariable(name: "v", arg: 1, scope: !10246, file: !10247, line: 106, type: !10250)
!10246 = distinct !DISubprogram(name: "arch_atomic_dec", scope: !10247, file: !10247, line: 106, type: !10248, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10247 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!10248 = !DISubroutineType(types: !10249)
!10249 = !{null, !10250}
!10250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!10251 = !DILocation(line: 106, column: 55, scope: !10246, inlinedAt: !10252)
!10252 = distinct !DILocation(line: 331, column: 2, scope: !10253, inlinedAt: !10255)
!10253 = distinct !DISubprogram(name: "atomic_dec", scope: !10254, file: !10254, line: 328, type: !10248, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10254 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!10255 = distinct !DILocation(line: 711, column: 2, scope: !10244)
!10256 = !DILocalVariable(name: "v", arg: 1, scope: !10257, file: !10258, line: 99, type: !10261)
!10257 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !10258, file: !10258, line: 99, type: !10259, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10258 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!10259 = !DISubroutineType(types: !10260)
!10260 = !{null, !10261, !207}
!10261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10262, size: 64)
!10262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10263)
!10263 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!10264 = !DILocation(line: 99, column: 79, scope: !10257, inlinedAt: !10265)
!10265 = distinct !DILocation(line: 330, column: 2, scope: !10253, inlinedAt: !10255)
!10266 = !DILocalVariable(name: "size", arg: 2, scope: !10257, file: !10258, line: 99, type: !207)
!10267 = !DILocation(line: 99, column: 89, scope: !10257, inlinedAt: !10265)
!10268 = !DILocalVariable(name: "v", arg: 1, scope: !10253, file: !10254, line: 328, type: !10250)
!10269 = !DILocation(line: 328, column: 22, scope: !10253, inlinedAt: !10255)
!10270 = !DILocalVariable(name: "t", arg: 1, scope: !10244, file: !152, line: 708, type: !4038)
!10271 = !DILocation(line: 708, column: 58, scope: !10244)
!10272 = !DILocation(line: 710, column: 2, scope: !10244)
!10273 = !{i32 -2142124958}
!10274 = !DILocation(line: 711, column: 14, scope: !10244)
!10275 = !DILocation(line: 711, column: 17, scope: !10244)
!10276 = !DILocation(line: 330, column: 31, scope: !10253, inlinedAt: !10255)
!10277 = !DILocation(line: 101, column: 20, scope: !10257, inlinedAt: !10265)
!10278 = !DILocation(line: 101, column: 23, scope: !10257, inlinedAt: !10265)
!10279 = !DILocation(line: 101, column: 2, scope: !10257, inlinedAt: !10265)
!10280 = !DILocation(line: 102, column: 2, scope: !10257, inlinedAt: !10265)
!10281 = !DILocation(line: 331, column: 18, scope: !10253, inlinedAt: !10255)
!10282 = !DILocation(line: 109, column: 16, scope: !10246, inlinedAt: !10252)
!10283 = !DILocation(line: 109, column: 19, scope: !10246, inlinedAt: !10252)
!10284 = !DILocation(line: 108, column: 2, scope: !10246, inlinedAt: !10252)
!10285 = !{i32 -2146533977}
!10286 = !DILocation(line: 712, column: 1, scope: !10244)
!10287 = distinct !DISubprogram(name: "tasklet_disable_nosync", scope: !152, file: !152, line: 695, type: !4051, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10288 = !DILocalVariable(name: "v", arg: 1, scope: !10289, file: !10247, line: 93, type: !10250)
!10289 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !10247, file: !10247, line: 93, type: !10248, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10290 = !DILocation(line: 93, column: 55, scope: !10289, inlinedAt: !10291)
!10291 = distinct !DILocation(line: 241, column: 2, scope: !10292, inlinedAt: !10293)
!10292 = distinct !DISubprogram(name: "atomic_inc", scope: !10254, file: !10254, line: 238, type: !10248, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10293 = distinct !DILocation(line: 697, column: 2, scope: !10287)
!10294 = !DILocation(line: 99, column: 79, scope: !10257, inlinedAt: !10295)
!10295 = distinct !DILocation(line: 240, column: 2, scope: !10292, inlinedAt: !10293)
!10296 = !DILocation(line: 99, column: 89, scope: !10257, inlinedAt: !10295)
!10297 = !DILocalVariable(name: "v", arg: 1, scope: !10292, file: !10254, line: 238, type: !10250)
!10298 = !DILocation(line: 238, column: 22, scope: !10292, inlinedAt: !10293)
!10299 = !DILocalVariable(name: "t", arg: 1, scope: !10287, file: !152, line: 695, type: !4038)
!10300 = !DILocation(line: 695, column: 66, scope: !10287)
!10301 = !DILocation(line: 697, column: 14, scope: !10287)
!10302 = !DILocation(line: 697, column: 17, scope: !10287)
!10303 = !DILocation(line: 240, column: 31, scope: !10292, inlinedAt: !10293)
!10304 = !DILocation(line: 101, column: 20, scope: !10257, inlinedAt: !10295)
!10305 = !DILocation(line: 101, column: 23, scope: !10257, inlinedAt: !10295)
!10306 = !DILocation(line: 101, column: 2, scope: !10257, inlinedAt: !10295)
!10307 = !DILocation(line: 102, column: 2, scope: !10257, inlinedAt: !10295)
!10308 = !DILocation(line: 241, column: 18, scope: !10292, inlinedAt: !10293)
!10309 = !DILocation(line: 96, column: 16, scope: !10289, inlinedAt: !10291)
!10310 = !DILocation(line: 96, column: 19, scope: !10289, inlinedAt: !10291)
!10311 = !DILocation(line: 95, column: 2, scope: !10289, inlinedAt: !10291)
!10312 = !{i32 -2146534187}
!10313 = !DILocation(line: 698, column: 2, scope: !10287)
!10314 = !{i32 -2142125401}
!10315 = !DILocation(line: 699, column: 1, scope: !10287)
!10316 = distinct !DISubprogram(name: "kasan_check_write", scope: !10317, file: !10317, line: 38, type: !10318, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10317 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10318 = !DISubroutineType(types: !10319)
!10319 = !{!240, !10261, !7}
!10320 = !DILocalVariable(name: "p", arg: 1, scope: !10316, file: !10317, line: 38, type: !10261)
!10321 = !DILocation(line: 38, column: 59, scope: !10316)
!10322 = !DILocalVariable(name: "size", arg: 2, scope: !10316, file: !10317, line: 38, type: !7)
!10323 = !DILocation(line: 38, column: 75, scope: !10316)
!10324 = !DILocation(line: 40, column: 2, scope: !10316)
!10325 = distinct !DISubprogram(name: "kcsan_check_access", scope: !10326, file: !10326, line: 178, type: !10327, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10326 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10327 = !DISubroutineType(types: !10328)
!10328 = !{null, !10261, !207, !177}
!10329 = !DILocalVariable(name: "ptr", arg: 1, scope: !10325, file: !10326, line: 178, type: !10261)
!10330 = !DILocation(line: 178, column: 60, scope: !10325)
!10331 = !DILocalVariable(name: "size", arg: 2, scope: !10325, file: !10326, line: 178, type: !207)
!10332 = !DILocation(line: 178, column: 72, scope: !10325)
!10333 = !DILocalVariable(name: "type", arg: 3, scope: !10325, file: !10326, line: 179, type: !177)
!10334 = !DILocation(line: 179, column: 15, scope: !10325)
!10335 = !DILocation(line: 179, column: 23, scope: !10325)
!10336 = distinct !DISubprogram(name: "get_cycle_time", scope: !3, file: !3, line: 1709, type: !10337, scopeLine: 1710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10337 = !DISubroutineType(types: !10338)
!10338 = !{!231, !187}
!10339 = !DILocalVariable(name: "ohci", arg: 1, scope: !10336, file: !3, line: 1709, type: !187)
!10340 = !DILocation(line: 1709, column: 43, scope: !10336)
!10341 = !DILocalVariable(name: "c0", scope: !10336, file: !3, line: 1711, type: !231)
!10342 = !DILocation(line: 1711, column: 6, scope: !10336)
!10343 = !DILocalVariable(name: "c1", scope: !10336, file: !3, line: 1711, type: !231)
!10344 = !DILocation(line: 1711, column: 10, scope: !10336)
!10345 = !DILocalVariable(name: "c2", scope: !10336, file: !3, line: 1711, type: !231)
!10346 = !DILocation(line: 1711, column: 14, scope: !10336)
!10347 = !DILocalVariable(name: "t0", scope: !10336, file: !3, line: 1712, type: !231)
!10348 = !DILocation(line: 1712, column: 6, scope: !10336)
!10349 = !DILocalVariable(name: "t1", scope: !10336, file: !3, line: 1712, type: !231)
!10350 = !DILocation(line: 1712, column: 10, scope: !10336)
!10351 = !DILocalVariable(name: "t2", scope: !10336, file: !3, line: 1712, type: !231)
!10352 = !DILocation(line: 1712, column: 14, scope: !10336)
!10353 = !DILocalVariable(name: "diff01", scope: !10336, file: !3, line: 1713, type: !308)
!10354 = !DILocation(line: 1713, column: 6, scope: !10336)
!10355 = !DILocalVariable(name: "diff12", scope: !10336, file: !3, line: 1713, type: !308)
!10356 = !DILocation(line: 1713, column: 14, scope: !10336)
!10357 = !DILocalVariable(name: "i", scope: !10336, file: !3, line: 1714, type: !177)
!10358 = !DILocation(line: 1714, column: 6, scope: !10336)
!10359 = !DILocation(line: 1716, column: 16, scope: !10336)
!10360 = !DILocation(line: 1716, column: 7, scope: !10336)
!10361 = !DILocation(line: 1716, column: 5, scope: !10336)
!10362 = !DILocation(line: 1718, column: 6, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 1718, column: 6)
!10364 = !DILocation(line: 1718, column: 12, scope: !10363)
!10365 = !DILocation(line: 1718, column: 19, scope: !10363)
!10366 = !DILocation(line: 1718, column: 6, scope: !10336)
!10367 = !DILocation(line: 1719, column: 5, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 1718, column: 40)
!10369 = !DILocation(line: 1720, column: 8, scope: !10368)
!10370 = !DILocation(line: 1720, column: 6, scope: !10368)
!10371 = !DILocation(line: 1721, column: 17, scope: !10368)
!10372 = !DILocation(line: 1721, column: 8, scope: !10368)
!10373 = !DILocation(line: 1721, column: 6, scope: !10368)
!10374 = !DILocation(line: 1722, column: 3, scope: !10368)
!10375 = !DILocation(line: 1723, column: 9, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 1722, column: 6)
!10377 = !DILocation(line: 1723, column: 7, scope: !10376)
!10378 = !DILocation(line: 1724, column: 9, scope: !10376)
!10379 = !DILocation(line: 1724, column: 7, scope: !10376)
!10380 = !DILocation(line: 1725, column: 18, scope: !10376)
!10381 = !DILocation(line: 1725, column: 9, scope: !10376)
!10382 = !DILocation(line: 1725, column: 7, scope: !10376)
!10383 = !DILocation(line: 1726, column: 27, scope: !10376)
!10384 = !DILocation(line: 1726, column: 9, scope: !10376)
!10385 = !DILocation(line: 1726, column: 7, scope: !10376)
!10386 = !DILocation(line: 1727, column: 27, scope: !10376)
!10387 = !DILocation(line: 1727, column: 9, scope: !10376)
!10388 = !DILocation(line: 1727, column: 7, scope: !10376)
!10389 = !DILocation(line: 1728, column: 27, scope: !10376)
!10390 = !DILocation(line: 1728, column: 9, scope: !10376)
!10391 = !DILocation(line: 1728, column: 7, scope: !10376)
!10392 = !DILocation(line: 1729, column: 13, scope: !10376)
!10393 = !DILocation(line: 1729, column: 18, scope: !10376)
!10394 = !DILocation(line: 1729, column: 16, scope: !10376)
!10395 = !DILocation(line: 1729, column: 11, scope: !10376)
!10396 = !DILocation(line: 1730, column: 13, scope: !10376)
!10397 = !DILocation(line: 1730, column: 18, scope: !10376)
!10398 = !DILocation(line: 1730, column: 16, scope: !10376)
!10399 = !DILocation(line: 1730, column: 11, scope: !10376)
!10400 = !DILocation(line: 1731, column: 3, scope: !10376)
!10401 = !DILocation(line: 1731, column: 13, scope: !10368)
!10402 = !DILocation(line: 1731, column: 20, scope: !10368)
!10403 = !DILocation(line: 1731, column: 25, scope: !10368)
!10404 = !DILocation(line: 1731, column: 28, scope: !10368)
!10405 = !DILocation(line: 1731, column: 35, scope: !10368)
!10406 = !DILocation(line: 1731, column: 40, scope: !10368)
!10407 = !DILocation(line: 1732, column: 6, scope: !10368)
!10408 = !DILocation(line: 1732, column: 15, scope: !10368)
!10409 = !DILocation(line: 1732, column: 13, scope: !10368)
!10410 = !DILocation(line: 1732, column: 22, scope: !10368)
!10411 = !DILocation(line: 1732, column: 27, scope: !10368)
!10412 = !DILocation(line: 1732, column: 30, scope: !10368)
!10413 = !DILocation(line: 1732, column: 39, scope: !10368)
!10414 = !DILocation(line: 1732, column: 37, scope: !10368)
!10415 = !DILocation(line: 1732, column: 46, scope: !10368)
!10416 = !DILocation(line: 1733, column: 5, scope: !10368)
!10417 = !DILocation(line: 1733, column: 9, scope: !10368)
!10418 = !DILocation(line: 1733, column: 12, scope: !10368)
!10419 = !DILocation(line: 0, scope: !10368)
!10420 = distinct !{!10420, !10374, !10421}
!10421 = !DILocation(line: 1733, column: 16, scope: !10368)
!10422 = !DILocation(line: 1734, column: 2, scope: !10368)
!10423 = !DILocation(line: 1736, column: 9, scope: !10336)
!10424 = !DILocation(line: 1736, column: 2, scope: !10336)
!10425 = distinct !DISubprogram(name: "update_bus_time", scope: !3, file: !3, line: 1745, type: !10337, scopeLine: 1746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10426 = !DILocalVariable(name: "ohci", arg: 1, scope: !10425, file: !3, line: 1745, type: !187)
!10427 = !DILocation(line: 1745, column: 44, scope: !10425)
!10428 = !DILocalVariable(name: "cycle_time_seconds", scope: !10425, file: !3, line: 1747, type: !231)
!10429 = !DILocation(line: 1747, column: 6, scope: !10425)
!10430 = !DILocation(line: 1747, column: 42, scope: !10425)
!10431 = !DILocation(line: 1747, column: 27, scope: !10425)
!10432 = !DILocation(line: 1747, column: 48, scope: !10425)
!10433 = !DILocation(line: 1749, column: 6, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 1749, column: 6)
!10435 = !DILocation(line: 1749, column: 6, scope: !10425)
!10436 = !DILocation(line: 1750, column: 13, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 1749, column: 41)
!10438 = !DILocation(line: 1750, column: 3, scope: !10437)
!10439 = !DILocation(line: 1751, column: 21, scope: !10437)
!10440 = !DILocation(line: 1751, column: 56, scope: !10437)
!10441 = !DILocation(line: 1752, column: 21, scope: !10437)
!10442 = !DILocation(line: 1752, column: 40, scope: !10437)
!10443 = !DILocation(line: 1751, column: 65, scope: !10437)
!10444 = !DILocation(line: 1751, column: 3, scope: !10437)
!10445 = !DILocation(line: 1751, column: 9, scope: !10437)
!10446 = !DILocation(line: 1751, column: 18, scope: !10437)
!10447 = !DILocation(line: 1753, column: 3, scope: !10437)
!10448 = !DILocation(line: 1753, column: 9, scope: !10437)
!10449 = !DILocation(line: 1753, column: 26, scope: !10437)
!10450 = !DILocation(line: 1754, column: 2, scope: !10437)
!10451 = !DILocation(line: 1756, column: 7, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 1756, column: 6)
!10453 = !DILocation(line: 1756, column: 13, scope: !10452)
!10454 = !DILocation(line: 1756, column: 22, scope: !10452)
!10455 = !DILocation(line: 1756, column: 34, scope: !10452)
!10456 = !DILocation(line: 1756, column: 53, scope: !10452)
!10457 = !DILocation(line: 1756, column: 30, scope: !10452)
!10458 = !DILocation(line: 1756, column: 6, scope: !10425)
!10459 = !DILocation(line: 1757, column: 3, scope: !10452)
!10460 = !DILocation(line: 1757, column: 9, scope: !10452)
!10461 = !DILocation(line: 1757, column: 18, scope: !10452)
!10462 = !DILocation(line: 1759, column: 9, scope: !10425)
!10463 = !DILocation(line: 1759, column: 15, scope: !10425)
!10464 = !DILocation(line: 1759, column: 26, scope: !10425)
!10465 = !DILocation(line: 1759, column: 24, scope: !10425)
!10466 = !DILocation(line: 1759, column: 2, scope: !10425)
!10467 = distinct !DISubprogram(name: "cycle_timer_ticks", scope: !3, file: !3, line: 1683, type: !10468, scopeLine: 1684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10468 = !DISubroutineType(types: !10469)
!10469 = !{!231, !231}
!10470 = !DILocalVariable(name: "cycle_timer", arg: 1, scope: !10467, file: !3, line: 1683, type: !231)
!10471 = !DILocation(line: 1683, column: 34, scope: !10467)
!10472 = !DILocalVariable(name: "ticks", scope: !10467, file: !3, line: 1685, type: !231)
!10473 = !DILocation(line: 1685, column: 6, scope: !10467)
!10474 = !DILocation(line: 1687, column: 10, scope: !10467)
!10475 = !DILocation(line: 1687, column: 22, scope: !10467)
!10476 = !DILocation(line: 1687, column: 8, scope: !10467)
!10477 = !DILocation(line: 1688, column: 20, scope: !10467)
!10478 = !DILocation(line: 1688, column: 32, scope: !10467)
!10479 = !DILocation(line: 1688, column: 39, scope: !10467)
!10480 = !DILocation(line: 1688, column: 16, scope: !10467)
!10481 = !DILocation(line: 1688, column: 8, scope: !10467)
!10482 = !DILocation(line: 1689, column: 28, scope: !10467)
!10483 = !DILocation(line: 1689, column: 40, scope: !10467)
!10484 = !DILocation(line: 1689, column: 25, scope: !10467)
!10485 = !DILocation(line: 1689, column: 8, scope: !10467)
!10486 = !DILocation(line: 1691, column: 9, scope: !10467)
!10487 = !DILocation(line: 1691, column: 2, scope: !10467)
!10488 = distinct !DISubprogram(name: "handle_it_packet", scope: !3, file: !3, line: 2880, type: !4081, scopeLine: 2883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10489 = !DILocalVariable(name: "context", arg: 1, scope: !10488, file: !3, line: 2880, type: !4083)
!10490 = !DILocation(line: 2880, column: 45, scope: !10488)
!10491 = !DILocalVariable(name: "d", arg: 2, scope: !10488, file: !3, line: 2881, type: !4019)
!10492 = !DILocation(line: 2881, column: 27, scope: !10488)
!10493 = !DILocalVariable(name: "last", arg: 3, scope: !10488, file: !3, line: 2882, type: !4019)
!10494 = !DILocation(line: 2882, column: 27, scope: !10488)
!10495 = !DILocalVariable(name: "ctx", scope: !10488, file: !3, line: 2884, type: !4089)
!10496 = !DILocation(line: 2884, column: 22, scope: !10488)
!10497 = !DILocalVariable(name: "__mptr", scope: !10498, file: !3, line: 2885, type: !175)
!10498 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 2885, column: 3)
!10499 = !DILocation(line: 2885, column: 3, scope: !10498)
!10500 = !DILocation(line: 2885, column: 3, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 2885, column: 3)
!10502 = !DILocalVariable(name: "pd", scope: !10488, file: !3, line: 2886, type: !4019)
!10503 = !DILocation(line: 2886, column: 21, scope: !10488)
!10504 = !DILocalVariable(name: "ctx_hdr", scope: !10488, file: !3, line: 2887, type: !4109)
!10505 = !DILocation(line: 2887, column: 10, scope: !10488)
!10506 = !DILocation(line: 2889, column: 12, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 2889, column: 2)
!10508 = !DILocation(line: 2889, column: 10, scope: !10507)
!10509 = !DILocation(line: 2889, column: 7, scope: !10507)
!10510 = !DILocation(line: 2889, column: 15, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10507, file: !3, line: 2889, column: 2)
!10512 = !DILocation(line: 2889, column: 21, scope: !10511)
!10513 = !DILocation(line: 2889, column: 18, scope: !10511)
!10514 = !DILocation(line: 2889, column: 2, scope: !10507)
!10515 = !DILocation(line: 2890, column: 7, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 2890, column: 7)
!10517 = !DILocation(line: 2890, column: 11, scope: !10516)
!10518 = !DILocation(line: 2890, column: 7, scope: !10511)
!10519 = !DILocation(line: 2891, column: 4, scope: !10516)
!10520 = !DILocation(line: 2889, column: 29, scope: !10511)
!10521 = !DILocation(line: 2889, column: 2, scope: !10511)
!10522 = distinct !{!10522, !10514, !10523}
!10523 = !DILocation(line: 2891, column: 4, scope: !10507)
!10524 = !DILocation(line: 2892, column: 6, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 2892, column: 6)
!10526 = !DILocation(line: 2892, column: 11, scope: !10525)
!10527 = !DILocation(line: 2892, column: 9, scope: !10525)
!10528 = !DILocation(line: 2892, column: 6, scope: !10488)
!10529 = !DILocation(line: 2894, column: 3, scope: !10525)
!10530 = !DILocation(line: 2896, column: 25, scope: !10488)
!10531 = !DILocation(line: 2896, column: 34, scope: !10488)
!10532 = !DILocation(line: 2896, column: 2, scope: !10488)
!10533 = !DILocation(line: 2898, column: 6, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 2898, column: 6)
!10535 = !DILocation(line: 2898, column: 11, scope: !10534)
!10536 = !DILocation(line: 2898, column: 25, scope: !10534)
!10537 = !DILocation(line: 2898, column: 29, scope: !10534)
!10538 = !DILocation(line: 2898, column: 6, scope: !10488)
!10539 = !DILocation(line: 2899, column: 7, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 2899, column: 7)
!10541 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 2898, column: 42)
!10542 = !DILocation(line: 2899, column: 12, scope: !10540)
!10543 = !DILocation(line: 2899, column: 17, scope: !10540)
!10544 = !DILocation(line: 2899, column: 7, scope: !10541)
!10545 = !DILocation(line: 2900, column: 4, scope: !10540)
!10546 = !DILocation(line: 2901, column: 25, scope: !10541)
!10547 = !DILocation(line: 2901, column: 3, scope: !10541)
!10548 = !DILocation(line: 2902, column: 2, scope: !10541)
!10549 = !DILocation(line: 2904, column: 12, scope: !10488)
!10550 = !DILocation(line: 2904, column: 17, scope: !10488)
!10551 = !DILocation(line: 2904, column: 26, scope: !10488)
!10552 = !DILocation(line: 2904, column: 31, scope: !10488)
!10553 = !DILocation(line: 2904, column: 24, scope: !10488)
!10554 = !DILocation(line: 2904, column: 10, scope: !10488)
!10555 = !DILocation(line: 2905, column: 24, scope: !10488)
!10556 = !DILocation(line: 2905, column: 2, scope: !10488)
!10557 = !DILocation(line: 2905, column: 7, scope: !10488)
!10558 = !DILocation(line: 2905, column: 22, scope: !10488)
!10559 = !DILocation(line: 2907, column: 13, scope: !10488)
!10560 = !DILocation(line: 2907, column: 3, scope: !10488)
!10561 = !DILocation(line: 2907, column: 11, scope: !10488)
!10562 = !DILocation(line: 2909, column: 2, scope: !10488)
!10563 = !DILocation(line: 2909, column: 7, scope: !10488)
!10564 = !DILocation(line: 2909, column: 21, scope: !10488)
!10565 = !DILocation(line: 2911, column: 6, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 2911, column: 6)
!10567 = !DILocation(line: 2911, column: 12, scope: !10566)
!10568 = !DILocation(line: 2911, column: 20, scope: !10566)
!10569 = !DILocation(line: 2911, column: 6, scope: !10488)
!10570 = !DILocation(line: 2912, column: 25, scope: !10566)
!10571 = !DILocation(line: 2912, column: 3, scope: !10566)
!10572 = !DILocation(line: 2914, column: 2, scope: !10488)
!10573 = !DILocation(line: 2915, column: 1, scope: !10488)
!10574 = distinct !DISubprogram(name: "handle_ir_packet_per_buffer", scope: !3, file: !3, line: 2757, type: !4081, scopeLine: 2760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10575 = !DILocalVariable(name: "context", arg: 1, scope: !10574, file: !3, line: 2757, type: !4083)
!10576 = !DILocation(line: 2757, column: 56, scope: !10574)
!10577 = !DILocalVariable(name: "d", arg: 2, scope: !10574, file: !3, line: 2758, type: !4019)
!10578 = !DILocation(line: 2758, column: 31, scope: !10574)
!10579 = !DILocalVariable(name: "last", arg: 3, scope: !10574, file: !3, line: 2759, type: !4019)
!10580 = !DILocation(line: 2759, column: 31, scope: !10574)
!10581 = !DILocalVariable(name: "ctx", scope: !10574, file: !3, line: 2761, type: !4089)
!10582 = !DILocation(line: 2761, column: 22, scope: !10574)
!10583 = !DILocalVariable(name: "__mptr", scope: !10584, file: !3, line: 2762, type: !175)
!10584 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 2762, column: 3)
!10585 = !DILocation(line: 2762, column: 3, scope: !10584)
!10586 = !DILocation(line: 2762, column: 3, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10584, file: !3, line: 2762, column: 3)
!10588 = !DILocalVariable(name: "pd", scope: !10574, file: !3, line: 2763, type: !4019)
!10589 = !DILocation(line: 2763, column: 21, scope: !10574)
!10590 = !DILocalVariable(name: "buffer_dma", scope: !10574, file: !3, line: 2764, type: !231)
!10591 = !DILocation(line: 2764, column: 6, scope: !10574)
!10592 = !DILocation(line: 2766, column: 12, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 2766, column: 2)
!10594 = !DILocation(line: 2766, column: 10, scope: !10593)
!10595 = !DILocation(line: 2766, column: 7, scope: !10593)
!10596 = !DILocation(line: 2766, column: 15, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 2766, column: 2)
!10598 = !DILocation(line: 2766, column: 21, scope: !10597)
!10599 = !DILocation(line: 2766, column: 18, scope: !10597)
!10600 = !DILocation(line: 2766, column: 2, scope: !10593)
!10601 = !DILocation(line: 2767, column: 7, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10597, file: !3, line: 2767, column: 7)
!10603 = !DILocation(line: 2767, column: 11, scope: !10602)
!10604 = !DILocation(line: 2767, column: 7, scope: !10597)
!10605 = !DILocation(line: 2768, column: 4, scope: !10602)
!10606 = !DILocation(line: 2766, column: 29, scope: !10597)
!10607 = !DILocation(line: 2766, column: 2, scope: !10597)
!10608 = distinct !{!10608, !10600, !10609}
!10609 = !DILocation(line: 2768, column: 4, scope: !10593)
!10610 = !DILocation(line: 2769, column: 6, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 2769, column: 6)
!10612 = !DILocation(line: 2769, column: 11, scope: !10611)
!10613 = !DILocation(line: 2769, column: 9, scope: !10611)
!10614 = !DILocation(line: 2769, column: 6, scope: !10574)
!10615 = !DILocation(line: 2771, column: 3, scope: !10611)
!10616 = !DILocation(line: 2773, column: 2, scope: !10574)
!10617 = !DILocation(line: 2773, column: 11, scope: !10574)
!10618 = !DILocation(line: 2773, column: 14, scope: !10574)
!10619 = !DILocation(line: 2773, column: 22, scope: !10574)
!10620 = !DILocation(line: 2773, column: 9, scope: !10574)
!10621 = !DILocation(line: 2774, column: 4, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 2773, column: 64)
!10623 = !DILocation(line: 2775, column: 16, scope: !10622)
!10624 = !DILocation(line: 2775, column: 14, scope: !10622)
!10625 = !DILocation(line: 2776, column: 33, scope: !10622)
!10626 = !DILocation(line: 2776, column: 42, scope: !10622)
!10627 = !DILocation(line: 2776, column: 48, scope: !10622)
!10628 = !DILocation(line: 2776, column: 53, scope: !10622)
!10629 = !DILocation(line: 2777, column: 12, scope: !10622)
!10630 = !DILocation(line: 2777, column: 23, scope: !10622)
!10631 = !DILocation(line: 2778, column: 12, scope: !10622)
!10632 = !DILocation(line: 2778, column: 23, scope: !10622)
!10633 = !DILocation(line: 2779, column: 12, scope: !10622)
!10634 = !DILocation(line: 2776, column: 3, scope: !10622)
!10635 = distinct !{!10635, !10616, !10636}
!10636 = !DILocation(line: 2781, column: 2, scope: !10574)
!10637 = !DILocation(line: 2783, column: 19, scope: !10574)
!10638 = !DILocation(line: 2783, column: 33, scope: !10574)
!10639 = !DILocation(line: 2783, column: 38, scope: !10574)
!10640 = !DILocation(line: 2783, column: 24, scope: !10574)
!10641 = !DILocation(line: 2783, column: 2, scope: !10574)
!10642 = !DILocation(line: 2785, column: 6, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 2785, column: 6)
!10644 = !DILocation(line: 2785, column: 12, scope: !10643)
!10645 = !DILocation(line: 2785, column: 20, scope: !10643)
!10646 = !DILocation(line: 2785, column: 6, scope: !10574)
!10647 = !DILocation(line: 2786, column: 25, scope: !10643)
!10648 = !DILocation(line: 2786, column: 3, scope: !10643)
!10649 = !DILocation(line: 2788, column: 2, scope: !10574)
!10650 = !DILocation(line: 2789, column: 1, scope: !10574)
!10651 = distinct !DISubprogram(name: "handle_ir_buffer_fill", scope: !3, file: !3, line: 2792, type: !4081, scopeLine: 2795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10652 = !DILocalVariable(name: "context", arg: 1, scope: !10651, file: !3, line: 2792, type: !4083)
!10653 = !DILocation(line: 2792, column: 50, scope: !10651)
!10654 = !DILocalVariable(name: "d", arg: 2, scope: !10651, file: !3, line: 2793, type: !4019)
!10655 = !DILocation(line: 2793, column: 25, scope: !10651)
!10656 = !DILocalVariable(name: "last", arg: 3, scope: !10651, file: !3, line: 2794, type: !4019)
!10657 = !DILocation(line: 2794, column: 25, scope: !10651)
!10658 = !DILocalVariable(name: "ctx", scope: !10651, file: !3, line: 2796, type: !4089)
!10659 = !DILocation(line: 2796, column: 22, scope: !10651)
!10660 = !DILocalVariable(name: "__mptr", scope: !10661, file: !3, line: 2797, type: !175)
!10661 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 2797, column: 3)
!10662 = !DILocation(line: 2797, column: 3, scope: !10661)
!10663 = !DILocation(line: 2797, column: 3, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 2797, column: 3)
!10665 = !DILocalVariable(name: "req_count", scope: !10651, file: !3, line: 2798, type: !7)
!10666 = !DILocation(line: 2798, column: 15, scope: !10651)
!10667 = !DILocalVariable(name: "res_count", scope: !10651, file: !3, line: 2798, type: !7)
!10668 = !DILocation(line: 2798, column: 26, scope: !10651)
!10669 = !DILocalVariable(name: "completed", scope: !10651, file: !3, line: 2798, type: !7)
!10670 = !DILocation(line: 2798, column: 37, scope: !10651)
!10671 = !DILocalVariable(name: "buffer_dma", scope: !10651, file: !3, line: 2799, type: !231)
!10672 = !DILocation(line: 2799, column: 6, scope: !10651)
!10673 = !DILocation(line: 2801, column: 14, scope: !10651)
!10674 = !DILocation(line: 2801, column: 12, scope: !10651)
!10675 = !DILocation(line: 2802, column: 14, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 2802, column: 14)
!10677 = !DILocation(line: 2802, column: 14, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 2802, column: 14)
!10679 = !DILocation(line: 2802, column: 14, scope: !10651)
!10680 = !DILocation(line: 2802, column: 12, scope: !10651)
!10681 = !DILocation(line: 2803, column: 14, scope: !10651)
!10682 = !DILocation(line: 2803, column: 26, scope: !10651)
!10683 = !DILocation(line: 2803, column: 24, scope: !10651)
!10684 = !DILocation(line: 2803, column: 12, scope: !10651)
!10685 = !DILocation(line: 2804, column: 15, scope: !10651)
!10686 = !DILocation(line: 2804, column: 13, scope: !10651)
!10687 = !DILocation(line: 2806, column: 6, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 2806, column: 6)
!10689 = !DILocation(line: 2806, column: 16, scope: !10688)
!10690 = !DILocation(line: 2806, column: 6, scope: !10651)
!10691 = !DILocation(line: 2807, column: 24, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2806, column: 21)
!10693 = !DILocation(line: 2807, column: 3, scope: !10692)
!10694 = !DILocation(line: 2807, column: 8, scope: !10692)
!10695 = !DILocation(line: 2807, column: 22, scope: !10692)
!10696 = !DILocation(line: 2808, column: 23, scope: !10692)
!10697 = !DILocation(line: 2808, column: 3, scope: !10692)
!10698 = !DILocation(line: 2808, column: 8, scope: !10692)
!10699 = !DILocation(line: 2808, column: 21, scope: !10692)
!10700 = !DILocation(line: 2809, column: 2, scope: !10692)
!10701 = !DILocation(line: 2811, column: 6, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 2811, column: 6)
!10703 = !DILocation(line: 2811, column: 16, scope: !10702)
!10704 = !DILocation(line: 2811, column: 6, scope: !10651)
!10705 = !DILocation(line: 2813, column: 3, scope: !10702)
!10706 = !DILocation(line: 2815, column: 32, scope: !10651)
!10707 = !DILocation(line: 2815, column: 41, scope: !10651)
!10708 = !DILocation(line: 2815, column: 47, scope: !10651)
!10709 = !DILocation(line: 2815, column: 52, scope: !10651)
!10710 = !DILocation(line: 2816, column: 11, scope: !10651)
!10711 = !DILocation(line: 2816, column: 22, scope: !10651)
!10712 = !DILocation(line: 2817, column: 11, scope: !10651)
!10713 = !DILocation(line: 2817, column: 22, scope: !10651)
!10714 = !DILocation(line: 2818, column: 11, scope: !10651)
!10715 = !DILocation(line: 2815, column: 2, scope: !10651)
!10716 = !DILocation(line: 2820, column: 6, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 2820, column: 6)
!10718 = !DILocation(line: 2820, column: 12, scope: !10717)
!10719 = !DILocation(line: 2820, column: 20, scope: !10717)
!10720 = !DILocation(line: 2820, column: 6, scope: !10651)
!10721 = !DILocation(line: 2821, column: 3, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10717, file: !3, line: 2820, column: 58)
!10723 = !DILocation(line: 2821, column: 8, scope: !10722)
!10724 = !DILocation(line: 2821, column: 13, scope: !10722)
!10725 = !DILocation(line: 2821, column: 22, scope: !10722)
!10726 = !DILocation(line: 2821, column: 26, scope: !10722)
!10727 = !DILocation(line: 2821, column: 31, scope: !10722)
!10728 = !DILocation(line: 2822, column: 11, scope: !10722)
!10729 = !DILocation(line: 2822, column: 24, scope: !10722)
!10730 = !DILocation(line: 2822, column: 22, scope: !10722)
!10731 = !DILocation(line: 2823, column: 11, scope: !10722)
!10732 = !DILocation(line: 2823, column: 16, scope: !10722)
!10733 = !DILocation(line: 2823, column: 21, scope: !10722)
!10734 = !DILocation(line: 2824, column: 3, scope: !10722)
!10735 = !DILocation(line: 2824, column: 8, scope: !10722)
!10736 = !DILocation(line: 2824, column: 21, scope: !10722)
!10737 = !DILocation(line: 2825, column: 2, scope: !10722)
!10738 = !DILocation(line: 2827, column: 2, scope: !10651)
!10739 = !DILocation(line: 2828, column: 1, scope: !10651)
!10740 = distinct !DISubprogram(name: "ERR_PTR", scope: !10741, file: !10741, line: 24, type: !10742, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10741 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!10742 = !DISubroutineType(types: !10743)
!10743 = !{!175, !102}
!10744 = !DILocalVariable(name: "error", arg: 1, scope: !10740, file: !10741, line: 24, type: !102)
!10745 = !DILocation(line: 24, column: 48, scope: !10740)
!10746 = !DILocation(line: 26, column: 18, scope: !10740)
!10747 = !DILocation(line: 26, column: 9, scope: !10740)
!10748 = !DILocation(line: 26, column: 2, scope: !10740)
!10749 = distinct !DISubprogram(name: "set_multichannel_mask", scope: !3, file: !3, line: 2917, type: !10750, scopeLine: 2918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10750 = !DISubroutineType(types: !10751)
!10751 = !{null, !187, !179}
!10752 = !DILocalVariable(name: "ohci", arg: 1, scope: !10749, file: !3, line: 2917, type: !187)
!10753 = !DILocation(line: 2917, column: 51, scope: !10749)
!10754 = !DILocalVariable(name: "channels", arg: 2, scope: !10749, file: !3, line: 2917, type: !179)
!10755 = !DILocation(line: 2917, column: 61, scope: !10749)
!10756 = !DILocalVariable(name: "hi", scope: !10749, file: !3, line: 2919, type: !231)
!10757 = !DILocation(line: 2919, column: 6, scope: !10749)
!10758 = !DILocation(line: 2919, column: 11, scope: !10749)
!10759 = !DILocation(line: 2919, column: 20, scope: !10749)
!10760 = !DILocalVariable(name: "lo", scope: !10749, file: !3, line: 2919, type: !231)
!10761 = !DILocation(line: 2919, column: 27, scope: !10749)
!10762 = !DILocation(line: 2919, column: 32, scope: !10749)
!10763 = !DILocation(line: 2921, column: 12, scope: !10749)
!10764 = !DILocation(line: 2921, column: 52, scope: !10749)
!10765 = !DILocation(line: 2921, column: 51, scope: !10749)
!10766 = !DILocation(line: 2921, column: 2, scope: !10749)
!10767 = !DILocation(line: 2922, column: 12, scope: !10749)
!10768 = !DILocation(line: 2922, column: 52, scope: !10749)
!10769 = !DILocation(line: 2922, column: 51, scope: !10749)
!10770 = !DILocation(line: 2922, column: 2, scope: !10749)
!10771 = !DILocation(line: 2923, column: 12, scope: !10749)
!10772 = !DILocation(line: 2923, column: 49, scope: !10749)
!10773 = !DILocation(line: 2923, column: 2, scope: !10749)
!10774 = !DILocation(line: 2924, column: 12, scope: !10749)
!10775 = !DILocation(line: 2924, column: 49, scope: !10749)
!10776 = !DILocation(line: 2924, column: 2, scope: !10749)
!10777 = !DILocation(line: 2925, column: 22, scope: !10749)
!10778 = !DILocation(line: 2925, column: 2, scope: !10749)
!10779 = !DILocation(line: 2925, column: 8, scope: !10749)
!10780 = !DILocation(line: 2925, column: 20, scope: !10749)
!10781 = !DILocation(line: 2926, column: 1, scope: !10749)
!10782 = distinct !DISubprogram(name: "sync_it_packet_for_cpu", scope: !3, file: !3, line: 2843, type: !10783, scopeLine: 2845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10783 = !DISubroutineType(types: !10784)
!10784 = !{null, !4083, !4019}
!10785 = !DILocalVariable(name: "context", arg: 1, scope: !10782, file: !3, line: 2843, type: !4083)
!10786 = !DILocation(line: 2843, column: 59, scope: !10782)
!10787 = !DILocalVariable(name: "pd", arg: 2, scope: !10782, file: !3, line: 2844, type: !4019)
!10788 = !DILocation(line: 2844, column: 27, scope: !10782)
!10789 = !DILocalVariable(name: "control", scope: !10782, file: !3, line: 2846, type: !4023)
!10790 = !DILocation(line: 2846, column: 9, scope: !10782)
!10791 = !DILocalVariable(name: "buffer_dma", scope: !10782, file: !3, line: 2847, type: !231)
!10792 = !DILocation(line: 2847, column: 6, scope: !10782)
!10793 = !DILocation(line: 2850, column: 6, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 2850, column: 6)
!10795 = !DILocation(line: 2850, column: 10, scope: !10794)
!10796 = !DILocation(line: 2850, column: 18, scope: !10794)
!10797 = !DILocation(line: 2850, column: 6, scope: !10782)
!10798 = !DILocation(line: 2851, column: 3, scope: !10794)
!10799 = !DILocation(line: 2854, column: 5, scope: !10782)
!10800 = !DILocation(line: 2861, column: 7, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 2861, column: 6)
!10802 = !DILocation(line: 2861, column: 37, scope: !10801)
!10803 = !DILocation(line: 2862, column: 7, scope: !10801)
!10804 = !DILocation(line: 2862, column: 16, scope: !10801)
!10805 = !DILocation(line: 2862, column: 37, scope: !10801)
!10806 = !DILocation(line: 2861, column: 50, scope: !10801)
!10807 = !DILocation(line: 2861, column: 6, scope: !10782)
!10808 = !DILocation(line: 2863, column: 7, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 2863, column: 7)
!10810 = distinct !DILexicalBlock(scope: !10801, file: !3, line: 2862, column: 51)
!10811 = !DILocation(line: 2863, column: 11, scope: !10809)
!10812 = !DILocation(line: 2863, column: 19, scope: !10809)
!10813 = !DILocation(line: 2863, column: 7, scope: !10810)
!10814 = !DILocation(line: 2864, column: 4, scope: !10809)
!10815 = !DILocation(line: 2865, column: 5, scope: !10810)
!10816 = !DILocation(line: 2866, column: 2, scope: !10810)
!10817 = !DILocation(line: 2868, column: 2, scope: !10782)
!10818 = !DILocation(line: 2869, column: 16, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 2868, column: 5)
!10820 = !DILocation(line: 2869, column: 14, scope: !10819)
!10821 = !DILocation(line: 2870, column: 33, scope: !10819)
!10822 = !DILocation(line: 2870, column: 42, scope: !10819)
!10823 = !DILocation(line: 2870, column: 48, scope: !10819)
!10824 = !DILocation(line: 2870, column: 53, scope: !10819)
!10825 = !DILocation(line: 2871, column: 12, scope: !10819)
!10826 = !DILocation(line: 2871, column: 23, scope: !10819)
!10827 = !DILocation(line: 2872, column: 12, scope: !10819)
!10828 = !DILocation(line: 2872, column: 23, scope: !10819)
!10829 = !DILocation(line: 2873, column: 12, scope: !10819)
!10830 = !DILocation(line: 2870, column: 3, scope: !10819)
!10831 = !DILocation(line: 2875, column: 13, scope: !10819)
!10832 = !DILocation(line: 2875, column: 17, scope: !10819)
!10833 = !DILocation(line: 2875, column: 11, scope: !10819)
!10834 = !DILocation(line: 2876, column: 5, scope: !10819)
!10835 = !DILocation(line: 2877, column: 2, scope: !10819)
!10836 = !DILocation(line: 2877, column: 13, scope: !10782)
!10837 = !DILocation(line: 2877, column: 21, scope: !10782)
!10838 = !DILocation(line: 2877, column: 11, scope: !10782)
!10839 = distinct !{!10839, !10817, !10840}
!10840 = !DILocation(line: 2877, column: 61, scope: !10782)
!10841 = !DILocation(line: 2878, column: 1, scope: !10782)
!10842 = distinct !DISubprogram(name: "flush_iso_completions", scope: !3, file: !3, line: 2722, type: !10843, scopeLine: 2723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10843 = !DISubroutineType(types: !10844)
!10844 = !{null, !4089}
!10845 = !DILocalVariable(name: "ctx", arg: 1, scope: !10842, file: !3, line: 2722, type: !4089)
!10846 = !DILocation(line: 2722, column: 55, scope: !10842)
!10847 = !DILocation(line: 2724, column: 2, scope: !10842)
!10848 = !DILocation(line: 2724, column: 7, scope: !10842)
!10849 = !DILocation(line: 2724, column: 12, scope: !10842)
!10850 = !DILocation(line: 2724, column: 21, scope: !10842)
!10851 = !DILocation(line: 2724, column: 25, scope: !10842)
!10852 = !DILocation(line: 2724, column: 30, scope: !10842)
!10853 = !DILocation(line: 2724, column: 36, scope: !10842)
!10854 = !DILocation(line: 2724, column: 41, scope: !10842)
!10855 = !DILocation(line: 2725, column: 10, scope: !10842)
!10856 = !DILocation(line: 2725, column: 15, scope: !10842)
!10857 = !DILocation(line: 2725, column: 30, scope: !10842)
!10858 = !DILocation(line: 2725, column: 35, scope: !10842)
!10859 = !DILocation(line: 2726, column: 10, scope: !10842)
!10860 = !DILocation(line: 2726, column: 15, scope: !10842)
!10861 = !DILocation(line: 2726, column: 20, scope: !10842)
!10862 = !DILocation(line: 2727, column: 2, scope: !10842)
!10863 = !DILocation(line: 2727, column: 7, scope: !10842)
!10864 = !DILocation(line: 2727, column: 21, scope: !10842)
!10865 = !DILocation(line: 2728, column: 1, scope: !10842)
!10866 = distinct !DISubprogram(name: "dma_sync_single_range_for_cpu", scope: !4577, file: !4577, line: 289, type: !10867, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10867 = !DISubroutineType(types: !10868)
!10868 = !{null, !3184, !238, !176, !207, !93}
!10869 = !DILocalVariable(name: "dev", arg: 1, scope: !10866, file: !4577, line: 289, type: !3184)
!10870 = !DILocation(line: 289, column: 65, scope: !10866)
!10871 = !DILocalVariable(name: "addr", arg: 2, scope: !10866, file: !4577, line: 290, type: !238)
!10872 = !DILocation(line: 290, column: 14, scope: !10866)
!10873 = !DILocalVariable(name: "offset", arg: 3, scope: !10866, file: !4577, line: 290, type: !176)
!10874 = !DILocation(line: 290, column: 34, scope: !10866)
!10875 = !DILocalVariable(name: "size", arg: 4, scope: !10866, file: !4577, line: 290, type: !207)
!10876 = !DILocation(line: 290, column: 49, scope: !10866)
!10877 = !DILocalVariable(name: "dir", arg: 5, scope: !10866, file: !4577, line: 291, type: !93)
!10878 = !DILocation(line: 291, column: 27, scope: !10866)
!10879 = !DILocation(line: 293, column: 33, scope: !10866)
!10880 = !DILocation(line: 293, column: 38, scope: !10866)
!10881 = !DILocation(line: 293, column: 45, scope: !10866)
!10882 = !DILocation(line: 293, column: 43, scope: !10866)
!10883 = !DILocation(line: 293, column: 53, scope: !10866)
!10884 = !DILocation(line: 293, column: 59, scope: !10866)
!10885 = !DILocation(line: 293, column: 9, scope: !10866)
!10886 = !DILocation(line: 293, column: 2, scope: !10866)
!10887 = distinct !DISubprogram(name: "copy_iso_headers", scope: !3, file: !3, line: 2730, type: !10888, scopeLine: 2731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10888 = !DISubroutineType(types: !10889)
!10889 = !{null, !4089, !10890}
!10890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10891, size: 64)
!10891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !231)
!10892 = !DILocalVariable(name: "ctx", arg: 1, scope: !10887, file: !3, line: 2730, type: !4089)
!10893 = !DILocation(line: 2730, column: 50, scope: !10887)
!10894 = !DILocalVariable(name: "dma_hdr", arg: 2, scope: !10887, file: !3, line: 2730, type: !10890)
!10895 = !DILocation(line: 2730, column: 66, scope: !10887)
!10896 = !DILocalVariable(name: "ctx_hdr", scope: !10887, file: !3, line: 2732, type: !1982)
!10897 = !DILocation(line: 2732, column: 7, scope: !10887)
!10898 = !DILocation(line: 2734, column: 6, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 2734, column: 6)
!10900 = !DILocation(line: 2734, column: 11, scope: !10899)
!10901 = !DILocation(line: 2734, column: 27, scope: !10899)
!10902 = !DILocation(line: 2734, column: 32, scope: !10899)
!10903 = !DILocation(line: 2734, column: 37, scope: !10899)
!10904 = !DILocation(line: 2734, column: 25, scope: !10899)
!10905 = !DILocation(line: 2734, column: 49, scope: !10899)
!10906 = !DILocation(line: 2734, column: 6, scope: !10887)
!10907 = !DILocation(line: 2735, column: 7, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 2735, column: 7)
!10909 = distinct !DILexicalBlock(scope: !10899, file: !3, line: 2734, column: 62)
!10910 = !DILocation(line: 2735, column: 12, scope: !10908)
!10911 = !DILocation(line: 2735, column: 17, scope: !10908)
!10912 = !DILocation(line: 2735, column: 7, scope: !10909)
!10913 = !DILocation(line: 2736, column: 4, scope: !10908)
!10914 = !DILocation(line: 2737, column: 25, scope: !10909)
!10915 = !DILocation(line: 2737, column: 3, scope: !10909)
!10916 = !DILocation(line: 2738, column: 2, scope: !10909)
!10917 = !DILocation(line: 2740, column: 12, scope: !10887)
!10918 = !DILocation(line: 2740, column: 17, scope: !10887)
!10919 = !DILocation(line: 2740, column: 26, scope: !10887)
!10920 = !DILocation(line: 2740, column: 31, scope: !10887)
!10921 = !DILocation(line: 2740, column: 24, scope: !10887)
!10922 = !DILocation(line: 2740, column: 10, scope: !10887)
!10923 = !DILocation(line: 2741, column: 29, scope: !10887)
!10924 = !DILocation(line: 2741, column: 24, scope: !10887)
!10925 = !DILocation(line: 2741, column: 2, scope: !10887)
!10926 = !DILocation(line: 2741, column: 7, scope: !10887)
!10927 = !DILocation(line: 2741, column: 22, scope: !10887)
!10928 = !DILocation(line: 2748, column: 6, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 2748, column: 6)
!10930 = !DILocation(line: 2748, column: 11, scope: !10929)
!10931 = !DILocation(line: 2748, column: 16, scope: !10929)
!10932 = !DILocation(line: 2748, column: 28, scope: !10929)
!10933 = !DILocation(line: 2748, column: 6, scope: !10887)
!10934 = !DILocation(line: 2749, column: 16, scope: !10929)
!10935 = !DILocation(line: 2749, column: 3, scope: !10929)
!10936 = !DILocation(line: 2749, column: 14, scope: !10929)
!10937 = !DILocation(line: 2750, column: 6, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 2750, column: 6)
!10939 = !DILocation(line: 2750, column: 11, scope: !10938)
!10940 = !DILocation(line: 2750, column: 16, scope: !10938)
!10941 = !DILocation(line: 2750, column: 28, scope: !10938)
!10942 = !DILocation(line: 2750, column: 6, scope: !10887)
!10943 = !DILocation(line: 2751, column: 16, scope: !10938)
!10944 = !DILocation(line: 2751, column: 3, scope: !10938)
!10945 = !DILocation(line: 2751, column: 14, scope: !10938)
!10946 = !DILocation(line: 2752, column: 6, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 2752, column: 6)
!10948 = !DILocation(line: 2752, column: 11, scope: !10947)
!10949 = !DILocation(line: 2752, column: 16, scope: !10947)
!10950 = !DILocation(line: 2752, column: 28, scope: !10947)
!10951 = !DILocation(line: 2752, column: 6, scope: !10887)
!10952 = !DILocation(line: 2753, column: 11, scope: !10947)
!10953 = !DILocation(line: 2753, column: 3, scope: !10947)
!10954 = !DILocation(line: 2753, column: 24, scope: !10947)
!10955 = !DILocation(line: 2753, column: 36, scope: !10947)
!10956 = !DILocation(line: 2753, column: 41, scope: !10947)
!10957 = !DILocation(line: 2753, column: 46, scope: !10947)
!10958 = !DILocation(line: 2753, column: 58, scope: !10947)
!10959 = !DILocation(line: 2754, column: 24, scope: !10887)
!10960 = !DILocation(line: 2754, column: 29, scope: !10887)
!10961 = !DILocation(line: 2754, column: 34, scope: !10887)
!10962 = !DILocation(line: 2754, column: 2, scope: !10887)
!10963 = !DILocation(line: 2754, column: 7, scope: !10887)
!10964 = !DILocation(line: 2754, column: 21, scope: !10887)
!10965 = !DILocation(line: 2755, column: 1, scope: !10887)
!10966 = distinct !DISubprogram(name: "queue_iso_transmit", scope: !3, file: !3, line: 3188, type: !10967, scopeLine: 3192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!10967 = !DISubroutineType(types: !10968)
!10968 = !{!177, !4089, !319, !334, !176}
!10969 = !DILocalVariable(name: "ctx", arg: 1, scope: !10966, file: !3, line: 3188, type: !4089)
!10970 = !DILocation(line: 3188, column: 51, scope: !10966)
!10971 = !DILocalVariable(name: "packet", arg: 2, scope: !10966, file: !3, line: 3189, type: !319)
!10972 = !DILocation(line: 3189, column: 32, scope: !10966)
!10973 = !DILocalVariable(name: "buffer", arg: 3, scope: !10966, file: !3, line: 3190, type: !334)
!10974 = !DILocation(line: 3190, column: 32, scope: !10966)
!10975 = !DILocalVariable(name: "payload", arg: 4, scope: !10966, file: !3, line: 3191, type: !176)
!10976 = !DILocation(line: 3191, column: 24, scope: !10966)
!10977 = !DILocalVariable(name: "d", scope: !10966, file: !3, line: 3193, type: !4019)
!10978 = !DILocation(line: 3193, column: 21, scope: !10966)
!10979 = !DILocalVariable(name: "last", scope: !10966, file: !3, line: 3193, type: !4019)
!10980 = !DILocation(line: 3193, column: 25, scope: !10966)
!10981 = !DILocalVariable(name: "pd", scope: !10966, file: !3, line: 3193, type: !4019)
!10982 = !DILocation(line: 3193, column: 32, scope: !10966)
!10983 = !DILocalVariable(name: "p", scope: !10966, file: !3, line: 3194, type: !319)
!10984 = !DILocation(line: 3194, column: 24, scope: !10966)
!10985 = !DILocalVariable(name: "header", scope: !10966, file: !3, line: 3195, type: !4115)
!10986 = !DILocation(line: 3195, column: 10, scope: !10966)
!10987 = !DILocalVariable(name: "d_bus", scope: !10966, file: !3, line: 3196, type: !238)
!10988 = !DILocation(line: 3196, column: 13, scope: !10966)
!10989 = !DILocalVariable(name: "page_bus", scope: !10966, file: !3, line: 3196, type: !238)
!10990 = !DILocation(line: 3196, column: 20, scope: !10966)
!10991 = !DILocalVariable(name: "z", scope: !10966, file: !3, line: 3197, type: !231)
!10992 = !DILocation(line: 3197, column: 6, scope: !10966)
!10993 = !DILocalVariable(name: "header_z", scope: !10966, file: !3, line: 3197, type: !231)
!10994 = !DILocation(line: 3197, column: 9, scope: !10966)
!10995 = !DILocalVariable(name: "payload_z", scope: !10966, file: !3, line: 3197, type: !231)
!10996 = !DILocation(line: 3197, column: 19, scope: !10966)
!10997 = !DILocalVariable(name: "irq", scope: !10966, file: !3, line: 3197, type: !231)
!10998 = !DILocation(line: 3197, column: 30, scope: !10966)
!10999 = !DILocalVariable(name: "payload_index", scope: !10966, file: !3, line: 3198, type: !231)
!11000 = !DILocation(line: 3198, column: 6, scope: !10966)
!11001 = !DILocalVariable(name: "payload_end_index", scope: !10966, file: !3, line: 3198, type: !231)
!11002 = !DILocation(line: 3198, column: 21, scope: !10966)
!11003 = !DILocalVariable(name: "next_page_index", scope: !10966, file: !3, line: 3198, type: !231)
!11004 = !DILocation(line: 3198, column: 40, scope: !10966)
!11005 = !DILocalVariable(name: "page", scope: !10966, file: !3, line: 3199, type: !177)
!11006 = !DILocation(line: 3199, column: 6, scope: !10966)
!11007 = !DILocalVariable(name: "end_page", scope: !10966, file: !3, line: 3199, type: !177)
!11008 = !DILocation(line: 3199, column: 12, scope: !10966)
!11009 = !DILocalVariable(name: "i", scope: !10966, file: !3, line: 3199, type: !177)
!11010 = !DILocation(line: 3199, column: 22, scope: !10966)
!11011 = !DILocalVariable(name: "length", scope: !10966, file: !3, line: 3199, type: !177)
!11012 = !DILocation(line: 3199, column: 25, scope: !10966)
!11013 = !DILocalVariable(name: "offset", scope: !10966, file: !3, line: 3199, type: !177)
!11014 = !DILocation(line: 3199, column: 33, scope: !10966)
!11015 = !DILocation(line: 3201, column: 6, scope: !10966)
!11016 = !DILocation(line: 3201, column: 4, scope: !10966)
!11017 = !DILocation(line: 3202, column: 18, scope: !10966)
!11018 = !DILocation(line: 3202, column: 16, scope: !10966)
!11019 = !DILocation(line: 3204, column: 6, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 3204, column: 6)
!11021 = !DILocation(line: 3204, column: 9, scope: !11020)
!11022 = !DILocation(line: 3204, column: 6, scope: !10966)
!11023 = !DILocation(line: 3205, column: 5, scope: !11020)
!11024 = !DILocation(line: 3205, column: 3, scope: !11020)
!11025 = !DILocation(line: 3207, column: 5, scope: !11020)
!11026 = !DILocation(line: 3208, column: 6, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 3208, column: 6)
!11028 = !DILocation(line: 3208, column: 9, scope: !11027)
!11029 = !DILocation(line: 3208, column: 23, scope: !11027)
!11030 = !DILocation(line: 3208, column: 6, scope: !10966)
!11031 = !DILocation(line: 3209, column: 4, scope: !11027)
!11032 = !DILocation(line: 3209, column: 3, scope: !11027)
!11033 = !DILocation(line: 3212, column: 13, scope: !10966)
!11034 = !DILocation(line: 3212, column: 59, scope: !10966)
!11035 = !DILocation(line: 3212, column: 11, scope: !10966)
!11036 = !DILocation(line: 3213, column: 6, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 3213, column: 6)
!11038 = !DILocation(line: 3213, column: 9, scope: !11037)
!11039 = !DILocation(line: 3213, column: 24, scope: !11037)
!11040 = !DILocation(line: 3213, column: 6, scope: !10966)
!11041 = !DILocation(line: 3214, column: 15, scope: !11037)
!11042 = !DILocation(line: 3214, column: 27, scope: !11037)
!11043 = !DILocation(line: 3214, column: 41, scope: !11037)
!11044 = !DILocation(line: 3214, column: 24, scope: !11037)
!11045 = !DILocation(line: 3214, column: 13, scope: !11037)
!11046 = !DILocation(line: 3214, column: 3, scope: !11037)
!11047 = !DILocation(line: 3216, column: 13, scope: !11037)
!11048 = !DILocation(line: 3218, column: 7, scope: !10966)
!11049 = !DILocation(line: 3218, column: 4, scope: !10966)
!11050 = !DILocation(line: 3221, column: 13, scope: !10966)
!11051 = !DILocation(line: 3221, column: 11, scope: !10966)
!11052 = !DILocation(line: 3223, column: 31, scope: !10966)
!11053 = !DILocation(line: 3223, column: 36, scope: !10966)
!11054 = !DILocation(line: 3223, column: 45, scope: !10966)
!11055 = !DILocation(line: 3223, column: 49, scope: !10966)
!11056 = !DILocation(line: 3223, column: 47, scope: !10966)
!11057 = !DILocation(line: 3223, column: 6, scope: !10966)
!11058 = !DILocation(line: 3223, column: 4, scope: !10966)
!11059 = !DILocation(line: 3224, column: 6, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 3224, column: 6)
!11061 = !DILocation(line: 3224, column: 8, scope: !11060)
!11062 = !DILocation(line: 3224, column: 6, scope: !10966)
!11063 = !DILocation(line: 3225, column: 3, scope: !11060)
!11064 = !DILocation(line: 3227, column: 7, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 3227, column: 6)
!11066 = !DILocation(line: 3227, column: 10, scope: !11065)
!11067 = !DILocation(line: 3227, column: 6, scope: !10966)
!11068 = !DILocation(line: 3228, column: 3, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11065, file: !3, line: 3227, column: 16)
!11070 = !DILocation(line: 3228, column: 8, scope: !11069)
!11071 = !DILocation(line: 3228, column: 18, scope: !11069)
!11072 = !DILocation(line: 3229, column: 3, scope: !11069)
!11073 = !DILocation(line: 3229, column: 8, scope: !11069)
!11074 = !DILocation(line: 3229, column: 18, scope: !11069)
!11075 = !DILocation(line: 3237, column: 25, scope: !11069)
!11076 = !DILocation(line: 3237, column: 3, scope: !11069)
!11077 = !DILocation(line: 3237, column: 8, scope: !11069)
!11078 = !DILocation(line: 3237, column: 23, scope: !11069)
!11079 = !DILocation(line: 3239, column: 24, scope: !11069)
!11080 = !DILocation(line: 3239, column: 12, scope: !11069)
!11081 = !DILocation(line: 3239, column: 10, scope: !11069)
!11082 = !DILocation(line: 3240, column: 15, scope: !11069)
!11083 = !DILocation(line: 3240, column: 3, scope: !11069)
!11084 = !DILocation(line: 3240, column: 13, scope: !11069)
!11085 = !DILocation(line: 3246, column: 4, scope: !11069)
!11086 = !DILocation(line: 3245, column: 3, scope: !11069)
!11087 = !DILocation(line: 3245, column: 13, scope: !11069)
!11088 = !DILocation(line: 3248, column: 2, scope: !11069)
!11089 = !DILocation(line: 3250, column: 6, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 3250, column: 6)
!11091 = !DILocation(line: 3250, column: 9, scope: !11090)
!11092 = !DILocation(line: 3250, column: 23, scope: !11090)
!11093 = !DILocation(line: 3250, column: 6, scope: !10966)
!11094 = !DILocation(line: 3251, column: 23, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11090, file: !3, line: 3250, column: 28)
!11096 = !DILocation(line: 3251, column: 3, scope: !11095)
!11097 = !DILocation(line: 3251, column: 8, scope: !11095)
!11098 = !DILocation(line: 3251, column: 21, scope: !11095)
!11099 = !DILocation(line: 3252, column: 23, scope: !11095)
!11100 = !DILocation(line: 3252, column: 3, scope: !11095)
!11101 = !DILocation(line: 3252, column: 8, scope: !11095)
!11102 = !DILocation(line: 3252, column: 21, scope: !11095)
!11103 = !DILocation(line: 3253, column: 11, scope: !11095)
!11104 = !DILocation(line: 3253, column: 13, scope: !11095)
!11105 = !DILocation(line: 3253, column: 3, scope: !11095)
!11106 = !DILocation(line: 3253, column: 17, scope: !11095)
!11107 = !DILocation(line: 3253, column: 20, scope: !11095)
!11108 = !DILocation(line: 3253, column: 28, scope: !11095)
!11109 = !DILocation(line: 3253, column: 31, scope: !11095)
!11110 = !DILocation(line: 3254, column: 2, scope: !11095)
!11111 = !DILocation(line: 3256, column: 7, scope: !10966)
!11112 = !DILocation(line: 3256, column: 11, scope: !10966)
!11113 = !DILocation(line: 3256, column: 9, scope: !10966)
!11114 = !DILocation(line: 3256, column: 15, scope: !10966)
!11115 = !DILocation(line: 3256, column: 13, scope: !10966)
!11116 = !DILocation(line: 3256, column: 5, scope: !10966)
!11117 = !DILocation(line: 3257, column: 22, scope: !10966)
!11118 = !DILocation(line: 3257, column: 38, scope: !10966)
!11119 = !DILocation(line: 3257, column: 41, scope: !10966)
!11120 = !DILocation(line: 3257, column: 36, scope: !10966)
!11121 = !DILocation(line: 3257, column: 20, scope: !10966)
!11122 = !DILocation(line: 3258, column: 9, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 3258, column: 2)
!11124 = !DILocation(line: 3258, column: 7, scope: !11123)
!11125 = !DILocation(line: 3258, column: 14, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 3258, column: 2)
!11127 = !DILocation(line: 3258, column: 18, scope: !11126)
!11128 = !DILocation(line: 3258, column: 16, scope: !11126)
!11129 = !DILocation(line: 3258, column: 2, scope: !11123)
!11130 = !DILocation(line: 3259, column: 24, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 3258, column: 34)
!11132 = !DILocation(line: 3259, column: 38, scope: !11131)
!11133 = !DILocation(line: 3259, column: 22, scope: !11131)
!11134 = !DILocation(line: 3260, column: 24, scope: !11131)
!11135 = !DILocation(line: 3260, column: 38, scope: !11131)
!11136 = !DILocation(line: 3260, column: 22, scope: !11131)
!11137 = !DILocation(line: 3261, column: 25, scope: !11131)
!11138 = !DILocation(line: 3261, column: 30, scope: !11131)
!11139 = !DILocation(line: 3261, column: 35, scope: !11131)
!11140 = !DILocation(line: 3261, column: 22, scope: !11131)
!11141 = !DILocalVariable(name: "__UNIQUE_ID___x264", scope: !11142, file: !3, line: 3263, type: !231)
!11142 = distinct !DILexicalBlock(scope: !11131, file: !3, line: 3263, column: 4)
!11143 = !DILocation(line: 3263, column: 4, scope: !11142)
!11144 = !DILocalVariable(name: "__UNIQUE_ID___y265", scope: !11142, file: !3, line: 3263, type: !231)
!11145 = !DILocation(line: 3263, column: 46, scope: !11131)
!11146 = !DILocation(line: 3263, column: 44, scope: !11131)
!11147 = !DILocation(line: 3262, column: 22, scope: !11131)
!11148 = !DILocation(line: 3264, column: 24, scope: !11131)
!11149 = !DILocation(line: 3264, column: 3, scope: !11131)
!11150 = !DILocation(line: 3264, column: 6, scope: !11131)
!11151 = !DILocation(line: 3264, column: 9, scope: !11131)
!11152 = !DILocation(line: 3264, column: 22, scope: !11131)
!11153 = !DILocation(line: 3266, column: 14, scope: !11131)
!11154 = !DILocation(line: 3266, column: 12, scope: !11131)
!11155 = !DILocation(line: 3267, column: 24, scope: !11131)
!11156 = !DILocation(line: 3267, column: 3, scope: !11131)
!11157 = !DILocation(line: 3267, column: 6, scope: !11131)
!11158 = !DILocation(line: 3267, column: 9, scope: !11131)
!11159 = !DILocation(line: 3267, column: 22, scope: !11131)
!11160 = !DILocation(line: 3269, column: 36, scope: !11131)
!11161 = !DILocation(line: 3269, column: 41, scope: !11131)
!11162 = !DILocation(line: 3269, column: 49, scope: !11131)
!11163 = !DILocation(line: 3269, column: 55, scope: !11131)
!11164 = !DILocation(line: 3269, column: 60, scope: !11131)
!11165 = !DILocation(line: 3270, column: 8, scope: !11131)
!11166 = !DILocation(line: 3270, column: 18, scope: !11131)
!11167 = !DILocation(line: 3270, column: 26, scope: !11131)
!11168 = !DILocation(line: 3269, column: 3, scope: !11131)
!11169 = !DILocation(line: 3273, column: 20, scope: !11131)
!11170 = !DILocation(line: 3273, column: 17, scope: !11131)
!11171 = !DILocation(line: 3274, column: 2, scope: !11131)
!11172 = !DILocation(line: 3258, column: 30, scope: !11126)
!11173 = !DILocation(line: 3258, column: 2, scope: !11126)
!11174 = distinct !{!11174, !11129, !11175}
!11175 = !DILocation(line: 3274, column: 2, scope: !11123)
!11176 = !DILocation(line: 3276, column: 6, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 3276, column: 6)
!11178 = !DILocation(line: 3276, column: 9, scope: !11177)
!11179 = !DILocation(line: 3276, column: 6, scope: !10966)
!11180 = !DILocation(line: 3277, column: 7, scope: !11177)
!11181 = !DILocation(line: 3277, column: 3, scope: !11177)
!11182 = !DILocation(line: 3279, column: 7, scope: !11177)
!11183 = !DILocation(line: 3281, column: 9, scope: !10966)
!11184 = !DILocation(line: 3281, column: 11, scope: !10966)
!11185 = !DILocation(line: 3281, column: 18, scope: !10966)
!11186 = !DILocation(line: 3281, column: 22, scope: !10966)
!11187 = !DILocation(line: 3281, column: 26, scope: !10966)
!11188 = !DILocation(line: 3281, column: 24, scope: !10966)
!11189 = !DILocation(line: 3281, column: 28, scope: !10966)
!11190 = !DILocation(line: 3281, column: 7, scope: !10966)
!11191 = !DILocation(line: 3282, column: 19, scope: !10966)
!11192 = !DILocation(line: 3282, column: 2, scope: !10966)
!11193 = !DILocation(line: 3282, column: 8, scope: !10966)
!11194 = !DILocation(line: 3282, column: 16, scope: !10966)
!11195 = !DILocation(line: 3287, column: 18, scope: !10966)
!11196 = !DILocation(line: 3287, column: 23, scope: !10966)
!11197 = !DILocation(line: 3287, column: 32, scope: !10966)
!11198 = !DILocation(line: 3287, column: 35, scope: !10966)
!11199 = !DILocation(line: 3287, column: 38, scope: !10966)
!11200 = !DILocation(line: 3287, column: 2, scope: !10966)
!11201 = !DILocation(line: 3289, column: 2, scope: !10966)
!11202 = !DILocation(line: 3290, column: 1, scope: !10966)
!11203 = distinct !DISubprogram(name: "queue_iso_packet_per_buffer", scope: !3, file: !3, line: 3292, type: !10967, scopeLine: 3296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11204 = !DILocalVariable(name: "ctx", arg: 1, scope: !11203, file: !3, line: 3292, type: !4089)
!11205 = !DILocation(line: 3292, column: 60, scope: !11203)
!11206 = !DILocalVariable(name: "packet", arg: 2, scope: !11203, file: !3, line: 3293, type: !319)
!11207 = !DILocation(line: 3293, column: 34, scope: !11203)
!11208 = !DILocalVariable(name: "buffer", arg: 3, scope: !11203, file: !3, line: 3294, type: !334)
!11209 = !DILocation(line: 3294, column: 34, scope: !11203)
!11210 = !DILocalVariable(name: "payload", arg: 4, scope: !11203, file: !3, line: 3295, type: !176)
!11211 = !DILocation(line: 3295, column: 26, scope: !11203)
!11212 = !DILocalVariable(name: "device", scope: !11203, file: !3, line: 3297, type: !3184)
!11213 = !DILocation(line: 3297, column: 17, scope: !11203)
!11214 = !DILocation(line: 3297, column: 26, scope: !11203)
!11215 = !DILocation(line: 3297, column: 31, scope: !11203)
!11216 = !DILocation(line: 3297, column: 39, scope: !11203)
!11217 = !DILocation(line: 3297, column: 45, scope: !11203)
!11218 = !DILocation(line: 3297, column: 50, scope: !11203)
!11219 = !DILocalVariable(name: "d", scope: !11203, file: !3, line: 3298, type: !4019)
!11220 = !DILocation(line: 3298, column: 21, scope: !11203)
!11221 = !DILocalVariable(name: "pd", scope: !11203, file: !3, line: 3298, type: !4019)
!11222 = !DILocation(line: 3298, column: 25, scope: !11203)
!11223 = !DILocalVariable(name: "d_bus", scope: !11203, file: !3, line: 3299, type: !238)
!11224 = !DILocation(line: 3299, column: 13, scope: !11203)
!11225 = !DILocalVariable(name: "page_bus", scope: !11203, file: !3, line: 3299, type: !238)
!11226 = !DILocation(line: 3299, column: 20, scope: !11203)
!11227 = !DILocalVariable(name: "z", scope: !11203, file: !3, line: 3300, type: !231)
!11228 = !DILocation(line: 3300, column: 6, scope: !11203)
!11229 = !DILocalVariable(name: "header_z", scope: !11203, file: !3, line: 3300, type: !231)
!11230 = !DILocation(line: 3300, column: 9, scope: !11203)
!11231 = !DILocalVariable(name: "rest", scope: !11203, file: !3, line: 3300, type: !231)
!11232 = !DILocation(line: 3300, column: 19, scope: !11203)
!11233 = !DILocalVariable(name: "i", scope: !11203, file: !3, line: 3301, type: !177)
!11234 = !DILocation(line: 3301, column: 6, scope: !11203)
!11235 = !DILocalVariable(name: "j", scope: !11203, file: !3, line: 3301, type: !177)
!11236 = !DILocation(line: 3301, column: 9, scope: !11203)
!11237 = !DILocalVariable(name: "length", scope: !11203, file: !3, line: 3301, type: !177)
!11238 = !DILocation(line: 3301, column: 12, scope: !11203)
!11239 = !DILocalVariable(name: "page", scope: !11203, file: !3, line: 3302, type: !177)
!11240 = !DILocation(line: 3302, column: 6, scope: !11203)
!11241 = !DILocalVariable(name: "offset", scope: !11203, file: !3, line: 3302, type: !177)
!11242 = !DILocation(line: 3302, column: 12, scope: !11203)
!11243 = !DILocalVariable(name: "packet_count", scope: !11203, file: !3, line: 3302, type: !177)
!11244 = !DILocation(line: 3302, column: 20, scope: !11203)
!11245 = !DILocalVariable(name: "header_size", scope: !11203, file: !3, line: 3302, type: !177)
!11246 = !DILocation(line: 3302, column: 34, scope: !11203)
!11247 = !DILocalVariable(name: "payload_per_buffer", scope: !11203, file: !3, line: 3302, type: !177)
!11248 = !DILocation(line: 3302, column: 47, scope: !11203)
!11249 = !DILocation(line: 3308, column: 17, scope: !11203)
!11250 = !DILocation(line: 3308, column: 25, scope: !11203)
!11251 = !DILocation(line: 3308, column: 41, scope: !11203)
!11252 = !DILocation(line: 3308, column: 46, scope: !11203)
!11253 = !DILocation(line: 3308, column: 51, scope: !11203)
!11254 = !DILocation(line: 3308, column: 39, scope: !11203)
!11255 = !DILocation(line: 3308, column: 15, scope: !11203)
!11256 = !DILocalVariable(name: "__UNIQUE_ID___x266", scope: !11257, file: !3, line: 3309, type: !207)
!11257 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 3309, column: 17)
!11258 = !DILocation(line: 3309, column: 17, scope: !11257)
!11259 = !DILocalVariable(name: "__UNIQUE_ID___y267", scope: !11257, file: !3, line: 3309, type: !207)
!11260 = !DILocation(line: 3309, column: 17, scope: !11203)
!11261 = !DILocation(line: 3309, column: 15, scope: !11203)
!11262 = !DILocation(line: 3312, column: 13, scope: !11203)
!11263 = !DILocation(line: 3312, column: 11, scope: !11203)
!11264 = !DILocation(line: 3313, column: 13, scope: !11203)
!11265 = !DILocation(line: 3313, column: 21, scope: !11203)
!11266 = !DILocation(line: 3313, column: 11, scope: !11203)
!11267 = !DILocation(line: 3314, column: 13, scope: !11203)
!11268 = !DILocation(line: 3314, column: 21, scope: !11203)
!11269 = !DILocation(line: 3314, column: 11, scope: !11203)
!11270 = !DILocation(line: 3315, column: 23, scope: !11203)
!11271 = !DILocation(line: 3315, column: 31, scope: !11203)
!11272 = !DILocation(line: 3315, column: 48, scope: !11203)
!11273 = !DILocation(line: 3315, column: 46, scope: !11203)
!11274 = !DILocation(line: 3315, column: 21, scope: !11203)
!11275 = !DILocation(line: 3317, column: 9, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 3317, column: 2)
!11277 = !DILocation(line: 3317, column: 7, scope: !11276)
!11278 = !DILocation(line: 3317, column: 14, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11276, file: !3, line: 3317, column: 2)
!11280 = !DILocation(line: 3317, column: 18, scope: !11279)
!11281 = !DILocation(line: 3317, column: 16, scope: !11279)
!11282 = !DILocation(line: 3317, column: 2, scope: !11276)
!11283 = !DILocation(line: 3319, column: 7, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11279, file: !3, line: 3317, column: 37)
!11285 = !DILocation(line: 3319, column: 60, scope: !11284)
!11286 = !DILocation(line: 3319, column: 5, scope: !11284)
!11287 = !DILocation(line: 3320, column: 32, scope: !11284)
!11288 = !DILocation(line: 3320, column: 37, scope: !11284)
!11289 = !DILocation(line: 3321, column: 5, scope: !11284)
!11290 = !DILocation(line: 3321, column: 9, scope: !11284)
!11291 = !DILocation(line: 3321, column: 7, scope: !11284)
!11292 = !DILocation(line: 3320, column: 7, scope: !11284)
!11293 = !DILocation(line: 3320, column: 5, scope: !11284)
!11294 = !DILocation(line: 3322, column: 7, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 3322, column: 7)
!11296 = !DILocation(line: 3322, column: 9, scope: !11295)
!11297 = !DILocation(line: 3322, column: 7, scope: !11284)
!11298 = !DILocation(line: 3323, column: 4, scope: !11295)
!11299 = !DILocation(line: 3325, column: 3, scope: !11284)
!11300 = !DILocation(line: 3325, column: 6, scope: !11284)
!11301 = !DILocation(line: 3325, column: 19, scope: !11284)
!11302 = !DILocation(line: 3327, column: 7, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 3327, column: 7)
!11304 = !DILocation(line: 3327, column: 15, scope: !11303)
!11305 = !DILocation(line: 3327, column: 20, scope: !11303)
!11306 = !DILocation(line: 3327, column: 23, scope: !11303)
!11307 = !DILocation(line: 3327, column: 25, scope: !11303)
!11308 = !DILocation(line: 3327, column: 7, scope: !11284)
!11309 = !DILocation(line: 3328, column: 4, scope: !11303)
!11310 = !DILocation(line: 3328, column: 7, scope: !11303)
!11311 = !DILocation(line: 3328, column: 15, scope: !11303)
!11312 = !DILocation(line: 3329, column: 21, scope: !11284)
!11313 = !DILocation(line: 3329, column: 3, scope: !11284)
!11314 = !DILocation(line: 3329, column: 6, scope: !11284)
!11315 = !DILocation(line: 3329, column: 19, scope: !11284)
!11316 = !DILocation(line: 3330, column: 21, scope: !11284)
!11317 = !DILocation(line: 3330, column: 24, scope: !11284)
!11318 = !DILocation(line: 3330, column: 3, scope: !11284)
!11319 = !DILocation(line: 3330, column: 6, scope: !11284)
!11320 = !DILocation(line: 3330, column: 19, scope: !11284)
!11321 = !DILocation(line: 3331, column: 3, scope: !11284)
!11322 = !DILocation(line: 3331, column: 6, scope: !11284)
!11323 = !DILocation(line: 3331, column: 22, scope: !11284)
!11324 = !DILocation(line: 3332, column: 21, scope: !11284)
!11325 = !DILocation(line: 3332, column: 3, scope: !11284)
!11326 = !DILocation(line: 3332, column: 6, scope: !11284)
!11327 = !DILocation(line: 3332, column: 19, scope: !11284)
!11328 = !DILocation(line: 3334, column: 10, scope: !11284)
!11329 = !DILocation(line: 3334, column: 8, scope: !11284)
!11330 = !DILocation(line: 3335, column: 8, scope: !11284)
!11331 = !DILocation(line: 3335, column: 6, scope: !11284)
!11332 = !DILocation(line: 3336, column: 10, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 3336, column: 3)
!11334 = !DILocation(line: 3336, column: 8, scope: !11333)
!11335 = !DILocation(line: 3336, column: 15, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 3336, column: 3)
!11337 = !DILocation(line: 3336, column: 19, scope: !11336)
!11338 = !DILocation(line: 3336, column: 17, scope: !11336)
!11339 = !DILocation(line: 3336, column: 3, scope: !11333)
!11340 = !DILocation(line: 3337, column: 6, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 3336, column: 27)
!11342 = !DILocation(line: 3338, column: 4, scope: !11341)
!11343 = !DILocation(line: 3338, column: 8, scope: !11341)
!11344 = !DILocation(line: 3338, column: 16, scope: !11341)
!11345 = !DILocation(line: 3341, column: 8, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 3341, column: 8)
!11347 = !DILocation(line: 3341, column: 17, scope: !11346)
!11348 = !DILocation(line: 3341, column: 15, scope: !11346)
!11349 = !DILocation(line: 3341, column: 22, scope: !11346)
!11350 = !DILocation(line: 3341, column: 8, scope: !11341)
!11351 = !DILocation(line: 3342, column: 14, scope: !11346)
!11352 = !DILocation(line: 3342, column: 12, scope: !11346)
!11353 = !DILocation(line: 3342, column: 5, scope: !11346)
!11354 = !DILocation(line: 3344, column: 26, scope: !11346)
!11355 = !DILocation(line: 3344, column: 24, scope: !11346)
!11356 = !DILocation(line: 3344, column: 14, scope: !11346)
!11357 = !DILocation(line: 3344, column: 12, scope: !11346)
!11358 = !DILocation(line: 3345, column: 20, scope: !11341)
!11359 = !DILocation(line: 3345, column: 4, scope: !11341)
!11360 = !DILocation(line: 3345, column: 8, scope: !11341)
!11361 = !DILocation(line: 3345, column: 18, scope: !11341)
!11362 = !DILocation(line: 3346, column: 20, scope: !11341)
!11363 = !DILocation(line: 3346, column: 24, scope: !11341)
!11364 = !DILocation(line: 3346, column: 4, scope: !11341)
!11365 = !DILocation(line: 3346, column: 8, scope: !11341)
!11366 = !DILocation(line: 3346, column: 18, scope: !11341)
!11367 = !DILocation(line: 3347, column: 4, scope: !11341)
!11368 = !DILocation(line: 3347, column: 8, scope: !11341)
!11369 = !DILocation(line: 3347, column: 24, scope: !11341)
!11370 = !DILocation(line: 3349, column: 15, scope: !11341)
!11371 = !DILocation(line: 3349, column: 13, scope: !11341)
!11372 = !DILocation(line: 3350, column: 23, scope: !11341)
!11373 = !DILocation(line: 3350, column: 4, scope: !11341)
!11374 = !DILocation(line: 3350, column: 8, scope: !11341)
!11375 = !DILocation(line: 3350, column: 21, scope: !11341)
!11376 = !DILocation(line: 3352, column: 37, scope: !11341)
!11377 = !DILocation(line: 3352, column: 45, scope: !11341)
!11378 = !DILocation(line: 3353, column: 9, scope: !11341)
!11379 = !DILocation(line: 3353, column: 17, scope: !11341)
!11380 = !DILocation(line: 3352, column: 4, scope: !11341)
!11381 = !DILocation(line: 3356, column: 14, scope: !11341)
!11382 = !DILocation(line: 3356, column: 23, scope: !11341)
!11383 = !DILocation(line: 3356, column: 21, scope: !11341)
!11384 = !DILocation(line: 3356, column: 13, scope: !11341)
!11385 = !DILocation(line: 3356, column: 31, scope: !11341)
!11386 = !DILocation(line: 3356, column: 11, scope: !11341)
!11387 = !DILocation(line: 3357, column: 12, scope: !11341)
!11388 = !DILocation(line: 3357, column: 9, scope: !11341)
!11389 = !DILocation(line: 3358, column: 8, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 3358, column: 8)
!11391 = !DILocation(line: 3358, column: 15, scope: !11390)
!11392 = !DILocation(line: 3358, column: 8, scope: !11341)
!11393 = !DILocation(line: 3359, column: 9, scope: !11390)
!11394 = !DILocation(line: 3359, column: 5, scope: !11390)
!11395 = !DILocation(line: 3360, column: 3, scope: !11341)
!11396 = !DILocation(line: 3336, column: 23, scope: !11336)
!11397 = !DILocation(line: 3336, column: 3, scope: !11336)
!11398 = distinct !{!11398, !11339, !11399}
!11399 = !DILocation(line: 3360, column: 3, scope: !11333)
!11400 = !DILocation(line: 3361, column: 3, scope: !11284)
!11401 = !DILocation(line: 3361, column: 7, scope: !11284)
!11402 = !DILocation(line: 3361, column: 15, scope: !11284)
!11403 = !DILocation(line: 3364, column: 7, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 3364, column: 7)
!11405 = !DILocation(line: 3364, column: 15, scope: !11404)
!11406 = !DILocation(line: 3364, column: 25, scope: !11404)
!11407 = !DILocation(line: 3364, column: 28, scope: !11404)
!11408 = !DILocation(line: 3364, column: 33, scope: !11404)
!11409 = !DILocation(line: 3364, column: 46, scope: !11404)
!11410 = !DILocation(line: 3364, column: 30, scope: !11404)
!11411 = !DILocation(line: 3364, column: 7, scope: !11284)
!11412 = !DILocation(line: 3365, column: 4, scope: !11404)
!11413 = !DILocation(line: 3365, column: 8, scope: !11404)
!11414 = !DILocation(line: 3365, column: 16, scope: !11404)
!11415 = !DILocation(line: 3367, column: 19, scope: !11284)
!11416 = !DILocation(line: 3367, column: 24, scope: !11284)
!11417 = !DILocation(line: 3367, column: 33, scope: !11284)
!11418 = !DILocation(line: 3367, column: 36, scope: !11284)
!11419 = !DILocation(line: 3367, column: 39, scope: !11284)
!11420 = !DILocation(line: 3367, column: 3, scope: !11284)
!11421 = !DILocation(line: 3368, column: 2, scope: !11284)
!11422 = !DILocation(line: 3317, column: 33, scope: !11279)
!11423 = !DILocation(line: 3317, column: 2, scope: !11279)
!11424 = distinct !{!11424, !11282, !11425}
!11425 = !DILocation(line: 3368, column: 2, scope: !11276)
!11426 = !DILocation(line: 3370, column: 2, scope: !11203)
!11427 = !DILocation(line: 3371, column: 1, scope: !11203)
!11428 = distinct !DISubprogram(name: "queue_iso_buffer_fill", scope: !3, file: !3, line: 3373, type: !10967, scopeLine: 3377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11429 = !DILocalVariable(name: "ctx", arg: 1, scope: !11428, file: !3, line: 3373, type: !4089)
!11430 = !DILocation(line: 3373, column: 54, scope: !11428)
!11431 = !DILocalVariable(name: "packet", arg: 2, scope: !11428, file: !3, line: 3374, type: !319)
!11432 = !DILocation(line: 3374, column: 28, scope: !11428)
!11433 = !DILocalVariable(name: "buffer", arg: 3, scope: !11428, file: !3, line: 3375, type: !334)
!11434 = !DILocation(line: 3375, column: 28, scope: !11428)
!11435 = !DILocalVariable(name: "payload", arg: 4, scope: !11428, file: !3, line: 3376, type: !176)
!11436 = !DILocation(line: 3376, column: 20, scope: !11428)
!11437 = !DILocalVariable(name: "d", scope: !11428, file: !3, line: 3378, type: !4019)
!11438 = !DILocation(line: 3378, column: 21, scope: !11428)
!11439 = !DILocalVariable(name: "d_bus", scope: !11428, file: !3, line: 3379, type: !238)
!11440 = !DILocation(line: 3379, column: 13, scope: !11428)
!11441 = !DILocalVariable(name: "page_bus", scope: !11428, file: !3, line: 3379, type: !238)
!11442 = !DILocation(line: 3379, column: 20, scope: !11428)
!11443 = !DILocalVariable(name: "page", scope: !11428, file: !3, line: 3380, type: !177)
!11444 = !DILocation(line: 3380, column: 6, scope: !11428)
!11445 = !DILocalVariable(name: "offset", scope: !11428, file: !3, line: 3380, type: !177)
!11446 = !DILocation(line: 3380, column: 12, scope: !11428)
!11447 = !DILocalVariable(name: "rest", scope: !11428, file: !3, line: 3380, type: !177)
!11448 = !DILocation(line: 3380, column: 20, scope: !11428)
!11449 = !DILocalVariable(name: "z", scope: !11428, file: !3, line: 3380, type: !177)
!11450 = !DILocation(line: 3380, column: 26, scope: !11428)
!11451 = !DILocalVariable(name: "i", scope: !11428, file: !3, line: 3380, type: !177)
!11452 = !DILocation(line: 3380, column: 29, scope: !11428)
!11453 = !DILocalVariable(name: "length", scope: !11428, file: !3, line: 3380, type: !177)
!11454 = !DILocation(line: 3380, column: 32, scope: !11428)
!11455 = !DILocation(line: 3382, column: 11, scope: !11428)
!11456 = !DILocation(line: 3382, column: 19, scope: !11428)
!11457 = !DILocation(line: 3382, column: 9, scope: !11428)
!11458 = !DILocation(line: 3383, column: 11, scope: !11428)
!11459 = !DILocation(line: 3383, column: 19, scope: !11428)
!11460 = !DILocation(line: 3383, column: 9, scope: !11428)
!11461 = !DILocation(line: 3384, column: 11, scope: !11428)
!11462 = !DILocation(line: 3384, column: 19, scope: !11428)
!11463 = !DILocation(line: 3384, column: 9, scope: !11428)
!11464 = !DILocation(line: 3387, column: 6, scope: !11428)
!11465 = !DILocation(line: 3387, column: 4, scope: !11428)
!11466 = !DILocalVariable(name: "__ret_warn_on", scope: !11467, file: !3, line: 3389, type: !177)
!11467 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 3389, column: 6)
!11468 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 3389, column: 6)
!11469 = !DILocation(line: 3389, column: 6, scope: !11467)
!11470 = !DILocation(line: 3389, column: 6, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 3389, column: 6)
!11472 = !DILocation(line: 3389, column: 6, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 3389, column: 6)
!11474 = !DILocation(line: 3389, column: 6, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 3389, column: 6)
!11476 = !DILocation(line: 3389, column: 6, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 3389, column: 6)
!11478 = !{i32 -2141499797, i32 -2141499768, i32 -2141499722, i32 -2141499664, i32 -2141499610, i32 -2141499556, i32 -2141499501, i32 -2141499470}
!11479 = !DILocation(line: 3389, column: 6, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 3389, column: 6)
!11481 = !{i32 -2141499064, i32 -2141499057, i32 -2141499005, i32 -2141498974, i32 -2141498944}
!11482 = !DILocation(line: 3389, column: 6, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 3389, column: 6)
!11484 = !DILocation(line: 3389, column: 6, scope: !11468)
!11485 = !DILocation(line: 3389, column: 6, scope: !11428)
!11486 = !DILocation(line: 3390, column: 3, scope: !11468)
!11487 = !DILocation(line: 3392, column: 9, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 3392, column: 2)
!11489 = !DILocation(line: 3392, column: 7, scope: !11488)
!11490 = !DILocation(line: 3392, column: 14, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 3392, column: 2)
!11492 = !DILocation(line: 3392, column: 18, scope: !11491)
!11493 = !DILocation(line: 3392, column: 16, scope: !11491)
!11494 = !DILocation(line: 3392, column: 2, scope: !11488)
!11495 = !DILocation(line: 3393, column: 32, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11491, file: !3, line: 3392, column: 26)
!11497 = !DILocation(line: 3393, column: 37, scope: !11496)
!11498 = !DILocation(line: 3393, column: 7, scope: !11496)
!11499 = !DILocation(line: 3393, column: 5, scope: !11496)
!11500 = !DILocation(line: 3394, column: 7, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11496, file: !3, line: 3394, column: 7)
!11502 = !DILocation(line: 3394, column: 9, scope: !11501)
!11503 = !DILocation(line: 3394, column: 7, scope: !11496)
!11504 = !DILocation(line: 3395, column: 4, scope: !11501)
!11505 = !DILocation(line: 3397, column: 3, scope: !11496)
!11506 = !DILocation(line: 3397, column: 6, scope: !11496)
!11507 = !DILocation(line: 3397, column: 14, scope: !11496)
!11508 = !DILocation(line: 3399, column: 7, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11496, file: !3, line: 3399, column: 7)
!11510 = !DILocation(line: 3399, column: 15, scope: !11509)
!11511 = !DILocation(line: 3399, column: 20, scope: !11509)
!11512 = !DILocation(line: 3399, column: 23, scope: !11509)
!11513 = !DILocation(line: 3399, column: 25, scope: !11509)
!11514 = !DILocation(line: 3399, column: 7, scope: !11496)
!11515 = !DILocation(line: 3400, column: 4, scope: !11509)
!11516 = !DILocation(line: 3400, column: 7, scope: !11509)
!11517 = !DILocation(line: 3400, column: 15, scope: !11509)
!11518 = !DILocation(line: 3401, column: 7, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11496, file: !3, line: 3401, column: 7)
!11520 = !DILocation(line: 3401, column: 15, scope: !11519)
!11521 = !DILocation(line: 3401, column: 25, scope: !11519)
!11522 = !DILocation(line: 3401, column: 28, scope: !11519)
!11523 = !DILocation(line: 3401, column: 33, scope: !11519)
!11524 = !DILocation(line: 3401, column: 35, scope: !11519)
!11525 = !DILocation(line: 3401, column: 30, scope: !11519)
!11526 = !DILocation(line: 3401, column: 7, scope: !11496)
!11527 = !DILocation(line: 3402, column: 4, scope: !11519)
!11528 = !DILocation(line: 3402, column: 7, scope: !11519)
!11529 = !DILocation(line: 3402, column: 15, scope: !11519)
!11530 = !DILocation(line: 3404, column: 7, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11496, file: !3, line: 3404, column: 7)
!11532 = !DILocation(line: 3404, column: 16, scope: !11531)
!11533 = !DILocation(line: 3404, column: 14, scope: !11531)
!11534 = !DILocation(line: 3404, column: 21, scope: !11531)
!11535 = !DILocation(line: 3404, column: 7, scope: !11496)
!11536 = !DILocation(line: 3405, column: 13, scope: !11531)
!11537 = !DILocation(line: 3405, column: 11, scope: !11531)
!11538 = !DILocation(line: 3405, column: 4, scope: !11531)
!11539 = !DILocation(line: 3407, column: 25, scope: !11531)
!11540 = !DILocation(line: 3407, column: 23, scope: !11531)
!11541 = !DILocation(line: 3407, column: 13, scope: !11531)
!11542 = !DILocation(line: 3407, column: 11, scope: !11531)
!11543 = !DILocation(line: 3408, column: 18, scope: !11496)
!11544 = !DILocation(line: 3408, column: 3, scope: !11496)
!11545 = !DILocation(line: 3408, column: 6, scope: !11496)
!11546 = !DILocation(line: 3408, column: 16, scope: !11496)
!11547 = !DILocation(line: 3409, column: 18, scope: !11496)
!11548 = !DILocation(line: 3409, column: 21, scope: !11496)
!11549 = !DILocation(line: 3409, column: 3, scope: !11496)
!11550 = !DILocation(line: 3409, column: 6, scope: !11496)
!11551 = !DILocation(line: 3409, column: 16, scope: !11496)
!11552 = !DILocation(line: 3410, column: 3, scope: !11496)
!11553 = !DILocation(line: 3410, column: 6, scope: !11496)
!11554 = !DILocation(line: 3410, column: 22, scope: !11496)
!11555 = !DILocation(line: 3412, column: 14, scope: !11496)
!11556 = !DILocation(line: 3412, column: 12, scope: !11496)
!11557 = !DILocation(line: 3413, column: 21, scope: !11496)
!11558 = !DILocation(line: 3413, column: 3, scope: !11496)
!11559 = !DILocation(line: 3413, column: 6, scope: !11496)
!11560 = !DILocation(line: 3413, column: 19, scope: !11496)
!11561 = !DILocation(line: 3415, column: 36, scope: !11496)
!11562 = !DILocation(line: 3415, column: 41, scope: !11496)
!11563 = !DILocation(line: 3415, column: 49, scope: !11496)
!11564 = !DILocation(line: 3415, column: 55, scope: !11496)
!11565 = !DILocation(line: 3415, column: 60, scope: !11496)
!11566 = !DILocation(line: 3416, column: 8, scope: !11496)
!11567 = !DILocation(line: 3416, column: 18, scope: !11496)
!11568 = !DILocation(line: 3416, column: 26, scope: !11496)
!11569 = !DILocation(line: 3415, column: 3, scope: !11496)
!11570 = !DILocation(line: 3419, column: 11, scope: !11496)
!11571 = !DILocation(line: 3419, column: 8, scope: !11496)
!11572 = !DILocation(line: 3420, column: 10, scope: !11496)
!11573 = !DILocation(line: 3421, column: 7, scope: !11496)
!11574 = !DILocation(line: 3423, column: 19, scope: !11496)
!11575 = !DILocation(line: 3423, column: 24, scope: !11496)
!11576 = !DILocation(line: 3423, column: 33, scope: !11496)
!11577 = !DILocation(line: 3423, column: 3, scope: !11496)
!11578 = !DILocation(line: 3424, column: 2, scope: !11496)
!11579 = !DILocation(line: 3392, column: 22, scope: !11491)
!11580 = !DILocation(line: 3392, column: 2, scope: !11491)
!11581 = distinct !{!11581, !11494, !11582}
!11582 = !DILocation(line: 3424, column: 2, scope: !11488)
!11583 = !DILocation(line: 3426, column: 2, scope: !11428)
!11584 = !DILocation(line: 3427, column: 1, scope: !11428)
!11585 = distinct !DISubprogram(name: "dma_sync_single_range_for_device", scope: !4577, file: !4577, line: 296, type: !10867, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11586 = !DILocalVariable(name: "dev", arg: 1, scope: !11585, file: !4577, line: 296, type: !3184)
!11587 = !DILocation(line: 296, column: 68, scope: !11585)
!11588 = !DILocalVariable(name: "addr", arg: 2, scope: !11585, file: !4577, line: 297, type: !238)
!11589 = !DILocation(line: 297, column: 14, scope: !11585)
!11590 = !DILocalVariable(name: "offset", arg: 3, scope: !11585, file: !4577, line: 297, type: !176)
!11591 = !DILocation(line: 297, column: 34, scope: !11585)
!11592 = !DILocalVariable(name: "size", arg: 4, scope: !11585, file: !4577, line: 297, type: !207)
!11593 = !DILocation(line: 297, column: 49, scope: !11585)
!11594 = !DILocalVariable(name: "dir", arg: 5, scope: !11585, file: !4577, line: 298, type: !93)
!11595 = !DILocation(line: 298, column: 27, scope: !11585)
!11596 = !DILocation(line: 300, column: 36, scope: !11585)
!11597 = !DILocation(line: 300, column: 41, scope: !11585)
!11598 = !DILocation(line: 300, column: 48, scope: !11585)
!11599 = !DILocation(line: 300, column: 46, scope: !11585)
!11600 = !DILocation(line: 300, column: 56, scope: !11585)
!11601 = !DILocation(line: 300, column: 62, scope: !11585)
!11602 = !DILocation(line: 300, column: 9, scope: !11585)
!11603 = !DILocation(line: 300, column: 2, scope: !11585)
!11604 = distinct !DISubprogram(name: "test_and_set_bit_lock", scope: !11605, file: !11605, line: 53, type: !11606, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11605 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-lock.h", directory: "/home/lizy2001/genbc/linux")
!11606 = !DISubroutineType(types: !11607)
!11607 = !{!240, !102, !11608}
!11608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11609, size: 64)
!11609 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !176)
!11610 = !DILocalVariable(name: "nr", arg: 1, scope: !11611, file: !6401, line: 136, type: !102)
!11611 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !6401, file: !6401, line: 136, type: !11606, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11612 = !DILocation(line: 136, column: 28, scope: !11611, inlinedAt: !11613)
!11613 = distinct !DILocation(line: 144, column: 9, scope: !11614, inlinedAt: !11615)
!11614 = distinct !DISubprogram(name: "arch_test_and_set_bit_lock", scope: !6401, file: !6401, line: 142, type: !11606, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11615 = distinct !DILocation(line: 56, column: 9, scope: !11604)
!11616 = !DILocalVariable(name: "addr", arg: 2, scope: !11611, file: !6401, line: 136, type: !11608)
!11617 = !DILocation(line: 136, column: 56, scope: !11611, inlinedAt: !11613)
!11618 = !DILocalVariable(name: "c", scope: !11619, file: !6401, line: 138, type: !240)
!11619 = distinct !DILexicalBlock(scope: !11611, file: !6401, line: 138, column: 9)
!11620 = !DILocation(line: 138, column: 9, scope: !11619, inlinedAt: !11613)
!11621 = !DILocalVariable(name: "nr", arg: 1, scope: !11614, file: !6401, line: 142, type: !102)
!11622 = !DILocation(line: 142, column: 33, scope: !11614, inlinedAt: !11615)
!11623 = !DILocalVariable(name: "addr", arg: 2, scope: !11614, file: !6401, line: 142, type: !11608)
!11624 = !DILocation(line: 142, column: 61, scope: !11614, inlinedAt: !11615)
!11625 = !DILocation(line: 99, column: 79, scope: !10257, inlinedAt: !11626)
!11626 = distinct !DILocation(line: 55, column: 2, scope: !11604)
!11627 = !DILocation(line: 99, column: 89, scope: !10257, inlinedAt: !11626)
!11628 = !DILocalVariable(name: "nr", arg: 1, scope: !11604, file: !11605, line: 53, type: !102)
!11629 = !DILocation(line: 53, column: 47, scope: !11604)
!11630 = !DILocalVariable(name: "addr", arg: 2, scope: !11604, file: !11605, line: 53, type: !11608)
!11631 = !DILocation(line: 53, column: 75, scope: !11604)
!11632 = !DILocation(line: 55, column: 31, scope: !11604)
!11633 = !DILocation(line: 55, column: 38, scope: !11604)
!11634 = !DILocation(line: 55, column: 36, scope: !11604)
!11635 = !DILocation(line: 101, column: 20, scope: !10257, inlinedAt: !11626)
!11636 = !DILocation(line: 101, column: 23, scope: !10257, inlinedAt: !11626)
!11637 = !DILocation(line: 101, column: 2, scope: !10257, inlinedAt: !11626)
!11638 = !DILocation(line: 102, column: 2, scope: !10257, inlinedAt: !11626)
!11639 = !DILocation(line: 56, column: 36, scope: !11604)
!11640 = !DILocation(line: 56, column: 40, scope: !11604)
!11641 = !DILocation(line: 144, column: 31, scope: !11614, inlinedAt: !11615)
!11642 = !DILocation(line: 144, column: 35, scope: !11614, inlinedAt: !11615)
!11643 = !{i32 -2147154212, i32 -2147154116}
!11644 = !DILocation(line: 56, column: 2, scope: !11604)
!11645 = distinct !DISubprogram(name: "context_tasklet", scope: !3, file: !3, line: 1048, type: !4047, scopeLine: 1049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11646 = !DILocation(line: 407, column: 64, scope: !7301, inlinedAt: !11647)
!11647 = distinct !DILocation(line: 1085, column: 4, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11649, file: !3, line: 1078, column: 25)
!11649 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 1078, column: 7)
!11650 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 1059, column: 36)
!11651 = !DILocation(line: 407, column: 84, scope: !7301, inlinedAt: !11647)
!11652 = !DILocation(line: 327, column: 67, scope: !4644, inlinedAt: !11653)
!11653 = distinct !DILocation(line: 1083, column: 4, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 1083, column: 4)
!11655 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 1083, column: 4)
!11656 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 1083, column: 4)
!11657 = distinct !DILexicalBlock(scope: !11658, file: !3, line: 1083, column: 4)
!11658 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 1083, column: 4)
!11659 = !DILocalVariable(name: "data", arg: 1, scope: !11645, file: !3, line: 1048, type: !176)
!11660 = !DILocation(line: 1048, column: 43, scope: !11645)
!11661 = !DILocalVariable(name: "ctx", scope: !11645, file: !3, line: 1050, type: !4083)
!11662 = !DILocation(line: 1050, column: 18, scope: !11645)
!11663 = !DILocation(line: 1050, column: 43, scope: !11645)
!11664 = !DILocation(line: 1050, column: 24, scope: !11645)
!11665 = !DILocalVariable(name: "d", scope: !11645, file: !3, line: 1051, type: !4019)
!11666 = !DILocation(line: 1051, column: 21, scope: !11645)
!11667 = !DILocalVariable(name: "last", scope: !11645, file: !3, line: 1051, type: !4019)
!11668 = !DILocation(line: 1051, column: 25, scope: !11645)
!11669 = !DILocalVariable(name: "address", scope: !11645, file: !3, line: 1052, type: !231)
!11670 = !DILocation(line: 1052, column: 6, scope: !11645)
!11671 = !DILocalVariable(name: "z", scope: !11645, file: !3, line: 1053, type: !177)
!11672 = !DILocation(line: 1053, column: 6, scope: !11645)
!11673 = !DILocalVariable(name: "desc", scope: !11645, file: !3, line: 1054, type: !4066)
!11674 = !DILocation(line: 1054, column: 28, scope: !11645)
!11675 = !DILocalVariable(name: "__mptr", scope: !11676, file: !3, line: 1056, type: !175)
!11676 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 1056, column: 9)
!11677 = !DILocation(line: 1056, column: 9, scope: !11676)
!11678 = !DILocation(line: 1056, column: 9, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11676, file: !3, line: 1056, column: 9)
!11680 = !DILocation(line: 1056, column: 7, scope: !11645)
!11681 = !DILocation(line: 1058, column: 9, scope: !11645)
!11682 = !DILocation(line: 1058, column: 14, scope: !11645)
!11683 = !DILocation(line: 1058, column: 7, scope: !11645)
!11684 = !DILocation(line: 1059, column: 2, scope: !11645)
!11685 = !DILocation(line: 1059, column: 9, scope: !11645)
!11686 = !DILocation(line: 1059, column: 15, scope: !11645)
!11687 = !DILocation(line: 1059, column: 30, scope: !11645)
!11688 = !DILocalVariable(name: "old_desc", scope: !11650, file: !3, line: 1060, type: !4066)
!11689 = !DILocation(line: 1060, column: 29, scope: !11650)
!11690 = !DILocation(line: 1060, column: 40, scope: !11650)
!11691 = !DILocation(line: 1061, column: 13, scope: !11650)
!11692 = !DILocation(line: 1061, column: 11, scope: !11650)
!11693 = !DILocation(line: 1062, column: 7, scope: !11650)
!11694 = !DILocation(line: 1062, column: 15, scope: !11650)
!11695 = !DILocation(line: 1062, column: 5, scope: !11650)
!11696 = !DILocation(line: 1063, column: 11, scope: !11650)
!11697 = !DILocation(line: 1064, column: 22, scope: !11650)
!11698 = !DILocation(line: 1064, column: 3, scope: !11650)
!11699 = !DILocation(line: 1064, column: 8, scope: !11650)
!11700 = !DILocation(line: 1064, column: 20, scope: !11650)
!11701 = !DILocation(line: 1068, column: 7, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 1068, column: 7)
!11703 = !DILocation(line: 1068, column: 17, scope: !11702)
!11704 = !DILocation(line: 1068, column: 23, scope: !11702)
!11705 = !DILocation(line: 1068, column: 15, scope: !11702)
!11706 = !DILocation(line: 1068, column: 34, scope: !11702)
!11707 = !DILocation(line: 1069, column: 5, scope: !11702)
!11708 = !DILocation(line: 1069, column: 16, scope: !11702)
!11709 = !DILocation(line: 1069, column: 22, scope: !11702)
!11710 = !DILocation(line: 1069, column: 35, scope: !11702)
!11711 = !DILocation(line: 1069, column: 41, scope: !11702)
!11712 = !DILocation(line: 1069, column: 33, scope: !11702)
!11713 = !DILocation(line: 1069, column: 13, scope: !11702)
!11714 = !DILocation(line: 1068, column: 7, scope: !11650)
!11715 = !DILocalVariable(name: "__mptr", scope: !11716, file: !3, line: 1070, type: !175)
!11716 = distinct !DILexicalBlock(scope: !11702, file: !3, line: 1070, column: 11)
!11717 = !DILocation(line: 1070, column: 11, scope: !11716)
!11718 = !DILocation(line: 1070, column: 11, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 1070, column: 11)
!11720 = !DILocation(line: 1070, column: 9, scope: !11702)
!11721 = !DILocation(line: 1070, column: 4, scope: !11702)
!11722 = !DILocation(line: 1072, column: 7, scope: !11650)
!11723 = !DILocation(line: 1072, column: 13, scope: !11650)
!11724 = !DILocation(line: 1072, column: 23, scope: !11650)
!11725 = !DILocation(line: 1072, column: 33, scope: !11650)
!11726 = !DILocation(line: 1072, column: 39, scope: !11650)
!11727 = !DILocation(line: 1072, column: 31, scope: !11650)
!11728 = !DILocation(line: 1072, column: 51, scope: !11650)
!11729 = !DILocation(line: 1072, column: 20, scope: !11650)
!11730 = !DILocation(line: 1072, column: 5, scope: !11650)
!11731 = !DILocation(line: 1073, column: 33, scope: !11650)
!11732 = !DILocation(line: 1073, column: 36, scope: !11650)
!11733 = !DILocation(line: 1073, column: 10, scope: !11650)
!11734 = !DILocation(line: 1073, column: 8, scope: !11650)
!11735 = !DILocation(line: 1075, column: 8, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 1075, column: 7)
!11737 = !DILocation(line: 1075, column: 13, scope: !11736)
!11738 = !DILocation(line: 1075, column: 22, scope: !11736)
!11739 = !DILocation(line: 1075, column: 27, scope: !11736)
!11740 = !DILocation(line: 1075, column: 30, scope: !11736)
!11741 = !DILocation(line: 1075, column: 7, scope: !11650)
!11742 = !DILocation(line: 1076, column: 4, scope: !11736)
!11743 = !DILocation(line: 1078, column: 7, scope: !11649)
!11744 = !DILocation(line: 1078, column: 19, scope: !11649)
!11745 = !DILocation(line: 1078, column: 16, scope: !11649)
!11746 = !DILocation(line: 1078, column: 7, scope: !11650)
!11747 = !DILocalVariable(name: "flags", scope: !11648, file: !3, line: 1081, type: !176)
!11748 = !DILocation(line: 1081, column: 18, scope: !11648)
!11749 = !DILocation(line: 1082, column: 4, scope: !11648)
!11750 = !DILocation(line: 1082, column: 14, scope: !11648)
!11751 = !DILocation(line: 1082, column: 19, scope: !11648)
!11752 = !DILocation(line: 1083, column: 4, scope: !11648)
!11753 = !DILocation(line: 1083, column: 4, scope: !11658)
!11754 = !DILocalVariable(name: "__dummy", scope: !11755, file: !3, line: 1083, type: !176)
!11755 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 1083, column: 4)
!11756 = !DILocation(line: 1083, column: 4, scope: !11755)
!11757 = !DILocalVariable(name: "__dummy2", scope: !11755, file: !3, line: 1083, type: !176)
!11758 = !DILocation(line: 1083, column: 4, scope: !11657)
!11759 = !DILocation(line: 1083, column: 4, scope: !11656)
!11760 = !DILocation(line: 1083, column: 4, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 1083, column: 4)
!11762 = !DILocalVariable(name: "__dummy", scope: !11763, file: !3, line: 1083, type: !176)
!11763 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 1083, column: 4)
!11764 = distinct !DILexicalBlock(scope: !11761, file: !3, line: 1083, column: 4)
!11765 = !DILocation(line: 1083, column: 4, scope: !11763)
!11766 = !DILocalVariable(name: "__dummy2", scope: !11763, file: !3, line: 1083, type: !176)
!11767 = !DILocation(line: 1083, column: 4, scope: !11764)
!11768 = !DILocation(line: 1083, column: 4, scope: !11655)
!11769 = !{i32 -2141558954}
!11770 = !DILocation(line: 1083, column: 4, scope: !11654)
!11771 = !DILocation(line: 329, column: 10, scope: !4644, inlinedAt: !11653)
!11772 = !DILocation(line: 329, column: 16, scope: !4644, inlinedAt: !11653)
!11773 = !DILocation(line: 1084, column: 20, scope: !11648)
!11774 = !DILocation(line: 1084, column: 30, scope: !11648)
!11775 = !DILocation(line: 1084, column: 37, scope: !11648)
!11776 = !DILocation(line: 1084, column: 42, scope: !11648)
!11777 = !DILocation(line: 1084, column: 4, scope: !11648)
!11778 = !DILocation(line: 1085, column: 28, scope: !11648)
!11779 = !DILocation(line: 1085, column: 33, scope: !11648)
!11780 = !DILocation(line: 1085, column: 39, scope: !11648)
!11781 = !DILocation(line: 1085, column: 45, scope: !11648)
!11782 = !DILocation(line: 409, column: 2, scope: !7393, inlinedAt: !11647)
!11783 = !DILocation(line: 409, column: 2, scope: !7398, inlinedAt: !11647)
!11784 = !DILocation(line: 409, column: 2, scope: !7399, inlinedAt: !11647)
!11785 = !DILocation(line: 409, column: 2, scope: !7406, inlinedAt: !11647)
!11786 = !DILocation(line: 409, column: 2, scope: !7409, inlinedAt: !11647)
!11787 = !DILocation(line: 1086, column: 3, scope: !11648)
!11788 = !DILocation(line: 1087, column: 15, scope: !11650)
!11789 = !DILocation(line: 1087, column: 3, scope: !11650)
!11790 = !DILocation(line: 1087, column: 8, scope: !11650)
!11791 = !DILocation(line: 1087, column: 13, scope: !11650)
!11792 = distinct !{!11792, !11684, !11793}
!11793 = !DILocation(line: 1088, column: 2, scope: !11645)
!11794 = !DILocation(line: 1089, column: 1, scope: !11645)
!11795 = distinct !DISubprogram(name: "flush_ir_buffer_fill", scope: !3, file: !3, line: 2830, type: !10843, scopeLine: 2831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11796 = !DILocalVariable(name: "ctx", arg: 1, scope: !11795, file: !3, line: 2830, type: !4089)
!11797 = !DILocation(line: 2830, column: 54, scope: !11795)
!11798 = !DILocation(line: 2832, column: 32, scope: !11795)
!11799 = !DILocation(line: 2832, column: 37, scope: !11795)
!11800 = !DILocation(line: 2832, column: 45, scope: !11795)
!11801 = !DILocation(line: 2832, column: 51, scope: !11795)
!11802 = !DILocation(line: 2832, column: 56, scope: !11795)
!11803 = !DILocation(line: 2833, column: 11, scope: !11795)
!11804 = !DILocation(line: 2833, column: 16, scope: !11795)
!11805 = !DILocation(line: 2833, column: 30, scope: !11795)
!11806 = !DILocation(line: 2834, column: 11, scope: !11795)
!11807 = !DILocation(line: 2834, column: 16, scope: !11795)
!11808 = !DILocation(line: 2834, column: 30, scope: !11795)
!11809 = !DILocation(line: 2835, column: 11, scope: !11795)
!11810 = !DILocation(line: 2835, column: 16, scope: !11795)
!11811 = !DILocation(line: 2832, column: 2, scope: !11795)
!11812 = !DILocation(line: 2837, column: 2, scope: !11795)
!11813 = !DILocation(line: 2837, column: 7, scope: !11795)
!11814 = !DILocation(line: 2837, column: 12, scope: !11795)
!11815 = !DILocation(line: 2837, column: 21, scope: !11795)
!11816 = !DILocation(line: 2837, column: 25, scope: !11795)
!11817 = !DILocation(line: 2837, column: 30, scope: !11795)
!11818 = !DILocation(line: 2838, column: 10, scope: !11795)
!11819 = !DILocation(line: 2838, column: 15, scope: !11795)
!11820 = !DILocation(line: 2838, column: 31, scope: !11795)
!11821 = !DILocation(line: 2838, column: 36, scope: !11795)
!11822 = !DILocation(line: 2838, column: 29, scope: !11795)
!11823 = !DILocation(line: 2839, column: 10, scope: !11795)
!11824 = !DILocation(line: 2839, column: 15, scope: !11795)
!11825 = !DILocation(line: 2839, column: 20, scope: !11795)
!11826 = !DILocation(line: 2840, column: 2, scope: !11795)
!11827 = !DILocation(line: 2840, column: 7, scope: !11795)
!11828 = !DILocation(line: 2840, column: 20, scope: !11795)
!11829 = !DILocation(line: 2841, column: 1, scope: !11795)
!11830 = distinct !DISubprogram(name: "clear_bit_unlock", scope: !11605, file: !11605, line: 23, type: !11831, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11831 = !DISubroutineType(types: !11832)
!11832 = !{null, !102, !11608}
!11833 = !DILocalVariable(name: "nr", arg: 1, scope: !11834, file: !6401, line: 72, type: !102)
!11834 = distinct !DISubprogram(name: "arch_clear_bit", scope: !6401, file: !6401, line: 72, type: !11831, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11835 = !DILocation(line: 72, column: 21, scope: !11834, inlinedAt: !11836)
!11836 = distinct !DILocation(line: 88, column: 2, scope: !11837, inlinedAt: !11838)
!11837 = distinct !DISubprogram(name: "arch_clear_bit_unlock", scope: !6401, file: !6401, line: 85, type: !11831, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11838 = distinct !DILocation(line: 26, column: 2, scope: !11830)
!11839 = !DILocalVariable(name: "addr", arg: 2, scope: !11834, file: !6401, line: 72, type: !11608)
!11840 = !DILocation(line: 72, column: 49, scope: !11834, inlinedAt: !11836)
!11841 = !DILocalVariable(name: "nr", arg: 1, scope: !11837, file: !6401, line: 85, type: !102)
!11842 = !DILocation(line: 85, column: 28, scope: !11837, inlinedAt: !11838)
!11843 = !DILocalVariable(name: "addr", arg: 2, scope: !11837, file: !6401, line: 85, type: !11608)
!11844 = !DILocation(line: 85, column: 56, scope: !11837, inlinedAt: !11838)
!11845 = !DILocalVariable(name: "v", arg: 1, scope: !11846, file: !10258, line: 84, type: !10261)
!11846 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !10258, file: !10258, line: 84, type: !10259, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11847 = !DILocation(line: 84, column: 74, scope: !11846, inlinedAt: !11848)
!11848 = distinct !DILocation(line: 25, column: 2, scope: !11830)
!11849 = !DILocalVariable(name: "size", arg: 2, scope: !11846, file: !10258, line: 84, type: !207)
!11850 = !DILocation(line: 84, column: 84, scope: !11846, inlinedAt: !11848)
!11851 = !DILocalVariable(name: "nr", arg: 1, scope: !11830, file: !11605, line: 23, type: !102)
!11852 = !DILocation(line: 23, column: 42, scope: !11830)
!11853 = !DILocalVariable(name: "addr", arg: 2, scope: !11830, file: !11605, line: 23, type: !11608)
!11854 = !DILocation(line: 23, column: 70, scope: !11830)
!11855 = !DILocation(line: 25, column: 26, scope: !11830)
!11856 = !DILocation(line: 25, column: 33, scope: !11830)
!11857 = !DILocation(line: 25, column: 31, scope: !11830)
!11858 = !DILocation(line: 86, column: 20, scope: !11846, inlinedAt: !11848)
!11859 = !DILocation(line: 86, column: 23, scope: !11846, inlinedAt: !11848)
!11860 = !DILocation(line: 86, column: 2, scope: !11846, inlinedAt: !11848)
!11861 = !DILocation(line: 87, column: 2, scope: !11846, inlinedAt: !11848)
!11862 = !DILocation(line: 26, column: 24, scope: !11830)
!11863 = !DILocation(line: 26, column: 28, scope: !11830)
!11864 = !DILocation(line: 87, column: 2, scope: !11837, inlinedAt: !11838)
!11865 = !{i32 -2147157211}
!11866 = !DILocation(line: 88, column: 17, scope: !11837, inlinedAt: !11838)
!11867 = !DILocation(line: 88, column: 21, scope: !11837, inlinedAt: !11838)
!11868 = !DILocation(line: 74, column: 27, scope: !11869, inlinedAt: !11836)
!11869 = distinct !DILexicalBlock(scope: !11834, file: !6401, line: 74, column: 6)
!11870 = !DILocation(line: 74, column: 6, scope: !11869, inlinedAt: !11836)
!11871 = !DILocation(line: 74, column: 6, scope: !11834, inlinedAt: !11836)
!11872 = !DILocation(line: 76, column: 6, scope: !11873, inlinedAt: !11836)
!11873 = distinct !DILexicalBlock(scope: !11869, file: !6401, line: 74, column: 32)
!11874 = !DILocation(line: 77, column: 13, scope: !11873, inlinedAt: !11836)
!11875 = !DILocation(line: 77, column: 12, scope: !11873, inlinedAt: !11836)
!11876 = !DILocation(line: 75, column: 3, scope: !11873, inlinedAt: !11836)
!11877 = !{i32 -2147157772}
!11878 = !DILocation(line: 78, column: 2, scope: !11873, inlinedAt: !11836)
!11879 = !DILocation(line: 80, column: 8, scope: !11880, inlinedAt: !11836)
!11880 = distinct !DILexicalBlock(scope: !11869, file: !6401, line: 78, column: 9)
!11881 = !DILocation(line: 80, column: 32, scope: !11880, inlinedAt: !11836)
!11882 = !DILocation(line: 79, column: 3, scope: !11880, inlinedAt: !11836)
!11883 = !{i32 -2147157640}
!11884 = !DILocation(line: 27, column: 1, scope: !11830)
!11885 = distinct !DISubprogram(name: "list_move_tail", scope: !5597, file: !5597, line: 224, type: !10014, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11886 = !DILocalVariable(name: "list", arg: 1, scope: !11885, file: !5597, line: 224, type: !253)
!11887 = !DILocation(line: 224, column: 53, scope: !11885)
!11888 = !DILocalVariable(name: "head", arg: 2, scope: !11885, file: !5597, line: 225, type: !253)
!11889 = !DILocation(line: 225, column: 25, scope: !11885)
!11890 = !DILocation(line: 227, column: 19, scope: !11885)
!11891 = !DILocation(line: 227, column: 2, scope: !11885)
!11892 = !DILocation(line: 228, column: 16, scope: !11885)
!11893 = !DILocation(line: 228, column: 22, scope: !11885)
!11894 = !DILocation(line: 228, column: 2, scope: !11885)
!11895 = !DILocation(line: 229, column: 1, scope: !11885)
!11896 = distinct !DISubprogram(name: "__list_del_entry", scope: !5597, file: !5597, line: 130, type: !5598, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11897 = !DILocalVariable(name: "entry", arg: 1, scope: !11896, file: !5597, line: 130, type: !253)
!11898 = !DILocation(line: 130, column: 55, scope: !11896)
!11899 = !DILocation(line: 132, column: 30, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11896, file: !5597, line: 132, column: 6)
!11901 = !DILocation(line: 132, column: 7, scope: !11900)
!11902 = !DILocation(line: 132, column: 6, scope: !11896)
!11903 = !DILocation(line: 133, column: 3, scope: !11900)
!11904 = !DILocation(line: 135, column: 13, scope: !11896)
!11905 = !DILocation(line: 135, column: 20, scope: !11896)
!11906 = !DILocation(line: 135, column: 26, scope: !11896)
!11907 = !DILocation(line: 135, column: 33, scope: !11896)
!11908 = !DILocation(line: 135, column: 2, scope: !11896)
!11909 = !DILocation(line: 136, column: 1, scope: !11896)
!11910 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !5597, file: !5597, line: 51, type: !11911, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11911 = !DISubroutineType(types: !11912)
!11912 = !{!240, !253}
!11913 = !DILocalVariable(name: "entry", arg: 1, scope: !11910, file: !5597, line: 51, type: !253)
!11914 = !DILocation(line: 51, column: 61, scope: !11910)
!11915 = !DILocation(line: 53, column: 2, scope: !11910)
!11916 = distinct !DISubprogram(name: "__list_del", scope: !5597, file: !5597, line: 110, type: !10014, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11917 = !DILocalVariable(name: "prev", arg: 1, scope: !11916, file: !5597, line: 110, type: !253)
!11918 = !DILocation(line: 110, column: 50, scope: !11916)
!11919 = !DILocalVariable(name: "next", arg: 2, scope: !11916, file: !5597, line: 110, type: !253)
!11920 = !DILocation(line: 110, column: 75, scope: !11916)
!11921 = !DILocation(line: 112, column: 15, scope: !11916)
!11922 = !DILocation(line: 112, column: 2, scope: !11916)
!11923 = !DILocation(line: 112, column: 8, scope: !11916)
!11924 = !DILocation(line: 112, column: 13, scope: !11916)
!11925 = !DILocation(line: 113, column: 2, scope: !11916)
!11926 = !DILocation(line: 113, column: 2, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11916, file: !5597, line: 113, column: 2)
!11928 = !DILocation(line: 113, column: 2, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11927, file: !5597, line: 113, column: 2)
!11930 = !DILocation(line: 113, column: 2, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11927, file: !5597, line: 113, column: 2)
!11932 = !DILocation(line: 114, column: 1, scope: !11916)
!11933 = distinct !DISubprogram(name: "context_stop", scope: !3, file: !3, line: 1254, type: !6628, scopeLine: 1255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11934 = !DILocalVariable(name: "ctx", arg: 1, scope: !11933, file: !3, line: 1254, type: !4083)
!11935 = !DILocation(line: 1254, column: 42, scope: !11933)
!11936 = !DILocalVariable(name: "ohci", scope: !11933, file: !3, line: 1256, type: !187)
!11937 = !DILocation(line: 1256, column: 18, scope: !11933)
!11938 = !DILocation(line: 1256, column: 25, scope: !11933)
!11939 = !DILocation(line: 1256, column: 30, scope: !11933)
!11940 = !DILocalVariable(name: "reg", scope: !11933, file: !3, line: 1257, type: !231)
!11941 = !DILocation(line: 1257, column: 6, scope: !11933)
!11942 = !DILocalVariable(name: "i", scope: !11933, file: !3, line: 1258, type: !177)
!11943 = !DILocation(line: 1258, column: 6, scope: !11933)
!11944 = !DILocation(line: 1260, column: 12, scope: !11933)
!11945 = !DILocation(line: 1260, column: 18, scope: !11933)
!11946 = !DILocation(line: 1260, column: 2, scope: !11933)
!11947 = !DILocation(line: 1261, column: 2, scope: !11933)
!11948 = !DILocation(line: 1261, column: 7, scope: !11933)
!11949 = !DILocation(line: 1261, column: 15, scope: !11933)
!11950 = !DILocation(line: 1263, column: 9, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11933, file: !3, line: 1263, column: 2)
!11952 = !DILocation(line: 1263, column: 7, scope: !11951)
!11953 = !DILocation(line: 1263, column: 14, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 1263, column: 2)
!11955 = !DILocation(line: 1263, column: 16, scope: !11954)
!11956 = !DILocation(line: 1263, column: 2, scope: !11951)
!11957 = !DILocation(line: 1264, column: 18, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11954, file: !3, line: 1263, column: 29)
!11959 = !DILocation(line: 1264, column: 24, scope: !11958)
!11960 = !DILocation(line: 1264, column: 9, scope: !11958)
!11961 = !DILocation(line: 1264, column: 7, scope: !11958)
!11962 = !DILocation(line: 1265, column: 8, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11958, file: !3, line: 1265, column: 7)
!11964 = !DILocation(line: 1265, column: 12, scope: !11963)
!11965 = !DILocation(line: 1265, column: 30, scope: !11963)
!11966 = !DILocation(line: 1265, column: 7, scope: !11958)
!11967 = !DILocation(line: 1266, column: 4, scope: !11963)
!11968 = !DILocation(line: 1268, column: 7, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11958, file: !3, line: 1268, column: 7)
!11970 = !DILocation(line: 1268, column: 7, scope: !11958)
!11971 = !DILocation(line: 1269, column: 4, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 1269, column: 4)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !3, line: 1269, column: 4)
!11974 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 1269, column: 4)
!11975 = distinct !DILexicalBlock(scope: !11969, file: !3, line: 1269, column: 4)
!11976 = !DILocation(line: 1269, column: 4, scope: !11969)
!11977 = !DILocation(line: 1270, column: 2, scope: !11958)
!11978 = !DILocation(line: 1263, column: 25, scope: !11954)
!11979 = !DILocation(line: 1263, column: 2, scope: !11954)
!11980 = distinct !{!11980, !11956, !11981}
!11981 = !DILocation(line: 1270, column: 2, scope: !11951)
!11982 = !DILocation(line: 1271, column: 2, scope: !11933)
!11983 = !DILocation(line: 1272, column: 1, scope: !11933)
!11984 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !73, file: !73, line: 660, type: !11985, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11985 = !DISubroutineType(types: !11986)
!11986 = !{null, !3184, !175}
!11987 = !DILocalVariable(name: "dev", arg: 1, scope: !11984, file: !73, line: 660, type: !3184)
!11988 = !DILocation(line: 660, column: 51, scope: !11984)
!11989 = !DILocalVariable(name: "data", arg: 2, scope: !11984, file: !73, line: 660, type: !175)
!11990 = !DILocation(line: 660, column: 62, scope: !11984)
!11991 = !DILocation(line: 662, column: 21, scope: !11984)
!11992 = !DILocation(line: 662, column: 2, scope: !11984)
!11993 = !DILocation(line: 662, column: 7, scope: !11984)
!11994 = !DILocation(line: 662, column: 19, scope: !11984)
!11995 = !DILocation(line: 663, column: 1, scope: !11984)
!11996 = distinct !DISubprogram(name: "find_and_insert_self_id", scope: !3, file: !3, line: 1829, type: !8779, scopeLine: 1830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!11997 = !DILocalVariable(name: "ohci", arg: 1, scope: !11996, file: !3, line: 1829, type: !187)
!11998 = !DILocation(line: 1829, column: 52, scope: !11996)
!11999 = !DILocalVariable(name: "self_id_count", arg: 2, scope: !11996, file: !3, line: 1829, type: !177)
!12000 = !DILocation(line: 1829, column: 62, scope: !11996)
!12001 = !DILocalVariable(name: "reg", scope: !11996, file: !3, line: 1831, type: !177)
!12002 = !DILocation(line: 1831, column: 6, scope: !11996)
!12003 = !DILocalVariable(name: "i", scope: !11996, file: !3, line: 1831, type: !177)
!12004 = !DILocation(line: 1831, column: 11, scope: !11996)
!12005 = !DILocalVariable(name: "pos", scope: !11996, file: !3, line: 1831, type: !177)
!12006 = !DILocation(line: 1831, column: 14, scope: !11996)
!12007 = !DILocalVariable(name: "status", scope: !11996, file: !3, line: 1831, type: !177)
!12008 = !DILocation(line: 1831, column: 19, scope: !11996)
!12009 = !DILocalVariable(name: "self_id", scope: !11996, file: !3, line: 1833, type: !231)
!12010 = !DILocation(line: 1833, column: 6, scope: !11996)
!12011 = !DILocation(line: 1835, column: 17, scope: !11996)
!12012 = !DILocation(line: 1835, column: 8, scope: !11996)
!12013 = !DILocation(line: 1835, column: 6, scope: !11996)
!12014 = !DILocation(line: 1836, column: 8, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 1836, column: 6)
!12016 = !DILocation(line: 1836, column: 12, scope: !12015)
!12017 = !DILocation(line: 1836, column: 6, scope: !11996)
!12018 = !DILocation(line: 1837, column: 3, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12015, file: !3, line: 1836, column: 40)
!12020 = !DILocation(line: 1839, column: 3, scope: !12019)
!12021 = !DILocation(line: 1841, column: 15, scope: !11996)
!12022 = !DILocation(line: 1841, column: 19, scope: !11996)
!12023 = !DILocation(line: 1841, column: 27, scope: !11996)
!12024 = !DILocation(line: 1841, column: 10, scope: !11996)
!12025 = !DILocation(line: 1843, column: 27, scope: !11996)
!12026 = !DILocation(line: 1843, column: 33, scope: !11996)
!12027 = !DILocation(line: 1843, column: 8, scope: !11996)
!12028 = !DILocation(line: 1843, column: 6, scope: !11996)
!12029 = !DILocation(line: 1844, column: 6, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 1844, column: 6)
!12031 = !DILocation(line: 1844, column: 10, scope: !12030)
!12032 = !DILocation(line: 1844, column: 6, scope: !11996)
!12033 = !DILocation(line: 1845, column: 10, scope: !12030)
!12034 = !DILocation(line: 1845, column: 3, scope: !12030)
!12035 = !DILocation(line: 1846, column: 15, scope: !11996)
!12036 = !DILocation(line: 1846, column: 19, scope: !11996)
!12037 = !DILocation(line: 1846, column: 27, scope: !11996)
!12038 = !DILocation(line: 1846, column: 10, scope: !11996)
!12039 = !DILocation(line: 1848, column: 27, scope: !11996)
!12040 = !DILocation(line: 1848, column: 33, scope: !11996)
!12041 = !DILocation(line: 1848, column: 8, scope: !11996)
!12042 = !DILocation(line: 1848, column: 6, scope: !11996)
!12043 = !DILocation(line: 1849, column: 6, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 1849, column: 6)
!12045 = !DILocation(line: 1849, column: 10, scope: !12044)
!12046 = !DILocation(line: 1849, column: 6, scope: !11996)
!12047 = !DILocation(line: 1850, column: 10, scope: !12044)
!12048 = !DILocation(line: 1850, column: 3, scope: !12044)
!12049 = !DILocation(line: 1851, column: 15, scope: !11996)
!12050 = !DILocation(line: 1851, column: 19, scope: !11996)
!12051 = !DILocation(line: 1851, column: 27, scope: !11996)
!12052 = !DILocation(line: 1851, column: 10, scope: !11996)
!12053 = !DILocation(line: 1853, column: 9, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 1853, column: 2)
!12055 = !DILocation(line: 1853, column: 7, scope: !12054)
!12056 = !DILocation(line: 1853, column: 14, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 1853, column: 2)
!12058 = !DILocation(line: 1853, column: 16, scope: !12057)
!12059 = !DILocation(line: 1853, column: 2, scope: !12054)
!12060 = !DILocation(line: 1854, column: 32, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12057, file: !3, line: 1853, column: 26)
!12062 = !DILocation(line: 1854, column: 38, scope: !12061)
!12063 = !DILocation(line: 1854, column: 12, scope: !12061)
!12064 = !DILocation(line: 1854, column: 10, scope: !12061)
!12065 = !DILocation(line: 1855, column: 7, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12061, file: !3, line: 1855, column: 7)
!12067 = !DILocation(line: 1855, column: 14, scope: !12066)
!12068 = !DILocation(line: 1855, column: 7, scope: !12061)
!12069 = !DILocation(line: 1856, column: 11, scope: !12066)
!12070 = !DILocation(line: 1856, column: 4, scope: !12066)
!12071 = !DILocation(line: 1857, column: 16, scope: !12061)
!12072 = !DILocation(line: 1857, column: 23, scope: !12061)
!12073 = !DILocation(line: 1857, column: 39, scope: !12061)
!12074 = !DILocation(line: 1857, column: 41, scope: !12061)
!12075 = !DILocation(line: 1857, column: 36, scope: !12061)
!12076 = !DILocation(line: 1857, column: 30, scope: !12061)
!12077 = !DILocation(line: 1857, column: 11, scope: !12061)
!12078 = !DILocation(line: 1858, column: 2, scope: !12061)
!12079 = !DILocation(line: 1853, column: 22, scope: !12057)
!12080 = !DILocation(line: 1853, column: 2, scope: !12057)
!12081 = distinct !{!12081, !12059, !12082}
!12082 = !DILocation(line: 1858, column: 2, scope: !12054)
!12083 = !DILocation(line: 1860, column: 29, scope: !11996)
!12084 = !DILocation(line: 1860, column: 13, scope: !11996)
!12085 = !DILocation(line: 1860, column: 10, scope: !11996)
!12086 = !DILocation(line: 1862, column: 24, scope: !11996)
!12087 = !DILocation(line: 1862, column: 30, scope: !11996)
!12088 = !DILocation(line: 1862, column: 39, scope: !11996)
!12089 = !DILocation(line: 1862, column: 8, scope: !11996)
!12090 = !DILocation(line: 1862, column: 6, scope: !11996)
!12091 = !DILocation(line: 1863, column: 6, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 1863, column: 6)
!12093 = !DILocation(line: 1863, column: 10, scope: !12092)
!12094 = !DILocation(line: 1863, column: 6, scope: !11996)
!12095 = !DILocation(line: 1864, column: 13, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12092, file: !3, line: 1863, column: 16)
!12097 = !DILocation(line: 1864, column: 19, scope: !12096)
!12098 = !DILocation(line: 1864, column: 34, scope: !12096)
!12099 = !DILocation(line: 1864, column: 37, scope: !12096)
!12100 = !DILocation(line: 1864, column: 3, scope: !12096)
!12101 = !DILocation(line: 1865, column: 6, scope: !12096)
!12102 = !DILocation(line: 1865, column: 12, scope: !12096)
!12103 = !DILocation(line: 1865, column: 27, scope: !12096)
!12104 = !DILocation(line: 1866, column: 5, scope: !12096)
!12105 = !DILocation(line: 1866, column: 21, scope: !12096)
!12106 = !DILocation(line: 1866, column: 19, scope: !12096)
!12107 = !DILocation(line: 1866, column: 4, scope: !12096)
!12108 = !DILocation(line: 1866, column: 26, scope: !12096)
!12109 = !DILocation(line: 1867, column: 31, scope: !12096)
!12110 = !DILocation(line: 1867, column: 3, scope: !12096)
!12111 = !DILocation(line: 1867, column: 9, scope: !12096)
!12112 = !DILocation(line: 1867, column: 24, scope: !12096)
!12113 = !DILocation(line: 1867, column: 29, scope: !12096)
!12114 = !DILocation(line: 1868, column: 16, scope: !12096)
!12115 = !DILocation(line: 1869, column: 2, scope: !12096)
!12116 = !DILocation(line: 1870, column: 9, scope: !11996)
!12117 = !DILocation(line: 1870, column: 2, scope: !11996)
!12118 = !DILocation(line: 1871, column: 1, scope: !11996)
!12119 = distinct !DISubprogram(name: "at_context_flush", scope: !3, file: !3, line: 1414, type: !6628, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12120 = !DILocalVariable(name: "ctx", arg: 1, scope: !12119, file: !3, line: 1414, type: !4083)
!12121 = !DILocation(line: 1414, column: 46, scope: !12119)
!12122 = !DILocation(line: 1416, column: 19, scope: !12119)
!12123 = !DILocation(line: 1416, column: 24, scope: !12119)
!12124 = !DILocation(line: 1416, column: 2, scope: !12119)
!12125 = !DILocation(line: 1418, column: 2, scope: !12119)
!12126 = !DILocation(line: 1418, column: 7, scope: !12119)
!12127 = !DILocation(line: 1418, column: 16, scope: !12119)
!12128 = !DILocation(line: 1419, column: 33, scope: !12119)
!12129 = !DILocation(line: 1419, column: 18, scope: !12119)
!12130 = !DILocation(line: 1419, column: 2, scope: !12119)
!12131 = !DILocation(line: 1420, column: 2, scope: !12119)
!12132 = !DILocation(line: 1420, column: 7, scope: !12119)
!12133 = !DILocation(line: 1420, column: 16, scope: !12119)
!12134 = !DILocation(line: 1422, column: 18, scope: !12119)
!12135 = !DILocation(line: 1422, column: 23, scope: !12119)
!12136 = !DILocation(line: 1422, column: 2, scope: !12119)
!12137 = !DILocation(line: 1423, column: 1, scope: !12119)
!12138 = distinct !DISubprogram(name: "log_selfids", scope: !3, file: !3, line: 415, type: !12139, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12139 = !DISubroutineType(types: !12140)
!12140 = !{null, !187, !177, !177}
!12141 = !DILocalVariable(name: "ohci", arg: 1, scope: !12138, file: !3, line: 415, type: !187)
!12142 = !DILocation(line: 415, column: 41, scope: !12138)
!12143 = !DILocalVariable(name: "generation", arg: 2, scope: !12138, file: !3, line: 415, type: !177)
!12144 = !DILocation(line: 415, column: 51, scope: !12138)
!12145 = !DILocalVariable(name: "self_id_count", arg: 3, scope: !12138, file: !3, line: 415, type: !177)
!12146 = !DILocation(line: 415, column: 67, scope: !12138)
!12147 = !DILocalVariable(name: "s", scope: !12138, file: !3, line: 417, type: !1982)
!12148 = !DILocation(line: 417, column: 7, scope: !12138)
!12149 = !DILocation(line: 419, column: 6, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 419, column: 6)
!12151 = !DILocation(line: 419, column: 6, scope: !12138)
!12152 = !DILocation(line: 420, column: 3, scope: !12150)
!12153 = !DILocation(line: 422, column: 2, scope: !12138)
!12154 = !DILocation(line: 425, column: 11, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 425, column: 2)
!12156 = !DILocation(line: 425, column: 17, scope: !12155)
!12157 = !DILocation(line: 425, column: 9, scope: !12155)
!12158 = !DILocation(line: 425, column: 7, scope: !12155)
!12159 = !DILocation(line: 425, column: 46, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12155, file: !3, line: 425, column: 2)
!12161 = !DILocation(line: 425, column: 2, scope: !12155)
!12162 = !DILocation(line: 426, column: 9, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12160, file: !3, line: 426, column: 7)
!12164 = !DILocation(line: 426, column: 8, scope: !12163)
!12165 = !DILocation(line: 426, column: 11, scope: !12163)
!12166 = !DILocation(line: 426, column: 22, scope: !12163)
!12167 = !DILocation(line: 426, column: 7, scope: !12160)
!12168 = !DILocation(line: 427, column: 4, scope: !12163)
!12169 = !DILocation(line: 434, column: 4, scope: !12163)
!12170 = !DILocation(line: 426, column: 25, scope: !12163)
!12171 = !DILocation(line: 425, column: 50, scope: !12160)
!12172 = !DILocation(line: 425, column: 2, scope: !12160)
!12173 = distinct !{!12173, !12161, !12174}
!12174 = !DILocation(line: 434, column: 4, scope: !12155)
!12175 = !DILocation(line: 439, column: 1, scope: !12138)
!12176 = distinct !DISubprogram(name: "get_status_for_port", scope: !3, file: !3, line: 1762, type: !8779, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12177 = !DILocalVariable(name: "ohci", arg: 1, scope: !12176, file: !3, line: 1762, type: !187)
!12178 = !DILocation(line: 1762, column: 48, scope: !12176)
!12179 = !DILocalVariable(name: "port_index", arg: 2, scope: !12176, file: !3, line: 1762, type: !177)
!12180 = !DILocation(line: 1762, column: 58, scope: !12176)
!12181 = !DILocalVariable(name: "reg", scope: !12176, file: !3, line: 1764, type: !177)
!12182 = !DILocation(line: 1764, column: 6, scope: !12176)
!12183 = !DILocation(line: 1766, column: 14, scope: !12176)
!12184 = !DILocation(line: 1766, column: 20, scope: !12176)
!12185 = !DILocation(line: 1766, column: 2, scope: !12176)
!12186 = !DILocation(line: 1767, column: 22, scope: !12176)
!12187 = !DILocation(line: 1767, column: 31, scope: !12176)
!12188 = !DILocation(line: 1767, column: 8, scope: !12176)
!12189 = !DILocation(line: 1767, column: 6, scope: !12176)
!12190 = !DILocation(line: 1768, column: 6, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1768, column: 6)
!12192 = !DILocation(line: 1768, column: 10, scope: !12191)
!12193 = !DILocation(line: 1768, column: 6, scope: !12176)
!12194 = !DILocation(line: 1769, column: 22, scope: !12191)
!12195 = !DILocation(line: 1769, column: 9, scope: !12191)
!12196 = !DILocation(line: 1769, column: 7, scope: !12191)
!12197 = !DILocation(line: 1769, column: 3, scope: !12191)
!12198 = !DILocation(line: 1770, column: 16, scope: !12176)
!12199 = !DILocation(line: 1770, column: 22, scope: !12176)
!12200 = !DILocation(line: 1770, column: 2, scope: !12176)
!12201 = !DILocation(line: 1771, column: 6, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1771, column: 6)
!12203 = !DILocation(line: 1771, column: 10, scope: !12202)
!12204 = !DILocation(line: 1771, column: 6, scope: !12176)
!12205 = !DILocation(line: 1772, column: 10, scope: !12202)
!12206 = !DILocation(line: 1772, column: 3, scope: !12202)
!12207 = !DILocation(line: 1774, column: 10, scope: !12176)
!12208 = !DILocation(line: 1774, column: 14, scope: !12176)
!12209 = !DILocation(line: 1774, column: 2, scope: !12176)
!12210 = !DILocation(line: 1776, column: 3, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1774, column: 22)
!12212 = !DILocation(line: 1778, column: 3, scope: !12211)
!12213 = !DILocation(line: 1780, column: 2, scope: !12176)
!12214 = !DILocation(line: 1781, column: 1, scope: !12176)
!12215 = distinct !DISubprogram(name: "initiated_reset", scope: !3, file: !3, line: 1799, type: !4570, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12216 = !DILocalVariable(name: "ohci", arg: 1, scope: !12215, file: !3, line: 1799, type: !187)
!12217 = !DILocation(line: 1799, column: 44, scope: !12215)
!12218 = !DILocalVariable(name: "reg", scope: !12215, file: !3, line: 1801, type: !177)
!12219 = !DILocation(line: 1801, column: 6, scope: !12215)
!12220 = !DILocalVariable(name: "ret", scope: !12215, file: !3, line: 1802, type: !177)
!12221 = !DILocation(line: 1802, column: 6, scope: !12215)
!12222 = !DILocation(line: 1804, column: 14, scope: !12215)
!12223 = !DILocation(line: 1804, column: 20, scope: !12215)
!12224 = !DILocation(line: 1804, column: 2, scope: !12215)
!12225 = !DILocation(line: 1805, column: 22, scope: !12215)
!12226 = !DILocation(line: 1805, column: 8, scope: !12215)
!12227 = !DILocation(line: 1805, column: 6, scope: !12215)
!12228 = !DILocation(line: 1806, column: 6, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12215, file: !3, line: 1806, column: 6)
!12230 = !DILocation(line: 1806, column: 10, scope: !12229)
!12231 = !DILocation(line: 1806, column: 6, scope: !12215)
!12232 = !DILocation(line: 1807, column: 22, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12229, file: !3, line: 1806, column: 16)
!12234 = !DILocation(line: 1807, column: 9, scope: !12233)
!12235 = !DILocation(line: 1807, column: 7, scope: !12233)
!12236 = !DILocation(line: 1808, column: 7, scope: !12233)
!12237 = !DILocation(line: 1809, column: 23, scope: !12233)
!12238 = !DILocation(line: 1809, column: 32, scope: !12233)
!12239 = !DILocation(line: 1809, column: 9, scope: !12233)
!12240 = !DILocation(line: 1809, column: 7, scope: !12233)
!12241 = !DILocation(line: 1810, column: 7, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12233, file: !3, line: 1810, column: 7)
!12243 = !DILocation(line: 1810, column: 11, scope: !12242)
!12244 = !DILocation(line: 1810, column: 7, scope: !12233)
!12245 = !DILocation(line: 1811, column: 23, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 1810, column: 17)
!12247 = !DILocation(line: 1811, column: 10, scope: !12246)
!12248 = !DILocation(line: 1811, column: 8, scope: !12246)
!12249 = !DILocation(line: 1812, column: 8, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12246, file: !3, line: 1812, column: 8)
!12251 = !DILocation(line: 1812, column: 12, scope: !12250)
!12252 = !DILocation(line: 1812, column: 8, scope: !12246)
!12253 = !DILocation(line: 1813, column: 10, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12255, file: !3, line: 1813, column: 9)
!12255 = distinct !DILexicalBlock(scope: !12250, file: !3, line: 1812, column: 18)
!12256 = !DILocation(line: 1813, column: 14, scope: !12254)
!12257 = !DILocation(line: 1813, column: 22, scope: !12254)
!12258 = !DILocation(line: 1813, column: 9, scope: !12255)
!12259 = !DILocation(line: 1815, column: 10, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12254, file: !3, line: 1813, column: 31)
!12261 = !DILocation(line: 1816, column: 5, scope: !12260)
!12262 = !DILocation(line: 1817, column: 4, scope: !12255)
!12263 = !DILocation(line: 1818, column: 3, scope: !12246)
!12264 = !DILocation(line: 1819, column: 2, scope: !12233)
!12265 = !DILocation(line: 1820, column: 16, scope: !12215)
!12266 = !DILocation(line: 1820, column: 22, scope: !12215)
!12267 = !DILocation(line: 1820, column: 2, scope: !12215)
!12268 = !DILocation(line: 1821, column: 9, scope: !12215)
!12269 = !DILocation(line: 1821, column: 2, scope: !12215)
!12270 = distinct !DISubprogram(name: "get_self_id_pos", scope: !3, file: !3, line: 1783, type: !12271, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12271 = !DISubroutineType(types: !12272)
!12272 = !{!177, !187, !231, !177}
!12273 = !DILocalVariable(name: "ohci", arg: 1, scope: !12270, file: !3, line: 1783, type: !187)
!12274 = !DILocation(line: 1783, column: 44, scope: !12270)
!12275 = !DILocalVariable(name: "self_id", arg: 2, scope: !12270, file: !3, line: 1783, type: !231)
!12276 = !DILocation(line: 1783, column: 54, scope: !12270)
!12277 = !DILocalVariable(name: "self_id_count", arg: 3, scope: !12270, file: !3, line: 1784, type: !177)
!12278 = !DILocation(line: 1784, column: 6, scope: !12270)
!12279 = !DILocalVariable(name: "i", scope: !12270, file: !3, line: 1786, type: !177)
!12280 = !DILocation(line: 1786, column: 6, scope: !12270)
!12281 = !DILocalVariable(name: "entry", scope: !12270, file: !3, line: 1787, type: !231)
!12282 = !DILocation(line: 1787, column: 6, scope: !12270)
!12283 = !DILocation(line: 1789, column: 9, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12270, file: !3, line: 1789, column: 2)
!12285 = !DILocation(line: 1789, column: 7, scope: !12284)
!12286 = !DILocation(line: 1789, column: 14, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 1789, column: 2)
!12288 = !DILocation(line: 1789, column: 18, scope: !12287)
!12289 = !DILocation(line: 1789, column: 16, scope: !12287)
!12290 = !DILocation(line: 1789, column: 2, scope: !12284)
!12291 = !DILocation(line: 1790, column: 11, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 1789, column: 38)
!12293 = !DILocation(line: 1790, column: 17, scope: !12292)
!12294 = !DILocation(line: 1790, column: 32, scope: !12292)
!12295 = !DILocation(line: 1790, column: 9, scope: !12292)
!12296 = !DILocation(line: 1791, column: 8, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12292, file: !3, line: 1791, column: 7)
!12298 = !DILocation(line: 1791, column: 16, scope: !12297)
!12299 = !DILocation(line: 1791, column: 34, scope: !12297)
!12300 = !DILocation(line: 1791, column: 40, scope: !12297)
!12301 = !DILocation(line: 1791, column: 30, scope: !12297)
!12302 = !DILocation(line: 1791, column: 7, scope: !12292)
!12303 = !DILocation(line: 1792, column: 4, scope: !12297)
!12304 = !DILocation(line: 1793, column: 8, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12292, file: !3, line: 1793, column: 7)
!12306 = !DILocation(line: 1793, column: 16, scope: !12305)
!12307 = !DILocation(line: 1793, column: 33, scope: !12305)
!12308 = !DILocation(line: 1793, column: 39, scope: !12305)
!12309 = !DILocation(line: 1793, column: 30, scope: !12305)
!12310 = !DILocation(line: 1793, column: 7, scope: !12292)
!12311 = !DILocation(line: 1794, column: 11, scope: !12305)
!12312 = !DILocation(line: 1794, column: 4, scope: !12305)
!12313 = !DILocation(line: 1795, column: 2, scope: !12292)
!12314 = !DILocation(line: 1789, column: 34, scope: !12287)
!12315 = !DILocation(line: 1789, column: 2, scope: !12287)
!12316 = distinct !{!12316, !12290, !12317}
!12317 = !DILocation(line: 1795, column: 2, scope: !12284)
!12318 = !DILocation(line: 1796, column: 9, scope: !12270)
!12319 = !DILocation(line: 1796, column: 2, scope: !12270)
!12320 = !DILocation(line: 1797, column: 1, scope: !12270)
!12321 = distinct !DISubprogram(name: "_p", scope: !3, file: !3, line: 410, type: !12322, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12322 = !DISubroutineType(types: !12323)
!12323 = !{!483, !1982, !177}
!12324 = !DILocalVariable(name: "s", arg: 1, scope: !12321, file: !3, line: 410, type: !1982)
!12325 = !DILocation(line: 410, column: 21, scope: !12321)
!12326 = !DILocalVariable(name: "shift", arg: 2, scope: !12321, file: !3, line: 410, type: !177)
!12327 = !DILocation(line: 410, column: 28, scope: !12321)
!12328 = !DILocation(line: 412, column: 15, scope: !12321)
!12329 = !DILocation(line: 412, column: 14, scope: !12321)
!12330 = !DILocation(line: 412, column: 20, scope: !12321)
!12331 = !DILocation(line: 412, column: 17, scope: !12321)
!12332 = !DILocation(line: 412, column: 26, scope: !12321)
!12333 = !DILocation(line: 412, column: 9, scope: !12321)
!12334 = !DILocation(line: 412, column: 2, scope: !12321)
!12335 = distinct !DISubprogram(name: "ar_context_tasklet", scope: !3, file: !3, line: 923, type: !4047, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12336 = !DILocalVariable(name: "data", arg: 1, scope: !12335, file: !3, line: 923, type: !176)
!12337 = !DILocation(line: 923, column: 46, scope: !12335)
!12338 = !DILocalVariable(name: "ctx", scope: !12335, file: !3, line: 925, type: !4136)
!12339 = !DILocation(line: 925, column: 21, scope: !12335)
!12340 = !DILocation(line: 925, column: 48, scope: !12335)
!12341 = !DILocation(line: 925, column: 27, scope: !12335)
!12342 = !DILocalVariable(name: "end_buffer_index", scope: !12335, file: !3, line: 926, type: !7)
!12343 = !DILocation(line: 926, column: 15, scope: !12335)
!12344 = !DILocalVariable(name: "end_buffer_offset", scope: !12335, file: !3, line: 926, type: !7)
!12345 = !DILocation(line: 926, column: 33, scope: !12335)
!12346 = !DILocalVariable(name: "p", scope: !12335, file: !3, line: 927, type: !175)
!12347 = !DILocation(line: 927, column: 8, scope: !12335)
!12348 = !DILocalVariable(name: "end", scope: !12335, file: !3, line: 927, type: !175)
!12349 = !DILocation(line: 927, column: 12, scope: !12335)
!12350 = !DILocation(line: 929, column: 6, scope: !12335)
!12351 = !DILocation(line: 929, column: 11, scope: !12335)
!12352 = !DILocation(line: 929, column: 4, scope: !12335)
!12353 = !DILocation(line: 930, column: 7, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12335, file: !3, line: 930, column: 6)
!12355 = !DILocation(line: 930, column: 6, scope: !12335)
!12356 = !DILocation(line: 931, column: 3, scope: !12354)
!12357 = !DILocation(line: 933, column: 50, scope: !12335)
!12358 = !DILocation(line: 933, column: 21, scope: !12335)
!12359 = !DILocation(line: 933, column: 19, scope: !12335)
!12360 = !DILocation(line: 935, column: 26, scope: !12335)
!12361 = !DILocation(line: 935, column: 31, scope: !12335)
!12362 = !DILocation(line: 935, column: 49, scope: !12335)
!12363 = !DILocation(line: 935, column: 2, scope: !12335)
!12364 = !DILocation(line: 936, column: 8, scope: !12335)
!12365 = !DILocation(line: 936, column: 13, scope: !12335)
!12366 = !DILocation(line: 936, column: 22, scope: !12335)
!12367 = !DILocation(line: 936, column: 39, scope: !12335)
!12368 = !DILocation(line: 936, column: 20, scope: !12335)
!12369 = !DILocation(line: 936, column: 53, scope: !12335)
!12370 = !DILocation(line: 936, column: 51, scope: !12335)
!12371 = !DILocation(line: 936, column: 6, scope: !12335)
!12372 = !DILocation(line: 938, column: 6, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12335, file: !3, line: 938, column: 6)
!12374 = !DILocation(line: 938, column: 47, scope: !12373)
!12375 = !DILocation(line: 938, column: 25, scope: !12373)
!12376 = !DILocation(line: 938, column: 23, scope: !12373)
!12377 = !DILocation(line: 938, column: 6, scope: !12335)
!12378 = !DILocalVariable(name: "buffer_end", scope: !12379, file: !3, line: 945, type: !175)
!12379 = distinct !DILexicalBlock(scope: !12373, file: !3, line: 938, column: 53)
!12380 = !DILocation(line: 945, column: 9, scope: !12379)
!12381 = !DILocation(line: 945, column: 22, scope: !12379)
!12382 = !DILocation(line: 945, column: 27, scope: !12379)
!12383 = !DILocation(line: 945, column: 34, scope: !12379)
!12384 = !DILocation(line: 946, column: 25, scope: !12379)
!12385 = !DILocation(line: 946, column: 30, scope: !12379)
!12386 = !DILocation(line: 946, column: 33, scope: !12379)
!12387 = !DILocation(line: 946, column: 7, scope: !12379)
!12388 = !DILocation(line: 946, column: 5, scope: !12379)
!12389 = !DILocation(line: 947, column: 7, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12379, file: !3, line: 947, column: 7)
!12391 = !DILocation(line: 947, column: 11, scope: !12390)
!12392 = !DILocation(line: 947, column: 9, scope: !12390)
!12393 = !DILocation(line: 947, column: 7, scope: !12379)
!12394 = !DILocation(line: 948, column: 4, scope: !12390)
!12395 = !DILocation(line: 950, column: 5, scope: !12379)
!12396 = !DILocation(line: 951, column: 2, scope: !12379)
!12397 = !DILocation(line: 953, column: 24, scope: !12335)
!12398 = !DILocation(line: 953, column: 29, scope: !12335)
!12399 = !DILocation(line: 953, column: 32, scope: !12335)
!12400 = !DILocation(line: 953, column: 6, scope: !12335)
!12401 = !DILocation(line: 953, column: 4, scope: !12335)
!12402 = !DILocation(line: 954, column: 6, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12335, file: !3, line: 954, column: 6)
!12404 = !DILocation(line: 954, column: 11, scope: !12403)
!12405 = !DILocation(line: 954, column: 8, scope: !12403)
!12406 = !DILocation(line: 954, column: 6, scope: !12335)
!12407 = !DILocation(line: 955, column: 7, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12409, file: !3, line: 955, column: 7)
!12409 = distinct !DILexicalBlock(scope: !12403, file: !3, line: 954, column: 16)
!12410 = !DILocation(line: 955, column: 11, scope: !12408)
!12411 = !DILocation(line: 955, column: 9, scope: !12408)
!12412 = !DILocation(line: 955, column: 7, scope: !12409)
!12413 = !DILocation(line: 956, column: 21, scope: !12408)
!12414 = !DILocation(line: 956, column: 4, scope: !12408)
!12415 = !DILocation(line: 957, column: 3, scope: !12409)
!12416 = !DILocation(line: 960, column: 17, scope: !12335)
!12417 = !DILocation(line: 960, column: 2, scope: !12335)
!12418 = !DILocation(line: 960, column: 7, scope: !12335)
!12419 = !DILocation(line: 960, column: 15, scope: !12335)
!12420 = !DILocation(line: 961, column: 21, scope: !12335)
!12421 = !DILocation(line: 961, column: 26, scope: !12335)
!12422 = !DILocation(line: 961, column: 2, scope: !12335)
!12423 = !DILocation(line: 963, column: 2, scope: !12335)
!12424 = !DILabel(scope: !12335, name: "error", file: !3, line: 965)
!12425 = !DILocation(line: 965, column: 1, scope: !12335)
!12426 = !DILocation(line: 966, column: 2, scope: !12335)
!12427 = !DILocation(line: 966, column: 7, scope: !12335)
!12428 = !DILocation(line: 966, column: 15, scope: !12335)
!12429 = !DILocation(line: 967, column: 1, scope: !12335)
!12430 = distinct !DISubprogram(name: "set_page_private", scope: !342, file: !342, line: 248, type: !12431, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12431 = !DISubroutineType(types: !12432)
!12432 = !{null, !340, !176}
!12433 = !DILocalVariable(name: "page", arg: 1, scope: !12430, file: !342, line: 248, type: !340)
!12434 = !DILocation(line: 248, column: 50, scope: !12430)
!12435 = !DILocalVariable(name: "private", arg: 2, scope: !12430, file: !342, line: 248, type: !176)
!12436 = !DILocation(line: 248, column: 70, scope: !12430)
!12437 = !DILocation(line: 250, column: 18, scope: !12430)
!12438 = !DILocation(line: 250, column: 2, scope: !12430)
!12439 = !DILocation(line: 250, column: 8, scope: !12430)
!12440 = !DILocation(line: 250, column: 16, scope: !12430)
!12441 = !DILocation(line: 251, column: 1, scope: !12430)
!12442 = distinct !DISubprogram(name: "ar_buffer_bus", scope: !3, file: !3, line: 652, type: !12443, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12443 = !DISubroutineType(types: !12444)
!12444 = !{!238, !4136, !7}
!12445 = !DILocalVariable(name: "ctx", arg: 1, scope: !12442, file: !3, line: 652, type: !4136)
!12446 = !DILocation(line: 652, column: 59, scope: !12442)
!12447 = !DILocalVariable(name: "i", arg: 2, scope: !12442, file: !3, line: 652, type: !7)
!12448 = !DILocation(line: 652, column: 77, scope: !12442)
!12449 = !DILocation(line: 654, column: 9, scope: !12442)
!12450 = !DILocation(line: 654, column: 2, scope: !12442)
!12451 = distinct !DISubprogram(name: "ar_next_buffer_index", scope: !3, file: !3, line: 702, type: !4634, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12452 = !DILocalVariable(name: "index", arg: 1, scope: !12451, file: !3, line: 702, type: !7)
!12453 = !DILocation(line: 702, column: 62, scope: !12451)
!12454 = !DILocation(line: 704, column: 10, scope: !12451)
!12455 = !DILocation(line: 704, column: 16, scope: !12451)
!12456 = !DILocation(line: 704, column: 9, scope: !12451)
!12457 = !DILocation(line: 704, column: 21, scope: !12451)
!12458 = !DILocation(line: 704, column: 2, scope: !12451)
!12459 = distinct !DISubprogram(name: "ar_search_last_active_buffer", scope: !3, file: !3, line: 716, type: !12460, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12460 = !DISubroutineType(types: !12461)
!12461 = !{!7, !4136, !981}
!12462 = !DILocalVariable(name: "ctx", arg: 1, scope: !12459, file: !3, line: 716, type: !4136)
!12463 = !DILocation(line: 716, column: 69, scope: !12459)
!12464 = !DILocalVariable(name: "buffer_offset", arg: 2, scope: !12459, file: !3, line: 717, type: !981)
!12465 = !DILocation(line: 717, column: 22, scope: !12459)
!12466 = !DILocalVariable(name: "i", scope: !12459, file: !3, line: 719, type: !7)
!12467 = !DILocation(line: 719, column: 15, scope: !12459)
!12468 = !DILocalVariable(name: "next_i", scope: !12459, file: !3, line: 719, type: !7)
!12469 = !DILocation(line: 719, column: 18, scope: !12459)
!12470 = !DILocalVariable(name: "last", scope: !12459, file: !3, line: 719, type: !7)
!12471 = !DILocation(line: 719, column: 26, scope: !12459)
!12472 = !DILocation(line: 719, column: 33, scope: !12459)
!12473 = !DILocation(line: 719, column: 38, scope: !12459)
!12474 = !DILocalVariable(name: "res_count", scope: !12459, file: !3, line: 720, type: !4023)
!12475 = !DILocation(line: 720, column: 9, scope: !12459)
!12476 = !DILocalVariable(name: "next_res_count", scope: !12459, file: !3, line: 720, type: !4023)
!12477 = !DILocation(line: 720, column: 20, scope: !12459)
!12478 = !DILocation(line: 722, column: 28, scope: !12459)
!12479 = !DILocation(line: 722, column: 6, scope: !12459)
!12480 = !DILocation(line: 722, column: 4, scope: !12459)
!12481 = !DILocation(line: 723, column: 14, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 723, column: 14)
!12483 = !DILocation(line: 723, column: 14, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12482, file: !3, line: 723, column: 14)
!12485 = !DILocation(line: 723, column: 12, scope: !12459)
!12486 = !DILocation(line: 726, column: 2, scope: !12459)
!12487 = !DILocation(line: 726, column: 9, scope: !12459)
!12488 = !DILocation(line: 726, column: 14, scope: !12459)
!12489 = !DILocation(line: 726, column: 11, scope: !12459)
!12490 = !DILocation(line: 726, column: 19, scope: !12459)
!12491 = !DILocation(line: 726, column: 22, scope: !12459)
!12492 = !DILocation(line: 726, column: 32, scope: !12459)
!12493 = !DILocation(line: 0, scope: !12459)
!12494 = !DILocation(line: 729, column: 33, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 726, column: 38)
!12496 = !DILocation(line: 729, column: 12, scope: !12495)
!12497 = !DILocation(line: 729, column: 10, scope: !12495)
!12498 = !DILocation(line: 730, column: 3, scope: !12495)
!12499 = !{i32 -2141576270}
!12500 = !DILocation(line: 731, column: 20, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 731, column: 20)
!12502 = !DILocation(line: 731, column: 20, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12501, file: !3, line: 731, column: 20)
!12504 = !DILocation(line: 731, column: 18, scope: !12495)
!12505 = !DILocation(line: 736, column: 7, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 736, column: 7)
!12507 = !DILocation(line: 736, column: 22, scope: !12506)
!12508 = !DILocation(line: 736, column: 7, scope: !12495)
!12509 = !DILocation(line: 744, column: 42, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !3, line: 744, column: 8)
!12511 = distinct !DILexicalBlock(scope: !12506, file: !3, line: 736, column: 49)
!12512 = !DILocation(line: 744, column: 47, scope: !12510)
!12513 = !DILocation(line: 744, column: 44, scope: !12510)
!12514 = !DILocation(line: 744, column: 8, scope: !12511)
!12515 = !DILocation(line: 745, column: 35, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12510, file: !3, line: 744, column: 53)
!12517 = !DILocation(line: 745, column: 14, scope: !12516)
!12518 = !DILocation(line: 745, column: 12, scope: !12516)
!12519 = !DILocation(line: 746, column: 5, scope: !12516)
!12520 = !{i32 -2141573541}
!12521 = !DILocation(line: 747, column: 22, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12516, file: !3, line: 747, column: 22)
!12523 = !DILocation(line: 747, column: 22, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12522, file: !3, line: 747, column: 22)
!12525 = !DILocation(line: 747, column: 20, scope: !12516)
!12526 = !DILocation(line: 748, column: 9, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12516, file: !3, line: 748, column: 9)
!12528 = !DILocation(line: 748, column: 24, scope: !12527)
!12529 = !DILocation(line: 748, column: 9, scope: !12516)
!12530 = !DILocation(line: 749, column: 6, scope: !12527)
!12531 = !DILocation(line: 750, column: 4, scope: !12516)
!12532 = !DILocation(line: 752, column: 4, scope: !12511)
!12533 = !DILocation(line: 736, column: 25, scope: !12506)
!12534 = !DILabel(scope: !12495, name: "next_buffer_is_active", file: !3, line: 755)
!12535 = !DILocation(line: 755, column: 1, scope: !12495)
!12536 = !DILocation(line: 756, column: 7, scope: !12495)
!12537 = !DILocation(line: 756, column: 5, scope: !12495)
!12538 = !DILocation(line: 757, column: 15, scope: !12495)
!12539 = !DILocation(line: 757, column: 13, scope: !12495)
!12540 = distinct !{!12540, !12486, !12541}
!12541 = !DILocation(line: 758, column: 2, scope: !12459)
!12542 = !DILocation(line: 760, column: 2, scope: !12459)
!12543 = !{i32 -2141570906}
!12544 = !DILocation(line: 762, column: 31, scope: !12459)
!12545 = !DILocation(line: 762, column: 29, scope: !12459)
!12546 = !DILocation(line: 762, column: 19, scope: !12459)
!12547 = !DILocation(line: 762, column: 3, scope: !12459)
!12548 = !DILocation(line: 762, column: 17, scope: !12459)
!12549 = !DILocation(line: 763, column: 7, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 763, column: 6)
!12551 = !DILocation(line: 763, column: 6, scope: !12550)
!12552 = !DILocation(line: 763, column: 21, scope: !12550)
!12553 = !DILocation(line: 763, column: 6, scope: !12459)
!12554 = !DILocation(line: 764, column: 4, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12550, file: !3, line: 763, column: 34)
!12556 = !DILocation(line: 764, column: 18, scope: !12555)
!12557 = !DILocation(line: 765, column: 20, scope: !12555)
!12558 = !DILocation(line: 765, column: 3, scope: !12555)
!12559 = !DILocation(line: 766, column: 2, scope: !12555)
!12560 = !DILocation(line: 768, column: 9, scope: !12459)
!12561 = !DILocation(line: 768, column: 2, scope: !12459)
!12562 = distinct !DISubprogram(name: "ar_sync_buffers_for_cpu", scope: !3, file: !3, line: 771, type: !12563, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12563 = !DISubroutineType(types: !12564)
!12564 = !{null, !4136, !7, !7}
!12565 = !DILocalVariable(name: "ctx", arg: 1, scope: !12562, file: !3, line: 771, type: !4136)
!12566 = !DILocation(line: 771, column: 56, scope: !12562)
!12567 = !DILocalVariable(name: "end_buffer_index", arg: 2, scope: !12562, file: !3, line: 772, type: !7)
!12568 = !DILocation(line: 772, column: 22, scope: !12562)
!12569 = !DILocalVariable(name: "end_buffer_offset", arg: 3, scope: !12562, file: !3, line: 773, type: !7)
!12570 = !DILocation(line: 773, column: 22, scope: !12562)
!12571 = !DILocalVariable(name: "i", scope: !12562, file: !3, line: 775, type: !7)
!12572 = !DILocation(line: 775, column: 15, scope: !12562)
!12573 = !DILocation(line: 777, column: 28, scope: !12562)
!12574 = !DILocation(line: 777, column: 6, scope: !12562)
!12575 = !DILocation(line: 777, column: 4, scope: !12562)
!12576 = !DILocation(line: 778, column: 2, scope: !12562)
!12577 = !DILocation(line: 778, column: 9, scope: !12562)
!12578 = !DILocation(line: 778, column: 14, scope: !12562)
!12579 = !DILocation(line: 778, column: 11, scope: !12562)
!12580 = !DILocation(line: 779, column: 27, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12562, file: !3, line: 778, column: 32)
!12582 = !DILocation(line: 779, column: 32, scope: !12581)
!12583 = !DILocation(line: 779, column: 38, scope: !12581)
!12584 = !DILocation(line: 779, column: 43, scope: !12581)
!12585 = !DILocation(line: 780, column: 20, scope: !12581)
!12586 = !DILocation(line: 780, column: 25, scope: !12581)
!12587 = !DILocation(line: 780, column: 6, scope: !12581)
!12588 = !DILocation(line: 779, column: 3, scope: !12581)
!12589 = !DILocation(line: 782, column: 28, scope: !12581)
!12590 = !DILocation(line: 782, column: 7, scope: !12581)
!12591 = !DILocation(line: 782, column: 5, scope: !12581)
!12592 = distinct !{!12592, !12576, !12593}
!12593 = !DILocation(line: 783, column: 2, scope: !12562)
!12594 = !DILocation(line: 784, column: 6, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12562, file: !3, line: 784, column: 6)
!12596 = !DILocation(line: 784, column: 24, scope: !12595)
!12597 = !DILocation(line: 784, column: 6, scope: !12562)
!12598 = !DILocation(line: 785, column: 27, scope: !12595)
!12599 = !DILocation(line: 785, column: 32, scope: !12595)
!12600 = !DILocation(line: 785, column: 38, scope: !12595)
!12601 = !DILocation(line: 785, column: 43, scope: !12595)
!12602 = !DILocation(line: 786, column: 20, scope: !12595)
!12603 = !DILocation(line: 786, column: 25, scope: !12595)
!12604 = !DILocation(line: 786, column: 6, scope: !12595)
!12605 = !DILocation(line: 787, column: 6, scope: !12595)
!12606 = !DILocation(line: 785, column: 3, scope: !12595)
!12607 = !DILocation(line: 788, column: 1, scope: !12562)
!12608 = distinct !DISubprogram(name: "ar_first_buffer_index", scope: !3, file: !3, line: 707, type: !12609, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12609 = !DISubroutineType(types: !12610)
!12610 = !{!7, !4136}
!12611 = !DILocalVariable(name: "ctx", arg: 1, scope: !12608, file: !3, line: 707, type: !4136)
!12612 = !DILocation(line: 707, column: 69, scope: !12608)
!12613 = !DILocation(line: 709, column: 30, scope: !12608)
!12614 = !DILocation(line: 709, column: 35, scope: !12608)
!12615 = !DILocation(line: 709, column: 9, scope: !12608)
!12616 = !DILocation(line: 709, column: 2, scope: !12608)
!12617 = distinct !DISubprogram(name: "handle_ar_packets", scope: !3, file: !3, line: 895, type: !12618, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12618 = !DISubroutineType(types: !12619)
!12619 = !{!175, !4136, !175, !175}
!12620 = !DILocalVariable(name: "ctx", arg: 1, scope: !12617, file: !3, line: 895, type: !4136)
!12621 = !DILocation(line: 895, column: 51, scope: !12617)
!12622 = !DILocalVariable(name: "p", arg: 2, scope: !12617, file: !3, line: 895, type: !175)
!12623 = !DILocation(line: 895, column: 62, scope: !12617)
!12624 = !DILocalVariable(name: "end", arg: 3, scope: !12617, file: !3, line: 895, type: !175)
!12625 = !DILocation(line: 895, column: 71, scope: !12617)
!12626 = !DILocalVariable(name: "next", scope: !12617, file: !3, line: 897, type: !175)
!12627 = !DILocation(line: 897, column: 8, scope: !12617)
!12628 = !DILocation(line: 899, column: 2, scope: !12617)
!12629 = !DILocation(line: 899, column: 9, scope: !12617)
!12630 = !DILocation(line: 899, column: 13, scope: !12617)
!12631 = !DILocation(line: 899, column: 11, scope: !12617)
!12632 = !DILocation(line: 900, column: 27, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12617, file: !3, line: 899, column: 18)
!12634 = !DILocation(line: 900, column: 32, scope: !12633)
!12635 = !DILocation(line: 900, column: 10, scope: !12633)
!12636 = !DILocation(line: 900, column: 8, scope: !12633)
!12637 = !DILocation(line: 901, column: 8, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12633, file: !3, line: 901, column: 7)
!12639 = !DILocation(line: 901, column: 7, scope: !12633)
!12640 = !DILocation(line: 902, column: 11, scope: !12638)
!12641 = !DILocation(line: 902, column: 4, scope: !12638)
!12642 = !DILocation(line: 903, column: 7, scope: !12633)
!12643 = !DILocation(line: 903, column: 5, scope: !12633)
!12644 = distinct !{!12644, !12628, !12645}
!12645 = !DILocation(line: 904, column: 2, scope: !12617)
!12646 = !DILocation(line: 906, column: 9, scope: !12617)
!12647 = !DILocation(line: 906, column: 2, scope: !12617)
!12648 = !DILocation(line: 907, column: 1, scope: !12617)
!12649 = distinct !DISubprogram(name: "ar_context_abort", scope: !3, file: !3, line: 689, type: !12650, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12650 = !DISubroutineType(types: !12651)
!12651 = !{null, !4136, !481}
!12652 = !DILocalVariable(name: "ctx", arg: 1, scope: !12649, file: !3, line: 689, type: !4136)
!12653 = !DILocation(line: 689, column: 49, scope: !12649)
!12654 = !DILocalVariable(name: "error_msg", arg: 2, scope: !12649, file: !3, line: 689, type: !481)
!12655 = !DILocation(line: 689, column: 66, scope: !12649)
!12656 = !DILocalVariable(name: "ohci", scope: !12649, file: !3, line: 691, type: !187)
!12657 = !DILocation(line: 691, column: 18, scope: !12649)
!12658 = !DILocation(line: 691, column: 25, scope: !12649)
!12659 = !DILocation(line: 691, column: 30, scope: !12649)
!12660 = !DILocation(line: 693, column: 15, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12649, file: !3, line: 693, column: 6)
!12662 = !DILocation(line: 693, column: 21, scope: !12661)
!12663 = !DILocation(line: 693, column: 6, scope: !12661)
!12664 = !DILocation(line: 693, column: 47, scope: !12661)
!12665 = !DILocation(line: 693, column: 6, scope: !12649)
!12666 = !DILocation(line: 694, column: 13, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 693, column: 62)
!12668 = !DILocation(line: 694, column: 19, scope: !12667)
!12669 = !DILocation(line: 694, column: 3, scope: !12667)
!12670 = !DILocation(line: 695, column: 16, scope: !12667)
!12671 = !DILocation(line: 695, column: 3, scope: !12667)
!12672 = !DILocation(line: 697, column: 3, scope: !12667)
!12673 = !DILocation(line: 698, column: 2, scope: !12667)
!12674 = !DILocation(line: 700, column: 1, scope: !12649)
!12675 = distinct !DISubprogram(name: "ar_recycle_buffers", scope: !3, file: !3, line: 909, type: !8953, scopeLine: 910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12676 = !DILocalVariable(name: "ctx", arg: 1, scope: !12675, file: !3, line: 909, type: !4136)
!12677 = !DILocation(line: 909, column: 51, scope: !12675)
!12678 = !DILocalVariable(name: "end_buffer", arg: 2, scope: !12675, file: !3, line: 909, type: !7)
!12679 = !DILocation(line: 909, column: 69, scope: !12675)
!12680 = !DILocalVariable(name: "i", scope: !12675, file: !3, line: 911, type: !7)
!12681 = !DILocation(line: 911, column: 15, scope: !12675)
!12682 = !DILocation(line: 913, column: 28, scope: !12675)
!12683 = !DILocation(line: 913, column: 6, scope: !12675)
!12684 = !DILocation(line: 913, column: 4, scope: !12675)
!12685 = !DILocation(line: 914, column: 2, scope: !12675)
!12686 = !DILocation(line: 914, column: 9, scope: !12675)
!12687 = !DILocation(line: 914, column: 14, scope: !12675)
!12688 = !DILocation(line: 914, column: 11, scope: !12675)
!12689 = !DILocation(line: 915, column: 30, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12675, file: !3, line: 914, column: 26)
!12691 = !DILocation(line: 915, column: 35, scope: !12690)
!12692 = !DILocation(line: 915, column: 41, scope: !12690)
!12693 = !DILocation(line: 915, column: 46, scope: !12690)
!12694 = !DILocation(line: 916, column: 23, scope: !12690)
!12695 = !DILocation(line: 916, column: 28, scope: !12690)
!12696 = !DILocation(line: 916, column: 9, scope: !12690)
!12697 = !DILocation(line: 915, column: 3, scope: !12690)
!12698 = !DILocation(line: 918, column: 24, scope: !12690)
!12699 = !DILocation(line: 918, column: 29, scope: !12690)
!12700 = !DILocation(line: 918, column: 3, scope: !12690)
!12701 = !DILocation(line: 919, column: 28, scope: !12690)
!12702 = !DILocation(line: 919, column: 7, scope: !12690)
!12703 = !DILocation(line: 919, column: 5, scope: !12690)
!12704 = distinct !{!12704, !12685, !12705}
!12705 = !DILocation(line: 920, column: 2, scope: !12675)
!12706 = !DILocation(line: 921, column: 1, scope: !12675)
!12707 = distinct !DISubprogram(name: "handle_ar_packet", scope: !3, file: !3, line: 797, type: !12708, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12708 = !DISubroutineType(types: !12709)
!12709 = !{!4115, !4136, !4115}
!12710 = !DILocalVariable(name: "ctx", arg: 1, scope: !12707, file: !3, line: 797, type: !4136)
!12711 = !DILocation(line: 797, column: 52, scope: !12707)
!12712 = !DILocalVariable(name: "buffer", arg: 2, scope: !12707, file: !3, line: 797, type: !4115)
!12713 = !DILocation(line: 797, column: 65, scope: !12707)
!12714 = !DILocalVariable(name: "ohci", scope: !12707, file: !3, line: 799, type: !187)
!12715 = !DILocation(line: 799, column: 18, scope: !12707)
!12716 = !DILocation(line: 799, column: 25, scope: !12707)
!12717 = !DILocation(line: 799, column: 30, scope: !12707)
!12718 = !DILocalVariable(name: "p", scope: !12707, file: !3, line: 800, type: !225)
!12719 = !DILocation(line: 800, column: 19, scope: !12707)
!12720 = !DILocalVariable(name: "status", scope: !12707, file: !3, line: 801, type: !231)
!12721 = !DILocation(line: 801, column: 6, scope: !12707)
!12722 = !DILocalVariable(name: "length", scope: !12707, file: !3, line: 801, type: !231)
!12723 = !DILocation(line: 801, column: 14, scope: !12707)
!12724 = !DILocalVariable(name: "tcode", scope: !12707, file: !3, line: 801, type: !231)
!12725 = !DILocation(line: 801, column: 22, scope: !12707)
!12726 = !DILocalVariable(name: "evt", scope: !12707, file: !3, line: 802, type: !177)
!12727 = !DILocation(line: 802, column: 6, scope: !12707)
!12728 = !DILocation(line: 804, column: 16, scope: !12707)
!12729 = !DILocation(line: 804, column: 4, scope: !12707)
!12730 = !DILocation(line: 804, column: 2, scope: !12707)
!12731 = !DILocation(line: 804, column: 14, scope: !12707)
!12732 = !DILocation(line: 805, column: 16, scope: !12707)
!12733 = !DILocation(line: 805, column: 4, scope: !12707)
!12734 = !DILocation(line: 805, column: 2, scope: !12707)
!12735 = !DILocation(line: 805, column: 14, scope: !12707)
!12736 = !DILocation(line: 806, column: 16, scope: !12707)
!12737 = !DILocation(line: 806, column: 4, scope: !12707)
!12738 = !DILocation(line: 806, column: 2, scope: !12707)
!12739 = !DILocation(line: 806, column: 14, scope: !12707)
!12740 = !DILocation(line: 808, column: 13, scope: !12707)
!12741 = !DILocation(line: 808, column: 11, scope: !12707)
!12742 = !DILocation(line: 808, column: 23, scope: !12707)
!12743 = !DILocation(line: 808, column: 29, scope: !12707)
!12744 = !DILocation(line: 808, column: 8, scope: !12707)
!12745 = !DILocation(line: 809, column: 10, scope: !12707)
!12746 = !DILocation(line: 809, column: 2, scope: !12707)
!12747 = !DILocation(line: 812, column: 33, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12707, file: !3, line: 809, column: 17)
!12749 = !DILocation(line: 812, column: 5, scope: !12748)
!12750 = !DILocation(line: 812, column: 3, scope: !12748)
!12751 = !DILocation(line: 812, column: 15, scope: !12748)
!12752 = !DILocation(line: 813, column: 5, scope: !12748)
!12753 = !DILocation(line: 813, column: 19, scope: !12748)
!12754 = !DILocation(line: 814, column: 5, scope: !12748)
!12755 = !DILocation(line: 814, column: 20, scope: !12748)
!12756 = !DILocation(line: 815, column: 3, scope: !12748)
!12757 = !DILocation(line: 818, column: 17, scope: !12748)
!12758 = !DILocation(line: 818, column: 5, scope: !12748)
!12759 = !DILocation(line: 818, column: 3, scope: !12748)
!12760 = !DILocation(line: 818, column: 15, scope: !12748)
!12761 = !DILocation(line: 819, column: 5, scope: !12748)
!12762 = !DILocation(line: 819, column: 19, scope: !12748)
!12763 = !DILocation(line: 820, column: 5, scope: !12748)
!12764 = !DILocation(line: 820, column: 20, scope: !12748)
!12765 = !DILocation(line: 821, column: 3, scope: !12748)
!12766 = !DILocation(line: 827, column: 17, scope: !12748)
!12767 = !DILocation(line: 827, column: 5, scope: !12748)
!12768 = !DILocation(line: 827, column: 3, scope: !12748)
!12769 = !DILocation(line: 827, column: 15, scope: !12748)
!12770 = !DILocation(line: 828, column: 5, scope: !12748)
!12771 = !DILocation(line: 828, column: 19, scope: !12748)
!12772 = !DILocation(line: 829, column: 24, scope: !12748)
!12773 = !DILocation(line: 829, column: 22, scope: !12748)
!12774 = !DILocation(line: 829, column: 34, scope: !12748)
!12775 = !DILocation(line: 829, column: 5, scope: !12748)
!12776 = !DILocation(line: 829, column: 20, scope: !12748)
!12777 = !DILocation(line: 830, column: 9, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12748, file: !3, line: 830, column: 7)
!12779 = !DILocation(line: 830, column: 24, scope: !12778)
!12780 = !DILocation(line: 830, column: 7, scope: !12748)
!12781 = !DILocation(line: 831, column: 21, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 830, column: 45)
!12783 = !DILocation(line: 831, column: 4, scope: !12782)
!12784 = !DILocation(line: 832, column: 4, scope: !12782)
!12785 = !DILocation(line: 834, column: 3, scope: !12748)
!12786 = !DILocation(line: 839, column: 5, scope: !12748)
!12787 = !DILocation(line: 839, column: 19, scope: !12748)
!12788 = !DILocation(line: 840, column: 5, scope: !12748)
!12789 = !DILocation(line: 840, column: 20, scope: !12748)
!12790 = !DILocation(line: 841, column: 3, scope: !12748)
!12791 = !DILocation(line: 844, column: 20, scope: !12748)
!12792 = !DILocation(line: 844, column: 3, scope: !12748)
!12793 = !DILocation(line: 845, column: 3, scope: !12748)
!12794 = !DILocation(line: 848, column: 23, scope: !12707)
!12795 = !DILocation(line: 848, column: 14, scope: !12707)
!12796 = !DILocation(line: 848, column: 34, scope: !12707)
!12797 = !DILocation(line: 848, column: 30, scope: !12707)
!12798 = !DILocation(line: 848, column: 4, scope: !12707)
!12799 = !DILocation(line: 848, column: 12, scope: !12707)
!12800 = !DILocation(line: 851, column: 14, scope: !12707)
!12801 = !DILocation(line: 851, column: 32, scope: !12707)
!12802 = !DILocation(line: 851, column: 28, scope: !12707)
!12803 = !DILocation(line: 851, column: 47, scope: !12707)
!12804 = !DILocation(line: 851, column: 52, scope: !12707)
!12805 = !DILocation(line: 851, column: 11, scope: !12707)
!12806 = !DILocation(line: 851, column: 9, scope: !12707)
!12807 = !DILocation(line: 852, column: 11, scope: !12707)
!12808 = !DILocation(line: 852, column: 9, scope: !12707)
!12809 = !DILocation(line: 853, column: 12, scope: !12707)
!12810 = !DILocation(line: 853, column: 19, scope: !12707)
!12811 = !DILocation(line: 853, column: 26, scope: !12707)
!12812 = !DILocation(line: 853, column: 9, scope: !12707)
!12813 = !DILocation(line: 855, column: 17, scope: !12707)
!12814 = !DILocation(line: 855, column: 21, scope: !12707)
!12815 = !DILocation(line: 855, column: 4, scope: !12707)
!12816 = !DILocation(line: 855, column: 15, scope: !12707)
!12817 = !DILocation(line: 856, column: 18, scope: !12707)
!12818 = !DILocation(line: 856, column: 25, scope: !12707)
!12819 = !DILocation(line: 856, column: 32, scope: !12707)
!12820 = !DILocation(line: 856, column: 4, scope: !12707)
!12821 = !DILocation(line: 856, column: 15, scope: !12707)
!12822 = !DILocation(line: 857, column: 17, scope: !12707)
!12823 = !DILocation(line: 857, column: 24, scope: !12707)
!12824 = !DILocation(line: 857, column: 4, scope: !12707)
!12825 = !DILocation(line: 857, column: 15, scope: !12707)
!12826 = !DILocation(line: 858, column: 17, scope: !12707)
!12827 = !DILocation(line: 858, column: 23, scope: !12707)
!12828 = !DILocation(line: 858, column: 4, scope: !12707)
!12829 = !DILocation(line: 858, column: 15, scope: !12707)
!12830 = !DILocation(line: 860, column: 18, scope: !12707)
!12831 = !DILocation(line: 860, column: 31, scope: !12707)
!12832 = !DILocation(line: 860, column: 40, scope: !12707)
!12833 = !DILocation(line: 860, column: 38, scope: !12707)
!12834 = !DILocation(line: 860, column: 48, scope: !12707)
!12835 = !DILocation(line: 860, column: 2, scope: !12707)
!12836 = !DILocation(line: 866, column: 6, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12707, file: !3, line: 866, column: 6)
!12838 = !DILocation(line: 866, column: 10, scope: !12837)
!12839 = !DILocation(line: 866, column: 36, scope: !12837)
!12840 = !DILocation(line: 867, column: 9, scope: !12837)
!12841 = !DILocation(line: 867, column: 7, scope: !12837)
!12842 = !DILocation(line: 867, column: 19, scope: !12837)
!12843 = !DILocation(line: 867, column: 27, scope: !12837)
!12844 = !DILocation(line: 866, column: 6, scope: !12707)
!12845 = !DILocation(line: 868, column: 5, scope: !12837)
!12846 = !DILocation(line: 868, column: 9, scope: !12837)
!12847 = !DILocation(line: 868, column: 3, scope: !12837)
!12848 = !DILocation(line: 883, column: 6, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12707, file: !3, line: 883, column: 6)
!12850 = !DILocation(line: 883, column: 10, scope: !12849)
!12851 = !DILocation(line: 883, column: 6, scope: !12707)
!12852 = !DILocation(line: 884, column: 9, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12854, file: !3, line: 884, column: 7)
!12854 = distinct !DILexicalBlock(scope: !12849, file: !3, line: 883, column: 37)
!12855 = !DILocation(line: 884, column: 15, scope: !12853)
!12856 = !DILocation(line: 884, column: 22, scope: !12853)
!12857 = !DILocation(line: 884, column: 7, scope: !12854)
!12858 = !DILocation(line: 885, column: 34, scope: !12853)
!12859 = !DILocation(line: 885, column: 32, scope: !12853)
!12860 = !DILocation(line: 885, column: 44, scope: !12853)
!12861 = !DILocation(line: 885, column: 51, scope: !12853)
!12862 = !DILocation(line: 885, column: 4, scope: !12853)
!12863 = !DILocation(line: 885, column: 10, scope: !12853)
!12864 = !DILocation(line: 885, column: 29, scope: !12853)
!12865 = !DILocation(line: 886, column: 2, scope: !12854)
!12866 = !DILocation(line: 886, column: 13, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12849, file: !3, line: 886, column: 13)
!12868 = !DILocation(line: 886, column: 21, scope: !12867)
!12869 = !DILocation(line: 886, column: 27, scope: !12867)
!12870 = !DILocation(line: 886, column: 17, scope: !12867)
!12871 = !DILocation(line: 886, column: 13, scope: !12849)
!12872 = !DILocation(line: 887, column: 27, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12867, file: !3, line: 886, column: 43)
!12874 = !DILocation(line: 887, column: 33, scope: !12873)
!12875 = !DILocation(line: 887, column: 3, scope: !12873)
!12876 = !DILocation(line: 888, column: 2, scope: !12873)
!12877 = !DILocation(line: 889, column: 28, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12867, file: !3, line: 888, column: 9)
!12879 = !DILocation(line: 889, column: 34, scope: !12878)
!12880 = !DILocation(line: 889, column: 3, scope: !12878)
!12881 = !DILocation(line: 892, column: 9, scope: !12707)
!12882 = !DILocation(line: 892, column: 18, scope: !12707)
!12883 = !DILocation(line: 892, column: 16, scope: !12707)
!12884 = !DILocation(line: 892, column: 25, scope: !12707)
!12885 = !DILocation(line: 892, column: 2, scope: !12707)
!12886 = !DILocation(line: 893, column: 1, scope: !12707)
!12887 = distinct !DISubprogram(name: "writel", scope: !12888, file: !12888, line: 67, type: !12889, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12888 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!12889 = !DISubroutineType(types: !12890)
!12890 = !{null, !7, !12891}
!12891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10263, size: 64)
!12892 = !DILocalVariable(name: "val", arg: 1, scope: !12887, file: !12888, line: 67, type: !7)
!12893 = !DILocation(line: 67, column: 1, scope: !12887)
!12894 = !DILocalVariable(name: "addr", arg: 2, scope: !12887, file: !12888, line: 67, type: !12891)
!12895 = !{i32 -2142290550}
!12896 = distinct !DISubprogram(name: "readl", scope: !12888, file: !12888, line: 59, type: !12897, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12897 = !DISubroutineType(types: !12898)
!12898 = !{!7, !10261}
!12899 = !DILocalVariable(name: "addr", arg: 1, scope: !12896, file: !12888, line: 59, type: !10261)
!12900 = !DILocation(line: 59, column: 1, scope: !12896)
!12901 = !DILocalVariable(name: "ret", scope: !12896, file: !12888, line: 59, type: !7)
!12902 = !{i32 -2142292943}
!12903 = distinct !DISubprogram(name: "log_irqs", scope: !3, file: !3, line: 366, type: !12904, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12904 = !DISubroutineType(types: !12905)
!12905 = !{null, !187, !231}
!12906 = !DILocalVariable(name: "ohci", arg: 1, scope: !12903, file: !3, line: 366, type: !187)
!12907 = !DILocation(line: 366, column: 38, scope: !12903)
!12908 = !DILocalVariable(name: "evt", arg: 2, scope: !12903, file: !3, line: 366, type: !231)
!12909 = !DILocation(line: 366, column: 48, scope: !12903)
!12910 = !DILocation(line: 368, column: 6, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 368, column: 6)
!12912 = !DILocation(line: 368, column: 6, scope: !12903)
!12913 = !DILocation(line: 370, column: 3, scope: !12911)
!12914 = !DILocation(line: 372, column: 8, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 372, column: 6)
!12916 = !DILocation(line: 372, column: 20, scope: !12915)
!12917 = !DILocation(line: 372, column: 45, scope: !12915)
!12918 = !DILocation(line: 373, column: 8, scope: !12915)
!12919 = !DILocation(line: 373, column: 12, scope: !12915)
!12920 = !DILocation(line: 372, column: 6, scope: !12903)
!12921 = !DILocation(line: 374, column: 3, scope: !12915)
!12922 = !DILocation(line: 376, column: 2, scope: !12903)
!12923 = !DILocation(line: 399, column: 1, scope: !12903)
!12924 = distinct !DISubprogram(name: "queue_work", scope: !101, file: !101, line: 504, type: !12925, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12925 = !DISubroutineType(types: !12926)
!12926 = !{!240, !2696, !1939}
!12927 = !DILocalVariable(name: "wq", arg: 1, scope: !12924, file: !101, line: 504, type: !2696)
!12928 = !DILocation(line: 504, column: 56, scope: !12924)
!12929 = !DILocalVariable(name: "work", arg: 2, scope: !12924, file: !101, line: 505, type: !1939)
!12930 = !DILocation(line: 505, column: 30, scope: !12924)
!12931 = !DILocation(line: 507, column: 41, scope: !12924)
!12932 = !DILocation(line: 507, column: 45, scope: !12924)
!12933 = !DILocation(line: 507, column: 9, scope: !12924)
!12934 = !DILocation(line: 507, column: 2, scope: !12924)
!12935 = distinct !DISubprogram(name: "tasklet_schedule", scope: !152, file: !152, line: 681, type: !4051, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12936 = !DILocalVariable(name: "t", arg: 1, scope: !12935, file: !152, line: 681, type: !4038)
!12937 = !DILocation(line: 681, column: 60, scope: !12935)
!12938 = !DILocation(line: 683, column: 46, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12935, file: !152, line: 683, column: 6)
!12940 = !DILocation(line: 683, column: 49, scope: !12939)
!12941 = !DILocation(line: 683, column: 7, scope: !12939)
!12942 = !DILocation(line: 683, column: 6, scope: !12935)
!12943 = !DILocation(line: 684, column: 22, scope: !12939)
!12944 = !DILocation(line: 684, column: 3, scope: !12939)
!12945 = !DILocation(line: 685, column: 1, scope: !12935)
!12946 = distinct !DISubprogram(name: "handle_dead_contexts", scope: !3, file: !3, line: 1659, type: !12947, scopeLine: 1660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!12947 = !DISubroutineType(types: !12948)
!12948 = !{null, !187}
!12949 = !DILocalVariable(name: "ohci", arg: 1, scope: !12946, file: !3, line: 1659, type: !187)
!12950 = !DILocation(line: 1659, column: 50, scope: !12946)
!12951 = !DILocalVariable(name: "i", scope: !12946, file: !3, line: 1661, type: !7)
!12952 = !DILocation(line: 1661, column: 15, scope: !12946)
!12953 = !DILocalVariable(name: "name", scope: !12946, file: !3, line: 1662, type: !2377)
!12954 = !DILocation(line: 1662, column: 7, scope: !12946)
!12955 = !DILocation(line: 1664, column: 22, scope: !12946)
!12956 = !DILocation(line: 1664, column: 2, scope: !12946)
!12957 = !DILocation(line: 1665, column: 22, scope: !12946)
!12958 = !DILocation(line: 1665, column: 2, scope: !12946)
!12959 = !DILocation(line: 1666, column: 22, scope: !12946)
!12960 = !DILocation(line: 1666, column: 2, scope: !12946)
!12961 = !DILocation(line: 1667, column: 22, scope: !12946)
!12962 = !DILocation(line: 1667, column: 2, scope: !12946)
!12963 = !DILocation(line: 1668, column: 9, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 1668, column: 2)
!12965 = !DILocation(line: 1668, column: 7, scope: !12964)
!12966 = !DILocation(line: 1668, column: 14, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12964, file: !3, line: 1668, column: 2)
!12968 = !DILocation(line: 1668, column: 16, scope: !12967)
!12969 = !DILocation(line: 1668, column: 2, scope: !12964)
!12970 = !DILocation(line: 1669, column: 9, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12972, file: !3, line: 1669, column: 7)
!12972 = distinct !DILexicalBlock(scope: !12967, file: !3, line: 1668, column: 27)
!12973 = !DILocation(line: 1669, column: 15, scope: !12971)
!12974 = !DILocation(line: 1669, column: 42, scope: !12971)
!12975 = !DILocation(line: 1669, column: 39, scope: !12971)
!12976 = !DILocation(line: 1669, column: 34, scope: !12971)
!12977 = !DILocation(line: 1669, column: 7, scope: !12972)
!12978 = !DILocation(line: 1670, column: 4, scope: !12971)
!12979 = !DILocation(line: 1671, column: 11, scope: !12972)
!12980 = !DILocation(line: 1671, column: 25, scope: !12972)
!12981 = !DILocation(line: 1671, column: 3, scope: !12972)
!12982 = !DILocation(line: 1672, column: 23, scope: !12972)
!12983 = !DILocation(line: 1672, column: 29, scope: !12972)
!12984 = !DILocation(line: 1672, column: 35, scope: !12972)
!12985 = !DILocation(line: 1672, column: 3, scope: !12972)
!12986 = !DILocation(line: 1673, column: 2, scope: !12972)
!12987 = !DILocation(line: 1668, column: 22, scope: !12967)
!12988 = !DILocation(line: 1668, column: 2, scope: !12967)
!12989 = distinct !{!12989, !12969, !12990}
!12990 = !DILocation(line: 1673, column: 2, scope: !12964)
!12991 = !DILocation(line: 1674, column: 9, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 1674, column: 2)
!12993 = !DILocation(line: 1674, column: 7, scope: !12992)
!12994 = !DILocation(line: 1674, column: 14, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12992, file: !3, line: 1674, column: 2)
!12996 = !DILocation(line: 1674, column: 16, scope: !12995)
!12997 = !DILocation(line: 1674, column: 2, scope: !12992)
!12998 = !DILocation(line: 1675, column: 9, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !13000, file: !3, line: 1675, column: 7)
!13000 = distinct !DILexicalBlock(scope: !12995, file: !3, line: 1674, column: 27)
!13001 = !DILocation(line: 1675, column: 15, scope: !12999)
!13002 = !DILocation(line: 1675, column: 42, scope: !12999)
!13003 = !DILocation(line: 1675, column: 39, scope: !12999)
!13004 = !DILocation(line: 1675, column: 34, scope: !12999)
!13005 = !DILocation(line: 1675, column: 7, scope: !13000)
!13006 = !DILocation(line: 1676, column: 4, scope: !12999)
!13007 = !DILocation(line: 1677, column: 11, scope: !13000)
!13008 = !DILocation(line: 1677, column: 25, scope: !13000)
!13009 = !DILocation(line: 1677, column: 3, scope: !13000)
!13010 = !DILocation(line: 1678, column: 23, scope: !13000)
!13011 = !DILocation(line: 1678, column: 29, scope: !13000)
!13012 = !DILocation(line: 1678, column: 35, scope: !13000)
!13013 = !DILocation(line: 1678, column: 3, scope: !13000)
!13014 = !DILocation(line: 1679, column: 2, scope: !13000)
!13015 = !DILocation(line: 1674, column: 22, scope: !12995)
!13016 = !DILocation(line: 1674, column: 2, scope: !12995)
!13017 = distinct !{!13017, !12997, !13018}
!13018 = !DILocation(line: 1679, column: 2, scope: !12992)
!13019 = !DILocation(line: 1681, column: 1, scope: !12946)
!13020 = distinct !DISubprogram(name: "test_and_set_bit", scope: !13021, file: !13021, line: 68, type: !11606, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!13021 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!13022 = !DILocation(line: 136, column: 28, scope: !11611, inlinedAt: !13023)
!13023 = distinct !DILocation(line: 71, column: 9, scope: !13020)
!13024 = !DILocation(line: 136, column: 56, scope: !11611, inlinedAt: !13023)
!13025 = !DILocation(line: 138, column: 9, scope: !11619, inlinedAt: !13023)
!13026 = !DILocation(line: 99, column: 79, scope: !10257, inlinedAt: !13027)
!13027 = distinct !DILocation(line: 70, column: 2, scope: !13020)
!13028 = !DILocation(line: 99, column: 89, scope: !10257, inlinedAt: !13027)
!13029 = !DILocalVariable(name: "nr", arg: 1, scope: !13020, file: !13021, line: 68, type: !102)
!13030 = !DILocation(line: 68, column: 42, scope: !13020)
!13031 = !DILocalVariable(name: "addr", arg: 2, scope: !13020, file: !13021, line: 68, type: !11608)
!13032 = !DILocation(line: 68, column: 70, scope: !13020)
!13033 = !DILocation(line: 70, column: 31, scope: !13020)
!13034 = !DILocation(line: 70, column: 38, scope: !13020)
!13035 = !DILocation(line: 70, column: 36, scope: !13020)
!13036 = !DILocation(line: 101, column: 20, scope: !10257, inlinedAt: !13027)
!13037 = !DILocation(line: 101, column: 23, scope: !10257, inlinedAt: !13027)
!13038 = !DILocation(line: 101, column: 2, scope: !10257, inlinedAt: !13027)
!13039 = !DILocation(line: 102, column: 2, scope: !10257, inlinedAt: !13027)
!13040 = !DILocation(line: 71, column: 31, scope: !13020)
!13041 = !DILocation(line: 71, column: 35, scope: !13020)
!13042 = !DILocation(line: 71, column: 2, scope: !13020)
!13043 = distinct !DISubprogram(name: "detect_dead_context", scope: !3, file: !3, line: 1648, type: !13044, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!13044 = !DISubroutineType(types: !13045)
!13045 = !{null, !187, !481, !7}
!13046 = !DILocalVariable(name: "ohci", arg: 1, scope: !13043, file: !3, line: 1648, type: !187)
!13047 = !DILocation(line: 1648, column: 49, scope: !13043)
!13048 = !DILocalVariable(name: "name", arg: 2, scope: !13043, file: !3, line: 1649, type: !481)
!13049 = !DILocation(line: 1649, column: 17, scope: !13043)
!13050 = !DILocalVariable(name: "regs", arg: 3, scope: !13043, file: !3, line: 1649, type: !7)
!13051 = !DILocation(line: 1649, column: 36, scope: !13043)
!13052 = !DILocalVariable(name: "ctl", scope: !13043, file: !3, line: 1651, type: !231)
!13053 = !DILocation(line: 1651, column: 6, scope: !13043)
!13054 = !DILocation(line: 1653, column: 17, scope: !13043)
!13055 = !DILocation(line: 1653, column: 23, scope: !13043)
!13056 = !DILocation(line: 1653, column: 8, scope: !13043)
!13057 = !DILocation(line: 1653, column: 6, scope: !13043)
!13058 = !DILocation(line: 1654, column: 6, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13043, file: !3, line: 1654, column: 6)
!13060 = !DILocation(line: 1654, column: 10, scope: !13059)
!13061 = !DILocation(line: 1654, column: 6, scope: !13043)
!13062 = !DILocation(line: 1655, column: 3, scope: !13059)
!13063 = !DILocation(line: 1657, column: 1, scope: !13043)
!13064 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !4140, file: !4140, line: 1865, type: !13065, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!13065 = !DISubroutineType(types: !13066)
!13066 = !{!175, !4298}
!13067 = !DILocalVariable(name: "pdev", arg: 1, scope: !13064, file: !4140, line: 1865, type: !4298)
!13068 = !DILocation(line: 1865, column: 53, scope: !13064)
!13069 = !DILocation(line: 1867, column: 26, scope: !13064)
!13070 = !DILocation(line: 1867, column: 32, scope: !13064)
!13071 = !DILocation(line: 1867, column: 9, scope: !13064)
!13072 = !DILocation(line: 1867, column: 2, scope: !13064)
!13073 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !13074, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!13074 = !DISubroutineType(types: !13075)
!13075 = !{!175, !3820}
!13076 = !DILocalVariable(name: "dev", arg: 1, scope: !13073, file: !73, line: 655, type: !3820)
!13077 = !DILocation(line: 655, column: 58, scope: !13073)
!13078 = !DILocation(line: 657, column: 9, scope: !13073)
!13079 = !DILocation(line: 657, column: 14, scope: !13073)
!13080 = !DILocation(line: 657, column: 2, scope: !13073)
!13081 = distinct !DISubprogram(name: "ohci_resume_iso_dma", scope: !3, file: !3, line: 3169, type: !12947, scopeLine: 3170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !458)
!13082 = !DILocalVariable(name: "ohci", arg: 1, scope: !13081, file: !3, line: 3169, type: !187)
!13083 = !DILocation(line: 3169, column: 49, scope: !13081)
!13084 = !DILocalVariable(name: "i", scope: !13081, file: !3, line: 3171, type: !177)
!13085 = !DILocation(line: 3171, column: 6, scope: !13081)
!13086 = !DILocalVariable(name: "ctx", scope: !13081, file: !3, line: 3172, type: !4089)
!13087 = !DILocation(line: 3172, column: 22, scope: !13081)
!13088 = !DILocation(line: 3174, column: 9, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13081, file: !3, line: 3174, column: 2)
!13090 = !DILocation(line: 3174, column: 7, scope: !13089)
!13091 = !DILocation(line: 3174, column: 15, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13089, file: !3, line: 3174, column: 2)
!13093 = !DILocation(line: 3174, column: 19, scope: !13092)
!13094 = !DILocation(line: 3174, column: 25, scope: !13092)
!13095 = !DILocation(line: 3174, column: 17, scope: !13092)
!13096 = !DILocation(line: 3174, column: 2, scope: !13089)
!13097 = !DILocation(line: 3175, column: 10, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13092, file: !3, line: 3174, column: 37)
!13099 = !DILocation(line: 3175, column: 16, scope: !13098)
!13100 = !DILocation(line: 3175, column: 32, scope: !13098)
!13101 = !DILocation(line: 3175, column: 7, scope: !13098)
!13102 = !DILocation(line: 3176, column: 7, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 3176, column: 7)
!13104 = !DILocation(line: 3176, column: 12, scope: !13103)
!13105 = !DILocation(line: 3176, column: 20, scope: !13103)
!13106 = !DILocation(line: 3176, column: 7, scope: !13098)
!13107 = !DILocation(line: 3177, column: 20, scope: !13103)
!13108 = !DILocation(line: 3177, column: 25, scope: !13103)
!13109 = !DILocation(line: 3177, column: 34, scope: !13103)
!13110 = !DILocation(line: 3177, column: 39, scope: !13103)
!13111 = !DILocation(line: 3177, column: 45, scope: !13103)
!13112 = !DILocation(line: 3177, column: 50, scope: !13103)
!13113 = !DILocation(line: 3177, column: 4, scope: !13103)
!13114 = !DILocation(line: 3178, column: 2, scope: !13098)
!13115 = !DILocation(line: 3174, column: 33, scope: !13092)
!13116 = !DILocation(line: 3174, column: 2, scope: !13092)
!13117 = distinct !{!13117, !13096, !13118}
!13118 = !DILocation(line: 3178, column: 2, scope: !13089)
!13119 = !DILocation(line: 3180, column: 9, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13081, file: !3, line: 3180, column: 2)
!13121 = !DILocation(line: 3180, column: 7, scope: !13120)
!13122 = !DILocation(line: 3180, column: 15, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13120, file: !3, line: 3180, column: 2)
!13124 = !DILocation(line: 3180, column: 19, scope: !13123)
!13125 = !DILocation(line: 3180, column: 25, scope: !13123)
!13126 = !DILocation(line: 3180, column: 17, scope: !13123)
!13127 = !DILocation(line: 3180, column: 2, scope: !13120)
!13128 = !DILocation(line: 3181, column: 10, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 3180, column: 37)
!13130 = !DILocation(line: 3181, column: 16, scope: !13129)
!13131 = !DILocation(line: 3181, column: 32, scope: !13129)
!13132 = !DILocation(line: 3181, column: 7, scope: !13129)
!13133 = !DILocation(line: 3182, column: 7, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13129, file: !3, line: 3182, column: 7)
!13135 = !DILocation(line: 3182, column: 12, scope: !13134)
!13136 = !DILocation(line: 3182, column: 20, scope: !13134)
!13137 = !DILocation(line: 3182, column: 7, scope: !13129)
!13138 = !DILocation(line: 3183, column: 20, scope: !13134)
!13139 = !DILocation(line: 3183, column: 25, scope: !13134)
!13140 = !DILocation(line: 3183, column: 34, scope: !13134)
!13141 = !DILocation(line: 3183, column: 39, scope: !13134)
!13142 = !DILocation(line: 3183, column: 45, scope: !13134)
!13143 = !DILocation(line: 3183, column: 50, scope: !13134)
!13144 = !DILocation(line: 3183, column: 4, scope: !13134)
!13145 = !DILocation(line: 3184, column: 2, scope: !13129)
!13146 = !DILocation(line: 3180, column: 33, scope: !13123)
!13147 = !DILocation(line: 3180, column: 2, scope: !13123)
!13148 = distinct !{!13148, !13127, !13149}
!13149 = !DILocation(line: 3184, column: 2, scope: !13120)
!13150 = !DILocation(line: 3185, column: 1, scope: !13081)
